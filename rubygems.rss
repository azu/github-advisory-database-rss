<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2024-03-03T15:01:33.465Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[actionpack] Rails has possible ReDoS vulnerability in Accept header parsing in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-jjhx-jhvp-74wq</id>
        <link href="https://github.com/advisories/GHSA-jjhx-jhvp-74wq"/>
        <updated>2024-03-01T23:30:39.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-redos-vulnerability-in-accept-header-parsing-in-action-dispatch">Possible ReDoS vulnerability in Accept header parsing in Action Dispatch</h1>
<p>There is a possible ReDoS vulnerability in the Accept header parsing routines
of Action Dispatch. This vulnerability has been assigned the CVE identifier
CVE-2024-26142.</p>
<p>Versions Affected:  &gt;= 7.1.0, &lt; 7.1.3.1
Not affected:       &lt; 7.1.0
Fixed Versions:     7.1.3.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted Accept headers can cause Accept header parsing in Action
Dispatch to take an unexpected amount of time, possibly resulting in a DoS
vulnerability.  All users running an affected release should either upgrade or
use one of the workarounds immediately.</p>
<p>Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby
3.2 or newer are unaffected.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-1-accept-redox.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks <a href="https://hackerone.com/svalkanov">svalkanov</a> for the report and patch!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-jjhx-jhvp-74wq">https://github.com/rails/rails/security/advisories/GHSA-jjhx-jhvp-74wq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26142">https://nvd.nist.gov/vuln/detail/CVE-2024-26142</a></li>
<li><a href="https://github.com/rails/rails/commit/b4d3bfb5ed8a5b5a90aad3a3b28860c7a931e272">https://github.com/rails/rails/commit/b4d3bfb5ed8a5b5a90aad3a3b28860c7a931e272</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-redos-vulnerability-in-accept-header-parsing-in-action-dispatch/84946">https://discuss.rubyonrails.org/t/possible-redos-vulnerability-in-accept-header-parsing-in-action-dispatch/84946</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26142.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26142.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-jjhx-jhvp-74wq">https://github.com/advisories/GHSA-jjhx-jhvp-74wq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjhx-jhvp-74wq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-27T21:41:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-01T23:29:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-01T23:29:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activestorage] Rails has possible Sensitive Session Information Leak in Active Storage]]></title>
        <id>https://github.com/advisories/GHSA-8h22-8cf7-hq6g</id>
        <link href="https://github.com/advisories/GHSA-8h22-8cf7-hq6g"/>
        <updated>2024-03-01T23:28:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-sensitive-session-information-leak-in-active-storage">Possible Sensitive Session Information Leak in Active Storage</h1>
<p>There is a possible sensitive session information leak in Active Storage.  By
default, Active Storage sends a <code>Set-Cookie</code> header along with the user's
session cookie when serving blobs.  It also sets <code>Cache-Control</code> to public.
Certain proxies may cache the Set-Cookie, leading to an information leak.</p>
<p>This vulnerability has been assigned the CVE identifier CVE-2024-26144.</p>
<p>Versions Affected:  &gt;= 5.2.0, &lt; 7.1.0
Not affected:       &lt; 5.2.0, &gt; 7.1.0
Fixed Versions:     7.0.8.1, 6.1.7.7</p>
<h2 id="impact">Impact</h2>
<p>A proxy which chooses to caches this request can cause users to share
sessions. This may include a user receiving an attacker's session or vice
versa.</p>
<p>This was patched in 7.1.0 but not previously identified as a security
vulnerability.</p>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Upgrade to Rails 7.1.X, or configure caching proxies not to cache the
Set-Cookie headers.</p>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/tyage">tyage</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g">https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26144">https://nvd.nist.gov/vuln/detail/CVE-2024-26144</a></li>
<li><a href="https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433">https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433</a></li>
<li><a href="https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3">https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945">https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26144.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26144.yml</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-8h22-8cf7-hq6g">https://github.com/advisories/GHSA-8h22-8cf7-hq6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8h22-8cf7-hq6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activestorage] Rails has possible Sensitive Session Information Leak in Active Storage]]></title>
        <id>https://github.com/advisories/GHSA-8h22-8cf7-hq6g</id>
        <link href="https://github.com/advisories/GHSA-8h22-8cf7-hq6g"/>
        <updated>2024-03-01T23:28:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-sensitive-session-information-leak-in-active-storage">Possible Sensitive Session Information Leak in Active Storage</h1>
<p>There is a possible sensitive session information leak in Active Storage.  By
default, Active Storage sends a <code>Set-Cookie</code> header along with the user's
session cookie when serving blobs.  It also sets <code>Cache-Control</code> to public.
Certain proxies may cache the Set-Cookie, leading to an information leak.</p>
<p>This vulnerability has been assigned the CVE identifier CVE-2024-26144.</p>
<p>Versions Affected:  &gt;= 5.2.0, &lt; 7.1.0
Not affected:       &lt; 5.2.0, &gt; 7.1.0
Fixed Versions:     7.0.8.1, 6.1.7.7</p>
<h2 id="impact">Impact</h2>
<p>A proxy which chooses to caches this request can cause users to share
sessions. This may include a user receiving an attacker's session or vice
versa.</p>
<p>This was patched in 7.1.0 but not previously identified as a security
vulnerability.</p>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Upgrade to Rails 7.1.X, or configure caching proxies not to cache the
Set-Cookie headers.</p>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/tyage">tyage</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g">https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26144">https://nvd.nist.gov/vuln/detail/CVE-2024-26144</a></li>
<li><a href="https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433">https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433</a></li>
<li><a href="https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3">https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945">https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26144.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26144.yml</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-8h22-8cf7-hq6g">https://github.com/advisories/GHSA-8h22-8cf7-hq6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8h22-8cf7-hq6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack-cors] Rack CORS Middleware has Insecure File Permissions]]></title>
        <id>https://github.com/advisories/GHSA-785g-282q-pwvx</id>
        <link href="https://github.com/advisories/GHSA-785g-282q-pwvx"/>
        <updated>2024-03-01T20:37:34.000Z</updated>
        <content type="html"><![CDATA[<p>rack-cors (aka Rack CORS Middleware) 2.0.1 has 0666 permissions for the .rb files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27456">https://nvd.nist.gov/vuln/detail/CVE-2024-27456</a></li>
<li><a href="https://github.com/cyu/rack-cors/issues/274">https://github.com/cyu/rack-cors/issues/274</a></li>
<li><a href="https://github.com/advisories/GHSA-785g-282q-pwvx">https://github.com/advisories/GHSA-785g-282q-pwvx</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-cors/CVE-2024-27456.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-cors/CVE-2024-27456.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-785g-282q-pwvx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-26T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json-jwt] json-jwt allows bypass of identity checks via a sign/encryption confusion attack]]></title>
        <id>https://github.com/advisories/GHSA-c8v6-786g-vjx6</id>
        <link href="https://github.com/advisories/GHSA-c8v6-786g-vjx6"/>
        <updated>2024-03-01T16:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>The json-jwt (aka JSON::JWT) gem 1.16.3 for Ruby sometimes allows bypass of identity checks via a sign/encryption confusion attack. For example, JWE can sometimes be used to bypass JSON::JWT.decode.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51774">https://nvd.nist.gov/vuln/detail/CVE-2023-51774</a></li>
<li><a href="https://github.com/P3ngu1nW/CVE_Request/blob/main/novjson-jwt.md">https://github.com/P3ngu1nW/CVE_Request/blob/main/novjson-jwt.md</a></li>
<li><a href="https://github.com/advisories/GHSA-c8v6-786g-vjx6">https://github.com/advisories/GHSA-c8v6-786g-vjx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8v6-786g-vjx6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-29T03:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yard] YARD's default template vulnerable to Cross-site Scripting in generated frames.html]]></title>
        <id>https://github.com/advisories/GHSA-8mq4-9jjh-9xrc</id>
        <link href="https://github.com/advisories/GHSA-8mq4-9jjh-9xrc"/>
        <updated>2024-03-01T16:47:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The "frames.html" file within the Yard Doc's generated documentation is vulnerable to Cross-Site Scripting (XSS) attacks due to inadequate sanitization of user input within the JavaScript segment of the "frames.erb" template file.</p>
<h3 id="details">Details</h3>
<p>The vulnerability stems from mishandling user-controlled data retrieved from the URL hash in the embedded JavaScript code within the "frames.erb" template file. Specifically, the script lacks proper sanitization of the hash data before utilizing it to establish the top-level window's location. This oversight permits an attacker to inject malicious JavaScript payloads through carefully crafted URLs.</p>
<p>Snippet from "frames.erb":
(v0.9.34)</p>
<pre><code class="language-erb">&lt;script type="text/javascript"&gt;
  var match = unescape(window.location.hash).match(/^#!(.+)/);
  var name = match ? match[1] : '&lt;%= url_for_main %&gt;';
  name = name.replace(/^(\w+):\/\//, '').replace(/^\/\//, '');
  window.top.location = name;
&lt;/script&gt;
</code></pre>
<p>(v0.9.35)</p>
<pre><code class="language-erb">&lt;script type="text/javascript"&gt;
  var match = decodeURIComponent(window.location.hash).match(/^#!(.+)/);
  var name = match ? match[1] : '&lt;%= url_for_main %&gt;';
  name = name.replace(/^((\w*):)?[\/\\]*/gm, '').trim();
  window.top.location.replace(name)
&lt;/script&gt;
</code></pre>
<h3 id="poc-proof-of-concept">PoC (Proof of Concept)</h3>
<p>To exploit this vulnerability:</p>
<ol>
<li>Gain access to the generated Yard Doc.</li>
<li>Locate and access the "frames.html" file.</li>
<li>Construct a URL containing the malicious payload in the hash segment, for instance: <code>#!javascript:xss</code> for v0.9.34, and <code>#:javascript:xss</code> for v0.9.35</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This XSS vulnerability presents a substantial threat by enabling an attacker to execute arbitrary JavaScript code within the user's session context. Potential ramifications include session hijacking, theft of sensitive data, unauthorized access to user accounts, and defacement of websites. Any user visiting the compromised page is susceptible to exploitation. It is critical to promptly address this vulnerability to mitigate potential harm to users and preserve the application's integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lsegal/yard/security/advisories/GHSA-8mq4-9jjh-9xrc">https://github.com/lsegal/yard/security/advisories/GHSA-8mq4-9jjh-9xrc</a></li>
<li><a href="https://github.com/lsegal/yard/commit/2069e2bf08293bda2fcc78f7d0698af6354054be">https://github.com/lsegal/yard/commit/2069e2bf08293bda2fcc78f7d0698af6354054be</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27285">https://nvd.nist.gov/vuln/detail/CVE-2024-27285</a></li>
<li><a href="https://github.com/advisories/GHSA-8mq4-9jjh-9xrc">https://github.com/advisories/GHSA-8mq4-9jjh-9xrc</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/yard/CVE-2024-27285.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/yard/CVE-2024-27285.yml</a></li>
<li><a href="https://github.com/lsegal/yard/pull/1538">https://github.com/lsegal/yard/pull/1538</a></li>
<li><a href="https://github.com/lsegal/yard/commit/1fcb2d8b316caf8779cfdcf910715e9ab583f0aa">https://github.com/lsegal/yard/commit/1fcb2d8b316caf8779cfdcf910715e9ab583f0aa</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8mq4-9jjh-9xrc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T18:57:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sisimai] Sisimai Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vm74-j4wq-82xj</id>
        <link href="https://github.com/advisories/GHSA-vm74-j4wq-82xj"/>
        <updated>2024-03-01T14:28:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in Sisimai up to 4.25.14p11 and classified as problematic. This vulnerability affects the function <code>to_plain</code> of the file <code>lib/sisimai/string.rb</code>. The manipulation leads to inefficient regular expression complexity. The exploit has been disclosed to the public and may be used. Upgrading to version 4.25.14p12 is able to address this issue. The name of the patch is 51fe2e6521c9c02b421b383943dc9e4bbbe65d4e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218452.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4891">https://nvd.nist.gov/vuln/detail/CVE-2022-4891</a></li>
<li><a href="https://github.com/sisimai/rb-sisimai/pull/244">https://github.com/sisimai/rb-sisimai/pull/244</a></li>
<li><a href="https://github.com/sisimai/rb-sisimai/commit/51fe2e6521c9c02b421b383943dc9e4bbbe65d4e">https://github.com/sisimai/rb-sisimai/commit/51fe2e6521c9c02b421b383943dc9e4bbbe65d4e</a></li>
<li><a href="https://gist.githubusercontent.com/gmcabrita/e5dc0332473fc2e3a7a407434c8d21c7/raw/00b12035e5e1b685469f143b94301a50306376ba/example.html">https://gist.githubusercontent.com/gmcabrita/e5dc0332473fc2e3a7a407434c8d21c7/raw/00b12035e5e1b685469f143b94301a50306376ba/example.html</a></li>
<li><a href="https://github.com/sisimai/rb-sisimai/releases/tag/v4.25.14p12">https://github.com/sisimai/rb-sisimai/releases/tag/v4.25.14p12</a></li>
<li><a href="https://vuldb.com/?ctiid.218452">https://vuldb.com/?ctiid.218452</a></li>
<li><a href="https://vuldb.com/?id.218452">https://vuldb.com/?id.218452</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sisimai/CVE-2022-4891.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sisimai/CVE-2022-4891.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vm74-j4wq-82xj">https://github.com/advisories/GHSA-vm74-j4wq-82xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vm74-j4wq-82xj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-17T21:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oxidized-web] Oxidized Web vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-8qwh-rm6c-jv96</id>
        <link href="https://github.com/advisories/GHSA-8qwh-rm6c-jv96"/>
        <updated>2024-03-01T14:22:23.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in ytti Oxidized Web. It has been classified as problematic. Affected is an unknown function of the file <code>lib/oxidized/web/views/conf_search.haml</code>. The manipulation of the argument <code>to_research</code> leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 55ab9bdc68b03ebce9280b8746ef31d7fdedcc45. It is recommended to apply a patch to fix this issue. VDB-216870 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25088">https://nvd.nist.gov/vuln/detail/CVE-2019-25088</a></li>
<li><a href="https://github.com/ytti/oxidized-web/pull/195">https://github.com/ytti/oxidized-web/pull/195</a></li>
<li><a href="https://github.com/ytti/oxidized-web/commit/55ab9bdc68b03ebce9280b8746ef31d7fdedcc45">https://github.com/ytti/oxidized-web/commit/55ab9bdc68b03ebce9280b8746ef31d7fdedcc45</a></li>
<li><a href="https://vuldb.com/?ctiid.216870">https://vuldb.com/?ctiid.216870</a></li>
<li><a href="https://vuldb.com/?id.216870">https://vuldb.com/?id.216870</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/oxidized-web/CVE-2019-25088.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/oxidized-web/CVE-2019-25088.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-8qwh-rm6c-jv96">https://github.com/advisories/GHSA-8qwh-rm6c-jv96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qwh-rm6c-jv96</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-27T12:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack vulnerable to ReDoS in content type parsing (2nd degree polynomial)]]></title>
        <id>https://github.com/advisories/GHSA-22f2-v57c-j9cx</id>
        <link href="https://github.com/advisories/GHSA-22f2-v57c-j9cx"/>
        <updated>2024-02-29T02:30:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<pre><code class="language-ruby">module Rack
  class MediaType
    SPLIT_PATTERN = %r{\s*[;,]\s*}
</code></pre>
<p>The above regexp is subject to ReDos. 50K blank characters as a prefix to the header will take over 10s to split.</p>
<h3 id="poc">PoC</h3>
<p>A simple HTTP request with lots of blank characters in the content-type header:</p>
<pre><code class="language-ruby">request["Content-Type"] = (" " * 50_000) + "a,"
</code></pre>
<h3 id="impact">Impact</h3>
<p>It's a very easy to craft ReDoS. Like all ReDoS the impact is debatable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-22f2-v57c-j9cx">https://github.com/rack/rack/security/advisories/GHSA-22f2-v57c-j9cx</a></li>
<li><a href="https://github.com/rack/rack/commit/6efb2ceea003c4b195815a614e00438cbd543462">https://github.com/rack/rack/commit/6efb2ceea003c4b195815a614e00438cbd543462</a></li>
<li><a href="https://github.com/rack/rack/commit/d9c163a443b8cadf4711d84bd2c58cb9ef89cf49">https://github.com/rack/rack/commit/d9c163a443b8cadf4711d84bd2c58cb9ef89cf49</a></li>
<li><a href="https://discuss.rubyonrails.org/t/denial-of-service-vulnerability-in-rack-content-type-parsing/84941">https://discuss.rubyonrails.org/t/denial-of-service-vulnerability-in-rack-content-type-parsing/84941</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-25126.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-25126.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25126">https://nvd.nist.gov/vuln/detail/CVE-2024-25126</a></li>
<li><a href="https://github.com/advisories/GHSA-22f2-v57c-j9cx">https://github.com/advisories/GHSA-22f2-v57c-j9cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22f2-v57c-j9cx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack vulnerable to ReDoS in content type parsing (2nd degree polynomial)]]></title>
        <id>https://github.com/advisories/GHSA-22f2-v57c-j9cx</id>
        <link href="https://github.com/advisories/GHSA-22f2-v57c-j9cx"/>
        <updated>2024-02-29T02:30:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<pre><code class="language-ruby">module Rack
  class MediaType
    SPLIT_PATTERN = %r{\s*[;,]\s*}
</code></pre>
<p>The above regexp is subject to ReDos. 50K blank characters as a prefix to the header will take over 10s to split.</p>
<h3 id="poc">PoC</h3>
<p>A simple HTTP request with lots of blank characters in the content-type header:</p>
<pre><code class="language-ruby">request["Content-Type"] = (" " * 50_000) + "a,"
</code></pre>
<h3 id="impact">Impact</h3>
<p>It's a very easy to craft ReDoS. Like all ReDoS the impact is debatable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-22f2-v57c-j9cx">https://github.com/rack/rack/security/advisories/GHSA-22f2-v57c-j9cx</a></li>
<li><a href="https://github.com/rack/rack/commit/6efb2ceea003c4b195815a614e00438cbd543462">https://github.com/rack/rack/commit/6efb2ceea003c4b195815a614e00438cbd543462</a></li>
<li><a href="https://github.com/rack/rack/commit/d9c163a443b8cadf4711d84bd2c58cb9ef89cf49">https://github.com/rack/rack/commit/d9c163a443b8cadf4711d84bd2c58cb9ef89cf49</a></li>
<li><a href="https://discuss.rubyonrails.org/t/denial-of-service-vulnerability-in-rack-content-type-parsing/84941">https://discuss.rubyonrails.org/t/denial-of-service-vulnerability-in-rack-content-type-parsing/84941</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-25126.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-25126.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25126">https://nvd.nist.gov/vuln/detail/CVE-2024-25126</a></li>
<li><a href="https://github.com/advisories/GHSA-22f2-v57c-j9cx">https://github.com/advisories/GHSA-22f2-v57c-j9cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22f2-v57c-j9cx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack has possible DoS Vulnerability with Range Header]]></title>
        <id>https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</id>
        <link href="https://github.com/advisories/GHSA-xj5v-6v4g-jfw6"/>
        <updated>2024-02-29T02:30:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-dos-vulnerability-with-range-header-in-rack">Possible DoS Vulnerability with Range Header in Rack</h1>
<p>There is a possible DoS vulnerability relating to the Range request header in
Rack.  This vulnerability has been assigned the CVE identifier CVE-2024-26141.</p>
<p>Versions Affected:  &gt;= 1.3.0.
Not affected:       &lt; 1.3.0
Fixed Versions:     3.0.9.1, 2.2.8.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted Range headers can cause a server to respond with an
unexpectedly large response. Responding with such large responses could lead
to a denial of service issue.</p>
<p>Vulnerable applications will use the <code>Rack::File</code> middleware or the
<code>Rack::Utils.byte_ranges</code> methods (this includes Rails applications).</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>3-0-range.patch - Patch for 3.0 series</li>
<li>2-2-range.patch - Patch for 2.2 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the report and
patch</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-xj5v-6v4g-jfw6">https://github.com/rack/rack/security/advisories/GHSA-xj5v-6v4g-jfw6</a></li>
<li><a href="https://github.com/rack/rack/commit/4849132bef471adb21131980df745f4bb84de2d9">https://github.com/rack/rack/commit/4849132bef471adb21131980df745f4bb84de2d9</a></li>
<li><a href="https://github.com/rack/rack/commit/62457686b26d33a15a254c7768c2076e8e02b48b">https://github.com/rack/rack/commit/62457686b26d33a15a254c7768c2076e8e02b48b</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-dos-vulnerability-with-range-header-in-rack/84944">https://discuss.rubyonrails.org/t/possible-dos-vulnerability-with-range-header-in-rack/84944</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26141.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26141.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26141">https://nvd.nist.gov/vuln/detail/CVE-2024-26141</a></li>
<li><a href="https://github.com/advisories/GHSA-xj5v-6v4g-jfw6">https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack has possible DoS Vulnerability with Range Header]]></title>
        <id>https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</id>
        <link href="https://github.com/advisories/GHSA-xj5v-6v4g-jfw6"/>
        <updated>2024-02-29T02:30:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-dos-vulnerability-with-range-header-in-rack">Possible DoS Vulnerability with Range Header in Rack</h1>
<p>There is a possible DoS vulnerability relating to the Range request header in
Rack.  This vulnerability has been assigned the CVE identifier CVE-2024-26141.</p>
<p>Versions Affected:  &gt;= 1.3.0.
Not affected:       &lt; 1.3.0
Fixed Versions:     3.0.9.1, 2.2.8.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted Range headers can cause a server to respond with an
unexpectedly large response. Responding with such large responses could lead
to a denial of service issue.</p>
<p>Vulnerable applications will use the <code>Rack::File</code> middleware or the
<code>Rack::Utils.byte_ranges</code> methods (this includes Rails applications).</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>3-0-range.patch - Patch for 3.0 series</li>
<li>2-2-range.patch - Patch for 2.2 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the report and
patch</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-xj5v-6v4g-jfw6">https://github.com/rack/rack/security/advisories/GHSA-xj5v-6v4g-jfw6</a></li>
<li><a href="https://github.com/rack/rack/commit/4849132bef471adb21131980df745f4bb84de2d9">https://github.com/rack/rack/commit/4849132bef471adb21131980df745f4bb84de2d9</a></li>
<li><a href="https://github.com/rack/rack/commit/62457686b26d33a15a254c7768c2076e8e02b48b">https://github.com/rack/rack/commit/62457686b26d33a15a254c7768c2076e8e02b48b</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-dos-vulnerability-with-range-header-in-rack/84944">https://discuss.rubyonrails.org/t/possible-dos-vulnerability-with-range-header-in-rack/84944</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26141.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26141.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26141">https://nvd.nist.gov/vuln/detail/CVE-2024-26141</a></li>
<li><a href="https://github.com/advisories/GHSA-xj5v-6v4g-jfw6">https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj5v-6v4g-jfw6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack Header Parsing leads to Possible Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</id>
        <link href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f"/>
        <updated>2024-02-29T02:30:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-denial-of-service-vulnerability-in-rack-header-parsing">Possible Denial of Service Vulnerability in Rack Header Parsing</h1>
<p>There is a possible denial of service vulnerability in the header parsing
routines in Rack.  This vulnerability has been assigned the CVE identifier
CVE-2024-26146.</p>
<p>Versions Affected:  All.
Not affected:       None
Fixed Versions:     2.0.9.4, 2.1.4.4, 2.2.8.1, 3.0.9.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted headers can cause header parsing in Rack to take longer than
expected resulting in a possible denial of service issue. Accept and Forwarded
headers are impacted.</p>
<p>Ruby 3.2 has mitigations for this problem, so Rack applications using Ruby 3.2
or newer are unaffected.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>2-0-header-redos.patch - Patch for 2.0 series</li>
<li>2-1-header-redos.patch - Patch for 2.1 series</li>
<li>2-2-header-redos.patch - Patch for 2.2 series</li>
<li>3-0-header-redos.patch - Patch for 3.0 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/svalkanov">svalkanov</a> for reporting this and
providing patches!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a></li>
<li><a href="https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716">https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716</a></li>
<li><a href="https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582">https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582</a></li>
<li><a href="https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f">https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f</a></li>
<li><a href="https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd">https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942">https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26146">https://nvd.nist.gov/vuln/detail/CVE-2024-26146</a></li>
<li><a href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/advisories/GHSA-54rr-7fvw-6x8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack Header Parsing leads to Possible Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</id>
        <link href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f"/>
        <updated>2024-02-29T02:30:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-denial-of-service-vulnerability-in-rack-header-parsing">Possible Denial of Service Vulnerability in Rack Header Parsing</h1>
<p>There is a possible denial of service vulnerability in the header parsing
routines in Rack.  This vulnerability has been assigned the CVE identifier
CVE-2024-26146.</p>
<p>Versions Affected:  All.
Not affected:       None
Fixed Versions:     2.0.9.4, 2.1.4.4, 2.2.8.1, 3.0.9.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted headers can cause header parsing in Rack to take longer than
expected resulting in a possible denial of service issue. Accept and Forwarded
headers are impacted.</p>
<p>Ruby 3.2 has mitigations for this problem, so Rack applications using Ruby 3.2
or newer are unaffected.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>2-0-header-redos.patch - Patch for 2.0 series</li>
<li>2-1-header-redos.patch - Patch for 2.1 series</li>
<li>2-2-header-redos.patch - Patch for 2.2 series</li>
<li>3-0-header-redos.patch - Patch for 3.0 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/svalkanov">svalkanov</a> for reporting this and
providing patches!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a></li>
<li><a href="https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716">https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716</a></li>
<li><a href="https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582">https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582</a></li>
<li><a href="https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f">https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f</a></li>
<li><a href="https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd">https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942">https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26146">https://nvd.nist.gov/vuln/detail/CVE-2024-26146</a></li>
<li><a href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/advisories/GHSA-54rr-7fvw-6x8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack Header Parsing leads to Possible Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</id>
        <link href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f"/>
        <updated>2024-02-29T02:30:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-denial-of-service-vulnerability-in-rack-header-parsing">Possible Denial of Service Vulnerability in Rack Header Parsing</h1>
<p>There is a possible denial of service vulnerability in the header parsing
routines in Rack.  This vulnerability has been assigned the CVE identifier
CVE-2024-26146.</p>
<p>Versions Affected:  All.
Not affected:       None
Fixed Versions:     2.0.9.4, 2.1.4.4, 2.2.8.1, 3.0.9.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted headers can cause header parsing in Rack to take longer than
expected resulting in a possible denial of service issue. Accept and Forwarded
headers are impacted.</p>
<p>Ruby 3.2 has mitigations for this problem, so Rack applications using Ruby 3.2
or newer are unaffected.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>2-0-header-redos.patch - Patch for 2.0 series</li>
<li>2-1-header-redos.patch - Patch for 2.1 series</li>
<li>2-2-header-redos.patch - Patch for 2.2 series</li>
<li>3-0-header-redos.patch - Patch for 3.0 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/svalkanov">svalkanov</a> for reporting this and
providing patches!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a></li>
<li><a href="https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716">https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716</a></li>
<li><a href="https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582">https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582</a></li>
<li><a href="https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f">https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f</a></li>
<li><a href="https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd">https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942">https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26146">https://nvd.nist.gov/vuln/detail/CVE-2024-26146</a></li>
<li><a href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/advisories/GHSA-54rr-7fvw-6x8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack Header Parsing leads to Possible Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</id>
        <link href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f"/>
        <updated>2024-02-29T02:30:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-denial-of-service-vulnerability-in-rack-header-parsing">Possible Denial of Service Vulnerability in Rack Header Parsing</h1>
<p>There is a possible denial of service vulnerability in the header parsing
routines in Rack.  This vulnerability has been assigned the CVE identifier
CVE-2024-26146.</p>
<p>Versions Affected:  All.
Not affected:       None
Fixed Versions:     2.0.9.4, 2.1.4.4, 2.2.8.1, 3.0.9.1</p>
<h2 id="impact">Impact</h2>
<p>Carefully crafted headers can cause header parsing in Rack to take longer than
expected resulting in a possible denial of service issue. Accept and Forwarded
headers are impacted.</p>
<p>Ruby 3.2 has mitigations for this problem, so Rack applications using Ruby 3.2
or newer are unaffected.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>2-0-header-redos.patch - Patch for 2.0 series</li>
<li>2-1-header-redos.patch - Patch for 2.1 series</li>
<li>2-2-header-redos.patch - Patch for 2.2 series</li>
<li>3-0-header-redos.patch - Patch for 3.0 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/svalkanov">svalkanov</a> for reporting this and
providing patches!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a></li>
<li><a href="https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716">https://github.com/rack/rack/commit/30b8e39a578b25d4bdcc082c1c52c6f164b59716</a></li>
<li><a href="https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582">https://github.com/rack/rack/commit/6c5d90bdcec0949f7ba06db62fb740dab394b582</a></li>
<li><a href="https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f">https://github.com/rack/rack/commit/a227cd793778c7c3a827d32808058571569cda6f</a></li>
<li><a href="https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd">https://github.com/rack/rack/commit/e4c117749ba24a66f8ec5a08eddf68deeb425ccd</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942">https://discuss.rubyonrails.org/t/possible-denial-of-service-vulnerability-in-rack-header-parsing/84942</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-26146.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26146">https://nvd.nist.gov/vuln/detail/CVE-2024-26146</a></li>
<li><a href="https://github.com/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/advisories/GHSA-54rr-7fvw-6x8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54rr-7fvw-6x8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-28T22:57:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fat_free_crm] Withdrawn Advisory: Fat Free CRM Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gmg5-r3c4-3fm9</id>
        <link href="https://github.com/advisories/GHSA-gmg5-r3c4-3fm9"/>
        <updated>2024-02-23T18:00:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn">Withdrawn</h2>
<p>This advisory has been withdrawn because the CVE has been disputed and the underlying vulnerability is likely invalid. This link is maintained to preserve external references.</p>
<p><a href="https://github.com/github/advisory-database/pull/3599">According to maintainers of Fat Free CRM</a>, the CRM comment feature allows certain HTML markup, but santizes the output when rendered to page. This allows safe tags (such as <code>&lt;h1&gt;</code> which the author tested and reported as a vulnerability) but correctly disallows <code>&lt;script&gt;</code> tags and other dangerous entities.</p>
<h2 id="original-description">Original Description</h2>
<p>HTML Injection has been discovered in the v0.19.0 version of the Fat Free CRM product via an authenticated request to the /comments URI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10226">https://nvd.nist.gov/vuln/detail/CVE-2019-10226</a></li>
<li><a href="http://packetstormsecurity.com/files/152263/Fat-Free-CRM-0.19.0-HTML-Injection.html">http://packetstormsecurity.com/files/152263/Fat-Free-CRM-0.19.0-HTML-Injection.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fat_free_crm/CVE-2019-10226.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fat_free_crm/CVE-2019-10226.yml</a></li>
<li><a href="https://github.com/fatfreecrm/fat_free_crm/issues/1235">https://github.com/fatfreecrm/fat_free_crm/issues/1235</a></li>
<li><a href="https://github.com/github/advisory-database/pull/3599">https://github.com/github/advisory-database/pull/3599</a></li>
<li><a href="https://apidock.com/rails/ActionView/Helpers/TextHelper/simple_format">https://apidock.com/rails/ActionView/Helpers/TextHelper/simple_format</a></li>
<li><a href="https://github.com/fatfreecrm/fat_free_crm/blob/master/app/views/comments/_comment.html.haml#L2">https://github.com/fatfreecrm/fat_free_crm/blob/master/app/views/comments/_comment.html.haml#L2</a></li>
<li><a href="https://www.exploit-db.com/exploits/46617">https://www.exploit-db.com/exploits/46617</a></li>
<li><a href="https://github.com/advisories/GHSA-gmg5-r3c4-3fm9">https://github.com/advisories/GHSA-gmg5-r3c4-3fm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmg5-r3c4-3fm9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T16:47:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim-core] Cross-site scripting (XSS) in the dynamic file uploads]]></title>
        <id>https://github.com/advisories/GHSA-9w99-78rj-hmxq</id>
        <link href="https://github.com/advisories/GHSA-9w99-78rj-hmxq"/>
        <updated>2024-02-20T23:42:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The dynamic file upload feature is subject to potential XSS attach in case the attacker manages to modify the file names of the records being uploaded to the server.</p>
<p>This appears in sections where the user controls the file upload dialogs themselves and has the technical knowledge to change the file names through the dynamic upload endpoint. Therefore I believe it would require the attacker to control the whole session of the particular user but in any case, this needs to be fixed.</p>
<p>Successful exploit of this vulneratibility would require the user to have successfully uploaded a file blob to the server with a malicious file name and then have the possibility to direct the other user to the edit page of the record where the attachment is attached.</p>
<p>The users are able to craft the direct upload requests themselves controlling the file name that gets stored to the database as shown here:
<a href="https://github.com/rails/rails/blob/a967d355c6fee9ad9b8bd115d43bc8b0fc207e7e/activestorage/app/controllers/active_storage/direct_uploads_controller.rb#L14">https://github.com/rails/rails/blob/a967d355c6fee9ad9b8bd115d43bc8b0fc207e7e/activestorage/app/controllers/active_storage/direct_uploads_controller.rb#L14</a></p>
<p>The attacker is able to change the filename e.g. to <code>&lt;svg onload=alert('XSS')&gt;</code> if they know how to craft these requests themselves. And then enter the returned blob ID to the form inputs manually by modifying the edit page source.</p>
<p>Therefore, anywhere we display these strings, we should properly escape them.</p>
<h3 id="patches">Patches</h3>
<p>PR #11612 fixes this problem both for 0.28.dev and 0.27.x.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable dynamic uploads for the instance, e.g. from proposals.</p>
<h3 id="references">References</h3>
<p>OWASP ASVS v4.0.3-5.1.3</p>
<h3 id="credits">Credits</h3>
<p>This issue was discovered in City of Helsinki's security audit against Decidim 0.27 done during September 2023. The security audit was implemented by <a href="https://www2.deloitte.com/fi/fi.html">Deloitte Finland</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-9w99-78rj-hmxq">https://github.com/decidim/decidim/security/advisories/GHSA-9w99-78rj-hmxq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51447">https://nvd.nist.gov/vuln/detail/CVE-2023-51447</a></li>
<li><a href="https://github.com/decidim/decidim/pull/11612">https://github.com/decidim/decidim/pull/11612</a></li>
<li><a href="https://github.com/decidim/decidim/commit/aaf72787cf18beeeb6a771c1f7cbb7654b073423">https://github.com/decidim/decidim/commit/aaf72787cf18beeeb6a771c1f7cbb7654b073423</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.5">https://github.com/decidim/decidim/releases/tag/v0.27.5</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.28.0">https://github.com/decidim/decidim/releases/tag/v0.28.0</a></li>
<li><a href="https://github.com/rails/rails/blob/a967d355c6fee9ad9b8bd115d43bc8b0fc207e7e/activestorage/app/controllers/active_storage/direct_uploads_controller.rb#L14">https://github.com/rails/rails/blob/a967d355c6fee9ad9b8bd115d43bc8b0fc207e7e/activestorage/app/controllers/active_storage/direct_uploads_controller.rb#L14</a></li>
<li><a href="https://github.com/advisories/GHSA-9w99-78rj-hmxq">https://github.com/advisories/GHSA-9w99-78rj-hmxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w99-78rj-hmxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T23:42:47.000Z</published>
    </entry>
</feed>