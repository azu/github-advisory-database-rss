<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2024-04-05T03:01:20.268Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stringio] StringIO buffer overread vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</id>
        <link href="https://github.com/advisories/GHSA-v5h6-c2hv-hv3r"/>
        <updated>2024-03-25T19:36:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in StringIO 3.0.1, as distributed in Ruby 3.0.x through 3.0.6 and 3.1.x through 3.1.4.</p>
<p>The <code>ungetbyte</code> and <code>ungetc</code> methods on a StringIO can read past the end of a string, and a subsequent call to <code>StringIO.gets</code> may return the memory value.</p>
<p>This vulnerability is not affected StringIO 3.0.3 and later, and Ruby 3.2.x and later.</p>
<p>We recommend to update the StringIO gem to version 3.0.3 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>stringio</code> 3.0.1.1</li>
<li>For Ruby 3.1 users: Update to <code>stringio</code> 3.1.0.2</li>
</ul>
<p>You can use <code>gem update stringio</code> to update it. If you are using bundler, please add <code>gem "stringio", "&gt;= 3.0.1.2"</code> to your <code>Gemfile</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/stringio/commit/0e596524097706263d10900ca180898e4a8f5233">https://github.com/ruby/stringio/commit/0e596524097706263d10900ca180898e4a8f5233</a></li>
<li><a href="https://github.com/ruby/stringio/commit/c58c5f54f1eab99665ea6a161d29ff6a7490afc8">https://github.com/ruby/stringio/commit/c58c5f54f1eab99665ea6a161d29ff6a7490afc8</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stringio/CVE-2024-27280.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stringio/CVE-2024-27280.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/buffer-overread-cve-2024-27280">https://www.ruby-lang.org/en/news/2024/03/21/buffer-overread-cve-2024-27280</a></li>
<li><a href="https://github.com/advisories/GHSA-v5h6-c2hv-hv3r">https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-21T21:53:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-21T21:53:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Use-after-free in libxml2 via Nokogiri::XML::Reader]]></title>
        <id>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</id>
        <link href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97"/>
        <updated>2024-03-18T20:38:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Nokogiri upgrades its dependency libxml2 as follows:</p>
<ul>
<li>v1.15.6 upgrades libxml2 to 2.11.7 from 2.11.6</li>
<li>v1.16.2 upgrades libxml2 to 2.12.5 from 2.12.4</li>
</ul>
<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>
<p>CVE-2024-25062 / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a></p>
<ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if
the packaged libraries are being used. If you've overridden defaults at installation time to use
system libraries instead of packaged libraries, you should instead pay attention to your distro's
libxml2 release announcements.</p>
<p>JRuby users are not affected.</p>
<h3 id="severity">Severity</h3>
<p>The Nokogiri maintainers have evaluated this as <strong>Moderate</strong>.</p>
<h3 id="impact">Impact</h3>
<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies
<code>Nokogiri::XML::Reader</code>):</p>
<blockquote>
<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled,
processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>
</blockquote>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile
and link Nokogiri against patched external libxml2 libraries which will also address these same
issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97">https://github.com/advisories/GHSA-vcc3-rw6f-jv97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-18T20:38:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Use-after-free in libxml2 via Nokogiri::XML::Reader]]></title>
        <id>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</id>
        <link href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97"/>
        <updated>2024-03-18T20:38:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Nokogiri upgrades its dependency libxml2 as follows:</p>
<ul>
<li>v1.15.6 upgrades libxml2 to 2.11.7 from 2.11.6</li>
<li>v1.16.2 upgrades libxml2 to 2.12.5 from 2.12.4</li>
</ul>
<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>
<p>CVE-2024-25062 / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a></p>
<ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if
the packaged libraries are being used. If you've overridden defaults at installation time to use
system libraries instead of packaged libraries, you should instead pay attention to your distro's
libxml2 release announcements.</p>
<p>JRuby users are not affected.</p>
<h3 id="severity">Severity</h3>
<p>The Nokogiri maintainers have evaluated this as <strong>Moderate</strong>.</p>
<h3 id="impact">Impact</h3>
<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies
<code>Nokogiri::XML::Reader</code>):</p>
<blockquote>
<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled,
processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>
</blockquote>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile
and link Nokogiri against patched external libxml2 libraries which will also address these same
issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97">https://github.com/advisories/GHSA-vcc3-rw6f-jv97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-18T20:38:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rotp] ROTP 6.2.2 and 6.2.1 has 0666 permissions for the .rb files.]]></title>
        <id>https://github.com/advisories/GHSA-x2h8-qmj4-g62f</id>
        <link href="https://github.com/advisories/GHSA-x2h8-qmj4-g62f"/>
        <updated>2024-03-19T18:29:23.000Z</updated>
        <content type="html"><![CDATA[<p>The Ruby One Time Password library (ROTP) is an open source library for generating and validating one time passwords. Affected versions had overly permissive default permissions. Users should patch to version 6.3.0. Users unable to patch may correct file permissions after installation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mdp/rotp/security/advisories/GHSA-x2h8-qmj4-g62f">https://github.com/mdp/rotp/security/advisories/GHSA-x2h8-qmj4-g62f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28862">https://nvd.nist.gov/vuln/detail/CVE-2024-28862</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rotp/CVE-2024-28862.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rotp/CVE-2024-28862.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-x2h8-qmj4-g62f">https://github.com/advisories/GHSA-x2h8-qmj4-g62f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x2h8-qmj4-g62f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-18T17:21:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Nokogiri update packaged libxml2 to v2.12.5 to resolve CVE-2024-25062]]></title>
        <id>https://github.com/advisories/GHSA-xc9x-jj77-9p9j</id>
        <link href="https://github.com/advisories/GHSA-xc9x-jj77-9p9j"/>
        <updated>2024-03-19T18:30:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nokogiri upgrades its dependency libxml2 as follows:</p>
<ul>
<li>Nokogiri v1.15.6 upgrades libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.11.7">2.11.7</a> from 2.11.6</li>
<li>Nokogiri v1.16.2 upgrades libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5">2.12.5</a> from 2.12.4</li>
</ul>
<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>
<ul>
<li>CVE-2024-25062 / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a><ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
</ul>
</li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> release announcements.</p>
<p>JRuby users are not affected.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile
and link Nokogiri against patched external libxml2 libraries which will also address these same
issues.</p>
<h2 id="impact">Impact</h2>
<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies <code>Nokogiri::XML::Reader</code>):</p>
<blockquote>
<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>
</blockquote>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-02-04 10:35 EST - this GHSA is drafted without complete details about when the upstream issue was introduced; a request is made of libxml2 maintainers for more detailed information</li>
<li>2024-02-04 10:48 EST - updated GHSA to reflect libxml2 maintainers' confirmation of affected versions</li>
<li>2024-02-04 11:54 EST - v1.16.2 published, this GHSA made public</li>
<li>2024-02-05 10:18 EST - updated with MITRE link to the CVE information, and updated "Impact" section</li>
<li>2024-03-16 09:03 EDT - v1.15.6 published (see discussion at <a href="https://github.com/sparklemotion/nokogiri/discussions/3146">https://github.com/sparklemotion/nokogiri/discussions/3146</a>), updated mitigation information</li>
<li>2024-03-18 22:12 EDT - update "affected products" range with v1.15.6 information</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25062">https://nvd.nist.gov/vuln/detail/CVE-2024-25062</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5">https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/discussions/3146">https://github.com/sparklemotion/nokogiri/discussions/3146</a></li>
<li><a href="https://github.com/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/advisories/GHSA-xc9x-jj77-9p9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc9x-jj77-9p9j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-05T20:22:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Nokogiri update packaged libxml2 to v2.12.5 to resolve CVE-2024-25062]]></title>
        <id>https://github.com/advisories/GHSA-xc9x-jj77-9p9j</id>
        <link href="https://github.com/advisories/GHSA-xc9x-jj77-9p9j"/>
        <updated>2024-03-19T18:30:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nokogiri upgrades its dependency libxml2 as follows:</p>
<ul>
<li>Nokogiri v1.15.6 upgrades libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.11.7">2.11.7</a> from 2.11.6</li>
<li>Nokogiri v1.16.2 upgrades libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5">2.12.5</a> from 2.12.4</li>
</ul>
<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>
<ul>
<li>CVE-2024-25062 / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a><ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
</ul>
</li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> release announcements.</p>
<p>JRuby users are not affected.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile
and link Nokogiri against patched external libxml2 libraries which will also address these same
issues.</p>
<h2 id="impact">Impact</h2>
<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies <code>Nokogiri::XML::Reader</code>):</p>
<blockquote>
<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>
</blockquote>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-02-04 10:35 EST - this GHSA is drafted without complete details about when the upstream issue was introduced; a request is made of libxml2 maintainers for more detailed information</li>
<li>2024-02-04 10:48 EST - updated GHSA to reflect libxml2 maintainers' confirmation of affected versions</li>
<li>2024-02-04 11:54 EST - v1.16.2 published, this GHSA made public</li>
<li>2024-02-05 10:18 EST - updated with MITRE link to the CVE information, and updated "Impact" section</li>
<li>2024-03-16 09:03 EDT - v1.15.6 published (see discussion at <a href="https://github.com/sparklemotion/nokogiri/discussions/3146">https://github.com/sparklemotion/nokogiri/discussions/3146</a>), updated mitigation information</li>
<li>2024-03-18 22:12 EDT - update "affected products" range with v1.15.6 information</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25062">https://nvd.nist.gov/vuln/detail/CVE-2024-25062</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5">https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/discussions/3146">https://github.com/sparklemotion/nokogiri/discussions/3146</a></li>
<li><a href="https://github.com/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/advisories/GHSA-xc9x-jj77-9p9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc9x-jj77-9p9j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-05T20:22:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[turbo_boost-commands] TurboBoost Commands vulnerable to arbitrary method invocation]]></title>
        <id>https://github.com/advisories/GHSA-mp76-7w5v-pr75</id>
        <link href="https://github.com/advisories/GHSA-mp76-7w5v-pr75"/>
        <updated>2024-03-18T16:48:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TurboBoost Commands has existing protections in place to guarantee that only public methods on Command classes can be invoked; however, the existing checks aren't as robust as they should be. It's possible for a sophisticated attacker to invoke more methods than should be permitted depending on the the strictness of authorization checks that individual applications enforce. Being able to call some of these methods can have security implications.</p>
<h4 id="details">Details</h4>
<p>Commands verify that the class must be a <code>Command</code> and that the method requested is defined as a public method; however, this isn't robust enough to guard against all unwanted code execution. The library should more strictly enforce which methods are considered safe before allowing them to be executed.  </p>
<h3 id="patches">Patches</h3>
<p>Patched in the following versions.</p>
<ul>
<li>0.1.3<ul>
<li><a href="https://www.npmjs.com/package/@turbo-boost/commands/v/0.1.3">NPM Package</a></li>
<li><a href="https://rubygems.org/gems/turbo_boost-commands/versions/0.1.3">Ruby GEM</a></li>
</ul>
</li>
<li>0.2.2<ul>
<li><a href="https://www.npmjs.com/package/@turbo-boost/commands/v/0.2.2">NPM Package</a></li>
<li><a href="https://rubygems.org/gems/turbo_boost-commands/versions/0.2.2">Ruby GEM</a></li>
</ul>
</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>You can add this guard to mitigate the issue if running an unpatched version of the library.</p>
<pre><code class="language-ruby">class ApplicationCommand &lt; TurboBoost::Commands::Command
  before_command do
    method_name = params[:name].include?("#") ? params[:name].split("#").last : :perform
    ancestors = self.class.ancestors[0..self.class.ancestors.index(TurboBoost::Commands::Command) - 1]
    allowed = ancestors.any? { |a| a.public_instance_methods(false).any? method_name.to_sym }
    throw :abort unless allowed # ← blocks invocation
    # raise "Invalid Command" unless allowed # ← blocks invocation
  end
end
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75">https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28181">https://nvd.nist.gov/vuln/detail/CVE-2024-28181</a></li>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477">https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477</a></li>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba">https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-mp76-7w5v-pr75">https://github.com/advisories/GHSA-mp76-7w5v-pr75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp76-7w5v-pr75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-15T19:53:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[turbo_boost-commands] TurboBoost Commands vulnerable to arbitrary method invocation]]></title>
        <id>https://github.com/advisories/GHSA-mp76-7w5v-pr75</id>
        <link href="https://github.com/advisories/GHSA-mp76-7w5v-pr75"/>
        <updated>2024-03-18T16:48:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TurboBoost Commands has existing protections in place to guarantee that only public methods on Command classes can be invoked; however, the existing checks aren't as robust as they should be. It's possible for a sophisticated attacker to invoke more methods than should be permitted depending on the the strictness of authorization checks that individual applications enforce. Being able to call some of these methods can have security implications.</p>
<h4 id="details">Details</h4>
<p>Commands verify that the class must be a <code>Command</code> and that the method requested is defined as a public method; however, this isn't robust enough to guard against all unwanted code execution. The library should more strictly enforce which methods are considered safe before allowing them to be executed.  </p>
<h3 id="patches">Patches</h3>
<p>Patched in the following versions.</p>
<ul>
<li>0.1.3<ul>
<li><a href="https://www.npmjs.com/package/@turbo-boost/commands/v/0.1.3">NPM Package</a></li>
<li><a href="https://rubygems.org/gems/turbo_boost-commands/versions/0.1.3">Ruby GEM</a></li>
</ul>
</li>
<li>0.2.2<ul>
<li><a href="https://www.npmjs.com/package/@turbo-boost/commands/v/0.2.2">NPM Package</a></li>
<li><a href="https://rubygems.org/gems/turbo_boost-commands/versions/0.2.2">Ruby GEM</a></li>
</ul>
</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>You can add this guard to mitigate the issue if running an unpatched version of the library.</p>
<pre><code class="language-ruby">class ApplicationCommand &lt; TurboBoost::Commands::Command
  before_command do
    method_name = params[:name].include?("#") ? params[:name].split("#").last : :perform
    ancestors = self.class.ancestors[0..self.class.ancestors.index(TurboBoost::Commands::Command) - 1]
    allowed = ancestors.any? { |a| a.public_instance_methods(false).any? method_name.to_sym }
    throw :abort unless allowed # ← blocks invocation
    # raise "Invalid Command" unless allowed # ← blocks invocation
  end
end
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75">https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28181">https://nvd.nist.gov/vuln/detail/CVE-2024-28181</a></li>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477">https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477</a></li>
<li><a href="https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba">https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-mp76-7w5v-pr75">https://github.com/advisories/GHSA-mp76-7w5v-pr75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp76-7w5v-pr75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-15T19:53:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uri] URI gem has ReDoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hww2-5g85-429m</id>
        <link href="https://github.com/advisories/GHSA-hww2-5g85-429m"/>
        <updated>2024-03-14T22:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>
<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>
<p><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0: Update to uri 0.10.3</li>
<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>
</ul>
<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36617">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>
<li><a href="https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>
<li><a href="https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>
<li><a href="https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>
<li><a href="https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>
<li><a href="https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>
<li><a href="https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>
<li><a href="https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>
<li><a href="https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230725-0002">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>
<li><a href="https://github.com/advisories/GHSA-hww2-5g85-429m">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hww2-5g85-429m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T15:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uri] URI gem has ReDoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hww2-5g85-429m</id>
        <link href="https://github.com/advisories/GHSA-hww2-5g85-429m"/>
        <updated>2024-03-14T22:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>
<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>
<p><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0: Update to uri 0.10.3</li>
<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>
</ul>
<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36617">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>
<li><a href="https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>
<li><a href="https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>
<li><a href="https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>
<li><a href="https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>
<li><a href="https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>
<li><a href="https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>
<li><a href="https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>
<li><a href="https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230725-0002">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>
<li><a href="https://github.com/advisories/GHSA-hww2-5g85-429m">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hww2-5g85-429m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T15:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uri] URI gem has ReDoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hww2-5g85-429m</id>
        <link href="https://github.com/advisories/GHSA-hww2-5g85-429m"/>
        <updated>2024-03-14T22:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>
<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>
<p><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0: Update to uri 0.10.3</li>
<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>
</ul>
<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36617">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>
<li><a href="https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>
<li><a href="https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>
<li><a href="https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>
<li><a href="https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>
<li><a href="https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>
<li><a href="https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>
<li><a href="https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>
<li><a href="https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230725-0002">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>
<li><a href="https://github.com/advisories/GHSA-hww2-5g85-429m">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hww2-5g85-429m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T15:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uri] URI gem has ReDoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hww2-5g85-429m</id>
        <link href="https://github.com/advisories/GHSA-hww2-5g85-429m"/>
        <updated>2024-03-14T22:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>
<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>
<p><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0: Update to uri 0.10.3</li>
<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>
</ul>
<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36617">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>
<li><a href="https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>
<li><a href="https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>
<li><a href="https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>
<li><a href="https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>
<li><a href="https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>
<li><a href="https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>
<li><a href="https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>
<li><a href="https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230725-0002">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>
<li><a href="https://github.com/advisories/GHSA-hww2-5g85-429m">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hww2-5g85-429m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T15:30:34.000Z</published>
    </entry>
</feed>