<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2023-08-29T12:01:45.221Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[consul] Consul gem insufficient authentication check - Multiple powers in one controller are not always checked correctly]]></title>
        <id>https://github.com/advisories/GHSA-8jhx-9gf4-hhf5</id>
        <link href="https://github.com/advisories/GHSA-8jhx-9gf4-hhf5"/>
        <updated>2023-08-29T11:51:47.000Z</updated>
        <content type="html"><![CDATA[<p>With the consul ruby gem before 1.0.3, if a controller checks multiple powers  using <code>:if</code> or <code>:except</code> conditions, these conditions are erroneously applied to all power checks in that controller. This can lead to skipped power checks and hence unauthenticated access to certain controller actions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16377">https://nvd.nist.gov/vuln/detail/CVE-2019-16377</a></li>
<li><a href="https://github.com/makandra/consul/issues/49">https://github.com/makandra/consul/issues/49</a></li>
<li><a href="https://rubygems.org/gems/consul">https://rubygems.org/gems/consul</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/c26fbc13435b8be448ad59131428538049d165e4/gems/consul/CVE-2019-16377.yml">https://github.com/rubysec/ruby-advisory-db/blob/c26fbc13435b8be448ad59131428538049d165e4/gems/consul/CVE-2019-16377.yml</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/consul/CVE-2019-16377.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/consul/CVE-2019-16377.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhx-9gf4-hhf5">https://github.com/advisories/GHSA-8jhx-9gf4-hhf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhx-9gf4-hhf5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-09-27T20:01:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[colorscore] colorscore Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-73qw-ww62-m54x</id>
        <link href="https://github.com/advisories/GHSA-73qw-ww62-m54x"/>
        <updated>2023-08-29T11:49:05.000Z</updated>
        <content type="html"><![CDATA[<p>The initialize method in the Histogram class in <code>lib/colorscore/histogram.rb</code> in the colorscore gem before 0.0.5 for Ruby allows context-dependent attackers to execute arbitrary code via shell metacharacters in the (1) <code>image_path</code>, (2) <code>colors</code>, or (3) <code>depth</code> variable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7541">https://nvd.nist.gov/vuln/detail/CVE-2015-7541</a></li>
<li><a href="https://github.com/quadule/colorscore/commit/570b5e854cecddd44d2047c44126aed951b61718">https://github.com/quadule/colorscore/commit/570b5e854cecddd44d2047c44126aed951b61718</a></li>
<li><a href="http://rubysec.com/advisories/CVE-2015-7541/">http://rubysec.com/advisories/CVE-2015-7541/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/01/05/2">http://www.openwall.com/lists/oss-security/2016/01/05/2</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/colorscore/CVE-2015-7541.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/colorscore/CVE-2015-7541.yml</a></li>
<li><a href="http://seclists.org/oss-sec/2016/q1/17">http://seclists.org/oss-sec/2016/q1/17</a></li>
<li><a href="https://github.com/advisories/GHSA-73qw-ww62-m54x">https://github.com/advisories/GHSA-73qw-ww62-m54x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-73qw-ww62-m54x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2017-10-24T18:33:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m3q7-rj8g-m457</id>
        <link href="https://github.com/advisories/GHSA-m3q7-rj8g-m457"/>
        <updated>2023-08-29T11:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7565">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>
<li><a href="http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-7565.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m3q7-rj8g-m457">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3q7-rj8g-m457</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:33:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-mp78-r56v-45qc</id>
        <link href="https://github.com/advisories/GHSA-mp78-r56v-45qc"/>
        <updated>2023-08-29T11:29:21.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.10.x before 1.10.1 and 1.11.x before 1.11.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-1866">https://nvd.nist.gov/vuln/detail/CVE-2015-1866</a></li>
<li><a href="https://emberjs.com/blog/2015/04/14/security-and-bugfix-releases-ember-1-10-1-1-11-2-1-11-3.html">https://emberjs.com/blog/2015/04/14/security-and-bugfix-releases-ember-1-10-1-1-11-2-1-11-3.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/04/14/11">http://www.openwall.com/lists/oss-security/2015/04/14/11</a></li>
<li><a href="https://web.archive.org/web/20200228155301/http://www.securityfocus.com/bid/74185">https://web.archive.org/web/20200228155301/http://www.securityfocus.com/bid/74185</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-1866.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-1866.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/nbntfs2EbRU">https://groups.google.com/forum/#!topic/ember-security/nbntfs2EbRU</a></li>
<li><a href="https://github.com/advisories/GHSA-mp78-r56v-45qc">https://github.com/advisories/GHSA-mp78-r56v-45qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp78-r56v-45qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:34:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] ember-source vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-mp78-r56v-45qc</id>
        <link href="https://github.com/advisories/GHSA-mp78-r56v-45qc"/>
        <updated>2023-08-29T11:29:21.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.10.x before 1.10.1 and 1.11.x before 1.11.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-1866">https://nvd.nist.gov/vuln/detail/CVE-2015-1866</a></li>
<li><a href="https://emberjs.com/blog/2015/04/14/security-and-bugfix-releases-ember-1-10-1-1-11-2-1-11-3.html">https://emberjs.com/blog/2015/04/14/security-and-bugfix-releases-ember-1-10-1-1-11-2-1-11-3.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/04/14/11">http://www.openwall.com/lists/oss-security/2015/04/14/11</a></li>
<li><a href="https://web.archive.org/web/20200228155301/http://www.securityfocus.com/bid/74185">https://web.archive.org/web/20200228155301/http://www.securityfocus.com/bid/74185</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-1866.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2015-1866.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/nbntfs2EbRU">https://groups.google.com/forum/#!topic/ember-security/nbntfs2EbRU</a></li>
<li><a href="https://github.com/advisories/GHSA-mp78-r56v-45qc">https://github.com/advisories/GHSA-mp78-r56v-45qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp78-r56v-45qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-08-28T22:34:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[delayed_job_web] delayed_job_web Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w7q9-xr2x-wh7x</id>
        <link href="https://github.com/advisories/GHSA-w7q9-xr2x-wh7x"/>
        <updated>2023-08-29T11:24:57.000Z</updated>
        <content type="html"><![CDATA[<p>An exploitable cross site scripting (XSS) vulnerability exists in the filter functionality of the delayed_job_web rails gem versions 1.2.9 before 1.4.2. A specially crafted URL can cause an XSS flaw resulting in an attacker being able to execute arbitrary javascript on the victim's browser. An attacker can phish an authenticated user to trigger this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12097">https://nvd.nist.gov/vuln/detail/CVE-2017-12097</a></li>
<li><a href="https://www.talosintelligence.com/vulnerability_reports/TALOS-2017-0449">https://www.talosintelligence.com/vulnerability_reports/TALOS-2017-0449</a></li>
<li><a href="https://rubygems.org/gems/delayed_job_web/versions/1.4">https://rubygems.org/gems/delayed_job_web/versions/1.4</a></li>
<li><a href="https://web.archive.org/web/20200227132840/http://www.securityfocus.com/bid/102484">https://web.archive.org/web/20200227132840/http://www.securityfocus.com/bid/102484</a></li>
<li><a href="https://github.com/ejschmitt/delayed_job_web/commit/6bcb10e61ea2b9a44ffa16be8536dff46ad51449">https://github.com/ejschmitt/delayed_job_web/commit/6bcb10e61ea2b9a44ffa16be8536dff46ad51449</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/delayed_job_web/CVE-2017-12097.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/delayed_job_web/CVE-2017-12097.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-w7q9-xr2x-wh7x">https://github.com/advisories/GHSA-w7q9-xr2x-wh7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7q9-xr2x-wh7x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-03-05T19:06:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Potential XSS Exploit When Binding `tagName` to User-Supplied Data]]></title>
        <id>https://github.com/advisories/GHSA-5m48-c37x-f792</id>
        <link href="https://github.com/advisories/GHSA-5m48-c37x-f792"/>
        <updated>2023-08-29T11:06:47.000Z</updated>
        <content type="html"><![CDATA[<p>In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the <code>tagName</code> property of an <code>Ember.View</code> was inserted into such a string without being sanitized. This means that if an application assigns a view's <code>tagName</code> to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS"). This vulnerability only affects applications that assign or bind user-provided content to <code>tagName</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4170">https://nvd.nist.gov/vuln/detail/CVE-2013-4170</a></li>
<li><a href="https://groups.google.com/g/ember-security/c/dokLVwwxAdM">https://groups.google.com/g/ember-security/c/dokLVwwxAdM</a></li>
<li><a href="https://rubysec.com/advisories/CVE-2013-4170/">https://rubysec.com/advisories/CVE-2013-4170/</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102">https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ember-source/CVE-2013-4170.yml</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM">https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM</a></li>
<li><a href="https://github.com/advisories/GHSA-5m48-c37x-f792">https://github.com/advisories/GHSA-5m48-c37x-f792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m48-c37x-f792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-01T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[spree] Spree allows remote attackers to obtain sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-hwrx-wc75-mgh7</id>
        <link href="https://github.com/advisories/GHSA-hwrx-wc75-mgh7"/>
        <updated>2023-08-29T11:01:14.000Z</updated>
        <content type="html"><![CDATA[<p>Spree 0.11.x before 0.11.2 and 0.30.x before 0.30.0 exchanges data using JavaScript Object Notation (JSON) without a mechanism for validating requests, which allows remote attackers to obtain sensitive information via vectors involving (1) <code>admin/products.json</code>, (2) <code>admin/users.json</code>, or (3) <code>admin/overview/get_report_data</code>, related to a "JSON hijacking" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-3978">https://nvd.nist.gov/vuln/detail/CVE-2010-3978</a></li>
<li><a href="https://github.com/railsdog/spree/commit/19944bd999c310d9b10d16a41f48ebac97dc4fac">https://github.com/railsdog/spree/commit/19944bd999c310d9b10d16a41f48ebac97dc4fac</a></li>
<li><a href="https://github.com/railsdog/spree/commit/d881b2bb610ea33e2364ff16feb8e702dfeda135">https://github.com/railsdog/spree/commit/d881b2bb610ea33e2364ff16feb8e702dfeda135</a></li>
<li><a href="http://spreecommerce.com/blog/2010/11/02/json-hijacking-vulnerability/">http://spreecommerce.com/blog/2010/11/02/json-hijacking-vulnerability/</a></li>
<li><a href="http://spreecommerce.com/blog/2010/11/09/spree-0-30-0-released/">http://spreecommerce.com/blog/2010/11/09/spree-0-30-0-released/</a></li>
<li><a href="http://twitter.com/conviso/statuses/29555076248">http://twitter.com/conviso/statuses/29555076248</a></li>
<li><a href="http://www.conviso.com.br/json-hijacking-vulnerability/">http://www.conviso.com.br/json-hijacking-vulnerability/</a></li>
<li><a href="http://www.conviso.com.br/security-advisory-spree-e-commerce-json-v-0-11x/">http://www.conviso.com.br/security-advisory-spree-e-commerce-json-v-0-11x/</a></li>
<li><a href="http://www.securityfocus.com/archive/1/514674/100/0/threaded">http://www.securityfocus.com/archive/1/514674/100/0/threaded</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2010-3978.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2010-3978.yml</a></li>
<li><a href="https://spreecommerce.com/blog/json-hijacking-vulnerability">https://spreecommerce.com/blog/json-hijacking-vulnerability</a></li>
<li><a href="https://github.com/advisories/GHSA-hwrx-wc75-mgh7">https://github.com/advisories/GHSA-hwrx-wc75-mgh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hwrx-wc75-mgh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:42:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[spree] Spree allows remote attackers to obtain sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-hwrx-wc75-mgh7</id>
        <link href="https://github.com/advisories/GHSA-hwrx-wc75-mgh7"/>
        <updated>2023-08-29T11:01:14.000Z</updated>
        <content type="html"><![CDATA[<p>Spree 0.11.x before 0.11.2 and 0.30.x before 0.30.0 exchanges data using JavaScript Object Notation (JSON) without a mechanism for validating requests, which allows remote attackers to obtain sensitive information via vectors involving (1) <code>admin/products.json</code>, (2) <code>admin/users.json</code>, or (3) <code>admin/overview/get_report_data</code>, related to a "JSON hijacking" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-3978">https://nvd.nist.gov/vuln/detail/CVE-2010-3978</a></li>
<li><a href="https://github.com/railsdog/spree/commit/19944bd999c310d9b10d16a41f48ebac97dc4fac">https://github.com/railsdog/spree/commit/19944bd999c310d9b10d16a41f48ebac97dc4fac</a></li>
<li><a href="https://github.com/railsdog/spree/commit/d881b2bb610ea33e2364ff16feb8e702dfeda135">https://github.com/railsdog/spree/commit/d881b2bb610ea33e2364ff16feb8e702dfeda135</a></li>
<li><a href="http://spreecommerce.com/blog/2010/11/02/json-hijacking-vulnerability/">http://spreecommerce.com/blog/2010/11/02/json-hijacking-vulnerability/</a></li>
<li><a href="http://spreecommerce.com/blog/2010/11/09/spree-0-30-0-released/">http://spreecommerce.com/blog/2010/11/09/spree-0-30-0-released/</a></li>
<li><a href="http://twitter.com/conviso/statuses/29555076248">http://twitter.com/conviso/statuses/29555076248</a></li>
<li><a href="http://www.conviso.com.br/json-hijacking-vulnerability/">http://www.conviso.com.br/json-hijacking-vulnerability/</a></li>
<li><a href="http://www.conviso.com.br/security-advisory-spree-e-commerce-json-v-0-11x/">http://www.conviso.com.br/security-advisory-spree-e-commerce-json-v-0-11x/</a></li>
<li><a href="http://www.securityfocus.com/archive/1/514674/100/0/threaded">http://www.securityfocus.com/archive/1/514674/100/0/threaded</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2010-3978.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2010-3978.yml</a></li>
<li><a href="https://spreecommerce.com/blog/json-hijacking-vulnerability">https://spreecommerce.com/blog/json-hijacking-vulnerability</a></li>
<li><a href="https://github.com/advisories/GHSA-hwrx-wc75-mgh7">https://github.com/advisories/GHSA-hwrx-wc75-mgh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hwrx-wc75-mgh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:42:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[curl] Curl Gem insufficient URL escaping command injection]]></title>
        <id>https://github.com/advisories/GHSA-hxx6-p24v-wg8c</id>
        <link href="https://github.com/advisories/GHSA-hxx6-p24v-wg8c"/>
        <updated>2023-08-29T10:57:51.000Z</updated>
        <content type="html"><![CDATA[<p><code>lib/curl.rb</code> in the Curl Gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-2617">https://nvd.nist.gov/vuln/detail/CVE-2013-2617</a></li>
<li><a href="http://packetstormsecurity.com/files/120778/Ruby-Gem-Curl-Command-Execution.html">http://packetstormsecurity.com/files/120778/Ruby-Gem-Curl-Command-Execution.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2013/Mar/124">http://seclists.org/fulldisclosure/2013/Mar/124</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/03/19/9">http://www.openwall.com/lists/oss-security/2013/03/19/9</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/curl/CVE-2013-2617.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/curl/CVE-2013-2617.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-hxx6-p24v-wg8c">https://github.com/advisories/GHSA-hxx6-p24v-wg8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hxx6-p24v-wg8c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2017-10-24T18:33:37.000Z</published>
    </entry>
</feed>