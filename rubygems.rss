<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2023-02-02T15:01:22.734Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[publify_core] Publify contains Weak Password Requirements]]></title>
        <id>https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</id>
        <link href="https://github.com/advisories/GHSA-g7gf-2rqw-5rwx"/>
        <updated>2023-01-31T23:39:21.000Z</updated>
        <content type="html"><![CDATA[<p>Weak Password Requirements in GitHub repository publify/publify prior to 9.2.10.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0569">https://nvd.nist.gov/vuln/detail/CVE-2023-0569</a></li>
<li><a href="https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d">https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d</a></li>
<li><a href="https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9">https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9</a></li>
<li><a href="https://github.com/advisories/GHSA-g7gf-2rqw-5rwx">https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-29T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activemodel] Duplicate Advisory: Moderate severity vulnerability that affects activemodel]]></title>
        <id>https://github.com/advisories/GHSA-v543-gqhh-6gww</id>
        <link href="https://github.com/advisories/GHSA-v543-gqhh-6gww"/>
        <updated>2023-01-31T20:39:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of <a href="https://github.com/advisories/GHSA-543v-gj2c-r3ch">GHSA-543v-gj2c-r3ch</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-0753">https://nvd.nist.gov/vuln/detail/CVE-2016-0753</a></li>
<li><a href="https://github.com/advisories/GHSA-v543-gqhh-6gww">https://github.com/advisories/GHSA-v543-gqhh-6gww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v543-gqhh-6gww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-09-17T21:55:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activemodel] Duplicate Advisory: Moderate severity vulnerability that affects activemodel]]></title>
        <id>https://github.com/advisories/GHSA-v543-gqhh-6gww</id>
        <link href="https://github.com/advisories/GHSA-v543-gqhh-6gww"/>
        <updated>2023-01-31T20:39:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of <a href="https://github.com/advisories/GHSA-543v-gj2c-r3ch">GHSA-543v-gj2c-r3ch</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-0753">https://nvd.nist.gov/vuln/detail/CVE-2016-0753</a></li>
<li><a href="https://github.com/advisories/GHSA-v543-gqhh-6gww">https://github.com/advisories/GHSA-v543-gqhh-6gww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v543-gqhh-6gww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-09-17T21:55:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-01-30T22:56:06.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-01-30T22:56:06.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-01-30T22:56:06.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</id>
        <link href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv"/>
        <updated>2023-01-30T22:55:11.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch related to the If-None-Match header. This vulnerability has been assigned the CVE identifier CVE-2023-22795.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact</p>
<p>A specially crafted HTTP If-None-Match header can cause the regular expression engine to enter a state of catastrophic backtracking, when on a version of Ruby below 3.2.0. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious If-None-Match headers before they reach the application.</p>
<p>Users on Ruby 3.2.0 or greater are not affected by this vulnerability.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv">https://github.com/advisories/GHSA-8xww-x3g3-6jcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:20:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</id>
        <link href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv"/>
        <updated>2023-01-30T22:55:11.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch related to the If-None-Match header. This vulnerability has been assigned the CVE identifier CVE-2023-22795.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact</p>
<p>A specially crafted HTTP If-None-Match header can cause the regular expression engine to enter a state of catastrophic backtracking, when on a version of Ruby below 3.2.0. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious If-None-Match headers before they reach the application.</p>
<p>Users on Ruby 3.2.0 or greater are not affected by this vulnerability.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv">https://github.com/advisories/GHSA-8xww-x3g3-6jcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:20:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-01-30T22:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-01-30T22:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-p84v-45xj-wwqj</id>
        <link href="https://github.com/advisories/GHSA-p84v-45xj-wwqj"/>
        <updated>2023-01-30T22:48:19.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2023-22792.</p>
<p>Versions Affected: &gt;= 3.0.0 Not affected: &lt; 3.0.0 Fixed Versions: 5.2.8.15 (Rails LTS), 6.0.6.1, 6.1.7.1, 7.0.4.1
Impact</p>
<p>Specially crafted cookies, in combination with a specially crafted X_FORWARDED_HOST header can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious X_FORWARDED_HOST headers before they reach the application.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 6.1 series
7-0-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<p><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-p84v-45xj-wwqj">https://github.com/advisories/GHSA-p84v-45xj-wwqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p84v-45xj-wwqj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-p84v-45xj-wwqj</id>
        <link href="https://github.com/advisories/GHSA-p84v-45xj-wwqj"/>
        <updated>2023-01-30T22:48:19.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2023-22792.</p>
<p>Versions Affected: &gt;= 3.0.0 Not affected: &lt; 3.0.0 Fixed Versions: 5.2.8.15 (Rails LTS), 6.0.6.1, 6.1.7.1, 7.0.4.1
Impact</p>
<p>Specially crafted cookies, in combination with a specially crafted X_FORWARDED_HOST header can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious X_FORWARDED_HOST headers before they reach the application.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 6.1 series
7-0-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<p><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-p84v-45xj-wwqj">https://github.com/advisories/GHSA-p84v-45xj-wwqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p84v-45xj-wwqj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sanitize] Improper neutralization of `noscript` element content may allow XSS in Sanitize]]></title>
        <id>https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</id>
        <link href="https://github.com/advisories/GHSA-fw3g-2h3j-qmm7"/>
        <updated>2023-01-28T01:17:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using carefully crafted input, an attacker may be able to sneak arbitrary HTML through Sanitize <code>&gt;= 5.0.0, &lt; 6.0.1</code> when Sanitize is configured with a custom allowlist that allows <code>noscript</code> elements. This could result in XSS (cross-site scripting) or other undesired behavior when that HTML is rendered in a browser.</p>
<p>Sanitize's default configs don't allow <code>noscript</code> elements and are not vulnerable. This issue only affects users who are using a custom config that adds <code>noscript</code> to the element allowlist.</p>
<h3 id="patches">Patches</h3>
<p>Sanitize <code>&gt;= 6.0.1</code> always removes <code>noscript</code> elements and their contents, even when <code>noscript</code> is in the allowlist.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users who are unable to upgrade can prevent this issue by using one of Sanitize's default configs or by ensuring that their custom config does not include <code>noscript</code> in the element allowlist.</p>
<h3 id="details">Details</h3>
<p>The root cause of this issue is that HTML parsing rules treat the contents of a <code>noscript</code> element differently depending on whether scripting is enabled in the user agent. Nokogiri (the HTML parser Sanitize uses) doesn't support scripting so it follows the "scripting disabled" rules, but a web browser with scripting enabled will follow the "scripting enabled" rules. This means that Sanitize can't reliably make the contents of a <code>noscript</code> element safe for scripting enabled browsers. The safest thing to do is to remove the element and its contents entirely, which is now what Sanitize does in version 6.0.1 and later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rgrove/sanitize/releases/tag/v6.0.1">Release Notes</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>Thanks to David Klein from <a href="https://www.tu-braunschweig.de/en/ias">TU Braunschweig</a> (@leeN) for reporting this issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rgrove/sanitize/security/advisories/GHSA-fw3g-2h3j-qmm7">https://github.com/rgrove/sanitize/security/advisories/GHSA-fw3g-2h3j-qmm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-23627">https://nvd.nist.gov/vuln/detail/CVE-2023-23627</a></li>
<li><a href="https://github.com/rgrove/sanitize/commit/ec14265e530dc3fe31ce2ef773594d3a97778d22">https://github.com/rgrove/sanitize/commit/ec14265e530dc3fe31ce2ef773594d3a97778d22</a></li>
<li><a href="https://github.com/advisories/GHSA-fw3g-2h3j-qmm7">https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-28T01:17:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smashing] Smashing Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-254j-mmc5-qhpx</id>
        <link href="https://github.com/advisories/GHSA-254j-mmc5-qhpx"/>
        <updated>2023-01-27T00:53:50.000Z</updated>
        <content type="html"><![CDATA[<p>Smashing 1.3.4 is vulnerable to Cross Site Scripting (XSS). A URL for a widget can be crafted and used to execute JavaScript on the victim's computer. The JavaScript code can then steal data available in the session/cookies depending on the user environment (e.g. if re-using internal URL's for deploying, or cookies that are very permissive) private information may be retrieved by the attacker.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-35440">https://nvd.nist.gov/vuln/detail/CVE-2021-35440</a></li>
<li><a href="https://github.com/Smashing/smashing/pull/186">https://github.com/Smashing/smashing/pull/186</a></li>
<li><a href="https://github.com/Smashing/smashing/pull/186#issuecomment-871727614">https://github.com/Smashing/smashing/pull/186#issuecomment-871727614</a></li>
<li><a href="https://github.com/Smashing/smashing/blob/ad7325f159f89854ca4e7d94e7be9bee507b6d46/CHANGELOG.md">https://github.com/Smashing/smashing/blob/ad7325f159f89854ca4e7d94e7be9bee507b6d46/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-254j-mmc5-qhpx">https://github.com/advisories/GHSA-254j-mmc5-qhpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-254j-mmc5-qhpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ccsv] ccsv Double Free vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5gxp-c379-pj42</id>
        <link href="https://github.com/advisories/GHSA-5gxp-c379-pj42"/>
        <updated>2023-01-27T00:53:21.000Z</updated>
        <content type="html"><![CDATA[<p>The foreach function in <code>ext/ccsv.c</code> in Ccsv 1.1.0 allows remote attackers to cause a denial of service (double free and application crash) or possibly have unspecified other impact via a crafted file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-15364">https://nvd.nist.gov/vuln/detail/CVE-2017-15364</a></li>
<li><a href="https://github.com/evan/ccsv/issues/15">https://github.com/evan/ccsv/issues/15</a></li>
<li><a href="https://github.com/advisories/GHSA-5gxp-c379-pj42">https://github.com/advisories/GHSA-5gxp-c379-pj42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gxp-c379-pj42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:29:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sup] Sup Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hh2x-7mf9-78fr</id>
        <link href="https://github.com/advisories/GHSA-hh2x-7mf9-78fr"/>
        <updated>2023-01-27T00:53:07.000Z</updated>
        <content type="html"><![CDATA[<p><code>lib/sup/message_chunks.rb</code> in Sup before 0.13.2.1 and 0.14.x before 0.14.1.1 allows remote attackers to execute arbitrary commands via shell metacharacters in the content_type of an email attachment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4479">https://nvd.nist.gov/vuln/detail/CVE-2013-4479</a></li>
<li><a href="https://github.com/sup-heliotrope/sup/commit/ca0302e0c716682d2de22e9136400c704cc93e42">https://github.com/sup-heliotrope/sup/commit/ca0302e0c716682d2de22e9136400c704cc93e42</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/165917.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/165917.html</a></li>
<li><a href="http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html">http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2013/Oct/272">http://seclists.org/fulldisclosure/2013/Oct/272</a></li>
<li><a href="http://secunia.com/advisories/55294">http://secunia.com/advisories/55294</a></li>
<li><a href="http://secunia.com/advisories/55400">http://secunia.com/advisories/55400</a></li>
<li><a href="http://www.debian.org/security/2012/dsa-2805">http://www.debian.org/security/2012/dsa-2805</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/10/30/2">http://www.openwall.com/lists/oss-security/2013/10/30/2</a></li>
<li><a href="https://github.com/advisories/GHSA-hh2x-7mf9-78fr">https://github.com/advisories/GHSA-hh2x-7mf9-78fr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh2x-7mf9-78fr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:20:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sup] Sup Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hh2x-7mf9-78fr</id>
        <link href="https://github.com/advisories/GHSA-hh2x-7mf9-78fr"/>
        <updated>2023-01-27T00:53:07.000Z</updated>
        <content type="html"><![CDATA[<p><code>lib/sup/message_chunks.rb</code> in Sup before 0.13.2.1 and 0.14.x before 0.14.1.1 allows remote attackers to execute arbitrary commands via shell metacharacters in the content_type of an email attachment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4479">https://nvd.nist.gov/vuln/detail/CVE-2013-4479</a></li>
<li><a href="https://github.com/sup-heliotrope/sup/commit/ca0302e0c716682d2de22e9136400c704cc93e42">https://github.com/sup-heliotrope/sup/commit/ca0302e0c716682d2de22e9136400c704cc93e42</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/165917.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/165917.html</a></li>
<li><a href="http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html">http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2013/Oct/272">http://seclists.org/fulldisclosure/2013/Oct/272</a></li>
<li><a href="http://secunia.com/advisories/55294">http://secunia.com/advisories/55294</a></li>
<li><a href="http://secunia.com/advisories/55400">http://secunia.com/advisories/55400</a></li>
<li><a href="http://www.debian.org/security/2012/dsa-2805">http://www.debian.org/security/2012/dsa-2805</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/10/30/2">http://www.openwall.com/lists/oss-security/2013/10/30/2</a></li>
<li><a href="https://github.com/advisories/GHSA-hh2x-7mf9-78fr">https://github.com/advisories/GHSA-hh2x-7mf9-78fr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh2x-7mf9-78fr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:20:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] katello Improper Privilege Management vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cpv6-pfq6-j2v7</id>
        <link href="https://github.com/advisories/GHSA-cpv6-pfq6-j2v7"/>
        <updated>2023-01-27T00:52:55.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Foreman's katello plugin version 3.4.5. After setting a new role to allow restricted access on a repository with a filter (filter set on the Product Name), the filter is not respected when the actions are done via hammer using the repository id.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-2662">https://nvd.nist.gov/vuln/detail/CVE-2017-2662</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2662">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2662</a></li>
<li><a href="https://projects.theforeman.org/issues/18838">https://projects.theforeman.org/issues/18838</a></li>
<li><a href="https://github.com/Katello/katello/pull/8772">https://github.com/Katello/katello/pull/8772</a></li>
<li><a href="https://github.com/Katello/katello/commit/853260e3e9f94179d5881199e7885d1c08e600f6">https://github.com/Katello/katello/commit/853260e3e9f94179d5881199e7885d1c08e600f6</a></li>
<li><a href="https://github.com/advisories/GHSA-cpv6-pfq6-j2v7">https://github.com/advisories/GHSA-cpv6-pfq6-j2v7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpv6-pfq6-j2v7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:36:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hammer_cli_foreman] hammer_cli_foreman Improper Certificate Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-77h8-xr85-3x5q</id>
        <link href="https://github.com/advisories/GHSA-77h8-xr85-3x5q"/>
        <updated>2023-01-27T00:52:32.000Z</updated>
        <content type="html"><![CDATA[<p>Hammer CLI, a CLI utility for Foreman, before version 0.10.0, did not explicitly set the verify_ssl flag for apipie-bindings that disable it by default. As a result the server certificates are not checked and connections are prone to man-in-the-middle attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-2667">https://nvd.nist.gov/vuln/detail/CVE-2017-2667</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:0336">https://access.redhat.com/errata/RHSA-2018:0336</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1436262">https://bugzilla.redhat.com/show_bug.cgi?id=1436262</a></li>
<li><a href="http://projects.theforeman.org/issues/19033">http://projects.theforeman.org/issues/19033</a></li>
<li><a href="http://www.securityfocus.com/bid/97153">http://www.securityfocus.com/bid/97153</a></li>
<li><a href="https://github.com/advisories/GHSA-77h8-xr85-3x5q">https://github.com/advisories/GHSA-77h8-xr85-3x5q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77h8-xr85-3x5q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:36:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ember-source] Ember.js Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8xm3-gm7c-5fjx</id>
        <link href="https://github.com/advisories/GHSA-8xm3-gm7c-5fjx"/>
        <updated>2023-01-27T00:52:12.000Z</updated>
        <content type="html"><![CDATA[<p>Ember.js 1.0.x before 1.0.1, 1.1.x before 1.1.3, 1.2.x before 1.2.1, 1.3.x before 1.3.1, and 1.4.x before 1.4.0-beta.2 allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging an application that contains templates whose context is set to a user-supplied primitive value and also contain the <code>{{this}}</code> special Handlebars variable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0013">https://nvd.nist.gov/vuln/detail/CVE-2014-0013</a></li>
<li><a href="https://groups.google.com/forum/#!topic/ember-security/2kpXXCxISS4">https://groups.google.com/forum/#!topic/ember-security/2kpXXCxISS4</a></li>
<li><a href="http://emberjs.com/blog/2014/01/14/ember-security-releases.html">http://emberjs.com/blog/2014/01/14/ember-security-releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-8xm3-gm7c-5fjx">https://github.com/advisories/GHSA-8xm3-gm7c-5fjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xm3-gm7c-5fjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:07:30.000Z</published>
    </entry>
</feed>