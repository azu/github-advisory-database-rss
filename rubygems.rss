<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2023-03-08T05:01:36.419Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[strong_password] strong_password Ruby gem malicious version causing Remote Code Execution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5h5r-ffc4-c455</id>
        <link href="https://github.com/advisories/GHSA-5h5r-ffc4-c455"/>
        <updated>2023-03-06T22:51:36.000Z</updated>
        <content type="html"><![CDATA[<p>The strong_password gem 0.0.7 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party. Version 0.0.8 does not contain the backdoor.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-13354">https://nvd.nist.gov/vuln/detail/CVE-2019-13354</a></li>
<li><a href="https://rubygems.org/gems/strong_password/versions">https://rubygems.org/gems/strong_password/versions</a></li>
<li><a href="https://withatwist.dev/strong-password-rubygem-hijacked.html">https://withatwist.dev/strong-password-rubygem-hijacked.html</a></li>
<li><a href="https://benjamin-bouchet.com/blog/vulnerabilite-dans-la-gem-strong_password-0-0-7/">https://benjamin-bouchet.com/blog/vulnerabilite-dans-la-gem-strong_password-0-0-7/</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/strong_password/CVE-2019-13354.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/strong_password/CVE-2019-13354.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-5h5r-ffc4-c455">https://github.com/advisories/GHSA-5h5r-ffc4-c455</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5h5r-ffc4-c455</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-08T20:32:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elastic-apm] Elastic APM agent for Ruby vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-35j2-p8fh-x966</id>
        <link href="https://github.com/advisories/GHSA-35j2-p8fh-x966"/>
        <updated>2023-03-03T23:07:57.000Z</updated>
        <content type="html"><![CDATA[<p>A TLS certificate validation flaw was found in Elastic APM agent for Ruby versions before 2.9.0. When specifying a trusted server CA certificate via the <code>server_ca_cert</code> setting, the Ruby agent would not properly verify the certificate returned by the APM server. This could result in a man in the middle style attack against the Ruby agent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-7615">https://nvd.nist.gov/vuln/detail/CVE-2019-7615</a></li>
<li><a href="https://www.elastic.co/community/security/">https://www.elastic.co/community/security/</a></li>
<li><a href="https://github.com/elastic/apm-agent-ruby/pull/449">https://github.com/elastic/apm-agent-ruby/pull/449</a></li>
<li><a href="https://github.com/advisories/GHSA-35j2-p8fh-x966">https://github.com/advisories/GHSA-35j2-p8fh-x966</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35j2-p8fh-x966</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:51:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[omniauth] Cross-site Request Forgery in OmniAuth]]></title>
        <id>https://github.com/advisories/GHSA-ww4x-rwq6-qpgf</id>
        <link href="https://github.com/advisories/GHSA-ww4x-rwq6-qpgf"/>
        <updated>2023-02-24T17:31:43.000Z</updated>
        <content type="html"><![CDATA[<p>The request phase of the OmniAuth Ruby gem (1.9.2 and earlier) is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.</p>
<p>As of v2 OmniAuth no longer has the vulnerable configuration by default, but it is still possible to configure OmniAuth in such a way that the web application becomes vulnerable to Cross-Site Request Forgery. There is a recommended remediation described <a href="https://github.com/omniauth/omniauth/wiki/Resolving-CVE-2015-9284">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-9284">https://nvd.nist.gov/vuln/detail/CVE-2015-9284</a></li>
<li><a href="https://github.com/omniauth/omniauth-rails/pull/1">https://github.com/omniauth/omniauth-rails/pull/1</a></li>
<li><a href="https://github.com/omniauth/omniauth/pull/809">https://github.com/omniauth/omniauth/pull/809</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2015/05/26/11">https://www.openwall.com/lists/oss-security/2015/05/26/11</a></li>
<li><a href="https://github.com/omniauth/omniauth/wiki/Resolving-CVE-2015-9284">https://github.com/omniauth/omniauth/wiki/Resolving-CVE-2015-9284</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/commit/aef9f623c0be838234d53baf18977564804da397">https://github.com/rubysec/ruby-advisory-db/commit/aef9f623c0be838234d53baf18977564804da397</a></li>
<li><a href="https://github.com/omniauth/omniauth/releases/tag/v2.0.0">https://github.com/omniauth/omniauth/releases/tag/v2.0.0</a></li>
<li><a href="https://github.com/omniauth/omniauth/issues/1031">https://github.com/omniauth/omniauth/issues/1031</a></li>
<li><a href="https://github.com/omniauth/omniauth/releases/tag/v1.9.2">https://github.com/omniauth/omniauth/releases/tag/v1.9.2</a></li>
<li><a href="https://github.com/advisories/GHSA-ww4x-rwq6-qpgf">https://github.com/advisories/GHSA-ww4x-rwq6-qpgf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ww4x-rwq6-qpgf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-05-29T19:11:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pdf_info] Code injection in pdf_info]]></title>
        <id>https://github.com/advisories/GHSA-9fh3-j99m-f4v7</id>
        <link href="https://github.com/advisories/GHSA-9fh3-j99m-f4v7"/>
        <updated>2023-02-28T14:42:46.000Z</updated>
        <content type="html"><![CDATA[<p>pdf_info 0.5.3 is vulnerable to Command Execution. An attacker using a specially crafted payload may execute OS commands by using command chaining because during object initalization there is no validation performed and the user provided path is used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36231">https://nvd.nist.gov/vuln/detail/CVE-2022-36231</a></li>
<li><a href="https://github.com/affix/CVE-2022-36231">https://github.com/affix/CVE-2022-36231</a></li>
<li><a href="https://rubygems.org/gems/pdf_info">https://rubygems.org/gems/pdf_info</a></li>
<li><a href="https://github.com/newspaperclub/pdf_info/issues/16">https://github.com/newspaperclub/pdf_info/issues/16</a></li>
<li><a href="https://github.com/newspaperclub/pdf_info/pull/15">https://github.com/newspaperclub/pdf_info/pull/15</a></li>
<li><a href="https://github.com/advisories/GHSA-9fh3-j99m-f4v7">https://github.com/advisories/GHSA-9fh3-j99m-f4v7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fh3-j99m-f4v7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-24T00:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello cleartext password storage issue]]></title>
        <id>https://github.com/advisories/GHSA-m4wh-848j-9w2r</id>
        <link href="https://github.com/advisories/GHSA-m4wh-848j-9w2r"/>
        <updated>2023-02-13T17:30:49.000Z</updated>
        <content type="html"><![CDATA[<p>A cleartext password storage issue was discovered in Katello, versions 3.x.x.x before katello 3.12.2. Registry credentials used during container image discovery were inadvertently logged without being masked. This flaw could expose the registry credentials to other privileged users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14825">https://nvd.nist.gov/vuln/detail/CVE-2019-14825</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14825">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14825</a></li>
<li><a href="https://github.com/Katello/katello/pull/8244">https://github.com/Katello/katello/pull/8244</a></li>
<li><a href="https://github.com/Katello/katello/pull/8253">https://github.com/Katello/katello/pull/8253</a></li>
<li><a href="https://github.com/Katello/katello/commit/332484232b66b7907a8104a19ea97eb697b75c79">https://github.com/Katello/katello/commit/332484232b66b7907a8104a19ea97eb697b75c79</a></li>
<li><a href="https://github.com/Katello/katello/commit/4eefa678a905140620ca8b390d48fe318d36e4ea">https://github.com/Katello/katello/commit/4eefa678a905140620ca8b390d48fe318d36e4ea</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1730668">https://bugzilla.redhat.com/show_bug.cgi?id=1730668</a></li>
<li><a href="https://github.com/Katello/katello/commits/3.12.2">https://github.com/Katello/katello/commits/3.12.2</a></li>
<li><a href="https://projects.theforeman.org/issues/27485">https://projects.theforeman.org/issues/27485</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2019-14825.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2019-14825.yml</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3172">https://access.redhat.com/errata/RHSA-2019:3172</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2019-14825">https://access.redhat.com/security/cve/CVE-2019-14825</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1739485">https://bugzilla.redhat.com/show_bug.cgi?id=1739485</a></li>
<li><a href="https://github.com/advisories/GHSA-m4wh-848j-9w2r">https://github.com/advisories/GHSA-m4wh-848j-9w2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4wh-848j-9w2r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:01:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</id>
        <link href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv"/>
        <updated>2023-02-10T22:05:49.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch related to the If-None-Match header. This vulnerability has been assigned the CVE identifier CVE-2023-22795.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact</p>
<p>A specially crafted HTTP If-None-Match header can cause the regular expression engine to enter a state of catastrophic backtracking, when on a version of Ruby below 3.2.0. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious If-None-Match headers before they reach the application.</p>
<p>Users on Ruby 3.2.0 or greater are not affected by this vulnerability.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22795.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22795">https://nvd.nist.gov/vuln/detail/CVE-2023-22795</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22795-possible-redos-based-dos-vulnerability-in-action-dispatch/82118">https://discuss.rubyonrails.org/t/cve-2023-22795-possible-redos-based-dos-vulnerability-in-action-dispatch/82118</a></li>
<li><a href="https://github.com/advisories/GHSA-8xww-x3g3-6jcv">https://github.com/advisories/GHSA-8xww-x3g3-6jcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xww-x3g3-6jcv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:20:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[metasploit-framework] Withdrawn: Fortra GoAnywhere MFT Deserialization of Untrusted Data vulnerability affects metasploit-framework]]></title>
        <id>https://github.com/advisories/GHSA-6pm2-j2v8-h3cj</id>
        <link href="https://github.com/advisories/GHSA-6pm2-j2v8-h3cj"/>
        <updated>2023-02-15T17:39:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn">Withdrawn</h2>
<p>This advisory has been withdrawn because it was incorrectly associated with the metasploit-framework package, which is not affected by this CVE, and the actual vulnerable component does not fit within our supported ecosystems. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Fortra (formerly, HelpSystems) GoAnywhere MFT suffers from a pre-authentication command injection vulnerability in the License Response Servlet due to deserializing an arbitrary attacker-controlled object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0669">https://nvd.nist.gov/vuln/detail/CVE-2023-0669</a></li>
<li><a href="https://attackerkb.com/topics/mg883Nbeva/cve-2023-0669/rapid7-analysis">https://attackerkb.com/topics/mg883Nbeva/cve-2023-0669/rapid7-analysis</a></li>
<li><a href="https://infosec.exchange/@briankrebs/109795710941843934">https://infosec.exchange/@briankrebs/109795710941843934</a></li>
<li><a href="https://my.goanywhere.com/webclient/ViewSecurityAdvisories.xhtml#zerodayfeb1">https://my.goanywhere.com/webclient/ViewSecurityAdvisories.xhtml#zerodayfeb1</a></li>
<li><a href="https://www.rapid7.com/blog/post/2023/02/03/exploitation-of-goanywhere-mft-zero-day-vulnerability/">https://www.rapid7.com/blog/post/2023/02/03/exploitation-of-goanywhere-mft-zero-day-vulnerability/</a></li>
<li><a href="https://github.com/rapid7/metasploit-framework/pull/17607">https://github.com/rapid7/metasploit-framework/pull/17607</a></li>
<li><a href="https://duo.com/decipher/fortra-patches-actively-exploited-zero-day-in-goanywhere-mft">https://duo.com/decipher/fortra-patches-actively-exploited-zero-day-in-goanywhere-mft</a></li>
<li><a href="https://frycos.github.io/vulns4free/2023/02/06/goanywhere-forgotten.html">https://frycos.github.io/vulns4free/2023/02/06/goanywhere-forgotten.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pm2-j2v8-h3cj">https://github.com/advisories/GHSA-6pm2-j2v8-h3cj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pm2-j2v8-h3cj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-06T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openshift-origin-node] openshift-origin-node Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-756m-3qf2-hp58</id>
        <link href="https://github.com/advisories/GHSA-756m-3qf2-hp58"/>
        <updated>2023-02-08T19:59:03.000Z</updated>
        <content type="html"><![CDATA[<p>Ruby gem openshift-origin-node before 2014-02-14 does not contain a cronjob timeout which could result in a denial of service in cron.daily and cron.weekly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0084">https://nvd.nist.gov/vuln/detail/CVE-2014-0084</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-0084">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-0084</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2014:0487">https://access.redhat.com/errata/RHBA-2014:0487</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2014-0084">https://access.redhat.com/security/cve/CVE-2014-0084</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1065198">https://bugzilla.redhat.com/show_bug.cgi?id=1065198</a></li>
<li><a href="https://github.com/advisories/GHSA-756m-3qf2-hp58">https://github.com/advisories/GHSA-756m-3qf2-hp58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-756m-3qf2-hp58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T19:57:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello SQL Injection vulnerabilities]]></title>
        <id>https://github.com/advisories/GHSA-527r-mfmj-prqf</id>
        <link href="https://github.com/advisories/GHSA-527r-mfmj-prqf"/>
        <updated>2023-02-13T16:34:30.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple SQL injection vulnerabilities in the scoped_search function in app/controllers/katello/api/v2/api_controller.rb in Katello allow remote authenticated users to execute arbitrary SQL commands via the (1) sort_by or (2) sort_order parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-3072">https://nvd.nist.gov/vuln/detail/CVE-2016-3072</a></li>
<li><a href="https://github.com/Katello/katello/pull/6051">https://github.com/Katello/katello/pull/6051</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2016:1083">https://access.redhat.com/errata/RHSA-2016:1083</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1322050">https://bugzilla.redhat.com/show_bug.cgi?id=1322050</a></li>
<li><a href="https://github.com/Katello/katello/commit/5645ed4365980a34e30a9c57fe0793dff729e8e4">https://github.com/Katello/katello/commit/5645ed4365980a34e30a9c57fe0793dff729e8e4</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2016-3072">https://access.redhat.com/security/cve/CVE-2016-3072</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2016-3072.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2016-3072.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-527r-mfmj-prqf">https://github.com/advisories/GHSA-527r-mfmj-prqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-527r-mfmj-prqf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:09:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-02-10T22:06:09.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22796">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] ReDoS based DoS vulnerability in Action Dispatch]]></title>
        <id>https://github.com/advisories/GHSA-p84v-45xj-wwqj</id>
        <link href="https://github.com/advisories/GHSA-p84v-45xj-wwqj"/>
        <updated>2023-02-10T22:06:16.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2023-22792.</p>
<p>Versions Affected: &gt;= 3.0.0 Not affected: &lt; 3.0.0 Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>Specially crafted cookies, in combination with a specially crafted X_FORWARDED_HOST header can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious X_FORWARDED_HOST headers before they reach the application.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 6.1 series
7-0-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<p><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2023-22792.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22792">https://nvd.nist.gov/vuln/detail/CVE-2023-22792</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22792-possible-redos-based-dos-vulnerability-in-action-dispatch/82115">https://discuss.rubyonrails.org/t/cve-2023-22792-possible-redos-based-dos-vulnerability-in-action-dispatch/82115</a></li>
<li><a href="https://github.com/advisories/GHSA-p84v-45xj-wwqj">https://github.com/advisories/GHSA-p84v-45xj-wwqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p84v-45xj-wwqj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[clockwork_web] Clockwork Web contains a Cross-Site Request Forgery Vulnerability with Rails < 5.2]]></title>
        <id>https://github.com/advisories/GHSA-p4xx-w6fr-c4w9</id>
        <link href="https://github.com/advisories/GHSA-p4xx-w6fr-c4w9"/>
        <updated>2023-02-10T00:20:58.000Z</updated>
        <content type="html"><![CDATA[<p>Clockwork Web before 0.1.2, when used with Rails before 5.2 is used, allows Cross-Site Request Forgery (CSRF). A CSRF attack works by getting an authorized user to visit a malicious website and then performing requests on behalf of the user. In this instance, actions include enabling and disabling jobs. All users running an affected release on Rails &lt; 5.2 should upgrade immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25015">https://nvd.nist.gov/vuln/detail/CVE-2023-25015</a></li>
<li><a href="https://github.com/ankane/clockwork_web/issues/4">https://github.com/ankane/clockwork_web/issues/4</a></li>
<li><a href="https://github.com/ankane/clockwork_web/commit/ec2896503ee231588547c2fad4cb93a94e78f857">https://github.com/ankane/clockwork_web/commit/ec2896503ee231588547c2fad4cb93a94e78f857</a></li>
<li><a href="https://github.com/ankane/clockwork_web/compare/v0.1.1...v0.1.2">https://github.com/ankane/clockwork_web/compare/v0.1.1...v0.1.2</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/clockwork_web/CVE-2023-25015.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/clockwork_web/CVE-2023-25015.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-p4xx-w6fr-c4w9">https://github.com/advisories/GHSA-p4xx-w6fr-c4w9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4xx-w6fr-c4w9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-02T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[publify_core] Publify contains Weak Password Requirements]]></title>
        <id>https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</id>
        <link href="https://github.com/advisories/GHSA-g7gf-2rqw-5rwx"/>
        <updated>2023-02-21T05:06:18.000Z</updated>
        <content type="html"><![CDATA[<p>Weak Password Requirements in GitHub repository publify/publify prior to 9.2.10.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0569">https://nvd.nist.gov/vuln/detail/CVE-2023-0569</a></li>
<li><a href="https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d">https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d</a></li>
<li><a href="https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9">https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/publify_core/CVE-2023-0569.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/publify_core/CVE-2023-0569.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-g7gf-2rqw-5rwx">https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7gf-2rqw-5rwx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-29T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activemodel] Duplicate Advisory: Moderate severity vulnerability that affects activemodel]]></title>
        <id>https://github.com/advisories/GHSA-v543-gqhh-6gww</id>
        <link href="https://github.com/advisories/GHSA-v543-gqhh-6gww"/>
        <updated>2023-01-31T20:39:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of <a href="https://github.com/advisories/GHSA-543v-gj2c-r3ch">GHSA-543v-gj2c-r3ch</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-0753">https://nvd.nist.gov/vuln/detail/CVE-2016-0753</a></li>
<li><a href="https://github.com/advisories/GHSA-v543-gqhh-6gww">https://github.com/advisories/GHSA-v543-gqhh-6gww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v543-gqhh-6gww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-09-17T21:55:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activemodel] Duplicate Advisory: Moderate severity vulnerability that affects activemodel]]></title>
        <id>https://github.com/advisories/GHSA-v543-gqhh-6gww</id>
        <link href="https://github.com/advisories/GHSA-v543-gqhh-6gww"/>
        <updated>2023-01-31T20:39:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of <a href="https://github.com/advisories/GHSA-543v-gj2c-r3ch">GHSA-543v-gj2c-r3ch</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-0753">https://nvd.nist.gov/vuln/detail/CVE-2016-0753</a></li>
<li><a href="https://github.com/advisories/GHSA-v543-gqhh-6gww">https://github.com/advisories/GHSA-v543-gqhh-6gww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v543-gqhh-6gww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-09-17T21:55:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-02-10T22:06:09.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22796">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-02-16T21:54:31.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44566">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>
<li><a href="https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-02-16T21:54:31.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44566">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>
<li><a href="https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sanitize] Improper neutralization of `noscript` element content may allow XSS in Sanitize]]></title>
        <id>https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</id>
        <link href="https://github.com/advisories/GHSA-fw3g-2h3j-qmm7"/>
        <updated>2023-02-13T16:34:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using carefully crafted input, an attacker may be able to sneak arbitrary HTML through Sanitize <code>&gt;= 5.0.0, &lt; 6.0.1</code> when Sanitize is configured with a custom allowlist that allows <code>noscript</code> elements. This could result in XSS (cross-site scripting) or other undesired behavior when that HTML is rendered in a browser.</p>
<p>Sanitize's default configs don't allow <code>noscript</code> elements and are not vulnerable. This issue only affects users who are using a custom config that adds <code>noscript</code> to the element allowlist.</p>
<h3 id="patches">Patches</h3>
<p>Sanitize <code>&gt;= 6.0.1</code> always removes <code>noscript</code> elements and their contents, even when <code>noscript</code> is in the allowlist.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users who are unable to upgrade can prevent this issue by using one of Sanitize's default configs or by ensuring that their custom config does not include <code>noscript</code> in the element allowlist.</p>
<h3 id="details">Details</h3>
<p>The root cause of this issue is that HTML parsing rules treat the contents of a <code>noscript</code> element differently depending on whether scripting is enabled in the user agent. Nokogiri (the HTML parser Sanitize uses) doesn't support scripting so it follows the "scripting disabled" rules, but a web browser with scripting enabled will follow the "scripting enabled" rules. This means that Sanitize can't reliably make the contents of a <code>noscript</code> element safe for scripting enabled browsers. The safest thing to do is to remove the element and its contents entirely, which is now what Sanitize does in version 6.0.1 and later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rgrove/sanitize/releases/tag/v6.0.1">Release Notes</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>Thanks to David Klein from <a href="https://www.tu-braunschweig.de/en/ias">TU Braunschweig</a> (@leeN) for reporting this issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rgrove/sanitize/security/advisories/GHSA-fw3g-2h3j-qmm7">https://github.com/rgrove/sanitize/security/advisories/GHSA-fw3g-2h3j-qmm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-23627">https://nvd.nist.gov/vuln/detail/CVE-2023-23627</a></li>
<li><a href="https://github.com/rgrove/sanitize/commit/ec14265e530dc3fe31ce2ef773594d3a97778d22">https://github.com/rgrove/sanitize/commit/ec14265e530dc3fe31ce2ef773594d3a97778d22</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sanitize/CVE-2023-23627.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sanitize/CVE-2023-23627.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fw3g-2h3j-qmm7">https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw3g-2h3j-qmm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-28T01:17:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smashing] Smashing Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-254j-mmc5-qhpx</id>
        <link href="https://github.com/advisories/GHSA-254j-mmc5-qhpx"/>
        <updated>2023-03-06T20:43:20.000Z</updated>
        <content type="html"><![CDATA[<p>Smashing 1.3.4 is vulnerable to Cross Site Scripting (XSS). A URL for a widget can be crafted and used to execute JavaScript on the victim's computer. The JavaScript code can then steal data available in the session/cookies depending on the user environment (e.g. if re-using internal URL's for deploying, or cookies that are very permissive) private information may be retrieved by the attacker.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-35440">https://nvd.nist.gov/vuln/detail/CVE-2021-35440</a></li>
<li><a href="https://github.com/Smashing/smashing/pull/186">https://github.com/Smashing/smashing/pull/186</a></li>
<li><a href="https://github.com/Smashing/smashing/pull/186#issuecomment-871727614">https://github.com/Smashing/smashing/pull/186#issuecomment-871727614</a></li>
<li><a href="https://github.com/Smashing/smashing/blob/ad7325f159f89854ca4e7d94e7be9bee507b6d46/CHANGELOG.md">https://github.com/Smashing/smashing/blob/ad7325f159f89854ca4e7d94e7be9bee507b6d46/CHANGELOG.md</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/smashing/CVE-2021-35440.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/smashing/CVE-2021-35440.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-254j-mmc5-qhpx">https://github.com/advisories/GHSA-254j-mmc5-qhpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-254j-mmc5-qhpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:56.000Z</published>
    </entry>
</feed>