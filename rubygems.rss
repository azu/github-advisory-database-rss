<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2024-07-27T14:01:17.775Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[rexml] REXML denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4xqq-m2hx-25v8</id>
        <link href="https://github.com/advisories/GHSA-4xqq-m2hx-25v8"/>
        <updated>2024-07-16T19:49:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The REXML gem before 3.3.1 has some DoS vulnerabilities when it parses an XML that has many specific characters such as <code>&lt;</code>, <code>0</code> and <code>%&gt;</code>.</p>
<p>If you need to parse untrusted XMLs, you may be impacted to these vulnerabilities.</p>
<h3 id="patches">Patches</h3>
<p>The REXML gem 3.3.2 or later include the patches to fix these vulnerabilities.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Don't parse untrusted XMLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh">https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh</a> : This is a similar vulnerability</li>
<li><a href="https://www.ruby-lang.org/en/news/2024/07/16/dos-rexml-cve-2024-39908/">https://www.ruby-lang.org/en/news/2024/07/16/dos-rexml-cve-2024-39908/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ruby/rexml/security/advisories/GHSA-4xqq-m2hx-25v8">https://github.com/ruby/rexml/security/advisories/GHSA-4xqq-m2hx-25v8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39908">https://nvd.nist.gov/vuln/detail/CVE-2024-39908</a></li>
<li><a href="https://github.com/ruby/rexml/releases/tag/v3.3.2">https://github.com/ruby/rexml/releases/tag/v3.3.2</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rexml/CVE-2024-39908.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rexml/CVE-2024-39908.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2024/07/16/dos-rexml-cve-2024-39908">https://www.ruby-lang.org/en/news/2024/07/16/dos-rexml-cve-2024-39908</a></li>
<li><a href="https://github.com/advisories/GHSA-4xqq-m2hx-25v8">https://github.com/advisories/GHSA-4xqq-m2hx-25v8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xqq-m2hx-25v8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-16T19:49:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim-admin] Decidim cross-site scripting (XSS) in the admin panel]]></title>
        <id>https://github.com/advisories/GHSA-529p-jj47-w3m3</id>
        <link href="https://github.com/advisories/GHSA-529p-jj47-w3m3"/>
        <updated>2024-07-11T21:36:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The admin panel is subject to potential XSS attach in case the attacker manages to modify some records being uploaded to the server.</p>
<p>The attacker is able to change  e.g. to <code>&lt;svg onload=alert('XSS')&gt;</code> if they know how to craft these requests themselves. And then enter the returned blob ID to the form inputs manually by modifying the edit page source.</p>
<h3 id="patches">Patches</h3>
<p>Available in versions 0.27.6 and 0.28.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Review the user accounts that have access to the admin panel (i.e. general Administrators, and participatory space's Administrators) and remove access to them if they don't need it. </p>
<h3 id="references">References</h3>
<p>OWASP ASVS v4.0.3-5.1.3</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-529p-jj47-w3m3">https://github.com/decidim/decidim/security/advisories/GHSA-529p-jj47-w3m3</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.6">https://github.com/decidim/decidim/releases/tag/v0.27.6</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.28.1">https://github.com/decidim/decidim/releases/tag/v0.28.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27095">https://nvd.nist.gov/vuln/detail/CVE-2024-27095</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim-admin/CVE-2024-27095.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim-admin/CVE-2024-27095.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-529p-jj47-w3m3">https://github.com/advisories/GHSA-529p-jj47-w3m3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-529p-jj47-w3m3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-10T16:02:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim-admin] Decidim cross-site scripting (XSS) in the admin panel]]></title>
        <id>https://github.com/advisories/GHSA-529p-jj47-w3m3</id>
        <link href="https://github.com/advisories/GHSA-529p-jj47-w3m3"/>
        <updated>2024-07-11T21:36:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The admin panel is subject to potential XSS attach in case the attacker manages to modify some records being uploaded to the server.</p>
<p>The attacker is able to change  e.g. to <code>&lt;svg onload=alert('XSS')&gt;</code> if they know how to craft these requests themselves. And then enter the returned blob ID to the form inputs manually by modifying the edit page source.</p>
<h3 id="patches">Patches</h3>
<p>Available in versions 0.27.6 and 0.28.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Review the user accounts that have access to the admin panel (i.e. general Administrators, and participatory space's Administrators) and remove access to them if they don't need it. </p>
<h3 id="references">References</h3>
<p>OWASP ASVS v4.0.3-5.1.3</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-529p-jj47-w3m3">https://github.com/decidim/decidim/security/advisories/GHSA-529p-jj47-w3m3</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.6">https://github.com/decidim/decidim/releases/tag/v0.27.6</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.28.1">https://github.com/decidim/decidim/releases/tag/v0.28.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27095">https://nvd.nist.gov/vuln/detail/CVE-2024-27095</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim-admin/CVE-2024-27095.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim-admin/CVE-2024-27095.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-529p-jj47-w3m3">https://github.com/advisories/GHSA-529p-jj47-w3m3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-529p-jj47-w3m3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-10T16:02:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim] Decidim cross-site scripting (XSS) in the pagination]]></title>
        <id>https://github.com/advisories/GHSA-7cx8-44pc-xv3q</id>
        <link href="https://github.com/advisories/GHSA-7cx8-44pc-xv3q"/>
        <updated>2024-07-24T13:54:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The pagination feature used in searches and filters is subject to potential XSS attack through a malformed URL using the GET parameter <code>per_page</code>. </p>
<h3 id="patches">Patches</h3>
<p>Not available</p>
<h3 id="workarounds">Workarounds</h3>
<p>Not available</p>
<h3 id="references">References</h3>
<p>OWASP ASVS v4.0.3-5.1.3</p>
<h3 id="credits">Credits</h3>
<p>This issue was discovered in a security audit organized by the <a href="https://partizipationsbuero.at/">mitgestalten Partizipationsb√ºro</a> and funded by <a href="https://www.netidee.at/">netidee</a> against Decidim done during April 2024. The security audit was implemented by  <a href="https://www.ait.ac.at/">AIT Austrian Institute of Technology GmbH</a>,</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-7cx8-44pc-xv3q">https://github.com/decidim/decidim/security/advisories/GHSA-7cx8-44pc-xv3q</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.6">https://github.com/decidim/decidim/releases/tag/v0.27.6</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.28.1">https://github.com/decidim/decidim/releases/tag/v0.28.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32469">https://nvd.nist.gov/vuln/detail/CVE-2024-32469</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-32469.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-32469.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-7cx8-44pc-xv3q">https://github.com/advisories/GHSA-7cx8-44pc-xv3q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cx8-44pc-xv3q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T15:43:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim] Decidim cross-site scripting (XSS) in the pagination]]></title>
        <id>https://github.com/advisories/GHSA-7cx8-44pc-xv3q</id>
        <link href="https://github.com/advisories/GHSA-7cx8-44pc-xv3q"/>
        <updated>2024-07-24T13:54:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The pagination feature used in searches and filters is subject to potential XSS attack through a malformed URL using the GET parameter <code>per_page</code>. </p>
<h3 id="patches">Patches</h3>
<p>Not available</p>
<h3 id="workarounds">Workarounds</h3>
<p>Not available</p>
<h3 id="references">References</h3>
<p>OWASP ASVS v4.0.3-5.1.3</p>
<h3 id="credits">Credits</h3>
<p>This issue was discovered in a security audit organized by the <a href="https://partizipationsbuero.at/">mitgestalten Partizipationsb√ºro</a> and funded by <a href="https://www.netidee.at/">netidee</a> against Decidim done during April 2024. The security audit was implemented by  <a href="https://www.ait.ac.at/">AIT Austrian Institute of Technology GmbH</a>,</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-7cx8-44pc-xv3q">https://github.com/decidim/decidim/security/advisories/GHSA-7cx8-44pc-xv3q</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.6">https://github.com/decidim/decidim/releases/tag/v0.27.6</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.28.1">https://github.com/decidim/decidim/releases/tag/v0.28.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32469">https://nvd.nist.gov/vuln/detail/CVE-2024-32469</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-32469.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-32469.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-7cx8-44pc-xv3q">https://github.com/advisories/GHSA-7cx8-44pc-xv3q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cx8-44pc-xv3q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T15:43:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[decidim] Decidim vulnerable to data disclosure through the embed feature]]></title>
        <id>https://github.com/advisories/GHSA-qcj6-vxwx-4rqv</id>
        <link href="https://github.com/advisories/GHSA-qcj6-vxwx-4rqv"/>
        <updated>2024-07-11T21:36:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If an attacker can infer the slug or URL of an unpublished or private resource, and this resource can be embedded (such as a Participatory Process, an Assembly, a Proposal, a Result, etc), then some data of this resource could be accessed. </p>
<h3 id="patches">Patches</h3>
<p>version 0.27.6</p>
<p><a href="https://github.com/decidim/decidim/commit/1756fa639ef393ca8e8bb16221cab2e2e7875705">https://github.com/decidim/decidim/commit/1756fa639ef393ca8e8bb16221cab2e2e7875705</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Disallow access through your web server to the URLs finished with <code>/embed.html</code></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/decidim/decidim/security/advisories/GHSA-qcj6-vxwx-4rqv">https://github.com/decidim/decidim/security/advisories/GHSA-qcj6-vxwx-4rqv</a></li>
<li><a href="https://github.com/decidim/decidim/pull/12528">https://github.com/decidim/decidim/pull/12528</a></li>
<li><a href="https://github.com/decidim/decidim/commit/1756fa639ef393ca8e8bb16221cab2e2e7875705">https://github.com/decidim/decidim/commit/1756fa639ef393ca8e8bb16221cab2e2e7875705</a></li>
<li><a href="https://github.com/decidim/decidim/releases/tag/v0.27.6">https://github.com/decidim/decidim/releases/tag/v0.27.6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27090">https://nvd.nist.gov/vuln/detail/CVE-2024-27090</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-27090.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/decidim/CVE-2024-27090.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-qcj6-vxwx-4rqv">https://github.com/advisories/GHSA-qcj6-vxwx-4rqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcj6-vxwx-4rqv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-10T15:10:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails_admin] RailsAdmin Cross-site Scripting vulnerability in the list view]]></title>
        <id>https://github.com/advisories/GHSA-8qgm-g2vv-vwvc</id>
        <link href="https://github.com/advisories/GHSA-8qgm-g2vv-vwvc"/>
        <updated>2024-07-11T20:24:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>RailsAdmin list view has the XSS vulnerability, caused by improperly-escaped HTML title attribute.
The issue was originally reported in <a href="https://github.com/railsadminteam/rails_admin/issues/3686">https://github.com/railsadminteam/rails_admin/issues/3686</a>.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://rubygems.org/gems/rails_admin/versions/3.1.4">3.1.4</a>. The vulnerability itself was patched in 3.1.3 but it has a functionality issue.
Initially the vulnerability was thought to exist in versions before 3.0, but it didn't. 2.x users can stay on 2.2.1.</p>
<h3 id="workarounds">Workarounds</h3>
<ol>
<li>Copy the index view (located under the path <code>app/views/rails_admin/main/index.html.erb</code>) from the RailsAdmin version you use, and place it into your application by using the same path.</li>
<li>Open the view file by an editor, and change the way to populate the td tag:</li>
</ol>
<pre><code class="language-diff">               &lt;% properties.map{ |property| property.bind(:object, object) }.each do |property| %&gt;
                 &lt;% value = property.pretty_value %&gt;
-                &lt;td class="&lt;%= [property.sticky? &amp;&amp; 'sticky', property.css_class, property.type_css_class].select(&amp;:present?).join(' ') %&gt;" title="&lt;%= value %&gt;"&gt;
+                &lt;%= content_tag(:td, class: [property.sticky? &amp;&amp; 'sticky', property.css_class, property.type_css_class].select(&amp;:present?), title: strip_tags(value.to_s)) do %&gt;
                   &lt;%= value %&gt;
-                &lt;/td&gt;
+                &lt;% end %&gt;
               &lt;% end %&gt;
</code></pre>
<p><strong>Note:</strong> The view file created by this needs to be removed after upgrading RailsAdmin afterwards, unless this old view continue to be used. Only do this if you can't upgrade RailsAdmin now for a reason.</p>
<h3 id="references">References</h3>
<p><a href="https://owasp.org/www-community/attacks/xss/">https://owasp.org/www-community/attacks/xss/</a>
<a href="https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags">https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/railsadminteam/rails_admin/security/advisories/GHSA-8qgm-g2vv-vwvc">https://github.com/railsadminteam/rails_admin/security/advisories/GHSA-8qgm-g2vv-vwvc</a></li>
<li><a href="https://github.com/railsadminteam/rails_admin/issues/3686">https://github.com/railsadminteam/rails_admin/issues/3686</a></li>
<li><a href="https://github.com/railsadminteam/rails_admin/commit/b5a287d82e2cbd1737a1a01e11ede2911cce7fef">https://github.com/railsadminteam/rails_admin/commit/b5a287d82e2cbd1737a1a01e11ede2911cce7fef</a></li>
<li><a href="https://github.com/railsadminteam/rails_admin/commit/d84b39884059c4ed50197cec8522cca029a17673">https://github.com/railsadminteam/rails_admin/commit/d84b39884059c4ed50197cec8522cca029a17673</a></li>
<li><a href="https://rubygems.org/gems/rails_admin/versions/2.3.0">https://rubygems.org/gems/rails_admin/versions/2.3.0</a></li>
<li><a href="https://rubygems.org/gems/rails_admin/versions/3.1.3">https://rubygems.org/gems/rails_admin/versions/3.1.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39308">https://nvd.nist.gov/vuln/detail/CVE-2024-39308</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails_admin/CVE-2024-39308.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails_admin/CVE-2024-39308.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-8qgm-g2vv-vwvc">https://github.com/advisories/GHSA-8qgm-g2vv-vwvc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qgm-g2vv-vwvc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-08T14:14:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack ReDoS Vulnerability in HTTP Accept Headers Parsing]]></title>
        <id>https://github.com/advisories/GHSA-cj83-2ww7-mvq7</id>
        <link href="https://github.com/advisories/GHSA-cj83-2ww7-mvq7"/>
        <updated>2024-07-05T17:53:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A Regular Expression Denial of Service (ReDoS) vulnerability exists in the <code>Rack::Request::Helpers</code> module when parsing HTTP Accept headers. This vulnerability can be exploited by an attacker sending specially crafted <code>Accept-Encoding</code> or <code>Accept-Language</code> headers, causing the server to spend excessive time processing the request and leading to a Denial of Service (DoS).</p>
<h3 id="details">Details</h3>
<p>The fix for <a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a> was not applied to the main branch and thus while the issue was fixed for the Rack v3.0 release series, it was not fixed in the v3.1 release series until v3.1.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f">https://github.com/rack/rack/security/advisories/GHSA-54rr-7fvw-6x8f</a></li>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-cj83-2ww7-mvq7">https://github.com/rack/rack/security/advisories/GHSA-cj83-2ww7-mvq7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39316">https://nvd.nist.gov/vuln/detail/CVE-2024-39316</a></li>
<li><a href="https://github.com/rack/rack/commit/412c980450ca729ee37f90a2661f166a9665e058">https://github.com/rack/rack/commit/412c980450ca729ee37f90a2661f166a9665e058</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-39316.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2024-39316.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-cj83-2ww7-mvq7">https://github.com/advisories/GHSA-cj83-2ww7-mvq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj83-2ww7-mvq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-03T17:03:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[avo] avo vulnerable to Stored XSS (Cross Site Scripting) in html content based fields]]></title>
        <id>https://github.com/advisories/GHSA-5cr9-5jx3-2g39</id>
        <link href="https://github.com/advisories/GHSA-5cr9-5jx3-2g39"/>
        <updated>2024-06-25T16:56:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Some avo fields are vulnerable to XSS when rendering html based content.</p>
<h3 id="details">Details</h3>
<p>During the analysis of the web application, a rendered field was discovered that did not filter JS / HTML tags in a safe way and can be abused to execute js code on a client side. The trix field uses the trix editor in the backend to edit rich text data which basically operates with html tags. To display the stored data in a rendered view, the HasHTMLAttributes concern is used. This can be exploited by an attacker to store javascript code in any trix field by intercepting the request and modifying the post data, as the trix editor does not allow adding custom html or js tags on the frontend.</p>
<h3 id="poc">PoC</h3>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243434868-47857054-9b20-437f-842f-0750d53c9b0e.png">
<em>Adding javascript in the post request which is used when editing a "post" resource (body is declared as a trix field)</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243435009-948593a0-5179-4368-977c-ec36d2373925.png">
<em>Successful execution of JS code on live demo environment</em></p>
<h3 id="impact">Impact</h3>
<p>Unlike non-persistent XSS, persistent XSS does not require a social engineering phase. Victims of this attack do not need to be tricked into clicking a link or something like that. However, by exploiting such a vulnerability on this particular target, attackers may be able to gain access to accounts that require special protection, such as administrators of the web service, which is what Avo is primarily intended to be used for.</p>
<h3 id="recommendation">Recommendation</h3>
<p>The content of a field that contains html code should be sanitized using the according rails helper which uses a whitelist of known-safe tags and attributes. Also this security consideration should be applied to the ‚Äúas_html‚Äù attribute as well because it may contain user controlled input as well.</p>
<p><a href="https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html">https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/avo-hq/avo/security/advisories/GHSA-5cr9-5jx3-2g39">https://github.com/avo-hq/avo/security/advisories/GHSA-5cr9-5jx3-2g39</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34103">https://nvd.nist.gov/vuln/detail/CVE-2023-34103</a></li>
<li><a href="https://github.com/avo-hq/avo/commit/7891c01e1fba9ca5d7dbccc43d27f385e5d08563">https://github.com/avo-hq/avo/commit/7891c01e1fba9ca5d7dbccc43d27f385e5d08563</a></li>
<li><a href="https://github.com/avo-hq/avo/releases/tag/v2.33.3">https://github.com/avo-hq/avo/releases/tag/v2.33.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-5cr9-5jx3-2g39">https://github.com/advisories/GHSA-5cr9-5jx3-2g39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5cr9-5jx3-2g39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T14:13:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[avo] avo vulnerable to Stored XSS (Cross Site Scripting) in html content based fields]]></title>
        <id>https://github.com/advisories/GHSA-5cr9-5jx3-2g39</id>
        <link href="https://github.com/advisories/GHSA-5cr9-5jx3-2g39"/>
        <updated>2024-06-25T16:56:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Some avo fields are vulnerable to XSS when rendering html based content.</p>
<h3 id="details">Details</h3>
<p>During the analysis of the web application, a rendered field was discovered that did not filter JS / HTML tags in a safe way and can be abused to execute js code on a client side. The trix field uses the trix editor in the backend to edit rich text data which basically operates with html tags. To display the stored data in a rendered view, the HasHTMLAttributes concern is used. This can be exploited by an attacker to store javascript code in any trix field by intercepting the request and modifying the post data, as the trix editor does not allow adding custom html or js tags on the frontend.</p>
<h3 id="poc">PoC</h3>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243434868-47857054-9b20-437f-842f-0750d53c9b0e.png">
<em>Adding javascript in the post request which is used when editing a "post" resource (body is declared as a trix field)</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243435009-948593a0-5179-4368-977c-ec36d2373925.png">
<em>Successful execution of JS code on live demo environment</em></p>
<h3 id="impact">Impact</h3>
<p>Unlike non-persistent XSS, persistent XSS does not require a social engineering phase. Victims of this attack do not need to be tricked into clicking a link or something like that. However, by exploiting such a vulnerability on this particular target, attackers may be able to gain access to accounts that require special protection, such as administrators of the web service, which is what Avo is primarily intended to be used for.</p>
<h3 id="recommendation">Recommendation</h3>
<p>The content of a field that contains html code should be sanitized using the according rails helper which uses a whitelist of known-safe tags and attributes. Also this security consideration should be applied to the ‚Äúas_html‚Äù attribute as well because it may contain user controlled input as well.</p>
<p><a href="https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html">https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/avo-hq/avo/security/advisories/GHSA-5cr9-5jx3-2g39">https://github.com/avo-hq/avo/security/advisories/GHSA-5cr9-5jx3-2g39</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34103">https://nvd.nist.gov/vuln/detail/CVE-2023-34103</a></li>
<li><a href="https://github.com/avo-hq/avo/commit/7891c01e1fba9ca5d7dbccc43d27f385e5d08563">https://github.com/avo-hq/avo/commit/7891c01e1fba9ca5d7dbccc43d27f385e5d08563</a></li>
<li><a href="https://github.com/avo-hq/avo/releases/tag/v2.33.3">https://github.com/avo-hq/avo/releases/tag/v2.33.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-5cr9-5jx3-2g39">https://github.com/advisories/GHSA-5cr9-5jx3-2g39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5cr9-5jx3-2g39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T14:13:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[avo] avo possible unsafe reflection / partial DoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-86h2-2g4g-29qx</id>
        <link href="https://github.com/advisories/GHSA-86h2-2g4g-29qx"/>
        <updated>2024-06-25T16:56:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The polymorphic field type stores the classes to operate on when updating a record with user input, and does not validate them in the back end. This can lead to unexpected behavior, remote code execution, or application crashes when viewing a manipulated record. </p>
<h3 id="details">Details</h3>
<p>After reviewing the polymorphic field implementation and performing some black box approaches, we identified a potential security issue related to the use of safe_constantize / constantize. This Rails functionality is capable of searching for classes within the Rails context and returning the class for further use. Because Avo does not validate user input when updating or creating a new polymorphic resource, it is possible to create database entries with completely different or invalid class names than the preselected ones. Avo assumes that the class specified by the user request is a valid one and attempts to work with it, which may result in dangerous behavior and code execution.</p>
<h3 id="poc">PoC</h3>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243437854-933d94c8-4ae0-43fe-b2da-35b103e28796.png">
<em>In the test scenario we choose the demo app and the review resource which has a polymorphic reviewable field.</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243437954-2d947c6d-4e97-4e91-a442-405e553dd047.png">
<em>Intercepting the request and switching the review[reviewable_type] from ‚ÄúFish‚Äù to ‚ÄúFile‚Äù which is a real class inside Rails</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438031-109de6d0-9370-4318-b18e-c5bcea61cf54.png">
<em>Corrupting the database with unusable classes will cause a crash at the application while viewing the new record or the index view (partial DoS)</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438104-80df5aae-86de-40fc-870d-689a03cae389.png">
<em>Manual delete the corrupted resource in order to recover the applications functionality</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438182-1e7eef54-73ba-47d0-b5df-4bad14859af3.png">
<em>Of course it is possible to use other class names or namespaces. The local development environment displays the backend error message when visiting a corrupted record. Avo is trying to apply a scope to this class that does not exist.</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438257-dbb59153-58a8-4421-b796-f2a0f2c20083.png">
<em>Specifying an invalid class name in the parameter will cause the application to crash again while trying constanize the provided string</em></p>
<h3 id="impact">Impact</h3>
<p>The final exploitation of this vulnerability requires more time than is provided in this assessment, but initial testing of the post request shows the potential critical risk. The classes could be instantiated at any point in the code and this could also lead to code execution.</p>
<h3 id="recommendation">Recommendation</h3>
<p>Avo should be configured to never trust user-supplied input, especially when defining classes for records. In this particular case, Avo can evaluate the options list given for the polymorphic field and only allow strings from that list. With this white-list approach, an attacker cannot supply unintended classes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/avo-hq/avo/security/advisories/GHSA-86h2-2g4g-29qx">https://github.com/avo-hq/avo/security/advisories/GHSA-86h2-2g4g-29qx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34102">https://nvd.nist.gov/vuln/detail/CVE-2023-34102</a></li>
<li><a href="https://github.com/avo-hq/avo/commit/ec117882ddb1b519481bdd046dc3cfa4474e6e17">https://github.com/avo-hq/avo/commit/ec117882ddb1b519481bdd046dc3cfa4474e6e17</a></li>
<li><a href="https://github.com/avo-hq/avo/releases/tag/v2.33.3">https://github.com/avo-hq/avo/releases/tag/v2.33.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34102.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34102.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-86h2-2g4g-29qx">https://github.com/advisories/GHSA-86h2-2g4g-29qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86h2-2g4g-29qx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T16:46:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[avo] avo possible unsafe reflection / partial DoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-86h2-2g4g-29qx</id>
        <link href="https://github.com/advisories/GHSA-86h2-2g4g-29qx"/>
        <updated>2024-06-25T16:56:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The polymorphic field type stores the classes to operate on when updating a record with user input, and does not validate them in the back end. This can lead to unexpected behavior, remote code execution, or application crashes when viewing a manipulated record. </p>
<h3 id="details">Details</h3>
<p>After reviewing the polymorphic field implementation and performing some black box approaches, we identified a potential security issue related to the use of safe_constantize / constantize. This Rails functionality is capable of searching for classes within the Rails context and returning the class for further use. Because Avo does not validate user input when updating or creating a new polymorphic resource, it is possible to create database entries with completely different or invalid class names than the preselected ones. Avo assumes that the class specified by the user request is a valid one and attempts to work with it, which may result in dangerous behavior and code execution.</p>
<h3 id="poc">PoC</h3>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243437854-933d94c8-4ae0-43fe-b2da-35b103e28796.png">
<em>In the test scenario we choose the demo app and the review resource which has a polymorphic reviewable field.</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243437954-2d947c6d-4e97-4e91-a442-405e553dd047.png">
<em>Intercepting the request and switching the review[reviewable_type] from ‚ÄúFish‚Äù to ‚ÄúFile‚Äù which is a real class inside Rails</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438031-109de6d0-9370-4318-b18e-c5bcea61cf54.png">
<em>Corrupting the database with unusable classes will cause a crash at the application while viewing the new record or the index view (partial DoS)</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438104-80df5aae-86de-40fc-870d-689a03cae389.png">
<em>Manual delete the corrupted resource in order to recover the applications functionality</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438182-1e7eef54-73ba-47d0-b5df-4bad14859af3.png">
<em>Of course it is possible to use other class names or namespaces. The local development environment displays the backend error message when visiting a corrupted record. Avo is trying to apply a scope to this class that does not exist.</em></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/26464774/243438257-dbb59153-58a8-4421-b796-f2a0f2c20083.png">
<em>Specifying an invalid class name in the parameter will cause the application to crash again while trying constanize the provided string</em></p>
<h3 id="impact">Impact</h3>
<p>The final exploitation of this vulnerability requires more time than is provided in this assessment, but initial testing of the post request shows the potential critical risk. The classes could be instantiated at any point in the code and this could also lead to code execution.</p>
<h3 id="recommendation">Recommendation</h3>
<p>Avo should be configured to never trust user-supplied input, especially when defining classes for records. In this particular case, Avo can evaluate the options list given for the polymorphic field and only allow strings from that list. With this white-list approach, an attacker cannot supply unintended classes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/avo-hq/avo/security/advisories/GHSA-86h2-2g4g-29qx">https://github.com/avo-hq/avo/security/advisories/GHSA-86h2-2g4g-29qx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34102">https://nvd.nist.gov/vuln/detail/CVE-2023-34102</a></li>
<li><a href="https://github.com/avo-hq/avo/commit/ec117882ddb1b519481bdd046dc3cfa4474e6e17">https://github.com/avo-hq/avo/commit/ec117882ddb1b519481bdd046dc3cfa4474e6e17</a></li>
<li><a href="https://github.com/avo-hq/avo/releases/tag/v2.33.3">https://github.com/avo-hq/avo/releases/tag/v2.33.3</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34102.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/avo/CVE-2023-34102.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-86h2-2g4g-29qx">https://github.com/advisories/GHSA-86h2-2g4g-29qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86h2-2g4g-29qx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T16:46:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Missing security headers in Action Pack on non-HTML responses]]></title>
        <id>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</id>
        <link href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7"/>
        <updated>2024-06-05T21:54:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="permissions-policy-is-only-served-on-html-content-type">Permissions-Policy is Only Served on HTML Content-Type</h1>
<p>The application configurable Permissions-Policy is only served on responses
with an HTML related Content-Type.</p>
<p>This has been assigned the CVE identifier CVE-2024-28103.</p>
<p>Versions Affected:  &gt;= 6.1.0
Not affected:       &lt; 6.1.0
Fixed Versions:     6.1.7.8, 7.0.8.4, and 7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>Responses with a non-HTML Content-Type are not serving the configured Permissions-Policy. There are certain non-HTML Content-Types that would benefit from having the Permissions-Policy enforced.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the supported release series in accordance with our 
<a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a>
regarding security issues. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>6-1-include-permissions-policy-header-on-non-html.patch - Patch for 6.1 series</li>
<li>7-0-include-permissions-policy-header-on-non-html.patch - Patch for 7.0 series</li>
<li>7-1-include-permissions-policy-header-on-non-html.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/shinkbr">shinkbr</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28103">https://nvd.nist.gov/vuln/detail/CVE-2024-28103</a></li>
<li><a href="https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523">https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/advisories/GHSA-fwhr-88qx-h9g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Missing security headers in Action Pack on non-HTML responses]]></title>
        <id>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</id>
        <link href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7"/>
        <updated>2024-06-05T21:54:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="permissions-policy-is-only-served-on-html-content-type">Permissions-Policy is Only Served on HTML Content-Type</h1>
<p>The application configurable Permissions-Policy is only served on responses
with an HTML related Content-Type.</p>
<p>This has been assigned the CVE identifier CVE-2024-28103.</p>
<p>Versions Affected:  &gt;= 6.1.0
Not affected:       &lt; 6.1.0
Fixed Versions:     6.1.7.8, 7.0.8.4, and 7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>Responses with a non-HTML Content-Type are not serving the configured Permissions-Policy. There are certain non-HTML Content-Types that would benefit from having the Permissions-Policy enforced.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the supported release series in accordance with our 
<a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a>
regarding security issues. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>6-1-include-permissions-policy-header-on-non-html.patch - Patch for 6.1 series</li>
<li>7-0-include-permissions-policy-header-on-non-html.patch - Patch for 7.0 series</li>
<li>7-1-include-permissions-policy-header-on-non-html.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/shinkbr">shinkbr</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28103">https://nvd.nist.gov/vuln/detail/CVE-2024-28103</a></li>
<li><a href="https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523">https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/advisories/GHSA-fwhr-88qx-h9g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Missing security headers in Action Pack on non-HTML responses]]></title>
        <id>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</id>
        <link href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7"/>
        <updated>2024-06-05T21:54:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="permissions-policy-is-only-served-on-html-content-type">Permissions-Policy is Only Served on HTML Content-Type</h1>
<p>The application configurable Permissions-Policy is only served on responses
with an HTML related Content-Type.</p>
<p>This has been assigned the CVE identifier CVE-2024-28103.</p>
<p>Versions Affected:  &gt;= 6.1.0
Not affected:       &lt; 6.1.0
Fixed Versions:     6.1.7.8, 7.0.8.4, and 7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>Responses with a non-HTML Content-Type are not serving the configured Permissions-Policy. There are certain non-HTML Content-Types that would benefit from having the Permissions-Policy enforced.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the supported release series in accordance with our 
<a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a>
regarding security issues. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>6-1-include-permissions-policy-header-on-non-html.patch - Patch for 6.1 series</li>
<li>7-0-include-permissions-policy-header-on-non-html.patch - Patch for 7.0 series</li>
<li>7-1-include-permissions-policy-header-on-non-html.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/shinkbr">shinkbr</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28103">https://nvd.nist.gov/vuln/detail/CVE-2024-28103</a></li>
<li><a href="https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523">https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/advisories/GHSA-fwhr-88qx-h9g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Missing security headers in Action Pack on non-HTML responses]]></title>
        <id>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</id>
        <link href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7"/>
        <updated>2024-06-05T21:54:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="permissions-policy-is-only-served-on-html-content-type">Permissions-Policy is Only Served on HTML Content-Type</h1>
<p>The application configurable Permissions-Policy is only served on responses
with an HTML related Content-Type.</p>
<p>This has been assigned the CVE identifier CVE-2024-28103.</p>
<p>Versions Affected:  &gt;= 6.1.0
Not affected:       &lt; 6.1.0
Fixed Versions:     6.1.7.8, 7.0.8.4, and 7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>Responses with a non-HTML Content-Type are not serving the configured Permissions-Policy. There are certain non-HTML Content-Types that would benefit from having the Permissions-Policy enforced.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for
the supported release series in accordance with our 
<a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a>
regarding security issues. They are in git-am format and consist of a
single changeset.</p>
<ul>
<li>6-1-include-permissions-policy-header-on-non-html.patch - Patch for 6.1 series</li>
<li>7-0-include-permissions-policy-header-on-non-html.patch - Patch for 7.0 series</li>
<li>7-1-include-permissions-policy-header-on-non-html.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/shinkbr">shinkbr</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28103">https://nvd.nist.gov/vuln/detail/CVE-2024-28103</a></li>
<li><a href="https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523">https://github.com/rails/rails/commit/35858f1d9d57f6c4050a8d9ab754bd5d088b4523</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-28103.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fwhr-88qx-h9g7">https://github.com/advisories/GHSA-fwhr-88qx-h9g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwhr-88qx-h9g7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actiontext] ActionText ContentAttachment can Contain Unsanitized HTML]]></title>
        <id>https://github.com/advisories/GHSA-prjp-h48f-jgf6</id>
        <link href="https://github.com/advisories/GHSA-prjp-h48f-jgf6"/>
        <updated>2024-06-05T21:54:43.000Z</updated>
        <content type="html"><![CDATA[<p>Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML.</p>
<p>This has been assigned the CVE identifier CVE-2024-32464.</p>
<p>Versions Affected:  &gt;= 7.1.0
Not affected:       &lt; 7.1.0
Fixed Versions:     7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>This could lead to a potential cross site scripting issue within the Trix editor.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the supported release series in accordance with our <a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a> regarding security issues. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>action_text_content_attachment_xss_7_1_stable.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6">https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32464">https://nvd.nist.gov/vuln/detail/CVE-2024-32464</a></li>
<li><a href="https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995">https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-32464.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-32464.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-prjp-h48f-jgf6">https://github.com/advisories/GHSA-prjp-h48f-jgf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prjp-h48f-jgf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actiontext] ActionText ContentAttachment can Contain Unsanitized HTML]]></title>
        <id>https://github.com/advisories/GHSA-prjp-h48f-jgf6</id>
        <link href="https://github.com/advisories/GHSA-prjp-h48f-jgf6"/>
        <updated>2024-06-05T21:54:43.000Z</updated>
        <content type="html"><![CDATA[<p>Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML.</p>
<p>This has been assigned the CVE identifier CVE-2024-32464.</p>
<p>Versions Affected:  &gt;= 7.1.0
Not affected:       &lt; 7.1.0
Fixed Versions:     7.1.3.4</p>
<h2 id="impact">Impact</h2>
<p>This could lead to a potential cross site scripting issue within the Trix editor.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>N/A</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the supported release series in accordance with our <a href="https://guides.rubyonrails.org/maintenance_policy.html#security-issues">maintenance policy</a> regarding security issues. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>action_text_content_attachment_xss_7_1_stable.patch - Patch for 7.1 series</li>
</ul>
<h2 id="credits">Credits</h2>
<p>Thank you <a href="https://hackerone.com/ooooooo_q">ooooooo_q</a> for reporting this!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6">https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32464">https://nvd.nist.gov/vuln/detail/CVE-2024-32464</a></li>
<li><a href="https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995">https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-32464.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-32464.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-prjp-h48f-jgf6">https://github.com/advisories/GHSA-prjp-h48f-jgf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prjp-h48f-jgf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-04T22:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actiontext] Trix Editor Arbitrary Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qjqp-xr96-cj99</id>
        <link href="https://github.com/advisories/GHSA-qjqp-xr96-cj99"/>
        <updated>2024-06-03T17:24:57.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>
<p><strong>Vulnerable Versions</strong>: </p>
<ul>
<li>1.x series up to and including 1.3.1</li>
<li>2.x series up to and including 2.1.0</li>
</ul>
<p><strong>Fixed Versions</strong>: </p>
<ul>
<li>v1.3.2</li>
<li>v2.1.1</li>
</ul>
<p><strong>Vector</strong>:</p>
<ul>
<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>
</ul>
<pre><code class="language-js">document.addEventListener('copy', function(e){
  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class="123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');
  e.preventDefault();
});
</code></pre>
<p>and pasting into the Trix editor, the script within the content is executed.</p>
<ul>
<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>
</ul>
<pre><code class="language-js">document.write(`copy&lt;div data-trix-attachment="{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}"&gt;&lt;/div&gt;me`);
</code></pre>
<h3 id="impact">Impact:</h3>
<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="remediation">Remediation:</h3>
<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>
<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1153">https://github.com/basecamp/trix/pull/1153</a></li>
</ul>
<p><strong>Credit</strong>: These issues were reported by security researchers <a href="https://hackerone.com/loknop">loknop</a> and <a href="https://hackerone.com/pinpie">pinpie</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>
<li><a href="https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34341">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>
<li><a href="https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c">https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c</a></li>
<li><a href="https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3">https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3</a></li>
<li><a href="https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5">https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5</a></li>
<li><a href="https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803">https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml</a></li>
<li><a href="https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released</a></li>
<li><a href="https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqp-xr96-cj99">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqp-xr96-cj99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T16:49:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actiontext] Trix Editor Arbitrary Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qjqp-xr96-cj99</id>
        <link href="https://github.com/advisories/GHSA-qjqp-xr96-cj99"/>
        <updated>2024-06-03T17:24:57.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>
<p><strong>Vulnerable Versions</strong>: </p>
<ul>
<li>1.x series up to and including 1.3.1</li>
<li>2.x series up to and including 2.1.0</li>
</ul>
<p><strong>Fixed Versions</strong>: </p>
<ul>
<li>v1.3.2</li>
<li>v2.1.1</li>
</ul>
<p><strong>Vector</strong>:</p>
<ul>
<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>
</ul>
<pre><code class="language-js">document.addEventListener('copy', function(e){
  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class="123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');
  e.preventDefault();
});
</code></pre>
<p>and pasting into the Trix editor, the script within the content is executed.</p>
<ul>
<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>
</ul>
<pre><code class="language-js">document.write(`copy&lt;div data-trix-attachment="{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}"&gt;&lt;/div&gt;me`);
</code></pre>
<h3 id="impact">Impact:</h3>
<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="remediation">Remediation:</h3>
<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>
<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1153">https://github.com/basecamp/trix/pull/1153</a></li>
</ul>
<p><strong>Credit</strong>: These issues were reported by security researchers <a href="https://hackerone.com/loknop">loknop</a> and <a href="https://hackerone.com/pinpie">pinpie</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>
<li><a href="https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34341">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>
<li><a href="https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c">https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c</a></li>
<li><a href="https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3">https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3</a></li>
<li><a href="https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5">https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5</a></li>
<li><a href="https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803">https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml</a></li>
<li><a href="https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released</a></li>
<li><a href="https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqp-xr96-cj99">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqp-xr96-cj99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T16:49:24.000Z</published>
    </entry>
</feed>