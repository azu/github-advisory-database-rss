<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2023-08-20T17:01:26.100Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[puma] Puma HTTP Request/Response Smuggling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-68xg-gqqm-vgj8</id>
        <link href="https://github.com/advisories/GHSA-68xg-gqqm-vgj8"/>
        <updated>2023-08-18T21:50:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to version 6.3.1, puma exhibited incorrect behavior when parsing chunked transfer encoding bodies and zero-length Content-Length headers in a way that allowed HTTP request smuggling.</p>
<p>The following vulnerabilities are addressed by this advisory:</p>
<ul>
<li>Incorrect parsing of trailing fields in chunked transfer encoding bodies</li>
<li>Parsing of blank/zero-length Content-Length headers</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in 6.3.1 and 5.6.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://portswigger.net/web-security/request-smuggling">HTTP Request Smuggling</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/puma/puma">Puma</a>
See our <a href="https://github.com/puma/puma/security/policy">security policy</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8">https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8</a></li>
<li><a href="https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a">https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a</a></li>
<li><a href="https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1">https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1</a></li>
<li><a href="https://github.com/puma/puma/releases/tag/v5.6.7">https://github.com/puma/puma/releases/tag/v5.6.7</a></li>
<li><a href="https://github.com/puma/puma/releases/tag/v6.3.1">https://github.com/puma/puma/releases/tag/v6.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-68xg-gqqm-vgj8">https://github.com/advisories/GHSA-68xg-gqqm-vgj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68xg-gqqm-vgj8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-18T21:50:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[puma] Puma HTTP Request/Response Smuggling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-68xg-gqqm-vgj8</id>
        <link href="https://github.com/advisories/GHSA-68xg-gqqm-vgj8"/>
        <updated>2023-08-18T21:50:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to version 6.3.1, puma exhibited incorrect behavior when parsing chunked transfer encoding bodies and zero-length Content-Length headers in a way that allowed HTTP request smuggling.</p>
<p>The following vulnerabilities are addressed by this advisory:</p>
<ul>
<li>Incorrect parsing of trailing fields in chunked transfer encoding bodies</li>
<li>Parsing of blank/zero-length Content-Length headers</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in 6.3.1 and 5.6.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://portswigger.net/web-security/request-smuggling">HTTP Request Smuggling</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/puma/puma">Puma</a>
See our <a href="https://github.com/puma/puma/security/policy">security policy</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8">https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8</a></li>
<li><a href="https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a">https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a</a></li>
<li><a href="https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1">https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1</a></li>
<li><a href="https://github.com/puma/puma/releases/tag/v5.6.7">https://github.com/puma/puma/releases/tag/v5.6.7</a></li>
<li><a href="https://github.com/puma/puma/releases/tag/v6.3.1">https://github.com/puma/puma/releases/tag/v6.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-68xg-gqqm-vgj8">https://github.com/advisories/GHSA-68xg-gqqm-vgj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68xg-gqqm-vgj8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-18T21:50:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord's PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-08-18T21:11:52.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44566">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>
<li><a href="https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>
<li><a href="https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf">https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf</a></li>
<li><a href="https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b">https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.7.1">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>
<li><a href="https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15">https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activerecord] Denial of Service Vulnerability in ActiveRecord's PostgreSQL adapter]]></title>
        <id>https://github.com/advisories/GHSA-579w-22j4-4749</id>
        <link href="https://github.com/advisories/GHSA-579w-22j4-4749"/>
        <updated>2023-08-18T21:11:52.000Z</updated>
        <content type="html"><![CDATA[<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>
<p>This has been assigned the CVE identifier CVE-2022-44566.</p>
<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1</p>
<p>Impact:
In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.
Releases</p>
<p>The fixed releases are available at the normal locations.
Workarounds</p>
<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series
7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44566">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>
<li><a href="https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>
<li><a href="https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf">https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf</a></li>
<li><a href="https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b">https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.7.1">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>
<li><a href="https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15">https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15</a></li>
<li><a href="https://github.com/advisories/GHSA-579w-22j4-4749">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-579w-22j4-4749</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-18T18:21:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support's underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-08-18T21:10:42.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22796">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>
<li><a href="https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8">https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8</a></li>
<li><a href="https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef">https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.7.1">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[activesupport] ReDoS based DoS vulnerability in Active Support's underscore]]></title>
        <id>https://github.com/advisories/GHSA-j6gc-792m-qgm2</id>
        <link href="https://github.com/advisories/GHSA-j6gc-792m-qgm2"/>
        <updated>2023-08-18T21:10:42.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>
<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1
Impact</p>
<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>
<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.
Releases</p>
<p>The FIXED releases are available at the normal locations.
Workarounds</p>
<p>There are no feasible workarounds for this issue.</p>
<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.
Patches</p>
<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series
7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series
</code></pre>
<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v7.0.4.1">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>
<li><a href="https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22796">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>
<li><a href="https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8">https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8</a></li>
<li><a href="https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef">https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.7.1">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-j6gc-792m-qgm2">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6gc-792m-qgm2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-18T18:23:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Possible Denial of Service Vulnerability in Rack's header parsing]]></title>
        <id>https://github.com/advisories/GHSA-c6qg-cjj8-47qp</id>
        <link href="https://github.com/advisories/GHSA-c6qg-cjj8-47qp"/>
        <updated>2023-08-18T21:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>There is a denial of service vulnerability in the header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2023-27539.</p>
<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.2.6.4, 3.0.6.1</p>
<h1 id="impact">Impact</h1>
<p>Carefully crafted input can cause header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that parse headers using Rack (virtually all Rails applications) are impacted.</p>
<h1 id="workarounds">Workarounds</h1>
<p>Setting Regexp.timeout in Ruby 3.2 is a possible workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27539">https://nvd.nist.gov/vuln/detail/CVE-2023-27539</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466">https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml</a></li>
<li><a href="https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c">https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c</a></li>
<li><a href="https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff">https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff</a></li>
<li><a href="https://github.com/advisories/GHSA-c6qg-cjj8-47qp">https://github.com/advisories/GHSA-c6qg-cjj8-47qp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6qg-cjj8-47qp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-15T21:36:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Possible Denial of Service Vulnerability in Rack's header parsing]]></title>
        <id>https://github.com/advisories/GHSA-c6qg-cjj8-47qp</id>
        <link href="https://github.com/advisories/GHSA-c6qg-cjj8-47qp"/>
        <updated>2023-08-18T21:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>There is a denial of service vulnerability in the header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2023-27539.</p>
<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.2.6.4, 3.0.6.1</p>
<h1 id="impact">Impact</h1>
<p>Carefully crafted input can cause header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that parse headers using Rack (virtually all Rails applications) are impacted.</p>
<h1 id="workarounds">Workarounds</h1>
<p>Setting Regexp.timeout in Ruby 3.2 is a possible workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27539">https://nvd.nist.gov/vuln/detail/CVE-2023-27539</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466">https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml</a></li>
<li><a href="https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c">https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c</a></li>
<li><a href="https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff">https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff</a></li>
<li><a href="https://github.com/advisories/GHSA-c6qg-cjj8-47qp">https://github.com/advisories/GHSA-c6qg-cjj8-47qp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6qg-cjj8-47qp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-15T21:36:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Cross-site scripting in actionpack]]></title>
        <id>https://github.com/advisories/GHSA-35mm-cc6r-8fjp</id>
        <link href="https://github.com/advisories/GHSA-35mm-cc6r-8fjp"/>
        <updated>2023-08-17T05:02:40.000Z</updated>
        <content type="html"><![CDATA[<p>In actionpack gem &gt;= 6.0.0, a possible XSS vulnerability exists when an application is running in development mode allowing an attacker to send or embed (in another page) a specially crafted URL which can allow the attacker to execute JavaScript in the context of the local application. This vulnerability is in the Actionable Exceptions middleware.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Until such time as the patch can be applied, application developers should disable the Actionable Exceptions middleware in their development environment via a line such as this one in their config/environment/development.rb: <code>config.middleware.delete ActionDispatch::ActionableExceptions</code></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8264">https://nvd.nist.gov/vuln/detail/CVE-2020-8264</a></li>
<li><a href="https://hackerone.com/reports/904059">https://hackerone.com/reports/904059</a></li>
<li><a href="https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk/m/oJWw-xhNAQAJ">https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk/m/oJWw-xhNAQAJ</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2020-8264.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2020-8264.yml</a></li>
<li><a href="https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk">https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk</a></li>
<li><a href="https://github.com/advisories/GHSA-35mm-cc6r-8fjp">https://github.com/advisories/GHSA-35mm-cc6r-8fjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35mm-cc6r-8fjp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-04-07T20:58:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[commonmarker] Several quadratic complexity bugs may lead to denial of service in Commonmarker]]></title>
        <id>https://github.com/advisories/GHSA-7vh7-fw88-wj87</id>
        <link href="https://github.com/advisories/GHSA-7vh7-fw88-wj87"/>
        <updated>2023-08-17T05:02:35.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>Several quadratic complexity bugs in commonmarker's underlying <a href="https://github.com/github/cmark-gfm"><code>cmark-gfm</code></a> library may lead to unbounded resource exhaustion and subsequent denial of service.</p>
<p>The following vulnerabilities were addressed:</p>
<ul>
<li><a href="https://github.com/github/cmark-gfm/security/advisories/GHSA-w4qg-3vf7-m9x5">CVE-2023-37463</a></li>
</ul>
<p>For more information, consult the release notes for version <a href="https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12"><code>0.29.0.gfm.12</code></a>.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Users are advised to upgrade to commonmarker version <a href="https://rubygems.org/gems/commonmarker/versions/0.23.10"><code>0.23.10</code></a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-7vh7-fw88-wj87">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-7vh7-fw88-wj87</a></li>
<li><a href="https://github.com/gjtorikian/commonmarker/commit/db8cd377b54541f7fd484d168b7682a282a680f7">https://github.com/gjtorikian/commonmarker/commit/db8cd377b54541f7fd484d168b7682a282a680f7</a></li>
<li><a href="https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12">https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12</a></li>
<li><a href="https://rubygems.org/gems/commonmarker/versions/0.23.10">https://rubygems.org/gems/commonmarker/versions/0.23.10</a></li>
<li><a href="https://github.com/advisories/GHSA-7vh7-fw88-wj87">https://github.com/advisories/GHSA-7vh7-fw88-wj87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vh7-fw88-wj87</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-08T17:12:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionview] Path Traversal in Action View]]></title>
        <id>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</id>
        <link href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j"/>
        <updated>2023-08-17T05:02:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="file-content-disclosure-in-action-view">File Content Disclosure in Action View</h1>
<h2 id="impact">Impact </h2>
<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>
<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file" 
  end 
end 
</code></pre>
<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>
<h2 id="releases">Releases </h2>
<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>
<h2 id="workarounds">Workarounds </h2>
<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file", formats: [:html] 
  end 
end 
</code></pre>
<p>In summary, impacted calls to <code>render</code> look like this: </p>
<pre><code>render file: "#{Rails.root}/some/file" 
</code></pre>
<p>The vulnerability can be mitigated by changing to this: </p>
<pre><code>render file: "#{Rails.root}/some/file", formats: [:html] 
</code></pre>
<p>Other calls to <code>render</code> are not impacted. </p>
<p>Alternatively, the following monkey patch can be applied in an initializer: </p>
<pre><code class="language-ruby">$ cat config/initializers/formats_filter.rb 
# frozen_string_literal: true 

ActionDispatch::Request.prepend(Module.new do 
  def formats 
    super().select do |format| 
      format.symbol || format.ref == "*/*" 
    end 
  end 
end) 
</code></pre>
<h2 id="credits">Credits </h2>
<p>Thanks to John Hawthorn <a href="mailto:john@hawthorn.email">john@hawthorn.email</a> of GitHub </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-5418">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0796">https://access.redhat.com/errata/RHSA-2019:0796</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1147">https://access.redhat.com/errata/RHSA-2019:1147</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1149">https://access.redhat.com/errata/RHSA-2019:1149</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1289">https://access.redhat.com/errata/RHSA-2019:1289</a></li>
<li><a href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>
<li><a href="https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>
<li><a href="https://www.exploit-db.com/exploits/46585/">https://www.exploit-db.com/exploits/46585/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/03/22/1">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-03-13T17:26:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionview] Path Traversal in Action View]]></title>
        <id>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</id>
        <link href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j"/>
        <updated>2023-08-17T05:02:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="file-content-disclosure-in-action-view">File Content Disclosure in Action View</h1>
<h2 id="impact">Impact </h2>
<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>
<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file" 
  end 
end 
</code></pre>
<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>
<h2 id="releases">Releases </h2>
<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>
<h2 id="workarounds">Workarounds </h2>
<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file", formats: [:html] 
  end 
end 
</code></pre>
<p>In summary, impacted calls to <code>render</code> look like this: </p>
<pre><code>render file: "#{Rails.root}/some/file" 
</code></pre>
<p>The vulnerability can be mitigated by changing to this: </p>
<pre><code>render file: "#{Rails.root}/some/file", formats: [:html] 
</code></pre>
<p>Other calls to <code>render</code> are not impacted. </p>
<p>Alternatively, the following monkey patch can be applied in an initializer: </p>
<pre><code class="language-ruby">$ cat config/initializers/formats_filter.rb 
# frozen_string_literal: true 

ActionDispatch::Request.prepend(Module.new do 
  def formats 
    super().select do |format| 
      format.symbol || format.ref == "*/*" 
    end 
  end 
end) 
</code></pre>
<h2 id="credits">Credits </h2>
<p>Thanks to John Hawthorn <a href="mailto:john@hawthorn.email">john@hawthorn.email</a> of GitHub </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-5418">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0796">https://access.redhat.com/errata/RHSA-2019:0796</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1147">https://access.redhat.com/errata/RHSA-2019:1147</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1149">https://access.redhat.com/errata/RHSA-2019:1149</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1289">https://access.redhat.com/errata/RHSA-2019:1289</a></li>
<li><a href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>
<li><a href="https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>
<li><a href="https://www.exploit-db.com/exploits/46585/">https://www.exploit-db.com/exploits/46585/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/03/22/1">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-03-13T17:26:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[samlr] samlr XML nodes comment attack]]></title>
        <id>https://github.com/advisories/GHSA-qpxp-5j56-gg3x</id>
        <link href="https://github.com/advisories/GHSA-qpxp-5j56-gg3x"/>
        <updated>2023-08-17T05:02:29.000Z</updated>
        <content type="html"><![CDATA[<p>Zendesk Samlr before 2.6.2 allows an XML nodes comment attack such as a name_id node with <a href="mailto:user@example.com">user@example.com</a> followed by <code>&lt;!----&gt;</code>. and then the attacker's domain name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20857">https://nvd.nist.gov/vuln/detail/CVE-2018-20857</a></li>
<li><a href="https://github.com/zendesk/samlr/compare/v2.6.1...v2.6.2">https://github.com/zendesk/samlr/compare/v2.6.1...v2.6.2</a></li>
<li><a href="https://github.com/zendesk/samlr/pull/29">https://github.com/zendesk/samlr/pull/29</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/samlr/CVE-2018-20857.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/samlr/CVE-2018-20857.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-qpxp-5j56-gg3x">https://github.com/advisories/GHSA-qpxp-5j56-gg3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpxp-5j56-gg3x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-07-31T04:22:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionview] Path Traversal in Action View]]></title>
        <id>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</id>
        <link href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j"/>
        <updated>2023-08-17T05:02:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="file-content-disclosure-in-action-view">File Content Disclosure in Action View</h1>
<h2 id="impact">Impact </h2>
<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>
<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file" 
  end 
end 
</code></pre>
<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>
<h2 id="releases">Releases </h2>
<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>
<h2 id="workarounds">Workarounds </h2>
<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file", formats: [:html] 
  end 
end 
</code></pre>
<p>In summary, impacted calls to <code>render</code> look like this: </p>
<pre><code>render file: "#{Rails.root}/some/file" 
</code></pre>
<p>The vulnerability can be mitigated by changing to this: </p>
<pre><code>render file: "#{Rails.root}/some/file", formats: [:html] 
</code></pre>
<p>Other calls to <code>render</code> are not impacted. </p>
<p>Alternatively, the following monkey patch can be applied in an initializer: </p>
<pre><code class="language-ruby">$ cat config/initializers/formats_filter.rb 
# frozen_string_literal: true 

ActionDispatch::Request.prepend(Module.new do 
  def formats 
    super().select do |format| 
      format.symbol || format.ref == "*/*" 
    end 
  end 
end) 
</code></pre>
<h2 id="credits">Credits </h2>
<p>Thanks to John Hawthorn <a href="mailto:john@hawthorn.email">john@hawthorn.email</a> of GitHub </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-5418">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0796">https://access.redhat.com/errata/RHSA-2019:0796</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1147">https://access.redhat.com/errata/RHSA-2019:1147</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1149">https://access.redhat.com/errata/RHSA-2019:1149</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1289">https://access.redhat.com/errata/RHSA-2019:1289</a></li>
<li><a href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>
<li><a href="https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>
<li><a href="https://www.exploit-db.com/exploits/46585/">https://www.exploit-db.com/exploits/46585/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/03/22/1">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-03-13T17:26:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionview] Path Traversal in Action View]]></title>
        <id>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</id>
        <link href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j"/>
        <updated>2023-08-17T05:02:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="file-content-disclosure-in-action-view">File Content Disclosure in Action View</h1>
<h2 id="impact">Impact </h2>
<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>
<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file" 
  end 
end 
</code></pre>
<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>
<h2 id="releases">Releases </h2>
<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>
<h2 id="workarounds">Workarounds </h2>
<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>
<pre><code class="language-ruby">class UserController &lt; ApplicationController 
  def index 
    render file: "#{Rails.root}/some/file", formats: [:html] 
  end 
end 
</code></pre>
<p>In summary, impacted calls to <code>render</code> look like this: </p>
<pre><code>render file: "#{Rails.root}/some/file" 
</code></pre>
<p>The vulnerability can be mitigated by changing to this: </p>
<pre><code>render file: "#{Rails.root}/some/file", formats: [:html] 
</code></pre>
<p>Other calls to <code>render</code> are not impacted. </p>
<p>Alternatively, the following monkey patch can be applied in an initializer: </p>
<pre><code class="language-ruby">$ cat config/initializers/formats_filter.rb 
# frozen_string_literal: true 

ActionDispatch::Request.prepend(Module.new do 
  def formats 
    super().select do |format| 
      format.symbol || format.ref == "*/*" 
    end 
  end 
end) 
</code></pre>
<h2 id="credits">Credits </h2>
<p>Thanks to John Hawthorn <a href="mailto:john@hawthorn.email">john@hawthorn.email</a> of GitHub </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-5418">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0796">https://access.redhat.com/errata/RHSA-2019:0796</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1147">https://access.redhat.com/errata/RHSA-2019:1147</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1149">https://access.redhat.com/errata/RHSA-2019:1149</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1289">https://access.redhat.com/errata/RHSA-2019:1289</a></li>
<li><a href="https://github.com/advisories/GHSA-86g5-2wh3-gc9j">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>
<li><a href="https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>
<li><a href="https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>
<li><a href="https://www.exploit-db.com/exploits/46585/">https://www.exploit-db.com/exploits/46585/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/03/22/1">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86g5-2wh3-gc9j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-03-13T17:26:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Possible DoS Vulnerability in Action Controller Token Authentication]]></title>
        <id>https://github.com/advisories/GHSA-7wjx-3g7j-8584</id>
        <link href="https://github.com/advisories/GHSA-7wjx-3g7j-8584"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible DoS vulnerability in the Token Authentication logic in Action Controller.</p>
<p>Versions Affected:  &gt;= 4.0.0
Not affected:       &lt; 4.0.0
Fixed Versions:     6.1.3.2, 6.0.3.7, 5.2.4.6, 5.2.6</p>
<h2 id="impact">Impact</h2>
<p>Impacted code uses <code>authenticate_or_request_with_http_token</code> or <code>authenticate_with_http_token</code> for request authentication.  Impacted code will look something like this:</p>
<pre><code>class PostsController &lt; ApplicationController
  before_action :authenticate

  private

  def authenticate
    authenticate_or_request_with_http_token do |token, options|
      # ...
    end
  end
end
</code></pre>
<p>All users running an affected release should either upgrade or use one of the workarounds immediately.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>The following monkey patch placed in an initializer can be used to work around the issue:</p>
<pre><code class="language-ruby">module ActionController::HttpAuthentication::Token
  AUTHN_PAIR_DELIMITERS = /(?:,|;|\t)/
end
</code></pre>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>5-2-http-authentication-dos.patch - Patch for 5.2 series</li>
<li>6-0-http-authentication-dos.patch - Patch for 6.0 series</li>
<li>6-1-http-authentication-dos.patch - Patch for 6.1 series</li>
</ul>
<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h2 id="credits">Credits</h2>
<p>Thank you to <a href="https://hackerone.com/wonda_tea_coffee">https://hackerone.com/wonda_tea_coffee</a> for reporting this issue!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v5.2.4.6">https://github.com/rails/rails/releases/tag/v5.2.4.6</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v5.2.6">https://github.com/rails/rails/releases/tag/v5.2.6</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.0.3.7">https://github.com/rails/rails/releases/tag/v6.0.3.7</a></li>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.3.2">https://github.com/rails/rails/releases/tag/v6.1.3.2</a></li>
<li><a href="https://groups.google.com/g/rubyonrails-security/c/Pf1TjkOBdyQ">https://groups.google.com/g/rubyonrails-security/c/Pf1TjkOBdyQ</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22904">https://nvd.nist.gov/vuln/detail/CVE-2021-22904</a></li>
<li><a href="https://hackerone.com/reports/1101125">https://hackerone.com/reports/1101125</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2021-22904-possible-dos-vulnerability-in-action-controller-token-authentication/77869">https://discuss.rubyonrails.org/t/cve-2021-22904-possible-dos-vulnerability-in-action-controller-token-authentication/77869</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210805-0009/">https://security.netapp.com/advisory/ntap-20210805-0009/</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22904.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22904.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-7wjx-3g7j-8584">https://github.com/advisories/GHSA-7wjx-3g7j-8584</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7wjx-3g7j-8584</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-05T19:49:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Possible Open Redirect Vulnerability in Action Pack]]></title>
        <id>https://github.com/advisories/GHSA-5hq2-xf89-9jxq</id>
        <link href="https://github.com/advisories/GHSA-5hq2-xf89-9jxq"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>There is a possible Open Redirect Vulnerability in Action Pack.</p>
<p>Versions Affected:  &gt;= v6.1.0.rc2
Not affected:       &lt; v6.1.0.rc2
Fixed Versions:     6.1.3.2</p>
<h2 id="impact">Impact</h2>
<p>This is similar to CVE-2021-22881. Specially crafted Host headers in combination with certain "allowed host" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious
website.</p>
<p>Since rails/rails@9bc7ea5, strings in config.hosts that do not have a leading dot are converted to regular expressions without proper escaping. This causes, for example, config.hosts &lt;&lt; "sub.example.com" to permit a request with a Host header value of sub-example.com.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="workarounds">Workarounds</h2>
<p>The following monkey patch put in an initializer can be used as a workaround.</p>
<pre><code class="language-ruby">class ActionDispatch::HostAuthorization::Permissions
  def sanitize_string(host)
    if host.start_with?(".")
      /\A(.+\.)?#{Regexp.escape(host[1..-1])}\z/i
    else
      /\A#{Regexp.escape host}\z/i
    end
  end
end
</code></pre>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>6-1-open-redirect.patch - Patch for 6.1 series</li>
</ul>
<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h2 id="credits">Credits</h2>
<p>Thanks Jonathan Hefner (<a href="https://hackerone.com/jonathanhefner">https://hackerone.com/jonathanhefner</a>) for reporting this bug!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rails/rails/releases/tag/v6.1.3.2">https://github.com/rails/rails/releases/tag/v6.1.3.2</a></li>
<li><a href="https://groups.google.com/g/rubyonrails-security/c/8TxqXEtgSF0">https://groups.google.com/g/rubyonrails-security/c/8TxqXEtgSF0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22903">https://nvd.nist.gov/vuln/detail/CVE-2021-22903</a></li>
<li><a href="https://hackerone.com/reports/1148025">https://hackerone.com/reports/1148025</a></li>
<li><a href="https://discuss.rubyonrails.org/t/cve-2021-22903-possible-open-redirect-vulnerability-in-action-pack/77867">https://discuss.rubyonrails.org/t/cve-2021-22903-possible-open-redirect-vulnerability-in-action-pack/77867</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22903.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22903.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-5hq2-xf89-9jxq">https://github.com/advisories/GHSA-5hq2-xf89-9jxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5hq2-xf89-9jxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-05T19:48:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] actionpack Open Redirect in Host Authorization Middleware]]></title>
        <id>https://github.com/advisories/GHSA-qphc-hf5q-v8fc</id>
        <link href="https://github.com/advisories/GHSA-qphc-hf5q-v8fc"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>Specially crafted "X-Forwarded-Host" headers in combination with certain "allowed host" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious website.</p>
<p>Impacted applications will have allowed hosts with a leading dot. For example, configuration files that look like this:</p>
<pre><code>config.hosts &lt;&lt;  '.EXAMPLE.com'
</code></pre>
<p>When an allowed host contains a leading dot, a specially crafted Host header can be used to redirect to a malicious website.</p>
<p>This vulnerability is similar to CVE-2021-22881 and CVE-2021-22942.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>6-0-host-authorzation-open-redirect.patch - Patch for 6.0 series</li>
<li>6-1-host-authorzation-open-redirect.patch - Patch for 6.1 series</li>
<li>7-0-host-authorzation-open-redirect.patch - Patch for 7.0 series</li>
</ul>
<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-44528">https://nvd.nist.gov/vuln/detail/CVE-2021-44528</a></li>
<li><a href="https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer</a></li>
<li><a href="https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107">https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107</a></li>
<li><a href="https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021">https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021</a></li>
<li><a href="https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815">https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml</a></li>
<li><a href="https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5372">https://www.debian.org/security/2023/dsa-5372</a></li>
<li><a href="https://github.com/advisories/GHSA-qphc-hf5q-v8fc">https://github.com/advisories/GHSA-qphc-hf5q-v8fc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qphc-hf5q-v8fc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-14T21:19:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] actionpack Open Redirect in Host Authorization Middleware]]></title>
        <id>https://github.com/advisories/GHSA-qphc-hf5q-v8fc</id>
        <link href="https://github.com/advisories/GHSA-qphc-hf5q-v8fc"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>Specially crafted "X-Forwarded-Host" headers in combination with certain "allowed host" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious website.</p>
<p>Impacted applications will have allowed hosts with a leading dot. For example, configuration files that look like this:</p>
<pre><code>config.hosts &lt;&lt;  '.EXAMPLE.com'
</code></pre>
<p>When an allowed host contains a leading dot, a specially crafted Host header can be used to redirect to a malicious website.</p>
<p>This vulnerability is similar to CVE-2021-22881 and CVE-2021-22942.</p>
<h2 id="releases">Releases</h2>
<p>The fixed releases are available at the normal locations.</p>
<h2 id="patches">Patches</h2>
<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>
<ul>
<li>6-0-host-authorzation-open-redirect.patch - Patch for 6.0 series</li>
<li>6-1-host-authorzation-open-redirect.patch - Patch for 6.1 series</li>
<li>7-0-host-authorzation-open-redirect.patch - Patch for 7.0 series</li>
</ul>
<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-44528">https://nvd.nist.gov/vuln/detail/CVE-2021-44528</a></li>
<li><a href="https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer</a></li>
<li><a href="https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107">https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107</a></li>
<li><a href="https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021">https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021</a></li>
<li><a href="https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815">https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml</a></li>
<li><a href="https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5372">https://www.debian.org/security/2023/dsa-5372</a></li>
<li><a href="https://github.com/advisories/GHSA-qphc-hf5q-v8fc">https://github.com/advisories/GHSA-qphc-hf5q-v8fc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qphc-hf5q-v8fc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-14T21:19:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[em-http-request] Improper Certificate Validation in EM-HTTP-Request]]></title>
        <id>https://github.com/advisories/GHSA-q27f-v3r6-9v77</id>
        <link href="https://github.com/advisories/GHSA-q27f-v3r6-9v77"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>EM-HTTP-Request 1.1.5 uses the library eventmachine in an insecure way that allows an attacker to perform a man-in-the-middle attack against users of the library. The hostname in a TLS server certificate is not verified.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13482">https://nvd.nist.gov/vuln/detail/CVE-2020-13482</a></li>
<li><a href="https://github.com/igrigorik/em-http-request/issues/339">https://github.com/igrigorik/em-http-request/issues/339</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MKYP5TR5NTVVDX5R4HCNNH2OQR7M4X3J/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MKYP5TR5NTVVDX5R4HCNNH2OQR7M4X3J/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z32PUJA6RGBZ3TKSOTGUXZ45662S3MVF/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z32PUJA6RGBZ3TKSOTGUXZ45662S3MVF/</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request">https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request</a></li>
<li><a href="https://github.com/igrigorik/em-http-request/commit/e5fa144f8d21050dd1fc15a4dc8aa34ac6f30602">https://github.com/igrigorik/em-http-request/commit/e5fa144f8d21050dd1fc15a4dc8aa34ac6f30602</a></li>
<li><a href="https://github.com/advisories/GHSA-q27f-v3r6-9v77">https://github.com/advisories/GHSA-q27f-v3r6-9v77</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/em-http-request/CVE-2020-13482.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/em-http-request/CVE-2020-13482.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q27f-v3r6-9v77</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-24T18:13:13.000Z</published>
    </entry>
</feed>