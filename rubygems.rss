<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2022-10-04T22:01:38.850Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[puppet] Puppet allows remote attackers to execute arbitrary Ruby programs from the master via the resource_type service]]></title>
        <id>https://github.com/advisories/GHSA-cj43-9h3w-v976</id>
        <link href="https://github.com/advisories/GHSA-cj43-9h3w-v976"/>
        <updated>2022-10-04T21:44:46.000Z</updated>
        <content type="html"><![CDATA[<p>Unspecified vulnerability in Puppet 2.7.x before 2.7.23 and 3.2.x before 3.2.4, and Puppet Enterprise 2.8.x before 2.8.3 and 3.0.x before 3.0.1, allows remote attackers to execute arbitrary Ruby programs from the master via the resource_type service.  NOTE: this vulnerability can only be exploited utilizing unspecified "local file system access" to the Puppet Master.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4761">https://nvd.nist.gov/vuln/detail/CVE-2013-4761</a></li>
<li><a href="https://github.com/advisories/GHSA-cj43-9h3w-v976">https://github.com/advisories/GHSA-cj43-9h3w-v976</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2014-01/msg00009.html">http://lists.opensuse.org/opensuse-security-announce/2014-01/msg00009.html</a></li>
<li><a href="http://puppetlabs.com/security/cve/cve-2013-4761/">http://puppetlabs.com/security/cve/cve-2013-4761/</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2013-1283.html">http://rhn.redhat.com/errata/RHSA-2013-1283.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2013-1284.html">http://rhn.redhat.com/errata/RHSA-2013-1284.html</a></li>
<li><a href="http://www.debian.org/security/2013/dsa-2761">http://www.debian.org/security/2013/dsa-2761</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj43-9h3w-v976</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2017-10-24T18:33:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pdfkit] PDFKit vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</id>
        <link href="https://github.com/advisories/GHSA-rhwx-hjx2-x4qr"/>
        <updated>2022-10-04T21:19:42.000Z</updated>
        <content type="html"><![CDATA[<p>The package pdfkit from version 0.0.0 through version 0.8.6 is vulnerable to Command Injection where the URL is not properly sanitized.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25765">https://nvd.nist.gov/vuln/detail/CVE-2022-25765</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb%23L55-L58">https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb%23L55-L58</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/master/lib/pdfkit/source.rb%23L44-L50">https://github.com/pdfkit/pdfkit/blob/master/lib/pdfkit/source.rb%23L44-L50</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795">https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb#L55-L58">https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb#L55-L58</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pdfkit/CVE-2022-25765.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pdfkit/CVE-2022-25765.yml</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/releases/tag/v0.8.7">https://github.com/pdfkit/pdfkit/releases/tag/v0.8.7</a></li>
<li><a href="https://github.com/advisories/GHSA-rhwx-hjx2-x4qr">https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-10T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sanitize] Sanitize vulnerable to Improper Input Validation and Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-7f42-p84j-f58p</id>
        <link href="https://github.com/advisories/GHSA-7f42-p84j-f58p"/>
        <updated>2022-10-04T19:50:31.000Z</updated>
        <content type="html"><![CDATA[<p>When Sanitize &lt;= 4.6.2 is used in combination with libxml2 &gt;= 2.9.2, a specially crafted HTML fragment can cause libxml2 to generate improperly escaped output, allowing non-whitelisted attributes to be used on whitelisted elements.</p>
<p>This can allow HTML and JavaScript injection, which could result in XSS if Sanitize's output is served to browsers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3740">https://nvd.nist.gov/vuln/detail/CVE-2018-3740</a></li>
<li><a href="https://github.com/rgrove/sanitize/issues/176">https://github.com/rgrove/sanitize/issues/176</a></li>
<li><a href="https://github.com/rgrove/sanitize/commit/01629a162e448a83d901456d0ba8b65f3b03d46e">https://github.com/rgrove/sanitize/commit/01629a162e448a83d901456d0ba8b65f3b03d46e</a></li>
<li><a href="https://about.gitlab.com/2018/06/25/security-release-gitlab-11-dot-0-dot-1-released/">https://about.gitlab.com/2018/06/25/security-release-gitlab-11-dot-0-dot-1-released/</a></li>
<li><a href="https://github.com/advisories/GHSA-7f42-p84j-f58p">https://github.com/advisories/GHSA-7f42-p84j-f58p</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4358">https://www.debian.org/security/2018/dsa-4358</a></li>
<li><a href="https://github.com/rgrove/sanitize/commit/93feeb38e21864146bb29191792b971dbe1ec62e">https://github.com/rgrove/sanitize/commit/93feeb38e21864146bb29191792b971dbe1ec62e</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f42-p84j-f58p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-03-21T11:56:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rest-client] High severity vulnerability that affects rest-client]]></title>
        <id>https://github.com/advisories/GHSA-3fhf-6939-qg8p</id>
        <link href="https://github.com/advisories/GHSA-3fhf-6939-qg8p"/>
        <updated>2022-10-04T19:31:06.000Z</updated>
        <content type="html"><![CDATA[<p>REST client for Ruby (aka rest-client) before 1.8.0 allows remote attackers to conduct session fixation attacks or obtain sensitive cookie information by leveraging passage of cookies set in a response to a redirect.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-1820">https://nvd.nist.gov/vuln/detail/CVE-2015-1820</a></li>
<li><a href="https://github.com/rest-client/rest-client/issues/369">https://github.com/rest-client/rest-client/issues/369</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1205291">https://bugzilla.redhat.com/show_bug.cgi?id=1205291</a></li>
<li><a href="https://github.com/advisories/GHSA-3fhf-6939-qg8p">https://github.com/advisories/GHSA-3fhf-6939-qg8p</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/03/24/3">http://www.openwall.com/lists/oss-security/2015/03/24/3</a></li>
<li><a href="http://www.securityfocus.com/bid/73295">http://www.securityfocus.com/bid/73295</a></li>
<li><a href="https://rubygems.org/gems/rest-client/versions/1.6.1.a">https://rubygems.org/gems/rest-client/versions/1.6.1.a</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3fhf-6939-qg8p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-08-13T20:47:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sqlite3] SQLite3 addresses vulnerability in packaged version of libsqlite]]></title>
        <id>https://github.com/advisories/GHSA-mgvv-5mxp-xq67</id>
        <link href="https://github.com/advisories/GHSA-mgvv-5mxp-xq67"/>
        <updated>2022-10-03T22:12:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The rubygem sqlite3 v1.5.1 upgrades the packaged version of libsqlite from v3.39.3 to <a href="https://sqlite.org/releaselog/3_39_4.html">v3.39.4</a>.</p>
<p>libsqlite v3.39.4 addresses a vulnerability described as follows in the release notification:</p>
<blockquote>
<p>Version 3.39.4 is a minimal patch against the prior release that addresses issues found since the
prior release. In particular, a potential vulnerability in the FTS3 extension has been fixed, so
this should be considered a security update.</p>
<p>In order to exploit the vulnerability, an attacker must have full SQL access and must be able to
construct a corrupt database with over 2GB of FTS3 content. The problem arises from a 32-bit
signed integer overflow.</p>
</blockquote>
<p>This vulnerability has not been assigned a CVE and does not have a severity declared.</p>
<p>Please note that this advisory only applies to the sqlite3 gem v1.5.0, and only if the packaged libsqlite is being used. If you've overridden defaults at installation time to use system libraries instead of packaged libraries, you should instead pay attention to your distro's libsqlite release announcements.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to the rubygem sqlite3 v1.5.1 or later.</p>
<p>Users who are unable to upgrade the sqlite3 gem may also choose a more complicated mitigation: compile and link sqlite3 against external libsqlite &gt;= 3.39.4 which will also address these same issues.</p>
<h3 id="references">References</h3>
<ul>
<li>Upstream release notes: <a href="https://sqlite.org/releaselog/3_39_4.html">https://sqlite.org/releaselog/3_39_4.html</a></li>
<li>Instructions for compiling against system libraries: <a href="https://github.com/sparklemotion/sqlite3-ruby">https://github.com/sparklemotion/sqlite3-ruby</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/sqlite3-ruby/security/advisories/GHSA-mgvv-5mxp-xq67">https://github.com/sparklemotion/sqlite3-ruby/security/advisories/GHSA-mgvv-5mxp-xq67</a></li>
<li><a href="https://github.com/sparklemotion/sqlite3-ruby/releases/tag/v1.5.1">https://github.com/sparklemotion/sqlite3-ruby/releases/tag/v1.5.1</a></li>
<li><a href="https://github.com/advisories/GHSA-mgvv-5mxp-xq67">https://github.com/advisories/GHSA-mgvv-5mxp-xq67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mgvv-5mxp-xq67</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-03T22:12:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[commonmarker] Unbounded resource exhaustion in cmark-gfm autolink extension may lead to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-4qw4-jpp4-8gvp</id>
        <link href="https://github.com/advisories/GHSA-4qw4-jpp4-8gvp"/>
        <updated>2022-09-21T18:19:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>CommonMarker uses <code>cmark-gfm</code> for rendering <a href="https://github.github.com/gfm/">Github Flavored Markdown</a>. A polynomial time complexity issue in cmark-gfm's autolink extension may lead to unbounded resource exhaustion and subsequent denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in the following CommonMarker release:</p>
<ul>
<li>v0.23.6</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Disable use of the autolink extension.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/gjtorikian/commonmarker/pull/190">https://github.com/gjtorikian/commonmarker/pull/190</a>
<a href="https://github.com/github/cmark-gfm/security/advisories/GHSA-cgh3-p57x-9q7q">https://github.com/github/cmark-gfm/security/advisories/GHSA-cgh3-p57x-9q7q</a>
<a href="https://en.wikipedia.org/wiki/Time_complexity">https://en.wikipedia.org/wiki/Time_complexity</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/github/cmark-gfm">github/cmark-gfm</a></li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>We would like to thank <a href="https://www.legitsecurity.com">Legit Security</a> for reporting this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-4qw4-jpp4-8gvp">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-4qw4-jpp4-8gvp</a></li>
<li><a href="https://github.com/gjtorikian/commonmarker/pull/190">https://github.com/gjtorikian/commonmarker/pull/190</a></li>
<li><a href="https://github.com/gjtorikian/commonmarker/releases/tag/v0.23.6">https://github.com/gjtorikian/commonmarker/releases/tag/v0.23.6</a></li>
<li><a href="https://github.com/advisories/GHSA-4qw4-jpp4-8gvp">https://github.com/advisories/GHSA-4qw4-jpp4-8gvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4qw4-jpp4-8gvp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T18:18:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[arr-pm] arr-pm vulnerable to arbitrary shell execution when extracting or listing files contained in a malicious rpm.]]></title>
        <id>https://github.com/advisories/GHSA-88cv-mj24-8w3q</id>
        <link href="https://github.com/advisories/GHSA-88cv-mj24-8w3q"/>
        <updated>2022-09-23T17:09:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary shell execution is possible when using RPM::File#files and RPM::File#extract if the RPM contains a malicious "payload compressor" field.</p>
<p>This vulnerability impacts the <code>extract</code> and <code>files</code> methods of the <code>RPM::File</code> class in the affected versions of this library.</p>
<h3 id="patches">Patches</h3>
<p>Version 0.0.12 is available with a fix for these issues.</p>
<h3 id="workarounds">Workarounds</h3>
<p>When using an affected version of this library (arr-pm), ensure any RPMs being processed contain valid/known payload compressor values. Such values include: gzip, bzip2, xz, zstd, and lzma.</p>
<p>You can check the payload compressor field in an rpm by using the rpm command line tool. For example:</p>
<pre><code>% rpm -qp example-1.0-1.x86_64.rpm --qf "%{PAYLOADCOMPRESSOR}\n"
gzip
</code></pre>
<h3 id="impact-on-known-dependent-projects">Impact on known dependent projects</h3>
<p>This library is used by <a href="https://github.com/jordansissel/fpm">fpm</a>. The vulnerability may impact fpm only when using the flag <code>-s rpm</code> or <code>--input-type rpm</code> to convert a malicious rpm to another format. It does not impact creating rpms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jordansissel/ruby-arr-pm/pull/14">https://github.com/jordansissel/ruby-arr-pm/pull/14</a></li>
<li><a href="https://github.com/jordansissel/ruby-arr-pm/pull/15">https://github.com/jordansissel/ruby-arr-pm/pull/15</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>Thanks to @joernchen for reporting this problem and contributing to the resolution :)</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/jordansissel/ruby-arr-pm/">the arr-pm issue tracker</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jordansissel/ruby-arr-pm/security/advisories/GHSA-88cv-mj24-8w3q">https://github.com/jordansissel/ruby-arr-pm/security/advisories/GHSA-88cv-mj24-8w3q</a></li>
<li><a href="https://github.com/jordansissel/ruby-arr-pm/pull/14">https://github.com/jordansissel/ruby-arr-pm/pull/14</a></li>
<li><a href="https://github.com/jordansissel/ruby-arr-pm/pull/15">https://github.com/jordansissel/ruby-arr-pm/pull/15</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39224">https://nvd.nist.gov/vuln/detail/CVE-2022-39224</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/arr-pm/CVE-2022-39224.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/arr-pm/CVE-2022-39224.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-88cv-mj24-8w3q">https://github.com/advisories/GHSA-88cv-mj24-8w3q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-88cv-mj24-8w3q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T17:00:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pageflow] Pageflow vulnerable to insecure direct object reference in membership update endpoint]]></title>
        <id>https://github.com/advisories/GHSA-qcqv-38jg-2r43</id>
        <link href="https://github.com/advisories/GHSA-qcqv-38jg-2r43"/>
        <updated>2022-09-15T17:56:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Pageflow has a membership edit feature which allows users to edit the roles of user memberships associated with an account that they have the <code>manager</code> role to (including their own). While the <code>Entity</code> dropdown select field is greyed out in the UI, an attacker can use tools which allow sending arbitrary HTTP request to craft a request to the <code>/admin/users/{user_id}/memberships/{membership_id}</code> endpoint containing an additional <code>membership[entity_id]</code> parameter. This parameter is honored when the membership is updated, allowing an attacker to update the membership object associated with their own account (with <code>manager</code> role) to be associated with a different attacker-chosen account instead. Since <code>account_id</code>s are enumerable, an attacker can compromise all accounts present on the platform.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to version 15.7.1 or 14.5.2 of the <code>pageflow</code> gem.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory email us at info(at)codevise.de </p>
<h3 id="credits">Credits</h3>
<p><a href="https://positive.security/">Positive Security</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codevise/pageflow/security/advisories/GHSA-qcqv-38jg-2r43">https://github.com/codevise/pageflow/security/advisories/GHSA-qcqv-38jg-2r43</a></li>
<li><a href="https://github.com/codevise/pageflow/pull/1862">https://github.com/codevise/pageflow/pull/1862</a></li>
<li><a href="https://github.com/advisories/GHSA-qcqv-38jg-2r43">https://github.com/advisories/GHSA-qcqv-38jg-2r43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcqv-38jg-2r43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-15T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pageflow] Pageflow vulnerable to insecure direct object reference in membership update endpoint]]></title>
        <id>https://github.com/advisories/GHSA-qcqv-38jg-2r43</id>
        <link href="https://github.com/advisories/GHSA-qcqv-38jg-2r43"/>
        <updated>2022-09-15T17:56:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Pageflow has a membership edit feature which allows users to edit the roles of user memberships associated with an account that they have the <code>manager</code> role to (including their own). While the <code>Entity</code> dropdown select field is greyed out in the UI, an attacker can use tools which allow sending arbitrary HTTP request to craft a request to the <code>/admin/users/{user_id}/memberships/{membership_id}</code> endpoint containing an additional <code>membership[entity_id]</code> parameter. This parameter is honored when the membership is updated, allowing an attacker to update the membership object associated with their own account (with <code>manager</code> role) to be associated with a different attacker-chosen account instead. Since <code>account_id</code>s are enumerable, an attacker can compromise all accounts present on the platform.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to version 15.7.1 or 14.5.2 of the <code>pageflow</code> gem.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory email us at info(at)codevise.de </p>
<h3 id="credits">Credits</h3>
<p><a href="https://positive.security/">Positive Security</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codevise/pageflow/security/advisories/GHSA-qcqv-38jg-2r43">https://github.com/codevise/pageflow/security/advisories/GHSA-qcqv-38jg-2r43</a></li>
<li><a href="https://github.com/codevise/pageflow/pull/1862">https://github.com/codevise/pageflow/pull/1862</a></li>
<li><a href="https://github.com/advisories/GHSA-qcqv-38jg-2r43">https://github.com/advisories/GHSA-qcqv-38jg-2r43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcqv-38jg-2r43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-15T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pageflow] Pageflow vulnerable to sensitive user data extraction via Ransack query injection]]></title>
        <id>https://github.com/advisories/GHSA-wrrw-crp8-979q</id>
        <link href="https://github.com/advisories/GHSA-wrrw-crp8-979q"/>
        <updated>2022-09-15T17:56:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The attack allows extracting sensitive properties of database objects that are associated with users or entries belonging to an account that the attacker has access to.</p>
<p>Pageflow uses the <code>ActiveAdmin</code> Ruby library to provide some management features to its users. <code>ActiveAdmin</code> relies on the <code>Ransack</code> library to implement search functionality. In its default configuration, <code>Ransack</code> will allow for query conditions based on properties of associated database objects [1]. The <code>*_starts_with</code>, <code>*_ends_with</code> or <code>*_contains</code> search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force.</p>
<p>[1] <a href="https://activerecord-hackery.github.io/ransack/going-further/associations/">https://activerecord-hackery.github.io/ransack/going-further/associations/</a>
[2] <a href="https://activerecord-hackery.github.io/ransack/getting-started/search-matches/">https://activerecord-hackery.github.io/ransack/getting-started/search-matches/</a></p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to version 15.7.1 or 14.5.2 of the <code>pageflow</code> gem.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory email us at info(at)codevise.de </p>
<h3 id="credits">Credits</h3>
<p><a href="https://positive.security/">Positive Security</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codevise/pageflow/security/advisories/GHSA-wrrw-crp8-979q">https://github.com/codevise/pageflow/security/advisories/GHSA-wrrw-crp8-979q</a></li>
<li><a href="https://github.com/codevise/pageflow/pull/1862">https://github.com/codevise/pageflow/pull/1862</a></li>
<li><a href="https://github.com/advisories/GHSA-wrrw-crp8-979q">https://github.com/advisories/GHSA-wrrw-crp8-979q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrrw-crp8-979q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-15T03:21:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pageflow] Pageflow vulnerable to sensitive user data extraction via Ransack query injection]]></title>
        <id>https://github.com/advisories/GHSA-wrrw-crp8-979q</id>
        <link href="https://github.com/advisories/GHSA-wrrw-crp8-979q"/>
        <updated>2022-09-15T17:56:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The attack allows extracting sensitive properties of database objects that are associated with users or entries belonging to an account that the attacker has access to.</p>
<p>Pageflow uses the <code>ActiveAdmin</code> Ruby library to provide some management features to its users. <code>ActiveAdmin</code> relies on the <code>Ransack</code> library to implement search functionality. In its default configuration, <code>Ransack</code> will allow for query conditions based on properties of associated database objects [1]. The <code>*_starts_with</code>, <code>*_ends_with</code> or <code>*_contains</code> search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force.</p>
<p>[1] <a href="https://activerecord-hackery.github.io/ransack/going-further/associations/">https://activerecord-hackery.github.io/ransack/going-further/associations/</a>
[2] <a href="https://activerecord-hackery.github.io/ransack/getting-started/search-matches/">https://activerecord-hackery.github.io/ransack/getting-started/search-matches/</a></p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to version 15.7.1 or 14.5.2 of the <code>pageflow</code> gem.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory email us at info(at)codevise.de </p>
<h3 id="credits">Credits</h3>
<p><a href="https://positive.security/">Positive Security</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codevise/pageflow/security/advisories/GHSA-wrrw-crp8-979q">https://github.com/codevise/pageflow/security/advisories/GHSA-wrrw-crp8-979q</a></li>
<li><a href="https://github.com/codevise/pageflow/pull/1862">https://github.com/codevise/pageflow/pull/1862</a></li>
<li><a href="https://github.com/advisories/GHSA-wrrw-crp8-979q">https://github.com/advisories/GHSA-wrrw-crp8-979q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrrw-crp8-979q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-15T03:21:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Nokogiri is vulnerable to XML External Entity (XXE) attack]]></title>
        <id>https://github.com/advisories/GHSA-6wj9-77wq-jq7p</id>
        <link href="https://github.com/advisories/GHSA-6wj9-77wq-jq7p"/>
        <updated>2022-09-12T16:55:40.000Z</updated>
        <content type="html"><![CDATA[<p>Nokogiri before 1.5.4 is vulnerable to XXE attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6685">https://nvd.nist.gov/vuln/detail/CVE-2012-6685</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/issues/693">https://github.com/sparklemotion/nokogiri/issues/693</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1178970">https://bugzilla.redhat.com/show_bug.cgi?id=1178970</a></li>
<li><a href="https://nokogiri.org/CHANGELOG.html#154-2012-06-12">https://nokogiri.org/CHANGELOG.html#154-2012-06-12</a></li>
<li><a href="https://github.com/advisories/GHSA-6wj9-77wq-jq7p">https://github.com/advisories/GHSA-6wj9-77wq-jq7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wj9-77wq-jq7p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-23T00:40:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[omniauth] OmniAuth's `lib/omniauth/failure_endpoint.rb` does not escape `message_key` value]]></title>
        <id>https://github.com/advisories/GHSA-pm55-qfxr-h247</id>
        <link href="https://github.com/advisories/GHSA-pm55-qfxr-h247"/>
        <updated>2022-09-19T21:56:49.000Z</updated>
        <content type="html"><![CDATA[<p>lib/omniauth/failure_endpoint.rb in OmniAuth before 1.9.2 (and before 2.0) does not escape the message_key value.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36599">https://nvd.nist.gov/vuln/detail/CVE-2020-36599</a></li>
<li><a href="https://github.com/omniauth/omniauth/commit/43a396f181ef7d0ed2ec8291c939c95e3ed3ff00#diff-575abda9deb9b1a77bf534e898a923029b9a61e991d626db88dc6e8b34260aa2">https://github.com/omniauth/omniauth/commit/43a396f181ef7d0ed2ec8291c939c95e3ed3ff00#diff-575abda9deb9b1a77bf534e898a923029b9a61e991d626db88dc6e8b34260aa2</a></li>
<li><a href="https://rubygems.org/gems/omniauth/versions/1.9.2">https://rubygems.org/gems/omniauth/versions/1.9.2</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/omniauth/CVE-2020-36599.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/omniauth/CVE-2020-36599.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-pm55-qfxr-h247">https://github.com/advisories/GHSA-pm55-qfxr-h247</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pm55-qfxr-h247</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-19T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[omniauth] OmniAuth's `lib/omniauth/failure_endpoint.rb` does not escape `message_key` value]]></title>
        <id>https://github.com/advisories/GHSA-pm55-qfxr-h247</id>
        <link href="https://github.com/advisories/GHSA-pm55-qfxr-h247"/>
        <updated>2022-09-19T21:56:49.000Z</updated>
        <content type="html"><![CDATA[<p>lib/omniauth/failure_endpoint.rb in OmniAuth before 1.9.2 (and before 2.0) does not escape the message_key value.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36599">https://nvd.nist.gov/vuln/detail/CVE-2020-36599</a></li>
<li><a href="https://github.com/omniauth/omniauth/commit/43a396f181ef7d0ed2ec8291c939c95e3ed3ff00#diff-575abda9deb9b1a77bf534e898a923029b9a61e991d626db88dc6e8b34260aa2">https://github.com/omniauth/omniauth/commit/43a396f181ef7d0ed2ec8291c939c95e3ed3ff00#diff-575abda9deb9b1a77bf534e898a923029b9a61e991d626db88dc6e8b34260aa2</a></li>
<li><a href="https://rubygems.org/gems/omniauth/versions/1.9.2">https://rubygems.org/gems/omniauth/versions/1.9.2</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/omniauth/CVE-2020-36599.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/omniauth/CVE-2020-36599.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-pm55-qfxr-h247">https://github.com/advisories/GHSA-pm55-qfxr-h247</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pm55-qfxr-h247</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-19T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lita-coin] Backdoor / Malicious code]]></title>
        <id>https://github.com/advisories/GHSA-q2hm-gx3f-h63q</id>
        <link href="https://github.com/advisories/GHSA-q2hm-gx3f-h63q"/>
        <updated>2022-08-13T03:05:05.000Z</updated>
        <content type="html"><![CDATA[<p>lita-coin 0.0.3 contains a backdoor mechanism that allows launching of hidden cryptocurrency mining operations inside the project. The code also contained a backdoor mechanism that allowed the attacker to send a cookie file back to a compromised project, and allow the attacker to execute malicious commands.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-15224">https://nvd.nist.gov/vuln/detail/CVE-2019-15224</a></li>
<li><a href="https://www.zdnet.com/article/backdoor-code-found-in-11-ruby-libraries/">https://www.zdnet.com/article/backdoor-code-found-in-11-ruby-libraries/</a></li>
<li><a href="https://github.com/advisories/GHSA-q2hm-gx3f-h63q">https://github.com/advisories/GHSA-q2hm-gx3f-h63q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q2hm-gx3f-h63q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-02-23T21:23:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[devise_invitable] Cross-Site Request Forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-wj5j-xpcj-45gc</id>
        <link href="https://github.com/advisories/GHSA-wj5j-xpcj-45gc"/>
        <updated>2022-08-13T03:04:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="withdrawn">Withdrawn</h1>
<p>Affected versions of the package are vulnerable to Cross-Site Request Forgery (CSRF) attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/scambra/devise_invitable/issues/457">https://github.com/scambra/devise_invitable/issues/457</a></li>
<li><a href="https://github.com/scambra/devise_invitable/commit/d1bb19efca8e35885e1c2f0931d6171fce8cf74e">https://github.com/scambra/devise_invitable/commit/d1bb19efca8e35885e1c2f0931d6171fce8cf74e</a></li>
<li><a href="https://www.sourceclear.com/vulnerability-database/security/cross-site-request-forgery-csrf/ruby/sid-2272/">https://www.sourceclear.com/vulnerability-database/security/cross-site-request-forgery-csrf/ruby/sid-2272/</a></li>
<li><a href="https://github.com/advisories/GHSA-wj5j-xpcj-45gc">https://github.com/advisories/GHSA-wj5j-xpcj-45gc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wj5j-xpcj-45gc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-02-24T19:17:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[update_by_case] update_by_case before 0.1.3 can be vulnerable to sql injection]]></title>
        <id>https://github.com/advisories/GHSA-33wh-w4m7-c6r8</id>
        <link href="https://github.com/advisories/GHSA-33wh-w4m7-c6r8"/>
        <updated>2022-08-22T19:42:22.000Z</updated>
        <content type="html"><![CDATA[<p>Before version 0.1.3 <code>update_by_case</code> gem used custom sql strings, and it was not sanitized, making it vulnerable to sql injection. Upgrade to version &gt;= 0.1.3 that uses <code>Arel</code> instead to construct the resulting sql statement, with sanitized sql.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/camilova/activerecord-update-by-case/security/advisories/GHSA-33wh-w4m7-c6r8">https://github.com/camilova/activerecord-update-by-case/security/advisories/GHSA-33wh-w4m7-c6r8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35956">https://nvd.nist.gov/vuln/detail/CVE-2022-35956</a></li>
<li><a href="https://github.com/camilova/activerecord-update-by-case/releases/tag/v0.1.3-stable">https://github.com/camilova/activerecord-update-by-case/releases/tag/v0.1.3-stable</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/update_by_case/CVE-2022-35956.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/update_by_case/CVE-2022-35956.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-33wh-w4m7-c6r8">https://github.com/advisories/GHSA-33wh-w4m7-c6r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-33wh-w4m7-c6r8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-11T21:18:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[puppet] Tarball permission preservation in puppet]]></title>
        <id>https://github.com/advisories/GHSA-vw22-465p-8j5w</id>
        <link href="https://github.com/advisories/GHSA-vw22-465p-8j5w"/>
        <updated>2022-07-22T16:38:31.000Z</updated>
        <content type="html"><![CDATA[<p>When installing a module using the system tar, the PMT will filter filesystem permissions to a sane value. This may just be based on the user's umask.</p>
<p>When using minitar, files are unpacked with whatever permissions are in the tarball. This is potentially unsafe, as tarballs can be easily created with weird permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-10689">https://nvd.nist.gov/vuln/detail/CVE-2017-10689</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2927">https://access.redhat.com/errata/RHSA-2018:2927</a></li>
<li><a href="https://puppet.com/security/cve/CVE-2017-10689">https://puppet.com/security/cve/CVE-2017-10689</a></li>
<li><a href="https://usn.ubuntu.com/3567-1/">https://usn.ubuntu.com/3567-1/</a></li>
<li><a href="https://github.com/puppetlabs/puppet/commit/17d9e02da3882e44c1876e2805cf9708481715ee">https://github.com/puppetlabs/puppet/commit/17d9e02da3882e44c1876e2805cf9708481715ee</a></li>
<li><a href="https://github.com/puppetlabs/puppet/commit/2f1047f85e22cde139a421bc25d371f2ffc92cb1">https://github.com/puppetlabs/puppet/commit/2f1047f85e22cde139a421bc25d371f2ffc92cb1</a></li>
<li><a href="https://tickets.puppetlabs.com/browse/PUP-7866">https://tickets.puppetlabs.com/browse/PUP-7866</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puppet/CVE-2017-10689.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puppet/CVE-2017-10689.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vw22-465p-8j5w">https://github.com/advisories/GHSA-vw22-465p-8j5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vw22-465p-8j5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:41:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[puppet] Tarball permission preservation in puppet]]></title>
        <id>https://github.com/advisories/GHSA-vw22-465p-8j5w</id>
        <link href="https://github.com/advisories/GHSA-vw22-465p-8j5w"/>
        <updated>2022-07-22T16:38:31.000Z</updated>
        <content type="html"><![CDATA[<p>When installing a module using the system tar, the PMT will filter filesystem permissions to a sane value. This may just be based on the user's umask.</p>
<p>When using minitar, files are unpacked with whatever permissions are in the tarball. This is potentially unsafe, as tarballs can be easily created with weird permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-10689">https://nvd.nist.gov/vuln/detail/CVE-2017-10689</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2927">https://access.redhat.com/errata/RHSA-2018:2927</a></li>
<li><a href="https://puppet.com/security/cve/CVE-2017-10689">https://puppet.com/security/cve/CVE-2017-10689</a></li>
<li><a href="https://usn.ubuntu.com/3567-1/">https://usn.ubuntu.com/3567-1/</a></li>
<li><a href="https://github.com/puppetlabs/puppet/commit/17d9e02da3882e44c1876e2805cf9708481715ee">https://github.com/puppetlabs/puppet/commit/17d9e02da3882e44c1876e2805cf9708481715ee</a></li>
<li><a href="https://github.com/puppetlabs/puppet/commit/2f1047f85e22cde139a421bc25d371f2ffc92cb1">https://github.com/puppetlabs/puppet/commit/2f1047f85e22cde139a421bc25d371f2ffc92cb1</a></li>
<li><a href="https://tickets.puppetlabs.com/browse/PUP-7866">https://tickets.puppetlabs.com/browse/PUP-7866</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puppet/CVE-2017-10689.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puppet/CVE-2017-10689.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vw22-465p-8j5w">https://github.com/advisories/GHSA-vw22-465p-8j5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vw22-465p-8j5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:41:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tzinfo] TZInfo relative path traversal vulnerability allows loading of arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-5cm2-9h8c-rvfx</id>
        <link href="https://github.com/advisories/GHSA-5cm2-9h8c-rvfx"/>
        <updated>2022-08-19T17:08:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="affected-versions">Affected versions</h4>
<ul>
<li>0.3.60 and earlier.</li>
<li>1.0.0 to 1.2.9 when used with the Ruby data source (tzinfo-data).</li>
</ul>
<h4 id="vulnerability">Vulnerability</h4>
<p>With the Ruby data source (the tzinfo-data gem for tzinfo version 1.0.0 and later and built-in to earlier versions), time zones are defined in Ruby files. There is one file per time zone. Time zone files are loaded with <code>require</code> on demand. In the affected versions, <code>TZInfo::Timezone.get</code> fails to validate time zone identifiers correctly, allowing a new line character within the identifier. With Ruby version 1.9.3 and later, <code>TZInfo::Timezone.get</code> can be made to load unintended files with <code>require</code>, executing them within the Ruby process.</p>
<p>For example, with version 1.2.9, you can run the following to load a file with path <code>/tmp/payload.rb</code>:</p>
<pre><code class="language-ruby">TZInfo::Timezone.get("foo\n/../../../../../../../../../../../../../../../../tmp/payload")
</code></pre>
<p>The exact number of parent directory traversals needed will vary depending on the location of the tzinfo-data gem.</p>
<p>TZInfo versions 1.2.6 to 1.2.9 can be made to load files from outside of the Ruby load path. Versions up to and including 1.2.5 can only be made to load files from directories within the load path. </p>
<p>This could be exploited in, for example, a Ruby on Rails application using tzinfo version 1.2.9, that allows file uploads and has a time zone selector that accepts arbitrary time zone identifiers. The CVSS score and severity have been set on this basis.</p>
<p>Versions 2.0.0 and later are not vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>Versions 0.3.61 and 1.2.10 include fixes to correctly validate time zone identifiers (commit 9eddbb5c0e682736f61d0dd803b6031a5db9eadf for 0.3.x and commit 9905ca93abf7bf3e387bd592406e403cd18334c7 for 1.2.x).</p>
<p>Note that version 0.3.61 can still load arbitrary files from the Ruby load path if their name follows the rules for a valid time zone identifier and the file has a prefix of <code>tzinfo/definition</code> within a directory in the load path. For example if <code>/tmp/upload</code> was in the load path, then <code>TZInfo::Timezone.get('foo')</code> could load a file with path <code>/tmp/upload/tzinfo/definition/foo.rb</code>. Applications should ensure that untrusted files are not placed in a directory on the load path.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, the time zone identifier can be validated before passing to <code>TZInfo::Timezone.get</code> by ensuring it matches the regular expression <code>\A[A-Za-z0-9+\-_]+(?:\/[A-Za-z0-9+\-_]+)*\z</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/tzinfo/tzinfo">the tzinfo repository</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tzinfo/tzinfo/security/advisories/GHSA-5cm2-9h8c-rvfx">https://github.com/tzinfo/tzinfo/security/advisories/GHSA-5cm2-9h8c-rvfx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31163">https://nvd.nist.gov/vuln/detail/CVE-2022-31163</a></li>
<li><a href="https://github.com/tzinfo/tzinfo/releases/tag/v0.3.61">https://github.com/tzinfo/tzinfo/releases/tag/v0.3.61</a></li>
<li><a href="https://github.com/tzinfo/tzinfo/releases/tag/v1.2.10">https://github.com/tzinfo/tzinfo/releases/tag/v1.2.10</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/tzinfo/CVE-2022-31163.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/tzinfo/CVE-2022-31163.yml</a></li>
<li><a href="https://github.com/tzinfo/tzinfo/commit/9905ca93abf7bf3e387bd592406e403cd18334c7">https://github.com/tzinfo/tzinfo/commit/9905ca93abf7bf3e387bd592406e403cd18334c7</a></li>
<li><a href="https://github.com/tzinfo/tzinfo/commit/9eddbb5c0e682736f61d0dd803b6031a5db9eadf">https://github.com/tzinfo/tzinfo/commit/9eddbb5c0e682736f61d0dd803b6031a5db9eadf</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/08/msg00009.html">https://lists.debian.org/debian-lts-announce/2022/08/msg00009.html</a></li>
<li><a href="https://github.com/advisories/GHSA-5cm2-9h8c-rvfx">https://github.com/advisories/GHSA-5cm2-9h8c-rvfx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5cm2-9h8c-rvfx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-21T21:39:29.000Z</published>
    </entry>
</feed>