<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2022-12-20T14:01:29.541Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[rails-html-sanitizer] Possible XSS vulnerability with certain configurations of rails-html-sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-rrfc-7g8p-99q8</id>
        <link href="https://github.com/advisories/GHSA-rrfc-7g8p-99q8"/>
        <updated>2022-12-17T00:32:46.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer. This is due to an incomplete fix of CVE-2022-32209.</p>
<ul>
<li>Versions affected: ALL</li>
<li>Not affected: NONE</li>
<li>Fixed versions: 1.4.4</li>
</ul>
<h2 id="impact">Impact</h2>
<p>A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both "select" and "style" elements.</p>
<p>Code is only impacted if allowed tags are being overridden using either of the following two mechanisms:</p>
<ol>
<li>Using the Rails configuration <code>config.action_view.sanitized_allow_tags=</code>:</li>
</ol>
<pre><code class="language-ruby"># In config/application.rb
config.action_view.sanitized_allowed_tags = ["select", "style"]
</code></pre>
<p>  (see <a href="https://guides.rubyonrails.org/configuring.html#configuring-action-view">https://guides.rubyonrails.org/configuring.html#configuring-action-view</a>)</p>
<ol start="2">
<li>Using the class method <code>Rails::Html::SafeListSanitizer.allowed_tags=</code>:</li>
</ol>
<pre><code class="language-ruby"># class-level option
Rails::Html::SafeListSanitizer.allowed_tags = ["select", "style"]
</code></pre>
<p>All users overriding the allowed tags by either of the above mechanisms to include both "select" and "style" should either upgrade or use one of the workarounds immediately.</p>
<p>NOTE: Code is <em>not</em> impacted if allowed tags are overridden using either of the following mechanisms:</p>
<ul>
<li>the <code>:tags</code> option to the Action View helper method <code>sanitize</code>.</li>
<li>the <code>:tags</code> option to the instance method <code>SafeListSanitizer#sanitize</code>.</li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>Remove either "select" or "style" from the overridden allowed tags.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209</a></li>
<li><a href="https://hackerone.com/reports/1654310">https://hackerone.com/reports/1654310</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by Dominic Breuker.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8</a></li>
<li><a href="https://hackerone.com/reports/1654310">https://hackerone.com/reports/1654310</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23520">https://nvd.nist.gov/vuln/detail/CVE-2022-23520</a></li>
<li><a href="https://github.com/advisories/GHSA-rrfc-7g8p-99q8">https://github.com/advisories/GHSA-rrfc-7g8p-99q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrfc-7g8p-99q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-13T17:51:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails-html-sanitizer] Possible XSS vulnerability with certain configurations of rails-html-sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-9h9g-93gc-623h</id>
        <link href="https://github.com/advisories/GHSA-9h9g-93gc-623h"/>
        <updated>2022-12-17T00:32:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.</p>
<ul>
<li>Versions affected: ALL</li>
<li>Not affected: NONE</li>
<li>Fixed versions: 1.4.4</li>
</ul>
<h2 id="impact">Impact</h2>
<p>A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways:</p>
<ul>
<li>allow both "math" and "style" elements,</li>
<li>or allow both "svg" and "style" elements</li>
</ul>
<p>Code is only impacted if allowed tags are being overridden. Applications may be doing this in four different ways:</p>
<ol>
<li>using application configuration:</li>
</ol>
<pre><code class="language-ruby"># In config/application.rb
config.action_view.sanitized_allowed_tags = ["math", "style"]
# or
config.action_view.sanitized_allowed_tags = ["svg", "style"]
</code></pre>
<p>  see <a href="https://guides.rubyonrails.org/configuring.html#configuring-action-view">https://guides.rubyonrails.org/configuring.html#configuring-action-view</a></p>
<ol start="2">
<li>using a <code>:tags</code> option to the Action View helper <code>sanitize</code>:</li>
</ol>
<pre><code>&lt;%= sanitize @comment.body, tags: ["math", "style"] %&gt;
&lt;%# or %&gt;
&lt;%= sanitize @comment.body, tags: ["svg", "style"] %&gt;
</code></pre>
<p>  see <a href="https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize">https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize</a></p>
<ol start="3">
<li>using Rails::Html::SafeListSanitizer class method <code>allowed_tags=</code>:</li>
</ol>
<pre><code class="language-ruby"># class-level option
Rails::Html::SafeListSanitizer.allowed_tags = ["math", "style"]
# or
Rails::Html::SafeListSanitizer.allowed_tags = ["svg", "style"]
</code></pre>
<ol start="4">
<li>using a <code>:tags</code> options to the Rails::Html::SafeListSanitizer instance method <code>sanitize</code>:</li>
</ol>
<pre><code class="language-ruby"># instance-level option
Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: ["math", "style"])
# or
Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: ["svg", "style"])
</code></pre>
<p>All users overriding the allowed tags by any of the above mechanisms to include (("math" or "svg") and "style") should either upgrade or use one of the workarounds immediately.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Remove "style" from the overridden allowed tags, or remove "math" and "svg" from the overridden allowed tags.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>
<li><a href="https://hackerone.com/reports/1656627">https://hackerone.com/reports/1656627</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by Dominic Breuker.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h</a></li>
<li><a href="https://hackerone.com/reports/1656627">https://hackerone.com/reports/1656627</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23519.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23519.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23519">https://nvd.nist.gov/vuln/detail/CVE-2022-23519</a></li>
<li><a href="https://github.com/advisories/GHSA-9h9g-93gc-623h">https://github.com/advisories/GHSA-9h9g-93gc-623h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h9g-93gc-623h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-13T17:50:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails-html-sanitizer] Improper neutralization of data URIs may allow XSS in rails-html-sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-mcvf-2q2m-x72m</id>
        <link href="https://github.com/advisories/GHSA-mcvf-2q2m-x72m"/>
        <updated>2022-12-16T21:45:21.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>rails-html-sanitizer <code>&gt;= 1.0.3, &lt; 1.4.4</code> is vulnerable to cross-site scripting via data URIs when used in combination with Loofah <code>&gt;= 2.1.0</code>.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to rails-html-sanitizer <code>&gt;= 1.4.4</code>.</p>
<h2 id="severity">Severity</h2>
<p>The maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N">Medium Severity 6.1</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>
<li><a href="https://github.com/w3c/svgwg/issues/266">SVG MIME Type (image/svg+xml) is misleading to developers · Issue #266 · w3c/svgwg</a></li>
<li><a href="https://github.com/rails/rails-html-sanitizer/issues/135">https://github.com/rails/rails-html-sanitizer/issues/135</a></li>
<li><a href="https://hackerone.com/reports/1694173">https://hackerone.com/reports/1694173</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was independently reported by Maciej Piechota (@haqpl) and Mrinmoy Das (@goromlagche).</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-mcvf-2q2m-x72m">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-mcvf-2q2m-x72m</a></li>
<li><a href="https://github.com/rails/rails-html-sanitizer/issues/135">https://github.com/rails/rails-html-sanitizer/issues/135</a></li>
<li><a href="https://github.com/w3c/svgwg/issues/266">https://github.com/w3c/svgwg/issues/266</a></li>
<li><a href="https://hackerone.com/reports/1694173">https://hackerone.com/reports/1694173</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23518.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23518.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23518">https://nvd.nist.gov/vuln/detail/CVE-2022-23518</a></li>
<li><a href="https://github.com/advisories/GHSA-mcvf-2q2m-x72m">https://github.com/advisories/GHSA-mcvf-2q2m-x72m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mcvf-2q2m-x72m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-13T17:45:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails-html-sanitizer] Inefficient Regular Expression Complexity in rails-html-sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-5x79-w82f-gw8w</id>
        <link href="https://github.com/advisories/GHSA-5x79-w82f-gw8w"/>
        <updated>2022-12-14T20:45:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Certain configurations of rails-html-sanitizer <code>&lt; 1.4.4</code> use an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to rails-html-sanitizer <code>&gt;= 1.4.4</code>.</p>
<h2 id="severity">Severity</h2>
<p>The maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H">High Severity 7.5 (CVSS3.1)</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/1333.html">CWE - CWE-1333: Inefficient Regular Expression Complexity (4.9)</a></li>
<li><a href="https://hackerone.com/reports/1684163">https://hackerone.com/reports/1684163</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by @ooooooo-q (<a href="https://github.com/ooooooo-q">https://github.com/ooooooo-q</a>).</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-5x79-w82f-gw8w">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-5x79-w82f-gw8w</a></li>
<li><a href="https://github.com/rails/rails-html-sanitizer/commit/56c61c0cebd1e493e8ad7bca2a0191609a4a6979">https://github.com/rails/rails-html-sanitizer/commit/56c61c0cebd1e493e8ad7bca2a0191609a4a6979</a></li>
<li><a href="https://hackerone.com/reports/1684163">https://hackerone.com/reports/1684163</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23517.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23517.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23517">https://nvd.nist.gov/vuln/detail/CVE-2022-23517</a></li>
<li><a href="https://github.com/advisories/GHSA-5x79-w82f-gw8w">https://github.com/advisories/GHSA-5x79-w82f-gw8w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5x79-w82f-gw8w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-13T17:43:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loofah] Uncontrolled Recursion in Loofah]]></title>
        <id>https://github.com/advisories/GHSA-3x8r-x6xp-q4vm</id>
        <link href="https://github.com/advisories/GHSA-3x8r-x6xp-q4vm"/>
        <updated>2022-12-14T20:45:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Loofah <code>&gt;= 2.2.0, &lt; 2.19.1</code> uses recursion for sanitizing <code>CDATA</code> sections, making it susceptible to stack exhaustion and raising a <code>SystemStackError</code> exception.  This may lead to a denial of service through CPU resource consumption.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>
<p>Users who are unable to upgrade may be able to mitigate this vulnerability by limiting the length of the strings that are sanitized.</p>
<h2 id="severity">Severity</h2>
<p>The Loofah maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H">High Severity 7.5 (CVSS3.1)</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/674.html">CWE - CWE-674: Uncontrolled Recursion (4.9)</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/flavorjones/loofah/security/advisories/GHSA-3x8r-x6xp-q4vm">https://github.com/flavorjones/loofah/security/advisories/GHSA-3x8r-x6xp-q4vm</a></li>
<li><a href="https://github.com/flavorjones/loofah/commit/86f7f6364491b0099d215db858ecdc0c89ded040">https://github.com/flavorjones/loofah/commit/86f7f6364491b0099d215db858ecdc0c89ded040</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23516.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23516.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23516">https://nvd.nist.gov/vuln/detail/CVE-2022-23516</a></li>
<li><a href="https://github.com/advisories/GHSA-3x8r-x6xp-q4vm">https://github.com/advisories/GHSA-3x8r-x6xp-q4vm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3x8r-x6xp-q4vm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-13T17:40:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loofah] Improper neutralization of data URIs may allow XSS in Loofah]]></title>
        <id>https://github.com/advisories/GHSA-228g-948r-83gx</id>
        <link href="https://github.com/advisories/GHSA-228g-948r-83gx"/>
        <updated>2022-12-14T20:45:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Loofah <code>&gt;= 2.1.0, &lt; 2.19.1</code> is vulnerable to cross-site scripting via the <code>image/svg+xml</code> media type in data URIs.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>
<h2 id="severity">Severity</h2>
<p>The Loofah maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N">Medium Severity 6.1</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>
<li><a href="https://github.com/w3c/svgwg/issues/266">SVG MIME Type (image/svg+xml) is misleading to developers · Issue #266 · w3c/svgwg</a></li>
<li><a href="https://hackerone.com/reports/1694173">https://hackerone.com/reports/1694173</a></li>
<li><a href="https://github.com/flavorjones/loofah/issues/101">https://github.com/flavorjones/loofah/issues/101</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by Maciej Piechota (@haqpl).</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/flavorjones/loofah/security/advisories/GHSA-228g-948r-83gx">https://github.com/flavorjones/loofah/security/advisories/GHSA-228g-948r-83gx</a></li>
<li><a href="https://github.com/flavorjones/loofah/issues/101">https://github.com/flavorjones/loofah/issues/101</a></li>
<li><a href="https://github.com/w3c/svgwg/issues/266">https://github.com/w3c/svgwg/issues/266</a></li>
<li><a href="https://github.com/flavorjones/loofah/commit/415677f3cf7f9254f42f811e784985cd63c7407f">https://github.com/flavorjones/loofah/commit/415677f3cf7f9254f42f811e784985cd63c7407f</a></li>
<li><a href="https://hackerone.com/reports/1694173">https://hackerone.com/reports/1694173</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23515.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23515.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23515">https://nvd.nist.gov/vuln/detail/CVE-2022-23515</a></li>
<li><a href="https://github.com/advisories/GHSA-228g-948r-83gx">https://github.com/advisories/GHSA-228g-948r-83gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-228g-948r-83gx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-13T17:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loofah] Inefficient Regular Expression Complexity in Loofah]]></title>
        <id>https://github.com/advisories/GHSA-486f-hjj9-9vhh</id>
        <link href="https://github.com/advisories/GHSA-486f-hjj9-9vhh"/>
        <updated>2022-12-14T20:45:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Loofah <code>&lt; 2.19.1</code> contains an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>
<h2 id="severity">Severity</h2>
<p>The Loofah maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H">High Severity 7.5 (CVSS3.1)</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/1333.html">CWE - CWE-1333: Inefficient Regular Expression Complexity (4.9)</a></li>
<li><a href="https://hackerone.com/reports/1684163">https://hackerone.com/reports/1684163</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by @ooooooo-q (<a href="https://github.com/ooooooo-q">https://github.com/ooooooo-q</a>).</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/flavorjones/loofah/security/advisories/GHSA-486f-hjj9-9vhh">https://github.com/flavorjones/loofah/security/advisories/GHSA-486f-hjj9-9vhh</a></li>
<li><a href="https://github.com/flavorjones/loofah/commit/a6e0a1ab90675a17b1b2be189129d94139e4b143">https://github.com/flavorjones/loofah/commit/a6e0a1ab90675a17b1b2be189129d94139e4b143</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23514.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23514.yml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23514">https://nvd.nist.gov/vuln/detail/CVE-2022-23514</a></li>
<li><a href="https://hackerone.com/reports/1684163">https://hackerone.com/reports/1684163</a></li>
<li><a href="https://github.com/advisories/GHSA-486f-hjj9-9vhh">https://github.com/advisories/GHSA-486f-hjj9-9vhh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-486f-hjj9-9vhh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-13T17:36:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sinatra] Sinatra vulnerable to Reflected File Download attack]]></title>
        <id>https://github.com/advisories/GHSA-2x8x-jmrp-phxw</id>
        <link href="https://github.com/advisories/GHSA-2x8x-jmrp-phxw"/>
        <updated>2022-12-12T20:48:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>An issue was discovered in Sinatra 2.0 before 2.2.3 and 3.0 before 3.0.4. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a response when the filename is derived from user-supplied input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>
<li><a href="https://github.com/advisories/GHSA-8x94-hmjh-97hq">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw">https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45442">https://nvd.nist.gov/vuln/detail/CVE-2022-45442</a></li>
<li><a href="https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b">https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b</a></li>
<li><a href="https://github.com/advisories/GHSA-8x94-hmjh-97hq">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>
<li><a href="https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-2x8x-jmrp-phxw">https://github.com/advisories/GHSA-2x8x-jmrp-phxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2x8x-jmrp-phxw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-30T21:18:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Unchecked return value from xmlTextReaderExpand]]></title>
        <id>https://github.com/advisories/GHSA-qv4q-mr5r-qprj</id>
        <link href="https://github.com/advisories/GHSA-qv4q-mr5r-qprj"/>
        <updated>2022-12-08T14:38:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nokogiri <code>1.13.8, 1.13.9</code> fails to check the return value from <code>xmlTextReaderExpand</code> in the method <code>Nokogiri::XML::Reader#attribute_hash</code>. This can lead to a null pointer exception when invalid markup is being parsed. </p>
<p>For applications using <code>XML::Reader</code> to parse untrusted inputs, this may potentially be a vector for a denial of service attack.</p>
<h2 id="mitigation">Mitigation</h2>
<p>Upgrade to Nokogiri <code>&gt;= 1.13.10</code>.</p>
<p>Users may be able to search their code for calls to either <code>XML::Reader#attributes</code> or <code>XML::Reader#attribute_hash</code> to determine if they are affected.</p>
<h2 id="severity">Severity</h2>
<p>The Nokogiri maintainers have evaluated this as <a href="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H">High Severity 7.5 (CVSS3.1)</a>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/252.html">CWE - CWE-252: Unchecked Return Value (4.9)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/476.html">CWE - CWE-476: NULL Pointer Dereference (4.9)</a></li>
</ul>
<h2 id="credit">Credit</h2>
<p>This vulnerability was responsibly reported by @davidwilemski.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-qv4q-mr5r-qprj">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-qv4q-mr5r-qprj</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/commit/85410e38410f670cbbc8c5b00d07b843caee88ce">https://github.com/sparklemotion/nokogiri/commit/85410e38410f670cbbc8c5b00d07b843caee88ce</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/commit/9fe0761c47c0d4270d1a5220cfd25de080350d50">https://github.com/sparklemotion/nokogiri/commit/9fe0761c47c0d4270d1a5220cfd25de080350d50</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23476">https://nvd.nist.gov/vuln/detail/CVE-2022-23476</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/CVE-2022-23476.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/CVE-2022-23476.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-qv4q-mr5r-qprj">https://github.com/advisories/GHSA-qv4q-mr5r-qprj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv4q-mr5r-qprj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-08T03:03:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sinatra] Sinatra vulnerable to Reflected File Download attack]]></title>
        <id>https://github.com/advisories/GHSA-2x8x-jmrp-phxw</id>
        <link href="https://github.com/advisories/GHSA-2x8x-jmrp-phxw"/>
        <updated>2022-12-12T20:48:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>An issue was discovered in Sinatra 2.0 before 2.2.3 and 3.0 before 3.0.4. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a response when the filename is derived from user-supplied input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>
<li><a href="https://github.com/advisories/GHSA-8x94-hmjh-97hq">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw">https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45442">https://nvd.nist.gov/vuln/detail/CVE-2022-45442</a></li>
<li><a href="https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b">https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b</a></li>
<li><a href="https://github.com/advisories/GHSA-8x94-hmjh-97hq">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>
<li><a href="https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-2x8x-jmrp-phxw">https://github.com/advisories/GHSA-2x8x-jmrp-phxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2x8x-jmrp-phxw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-30T21:18:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cgi] HTTP response splitting in CGI]]></title>
        <id>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</id>
        <link href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5"/>
        <updated>2022-12-09T15:47:43.000Z</updated>
        <content type="html"><![CDATA[<p>Ruby gem cgi.rb prior to versions 0.3.5, 0.2.2 and 0.1.0.2 allow HTTP header injection. If a CGI application using the CGI library inserts untrusted input into the HTTP response header, an attacker can exploit it to insert a newline character to split a header, and inject malicious content to deceive clients. This issue has been patched in versions 0.3.5, 0.2.2 and 0.1.0.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33621">https://nvd.nist.gov/vuln/detail/CVE-2021-33621</a></li>
<li><a href="https://hackerone.com/reports/1204695">https://hackerone.com/reports/1204695</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/">https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/</a></li>
<li><a href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5">https://github.com/advisories/GHSA-vc47-6rqg-c7f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-19T00:30:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cgi] HTTP response splitting in CGI]]></title>
        <id>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</id>
        <link href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5"/>
        <updated>2022-12-09T15:47:43.000Z</updated>
        <content type="html"><![CDATA[<p>Ruby gem cgi.rb prior to versions 0.3.5, 0.2.2 and 0.1.0.2 allow HTTP header injection. If a CGI application using the CGI library inserts untrusted input into the HTTP response header, an attacker can exploit it to insert a newline character to split a header, and inject malicious content to deceive clients. This issue has been patched in versions 0.3.5, 0.2.2 and 0.1.0.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33621">https://nvd.nist.gov/vuln/detail/CVE-2021-33621</a></li>
<li><a href="https://hackerone.com/reports/1204695">https://hackerone.com/reports/1204695</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/">https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/</a></li>
<li><a href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5">https://github.com/advisories/GHSA-vc47-6rqg-c7f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-19T00:30:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cgi] HTTP response splitting in CGI]]></title>
        <id>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</id>
        <link href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5"/>
        <updated>2022-12-09T15:47:43.000Z</updated>
        <content type="html"><![CDATA[<p>Ruby gem cgi.rb prior to versions 0.3.5, 0.2.2 and 0.1.0.2 allow HTTP header injection. If a CGI application using the CGI library inserts untrusted input into the HTTP response header, an attacker can exploit it to insert a newline character to split a header, and inject malicious content to deceive clients. This issue has been patched in versions 0.3.5, 0.2.2 and 0.1.0.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33621">https://nvd.nist.gov/vuln/detail/CVE-2021-33621</a></li>
<li><a href="https://hackerone.com/reports/1204695">https://hackerone.com/reports/1204695</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-33621.yml</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/">https://www.ruby-lang.org/en/news/2022/11/22/http-response-splitting-in-cgi-cve-2021-33621/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DQR7LWED6VAPD5ATYOBZIGJQPCUBRJBX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YACE6ORF2QBXXBK2V2CM36D7TZMEJVAS/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/THVTYHHEOVLQFCFHWURZYO7PVUPBHRZD/</a></li>
<li><a href="https://github.com/advisories/GHSA-vc47-6rqg-c7f5">https://github.com/advisories/GHSA-vc47-6rqg-c7f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc47-6rqg-c7f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-19T00:30:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dalli] Unsanitized input leading to code injection in Dalli]]></title>
        <id>https://github.com/advisories/GHSA-3xg8-cc8f-9wv2</id>
        <link href="https://github.com/advisories/GHSA-3xg8-cc8f-9wv2"/>
        <updated>2022-11-26T20:22:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Dalli. Affected is the function self.meta_set of the file lib/dalli/protocol/meta/request_formatter.rb of the component Meta Protocol Handler. The manipulation leads to injection. The exploit has been disclosed to the public and may be used. The name of the patch is 48d594dae55934476fec61789e7a7c3700e0f50d. It is recommended to apply a patch to fix this issue. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4064">https://nvd.nist.gov/vuln/detail/CVE-2022-4064</a></li>
<li><a href="https://github.com/petergoldstein/dalli/issues/932">https://github.com/petergoldstein/dalli/issues/932</a></li>
<li><a href="https://github.com/petergoldstein/dalli/pull/933">https://github.com/petergoldstein/dalli/pull/933</a></li>
<li><a href="https://github.com/petergoldstein/dalli/commit/48d594dae55934476fec61789e7a7c3700e0f50d">https://github.com/petergoldstein/dalli/commit/48d594dae55934476fec61789e7a7c3700e0f50d</a></li>
<li><a href="https://vuldb.com/?id.214026">https://vuldb.com/?id.214026</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/dalli/CVE-2022-4064.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/dalli/CVE-2022-4064.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-3xg8-cc8f-9wv2">https://github.com/advisories/GHSA-3xg8-cc8f-9wv2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xg8-cc8f-9wv2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-19T21:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pdfkit] PDFKit vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</id>
        <link href="https://github.com/advisories/GHSA-rhwx-hjx2-x4qr"/>
        <updated>2022-11-15T06:28:54.000Z</updated>
        <content type="html"><![CDATA[<p>The package pdfkit is vulnerable to Command Injection where the URL is not properly sanitized.</p>
<p>Note: This issue was patched in 0.8.7.2, but the patch was discovered to be ineffective. The updated patch version is 0.8.7.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25765">https://nvd.nist.gov/vuln/detail/CVE-2022-25765</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb%23L55-L58">https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb%23L55-L58</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/master/lib/pdfkit/source.rb%23L44-L50">https://github.com/pdfkit/pdfkit/blob/master/lib/pdfkit/source.rb%23L44-L50</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795">https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb#L55-L58">https://github.com/pdfkit/pdfkit/blob/46cdf53ec540da1a1a2e4da979e3e5fe2f92a257/lib/pdfkit/pdfkit.rb#L55-L58</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pdfkit/CVE-2022-25765.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pdfkit/CVE-2022-25765.yml</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/releases/tag/v0.8.7">https://github.com/pdfkit/pdfkit/releases/tag/v0.8.7</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ESWB6SX7HYWQ54UGBGQOZ7G24O6RAOKD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ESWB6SX7HYWQ54UGBGQOZ7G24O6RAOKD/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JFB2BFKH5SUGRKXMY6PWRQNGKZML7GDT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JFB2BFKH5SUGRKXMY6PWRQNGKZML7GDT/</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/issues/517">https://github.com/pdfkit/pdfkit/issues/517</a></li>
<li><a href="https://github.com/pdfkit/pdfkit/pull/519">https://github.com/pdfkit/pdfkit/pull/519</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/C36GAV3TKM3JXV6UVMLMTTDRCPKSNETQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/C36GAV3TKM3JXV6UVMLMTTDRCPKSNETQ/</a></li>
<li><a href="https://github.com/advisories/GHSA-rhwx-hjx2-x4qr">https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhwx-hjx2-x4qr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-10T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fluentd] fluentd vulnerable to remote code execution due to insecure deserialization (in non-default configuration)]]></title>
        <id>https://github.com/advisories/GHSA-fppq-mj76-fpj2</id>
        <link href="https://github.com/advisories/GHSA-fppq-mj76-fpj2"/>
        <updated>2022-11-07T21:13:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote code execution (RCE) vulnerability in non-default configurations of Fluentd  allows unauthenticated attackers to execute arbitrary code via specially crafted JSON payloads.</p>
<p>Fluentd setups are only affected if the environment variable <code>FLUENT_OJ_OPTION_MODE</code> is explicitly set to <code>object</code>.</p>
<p>Please note: The option FLUENT_OJ_OPTION_MODE was introduced in Fluentd version 1.13.2. Earlier versions of Fluentd are not affected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>v1.15.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not use <code>FLUENT_OJ_OPTION_MODE=object</code>.</p>
<h3 id="references">References</h3>
<ul>
<li>GHSL-2022-067</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluent/fluentd/security/advisories/GHSA-fppq-mj76-fpj2">https://github.com/fluent/fluentd/security/advisories/GHSA-fppq-mj76-fpj2</a></li>
<li><a href="https://github.com/fluent/fluentd/commit/48e5b85dab1b6d4c273090d538fc11b3f2fd8135">https://github.com/fluent/fluentd/commit/48e5b85dab1b6d4c273090d538fc11b3f2fd8135</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39379">https://nvd.nist.gov/vuln/detail/CVE-2022-39379</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fluentd/CVE-2022-39379.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fluentd/CVE-2022-39379.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-fppq-mj76-fpj2">https://github.com/advisories/GHSA-fppq-mj76-fpj2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fppq-mj76-fpj2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-02T18:15:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[actionpack] Cross-site Scripting in actionpack]]></title>
        <id>https://github.com/advisories/GHSA-9chr-4fjh-5rgw</id>
        <link href="https://github.com/advisories/GHSA-9chr-4fjh-5rgw"/>
        <updated>2022-10-28T19:17:53.000Z</updated>
        <content type="html"><![CDATA[<p>actionpack from the Ruby on Rails project is vulnerable to Cross-site Scripting in the Route Error Page. This issue has been patched with this <a href="https://github.com/rails/rails/commit/be177e4566747b73ff63fd5f529fab564e475ed4">commit</a>. There are no known workarounds for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3704">https://nvd.nist.gov/vuln/detail/CVE-2022-3704</a></li>
<li><a href="https://github.com/rails/rails/issues/46244">https://github.com/rails/rails/issues/46244</a></li>
<li><a href="https://github.com/rails/rails/commit/be177e4566747b73ff63fd5f529fab564e475ed4">https://github.com/rails/rails/commit/be177e4566747b73ff63fd5f529fab564e475ed4</a></li>
<li><a href="https://vuldb.com/?id.212319">https://vuldb.com/?id.212319</a></li>
<li><a href="https://github.com/rails/rails/pull/46269">https://github.com/rails/rails/pull/46269</a></li>
<li><a href="https://github.com/advisories/GHSA-9chr-4fjh-5rgw">https://github.com/advisories/GHSA-9chr-4fjh-5rgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9chr-4fjh-5rgw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-27T12:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] Update bundled libxml2 to v2.10.3 to resolve multiple CVEs]]></title>
        <id>https://github.com/advisories/GHSA-2qc6-mcvw-92cw</id>
        <link href="https://github.com/advisories/GHSA-2qc6-mcvw-92cw"/>
        <updated>2022-10-18T18:13:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Nokogiri v1.13.9 upgrades the packaged version of its dependency libxml2 to <a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.10.3">v2.10.3</a> from v2.9.14.</p>
<p>libxml2 v2.10.3 addresses the following known vulnerabilities:</p>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2309">CVE-2022-2309</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40304">CVE-2022-40304</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40303">CVE-2022-40303</a></li>
</ul>
<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri <code>&lt; 1.13.9</code>, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> release announcements.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade to Nokogiri <code>&gt;= 1.13.9</code>.</p>
<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile and link Nokogiri against external libraries libxml2 <code>&gt;= 2.10.3</code> which will also address these same issues.</p>
<h3 id="impact">Impact</h3>
<h4 id="libxml2-cve-2022-2309">libxml2 <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2309">CVE-2022-2309</a></h4>
<ul>
<li><strong>CVSS3 score</strong>: Under evaluation</li>
<li><strong>Type</strong>: Denial of service</li>
<li><strong>Description</strong>: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.</li>
</ul>
<p>Nokogiri maintainers investigated at #2620 and determined this CVE does not affect Nokogiri users.</p>
<h4 id="libxml2-cve-2022-40304">libxml2 <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40304">CVE-2022-40304</a></h4>
<ul>
<li><strong>CVSS3 score</strong>: Unspecified upstream</li>
<li><strong>Type</strong>: Data corruption, denial of service</li>
<li><strong>Description</strong>: When an entity reference cycle is detected, the entity content is cleared by setting its first byte to zero. But the entity content might be allocated from a dict. In this case, the dict entry becomes corrupted leading to all kinds of logic errors, including memory errors like double-frees.</li>
</ul>
<p>See <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/644a89e080bced793295f61f18aac8cfad6bece2">https://gitlab.gnome.org/GNOME/libxml2/-/commit/644a89e080bced793295f61f18aac8cfad6bece2</a></p>
<h4 id="libxml2-cve-2022-40303">libxml2 <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40303">CVE-2022-40303</a></h4>
<ul>
<li><strong>CVSS3 score</strong>: Unspecified upstream</li>
<li><strong>Type</strong>: Integer overflow</li>
<li><strong>Description</strong>: Integer overflows with XML_PARSE_HUGE</li>
</ul>
<p>See <a href="https://gitlab.gnome.org/GNOME/libxml2/-/commit/c846986356fc149915a74972bf198abc266bc2c0">https://gitlab.gnome.org/GNOME/libxml2/-/commit/c846986356fc149915a74972bf198abc266bc2c0</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://gitlab.gnome.org/GNOME/libxml2/-/releases">libxml2 release notes</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2309">CVE-2022-2309</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40304">CVE-2022-40304</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40303">CVE-2022-40303</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-2qc6-mcvw-92cw">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-2qc6-mcvw-92cw</a></li>
<li><a href="https://github.com/advisories/GHSA-2qc6-mcvw-92cw">https://github.com/advisories/GHSA-2qc6-mcvw-92cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2qc6-mcvw-92cw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T18:12:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[katello] Katello cleartext password storage issue]]></title>
        <id>https://github.com/advisories/GHSA-m4wh-848j-9w2r</id>
        <link href="https://github.com/advisories/GHSA-m4wh-848j-9w2r"/>
        <updated>2022-10-19T15:45:00.000Z</updated>
        <content type="html"><![CDATA[<p>A cleartext password storage issue was discovered in Katello, versions 3.x.x.x before katello 3.12.2. Registry credentials used during container image discovery were inadvertently logged without being masked. This flaw could expose the registry credentials to other privileged users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14825">https://nvd.nist.gov/vuln/detail/CVE-2019-14825</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14825">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14825</a></li>
<li><a href="https://github.com/Katello/katello/pull/8244">https://github.com/Katello/katello/pull/8244</a></li>
<li><a href="https://github.com/Katello/katello/pull/8253">https://github.com/Katello/katello/pull/8253</a></li>
<li><a href="https://github.com/Katello/katello/commit/332484232b66b7907a8104a19ea97eb697b75c79">https://github.com/Katello/katello/commit/332484232b66b7907a8104a19ea97eb697b75c79</a></li>
<li><a href="https://github.com/Katello/katello/commit/4eefa678a905140620ca8b390d48fe318d36e4ea">https://github.com/Katello/katello/commit/4eefa678a905140620ca8b390d48fe318d36e4ea</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1730668">https://bugzilla.redhat.com/show_bug.cgi?id=1730668</a></li>
<li><a href="https://github.com/Katello/katello/commits/3.12.2">https://github.com/Katello/katello/commits/3.12.2</a></li>
<li><a href="https://projects.theforeman.org/issues/27485">https://projects.theforeman.org/issues/27485</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2019-14825.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2019-14825.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-m4wh-848j-9w2r">https://github.com/advisories/GHSA-m4wh-848j-9w2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4wh-848j-9w2r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:01:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fat_free_crm] Fat Free CRM vulnerable to Remote Denial of Service via Tasks endpoint]]></title>
        <id>https://github.com/advisories/GHSA-p75c-5x3h-cxcg</id>
        <link href="https://github.com/advisories/GHSA-p75c-5x3h-cxcg"/>
        <updated>2022-10-19T15:44:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated user can perform a remote Denial of Service attack against Fat Free CRM.</p>
<p>This vulnerability has been assigned the CVE identifier: CVE-2022-39281</p>
<p>Affected versions: All
Not affected: None
Fixed versions: 0.20.1</p>
<p>All users running an affected release should either upgrade or apply the patch immediately.</p>
<h3 id="releases">Releases</h3>
<p>Fixed versions: 0.20.1 and above</p>
<h3 id="patches">Patches</h3>
<p>If you are unable to upgrade immediately, you should apply the following patch.</p>
<pre><code>diff --git a/app/models/polymorphic/task.rb b/app/models/polymorphic/task.rb
index d3d5c32c..7cdb24d6 100644
--- a/app/models/polymorphic/task.rb
+++ b/app/models/polymorphic/task.rb
@@ -189,6 +189,7 @@ class Task &lt; ActiveRecord::Base
   #----------------------------------------------------------------------------
   def self.bucket_empty?(bucket, user, view = "pending")
     return false if bucket.blank? || !ALLOWED_VIEWS.include?(view)
+    return false unless Setting.task_bucket.map(&amp;:to_s).include?(bucket.to_s)

     if view == "assigned"
       assigned_by(user).send(bucket).pending.count
</code></pre>
<h3 id="credits">Credits</h3>
<p>Thanks to @p- for reporting this and working with us to responsibly disclose this vulnerability.</p>
<h3 id="further-information">Further information</h3>
<p>If you have any questions or comments about this advisory, please Open an issue in <a href="https://github.com/fatfreecrm/fat_free_crm/issues">GitHub Issue Tracker</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fatfreecrm/fat_free_crm/security/advisories/GHSA-p75c-5x3h-cxcg">https://github.com/fatfreecrm/fat_free_crm/security/advisories/GHSA-p75c-5x3h-cxcg</a></li>
<li><a href="https://github.com/fatfreecrm/fat_free_crm/commit/c85a2546348c2692d32f952c753f7f0b43d1ca71">https://github.com/fatfreecrm/fat_free_crm/commit/c85a2546348c2692d32f952c753f7f0b43d1ca71</a></li>
<li><a href="https://github.com/fatfreecrm/fat_free_crm/releases/tag/v0.20.1">https://github.com/fatfreecrm/fat_free_crm/releases/tag/v0.20.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39281">https://nvd.nist.gov/vuln/detail/CVE-2022-39281</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fat_free_crm/CVE-2022-39281.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/fat_free_crm/CVE-2022-39281.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-p75c-5x3h-cxcg">https://github.com/advisories/GHSA-p75c-5x3h-cxcg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p75c-5x3h-cxcg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-07T21:19:01.000Z</published>
    </entry>
</feed>