{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for .NET packages hosted at the NuGet Gallery",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anuget",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/nuget.json",
    "description": "Security Advisory for .NET packages hosted at the NuGet Gallery on GitHub",
    "items": [
        {
            "content_html": "<p>Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22570\">https://nvd.nist.gov/vuln/detail/CVE-2021-22570</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/releases/tag/v3.15.0\">https://github.com/protocolbuffers/protobuf/releases/tag/v3.15.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77rm-9x9h-xj3g\">https://github.com/advisories/GHSA-77rm-9x9h-xj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77rm-9x9h-xj3g",
            "title": "[Google.Protobuf] NULL Pointer Dereference in Protocol Buffers",
            "date_modified": "2022-02-10T22:22:24.000Z",
            "date_published": "2022-01-27T00:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77rm-9x9h-xj3g"
            }
        },
        {
            "content_html": "<p>SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Starting version 1.0.0 and prior to version 1.3.3, a check was added if the destination file is under a destination directory. However, it is not enforced that <code>_baseDirectory</code> ends with slash. If the _baseDirectory is not slash terminated like <code>/home/user/dir</code> it is possible to create a file with a name thats begins as the destination directory one level up from the directory, i.e. <code>/home/user/dir.sh</code>. Because of the file name and destination directory constraints, the arbitrary file creation impact is limited and depends on the use case. Version 1.3.3 fixed this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32842\">https://nvd.nist.gov/vuln/detail/CVE-2021-32842</a></li>\n<li><a href=\"https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3\">https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/\">https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mm6g-mmq6-53ff\">https://github.com/advisories/GHSA-mm6g-mmq6-53ff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mm6g-mmq6-53ff",
            "title": "[SharpZipLib] Path Traversal in SharpZipLib",
            "date_modified": "2022-02-08T19:44:21.000Z",
            "date_published": "2022-02-01T16:23:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mm6g-mmq6-53ff"
            }
        },
        {
            "content_html": "<p>SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Starting version 1.3.0 and prior to version 1.3.3, a check was added if the destination file is under destination directory. However, it is not enforced that <code>destDir</code> ends with slash. If the <code>destDir</code> is not slash terminated like <code>/home/user/dir</code> it is possible to create a file with a name thats begins with the destination directory, i.e. <code>/home/user/dir.sh</code>. Because of the file name and destination directory constraints, the arbitrary file creation impact is limited and depends on the use case. Version 1.3.3 contains a patch for this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32841\">https://nvd.nist.gov/vuln/detail/CVE-2021-32841</a></li>\n<li><a href=\"https://github.com/icsharpcode/SharpZipLib/commit/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78\">https://github.com/icsharpcode/SharpZipLib/commit/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78</a></li>\n<li><a href=\"https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3\">https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/\">https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2x7h-96h5-rq84\">https://github.com/advisories/GHSA-2x7h-96h5-rq84</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2x7h-96h5-rq84",
            "title": "[SharpZipLib] Path Traversal in SharpZipLib",
            "date_modified": "2022-02-08T19:44:46.000Z",
            "date_published": "2022-02-01T16:22:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2x7h-96h5-rq84"
            }
        },
        {
            "content_html": "<p>SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Prior to version 1.3.3, a TAR file entry <code>../evil.txt</code> may be extracted in the parent directory of <code>destFolder</code>. This leads to arbitrary file write that may lead to code execution. The vulnerability was patched in version 1.3.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32840\">https://nvd.nist.gov/vuln/detail/CVE-2021-32840</a></li>\n<li><a href=\"https://github.com/icsharpcode/SharpZipLib/commit/a0e96de70b5264f4c919b09253b1522bc7a221cc\">https://github.com/icsharpcode/SharpZipLib/commit/a0e96de70b5264f4c919b09253b1522bc7a221cc</a></li>\n<li><a href=\"https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3\">https://github.com/icsharpcode/SharpZipLib/releases/tag/v1.3.3</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/\">https://securitylab.github.com/advisories/GHSL-2021-125-sharpziplib/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m22m-h4rf-pwq3\">https://github.com/advisories/GHSA-m22m-h4rf-pwq3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m22m-h4rf-pwq3",
            "title": "[SharpZipLib] Path Traversal in SharpZipLib",
            "date_modified": "2022-02-08T19:45:31.000Z",
            "date_published": "2022-02-01T16:22:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m22m-h4rf-pwq3"
            }
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in NuGet OrchardCore.Application.Cms.Targets prior to 1.2.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0274\">https://nvd.nist.gov/vuln/detail/CVE-2022-0274</a></li>\n<li><a href=\"https://github.com/orchardcms/orchardcore/commit/218f25ddfadb66a54de7a82dffe3ab2e4ab7c4b4\">https://github.com/orchardcms/orchardcore/commit/218f25ddfadb66a54de7a82dffe3ab2e4ab7c4b4</a></li>\n<li><a href=\"https://huntr.dev/bounties/a82a714a-9b71-475e-bfc3-43326fcaf764\">https://huntr.dev/bounties/a82a714a-9b71-475e-bfc3-43326fcaf764</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8hp-5m7c-jhv4\">https://github.com/advisories/GHSA-r8hp-5m7c-jhv4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8hp-5m7c-jhv4",
            "title": "[OrchardCore.Application.Cms.Targets] Cross-site Scripting OrchardCore.Application.Cms.Targets",
            "date_modified": "2022-01-21T23:08:50.000Z",
            "date_published": "2022-01-21T23:08:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8hp-5m7c-jhv4"
            }
        },
        {
            "content_html": "<p>orchardcore is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0159\">https://nvd.nist.gov/vuln/detail/CVE-2022-0159</a></li>\n<li><a href=\"https://github.com/orchardcms/orchardcore/commit/4da927d39a49138527c30db09c962ff706f95202\">https://github.com/orchardcms/orchardcore/commit/4da927d39a49138527c30db09c962ff706f95202</a></li>\n<li><a href=\"https://huntr.dev/bounties/00937280-e2ab-49fe-8d43-8235b3c3db4b\">https://huntr.dev/bounties/00937280-e2ab-49fe-8d43-8235b3c3db4b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6w5m-jgc5-8cgc\">https://github.com/advisories/GHSA-6w5m-jgc5-8cgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6w5m-jgc5-8cgc",
            "title": "[OrchardCore] orchardcore is vulnerable to Cross-site Scripting",
            "date_modified": "2022-01-21T23:57:49.000Z",
            "date_published": "2022-01-21T23:57:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6w5m-jgc5-8cgc"
            }
        },
        {
            "content_html": "<p>The password reset component deployed within Umbraco uses the hostname supplied within the request host header when building a password reset URL. It may be possible to manipulate the URL sent to Umbraco users when so that it points to the attackers server thereby disclosing the password reset token if/when the link is followed. A related vulnerability (CVE-2022-22690) could allow this flaw to become persistent so that all password reset URLs are affected persistently following a successful attack. See the AppCheck advisory for further information and associated caveats.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22691\">https://nvd.nist.gov/vuln/detail/CVE-2022-22691</a></li>\n<li><a href=\"https://appcheck-ng.com/umbraco-applicationurl-overwrite-persistent-password-reset-poison-cve-2022-22690-cve-2022-22691/\">https://appcheck-ng.com/umbraco-applicationurl-overwrite-persistent-password-reset-poison-cve-2022-22690-cve-2022-22691/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8pr-83cc-ccv7\">https://github.com/advisories/GHSA-r8pr-83cc-ccv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8pr-83cc-ccv7",
            "title": "[Umbraco.Cms.Core] Umbraco Persistent Password Reset Poison",
            "date_modified": "2022-01-27T18:26:23.000Z",
            "date_published": "2022-01-21T23:34:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8pr-83cc-ccv7"
            }
        },
        {
            "content_html": "<p>Within the Umbraco CMS, a configuration element named \"UmbracoApplicationUrl\" (or just \"ApplicationUrl\") is used whenever application code needs to build a URL pointing back to the site. For example, when a user resets their password and the application builds a password reset URL or when the administrator invites users to the site. For Umbraco versions less than 9.2.0, if the Application URL is not specifically configured, the attacker can manipulate this value and store it persistently affecting all users for components where the \"UmbracoApplicationUrl\" is used. For example, the attacker is able to change the URL users receive when resetting their password so that it points to the attackers server, when the user follows this link the reset token can be intercepted by the attacker resulting in account takeover.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22690\">https://nvd.nist.gov/vuln/detail/CVE-2022-22690</a></li>\n<li><a href=\"https://appcheck-ng.com/umbraco-applicationurl-overwrite-persistent-password-reset-poison-cve-2022-22690-cve-2022-22691/\">https://appcheck-ng.com/umbraco-applicationurl-overwrite-persistent-password-reset-poison-cve-2022-22690-cve-2022-22691/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrmq-rv9w-63rv\">https://github.com/advisories/GHSA-jrmq-rv9w-63rv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrmq-rv9w-63rv",
            "title": "[Umbraco.Cms.Core] Umbraco ApplicationURL Overwrite",
            "date_modified": "2022-01-27T18:25:58.000Z",
            "date_published": "2022-01-21T23:34:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrmq-rv9w-63rv"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to this library's use of an inefficient algorithm, it is vulnerable to a denial of service attack when a maliciously crafted input is passed to <code>DecodeFromBytes</code> or other CBOR decoding mechanisms in this library.</p>\n<p>Affected versions <em>include</em> versions 4.0.0 through 4.5.0.</p>\n<p>This vulnerability was privately reported to me.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been fixed in version 4.5.1.  Users should use the latest version of this library. (The latest version is not necessarily 4.5.1.  Check the <a href=\"https://www.nuget.org/packages/PeterO.Cbor\">NuGet page</a> to see the latest version's version number.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Again, users should use the latest version of this library.</p>\n<p>In the meantime, note that the inputs affected by this issue are all CBOR maps or contain CBOR maps.  An input that decodes to a single CBOR object is not capable of containing a CBOR map if—</p>\n<ul>\n<li>it begins with a byte other than 0x80 through 0xDF, or</li>\n<li>it does not contain a byte in the range 0xa0 through 0xBF.</li>\n</ul>\n<p>Such an input is not affected by this vulnerability and an application can choose to perform this check before passing it to a CBOR decoding mechanism.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/peteroupc/CBOR\">the CBOR repository</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/peteroupc/CBOR/security/advisories/GHSA-6r92-cgxc-r5fg\">https://github.com/peteroupc/CBOR/security/advisories/GHSA-6r92-cgxc-r5fg</a></li>\n<li><a href=\"https://github.com/peteroupc/CBOR/commit/b4117dbbb4cd5a4a963f9d0c9aa132f033e15b95\">https://github.com/peteroupc/CBOR/commit/b4117dbbb4cd5a4a963f9d0c9aa132f033e15b95</a></li>\n<li><a href=\"https://github.com/peteroupc/CBOR/compare/v4.5...v4.5.1\">https://github.com/peteroupc/CBOR/compare/v4.5...v4.5.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6r92-cgxc-r5fg\">https://github.com/advisories/GHSA-6r92-cgxc-r5fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6r92-cgxc-r5fg",
            "title": "[PeterO.Cbor] Denial of service in CBOR library",
            "date_modified": "2022-01-24T22:05:32.000Z",
            "date_published": "2022-01-21T23:35:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6r92-cgxc-r5fg"
            }
        },
        {
            "content_html": "<p>A vulnerability in the .NET SDK of Apache Avro allows an attacker to allocate excessive resources, potentially causing a denial-of-service attack. This issue affects .NET applications using Apache Avro version 1.10.2 and prior versions. Users should update to version 1.11.0 which addresses this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43045\">https://nvd.nist.gov/vuln/detail/CVE-2021-43045</a></li>\n<li><a href=\"https://lists.apache.org/thread/5fttw9vk6gd2p3b846nox7hcj5469xfd\">https://lists.apache.org/thread/5fttw9vk6gd2p3b846nox7hcj5469xfd</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/06/8\">http://www.openwall.com/lists/oss-security/2022/01/06/8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-868x-rg4c-cjqg\">https://github.com/advisories/GHSA-868x-rg4c-cjqg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-868x-rg4c-cjqg",
            "title": "[Apache.Avro] Allocation of Resources Without Limits or Throttling in Apache Avro",
            "date_modified": "2022-01-18T22:41:05.000Z",
            "date_published": "2022-01-08T00:39:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-868x-rg4c-cjqg"
            }
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Affected versions of this package are vulnerable to Deserialization of Untrusted Data due to the possibility of deserialization of arbitrary JavaScript objects.</p>\n<h3 id=\"description\">Description</h3>\n<p>Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.</p>\n<p>XSS effects vary in range from petty nuisance to significant security risk, depending on the sensitivity of the data handled by the vulnerable site and the nature of any security mitigation implemented by the site's owner network.</p>\n<h3 id=\"releases\">Releases</h3>\n<p>Releases before version 21.12.22.1 are affected. Please be careful to download any binary DLL from other web sites, especially we found NuGet packages not owned by us that contain vulnerable versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround exists that replaces one of the core JavaScript files embedded in the library. Using a XML configuration allows to replace the default JavaScript code to be replaced with the version on GitHub.</p>\n<pre><code class=\"language-xml\">&lt;configuration&gt;\n    &lt;configSections&gt;\n        &lt;sectionGroup name=\"ajaxNet\"&gt;\n            &lt;section name=\"ajaxSettings\" type=\"AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2\" requirePermission=\"false\" restartOnExternalChanges=\"true\"/&gt;\n        &lt;/sectionGroup&gt;\n    &lt;/configSections&gt;\n    &lt;ajaxNet&gt;\n        &lt;ajaxSettings&gt;\n            &lt;coreScript&gt;~/ajaxpro-core-fixed.js&lt;/coreScript&gt;\n        &lt;/ajaxSettings&gt;\n    &lt;/ajaxNet&gt;\n&lt;/configuration&gt;\n</code></pre>\n<p>Copy the file core.js from the main project folder to your web server root folder and rename that ajaxpro-core-fixed.js.</p>\n<p>Clients need to refresh the web page to download the changed JavaScript code.</p>\n<h3 id=\"references\">References</h3>\n<p>Commit fixing the issue: c89e39b9679fcb8ab6644fe21cc7e652cb615e2b</p>\n<p>Note: the official Ajax.NET Professional (AjaxPro) NuGet package is available here: <a href=\"https://www.nuget.org/packages/AjaxNetProfessional/\">https://www.nuget.org/packages/AjaxNetProfessional/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue on this GitHub repository</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-5q7q-qqw2-hjq7\">https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-5q7q-qqw2-hjq7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43853\">https://nvd.nist.gov/vuln/detail/CVE-2021-43853</a></li>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/commit/c89e39b9679fcb8ab6644fe21cc7e652cb615e2b\">https://github.com/michaelschwarz/Ajax.NET-Professional/commit/c89e39b9679fcb8ab6644fe21cc7e652cb615e2b</a></li>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/releases/tag/v21.12.22.1\">https://github.com/michaelschwarz/Ajax.NET-Professional/releases/tag/v21.12.22.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5q7q-qqw2-hjq7\">https://github.com/advisories/GHSA-5q7q-qqw2-hjq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5q7q-qqw2-hjq7",
            "title": "[AjaxNetProfessional] Cross-Site Scripting in AjaxNetProfessional",
            "date_modified": "2022-01-06T18:32:24.000Z",
            "date_published": "2022-01-06T18:32:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5q7q-qqw2-hjq7"
            }
        },
        {
            "content_html": "<p>All versions of package ajaxpro.2 are vulnerable to Deserialization of Untrusted Data due to the possibility of deserialization of arbitrary .NET classes, which can be abused to gain remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23758\">https://nvd.nist.gov/vuln/detail/CVE-2021-23758</a></li>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/commit/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57\">https://github.com/michaelschwarz/Ajax.NET-Professional/commit/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971\">https://snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971</a></li>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-6r7c-6w96-8pvw\">https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-6r7c-6w96-8pvw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74r6-grj9-8rq6\">https://github.com/advisories/GHSA-74r6-grj9-8rq6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74r6-grj9-8rq6",
            "title": "[AjaxNetProfessional] Remote Code Execution in AjaxNetProfessional",
            "date_modified": "2021-12-16T15:27:55.000Z",
            "date_published": "2021-12-16T15:27:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74r6-grj9-8rq6"
            }
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Affected versions of this package are vulnerable to Deserialization of Untrusted Data due to the possibility of deserialization of arbitrary .NET classes, which can be abused to gain remote code execution.</p>\n<h3 id=\"description\">Description</h3>\n<p>Serialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like Remote Method Invocation (RMI), Java Management Extension (JMX), Java Messaging System (JMS), Action Message Format (AMF), Java Server Faces (JSF) ViewState, etc.</p>\n<p>Deserialization of untrusted data (CWE-502), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.</p>\n<p>Java deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a popular library (Apache Commons Collection). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.</p>\n<p>An attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.</p>\n<p>Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).</p>\n<h3 id=\"releases\">Releases</h3>\n<p>Releases before version 21.11.29.1 are affected. Please be careful to download any binary DLL from other web sites, especially we found NuGet packages not owned by us that contain vulnerable versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround available that addresses all issues except updating to latest version from GitHub.</p>\n<h3 id=\"references\">References</h3>\n<p>Find original CVE posting here: <a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971\">https://security.snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971</a></p>\n<p>Note: the official Ajax.NET Professional (AjaxPro) NuGet package is available here: <a href=\"https://www.nuget.org/packages/AjaxNetProfessional/\">https://www.nuget.org/packages/AjaxNetProfessional/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue on this GitHub repository</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-6r7c-6w96-8pvw\">https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-6r7c-6w96-8pvw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23758\">https://nvd.nist.gov/vuln/detail/CVE-2021-23758</a></li>\n<li><a href=\"https://github.com/michaelschwarz/Ajax.NET-Professional/commit/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57\">https://github.com/michaelschwarz/Ajax.NET-Professional/commit/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971\">https://security.snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6r7c-6w96-8pvw\">https://github.com/advisories/GHSA-6r7c-6w96-8pvw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6r7c-6w96-8pvw",
            "title": "[AjaxNetProfessional] Remote Code Execution in AjaxNetProfessional",
            "date_modified": "2022-01-04T18:56:03.000Z",
            "date_published": "2021-12-07T21:21:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6r7c-6w96-8pvw"
            }
        },
        {
            "content_html": "<p>Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.</p>\n<p>The update addresses the vulnerability by correcting how ASP.NET Core handles such requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/311\">https://github.com/aspnet/Announcements/issues/311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgpw-2gph-2r9g\">https://github.com/advisories/GHSA-cgpw-2gph-2r9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g",
            "title": "[Microsoft.AspNetCore.All] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core",
            "date_modified": "2021-12-03T14:28:11.000Z",
            "date_published": "2018-10-16T19:59:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g"
            }
        },
        {
            "content_html": "<p>Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.</p>\n<p>The update addresses the vulnerability by correcting how ASP.NET Core handles such requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/311\">https://github.com/aspnet/Announcements/issues/311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgpw-2gph-2r9g\">https://github.com/advisories/GHSA-cgpw-2gph-2r9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g",
            "title": "[Microsoft.AspNetCore.Server.Kestrel.Core] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core",
            "date_modified": "2021-12-03T14:28:11.000Z",
            "date_published": "2018-10-16T19:59:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g"
            }
        },
        {
            "content_html": "<p>Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.</p>\n<p>The update addresses the vulnerability by correcting how ASP.NET Core handles such requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/311\">https://github.com/aspnet/Announcements/issues/311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgpw-2gph-2r9g\">https://github.com/advisories/GHSA-cgpw-2gph-2r9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g",
            "title": "[Microsoft.AspNetCore.App] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core",
            "date_modified": "2021-12-03T14:28:11.000Z",
            "date_published": "2018-10-16T19:59:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g"
            }
        },
        {
            "content_html": "<p>Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.</p>\n<p>The update addresses the vulnerability by correcting how ASP.NET Core handles such requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/311\">https://github.com/aspnet/Announcements/issues/311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgpw-2gph-2r9g\">https://github.com/advisories/GHSA-cgpw-2gph-2r9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g",
            "title": "[Microsoft.AspNetCore.All] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core",
            "date_modified": "2021-12-03T14:28:11.000Z",
            "date_published": "2018-10-16T19:59:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g"
            }
        },
        {
            "content_html": "<p>Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.</p>\n<p>The update addresses the vulnerability by correcting how ASP.NET Core handles such requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/311\">https://github.com/aspnet/Announcements/issues/311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgpw-2gph-2r9g\">https://github.com/advisories/GHSA-cgpw-2gph-2r9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g",
            "title": "[Microsoft.AspNetCore.Server.Kestrel.Core] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core",
            "date_modified": "2021-12-03T14:28:11.000Z",
            "date_published": "2018-10-16T19:59:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgpw-2gph-2r9g"
            }
        },
        {
            "content_html": "<p>Microsoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\na specially crafted request can cause excess resource consumption in Kestrel.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/300\">https://github.com/aspnet/Announcements/issues/300</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3m2r-q8x3-xmf7\">https://github.com/advisories/GHSA-3m2r-q8x3-xmf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3m2r-q8x3-xmf7",
            "title": "[Microsoft.AspNetCore.All] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.Server.Kestrel.Core, Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, and Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv",
            "date_modified": "2021-12-03T14:27:37.000Z",
            "date_published": "2018-10-16T19:59:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3m2r-q8x3-xmf7"
            }
        },
        {
            "content_html": "<p>Microsoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\na specially crafted request can cause excess resource consumption in Kestrel.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/300\">https://github.com/aspnet/Announcements/issues/300</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3m2r-q8x3-xmf7\">https://github.com/advisories/GHSA-3m2r-q8x3-xmf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3m2r-q8x3-xmf7",
            "title": "[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv] Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.Server.Kestrel.Core, Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, and Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv",
            "date_modified": "2021-12-03T14:27:37.000Z",
            "date_published": "2018-10-16T19:59:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3m2r-q8x3-xmf7"
            }
        }
    ]
}