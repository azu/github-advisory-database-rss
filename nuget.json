{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for .NET packages hosted at the NuGet Gallery",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anuget",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/nuget.json",
    "description": "Security Advisory for .NET packages hosted at the NuGet Gallery on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During an explicit sign-out, the server session is not fully terminated.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wxw9-6pv9-c3xc\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wxw9-6pv9-c3xc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48929\">https://nvd.nist.gov/vuln/detail/CVE-2024-48929</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxw9-6pv9-c3xc\">https://github.com/advisories/GHSA-wxw9-6pv9-c3xc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxw9-6pv9-c3xc",
            "title": "[Umbraco.CMS] Umbraco CMS Has Incomplete Server Termination During Explicit Sign-Out",
            "date_modified": "2024-10-22T19:22:32.000Z",
            "date_published": "2024-10-22T18:13:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxw9-6pv9-c3xc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During an explicit sign-out, the server session is not fully terminated.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wxw9-6pv9-c3xc\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wxw9-6pv9-c3xc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48929\">https://nvd.nist.gov/vuln/detail/CVE-2024-48929</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxw9-6pv9-c3xc\">https://github.com/advisories/GHSA-wxw9-6pv9-c3xc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxw9-6pv9-c3xc",
            "title": "[Umbraco.CMS] Umbraco CMS Has Incomplete Server Termination During Explicit Sign-Out",
            "date_modified": "2024-10-22T19:22:32.000Z",
            "date_published": "2024-10-22T18:13:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxw9-6pv9-c3xc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a potential risk of code execution for Backoffice users when they “preview” SVG files in full screen mode.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server-side file validation is available to strip script tags from file's content during the file upload process.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48927\">https://nvd.nist.gov/vuln/detail/CVE-2024-48927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/advisories/GHSA-5955-cwv4-h7qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh",
            "title": "[Umbraco.Cms] Umbraco has a Potential Code Execution Risk When Viewing SVG Files in Full Screen in Backoffice",
            "date_modified": "2024-10-22T19:22:31.000Z",
            "date_published": "2024-10-22T18:12:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a potential risk of code execution for Backoffice users when they “preview” SVG files in full screen mode.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server-side file validation is available to strip script tags from file's content during the file upload process.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48927\">https://nvd.nist.gov/vuln/detail/CVE-2024-48927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/advisories/GHSA-5955-cwv4-h7qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh",
            "title": "[Umbraco.Cms] Umbraco has a Potential Code Execution Risk When Viewing SVG Files in Full Screen in Backoffice",
            "date_modified": "2024-10-22T19:22:31.000Z",
            "date_published": "2024-10-22T18:12:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a potential risk of code execution for Backoffice users when they “preview” SVG files in full screen mode.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server-side file validation is available to strip script tags from file's content during the file upload process.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-5955-cwv4-h7qh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48927\">https://nvd.nist.gov/vuln/detail/CVE-2024-48927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5955-cwv4-h7qh\">https://github.com/advisories/GHSA-5955-cwv4-h7qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh",
            "title": "[UmbracoCms] Umbraco has a Potential Code Execution Risk When Viewing SVG Files in Full Screen in Backoffice",
            "date_modified": "2024-10-22T19:22:31.000Z",
            "date_published": "2024-10-22T18:12:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5955-cwv4-h7qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Backoffice displays the logout page with a session timeout message before the server session has fully expired, causing users to believe they have been logged out approximately 30 seconds before they actually are.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48926\">https://nvd.nist.gov/vuln/detail/CVE-2024-48926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm",
            "title": "[UmbracoCMS] Umbraco CMS logout page displayed before session expiration",
            "date_modified": "2024-10-23T03:45:48.000Z",
            "date_published": "2024-10-22T17:55:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Backoffice displays the logout page with a session timeout message before the server session has fully expired, causing users to believe they have been logged out approximately 30 seconds before they actually are.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48926\">https://nvd.nist.gov/vuln/detail/CVE-2024-48926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm",
            "title": "[Umbraco.CMS] Umbraco CMS logout page displayed before session expiration",
            "date_modified": "2024-10-23T03:45:48.000Z",
            "date_published": "2024-10-22T17:55:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Backoffice displays the logout page with a session timeout message before the server session has fully expired, causing users to believe they have been logged out approximately 30 seconds before they actually are.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48926\">https://nvd.nist.gov/vuln/detail/CVE-2024-48926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp6q-gccw-7qqm\">https://github.com/advisories/GHSA-fp6q-gccw-7qqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm",
            "title": "[Umbraco.CMS] Umbraco CMS logout page displayed before session expiration",
            "date_modified": "2024-10-23T03:45:48.000Z",
            "date_published": "2024-10-22T17:55:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp6q-gccw-7qqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An improper access control issue has been identified, allowing low-privilege users to access the webhook API and retrieve information that should be restricted to users with access to the settings section</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-4gp9-ff99-j6vj\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-4gp9-ff99-j6vj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48925\">https://nvd.nist.gov/vuln/detail/CVE-2024-48925</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gp9-ff99-j6vj\">https://github.com/advisories/GHSA-4gp9-ff99-j6vj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gp9-ff99-j6vj",
            "title": "[Umbraco.CMS] Umbraco CMS Improper Access Control Vulnerability Allows Low-Privilege Users to Access Webhook API",
            "date_modified": "2024-10-22T19:22:27.000Z",
            "date_published": "2024-10-22T17:51:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gp9-ff99-j6vj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This can be leveraged to gain access to higher-privilege endpoints, e.g. if you get a user with admin privileges to run the code, you can potentially elevate all users and grant them admin privileges or access protected content.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Will be patched in 14.3.1 and 15.0.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that access to the Dictionary section is only granted to trusted users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-c5g6-6xf7-qxp3\">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-c5g6-6xf7-qxp3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47819\">https://nvd.nist.gov/vuln/detail/CVE-2024-47819</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c5g6-6xf7-qxp3\">https://github.com/advisories/GHSA-c5g6-6xf7-qxp3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c5g6-6xf7-qxp3",
            "title": "[Umbraco.Cms.StaticAssets] Umbraco CMS vulnerable to stored Cross-site Scripting in the \"dictionary name\" on Dictionary section",
            "date_modified": "2024-10-22T19:22:20.000Z",
            "date_published": "2024-10-22T17:50:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c5g6-6xf7-qxp3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that allows an\nunauthorized attacker to trigger a gradual degradation in performance.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-7vfh-cqpc-4267\">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-7vfh-cqpc-4267</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45526\">https://nvd.nist.gov/vuln/detail/CVE-2024-45526</a></li>\n<li><a href=\"https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-45526.pdf\">https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-45526.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7vfh-cqpc-4267\">https://github.com/advisories/GHSA-7vfh-cqpc-4267</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7vfh-cqpc-4267",
            "title": "[OPCFoundation.NetStandard.Opc.Ua.Core] Security Update for the OPC UA .NET Standard Stack",
            "date_modified": "2024-10-22T21:44:39.000Z",
            "date_published": "2024-10-18T20:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7vfh-cqpc-4267"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that allows an\nunauthorized attacker to trigger a gradual degradation in performance.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-7vfh-cqpc-4267\">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-7vfh-cqpc-4267</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45526\">https://nvd.nist.gov/vuln/detail/CVE-2024-45526</a></li>\n<li><a href=\"https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-45526.pdf\">https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-45526.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7vfh-cqpc-4267\">https://github.com/advisories/GHSA-7vfh-cqpc-4267</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7vfh-cqpc-4267",
            "title": "[OPCFoundation.NetStandard.Opc.Ua] Security Update for the OPC UA .NET Standard Stack",
            "date_modified": "2024-10-22T21:44:39.000Z",
            "date_published": "2024-10-18T20:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7vfh-cqpc-4267"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that enables an unauthorized attacker to trigger a rapid increase in memory consumption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-qm9f-c3v9-wphv\">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-qm9f-c3v9-wphv</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm9f-c3v9-wphv\">https://github.com/advisories/GHSA-qm9f-c3v9-wphv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm9f-c3v9-wphv",
            "title": "[OPCFoundation.NetStandard.Opc.Ua] Security Update for the OPC UA .NET Standard Stack",
            "date_modified": "2024-10-18T20:04:52.000Z",
            "date_published": "2024-10-18T20:04:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm9f-c3v9-wphv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that enables an unauthorized attacker to trigger a rapid increase in memory consumption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-qm9f-c3v9-wphv\">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-qm9f-c3v9-wphv</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm9f-c3v9-wphv\">https://github.com/advisories/GHSA-qm9f-c3v9-wphv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm9f-c3v9-wphv",
            "title": "[OPCFoundation.NetStandard.Opc.Ua.Core] Security Update for the OPC UA .NET Standard Stack",
            "date_modified": "2024-10-18T20:04:52.000Z",
            "date_published": "2024-10-18T20:04:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm9f-c3v9-wphv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by an attacker that sends data contrived to produce hash collisions, leading to large CPU consumption disproportionate to the size of the data being deserialized.</p>\n<p>This is similar to <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">a prior advisory</a>, which provided an inadequate fix for the hash collision part of the vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The following steps are required to mitigate this risk.</p>\n<ol>\n<li>Upgrade to a version of the library where a fix is available. If upgrading from v1, check out <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/blob/master/doc/migration.md\">our migration guide</a>.</li>\n<li>Review the steps in <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">this previous advisory</a> to ensure you have your application configured for untrusted data.</li>\n</ol>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrading MessagePack to a patched version is not an option for you, you may apply a manual workaround as follows:</p>\n<ol>\n<li>Declare a class that derives from <code>MessagePackSecurity</code>.</li>\n<li>Override the <code>GetHashCollisionResistantEqualityComparer&lt;T&gt;</code> method to provide a collision-resistant hash function of your own and avoid calling <code>base.GetHashCollisionResistantEqualityComparer&lt;T&gt;()</code>.</li>\n<li>Configure a <code>MessagePackSerializerOptions</code> with an instance of your derived type by calling <code>WithSecurity</code> on an existing options object.</li>\n<li>Use your custom options object for all deserialization operations. This may be by setting the <code>MessagePackSerializer.DefaultOptions</code> static property, if you call methods that rely on this default property, and/or by passing in the options object explicitly to any <code>Deserialize</code> method.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Learn more about best security practices when reading untrusted data with <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/tree/v1.x#security\">MessagePack 1.x</a> or <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp#security\">MessagePack 2.x</a>.</li>\n<li>The .NET team's <a href=\"https://github.com/GrabYourPitchforks/runtime/blob/threat_models/docs/design/security/System.HashCode.md\">discussion on hash collision vulnerabilities of their <code>HashCode</code> struct</a> (or in <a href=\"https://github.com/dotnet/runtime/pull/108864\">the pull request that merges this into the dotnet org</a>).</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/discussions\">Start a public discussion</a></li>\n<li><a href=\"mailto:andrewarnott@live.com\">Email us privately</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-4qm4-8hg2-g2xm\">https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-4qm4-8hg2-g2xm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4qm4-8hg2-g2xm\">https://github.com/advisories/GHSA-4qm4-8hg2-g2xm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4qm4-8hg2-g2xm",
            "title": "[MessagePack] MessagePack allows untrusted data to lead to DoS attack due to hash collisions and stack overflow",
            "date_modified": "2024-10-18T16:23:37.000Z",
            "date_published": "2024-10-17T19:30:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4qm4-8hg2-g2xm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by an attacker that sends data contrived to produce hash collisions, leading to large CPU consumption disproportionate to the size of the data being deserialized.</p>\n<p>This is similar to <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">a prior advisory</a>, which provided an inadequate fix for the hash collision part of the vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The following steps are required to mitigate this risk.</p>\n<ol>\n<li>Upgrade to a version of the library where a fix is available. If upgrading from v1, check out <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/blob/master/doc/migration.md\">our migration guide</a>.</li>\n<li>Review the steps in <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">this previous advisory</a> to ensure you have your application configured for untrusted data.</li>\n</ol>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrading MessagePack to a patched version is not an option for you, you may apply a manual workaround as follows:</p>\n<ol>\n<li>Declare a class that derives from <code>MessagePackSecurity</code>.</li>\n<li>Override the <code>GetHashCollisionResistantEqualityComparer&lt;T&gt;</code> method to provide a collision-resistant hash function of your own and avoid calling <code>base.GetHashCollisionResistantEqualityComparer&lt;T&gt;()</code>.</li>\n<li>Configure a <code>MessagePackSerializerOptions</code> with an instance of your derived type by calling <code>WithSecurity</code> on an existing options object.</li>\n<li>Use your custom options object for all deserialization operations. This may be by setting the <code>MessagePackSerializer.DefaultOptions</code> static property, if you call methods that rely on this default property, and/or by passing in the options object explicitly to any <code>Deserialize</code> method.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Learn more about best security practices when reading untrusted data with <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/tree/v1.x#security\">MessagePack 1.x</a> or <a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp#security\">MessagePack 2.x</a>.</li>\n<li>The .NET team's <a href=\"https://github.com/GrabYourPitchforks/runtime/blob/threat_models/docs/design/security/System.HashCode.md\">discussion on hash collision vulnerabilities of their <code>HashCode</code> struct</a> (or in <a href=\"https://github.com/dotnet/runtime/pull/108864\">the pull request that merges this into the dotnet org</a>).</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/discussions\">Start a public discussion</a></li>\n<li><a href=\"mailto:andrewarnott@live.com\">Email us privately</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-4qm4-8hg2-g2xm\">https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-4qm4-8hg2-g2xm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4qm4-8hg2-g2xm\">https://github.com/advisories/GHSA-4qm4-8hg2-g2xm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4qm4-8hg2-g2xm",
            "title": "[MessagePack] MessagePack allows untrusted data to lead to DoS attack due to hash collisions and stack overflow",
            "date_modified": "2024-10-18T16:23:37.000Z",
            "date_published": "2024-10-17T19:30:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4qm4-8hg2-g2xm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by either of two vectors:</p>\n<ol>\n<li>hash collisions - leading to large CPU consumption disproportionate to the size of the data being deserialized.</li>\n<li>stack overflow - leading to the deserializing process crashing.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>The following steps are required to mitigate this risk.</p>\n<ol>\n<li>Upgrade to a version of the library where a fix is available</li>\n<li>Add code to your application to put MessagePack into the defensive <code>UntrustedData</code> mode.</li>\n<li>Identify all MessagePack extensions that implement <code>IMessagePackFormatter&lt;T&gt;</code> implementations that do not ship with the MessagePack library to include the security mitigations. This includes those acquired from 3rd party packages and classes included directly into your project. Any AOT formatters generated with the MPC tool must be regenerated with the patched version of mpc.</li>\n<li>Review your messagepack-serializable data structures for hash-based collections that use custom or unusual types for the hashed key. See below for details on handling such situations.</li>\n</ol>\n<p>Review the <code>MessagePackSecurity</code> class to tweak any settings as necessary to strike the right balance between performance, functionality, and security.</p>\n<p>Specialized <code>IEqualityComparer&lt;T&gt;</code> implementations provide the hash collision resistance.\nEach type of hashed key may require a specialized implementation of its own.\nThe patched MessagePack library includes many such implementations for primitive types commonly used as keys in hash-based collections.\nIf your data structures use custom types as keys in these hash-based collections,\nputting MessagePack in <code>UntrustedData</code> mode may lead the deserializer to throw an exception\nbecause no safe <code>IEqualityComparer&lt;T&gt;</code> is available for your custom <code>T</code> type.\nYou can provide your own safe implementation by deriving from the <code>MessagePackSecurity</code> class\nand overriding the <code>GetHashCollisionResistantEqualityComparer&lt;T&gt;()</code> method to return your own\ncustom implementation when <code>T</code> matches your type, and fallback to <code>return base.GetHashCollisionResistantEqualityComparer&lt;T&gt;();</code> for types you do not have custom implementations for.</p>\n<p>Unrelated to this advisory, but as general security guidance, you should also avoid the Typeless serializer/formatters/resolvers for untrusted data as that opens the door for the untrusted data to potentially deserialize unanticipated types that can compromise security.</p>\n<h4 id=\"messagepack-1x-users\">MessagePack 1.x users</h4>\n<ol>\n<li><p>Upgrade to any 1.9.x version.</p>\n</li>\n<li><p>When deserializing untrusted data, put MessagePack into a more secure mode with:</p>\n<pre><code class=\"language-cs\">MessagePackSecurity.Active = MessagePackSecurity.UntrustedData;\n</code></pre>\n<p> In MessagePack v1.x this is a static property and thus the security level is shared by the entire process or AppDomain.\n Use MessagePack v2.1 or later for better control over the security level for your particular use.</p>\n</li>\n<li><p>Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called <code>Generated.cs</code>. A patched <code>Generated.cs</code> file will typically reference the <code>MessagePackSecurity</code> class.</p>\n<p> Review any custom-written <code>IMessagePackFormatter&lt;T&gt;</code> implementations in your project or that you might use from 3rd party packages to ensure they also utilize the <code>MessagePackSecurity</code> class as required.\n In particular, a formatter that deserializes an object (as opposed to a primitive value) should wrap the deserialization in a <code>using (MessagePackSecurity.DepthStep())</code> block. For example:</p>\n<pre><code class=\"language-cs\">public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n{\n    if (reader.TryReadNil())\n    {\n        return default;\n    }\n    else\n    {\n        using (MessagePackSecurity.DepthStep()) // STACK OVERFLOW MITIGATION\n        {\n            MyObject o = new MyObject();\n            // deserialize members of the object here.\n            return o;\n        }\n    }\n}\n</code></pre>\n<p> If your custom formatter creates hash-based collections (e.g. <code>Dictionary&lt;K, V&gt;</code> or <code>HashSet&lt;T&gt;</code>) where the hashed key comes from the messagepack data, always instantiate your collection using <code>MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;()</code> as the equality comparer:</p>\n<pre><code class=\"language-cs\">var collection = new HashSet&lt;T&gt;(MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;());\n</code></pre>\n<p> This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.</p>\n</li>\n</ol>\n<p>Learn more about <a href=\"https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security\">best security practices when reading untrusted data with MessagePack 1.x</a>.</p>\n<h4 id=\"messagepack-2x-users\">MessagePack 2.x users</h4>\n<ol>\n<li><p>Upgrade to any 2.1.x or later version.</p>\n</li>\n<li><p>When deserializing untrusted data, put MessagePack into a more secure mode by configuring your <code>MessagePackSerializerOptions.Security</code> property:</p>\n<pre><code class=\"language-cs\">var options = MessagePackSerializerOptions.Standard\n    .WithSecurity(MessagePackSecurity.UntrustedData);\n\n// Pass the options explicitly for the greatest control.\nT object = MessagePackSerializer.Deserialize&lt;T&gt;(data, options);\n\n// Or set the security level as the default.\nMessagePackSerializer.DefaultOptions = options;\n</code></pre>\n</li>\n<li><p>Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called <code>Generated.cs</code>. A patched <code>Generated.cs</code> file will typically reference the <code>Security</code> member on the <code>MessagePackSerializerOptions</code> parameter.</p>\n<p> Review any custom-written <code>IMessagePackFormatter&lt;T&gt;</code> implementations in your project or that you might use from 3rd party packages to ensure they also utilize the <code>MessagePackSecurity</code> class as required.\n In particular, a formatter that deserializes an object (as opposed to a primitive value) should call <code>options.Security.DepthStep(ref reader);</code> before deserializing the object's members, and be sure to revert the depth step with <code>reader.Depth--;</code> before exiting the method. For example:</p>\n<pre><code class=\"language-cs\">public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n{\n    if (reader.TryReadNil())\n    {\n        return default;\n    }\n    else\n    {\n        options.Security.DepthStep(ref reader); // STACK OVERFLOW MITIGATION, line 1\n        try\n        {\n            MyObject o = new MyObject();\n            // deserialize members of the object here.\n            return o;\n        }\n        finally\n        {\n            reader.Depth--; // STACK OVERFLOW MITIGATION, line 2\n        }\n    }\n}\n</code></pre>\n<p> If your custom formatter creates hash-based collections (e.g. <code>Dictionary&lt;K, V&gt;</code> or <code>HashSet&lt;T&gt;</code>) where the hashed key comes from the messagepack data, always instantiate your collection using <code>options.Security.GetEqualityComparer&lt;TKey&gt;()</code> as the equality comparer:</p>\n<pre><code class=\"language-cs\">var collection = new HashSet&lt;T&gt;(options.Security.GetEqualityComparer&lt;T&gt;());\n</code></pre>\n<p> This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.</p>\n</li>\n</ol>\n<p>Learn more about <a href=\"https://github.com/neuecc/MessagePack-CSharp#security\">best security practices when reading untrusted data with MessagePack 2.x</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The security vulnerabilities are in the formatters.\nAvoiding the built-in formatters entirely in favor of reading messagepack primitive data directly\nor relying on carefully written custom formatters can provide a workaround.</p>\n<p>MessagePack v1.x users may utilize the <code>MessagePackBinary</code> static class directly to read the data they expect.\nMessagePack v2.x users may utilize the <code>MessagePackReader</code> struct directly to read the data they expect.</p>\n<h3 id=\"references\">References</h3>\n<p>Learn more about best security practices when reading untrusted data with <a href=\"https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security\">MessagePack 1.x</a> or <a href=\"https://github.com/neuecc/MessagePack-CSharp#security\">MessagePack 2.x</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neuecc/MessagePack-CSharp/issues/new/choose\">MessagePack-CSharp</a></li>\n<li><a href=\"mailto:andrewarnott@gmail.com\">Email us</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/neuecc/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/commit/56fa86219d01d0a183babbbbcb34abbdea588a02\">https://github.com/neuecc/MessagePack-CSharp/commit/56fa86219d01d0a183babbbbcb34abbdea588a02</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-5234\">https://nvd.nist.gov/vuln/detail/CVE-2020-5234</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/issues/810\">https://github.com/neuecc/MessagePack-CSharp/issues/810</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/commit/f88684078698386df02204f13faeff098a61f007\">https://github.com/neuecc/MessagePack-CSharp/commit/f88684078698386df02204f13faeff098a61f007</a></li>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/405\">https://github.com/aspnet/Announcements/issues/405</a></li>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7q36-4xx7-xcxf",
            "title": "[MessagePack.Unity] Untrusted data can lead to DoS attack due to hash collisions and stack overflow in MessagePack",
            "date_modified": "2024-10-16T22:07:49.000Z",
            "date_published": "2020-01-31T17:59:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7q36-4xx7-xcxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by either of two vectors:</p>\n<ol>\n<li>hash collisions - leading to large CPU consumption disproportionate to the size of the data being deserialized.</li>\n<li>stack overflow - leading to the deserializing process crashing.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>The following steps are required to mitigate this risk.</p>\n<ol>\n<li>Upgrade to a version of the library where a fix is available</li>\n<li>Add code to your application to put MessagePack into the defensive <code>UntrustedData</code> mode.</li>\n<li>Identify all MessagePack extensions that implement <code>IMessagePackFormatter&lt;T&gt;</code> implementations that do not ship with the MessagePack library to include the security mitigations. This includes those acquired from 3rd party packages and classes included directly into your project. Any AOT formatters generated with the MPC tool must be regenerated with the patched version of mpc.</li>\n<li>Review your messagepack-serializable data structures for hash-based collections that use custom or unusual types for the hashed key. See below for details on handling such situations.</li>\n</ol>\n<p>Review the <code>MessagePackSecurity</code> class to tweak any settings as necessary to strike the right balance between performance, functionality, and security.</p>\n<p>Specialized <code>IEqualityComparer&lt;T&gt;</code> implementations provide the hash collision resistance.\nEach type of hashed key may require a specialized implementation of its own.\nThe patched MessagePack library includes many such implementations for primitive types commonly used as keys in hash-based collections.\nIf your data structures use custom types as keys in these hash-based collections,\nputting MessagePack in <code>UntrustedData</code> mode may lead the deserializer to throw an exception\nbecause no safe <code>IEqualityComparer&lt;T&gt;</code> is available for your custom <code>T</code> type.\nYou can provide your own safe implementation by deriving from the <code>MessagePackSecurity</code> class\nand overriding the <code>GetHashCollisionResistantEqualityComparer&lt;T&gt;()</code> method to return your own\ncustom implementation when <code>T</code> matches your type, and fallback to <code>return base.GetHashCollisionResistantEqualityComparer&lt;T&gt;();</code> for types you do not have custom implementations for.</p>\n<p>Unrelated to this advisory, but as general security guidance, you should also avoid the Typeless serializer/formatters/resolvers for untrusted data as that opens the door for the untrusted data to potentially deserialize unanticipated types that can compromise security.</p>\n<h4 id=\"messagepack-1x-users\">MessagePack 1.x users</h4>\n<ol>\n<li><p>Upgrade to any 1.9.x version.</p>\n</li>\n<li><p>When deserializing untrusted data, put MessagePack into a more secure mode with:</p>\n<pre><code class=\"language-cs\">MessagePackSecurity.Active = MessagePackSecurity.UntrustedData;\n</code></pre>\n<p> In MessagePack v1.x this is a static property and thus the security level is shared by the entire process or AppDomain.\n Use MessagePack v2.1 or later for better control over the security level for your particular use.</p>\n</li>\n<li><p>Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called <code>Generated.cs</code>. A patched <code>Generated.cs</code> file will typically reference the <code>MessagePackSecurity</code> class.</p>\n<p> Review any custom-written <code>IMessagePackFormatter&lt;T&gt;</code> implementations in your project or that you might use from 3rd party packages to ensure they also utilize the <code>MessagePackSecurity</code> class as required.\n In particular, a formatter that deserializes an object (as opposed to a primitive value) should wrap the deserialization in a <code>using (MessagePackSecurity.DepthStep())</code> block. For example:</p>\n<pre><code class=\"language-cs\">public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n{\n    if (reader.TryReadNil())\n    {\n        return default;\n    }\n    else\n    {\n        using (MessagePackSecurity.DepthStep()) // STACK OVERFLOW MITIGATION\n        {\n            MyObject o = new MyObject();\n            // deserialize members of the object here.\n            return o;\n        }\n    }\n}\n</code></pre>\n<p> If your custom formatter creates hash-based collections (e.g. <code>Dictionary&lt;K, V&gt;</code> or <code>HashSet&lt;T&gt;</code>) where the hashed key comes from the messagepack data, always instantiate your collection using <code>MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;()</code> as the equality comparer:</p>\n<pre><code class=\"language-cs\">var collection = new HashSet&lt;T&gt;(MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;());\n</code></pre>\n<p> This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.</p>\n</li>\n</ol>\n<p>Learn more about <a href=\"https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security\">best security practices when reading untrusted data with MessagePack 1.x</a>.</p>\n<h4 id=\"messagepack-2x-users\">MessagePack 2.x users</h4>\n<ol>\n<li><p>Upgrade to any 2.1.x or later version.</p>\n</li>\n<li><p>When deserializing untrusted data, put MessagePack into a more secure mode by configuring your <code>MessagePackSerializerOptions.Security</code> property:</p>\n<pre><code class=\"language-cs\">var options = MessagePackSerializerOptions.Standard\n    .WithSecurity(MessagePackSecurity.UntrustedData);\n\n// Pass the options explicitly for the greatest control.\nT object = MessagePackSerializer.Deserialize&lt;T&gt;(data, options);\n\n// Or set the security level as the default.\nMessagePackSerializer.DefaultOptions = options;\n</code></pre>\n</li>\n<li><p>Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called <code>Generated.cs</code>. A patched <code>Generated.cs</code> file will typically reference the <code>Security</code> member on the <code>MessagePackSerializerOptions</code> parameter.</p>\n<p> Review any custom-written <code>IMessagePackFormatter&lt;T&gt;</code> implementations in your project or that you might use from 3rd party packages to ensure they also utilize the <code>MessagePackSecurity</code> class as required.\n In particular, a formatter that deserializes an object (as opposed to a primitive value) should call <code>options.Security.DepthStep(ref reader);</code> before deserializing the object's members, and be sure to revert the depth step with <code>reader.Depth--;</code> before exiting the method. For example:</p>\n<pre><code class=\"language-cs\">public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n{\n    if (reader.TryReadNil())\n    {\n        return default;\n    }\n    else\n    {\n        options.Security.DepthStep(ref reader); // STACK OVERFLOW MITIGATION, line 1\n        try\n        {\n            MyObject o = new MyObject();\n            // deserialize members of the object here.\n            return o;\n        }\n        finally\n        {\n            reader.Depth--; // STACK OVERFLOW MITIGATION, line 2\n        }\n    }\n}\n</code></pre>\n<p> If your custom formatter creates hash-based collections (e.g. <code>Dictionary&lt;K, V&gt;</code> or <code>HashSet&lt;T&gt;</code>) where the hashed key comes from the messagepack data, always instantiate your collection using <code>options.Security.GetEqualityComparer&lt;TKey&gt;()</code> as the equality comparer:</p>\n<pre><code class=\"language-cs\">var collection = new HashSet&lt;T&gt;(options.Security.GetEqualityComparer&lt;T&gt;());\n</code></pre>\n<p> This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.</p>\n</li>\n</ol>\n<p>Learn more about <a href=\"https://github.com/neuecc/MessagePack-CSharp#security\">best security practices when reading untrusted data with MessagePack 2.x</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The security vulnerabilities are in the formatters.\nAvoiding the built-in formatters entirely in favor of reading messagepack primitive data directly\nor relying on carefully written custom formatters can provide a workaround.</p>\n<p>MessagePack v1.x users may utilize the <code>MessagePackBinary</code> static class directly to read the data they expect.\nMessagePack v2.x users may utilize the <code>MessagePackReader</code> struct directly to read the data they expect.</p>\n<h3 id=\"references\">References</h3>\n<p>Learn more about best security practices when reading untrusted data with <a href=\"https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security\">MessagePack 1.x</a> or <a href=\"https://github.com/neuecc/MessagePack-CSharp#security\">MessagePack 2.x</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neuecc/MessagePack-CSharp/issues/new/choose\">MessagePack-CSharp</a></li>\n<li><a href=\"mailto:andrewarnott@gmail.com\">Email us</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/neuecc/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/commit/56fa86219d01d0a183babbbbcb34abbdea588a02\">https://github.com/neuecc/MessagePack-CSharp/commit/56fa86219d01d0a183babbbbcb34abbdea588a02</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-5234\">https://nvd.nist.gov/vuln/detail/CVE-2020-5234</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/issues/810\">https://github.com/neuecc/MessagePack-CSharp/issues/810</a></li>\n<li><a href=\"https://github.com/neuecc/MessagePack-CSharp/commit/f88684078698386df02204f13faeff098a61f007\">https://github.com/neuecc/MessagePack-CSharp/commit/f88684078698386df02204f13faeff098a61f007</a></li>\n<li><a href=\"https://github.com/aspnet/Announcements/issues/405\">https://github.com/aspnet/Announcements/issues/405</a></li>\n<li><a href=\"https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7q36-4xx7-xcxf\">https://github.com/advisories/GHSA-7q36-4xx7-xcxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7q36-4xx7-xcxf",
            "title": "[MessagePack.Unity] Untrusted data can lead to DoS attack due to hash collisions and stack overflow in MessagePack",
            "date_modified": "2024-10-16T22:07:49.000Z",
            "date_published": "2020-01-31T17:59:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7q36-4xx7-xcxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"microsoft-security-advisory-cve-2024-43483--net-denial-of-service-vulnerability\">Microsoft Security Advisory CVE-2024-43483 | .NET Denial of Service Vulnerability</h1>\n<h2 id=\"executive-summary\"><a name=\"executive-summary\"></a>Executive summary</h2>\n<p>Microsoft is releasing this security advisory to provide information about a vulnerability in  System.Security.Cryptography.Cose, System.IO.Packaging, Microsoft.Extensions.Caching.Memory. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.</p>\n<p>System.Security.Cryptography.Cose, System.IO.Packaging, Microsoft.Extensions.Caching.Memory may be exposed to a hostile input which may lead them to be susceptible to hash flooding attacks resulting in denial of service.</p>\n<h2 id=\"announcement\">Announcement</h2>\n<p>Announcement for this issue can be found at  <a href=\"https://github.com/dotnet/announcements/issues/327\">https://github.com/dotnet/announcements/issues/327</a></p>\n<h2 id=\"mitigation-factors\"><a name=\"mitigation-factors\"></a>Mitigation factors</h2>\n<p>Microsoft has not identified any mitigating factors for this vulnerability.</p>\n<h2 id=\"affected-software\"><a name=\"affected-software\"></a>Affected software</h2>\n<ul>\n<li>Any .NET 8.0 application running on .NET 8.0.8 or earlier.</li>\n<li>Any .NET 6.0 aplication running on .NET 6.0.33 or earlier.</li>\n<li>Any application consuming one of the <a href=\"affected-packages\">vulnerable packages</a>.</li>\n</ul>\n<h2 id=\"affected-packages\"><a name=\"affected-packages\"></a>Affected Packages</h2>\n<ul>\n<li>Any .NET 6.0, 8.0, or 9.0 application.</li>\n<li>Any application consuming one of the vulnerable packages.</li>\n</ul>\n<h3 id=\"net-9\"><a name=\".NET 9\"></a>.NET 9</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.Security.Cryptography.Cose\">System.Security.Cryptography.Cose</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n</tbody></table>\n<h3 id=\"net-8\"><a name=\".NET 8\"></a>.NET 8</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.Security.Cryptography.Cose\">System.Security.Cryptography.Cose</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n</tbody></table>\n<h3 id=\"net-6\"><a name=\".NET 6\"></a>.NET 6</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 6.0.0-preview.1.21102.12, &lt;= 6.0.0</td>\n<td>6.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;=6.0.0-preview.1.21102.12 &lt;= 6.0.1</td>\n<td>6.0.2</td>\n</tr>\n</tbody></table>\n<h2 id=\"advisory-faq\">Advisory FAQ</h2>\n<h3 id=\"how-do-i-know-if-i-am-affected\"><a name=\"how-affected\"></a>How do I know if I am affected?</h3>\n<p>If you have a runtime or SDK with a version listed, or an affected package listed in <a href=\"#affected-packages\">affected software</a> or <a href=\"#affected-software\">affected packages</a>, you're exposed to the vulnerability.</p>\n<h3 id=\"how-do-i-fix-the-issue\"><a name=\"how-fix\"></a>How do I fix the issue?</h3>\n<ul>\n<li>To fix the issue please install the latest version of .NET 8.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.</li>\n<li>.NET Framework-based applications and other application types need to perform a package update.</li>\n<li>If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the <code>dotnet --info</code> command. You will see output like the following;</li>\n</ul>\n<pre><code>.NET Core SDK (reflecting any global.json):\n\n\n Version:   8.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 8.0.3\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspAspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspAspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.WindowsDesktop.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n</code></pre>\n<ul>\n<li>If you're using .NET 9.0, you should download and install .NET 9.0 RC 2  Runtime or .NET 9.0.100-rc.2.24474.11 SDK (for Visual Studio 2022 v17.12 latest Preview) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/9.0\">https://dotnet.microsoft.com/download/dotnet-core/9.0</a>.</li>\n<li>If you're using .NET 8.0, you should download and install .NET 8.0.10  Runtime or .NET 8.0.110 SDK (for Visual Studio 2022 v17.8) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/8.0\">https://dotnet.microsoft.com/download/dotnet-core/8.0</a>.</li>\n<li>If you're using .NET 6.0, you should download and install .NET 6.0.35  Runtime or .NET 6.0.135 SDK (for Visual Studio 2022 v17.6) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/6.0\">https://dotnet.microsoft.com/download/dotnet-core/6.0</a>.</li>\n</ul>\n<p>.NET 6.0 and .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update &amp; Security and then click Check for Updates.</p>\n<p>Once you have installed the updated runtime or SDK, restart your apps for the update to take effect.</p>\n<p>Additionally, if you've deployed <a href=\"https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd\">self-contained applications</a> targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.</p>\n<h2 id=\"other-information\">Other Information</h2>\n<h3 id=\"reporting-security-issues\">Reporting Security Issues</h3>\n<p>If you have found a potential security issue in .NET 8.0 or .NET 6.0, please email details to <a href=\"mailto:secure@microsoft.com\">secure@microsoft.com</a>. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <a href=\"https://aka.ms/corebounty\">https://aka.ms/corebounty</a>.</p>\n<h3 id=\"support\">Support</h3>\n<p>You can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at <a href=\"https://github.com/dotnet/runtime\">https://github.com/dotnet/runtime</a> and <a href=\"https://github.com/dotnet/aspnet/\">https://github.com/dotnet/aspnet/</a>. The Announcements repo (<a href=\"https://github.com/dotnet/Announcements\">https://github.com/dotnet/Announcements</a>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.</p>\n<h3 id=\"disclaimer\">Disclaimer</h3>\n<p>The information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>\n<h3 id=\"external-links\">External Links</h3>\n<p><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-43483\">CVE-2024-43483</a></p>\n<h3 id=\"revisions\">Revisions</h3>\n<p>V1.0 (October 08, 2024): Advisory published.</p>\n<p><em>Version 1.0</em></p>\n<p><em>Last Updated 2024-10-08</em></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dotnet/runtime/security/advisories/GHSA-qj66-m88j-hmgj\">https://github.com/dotnet/runtime/security/advisories/GHSA-qj66-m88j-hmgj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43483\">https://nvd.nist.gov/vuln/detail/CVE-2024-43483</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43483\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43483</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qj66-m88j-hmgj\">https://github.com/advisories/GHSA-qj66-m88j-hmgj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qj66-m88j-hmgj",
            "title": "[Microsoft.Extensions.Caching.Memory] Microsoft Security Advisory CVE-2024-43483 | .NET Denial of Service Vulnerability",
            "date_modified": "2024-10-14T20:42:14.000Z",
            "date_published": "2024-10-08T20:24:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qj66-m88j-hmgj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"microsoft-security-advisory-cve-2024-43483--net-denial-of-service-vulnerability\">Microsoft Security Advisory CVE-2024-43483 | .NET Denial of Service Vulnerability</h1>\n<h2 id=\"executive-summary\"><a name=\"executive-summary\"></a>Executive summary</h2>\n<p>Microsoft is releasing this security advisory to provide information about a vulnerability in  System.Security.Cryptography.Cose, System.IO.Packaging, Microsoft.Extensions.Caching.Memory. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.</p>\n<p>System.Security.Cryptography.Cose, System.IO.Packaging, Microsoft.Extensions.Caching.Memory may be exposed to a hostile input which may lead them to be susceptible to hash flooding attacks resulting in denial of service.</p>\n<h2 id=\"announcement\">Announcement</h2>\n<p>Announcement for this issue can be found at  <a href=\"https://github.com/dotnet/announcements/issues/327\">https://github.com/dotnet/announcements/issues/327</a></p>\n<h2 id=\"mitigation-factors\"><a name=\"mitigation-factors\"></a>Mitigation factors</h2>\n<p>Microsoft has not identified any mitigating factors for this vulnerability.</p>\n<h2 id=\"affected-software\"><a name=\"affected-software\"></a>Affected software</h2>\n<ul>\n<li>Any .NET 8.0 application running on .NET 8.0.8 or earlier.</li>\n<li>Any .NET 6.0 aplication running on .NET 6.0.33 or earlier.</li>\n<li>Any application consuming one of the <a href=\"affected-packages\">vulnerable packages</a>.</li>\n</ul>\n<h2 id=\"affected-packages\"><a name=\"affected-packages\"></a>Affected Packages</h2>\n<ul>\n<li>Any .NET 6.0, 8.0, or 9.0 application.</li>\n<li>Any application consuming one of the vulnerable packages.</li>\n</ul>\n<h3 id=\"net-9\"><a name=\".NET 9\"></a>.NET 9</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.Security.Cryptography.Cose\">System.Security.Cryptography.Cose</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;= 9.0.0-preview.1.24080.9, &lt;= 9.0.0-rc.1.24431.7</td>\n<td>9.0.0-rc.2.24473.5</td>\n</tr>\n</tbody></table>\n<h3 id=\"net-8\"><a name=\".NET 8\"></a>.NET 8</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.Security.Cryptography.Cose\">System.Security.Cryptography.Cose</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;= 8.0.0-preview.1.23110.8, &lt;= 8.0.0</td>\n<td>8.0.1</td>\n</tr>\n</tbody></table>\n<h3 id=\"net-6\"><a name=\".NET 6\"></a>.NET 6</h3>\n<table>\n<thead>\n<tr>\n<th>Package name</th>\n<th>Affected version</th>\n<th>Patched version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.nuget.org/packages/System.IO.Packaging\">System.IO.Packaging</a></td>\n<td>&gt;= 6.0.0-preview.1.21102.12, &lt;= 6.0.0</td>\n<td>6.0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://www.nuget.org/packages/Microsoft.Extensions.Caching.Memory\">Microsoft.Extensions.Caching.Memory</a></td>\n<td>&gt;=6.0.0-preview.1.21102.12 &lt;= 6.0.1</td>\n<td>6.0.2</td>\n</tr>\n</tbody></table>\n<h2 id=\"advisory-faq\">Advisory FAQ</h2>\n<h3 id=\"how-do-i-know-if-i-am-affected\"><a name=\"how-affected\"></a>How do I know if I am affected?</h3>\n<p>If you have a runtime or SDK with a version listed, or an affected package listed in <a href=\"#affected-packages\">affected software</a> or <a href=\"#affected-software\">affected packages</a>, you're exposed to the vulnerability.</p>\n<h3 id=\"how-do-i-fix-the-issue\"><a name=\"how-fix\"></a>How do I fix the issue?</h3>\n<ul>\n<li>To fix the issue please install the latest version of .NET 8.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.</li>\n<li>.NET Framework-based applications and other application types need to perform a package update.</li>\n<li>If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the <code>dotnet --info</code> command. You will see output like the following;</li>\n</ul>\n<pre><code>.NET Core SDK (reflecting any global.json):\n\n\n Version:   8.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 8.0.3\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspAspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspAspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.WindowsDesktop.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n</code></pre>\n<ul>\n<li>If you're using .NET 9.0, you should download and install .NET 9.0 RC 2  Runtime or .NET 9.0.100-rc.2.24474.11 SDK (for Visual Studio 2022 v17.12 latest Preview) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/9.0\">https://dotnet.microsoft.com/download/dotnet-core/9.0</a>.</li>\n<li>If you're using .NET 8.0, you should download and install .NET 8.0.10  Runtime or .NET 8.0.110 SDK (for Visual Studio 2022 v17.8) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/8.0\">https://dotnet.microsoft.com/download/dotnet-core/8.0</a>.</li>\n<li>If you're using .NET 6.0, you should download and install .NET 6.0.35  Runtime or .NET 6.0.135 SDK (for Visual Studio 2022 v17.6) from <a href=\"https://dotnet.microsoft.com/download/dotnet-core/6.0\">https://dotnet.microsoft.com/download/dotnet-core/6.0</a>.</li>\n</ul>\n<p>.NET 6.0 and .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update &amp; Security and then click Check for Updates.</p>\n<p>Once you have installed the updated runtime or SDK, restart your apps for the update to take effect.</p>\n<p>Additionally, if you've deployed <a href=\"https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd\">self-contained applications</a> targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.</p>\n<h2 id=\"other-information\">Other Information</h2>\n<h3 id=\"reporting-security-issues\">Reporting Security Issues</h3>\n<p>If you have found a potential security issue in .NET 8.0 or .NET 6.0, please email details to <a href=\"mailto:secure@microsoft.com\">secure@microsoft.com</a>. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <a href=\"https://aka.ms/corebounty\">https://aka.ms/corebounty</a>.</p>\n<h3 id=\"support\">Support</h3>\n<p>You can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at <a href=\"https://github.com/dotnet/runtime\">https://github.com/dotnet/runtime</a> and <a href=\"https://github.com/dotnet/aspnet/\">https://github.com/dotnet/aspnet/</a>. The Announcements repo (<a href=\"https://github.com/dotnet/Announcements\">https://github.com/dotnet/Announcements</a>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.</p>\n<h3 id=\"disclaimer\">Disclaimer</h3>\n<p>The information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>\n<h3 id=\"external-links\">External Links</h3>\n<p><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-43483\">CVE-2024-43483</a></p>\n<h3 id=\"revisions\">Revisions</h3>\n<p>V1.0 (October 08, 2024): Advisory published.</p>\n<p><em>Version 1.0</em></p>\n<p><em>Last Updated 2024-10-08</em></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dotnet/runtime/security/advisories/GHSA-qj66-m88j-hmgj\">https://github.com/dotnet/runtime/security/advisories/GHSA-qj66-m88j-hmgj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43483\">https://nvd.nist.gov/vuln/detail/CVE-2024-43483</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43483\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43483</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qj66-m88j-hmgj\">https://github.com/advisories/GHSA-qj66-m88j-hmgj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qj66-m88j-hmgj",
            "title": "[Microsoft.Extensions.Caching.Memory] Microsoft Security Advisory CVE-2024-43483 | .NET Denial of Service Vulnerability",
            "date_modified": "2024-10-14T20:42:14.000Z",
            "date_published": "2024-10-08T20:24:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qj66-m88j-hmgj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}