{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Rust crates",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rust.json",
    "description": "Security Advisory for Rust crates on GitHub",
    "items": [
        {
            "content_html": "<p>Solana solana_rbpf before 0.2.29 has an addition integer overflow via invalid ELF program headers. elf.rs has a panic via a malformed eBPF program.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31264\">https://nvd.nist.gov/vuln/detail/CVE-2022-31264</a></li>\n<li><a href=\"https://github.com/Ainevsia/CVE-Request/tree/main/Solana/1\">https://github.com/Ainevsia/CVE-Request/tree/main/Solana/1</a></li>\n<li><a href=\"https://github.com/solana-labs/rbpf/releases/tag/v0.2.29\">https://github.com/solana-labs/rbpf/releases/tag/v0.2.29</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffx3-8qvm-pq3j\">https://github.com/advisories/GHSA-ffx3-8qvm-pq3j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffx3-8qvm-pq3j",
            "title": "[solana_rbpf] Integer overflow in solana_rbpf",
            "date_modified": "2022-05-25T22:26:52.000Z",
            "date_published": "2022-05-22T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffx3-8qvm-pq3j"
            }
        },
        {
            "content_html": "<p>In Solana rBPF versions 0.2.26 and 0.2.27 are affected by Incorrect Calculation which is caused by improper implementation of sdiv instruction. This can lead to the wrong execution path, resulting in huge loss in specific cases. For example, the result of a sdiv instruction may decide whether to transfer tokens or not. The vulnerability affects both integrity and may cause serious availability problems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23066\">https://nvd.nist.gov/vuln/detail/CVE-2022-23066</a></li>\n<li><a href=\"https://github.com/solana-labs/rbpf/commit/e61e045f8c244de978401d186dcfd50838817297\">https://github.com/solana-labs/rbpf/commit/e61e045f8c244de978401d186dcfd50838817297</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-23066\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-23066</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9qmm-4mfr-r3wj\">https://github.com/advisories/GHSA-9qmm-4mfr-r3wj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9qmm-4mfr-r3wj",
            "title": "[solana_rbpf] Incorrect Calculation in solana_rbpf",
            "date_modified": "2022-05-24T21:59:58.000Z",
            "date_published": "2022-05-10T00:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9qmm-4mfr-r3wj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Token comparison was not constant time, and could theorically be used to guess value of an TOTP token, and thus reuse it in the same time window. The attacker would have to know the password beforehand nonetheless.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Library now used constant-time comparison.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/constantoine/totp-rs\">totp-rs</a></li>\n<li>Email us at <a href=\"mailto:cleo.rebert@gmail.com\">cleo.rebert@gmail.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249\">https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29185\">https://nvd.nist.gov/vuln/detail/CVE-2022-29185</a></li>\n<li><a href=\"https://github.com/constantoine/totp-rs/issues/13\">https://github.com/constantoine/totp-rs/issues/13</a></li>\n<li><a href=\"https://github.com/constantoine/totp-rs/releases/tag/v1.1.0\">https://github.com/constantoine/totp-rs/releases/tag/v1.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8vxv-2g8p-2249\">https://github.com/advisories/GHSA-8vxv-2g8p-2249</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8vxv-2g8p-2249",
            "title": "[totp-rs] Observable Timing Discrepancy in totp-rs",
            "date_modified": "2022-05-24T21:33:20.000Z",
            "date_published": "2022-05-24T21:33:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8vxv-2g8p-2249"
            }
        },
        {
            "content_html": "<p>SWHKD 1.1.5 unsafely uses the /tmp/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the <code>1.1.0</code> branch of the repository.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27816\">https://nvd.nist.gov/vuln/detail/CVE-2022-27816</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/commit/0b620a09605afb815c6d8d8953bbb7a10a8c0575\">https://github.com/waycrate/swhkd/commit/0b620a09605afb815c6d8d8953bbb7a10a8c0575</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/14/1\">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases/tag/1.2.0\">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8m49-2xj8-67v9\">https://github.com/advisories/GHSA-8m49-2xj8-67v9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8m49-2xj8-67v9",
            "title": "[Simple-Wayland-HotKey-Daemon] Data Loss/Denial of Service in SWHKD",
            "date_modified": "2022-05-11T11:14:35.000Z",
            "date_published": "2022-03-31T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8m49-2xj8-67v9"
            }
        },
        {
            "content_html": "<p>SWHKD is a display protocol-independent hotkey daemon made in Rust. In SWHKD versions 1.1.5 and prior, SWHKD uses the /tmp/swhkd.pid pathname. As /tmp is accessible to all users, there can be an information leak or denial of service. No known workarounds exist. A patch is available on the <code>1.1.0</code> branch of the repository.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27815\">https://nvd.nist.gov/vuln/detail/CVE-2022-27815</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/commit/e661a4940df78fbb7b52c622ac4ae6a3a7f7d8aa\">https://github.com/waycrate/swhkd/commit/e661a4940df78fbb7b52c622ac4ae6a3a7f7d8aa</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases\">https://github.com/waycrate/swhkd/releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/14/1\">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases/tag/1.2.0\">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p4jg-pccf-h82c\">https://github.com/advisories/GHSA-p4jg-pccf-h82c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p4jg-pccf-h82c",
            "title": "[Simple-Wayland-HotKey-Daemon] Insecure Temporary File in SWHKD",
            "date_modified": "2022-05-11T11:13:40.000Z",
            "date_published": "2022-03-31T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p4jg-pccf-h82c"
            }
        },
        {
            "content_html": "<p>SWHKD 1.1.5 allows arbitrary file-existence tests via the -c option.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27814\">https://nvd.nist.gov/vuln/detail/CVE-2022-27814</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases\">https://github.com/waycrate/swhkd/releases</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2022/04/14/1\">https://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases/tag/1.2.0\">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x446-3xhq-5xfp\">https://github.com/advisories/GHSA-x446-3xhq-5xfp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x446-3xhq-5xfp",
            "title": "[Simple-Wayland-HotKey-Daemon] Exposure of Resource to Wrong Sphere in Simple-Wayland-HotKey-Daemon",
            "date_modified": "2022-05-11T11:13:06.000Z",
            "date_published": "2022-04-15T00:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x446-3xhq-5xfp"
            }
        },
        {
            "content_html": "<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0778\">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>\n<li><a href=\"https://www.openssl.org/news/secadv/20220315.txt\">https://www.openssl.org/news/secadv/20220315.txt</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html\">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5103\">https://www.debian.org/security/2022/dsa-5103</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220321-0002/\">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>\n<li><a href=\"https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002\">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-06\">https://www.tenable.com/security/tns-2022-06</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-07\">https://www.tenable.com/security/tns-2022-07</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-08\">https://www.tenable.com/security/tns-2022-08</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2022-0014.html\">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220429-0005/\">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-09\">https://www.tenable.com/security/tns-2022-09</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213255\">https://support.apple.com/kb/HT213255</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213256\">https://support.apple.com/kb/HT213256</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213257\">https://support.apple.com/kb/HT213257</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/33\">http://seclists.org/fulldisclosure/2022/May/33</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/35\">http://seclists.org/fulldisclosure/2022/May/35</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/38\">http://seclists.org/fulldisclosure/2022/May/38</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3mh-jvjw-3xwx\">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3mh-jvjw-3xwx",
            "title": "[openssl-src] Infinite loop in `BN_mod_sqrt()` reachable when parsing certificates",
            "date_modified": "2022-06-02T18:59:47.000Z",
            "date_published": "2022-03-16T00:00:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"
            }
        },
        {
            "content_html": "<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0778\">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>\n<li><a href=\"https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246\">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>\n<li><a href=\"https://www.openssl.org/news/secadv/20220315.txt\">https://www.openssl.org/news/secadv/20220315.txt</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html\">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5103\">https://www.debian.org/security/2022/dsa-5103</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220321-0002/\">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>\n<li><a href=\"https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002\">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-06\">https://www.tenable.com/security/tns-2022-06</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-07\">https://www.tenable.com/security/tns-2022-07</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-08\">https://www.tenable.com/security/tns-2022-08</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2022-0014.html\">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220429-0005/\">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2022-09\">https://www.tenable.com/security/tns-2022-09</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213255\">https://support.apple.com/kb/HT213255</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213256\">https://support.apple.com/kb/HT213256</a></li>\n<li><a href=\"https://support.apple.com/kb/HT213257\">https://support.apple.com/kb/HT213257</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/33\">http://seclists.org/fulldisclosure/2022/May/33</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/35\">http://seclists.org/fulldisclosure/2022/May/35</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/May/38\">http://seclists.org/fulldisclosure/2022/May/38</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3mh-jvjw-3xwx\">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3mh-jvjw-3xwx",
            "title": "[openssl-src] Infinite loop in `BN_mod_sqrt()` reachable when parsing certificates",
            "date_modified": "2022-06-02T18:59:47.000Z",
            "date_published": "2022-03-16T00:00:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Affected versions of this crate violated alignment when casting byte slices to integer slices, resulting in undefined behavior. <code>rand_core::BlockRng::next_u64</code> and <code>rand_core::BlockRng::fill_bytes</code> are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected by Ralf Jung and Diggory Hardy for <code>rand_core &gt;= 0.4.2</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<p>See <a href=\"https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06\">Rand's changelog</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, <a href=\"https://github.com/rust-random/rand/issues/new/choose\">open an issue in the Rand repository</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-random/rand/security/advisories/GHSA-mmc9-pwm7-qj5w\">https://github.com/rust-random/rand/security/advisories/GHSA-mmc9-pwm7-qj5w</a></li>\n<li><a href=\"https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06\">https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2019-0035.html\">https://rustsec.org/advisories/RUSTSEC-2019-0035.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mmc9-pwm7-qj5w\">https://github.com/advisories/GHSA-mmc9-pwm7-qj5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mmc9-pwm7-qj5w",
            "title": "[rand_core] Unaligned memory access in rand_core",
            "date_modified": "2022-05-02T20:41:52.000Z",
            "date_published": "2021-08-25T20:56:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mmc9-pwm7-qj5w"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the rand_core crate before 0.6.2 for Rust. Because <code>read_u32_into</code> and <code>read_u64_into</code> mishandle certain buffer-length checks, a random number generator may be seeded with too little data. The vulnerability was introduced in v0.6.0. The advisory doesn't apply to earlier minor version numbers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27378\">https://nvd.nist.gov/vuln/detail/CVE-2021-27378</a></li>\n<li><a href=\"https://github.com/rust-random/rand/pull/1096\">https://github.com/rust-random/rand/pull/1096</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0023.html\">https://rustsec.org/advisories/RUSTSEC-2021-0023.html</a></li>\n<li><a href=\"https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R19\">https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R19</a></li>\n<li><a href=\"https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R28\">https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7j2-35mf-95p7\">https://github.com/advisories/GHSA-w7j2-35mf-95p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7j2-35mf-95p7",
            "title": "[rand_core] Incorrect check on buffer length in rand_core",
            "date_modified": "2022-04-29T17:25:04.000Z",
            "date_published": "2021-08-25T20:52:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7j2-35mf-95p7"
            }
        },
        {
            "content_html": "<p>SWHKD 1.1.5 consumes the keyboard events of unintended users. This could potentially cause an information leak, but is usually a denial of functionality.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27817\">https://nvd.nist.gov/vuln/detail/CVE-2022-27817</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases\">https://github.com/waycrate/swhkd/releases</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2022/04/14/1\">https://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h5wh-7h2j-h999\">https://github.com/advisories/GHSA-h5wh-7h2j-h999</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h5wh-7h2j-h999",
            "title": "[Simple-Wayland-HotKey-Daemon] Exposure of Resource to Wrong Sphere in Simple-Wayland-HotKey-Daemon",
            "date_modified": "2022-04-26T13:04:23.000Z",
            "date_published": "2022-04-15T00:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h5wh-7h2j-h999"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote attacker could exploit this vulnerability to exhaust ckb process memory of an affected node.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to 0.43.1 or later.</p>\n<h3 id=\"references\">References</h3>\n<p>After resolving the outpoints of one dep group, we put the corresponding content into a vec ( <a href=\"https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617\">https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617</a> ), there is a vulnerability to a memory dos attack because there is no determination of whether the outpoints is duplicated.</p>\n<p>PoC:</p>\n<pre><code>before send dos tx rss:\n105700\n\nafter rss:\n2306932\n</code></pre>\n<p>DoS cost: 25.6 KB * 150 + dep_tx out_points capacity ( 36 * 150 * 100 = 540000 ) = 4380000 CKB\nSend 50 dos_tx, memory exhausted: (25.6 KB * 150  * 100) * 50 = 19.2 GB</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nervosnetwork/ckb/security/advisories/GHSA-j35p-q24r-5367\">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-j35p-q24r-5367</a></li>\n<li><a href=\"https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617\">https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j35p-q24r-5367\">https://github.com/advisories/GHSA-j35p-q24r-5367</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j35p-q24r-5367",
            "title": "[ckb] Dep Group Remote Memory Exhaustion (Denial of Service) in ckb",
            "date_modified": "2022-04-22T20:23:05.000Z",
            "date_published": "2022-04-22T20:23:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j35p-q24r-5367"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability effects the built-in afire serve_static extension allowing paths containing <code>//....</code> to bypass the previous path sanitation and request files in higher directories that should not be accessible.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been fixed in <a href=\"https://crates.io/crates/afire/1.1.0\">afire 1.1.0</a>.\nIf you can, just update to the newest version of afire.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't update afire you can simply disallow paths containing <code>/..</code> with the following middleware.\nMake sure this is the last middleware added to the server so it runs first, stopping the bad requests.</p>\n<pre><code class=\"language-rust\">use afire::prelude::*;\n\nstruct PathTraversalFix;\n\nimpl Middleware for PathTraversalFix {\n    fn pre(&amp;self, req: Request) -&gt; MiddleRequest {\n        if req.path.replace(\"\\\\\", \"/\").contains(\"/..\") {\n            return MiddleRequest::Send(\n                Response::new()\n                    .status(400)\n                    .text(\"Paths containing `..` are not allowed\"),\n            );\n        }\n\n        MiddleRequest::Continue\n    }\n}\n</code></pre>\n<pre><code class=\"language-rust\">let mut server = Server::new(host, port);\nPathTraversalFix.attach(&amp;mut server);\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>You can read about the new changes to afire in 1.1.0 <a href=\"https://connorcode.com/writing/afire/update-3\">here</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory you can email me or message me on discord.\n[<a href=\"https://connorcode.com/contact\">https://connorcode.com/contact</a>]</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Basicprogrammer10/afire/security/advisories/GHSA-3227-r97m-8j95\">https://github.com/Basicprogrammer10/afire/security/advisories/GHSA-3227-r97m-8j95</a></li>\n<li><a href=\"https://github.com/Basicprogrammer10/afire/commit/da7904c04f82e1cb43cc42eaf6a1dba072b5c921\">https://github.com/Basicprogrammer10/afire/commit/da7904c04f82e1cb43cc42eaf6a1dba072b5c921</a></li>\n<li><a href=\"https://github.com/Basicprogrammer10/afire/releases/tag/v1.1.0\">https://github.com/Basicprogrammer10/afire/releases/tag/v1.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3227-r97m-8j95\">https://github.com/advisories/GHSA-3227-r97m-8j95</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3227-r97m-8j95",
            "title": "[afire] Relative Path Traversal in afire serve_static",
            "date_modified": "2022-04-22T20:16:47.000Z",
            "date_published": "2022-04-22T20:16:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3227-r97m-8j95"
            }
        },
        {
            "content_html": "<p>SWHKD 1.1.5 unsafely uses the /tmp/swhkd.sock pathname. There can be an information leak or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27818\">https://nvd.nist.gov/vuln/detail/CVE-2022-27818</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/commit/f70b99dd575fab79d8a942111a6980431f006818\">https://github.com/waycrate/swhkd/commit/f70b99dd575fab79d8a942111a6980431f006818</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases/tag/1.1.7\">https://github.com/waycrate/swhkd/releases/tag/1.1.7</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases\">https://github.com/waycrate/swhkd/releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/14/1\">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3r5-jhw6-4634\">https://github.com/advisories/GHSA-r3r5-jhw6-4634</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3r5-jhw6-4634",
            "title": "[Simple-Wayland-HotKey-Daemon] Insecure temporary file usage in SWHKD",
            "date_modified": "2022-04-19T18:16:59.000Z",
            "date_published": "2022-04-08T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3r5-jhw6-4634"
            }
        },
        {
            "content_html": "<p>SWHKD 1.1.5 allows unsafe parsing via the -c option. An information leak might occur but there is a simple denial of service (memory exhaustion) upon an attempt to parse a large or infinite file (such as a block or character device).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27819\">https://nvd.nist.gov/vuln/detail/CVE-2022-27819</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/commit/b4e6dc76f4845ab03104187a42ac6d1bbc1e0021\">https://github.com/waycrate/swhkd/commit/b4e6dc76f4845ab03104187a42ac6d1bbc1e0021</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases/tag/1.1.7\">https://github.com/waycrate/swhkd/releases/tag/1.1.7</a></li>\n<li><a href=\"https://github.com/waycrate/swhkd/releases\">https://github.com/waycrate/swhkd/releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/14/1\">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6xw-mghq-7523\">https://github.com/advisories/GHSA-h6xw-mghq-7523</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6xw-mghq-7523",
            "title": "[Simple-Wayland-HotKey-Daemon] Unsafe parsing in SWHKD",
            "date_modified": "2022-04-15T16:14:51.000Z",
            "date_published": "2022-04-08T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6xw-mghq-7523"
            }
        },
        {
            "content_html": "<p>There is a use after free vulnerability in Wasmtime when both running Wasm that uses <code>externref</code>s and enabling <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption\">epoch interruption</a> in Wasmtime. If you are not explicitly enabling epoch interruption (it is disabled by default) then you are not affected. If you are explicitly disabling the Wasm reference types proposal (it is enabled by default) then you are also not affected.</p>\n<p>The use after free is caused by Cranelift failing to emit stack maps when there are safepoints inside cold blocks. Cold blocks occur when epoch interruption is enabled. Cold blocks are emitted at the end of compiled functions, and change the order blocks are emitted versus defined. This reordering accidentally caused Cranelift to skip emitting some stack maps because it expected to emit the stack maps in block definition order, rather than block emission order. When Wasmtime would eventually collect garbage, it would fail to find live references on the stack because of the missing stack maps, think that they were unreferenced garbage, and therefore reclaim them. Then after the collection ended, the Wasm code could use the reclaimed-too-early references, which is a use after free.</p>\n<p>This bug was discovered while extending our fuzz targets for <code>externref</code>s and GC in Wasmtime. The updated fuzz target thoroughly exercises these code paths and feature combinations now. We have also added a regression test for this bug. Released versions 0.34.2 and 0.35.2, which fix the vulnerability. We recommend all Wasmtime users upgrade to these patched versions. If upgrading is not an option for you at this time, you can avoid the vulnerability by either disabling the Wasm reference types proposal or by disabling epoch interruption if you were previously enabling it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gwc9-348x-qwv2\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gwc9-348x-qwv2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24791\">https://nvd.nist.gov/vuln/detail/CVE-2022-24791</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/666c2554ea0e1728c35aa41178cf235920db888a\">https://github.com/bytecodealliance/wasmtime/commit/666c2554ea0e1728c35aa41178cf235920db888a</a></li>\n<li><a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption</a></li>\n<li><a href=\"https://github.com/WebAssembly/reference-types\">https://github.com/WebAssembly/reference-types</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gwc9-348x-qwv2\">https://github.com/advisories/GHSA-gwc9-348x-qwv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gwc9-348x-qwv2",
            "title": "[wasmtime] Use after free in Wasmtime",
            "date_modified": "2022-05-13T18:50:27.000Z",
            "date_published": "2022-04-01T13:36:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gwc9-348x-qwv2"
            }
        },
        {
            "content_html": "<p>There is a use after free vulnerability in Wasmtime when both running Wasm that uses <code>externref</code>s and enabling <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption\">epoch interruption</a> in Wasmtime. If you are not explicitly enabling epoch interruption (it is disabled by default) then you are not affected. If you are explicitly disabling the Wasm reference types proposal (it is enabled by default) then you are also not affected.</p>\n<p>The use after free is caused by Cranelift failing to emit stack maps when there are safepoints inside cold blocks. Cold blocks occur when epoch interruption is enabled. Cold blocks are emitted at the end of compiled functions, and change the order blocks are emitted versus defined. This reordering accidentally caused Cranelift to skip emitting some stack maps because it expected to emit the stack maps in block definition order, rather than block emission order. When Wasmtime would eventually collect garbage, it would fail to find live references on the stack because of the missing stack maps, think that they were unreferenced garbage, and therefore reclaim them. Then after the collection ended, the Wasm code could use the reclaimed-too-early references, which is a use after free.</p>\n<p>This bug was discovered while extending our fuzz targets for <code>externref</code>s and GC in Wasmtime. The updated fuzz target thoroughly exercises these code paths and feature combinations now. We have also added a regression test for this bug. Released versions 0.34.2 and 0.35.2, which fix the vulnerability. We recommend all Wasmtime users upgrade to these patched versions. If upgrading is not an option for you at this time, you can avoid the vulnerability by either disabling the Wasm reference types proposal or by disabling epoch interruption if you were previously enabling it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gwc9-348x-qwv2\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gwc9-348x-qwv2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24791\">https://nvd.nist.gov/vuln/detail/CVE-2022-24791</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/666c2554ea0e1728c35aa41178cf235920db888a\">https://github.com/bytecodealliance/wasmtime/commit/666c2554ea0e1728c35aa41178cf235920db888a</a></li>\n<li><a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption</a></li>\n<li><a href=\"https://github.com/WebAssembly/reference-types\">https://github.com/WebAssembly/reference-types</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gwc9-348x-qwv2\">https://github.com/advisories/GHSA-gwc9-348x-qwv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gwc9-348x-qwv2",
            "title": "[wasmtime] Use after free in Wasmtime",
            "date_modified": "2022-05-13T18:50:27.000Z",
            "date_published": "2022-04-01T13:36:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gwc9-348x-qwv2"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The versions of Deno between release 1.18.0 and 1.20.2 (inclusive) are vulnerable to an attack where a malicious actor controlling the code executed in a Deno runtime could bypass permission checks and execute arbitrary shell code.</p>\n<p>There is <strong>no</strong> evidence that this vulnerability has been exploited in the wild.</p>\n<p>This vulnerability does <strong>not</strong> affect users of Deno Deploy.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in Deno 1.20.3.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround. All users are recommended to upgrade to 1.20.3 immediately</p>\n<hr>\n<p>The cause of this error was that certain FFI operations did not correctly check for permissions. The issue was fixed in <a href=\"https://github.com/denoland/deno/pull/14115\">this</a> pull request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/denoland/deno/security/advisories/GHSA-838h-jqp6-cf2f\">https://github.com/denoland/deno/security/advisories/GHSA-838h-jqp6-cf2f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24783\">https://nvd.nist.gov/vuln/detail/CVE-2022-24783</a></li>\n<li><a href=\"https://github.com/denoland/deno/releases/tag/v1.20.3\">https://github.com/denoland/deno/releases/tag/v1.20.3</a></li>\n<li><a href=\"https://github.com/denoland/deno/pull/14115\">https://github.com/denoland/deno/pull/14115</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-838h-jqp6-cf2f\">https://github.com/advisories/GHSA-838h-jqp6-cf2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-838h-jqp6-cf2f",
            "title": "[deno] Sandbox bypass leading to arbitrary code execution in Deno",
            "date_modified": "2022-05-13T18:50:27.000Z",
            "date_published": "2022-03-29T22:10:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-838h-jqp6-cf2f"
            }
        },
        {
            "content_html": "<blockquote>\n<p>This is a cross-post of <a href=\"https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw\">the official security advisory</a>. The official advisory contains a signed version with our PGP key, as well.</p>\n</blockquote>\n<p>The Rust Security Response WG was notified that the <code>regex</code> crate did not properly limit the complexity of the regular expressions (regex) it parses. An attacker could use this security issue to perform a denial of service, by sending a specially crafted regex to a service accepting untrusted regexes. No known vulnerability is present when parsing untrusted input with trusted regexes.</p>\n<p>This issue has been assigned CVE-2022-24713. The severity of this vulnerability is \"high\" when the <code>regex</code> crate is used to parse untrusted regexes. Other uses of the <code>regex</code> crate are not affected by this vulnerability.</p>\n<h2 id=\"overview\">Overview</h2>\n<p>The <code>regex</code> crate features built-in mitigations to prevent denial of service attacks caused by untrusted regexes, or untrusted input matched by trusted regexes. Those (tunable) mitigations already provide sane defaults to prevent attacks. This guarantee is documented and it's considered part of the crate's API.</p>\n<p>Unfortunately a bug was discovered in the mitigations designed to prevent untrusted regexes to take an arbitrary amount of time during parsing, and it's possible to craft regexes that bypass such mitigations. This makes it possible to perform denial of service attacks by sending specially crafted regexes to services accepting user-controlled, untrusted regexes.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<p>All versions of the <code>regex</code> crate before or equal to 1.5.4 are affected by this issue. The fix is include starting from  <code>regex</code> 1.5.5.</p>\n<h2 id=\"mitigations\">Mitigations</h2>\n<p>We recommend everyone accepting user-controlled regexes to upgrade immediately to the latest version of the <code>regex</code> crate.</p>\n<p>Unfortunately there is no fixed set of problematic regexes, as there are practically infinite regexes that could be crafted to exploit this vulnerability. Because of this, we do not recommend denying known problematic regexes.</p>\n<h2 id=\"acknowledgements\">Acknowledgements</h2>\n<p>We want to thank Addison Crump for responsibly disclosing this to us according to the <a href=\"https://www.rust-lang.org/policies/security\">Rust security policy</a>, and for helping review the fix.</p>\n<p>We also want to thank Andrew Gallant for developing the fix, and Pietro Albini for coordinating the disclosure and writing this advisory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/regex/security/advisories/GHSA-m5pq-gvj9-9vr8\">https://github.com/rust-lang/regex/security/advisories/GHSA-m5pq-gvj9-9vr8</a></li>\n<li><a href=\"https://github.com/rust-lang/regex/commit/ae70b41d4f46641dbc45c7a4f87954aea356283e\">https://github.com/rust-lang/regex/commit/ae70b41d4f46641dbc45c7a4f87954aea356283e</a></li>\n<li><a href=\"https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw\">https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24713\">https://nvd.nist.gov/vuln/detail/CVE-2022-24713</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JANLZ3JXWJR7FSHE57K66UIZUIJZI67T/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JANLZ3JXWJR7FSHE57K66UIZUIJZI67T/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PDOWTHNVGBOP2HN27PUFIGRYNSNDTYRJ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PDOWTHNVGBOP2HN27PUFIGRYNSNDTYRJ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O3YB7CURSG64CIPCDPNMGPE4UU24AB6H/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O3YB7CURSG64CIPCDPNMGPE4UU24AB6H/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/04/msg00003.html\">https://lists.debian.org/debian-lts-announce/2022/04/msg00003.html</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5113\">https://www.debian.org/security/2022/dsa-5113</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/04/msg00009.html\">https://lists.debian.org/debian-lts-announce/2022/04/msg00009.html</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5118\">https://www.debian.org/security/2022/dsa-5118</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5pq-gvj9-9vr8\">https://github.com/advisories/GHSA-m5pq-gvj9-9vr8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5pq-gvj9-9vr8",
            "title": "[regex] Regular expression denial of service in Rust's regex crate",
            "date_modified": "2022-05-13T18:50:26.000Z",
            "date_published": "2022-03-08T20:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5pq-gvj9-9vr8"
            }
        },
        {
            "content_html": "<p>In galois_2p8 before 0.1.2, PrimitivePolynomialField::new has an off-by-one buffer overflow for a vector.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24988\">https://nvd.nist.gov/vuln/detail/CVE-2022-24988</a></li>\n<li><a href=\"https://github.com/djsweet/galois_2p8/blob/master/CHANGELOG.md\">https://github.com/djsweet/galois_2p8/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p8q-j6q5-mjw8\">https://github.com/advisories/GHSA-9p8q-j6q5-mjw8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p8q-j6q5-mjw8",
            "title": "[galois_2p8] Buffer Overflow in galois_2p8",
            "date_modified": "2022-02-26T00:35:51.000Z",
            "date_published": "2022-02-15T00:02:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p8q-j6q5-mjw8"
            }
        }
    ]
}