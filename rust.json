{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Rust crates",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rust.json",
    "description": "Security Advisory for Rust crates on GitHub",
    "items": [
        {
            "content_html": "<p>Grin 3.0.0 before 4.0.0 has insufficient validation of data related to Mimblewimble.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15899\">https://nvd.nist.gov/vuln/detail/CVE-2020-15899</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-15899.md\">https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-15899.md</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin/compare/v3.1.1...v4.0.0\">https://github.com/mimblewimble/grin/compare/v3.1.1...v4.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p75g-gcv5-42qg\">https://github.com/advisories/GHSA-p75g-gcv5-42qg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p75g-gcv5-42qg",
            "title": "[grin] Grin insufficient data validation",
            "date_modified": "2024-02-01T21:47:53.000Z",
            "date_published": "2022-05-24T17:24:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p75g-gcv5-42qg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Grin before 3.1.0 allows attackers to adversely affect availability of data on a Mimblewimble blockchain.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-12439\">https://nvd.nist.gov/vuln/detail/CVE-2020-12439</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin/issues/3235\">https://github.com/mimblewimble/grin/issues/3235</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin/pull/3236\">https://github.com/mimblewimble/grin/pull/3236</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-12439.md\">https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-12439.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x52-88cq-55q5\">https://github.com/advisories/GHSA-6x52-88cq-55q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x52-88cq-55q5",
            "title": "[grin] Grin allows attackers to adversely affect availability of data on a Mimblewimble blockchain",
            "date_modified": "2024-02-01T21:47:48.000Z",
            "date_published": "2022-05-24T17:17:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x52-88cq-55q5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Grin through 2.1.1 has Insufficient Validation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-6638\">https://nvd.nist.gov/vuln/detail/CVE-2020-6638</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-6638.md\">https://github.com/mimblewimble/grin-security/blob/master/CVEs/CVE-2020-6638.md</a></li>\n<li><a href=\"https://github.com/mimblewimble/grin/compare/v2.1.1...v3.0.0\">https://github.com/mimblewimble/grin/compare/v2.1.1...v3.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7w6p-rwhg-7h3g\">https://github.com/advisories/GHSA-7w6p-rwhg-7h3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7w6p-rwhg-7h3g",
            "title": "[grin] Grin Insufficient Validation",
            "date_modified": "2024-02-01T21:24:15.000Z",
            "date_published": "2022-05-24T17:07:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7w6p-rwhg-7h3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a bug in Wasmtime's C API implementation where the definition of the <code>wasmtime_trap_code</code> does not match its declared signature in the <code>wasmtime/trap.h</code> header file. This discrepancy causes the function implementation to perform a 4-byte write into a 1-byte buffer provided by the caller. This can lead to three zero bytes being written beyond the 1-byte location provided by the caller.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched and users should upgrade to Wasmtime 2.0.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This can be worked around by providing a 4-byte buffer casted to a 1-byte buffer when calling <code>wasmtime_trap_code</code>. Users of the <code>wasmtime</code> crate are not affected by this issue, only users of the C API function <code>wasmtime_trap_code</code> are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://docs.wasmtime.dev/c-api/trap_8h.html#a6580f4f209d3eaebb6e8b9a901a30b7a\">Definition of <code>wasmtime_trap_code</code></a></li>\n<li><a href=\"https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA\">Mailing list announcement</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493\">Patch to fix for <code>main</code> branch</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to us on <a href=\"https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime\">the Bytecode Alliance Zulip chat</a></li>\n<li>Open an issue in <a href=\"https://github.com/bytecodealliance/wasmtime/\">the bytecodealliance/wasmtime repository</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-h84q-m8rr-3v9q\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-h84q-m8rr-3v9q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39394\">https://nvd.nist.gov/vuln/detail/CVE-2022-39394</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/087d9d7becf7422b3f872a3bcd5d97bb7ce7ff36\">https://github.com/bytecodealliance/wasmtime/commit/087d9d7becf7422b3f872a3bcd5d97bb7ce7ff36</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493\">https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493</a></li>\n<li><a href=\"https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA\">https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h84q-m8rr-3v9q\">https://github.com/advisories/GHSA-h84q-m8rr-3v9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h84q-m8rr-3v9q",
            "title": "[wasmtime] wasmtime_trap_code C API function has out of bounds write vulnerability",
            "date_modified": "2024-02-01T00:15:48.000Z",
            "date_published": "2024-02-01T00:15:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h84q-m8rr-3v9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a bug in Wasmtime's C API implementation where the definition of the <code>wasmtime_trap_code</code> does not match its declared signature in the <code>wasmtime/trap.h</code> header file. This discrepancy causes the function implementation to perform a 4-byte write into a 1-byte buffer provided by the caller. This can lead to three zero bytes being written beyond the 1-byte location provided by the caller.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched and users should upgrade to Wasmtime 2.0.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This can be worked around by providing a 4-byte buffer casted to a 1-byte buffer when calling <code>wasmtime_trap_code</code>. Users of the <code>wasmtime</code> crate are not affected by this issue, only users of the C API function <code>wasmtime_trap_code</code> are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://docs.wasmtime.dev/c-api/trap_8h.html#a6580f4f209d3eaebb6e8b9a901a30b7a\">Definition of <code>wasmtime_trap_code</code></a></li>\n<li><a href=\"https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA\">Mailing list announcement</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493\">Patch to fix for <code>main</code> branch</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to us on <a href=\"https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime\">the Bytecode Alliance Zulip chat</a></li>\n<li>Open an issue in <a href=\"https://github.com/bytecodealliance/wasmtime/\">the bytecodealliance/wasmtime repository</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-h84q-m8rr-3v9q\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-h84q-m8rr-3v9q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39394\">https://nvd.nist.gov/vuln/detail/CVE-2022-39394</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/087d9d7becf7422b3f872a3bcd5d97bb7ce7ff36\">https://github.com/bytecodealliance/wasmtime/commit/087d9d7becf7422b3f872a3bcd5d97bb7ce7ff36</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493\">https://github.com/bytecodealliance/wasmtime/commit/5b6d5e78de106503b3b9add218bb3d2b1d63c493</a></li>\n<li><a href=\"https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA\">https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/c1HBDDJwNPA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h84q-m8rr-3v9q\">https://github.com/advisories/GHSA-h84q-m8rr-3v9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h84q-m8rr-3v9q",
            "title": "[wasmtime] wasmtime_trap_code C API function has out of bounds write vulnerability",
            "date_modified": "2024-02-01T00:15:48.000Z",
            "date_published": "2024-02-01T00:15:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h84q-m8rr-3v9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm-core] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to the patch, when executing specific EVM opcodes related to memory operations that use <code>evm_core::Memory::copy_large</code>, the crate can over-allocate memory when it is not needed, making it possible for an attacker to perform denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The flaw was corrected in commit <code>19ade85</code>. Users should upgrade to <code>==0.21.1, ==0.23.1, ==0.24.1, ==0.25.1, &gt;=0.26.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. Please upgrade your <code>evm</code> crate version</p>\n<h3 id=\"references\">References</h3>\n<p>Fix commit: <a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/rust-blockchain/evm\">evm repo</a></li>\n<li>Email <a href=\"mailto:wei@that.world\">Wei</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388\">https://github.com/rust-blockchain/evm/security/advisories/GHSA-4jwq-572w-4388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29511\">https://nvd.nist.gov/vuln/detail/CVE-2021-29511</a></li>\n<li><a href=\"https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd\">https://github.com/rust-blockchain/evm/commit/19ade858c430ab13eb562764a870ac9f8506f8dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jwq-572w-4388\">https://github.com/advisories/GHSA-4jwq-572w-4388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jwq-572w-4388",
            "title": "[evm] Memory over-allocation in evm crate",
            "date_modified": "2024-01-30T23:55:43.000Z",
            "date_published": "2024-01-30T23:55:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jwq-572w-4388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Users can report private messages, even when they're neither sender nor recipient of the message.\nThe API response to creating a private message report contains the private message itself, which means any user can just iterate over message ids to (loudly) obtain all private messages of an instance.\nA user with instance admin privileges can also abuse this if the private message is removed from the response, as they're able to see the resulting reports.</p>\n<h3 id=\"details\">Details</h3>\n<p>Creating a private message report by POSTing to <code>/api/v3/private_message/report</code> does not validate whether the reporter is the recipient of the message.\nAt least lemmy-ui does not allow the sender to report the message; the API method should likely be restricted to accessible to recipients only.\nThe API response when creating a report contains the <code>private_message_report_view</code> with all the details of the report, including the private message that has been reported:</p>\n<details>\n\n<summary>Example response</summary>\n\n<p>In the report below, the creator with id 3 is different from the private message creator (id 2) and private message recipient (id 6).</p>\n<pre><code class=\"language-json\">{\n  \"private_message_report_view\": {\n    \"private_message_report\": {\n      \"id\": 14,\n      \"creator_id\": 3,\n      \"private_message_id\": 7,\n      \"original_pm_text\": \"testfoo\",\n      \"reason\": \"reporting id 7\",\n      \"resolved\": false,\n      \"published\": \"2023-12-15T19:23:03.441967Z\"\n    },\n    \"private_message\": {\n      \"id\": 7,\n      \"creator_id\": 2,\n      \"recipient_id\": 6,\n      \"content\": \"testfoo\",\n      \"deleted\": false,\n      \"read\": false,\n      \"published\": \"2023-12-15T19:21:41.920872Z\",\n      \"ap_id\": \"https://1b1w56.lem.rocks/private_message/7\",\n      \"local\": true\n    },\n    \"private_message_creator\": {\n      \"id\": 2,\n      \"name\": \"admin\",\n      \"banned\": false,\n      \"published\": \"2023-12-14T23:45:05.055427Z\",\n      \"actor_id\": \"https://1b1w56.lem.rocks/u/admin\",\n      \"local\": true,\n      \"deleted\": false,\n      \"bot_account\": false,\n      \"instance_id\": 1\n    },\n    \"creator\": {\n      \"id\": 3,\n      \"name\": \"testuser1\",\n      \"banned\": false,\n      \"published\": \"2023-12-14T23:47:57.571772Z\",\n      \"actor_id\": \"https://1b1w56.lem.rocks/u/testuser1\",\n      \"local\": true,\n      \"deleted\": false,\n      \"bot_account\": false,\n      \"instance_id\": 1\n    }\n  }\n}\n</code></pre>\n</details>\n\n<p>If these details were not available in the response, but reports could still be created by any user, or at least by any admin, this would allow an instance admin to create reports and obtain the message contents from the report system.</p>\n<p>This was originally discovered from incorrect reports on a 0.18.5 instance and has been replicated in a 0.19.0 test environment.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-bash\">curl -v 'https://myinstance.tld/api/v3/private_message/report' -X POST -H 'Content-Type: application/json' -H 'authorization: Bearer ...' --data-raw '{\"private_message_id\":1,\"reason\":\"i like reports\"}'\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any authenticated user can obtain arbitrary (untargeted) private message contents.\nPrivileges required depend on the instance configuration; when registratons are enabled without application system, the privileges required are practically none.\nWhen registration applications are required, privileges required could be considered low, but this assessment heavily varies by instance.</p>\n<h3 id=\"detection\">Detection</h3>\n<p>Any private message reports where the report creator is not equal to the private message recipient may be an attempt to exploit this.\nAs this was originally discovered from an incorrect report, likely related to a bug in a client app, it should be noted that not all mismatching reports should be considered malicious; though a frequent occurrence of them likely indicates an exploitation attempt.</p>\n<h3 id=\"workaround-when-updating-is-not-immediately-possible\">Workaround when updating is not immediately possible</h3>\n<p>If an update to a fixed Lemmy version is not immediately possible, the API route can be blocked in the reverse proxy.\nThis will prevent anyone from reporting private messages, but it will also prevent exploitation before the update has been applied.</p>\n<p>nginx example:</p>\n<pre><code class=\"language-nginx\">location = /api/v3/private_message/report {\n  default_type application/json;\n  return 403 '{\"error\":\"couldnt_create_report\"}';\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/LemmyNet/lemmy/security/advisories/GHSA-r64r-5h43-26qv\">https://github.com/LemmyNet/lemmy/security/advisories/GHSA-r64r-5h43-26qv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23649\">https://nvd.nist.gov/vuln/detail/CVE-2024-23649</a></li>\n<li><a href=\"https://github.com/LemmyNet/lemmy/commit/bc32b408b523b9b64aa57b8e47748f96cce0dae5\">https://github.com/LemmyNet/lemmy/commit/bc32b408b523b9b64aa57b8e47748f96cce0dae5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r64r-5h43-26qv\">https://github.com/advisories/GHSA-r64r-5h43-26qv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r64r-5h43-26qv",
            "title": "[lemmy_server] Any authenticated user may obtain private message details from other users on the same instance",
            "date_modified": "2024-01-24T21:13:42.000Z",
            "date_published": "2024-01-24T21:13:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r64r-5h43-26qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There was a logic bug where unauthenticated payloads could still cause a nonce increment in snow's internal state. For an attacker with the ability to inject packets into the channel Noise is talking over, this allows a denial-of-service type attack which could prevent communication as it causes the sending and receiving side to be expecting different nonce values than would arrive.</p>\n<p>Note that this only affects those who are using the stateful <code>TransportState</code>, not those using <code>StatelessTransportState</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in version 0.9.5, and all users are recommended to update.</p>\n<h3 id=\"references\">References</h3>\n<p>There will be a more formal report of this in the near future.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mcginty/snow/security/advisories/GHSA-7g9j-g5jg-3vv3\">https://github.com/mcginty/snow/security/advisories/GHSA-7g9j-g5jg-3vv3</a></li>\n<li><a href=\"https://github.com/mcginty/snow/commit/12e8ae55547ae297d5f70599e5c884ea891303eb\">https://github.com/mcginty/snow/commit/12e8ae55547ae297d5f70599e5c884ea891303eb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g9j-g5jg-3vv3\">https://github.com/advisories/GHSA-7g9j-g5jg-3vv3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g9j-g5jg-3vv3",
            "title": "[snow] Unauthenticated Nonce Increment in snow",
            "date_modified": "2024-01-24T20:55:01.000Z",
            "date_published": "2024-01-24T20:53:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g9j-g5jg-3vv3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Insufficient validation of outbound header values may lead to request splitting or response splitting attacks in scenarios where attackers have sufficient control over outbound headers.</p>\n<h3 id=\"details\">Details</h3>\n<p>Outbound <code>trillium_http::HeaderValue</code> and <code>trillium_http::HeaderName</code> can be constructed infallibly and were not checked for illegal bytes when sending requests from the client or responses from the server. Thus, if an attacker has sufficient control over header values (or names) in a request or response that they could inject <code>\\r\\n</code> sequences, they could get the client and server out of sync, and then pivot to gain control over other parts of requests or responses. (i.e. exfiltrating data from other requests, SSRF, etc.)</p>\n<h3 id=\"patches\">Patches</h3>\n<h4 id=\"trillium-http--0312\">trillium-http &gt;= 0.3.12:</h4>\n<ul>\n<li>If a header name is invalid in server response headers, the specific header and any associated values are omitted from network transmission.</li>\n<li>If a header value is invalid in server response headers, the individual header value is omitted from network transmission. Other headers values with the same header name will still be sent.</li>\n</ul>\n<h4 id=\"trillium-client--054\">trillium-client &gt;= 0.5.4:</h4>\n<ul>\n<li>If any header name or header value is invalid in the client request headers, awaiting the client Conn returns an <code>Error::MalformedHeader</code> prior to any network access.</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>trillium services and client applications should sanitize or validate untrusted input that is included in header values and header names. Carriage return, newline, and null characters are not allowed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This only affects use cases where attackers have control of outbound headers, and can insert \"\\r\\n\" sequences. Specifically, if untrusted and unvalidated input is inserted into header names or values.</p>\n<h3 id=\"a-note-on-timing-from-jbr-on-behalf-of-trillium-rs\">A note on timing from @jbr on behalf of <code>trillium-rs</code></h3>\n<p>@divergentdave filed this vulnerability many months ago but I did not see it until the evening of Jan 23, 2024. Patches were issued less than 24h after reading the vulnerability. The <a href=\"https://github.com/trillium-rs/trillium/blob/main/SECURITY.md\">security policy</a> has been <a href=\"https://github.com/trillium-rs/trillium/commit/b27950ceae52aa7a0f482494fe67b6069234d417\">updated</a> to avoid delays like this in the future.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/trillium-rs/trillium/security/advisories/GHSA-9f9p-cp3c-72jf\">https://github.com/trillium-rs/trillium/security/advisories/GHSA-9f9p-cp3c-72jf</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2024-0008.html\">https://rustsec.org/advisories/RUSTSEC-2024-0008.html</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2024-0009.html\">https://rustsec.org/advisories/RUSTSEC-2024-0009.html</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23644\">https://nvd.nist.gov/vuln/detail/CVE-2024-23644</a></li>\n<li><a href=\"https://github.com/trillium-rs/trillium/commit/16a42b3f8378a3fa4e61ece3e3e37e6a530df51d\">https://github.com/trillium-rs/trillium/commit/16a42b3f8378a3fa4e61ece3e3e37e6a530df51d</a></li>\n<li><a href=\"https://github.com/trillium-rs/trillium/commit/8d468f85e27b8d0943d6f43ce9f8c7397141a999\">https://github.com/trillium-rs/trillium/commit/8d468f85e27b8d0943d6f43ce9f8c7397141a999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9f9p-cp3c-72jf\">https://github.com/advisories/GHSA-9f9p-cp3c-72jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9f9p-cp3c-72jf",
            "title": "[trillium-client] Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') in trillium-http and trillium-client",
            "date_modified": "2024-01-24T21:32:26.000Z",
            "date_published": "2024-01-24T20:20:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9f9p-cp3c-72jf"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}