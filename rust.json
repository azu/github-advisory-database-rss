{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Rust crates",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rust.json",
    "description": "Security Advisory for Rust crates on GitHub",
    "items": [
        {
            "content_html": "<p>An issue was discovered in the ark-r1cs-std crate before 0.3.1 for Rust. It does not enforce any constraints in the FieldVar::mul_by_inverse method. Thus, a prover can produce a proof that is unsound but is nonetheless verified.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38194\">https://nvd.nist.gov/vuln/detail/CVE-2021-38194</a></li>\n<li><a href=\"https://github.com/arkworks-rs/r1cs-std/pull/70\">https://github.com/arkworks-rs/r1cs-std/pull/70</a></li>\n<li><a href=\"https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ark-r1cs-std/RUSTSEC-2021-0075.md\">https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ark-r1cs-std/RUSTSEC-2021-0075.md</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0075.html\">https://rustsec.org/advisories/RUSTSEC-2021-0075.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qj3v-q2vj-4c8h\">https://github.com/advisories/GHSA-qj3v-q2vj-4c8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qj3v-q2vj-4c8h",
            "title": "[ark-r1cs-std] Calculation error in ark-r1cs-std",
            "date_modified": "2022-06-15T19:39:30.000Z",
            "date_published": "2021-08-25T20:55:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qj3v-q2vj-4c8h"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the flatbuffers crate before 0.6.1 for Rust. Arbitrary bytes can be reinterpreted as a bool, defeating soundness.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-25004\">https://nvd.nist.gov/vuln/detail/CVE-2019-25004</a></li>\n<li><a href=\"https://github.com/google/flatbuffers/issues/5530\">https://github.com/google/flatbuffers/issues/5530</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2019-0028.html\">https://rustsec.org/advisories/RUSTSEC-2019-0028.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gx73-2498-r55c\">https://github.com/advisories/GHSA-gx73-2498-r55c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gx73-2498-r55c",
            "title": "[flatbuffers] Unsound casting in flatbuffers",
            "date_modified": "2022-06-15T19:22:57.000Z",
            "date_published": "2021-08-25T20:46:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gx73-2498-r55c"
            }
        },
        {
            "content_html": "<p>ripgrep before 13 on Windows allows attackers to trigger execution of arbitrary programs from the current working directory via the -z/--search-zip or --pre flag.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3013\">https://nvd.nist.gov/vuln/detail/CVE-2021-3013</a></li>\n<li><a href=\"https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md#1300-2021-06-12\">https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md#1300-2021-06-12</a></li>\n<li><a href=\"https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md\">https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/BurntSushi/ripgrep/blob/e48a17e1891e1ea9dd06ba0e48d5fb140ca7c0c4/CHANGELOG.md\">https://github.com/BurntSushi/ripgrep/blob/e48a17e1891e1ea9dd06ba0e48d5fb140ca7c0c4/CHANGELOG.md</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0071.html\">https://rustsec.org/advisories/RUSTSEC-2021-0071.html</a></li>\n<li><a href=\"https://github.com/BurntSushi/ripgrep/issues/1773\">https://github.com/BurntSushi/ripgrep/issues/1773</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4xg-fxmg-vcg5\">https://github.com/advisories/GHSA-g4xg-fxmg-vcg5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4xg-fxmg-vcg5",
            "title": "[grep-cli] OS command injection in ripgrep",
            "date_modified": "2022-06-15T19:20:27.000Z",
            "date_published": "2021-08-05T19:31:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4xg-fxmg-vcg5"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the fruity crate through 0.2.0 for Rust. Security-relevant validation of filename extensions is plausibly affected. Methods of NSString for conversion to a string may return a partial result. Because they call CStr::from_ptr on a pointer to the string buffer, the string is terminated at the first '\\0' byte, which might not be the end of the string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43620\">https://nvd.nist.gov/vuln/detail/CVE-2021-43620</a></li>\n<li><a href=\"https://github.com/nvzqz/fruity/issues/14\">https://github.com/nvzqz/fruity/issues/14</a></li>\n<li><a href=\"https://github.com/rustsec/advisory-db/pull/1102\">https://github.com/rustsec/advisory-db/pull/1102</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0123.html\">https://rustsec.org/advisories/RUSTSEC-2021-0123.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h352-g5vw-3926\">https://github.com/advisories/GHSA-h352-g5vw-3926</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h352-g5vw-3926",
            "title": "[fruity] Improper Input Validation in fruity",
            "date_modified": "2022-06-15T19:18:41.000Z",
            "date_published": "2021-11-16T17:26:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h352-g5vw-3926"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the http crate before 0.1.20 for Rust. The HeaderMap::Drain API can use a raw pointer, defeating soundness.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-25009\">https://nvd.nist.gov/vuln/detail/CVE-2019-25009</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2019-0034.html\">https://rustsec.org/advisories/RUSTSEC-2019-0034.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6rhx-hqxm-8p36\">https://github.com/advisories/GHSA-6rhx-hqxm-8p36</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6rhx-hqxm-8p36",
            "title": "[http] Double free in http",
            "date_modified": "2022-06-15T19:17:36.000Z",
            "date_published": "2021-08-25T20:46:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6rhx-hqxm-8p36"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the iced-x86 crate through 1.10.3 for Rust. In Decoder::new(), slice.get_unchecked(slice.length()) is used unsafely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38188\">https://nvd.nist.gov/vuln/detail/CVE-2021-38188</a></li>\n<li><a href=\"https://github.com/icedland/iced/issues/168\">https://github.com/icedland/iced/issues/168</a></li>\n<li><a href=\"https://github.com/icedland/iced/commit/3c607a003e03b773108401d109167d1840487dce\">https://github.com/icedland/iced/commit/3c607a003e03b773108401d109167d1840487dce</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0068.html\">https://rustsec.org/advisories/RUSTSEC-2021-0068.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jjx5-3f36-6927\">https://github.com/advisories/GHSA-jjx5-3f36-6927</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jjx5-3f36-6927",
            "title": "[iced-x86] Incorrect buffer size calculation in iced-x86",
            "date_modified": "2022-06-15T19:17:01.000Z",
            "date_published": "2021-08-25T20:55:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jjx5-3f36-6927"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the image crate before 0.23.12 for Rust. A Mutable reference has immutable provenance. (In the case of LLVM, the IR may be always correct.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35916\">https://nvd.nist.gov/vuln/detail/CVE-2020-35916</a></li>\n<li><a href=\"https://github.com/image-rs/image/issues/1357\">https://github.com/image-rs/image/issues/1357</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0073.html\">https://rustsec.org/advisories/RUSTSEC-2020-0073.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wgh-vjj7-7433\">https://github.com/advisories/GHSA-9wgh-vjj7-7433</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wgh-vjj7-7433",
            "title": "[image] Mutable reference with immutable provenance in image",
            "date_modified": "2022-06-15T19:00:14.000Z",
            "date_published": "2021-08-25T20:49:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wgh-vjj7-7433"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Affected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The flaw is fixed by correctly handling consecutive CRLF sequences.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0069.html\">RUSTSEC-2021-0069</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lettre/lettre/security/advisories/GHSA-qc36-q22q-cjw3\">https://github.com/lettre/lettre/security/advisories/GHSA-qc36-q22q-cjw3</a></li>\n<li><a href=\"https://github.com/lettre/lettre/commit/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce\">https://github.com/lettre/lettre/commit/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0069.html\">https://rustsec.org/advisories/RUSTSEC-2021-0069.html</a></li>\n<li><a href=\"https://github.com/lettre/lettre/pull/627/commits/93458d01fed0ec81c0e7b4e98e6f35961356fae2\">https://github.com/lettre/lettre/pull/627/commits/93458d01fed0ec81c0e7b4e98e6f35961356fae2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc36-q22q-cjw3\">https://github.com/advisories/GHSA-qc36-q22q-cjw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc36-q22q-cjw3",
            "title": "[lettre] SMTP command injection in lettre",
            "date_modified": "2022-06-15T18:59:54.000Z",
            "date_published": "2021-07-12T17:03:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc36-q22q-cjw3"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the internment crate through 2020-05-28 for Rust. ArcIntern::drop has a race condition and resultant use-after-free.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35874\">https://nvd.nist.gov/vuln/detail/CVE-2020-35874</a></li>\n<li><a href=\"https://github.com/droundy/internment/issues/11\">https://github.com/droundy/internment/issues/11</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0017.html\">https://rustsec.org/advisories/RUSTSEC-2020-0017.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-96w3-p368-4h8c\">https://github.com/advisories/GHSA-96w3-p368-4h8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-96w3-p368-4h8c",
            "title": "[internment] Use after free in internment",
            "date_modified": "2022-06-15T18:59:19.000Z",
            "date_published": "2021-08-25T20:46:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-96w3-p368-4h8c"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Affected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.</p>\n<p>Depending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).</p>\n<p><em>NOTE</em>: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">RUSTSEC-2020-0069</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">CVE-2020-28247</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">https://nvd.nist.gov/vuln/detail/CVE-2020-28247</a></li>\n<li><a href=\"https://github.com/RustSec/advisory-db/pull/478/files\">https://github.com/RustSec/advisory-db/pull/478/files</a></li>\n<li><a href=\"https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b\">https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">https://rustsec.org/advisories/RUSTSEC-2020-0069.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx",
            "title": "[lettre] Argument injection in lettre",
            "date_modified": "2022-06-14T22:36:50.000Z",
            "date_published": "2021-08-25T20:56:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Affected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.</p>\n<p>Depending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).</p>\n<p><em>NOTE</em>: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">RUSTSEC-2020-0069</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">CVE-2020-28247</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">https://nvd.nist.gov/vuln/detail/CVE-2020-28247</a></li>\n<li><a href=\"https://github.com/RustSec/advisory-db/pull/478/files\">https://github.com/RustSec/advisory-db/pull/478/files</a></li>\n<li><a href=\"https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b\">https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">https://rustsec.org/advisories/RUSTSEC-2020-0069.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx",
            "title": "[lettre] Argument injection in lettre",
            "date_modified": "2022-06-14T22:36:50.000Z",
            "date_published": "2021-08-25T20:56:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Affected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.</p>\n<p>Depending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).</p>\n<p><em>NOTE</em>: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">RUSTSEC-2020-0069</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">CVE-2020-28247</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28247\">https://nvd.nist.gov/vuln/detail/CVE-2020-28247</a></li>\n<li><a href=\"https://github.com/RustSec/advisory-db/pull/478/files\">https://github.com/RustSec/advisory-db/pull/478/files</a></li>\n<li><a href=\"https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b\">https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0069.html\">https://rustsec.org/advisories/RUSTSEC-2020-0069.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vc2p-r46x-m3vx\">https://github.com/advisories/GHSA-vc2p-r46x-m3vx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx",
            "title": "[lettre] Argument injection in lettre",
            "date_modified": "2022-06-14T22:36:50.000Z",
            "date_published": "2021-08-25T20:56:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vc2p-r46x-m3vx"
            }
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Version 1.2.1 of the <code>libpulse-binding</code> Rust crate, released on the 15th of June 2018, fixed a pair of use-after-free issues with the objects returned by the <code>get_format_info</code> and <code>get_context</code> methods of <code>Stream</code> objects. These objects were mistakenly being constructed without setting an important flag to prevent destruction of the underlying C objects they reference upon their own destruction.</p>\n<p>This advisory is being written retrospectively, having previously only been noted in the changelog. No CVE assignment was sought.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users are required to update to version 1.2.1 or newer.</p>\n<p>Versions older than 1.2.1 have been yanked from crates.io. This was believed to have already been done at the time of the 1.2.1 release, but upon double checking now they were found to still be available, so has been done now (22nd October 2020).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jnqnfe/pulse-binding-rust/security/advisories/GHSA-ghpq-vjxw-ch5w\">https://github.com/jnqnfe/pulse-binding-rust/security/advisories/GHSA-ghpq-vjxw-ch5w</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2018-0021.html\">https://rustsec.org/advisories/RUSTSEC-2018-0021.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghpq-vjxw-ch5w\">https://github.com/advisories/GHSA-ghpq-vjxw-ch5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghpq-vjxw-ch5w",
            "title": "[libpulse-binding] Use after free in libpulse-binding",
            "date_modified": "2022-06-14T22:31:21.000Z",
            "date_published": "2021-08-25T20:56:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghpq-vjxw-ch5w"
            }
        },
        {
            "content_html": "<p>The socket2 crate has assumed <code>std::net::SocketAddrV4</code> and <code>std::net::SocketAddrV6</code> have the same memory layout as the system C representation <code>sockaddr</code>. It has simply casted the pointers to convert the socket addresses to the system representation. The standard library does not say anything about the memory layout, and this will cause invalid memory access if the standard library changes the implementation. No warnings or errors will be emitted once the change happens.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35920\">https://nvd.nist.gov/vuln/detail/CVE-2020-35920</a></li>\n<li><a href=\"https://github.com/rust-lang/socket2-rs/issues/119\">https://github.com/rust-lang/socket2-rs/issues/119</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0079.html\">https://rustsec.org/advisories/RUSTSEC-2020-0079.html</a></li>\n<li><a href=\"https://github.com/deprecrated/net2-rs/issues/105\">https://github.com/deprecrated/net2-rs/issues/105</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0078.html\">https://rustsec.org/advisories/RUSTSEC-2020-0078.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-458v-4hrf-g3m4\">https://github.com/advisories/GHSA-458v-4hrf-g3m4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-458v-4hrf-g3m4",
            "title": "[net2] socket2 invalidly assumes the memory layout of std::net::SocketAddr",
            "date_modified": "2022-06-14T21:18:50.000Z",
            "date_published": "2021-08-25T20:50:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-458v-4hrf-g3m4"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the reffers crate through 2020-12-01 for Rust. ARefss can contain a !Send,!Sync object, leading to a data race and memory corruption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36203\">https://nvd.nist.gov/vuln/detail/CVE-2020-36203</a></li>\n<li><a href=\"https://github.com/diwic/reffers-rs/issues/7\">https://github.com/diwic/reffers-rs/issues/7</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0094.html\">https://rustsec.org/advisories/RUSTSEC-2020-0094.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-39xg-8p43-h76x\">https://github.com/advisories/GHSA-39xg-8p43-h76x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-39xg-8p43-h76x",
            "title": "[reffers] Data races in reffers",
            "date_modified": "2022-06-14T21:09:52.000Z",
            "date_published": "2021-08-25T20:51:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-39xg-8p43-h76x"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the prost-types crate before 0.8.0 for Rust. An overflow can occur during conversion from Timestamp to SystemTime.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38192\">https://nvd.nist.gov/vuln/detail/CVE-2021-38192</a></li>\n<li><a href=\"https://github.com/tokio-rs/prost/issues/438\">https://github.com/tokio-rs/prost/issues/438</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0073.html\">https://rustsec.org/advisories/RUSTSEC-2021-0073.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4qm-mcjq-v2gf\">https://github.com/advisories/GHSA-x4qm-mcjq-v2gf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4qm-mcjq-v2gf",
            "title": "[prost-types] Overflow in prost-types",
            "date_modified": "2022-06-14T21:04:07.000Z",
            "date_published": "2021-08-25T20:55:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4qm-mcjq-v2gf"
            }
        },
        {
            "content_html": "<p>Affected versions of the <code>pnet</code> crate were optimized out by compiler, which caused dereference of uninitialized file descriptor which caused segfault.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/libpnet/libpnet/issues/449\">https://github.com/libpnet/libpnet/issues/449</a></li>\n<li><a href=\"https://github.com/libpnet/libpnet/pull/455\">https://github.com/libpnet/libpnet/pull/455</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2019-0037.html\">https://rustsec.org/advisories/RUSTSEC-2019-0037.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6ff-2q3c-v3pv\">https://github.com/advisories/GHSA-r6ff-2q3c-v3pv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6ff-2q3c-v3pv",
            "title": "[pnet] Compiler optimisation leads to SEGFAULT",
            "date_modified": "2022-06-14T21:03:31.000Z",
            "date_published": "2021-08-25T21:00:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6ff-2q3c-v3pv"
            }
        },
        {
            "content_html": "<p>Affected versions of stack_dst used a push_inner function that increased the internal length of the array and then called val.clone(). If the val.clone() call panics, the stack could drop an already dropped element or drop uninitialized memory. This issue was fixed in 2a4d538 by increasing the length of the array after elements are cloned.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28035\">https://nvd.nist.gov/vuln/detail/CVE-2021-28035</a></li>\n<li><a href=\"https://github.com/thepowersgang/stack_dst-rs/issues/5\">https://github.com/thepowersgang/stack_dst-rs/issues/5</a></li>\n<li><a href=\"https://github.com/thepowersgang/stack_dst-rs/commit/2a4d538\">https://github.com/thepowersgang/stack_dst-rs/commit/2a4d538</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0033.html\">https://rustsec.org/advisories/RUSTSEC-2021-0033.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45w7-7g63-2m5w\">https://github.com/advisories/GHSA-45w7-7g63-2m5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45w7-7g63-2m5w",
            "title": "[stack_dst] Drop of uninitialized memory in stack_dst",
            "date_modified": "2022-06-14T20:51:08.000Z",
            "date_published": "2021-09-01T18:30:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45w7-7g63-2m5w"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the tar crate before 0.4.36 for Rust. When symlinks are present in a TAR archive, extraction can create arbitrary directories via .. traversal.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38511\">https://nvd.nist.gov/vuln/detail/CVE-2021-38511</a></li>\n<li><a href=\"https://github.com/alexcrichton/tar-rs/issues/238\">https://github.com/alexcrichton/tar-rs/issues/238</a></li>\n<li><a href=\"https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tar/RUSTSEC-2021-0080.md\">https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tar/RUSTSEC-2021-0080.md</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0080.html\">https://rustsec.org/advisories/RUSTSEC-2021-0080.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62jx-8vmh-4mcw\">https://github.com/advisories/GHSA-62jx-8vmh-4mcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62jx-8vmh-4mcw",
            "title": "[tar] Path trav in tar",
            "date_modified": "2022-06-14T20:38:47.000Z",
            "date_published": "2021-08-25T20:58:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62jx-8vmh-4mcw"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the tokio crate before 1.8.1 for Rust. Upon a JoinHandle::abort, a Task may be dropped in the wrong thread.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38191\">https://nvd.nist.gov/vuln/detail/CVE-2021-38191</a></li>\n<li><a href=\"https://github.com/tokio-rs/tokio/issues/3929\">https://github.com/tokio-rs/tokio/issues/3929</a></li>\n<li><a href=\"https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tokio/RUSTSEC-2021-0072.md\">https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tokio/RUSTSEC-2021-0072.md</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2021-0072.html\">https://rustsec.org/advisories/RUSTSEC-2021-0072.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2grh-hm3w-w7hv\">https://github.com/advisories/GHSA-2grh-hm3w-w7hv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2grh-hm3w-w7hv",
            "title": "[tokio] Race condition in tokio",
            "date_modified": "2022-06-14T20:29:53.000Z",
            "date_published": "2021-08-25T20:55:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2grh-hm3w-w7hv"
            }
        }
    ]
}