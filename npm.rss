<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-03-23T00:21:01.789Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[faker] Removal of functional code in faker.js]]></title>
        <id>https://github.com/advisories/GHSA-5w9c-rv96-fr7g</id>
        <link href="https://github.com/advisories/GHSA-5w9c-rv96-fr7g"/>
        <updated>2022-03-22T20:57:56.000Z</updated>
        <content type="html"><![CDATA[<p>Faker.js helps users create large amounts of data for testing and development. The maintainer deliberately removed the functional code from this package. This appears to be a purposeful and successful attempt to make the package unusable. This is related to the colors.js <a href="https://github.com/advisories/GHSA-gh88-3pxp-6fm8">CVE-2021-23567</a>. </p>
<p>The functional code for this package was forked and can be found <a href="https://github.com/faker-js/faker">here</a>. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23567">https://nvd.nist.gov/vuln/detail/CVE-2021-23567</a></li>
<li><a href="https://github.com/Marak/colors.js/issues/285">https://github.com/Marak/colors.js/issues/285</a></li>
<li><a href="https://github.com/Marak/colors.js/issues/285%23issuecomment-1008212640">https://github.com/Marak/colors.js/issues/285%23issuecomment-1008212640</a></li>
<li><a href="https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18">https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18</a></li>
<li><a href="https://github.com/advisories/GHSA-gh88-3pxp-6fm8">https://github.com/advisories/GHSA-gh88-3pxp-6fm8</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-COLORS-2331906">https://snyk.io/vuln/SNYK-JS-COLORS-2331906</a></li>
<li><a href="https://www.npmjs.com/package/@faker-js/faker">https://www.npmjs.com/package/@faker-js/faker</a></li>
<li><a href="https://www.npmjs.com/package/faker">https://www.npmjs.com/package/faker</a></li>
<li><a href="https://github.com/advisories/GHSA-5w9c-rv96-fr7g">https://github.com/advisories/GHSA-5w9c-rv96-fr7g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5w9c-rv96-fr7g</uri>
        </author>
        <published>2022-03-22T19:28:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Renderers can obtain access to random bluetooth device without permission in Electron]]></title>
        <id>https://github.com/advisories/GHSA-3p22-ghq8-v749</id>
        <link href="https://github.com/advisories/GHSA-3p22-ghq8-v749"/>
        <updated>2022-03-22T19:19:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>
<p>All current stable versions of Electron are affected.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>17.0.0-alpha.6</code></li>
<li><code>16.0.6</code></li>
<li><code>15.3.5</code></li>
<li><code>14.2.4</code></li>
<li><code>13.6.6</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Adding this code to your app can workaround the issue.</p>
<pre><code class="language-js">app.on('web-contents-created', (event, webContents) =&gt; {
  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {
    // Prevent default behavior
    event.preventDefault();
    // Cancel the request
    callback('');
  });
});
</code></pre>
<p>For more information
If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21718">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>
<li><a href="https://github.com/electron/electron/pull/32178">https://github.com/electron/electron/pull/32178</a></li>
<li><a href="https://github.com/electron/electron/pull/32240">https://github.com/electron/electron/pull/32240</a></li>
<li><a href="https://github.com/advisories/GHSA-3p22-ghq8-v749">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p22-ghq8-v749</uri>
        </author>
        <published>2022-03-22T18:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Renderers can obtain access to random bluetooth device without permission in Electron]]></title>
        <id>https://github.com/advisories/GHSA-3p22-ghq8-v749</id>
        <link href="https://github.com/advisories/GHSA-3p22-ghq8-v749"/>
        <updated>2022-03-22T19:19:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>
<p>All current stable versions of Electron are affected.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>17.0.0-alpha.6</code></li>
<li><code>16.0.6</code></li>
<li><code>15.3.5</code></li>
<li><code>14.2.4</code></li>
<li><code>13.6.6</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Adding this code to your app can workaround the issue.</p>
<pre><code class="language-js">app.on('web-contents-created', (event, webContents) =&gt; {
  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {
    // Prevent default behavior
    event.preventDefault();
    // Cancel the request
    callback('');
  });
});
</code></pre>
<p>For more information
If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21718">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>
<li><a href="https://github.com/electron/electron/pull/32178">https://github.com/electron/electron/pull/32178</a></li>
<li><a href="https://github.com/electron/electron/pull/32240">https://github.com/electron/electron/pull/32240</a></li>
<li><a href="https://github.com/advisories/GHSA-3p22-ghq8-v749">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p22-ghq8-v749</uri>
        </author>
        <published>2022-03-22T18:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Renderers can obtain access to random bluetooth device without permission in Electron]]></title>
        <id>https://github.com/advisories/GHSA-3p22-ghq8-v749</id>
        <link href="https://github.com/advisories/GHSA-3p22-ghq8-v749"/>
        <updated>2022-03-22T19:19:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>
<p>All current stable versions of Electron are affected.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>17.0.0-alpha.6</code></li>
<li><code>16.0.6</code></li>
<li><code>15.3.5</code></li>
<li><code>14.2.4</code></li>
<li><code>13.6.6</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Adding this code to your app can workaround the issue.</p>
<pre><code class="language-js">app.on('web-contents-created', (event, webContents) =&gt; {
  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {
    // Prevent default behavior
    event.preventDefault();
    // Cancel the request
    callback('');
  });
});
</code></pre>
<p>For more information
If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21718">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>
<li><a href="https://github.com/electron/electron/pull/32178">https://github.com/electron/electron/pull/32178</a></li>
<li><a href="https://github.com/electron/electron/pull/32240">https://github.com/electron/electron/pull/32240</a></li>
<li><a href="https://github.com/advisories/GHSA-3p22-ghq8-v749">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p22-ghq8-v749</uri>
        </author>
        <published>2022-03-22T18:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Renderers can obtain access to random bluetooth device without permission in Electron]]></title>
        <id>https://github.com/advisories/GHSA-3p22-ghq8-v749</id>
        <link href="https://github.com/advisories/GHSA-3p22-ghq8-v749"/>
        <updated>2022-03-22T19:19:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>
<p>All current stable versions of Electron are affected.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>17.0.0-alpha.6</code></li>
<li><code>16.0.6</code></li>
<li><code>15.3.5</code></li>
<li><code>14.2.4</code></li>
<li><code>13.6.6</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Adding this code to your app can workaround the issue.</p>
<pre><code class="language-js">app.on('web-contents-created', (event, webContents) =&gt; {
  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {
    // Prevent default behavior
    event.preventDefault();
    // Cancel the request
    callback('');
  });
});
</code></pre>
<p>For more information
If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21718">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>
<li><a href="https://github.com/electron/electron/pull/32178">https://github.com/electron/electron/pull/32178</a></li>
<li><a href="https://github.com/electron/electron/pull/32240">https://github.com/electron/electron/pull/32240</a></li>
<li><a href="https://github.com/advisories/GHSA-3p22-ghq8-v749">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p22-ghq8-v749</uri>
        </author>
        <published>2022-03-22T18:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Renderers can obtain access to random bluetooth device without permission in Electron]]></title>
        <id>https://github.com/advisories/GHSA-3p22-ghq8-v749</id>
        <link href="https://github.com/advisories/GHSA-3p22-ghq8-v749"/>
        <updated>2022-03-22T19:19:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>
<p>All current stable versions of Electron are affected.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>17.0.0-alpha.6</code></li>
<li><code>16.0.6</code></li>
<li><code>15.3.5</code></li>
<li><code>14.2.4</code></li>
<li><code>13.6.6</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Adding this code to your app can workaround the issue.</p>
<pre><code class="language-js">app.on('web-contents-created', (event, webContents) =&gt; {
  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {
    // Prevent default behavior
    event.preventDefault();
    // Cancel the request
    callback('');
  });
});
</code></pre>
<p>For more information
If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21718">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>
<li><a href="https://github.com/electron/electron/pull/32178">https://github.com/electron/electron/pull/32178</a></li>
<li><a href="https://github.com/electron/electron/pull/32240">https://github.com/electron/electron/pull/32240</a></li>
<li><a href="https://github.com/advisories/GHSA-3p22-ghq8-v749">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p22-ghq8-v749</uri>
        </author>
        <published>2022-03-22T18:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bodymen] Prototype Pollution in bodymen]]></title>
        <id>https://github.com/advisories/GHSA-vhxc-fhm5-qcp9</id>
        <link href="https://github.com/advisories/GHSA-vhxc-fhm5-qcp9"/>
        <updated>2022-03-21T19:38:25.000Z</updated>
        <content type="html"><![CDATA[<p>The package bodymen from 0.0.0 are vulnerable to Prototype Pollution via the handler function which could be tricked into adding or modifying properties of Object.prototype using a <strong>proto</strong> payload. <strong>Note:</strong> This vulnerability derives from an incomplete fix to <a href="https://security.snyk.io/vuln/SNYK-JS-BODYMEN-548897">CVE-2019-10792</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25296">https://nvd.nist.gov/vuln/detail/CVE-2022-25296</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-BODYMEN-2342623">https://snyk.io/vuln/SNYK-JS-BODYMEN-2342623</a></li>
<li><a href="https://github.com/advisories/GHSA-vhxc-fhm5-qcp9">https://github.com/advisories/GHSA-vhxc-fhm5-qcp9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vhxc-fhm5-qcp9</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[post-loader] Arbitrary code execution in post-loader]]></title>
        <id>https://github.com/advisories/GHSA-66ww-999q-mffq</id>
        <link href="https://github.com/advisories/GHSA-66ww-999q-mffq"/>
        <updated>2022-03-21T18:25:35.000Z</updated>
        <content type="html"><![CDATA[<p>The package post-loader from 0.0.0 is vulnerable to Arbitrary Code Execution which uses a markdown parser in an unsafe way so that any javascript code inside the markdown input files gets evaluated and executed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0748">https://nvd.nist.gov/vuln/detail/CVE-2022-0748</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-POSTLOADER-2403737">https://snyk.io/vuln/SNYK-JS-POSTLOADER-2403737</a></li>
<li><a href="https://github.com/advisories/GHSA-66ww-999q-mffq">https://github.com/advisories/GHSA-66ww-999q-mffq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66ww-999q-mffq</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-lmdb] Unhandled case in node-lmdb]]></title>
        <id>https://github.com/advisories/GHSA-32j9-6qqm-mq9g</id>
        <link href="https://github.com/advisories/GHSA-32j9-6qqm-mq9g"/>
        <updated>2022-03-21T17:24:46.000Z</updated>
        <content type="html"><![CDATA[<p>The package node-lmdb before 0.9.7 is vulnerable to Denial of Service (DoS) when defining a non-invokable ToString value, which will cause a crash during type check.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21164">https://nvd.nist.gov/vuln/detail/CVE-2022-21164</a></li>
<li><a href="https://github.com/Venemo/node-lmdb/commit/97760104c0fd311206b88aecd91fa1f59fe2b85a">https://github.com/Venemo/node-lmdb/commit/97760104c0fd311206b88aecd91fa1f59fe2b85a</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NODELMDB-2400723">https://snyk.io/vuln/SNYK-JS-NODELMDB-2400723</a></li>
<li><a href="https://github.com/advisories/GHSA-32j9-6qqm-mq9g">https://github.com/advisories/GHSA-32j9-6qqm-mq9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32j9-6qqm-mq9g</uri>
        </author>
        <published>2022-03-17T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@braintree/sanitize-url] Cross-site Scripting in sanitize-url]]></title>
        <id>https://github.com/advisories/GHSA-hqq7-2q2v-82xq</id>
        <link href="https://github.com/advisories/GHSA-hqq7-2q2v-82xq"/>
        <updated>2022-03-21T17:20:18.000Z</updated>
        <content type="html"><![CDATA[<p>The package <code>@braintree/sanitize-url</code> before 6.0.0 is vulnerable to Cross-site Scripting (XSS) due to improper sanitization in the <code>sanitizeUrl</code> function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23648">https://nvd.nist.gov/vuln/detail/CVE-2021-23648</a></li>
<li><a href="https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183">https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-BRAINTREESANITIZEURL-2339882">https://snyk.io/vuln/SNYK-JS-BRAINTREESANITIZEURL-2339882</a></li>
<li><a href="https://github.com/advisories/GHSA-hqq7-2q2v-82xq">https://github.com/advisories/GHSA-hqq7-2q2v-82xq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqq7-2q2v-82xq</uri>
        </author>
        <published>2022-03-17T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[minimist] Prototype Pollution in minimist]]></title>
        <id>https://github.com/advisories/GHSA-xvch-5gv4-984h</id>
        <link href="https://github.com/advisories/GHSA-xvch-5gv4-984h"/>
        <updated>2022-03-21T18:01:34.000Z</updated>
        <content type="html"><![CDATA[<p>Minimist &lt;=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-44906">https://nvd.nist.gov/vuln/detail/CVE-2021-44906</a></li>
<li><a href="https://github.com/substack/minimist/issues/164">https://github.com/substack/minimist/issues/164</a></li>
<li><a href="https://github.com/substack/minimist/blob/master/index.js#L69">https://github.com/substack/minimist/blob/master/index.js#L69</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MINIMIST-559764">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>
<li><a href="https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068">https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068</a></li>
<li><a href="https://github.com/advisories/GHSA-xvch-5gv4-984h">https://github.com/advisories/GHSA-xvch-5gv4-984h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvch-5gv4-984h</uri>
        </author>
        <published>2022-03-18T00:01:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-forge] Improper Verification of Cryptographic Signature in `node-forge`]]></title>
        <id>https://github.com/advisories/GHSA-2r2c-g63r-vccr</id>
        <link href="https://github.com/advisories/GHSA-2r2c-g63r-vccr"/>
        <updated>2022-03-22T19:33:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>RSA PKCS#1 v1.5 signature verification code is not properly checking <code>DigestInfo</code> for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been addressed in <code>node-forge</code> <code>1.3.0</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/digitalbazaar/forge">forge</a></li>
<li>Email us at <a href="mailto:security@digitalbazaar.com">example email address</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/digitalbazaar/forge/security/advisories/GHSA-2r2c-g63r-vccr">https://github.com/digitalbazaar/forge/security/advisories/GHSA-2r2c-g63r-vccr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24773">https://nvd.nist.gov/vuln/detail/CVE-2022-24773</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1">https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2">https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2</a></li>
<li><a href="https://github.com/advisories/GHSA-2r2c-g63r-vccr">https://github.com/advisories/GHSA-2r2c-g63r-vccr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r2c-g63r-vccr</uri>
        </author>
        <published>2022-03-18T23:10:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-forge] Improper Verification of Cryptographic Signature in `node-forge`]]></title>
        <id>https://github.com/advisories/GHSA-x4jg-mjrx-434g</id>
        <link href="https://github.com/advisories/GHSA-x4jg-mjrx-434g"/>
        <updated>2022-03-22T19:33:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a <code>DigestInfo</code> ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been addressed in <code>node-forge</code> <code>1.3.0</code>.</p>
<h3 id="references">References</h3>
<p>For more information, please see
<a href="https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/">"Bleichenbacher's RSA signature forgery based on implementation error"</a>
by Hal Finney.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/digitalbazaar/forge">forge</a></li>
<li>Email us at <a href="mailto:security@digitalbazaar.com">example email address</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g">https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24772">https://nvd.nist.gov/vuln/detail/CVE-2022-24772</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1">https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2">https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2</a></li>
<li><a href="https://github.com/advisories/GHSA-x4jg-mjrx-434g">https://github.com/advisories/GHSA-x4jg-mjrx-434g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4jg-mjrx-434g</uri>
        </author>
        <published>2022-03-18T23:10:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-forge] Improper Verification of Cryptographic Signature in node-forge]]></title>
        <id>https://github.com/advisories/GHSA-cfm4-qjh2-4765</id>
        <link href="https://github.com/advisories/GHSA-cfm4-qjh2-4765"/>
        <updated>2022-03-22T19:33:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been addressed in <code>node-forge</code> <code>1.3.0</code>.</p>
<h3 id="references">References</h3>
<p>For more information, please see
<a href="https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/">"Bleichenbacher's RSA signature forgery based on implementation error"</a>
by Hal Finney.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/digitalbazaar/forge">forge</a></li>
<li>Email us at <a href="mailto:security@digitalbazaar.com">example email address</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765">https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24771">https://nvd.nist.gov/vuln/detail/CVE-2022-24771</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1">https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2">https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2</a></li>
<li><a href="https://github.com/advisories/GHSA-cfm4-qjh2-4765">https://github.com/advisories/GHSA-cfm4-qjh2-4765</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cfm4-qjh2-4765</uri>
        </author>
        <published>2022-03-18T23:09:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[argencoders-notevil] Sandbox escape in notevil and argencoders-notevil]]></title>
        <id>https://github.com/advisories/GHSA-8g4m-cjm2-96wq</id>
        <link href="https://github.com/advisories/GHSA-8g4m-cjm2-96wq"/>
        <updated>2022-03-21T18:01:49.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. <strong>Note:</strong> This vulnerability derives from an incomplete fix in <a href="https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878">SNYK-JS-NOTEVIL-608878</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23771">https://nvd.nist.gov/vuln/detail/CVE-2021-23771</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-ARGENCODERSNOTEVIL-2388587">https://snyk.io/vuln/SNYK-JS-ARGENCODERSNOTEVIL-2388587</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NOTEVIL-2385946">https://snyk.io/vuln/SNYK-JS-NOTEVIL-2385946</a></li>
<li><a href="https://github.com/advisories/GHSA-8g4m-cjm2-96wq">https://github.com/advisories/GHSA-8g4m-cjm2-96wq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g4m-cjm2-96wq</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[notevil] Sandbox escape in notevil and argencoders-notevil]]></title>
        <id>https://github.com/advisories/GHSA-8g4m-cjm2-96wq</id>
        <link href="https://github.com/advisories/GHSA-8g4m-cjm2-96wq"/>
        <updated>2022-03-21T18:01:49.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. <strong>Note:</strong> This vulnerability derives from an incomplete fix in <a href="https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878">SNYK-JS-NOTEVIL-608878</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23771">https://nvd.nist.gov/vuln/detail/CVE-2021-23771</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-ARGENCODERSNOTEVIL-2388587">https://snyk.io/vuln/SNYK-JS-ARGENCODERSNOTEVIL-2388587</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NOTEVIL-2385946">https://snyk.io/vuln/SNYK-JS-NOTEVIL-2385946</a></li>
<li><a href="https://github.com/advisories/GHSA-8g4m-cjm2-96wq">https://github.com/advisories/GHSA-8g4m-cjm2-96wq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g4m-cjm2-96wq</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sails] Prototype Pollution in sails]]></title>
        <id>https://github.com/advisories/GHSA-8v3j-jfg3-v3fv</id>
        <link href="https://github.com/advisories/GHSA-8v3j-jfg3-v3fv"/>
        <updated>2022-03-21T17:48:28.000Z</updated>
        <content type="html"><![CDATA[<p>SailsJS Sails.js &lt;=1.4.0 is vulnerable to Prototype Pollution via controller/load-action-modules.js, function loadActionModules().</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-44908">https://nvd.nist.gov/vuln/detail/CVE-2021-44908</a></li>
<li><a href="https://github.com/balderdashy/sails/issues/7209">https://github.com/balderdashy/sails/issues/7209</a></li>
<li><a href="https://github.com/balderdashy/sails/blob/master/lib/app/private/controller/load-action-modules.js#L32">https://github.com/balderdashy/sails/blob/master/lib/app/private/controller/load-action-modules.js#L32</a></li>
<li><a href="https://github.com/balderdashy/sails/commit/7c5379a656bb305c958df1dcc2b51a9668830358">https://github.com/balderdashy/sails/commit/7c5379a656bb305c958df1dcc2b51a9668830358</a></li>
<li><a href="https://github.com/advisories/GHSA-8v3j-jfg3-v3fv">https://github.com/advisories/GHSA-8v3j-jfg3-v3fv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v3j-jfg3-v3fv</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libnested] Prototype Pollution in libnested]]></title>
        <id>https://github.com/advisories/GHSA-x5m8-2r8v-8f97</id>
        <link href="https://github.com/advisories/GHSA-x5m8-2r8v-8f97"/>
        <updated>2022-03-21T19:29:27.000Z</updated>
        <content type="html"><![CDATA[<p>The package libnested before 1.5.2 are vulnerable to Prototype Pollution via the set function in index.js. <strong>Note:</strong> This vulnerability derives from an incomplete fix for <a href="https://security.snyk.io/vuln/SNYK-JS-LIBNESTED-1054930">CVE-2020-28283</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25352">https://nvd.nist.gov/vuln/detail/CVE-2022-25352</a></li>
<li><a href="https://github.com/dominictarr/libnested/commit/c1129865d75fbe52b5a4f755ad3110ca5420f2e1">https://github.com/dominictarr/libnested/commit/c1129865d75fbe52b5a4f755ad3110ca5420f2e1</a></li>
<li><a href="https://github.com/dominictarr/libnested/blob/master/index.js%23L22">https://github.com/dominictarr/libnested/blob/master/index.js%23L22</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LIBNESTED-2342117">https://snyk.io/vuln/SNYK-JS-LIBNESTED-2342117</a></li>
<li><a href="https://github.com/advisories/GHSA-x5m8-2r8v-8f97">https://github.com/advisories/GHSA-x5m8-2r8v-8f97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5m8-2r8v-8f97</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[set-in] Prototype Pollution in set-in]]></title>
        <id>https://github.com/advisories/GHSA-6956-83fg-5wc5</id>
        <link href="https://github.com/advisories/GHSA-6956-83fg-5wc5"/>
        <updated>2022-03-21T20:02:11.000Z</updated>
        <content type="html"><![CDATA[<p>The package set-in before 2.0.3 are vulnerable to Prototype Pollution via the setIn method, as it allows an attacker to merge object prototypes into it. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href="https://security.snyk.io/vuln/SNYK-JS-SETIN-1048049">CVE-2020-28273</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25354">https://nvd.nist.gov/vuln/detail/CVE-2022-25354</a></li>
<li><a href="https://github.com/ahdinosaur/set-in/commit/6bad255961d379e4b1f5fbc52ef9dc8420816f24">https://github.com/ahdinosaur/set-in/commit/6bad255961d379e4b1f5fbc52ef9dc8420816f24</a></li>
<li><a href="https://github.com/ahdinosaur/set-in/blob/dfc226d95cce8129de6708661e06e0c2c06f3490/index.js%23L5">https://github.com/ahdinosaur/set-in/blob/dfc226d95cce8129de6708661e06e0c2c06f3490/index.js%23L5</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SETIN-2388571">https://snyk.io/vuln/SNYK-JS-SETIN-2388571</a></li>
<li><a href="https://github.com/advisories/GHSA-6956-83fg-5wc5">https://github.com/advisories/GHSA-6956-83fg-5wc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6956-83fg-5wc5</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[accesslog] Code injection in accesslog]]></title>
        <id>https://github.com/advisories/GHSA-8m2f-74r2-x3f2</id>
        <link href="https://github.com/advisories/GHSA-8m2f-74r2-x3f2"/>
        <updated>2022-03-21T19:14:34.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package accesslog are vulnerable to Arbitrary Code Injection due to the usage of the Function constructor without input sanitization. If (attacker-controlled) user input is given to the format option of the package's exported constructor function, it is possible for an attacker to execute arbitrary JavaScript code on the host that this package is being run on.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25760">https://nvd.nist.gov/vuln/detail/CVE-2022-25760</a></li>
<li><a href="https://github.com/carlos8f/node-accesslog/blob/master/lib/compile.js%23L6">https://github.com/carlos8f/node-accesslog/blob/master/lib/compile.js%23L6</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-ACCESSLOG-2312099">https://snyk.io/vuln/SNYK-JS-ACCESSLOG-2312099</a></li>
<li><a href="https://github.com/advisories/GHSA-8m2f-74r2-x3f2">https://github.com/advisories/GHSA-8m2f-74r2-x3f2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8m2f-74r2-x3f2</uri>
        </author>
        <published>2022-03-18T00:01:10.000Z</published>
    </entry>
</feed>