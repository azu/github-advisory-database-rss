<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-03-20T00:18:21.042Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[nanoid] Exposure of Sensitive Information to an Unauthorized Actor in nanoid]]></title>
        <id>https://github.com/advisories/GHSA-qrpm-p2h7-hrv2</id>
        <link href="https://github.com/advisories/GHSA-qrpm-p2h7-hrv2"/>
        <updated>2022-03-18T13:15:56.000Z</updated>
        <content type="html"><![CDATA[<p>The package nanoid from 3.0.0, before 3.1.31, are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23566">https://nvd.nist.gov/vuln/detail/CVE-2021-23566</a></li>
<li><a href="https://github.com/ai/nanoid/pull/328">https://github.com/ai/nanoid/pull/328</a></li>
<li><a href="https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575">https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575</a></li>
<li><a href="https://gist.github.com/artalar/bc6d1eb9a3477d15d2772e876169a444">https://gist.github.com/artalar/bc6d1eb9a3477d15d2772e876169a444</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2332550">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2332550</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NANOID-2332193">https://snyk.io/vuln/SNYK-JS-NANOID-2332193</a></li>
<li><a href="https://github.com/advisories/GHSA-qrpm-p2h7-hrv2">https://github.com/advisories/GHSA-qrpm-p2h7-hrv2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrpm-p2h7-hrv2</uri>
        </author>
        <published>2022-01-21T23:57:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-ipc] node-ipc behavior change]]></title>
        <id>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</id>
        <link href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37"/>
        <updated>2022-03-16T23:55:33.000Z</updated>
        <content type="html"><![CDATA[<p>node-ipc version 11.0.0 and newer include a message from the maintainer that is written to the userâ€™s desktop. Please review the version changes before proceeding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0">https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37">https://github.com/advisories/GHSA-3mpp-xfvh-qh37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</uri>
        </author>
        <published>2022-03-16T23:54:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-ipc] Hidden functionality in node-ipc]]></title>
        <id>https://github.com/advisories/GHSA-8gr3-2gjw-jj7g</id>
        <link href="https://github.com/advisories/GHSA-8gr3-2gjw-jj7g"/>
        <updated>2022-03-16T23:55:31.000Z</updated>
        <content type="html"><![CDATA[<p>The package node-ipc version 9.2.2 is vulnerable to hidden functionality that was introduced by the maintainer. The package uses a dependency that writes a file to disk that does not pertain to the functionality of the package and is not included in versions &lt; 9.2.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RIAEvangelist/node-ipc/releases/tag/9.2.2">https://github.com/RIAEvangelist/node-ipc/releases/tag/9.2.2</a></li>
<li><a href="https://github.com/advisories/GHSA-8gr3-2gjw-jj7g">https://github.com/advisories/GHSA-8gr3-2gjw-jj7g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8gr3-2gjw-jj7g</uri>
        </author>
        <published>2022-03-16T23:54:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-ipc] Embedded Malicious Code in node-ipc]]></title>
        <id>https://github.com/advisories/GHSA-97m3-w2cp-4xx6</id>
        <link href="https://github.com/advisories/GHSA-97m3-w2cp-4xx6"/>
        <updated>2022-03-16T23:55:27.000Z</updated>
        <content type="html"><![CDATA[<p>The package node-ipc versions 10.1.1 and 10.1.2 are vulnerable to embedded malicious code that was introduced by the maintainer. The malicious code was intended to overwrite  arbitrary files dependent upon the geo-location of the user IP address.The maintainer removed the malicious code in version 10.1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23812">https://nvd.nist.gov/vuln/detail/CVE-2022-23812</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/issues/233">https://github.com/RIAEvangelist/node-ipc/issues/233</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/issues/236">https://github.com/RIAEvangelist/node-ipc/issues/236</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/commit/847047cf7f81ab08352038b2204f0e7633449580">https://github.com/RIAEvangelist/node-ipc/commit/847047cf7f81ab08352038b2204f0e7633449580</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/blob/847047cf7f81ab08352038b2204f0e7633449580/dao/ssl-geospec.js">https://github.com/RIAEvangelist/node-ipc/blob/847047cf7f81ab08352038b2204f0e7633449580/dao/ssl-geospec.js</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NODEIPC-2426370">https://snyk.io/vuln/SNYK-JS-NODEIPC-2426370</a></li>
<li><a href="https://github.com/advisories/GHSA-97m3-w2cp-4xx6">https://github.com/advisories/GHSA-97m3-w2cp-4xx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97m3-w2cp-4xx6</uri>
        </author>
        <published>2022-03-16T23:54:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] HTML processing vulnerability allowing to execute JavaScript code]]></title>
        <id>https://github.com/advisories/GHSA-4fc4-4p5g-6w89</id>
        <link href="https://github.com/advisories/GHSA-4fc4-4p5g-6w89"/>
        <updated>2022-03-18T21:10:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4.</p>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML bypassing content sanitization, which could result in executing JavaScript code. It affects all users using the CKEditor 4 at version &lt; 4.18.0.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 4.18.0.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank GHSL team member Kevin Backhouse (<a href="https://github.com/kevinbackhouse">@kevinbackhouse</a>) for recognizing and reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-4fc4-4p5g-6w89">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-4fc4-4p5g-6w89</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/d158413449692d920a778503502dcb22881bc949">https://github.com/ckeditor/ckeditor4/commit/d158413449692d920a778503502dcb22881bc949</a></li>
<li><a href="https://ckeditor.com/cke4/release/CKEditor-4.18.0">https://ckeditor.com/cke4/release/CKEditor-4.18.0</a></li>
<li><a href="https://www.drupal.org/sa-core-2022-005">https://www.drupal.org/sa-core-2022-005</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24728">https://nvd.nist.gov/vuln/detail/CVE-2022-24728</a></li>
<li><a href="https://github.com/advisories/GHSA-4fc4-4p5g-6w89">https://github.com/advisories/GHSA-4fc4-4p5g-6w89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4fc4-4p5g-6w89</uri>
        </author>
        <published>2022-03-16T22:47:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[localeval] Sandbox Breakout / Arbitrary Code Execution in localeval]]></title>
        <id>https://github.com/advisories/GHSA-mmqv-m45h-q2hp</id>
        <link href="https://github.com/advisories/GHSA-mmqv-m45h-q2hp"/>
        <updated>2022-03-14T23:59:01.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of <code>localeval</code> are vulnerable to Sandbox Escape leading to Remote Code Execution. The package fails to restrict access to the main context through <code>constructor.constructor</code>. This may allow attackers to execute arbitrary code in the system.  Evaluating the payload </p>
<pre><code>constructor.constructor("return process.env")()
</code></pre>
<p>returns the contents of <code>process.env</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>No fix is currently available. Consider using an alternative package until a fix is made available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/espadrine/localeval/issues/9">https://github.com/espadrine/localeval/issues/9</a></li>
<li><a href="https://github.com/espadrine/localeval/commit/823f112c793b8fae051eeddad61d4ed29804a56c">https://github.com/espadrine/localeval/commit/823f112c793b8fae051eeddad61d4ed29804a56c</a></li>
<li><a href="https://github.com/espadrine/localeval/commit/ce985eba77a5f89a7f718727cbaa7fb14da40335">https://github.com/espadrine/localeval/commit/ce985eba77a5f89a7f718727cbaa7fb14da40335</a></li>
<li><a href="https://github.com/advisories/GHSA-mmqv-m45h-q2hp">https://github.com/advisories/GHSA-mmqv-m45h-q2hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmqv-m45h-q2hp</uri>
        </author>
        <published>2020-09-04T15:22:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[swagger-ui-dist] Spoofing attack in swagger-ui-dist]]></title>
        <id>https://github.com/advisories/GHSA-6c9x-mj3g-h47x</id>
        <link href="https://github.com/advisories/GHSA-6c9x-mj3g-h47x"/>
        <updated>2022-03-17T22:35:49.000Z</updated>
        <content type="html"><![CDATA[<p>The swagger-ui-dist package before 4.1.3 for Node.js could allow a remote attacker to hijack the clicking action of the victim. By persuading a victim to visit a malicious Web site, a remote attacker could exploit this vulnerability to hijack the victim's click actions and possibly launch further attacks against the victim.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-46708">https://nvd.nist.gov/vuln/detail/CVE-2021-46708</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SWAGGERUIDIST-2314884">https://security.snyk.io/vuln/SNYK-JS-SWAGGERUIDIST-2314884</a></li>
<li><a href="https://www.npmjs.com/package/swagger-ui-dist/v/4.1.3">https://www.npmjs.com/package/swagger-ui-dist/v/4.1.3</a></li>
<li><a href="https://github.com/advisories/GHSA-6c9x-mj3g-h47x">https://github.com/advisories/GHSA-6c9x-mj3g-h47x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6c9x-mj3g-h47x</uri>
        </author>
        <published>2022-03-12T00:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[swagger-ui] Spoofing attack in swagger-ui]]></title>
        <id>https://github.com/advisories/GHSA-cr3q-pqgq-m8c2</id>
        <link href="https://github.com/advisories/GHSA-cr3q-pqgq-m8c2"/>
        <updated>2022-03-17T22:10:14.000Z</updated>
        <content type="html"><![CDATA[<p>Swagger UI before 4.1.3 could allow a remote attacker to conduct spoofing attacks. By persuading a victim to open a crafted URL, an attacker could exploit this vulnerability to display remote OpenAPI definitions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25031">https://nvd.nist.gov/vuln/detail/CVE-2018-25031</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/issues/4872">https://github.com/swagger-api/swagger-ui/issues/4872</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/releases/tag/v4.1.3">https://github.com/swagger-api/swagger-ui/releases/tag/v4.1.3</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SWAGGERUI-2314885">https://security.snyk.io/vuln/SNYK-JS-SWAGGERUI-2314885</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/pull/7697">https://github.com/swagger-api/swagger-ui/pull/7697</a></li>
<li><a href="https://github.com/advisories/GHSA-cr3q-pqgq-m8c2">https://github.com/advisories/GHSA-cr3q-pqgq-m8c2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cr3q-pqgq-m8c2</uri>
        </author>
        <published>2022-03-12T00:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simple-git] Command injection in simple-git]]></title>
        <id>https://github.com/advisories/GHSA-3f95-r44v-8mrg</id>
        <link href="https://github.com/advisories/GHSA-3f95-r44v-8mrg"/>
        <updated>2022-03-17T21:46:45.000Z</updated>
        <content type="html"><![CDATA[<p>The package simple-git before 3.3.0 is vulnerable to Command Injection via argument injection. When calling the .fetch(remote, branch, handlerFn) function, both the remote and branch parameters are passed to the git fetch subcommand. By injecting some git options, it was possible to get arbitrary command execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24433">https://nvd.nist.gov/vuln/detail/CVE-2022-24433</a></li>
<li><a href="https://github.com/steveukx/git-js/pull/767">https://github.com/steveukx/git-js/pull/767</a></li>
<li><a href="https://github.com/steveukx/git-js/releases/tag/simple-git%403.3.0">https://github.com/steveukx/git-js/releases/tag/simple-git%403.3.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SIMPLEGIT-2421199">https://snyk.io/vuln/SNYK-JS-SIMPLEGIT-2421199</a></li>
<li><a href="https://github.com/advisories/GHSA-3f95-r44v-8mrg">https://github.com/advisories/GHSA-3f95-r44v-8mrg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f95-r44v-8mrg</uri>
        </author>
        <published>2022-03-12T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[url-js] Improper Input Validation in url-js]]></title>
        <id>https://github.com/advisories/GHSA-rf54-44jr-q5vf</id>
        <link href="https://github.com/advisories/GHSA-rf54-44jr-q5vf"/>
        <updated>2022-03-17T21:47:39.000Z</updated>
        <content type="html"><![CDATA[<p>The package url-js before 2.1.0 is vulnerable to Improper Input Validation due to improper parsing, which makes it is possible for the hostname to be spoofed. http://\\\\localhost and <a href="http://localhost">http://localhost</a> are the same URL. However, the hostname is not parsed as localhost, and the backslash is reflected as it is.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25839">https://nvd.nist.gov/vuln/detail/CVE-2022-25839</a></li>
<li><a href="https://github.com/duzun/URL.js/commit/9dc9fcc99baa4cbda24403d81a589e9b0f4121d0">https://github.com/duzun/URL.js/commit/9dc9fcc99baa4cbda24403d81a589e9b0f4121d0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-URLJS-2414030">https://snyk.io/vuln/SNYK-JS-URLJS-2414030</a></li>
<li><a href="https://github.com/advisories/GHSA-rf54-44jr-q5vf">https://github.com/advisories/GHSA-rf54-44jr-q5vf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf54-44jr-q5vf</uri>
        </author>
        <published>2022-03-12T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] Inconsistent storage layout for ERC2771ContextUpgradeable]]></title>
        <id>https://github.com/advisories/GHSA-7j52-6fjp-58gr</id>
        <link href="https://github.com/advisories/GHSA-7j52-6fjp-58gr"/>
        <updated>2022-03-18T13:36:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The storage layout of the ERC2771ContextUpgradeable is not constant between versions. </p>
<ul>
<li>versions <code>4.0.0</code>, <code>4.1.0</code> and <code>4.2.0</code>, the contract has a length of 51 slots. </li>
<li>since <code>4.3.0</code>, the contract has a length of 50 slots</li>
<li>future versions will continue using 50 slots.</li>
</ul>
<p>This difference in layout could result in breaking upgrades if someone upgrades from an affected version to a non-affected version. It is thus recommended to be extremely careful when upgrading from a contract that uses ERC2771ContextUpgradeable <code>&lt;4.3.0</code> to a newer version that uses <code>&gt;=4.3.0</code>.</p>
<p>We've assessed the instances of this contract found on chain (with publicly verified source code) and notified the corresponding teams of the risk that an upgrade could cause.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Potentially breaking upgrades would be caught by the OpenZeppelin Upgrades Plugins for Hardhat and Truffle. It is recommended to use this tooling for all your upgrades.</p>
<p>If you need to upgrade to a newer version of the Upgradeable Contracts library, we recommend copying the previous implementation ERC2771ContextUpgradeable (available in the <code>release-4.2</code> branch) and packaging it with your code.</p>
<h3 id="reference">Reference</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-transpiler/pull/86">https://github.com/OpenZeppelin/openzeppelin-transpiler/pull/86</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions, comments, or need assistance regarding this advisory, email us at <a href="mailto:security@openzeppelin.com">security@openzeppelin.com</a>.</p>
<p>To submit security reports please use <a href="https://immunefi.com/bounty/openzeppelin/">our bug bounty on Immunefi</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/security/advisories/GHSA-7j52-6fjp-58gr">https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/security/advisories/GHSA-7j52-6fjp-58gr</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-transpiler/pull/86">https://github.com/OpenZeppelin/openzeppelin-transpiler/pull/86</a></li>
<li><a href="https://github.com/advisories/GHSA-7j52-6fjp-58gr">https://github.com/advisories/GHSA-7j52-6fjp-58gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7j52-6fjp-58gr</uri>
        </author>
        <published>2022-03-14T23:22:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sysend] Leaking of user information on Cross-Domain communication in sysend]]></title>
        <id>https://github.com/advisories/GHSA-4vvg-x86p-mvqc</id>
        <link href="https://github.com/advisories/GHSA-4vvg-x86p-mvqc"/>
        <updated>2022-03-18T13:31:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users that use Cross-Origin communication and send sensitive information make it possible for this data to be intercepted.
This is not a big impact because it happens only on the same browser.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in version 1.10.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>The only workaround is to not send sensitive information with sysend messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jcubic/sysend.js/security/advisories/GHSA-4vvg-x86p-mvqc">https://github.com/jcubic/sysend.js/security/advisories/GHSA-4vvg-x86p-mvqc</a></li>
<li><a href="https://github.com/jcubic/sysend.js/issues/33">https://github.com/jcubic/sysend.js/issues/33</a></li>
<li><a href="https://github.com/jcubic/sysend.js/commit/a24f4b776fb18191ae0f7e3d90c2c7bec459431a">https://github.com/jcubic/sysend.js/commit/a24f4b776fb18191ae0f7e3d90c2c7bec459431a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24762">https://nvd.nist.gov/vuln/detail/CVE-2022-24762</a></li>
<li><a href="https://github.com/jcubic/sysend.js/releases/tag/1.10.0">https://github.com/jcubic/sysend.js/releases/tag/1.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4vvg-x86p-mvqc">https://github.com/advisories/GHSA-4vvg-x86p-mvqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vvg-x86p-mvqc</uri>
        </author>
        <published>2022-03-14T22:43:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@plone/volto] Sudden swap of user auth tokens]]></title>
        <id>https://github.com/advisories/GHSA-cfhh-xgwq-5r67</id>
        <link href="https://github.com/advisories/GHSA-cfhh-xgwq-5r67"/>
        <updated>2022-03-18T13:13:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to the usage of an outdated version of the react-cookie library, under the circumstances of given a server high load, it is possible that a user could get his/her auth cookie replaced with the auth cookie from another user, effectively giving him full access to the other users account and privileges. A proven exploit for this vulnerability does not exist, since the exact requisites for it to happen have not been fully clarified, and the attempts to reproduce it under testing conditions have been unsuccessful, but it still can happen randomly and unintentionally in the wild. </p>
<h3 id="patches">Patches</h3>
<p>The patch and fix is present in Volto 15.0.0-alpha.0 (or later). See PR: <a href="https://github.com/plone/volto/pull/3051">https://github.com/plone/volto/pull/3051</a>.
We recommend upgrading to the final release of Volto 15 as soon as possible if running an affected version.
See the upgrade guide <a href="https://6-dev-docs.plone.org/volto/upgrade-guide/index.html#upgrading-to-volto-15-x-x">https://6-dev-docs.plone.org/volto/upgrade-guide/index.html#upgrading-to-volto-15-x-x</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>It is possible to create a fix by manually upgrading the react-cookie package to 4.1.1 and then overriding all Volto components that use this library as in <a href="https://github.com/plone/volto/pull/3051">https://github.com/plone/volto/pull/3051</a>. As this is substantial work, an update to the Volto 15 is recommended. The upgrade steps for going from Volto 14 to Volto 15 are quite easy and do not involve any complexity. Please take a look at the upgrade guide: <a href="https://6-dev-docs.plone.org/volto/upgrade-guide/index.html#upgrading-to-volto-15-x-x">https://6-dev-docs.plone.org/volto/upgrade-guide/index.html#upgrading-to-volto-15-x-x</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/plone/volto/issues">volto</a></li>
<li>Email us at <a href="mailto:security@plone.org">security@plone.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/plone/volto/security/advisories/GHSA-cfhh-xgwq-5r67">https://github.com/plone/volto/security/advisories/GHSA-cfhh-xgwq-5r67</a></li>
<li><a href="https://github.com/plone/volto/pull/3051">https://github.com/plone/volto/pull/3051</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24740">https://nvd.nist.gov/vuln/detail/CVE-2022-24740</a></li>
<li><a href="https://github.com/advisories/GHSA-cfhh-xgwq-5r67">https://github.com/advisories/GHSA-cfhh-xgwq-5r67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cfhh-xgwq-5r67</uri>
        </author>
        <published>2022-03-14T22:15:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Command injection in Parse Server through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-p6h4-93qp-jhcm</id>
        <link href="https://github.com/advisories/GHSA-p6h4-93qp-jhcm"/>
        <updated>2022-03-16T21:39:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This is a Remote Code Execution (RCE) vulnerability in Parse Server. This vulnerability affects Parse Server in the default configuration with MongoDB. The main weakness that leads to RCE is the Prototype Pollution vulnerable code in the file <code>DatabaseController.js</code>, so it is likely to affect Postgres and any other database backend as well. This vulnerability has been confirmed on Linux (Ubuntu) and Windows.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Parse Server &gt;=4.10.7. If you are using a prerelease version of Parse Server 5.0 (alpha, beta) we will publish a timely fix for these. However, as a general reminder we do not consider prerelease versions to be suitable for production deployment.</p>
<p>Note that as part of the fix a new security feature scans for sensitive keywords in request data to prevent JavaScript prototype pollution. If such a keyword is found, the request is rejected with HTTP response code <code>400</code> and Parse Error <code>105</code> (<code>INVALID_KEY_NAME</code>). By default these keywords are: <code>{_bsontype: "Code"}</code>, <code>constructor</code>, <code>__proto__</code>. If you are using any of these keywords in your request data, you can override the default keywords by setting the new Parse Server option <code>requestKeywordDenylist</code> to <code>[]</code> and specify your own keywords as needed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Although the fix is more broad and includes several aspects of the vulnerability, a quick and targeted fix can be achieved by patching the MongoDB Node.js driver and disable BSON code execution. To apply the patch, add the following code to be executed before starting Parse Server, for example in <code>index.js</code>.</p>
<pre><code>const BSON = require('bson');
 const internalDeserialize = BSON.prototype.deserialize;
 BSON.prototype.deserialize = (buffer, options = Object.create(null), ...others) =&gt; {
   if (options.constructor) {
     options = Object.assign(Object.create(null), options);
   }
   return internalDeserialize(buffer, options, ...others);
 };
 const internalDeserializeStream = BSON.prototype.deserializeStream;
 BSON.prototype.deserializeStream = (
   data,
   startIndex,
   numberOfDocuments,
   documents,
   docStartIndex,
   options = Object.create(null),
   ...others
 ) =&gt; {
   if (options.constructor) {
     options = Object.assign(Object.create(null), options);
   }
   return internalDeserializeStream(
     data,
     startIndex,
     numberOfDocuments,
     documents,
     docStartIndex,
     options,
     ...others
   );
 };
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-p6h4-93qp-jhcm">https://github.com/parse-community/parse-server/security/advisories/GHSA-p6h4-93qp-jhcm</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/886bfd7cac69496e3f73d4bb536f0eec3cba0e4d">https://github.com/parse-community/parse-server/commit/886bfd7cac69496e3f73d4bb536f0eec3cba0e4d</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24760">https://nvd.nist.gov/vuln/detail/CVE-2022-24760</a></li>
<li><a href="https://github.com/advisories/GHSA-p6h4-93qp-jhcm">https://github.com/advisories/GHSA-p6h4-93qp-jhcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6h4-93qp-jhcm</uri>
        </author>
        <published>2022-03-11T23:53:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2022-03-11T22:02:43.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://www.npmjs.com/advisories/1523">https://www.npmjs.com/advisories/1523</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200724-0006/">https://security.netapp.com/advisory/ntap-20200724-0006/</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2022-03-11T22:02:43.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://www.npmjs.com/advisories/1523">https://www.npmjs.com/advisories/1523</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200724-0006/">https://security.netapp.com/advisory/ntap-20200724-0006/</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Command Injection in lodash]]></title>
        <id>https://github.com/advisories/GHSA-35jh-r3h4-6jhm</id>
        <link href="https://github.com/advisories/GHSA-35jh-r3h4-6jhm"/>
        <updated>2022-03-11T22:01:23.000Z</updated>
        <content type="html"><![CDATA[<p><code>lodash</code> versions prior to 4.17.21 are vulnerable to Command Injection via the template function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23337">https://nvd.nist.gov/vuln/detail/CVE-2021-23337</a></li>
<li><a href="https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c">https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1040724">https://snyk.io/vuln/SNYK-JS-LODASH-1040724</a></li>
<li><a href="https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851">https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851</a></li>
<li><a href="https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851">https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-35jh-r3h4-6jhm">https://github.com/advisories/GHSA-35jh-r3h4-6jhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35jh-r3h4-6jhm</uri>
        </author>
        <published>2021-05-06T16:05:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</id>
        <link href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9"/>
        <updated>2022-03-11T22:00:44.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = "1" for (var i = 0; i &lt; n; i++) { ret += " " } return ret + "1"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log("time_cost0: " + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log("time_cost1: " + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log("time_cost2: " + time_cost2)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28500">https://nvd.nist.gov/vuln/detail/CVE-2020-28500</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065">https://github.com/lodash/lodash/pull/5065</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7">https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7</a></li>
<li><a href="https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8">https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1018905">https://snyk.io/vuln/SNYK-JS-LODASH-1018905</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9">https://github.com/advisories/GHSA-29mw-wpgm-hmr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</uri>
        </author>
        <published>2022-01-06T20:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@uppy/companion] Incorrect Authorization in @uppy/companion]]></title>
        <id>https://github.com/advisories/GHSA-q24h-5rq3-63j9</id>
        <link href="https://github.com/advisories/GHSA-q24h-5rq3-63j9"/>
        <updated>2022-03-11T23:24:58.000Z</updated>
        <content type="html"><![CDATA[<p>@uppy/companion prior to version 3.3.1 is vulnerable to incorrect authorization. A user with URL upload access could enumerate internal companion server networks, send local webservers files to the destination server, and finally download them If each of these files had a guessable and regular name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0528">https://nvd.nist.gov/vuln/detail/CVE-2022-0528</a></li>
<li><a href="https://github.com/transloadit/uppy/commit/267c34045a1e62c98406d8c31261c604a11e544a">https://github.com/transloadit/uppy/commit/267c34045a1e62c98406d8c31261c604a11e544a</a></li>
<li><a href="https://huntr.dev/bounties/8b060cc3-2420-468e-8293-b9216620175b">https://huntr.dev/bounties/8b060cc3-2420-468e-8293-b9216620175b</a></li>
<li><a href="https://github.com/advisories/GHSA-q24h-5rq3-63j9">https://github.com/advisories/GHSA-q24h-5rq3-63j9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q24h-5rq3-63j9</uri>
        </author>
        <published>2022-03-04T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-amd] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-x5rq-j2xg-h7qm</id>
        <link href="https://github.com/advisories/GHSA-x5rq-j2xg-h7qm"/>
        <updated>2022-03-09T22:55:18.000Z</updated>
        <content type="html"><![CDATA[<p>lodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1010266">https://nvd.nist.gov/vuln/detail/CVE-2019-1010266</a></li>
<li><a href="https://github.com/lodash/lodash/issues/3359">https://github.com/lodash/lodash/issues/3359</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-73639">https://snyk.io/vuln/SNYK-JS-LODASH-73639</a></li>
<li><a href="https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347">https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347</a></li>
<li><a href="https://github.com/lodash/lodash/wiki/Changelog">https://github.com/lodash/lodash/wiki/Changelog</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20190919-0004/">https://security.netapp.com/advisory/ntap-20190919-0004/</a></li>
<li><a href="https://github.com/advisories/GHSA-x5rq-j2xg-h7qm">https://github.com/advisories/GHSA-x5rq-j2xg-h7qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5rq-j2xg-h7qm</uri>
        </author>
        <published>2019-07-19T16:13:07.000Z</published>
    </entry>
</feed>