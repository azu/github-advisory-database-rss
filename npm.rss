<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-06-06T00:19:07.556Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[docker-tester] Command injection in docker-tester]]></title>
        <id>https://github.com/advisories/GHSA-rj88-4777-828h</id>
        <link href="https://github.com/advisories/GHSA-rj88-4777-828h"/>
        <updated>2022-06-03T22:33:18.000Z</updated>
        <content type="html"><![CDATA[<p>OS Command injection vulnerability in Mintzo Docker-Tester through 1.2.1 allows attackers to execute arbitrary commands via shell metacharacters in the 'ports' entry of a crafted docker-compose.yml file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34079">https://nvd.nist.gov/vuln/detail/CVE-2021-34079</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4786">https://advisory.checkmarx.net/advisory/CX-2021-4786</a></li>
<li><a href="https://www.npmjs.com/package/docker-tester">https://www.npmjs.com/package/docker-tester</a></li>
<li><a href="https://github.com/advisories/GHSA-rj88-4777-828h">https://github.com/advisories/GHSA-rj88-4777-828h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rj88-4777-828h</uri>
        </author>
        <published>2022-06-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-plugin-mdx] Unsanitized JavaScript code injection possible in gatsby-plugin-mdx]]></title>
        <id>https://github.com/advisories/GHSA-mj46-r4gr-5x83</id>
        <link href="https://github.com/advisories/GHSA-mj46-r4gr-5x83"/>
        <updated>2022-06-03T22:32:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-plugin-mdx plugin prior to versions 3.15.2 and 2.14.1 passes input through to the <code>gray-matter</code> npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present when passing input in both webpack (MDX files in <code>src/pages</code> or MDX file imported as component in frontend / React code) and data mode (querying MDX nodes via GraphQL).  Injected JavaScript executes in the context of the build server.</p>
<p>To exploit this vulnerability untrusted/unsanitized input would need to be sourced or added into an MDX file.  The following MDX payload demonstrates a vulnerable configuration:</p>
<pre><code>---js
((require("child_process")).execSync("id &gt;&gt; /tmp/rce"))
--- 
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-plugin-mdx@3.15.2</code> and <code>gatsby-plugin-mdx@2.14.1</code> which mitigates the issue by disabling the <code>gray-matter</code> JavaScript Frontmatter engine.  The patch introduces a new option, <code>JSFrontmatterEngine</code> which is set to <code>false</code> by default.  When setting <code>JSFrontmatterEngine</code> to <code>true</code>, input passed to <code>gatsby-plugin-mdx</code> must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling <code>JSFrontmatterEngine</code> to <code>true</code> or if it appears that the MDX input is attempting to use the Frontmatter engine.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If an older version of <code>gatsby-plugin-mdx</code> must be used, input passed into the plugin should be sanitized ahead of processing.</p>
<p><strong>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</strong></p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Snyk [snyk.io] for initially bringing the issue to our attention, as well as Feng Xiao and Zhongfu Su, who reported the issue to Snyk.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83</a></li>
<li><a href="https://github.com/advisories/GHSA-mj46-r4gr-5x83">https://github.com/advisories/GHSA-mj46-r4gr-5x83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj46-r4gr-5x83</uri>
        </author>
        <published>2022-06-03T22:32:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-plugin-mdx] Unsanitized JavaScript code injection possible in gatsby-plugin-mdx]]></title>
        <id>https://github.com/advisories/GHSA-mj46-r4gr-5x83</id>
        <link href="https://github.com/advisories/GHSA-mj46-r4gr-5x83"/>
        <updated>2022-06-03T22:32:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-plugin-mdx plugin prior to versions 3.15.2 and 2.14.1 passes input through to the <code>gray-matter</code> npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present when passing input in both webpack (MDX files in <code>src/pages</code> or MDX file imported as component in frontend / React code) and data mode (querying MDX nodes via GraphQL).  Injected JavaScript executes in the context of the build server.</p>
<p>To exploit this vulnerability untrusted/unsanitized input would need to be sourced or added into an MDX file.  The following MDX payload demonstrates a vulnerable configuration:</p>
<pre><code>---js
((require("child_process")).execSync("id &gt;&gt; /tmp/rce"))
--- 
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-plugin-mdx@3.15.2</code> and <code>gatsby-plugin-mdx@2.14.1</code> which mitigates the issue by disabling the <code>gray-matter</code> JavaScript Frontmatter engine.  The patch introduces a new option, <code>JSFrontmatterEngine</code> which is set to <code>false</code> by default.  When setting <code>JSFrontmatterEngine</code> to <code>true</code>, input passed to <code>gatsby-plugin-mdx</code> must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling <code>JSFrontmatterEngine</code> to <code>true</code> or if it appears that the MDX input is attempting to use the Frontmatter engine.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If an older version of <code>gatsby-plugin-mdx</code> must be used, input passed into the plugin should be sanitized ahead of processing.</p>
<p><strong>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</strong></p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Snyk [snyk.io] for initially bringing the issue to our attention, as well as Feng Xiao and Zhongfu Su, who reported the issue to Snyk.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83</a></li>
<li><a href="https://github.com/advisories/GHSA-mj46-r4gr-5x83">https://github.com/advisories/GHSA-mj46-r4gr-5x83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj46-r4gr-5x83</uri>
        </author>
        <published>2022-06-03T22:32:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[devcert] Regular expression denial of service in devcert]]></title>
        <id>https://github.com/advisories/GHSA-fp36-299x-pwmw</id>
        <link href="https://github.com/advisories/GHSA-fp36-299x-pwmw"/>
        <updated>2022-06-03T22:27:36.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the devcert npm package, when an attacker is able to supply arbitrary input to the certificateFor method</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1929">https://nvd.nist.gov/vuln/detail/CVE-2022-1929</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/devcert-redos-xray-211352/">https://research.jfrog.com/vulnerabilities/devcert-redos-xray-211352/</a></li>
<li><a href="https://github.com/davewasmer/devcert/commit/b0763215f6683271d296fda98f7ef7bcd4a55977">https://github.com/davewasmer/devcert/commit/b0763215f6683271d296fda98f7ef7bcd4a55977</a></li>
<li><a href="https://github.com/advisories/GHSA-fp36-299x-pwmw">https://github.com/advisories/GHSA-fp36-299x-pwmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp36-299x-pwmw</uri>
        </author>
        <published>2022-06-03T00:01:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery-validation] Regular expression denial of service in jquery-validation]]></title>
        <id>https://github.com/advisories/GHSA-j9m2-h2pv-wvph</id>
        <link href="https://github.com/advisories/GHSA-j9m2-h2pv-wvph"/>
        <updated>2022-06-03T22:27:01.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the jquery-validation npm package, when an attacker is able to supply arbitrary input to the url2 method</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43306">https://nvd.nist.gov/vuln/detail/CVE-2021-43306</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/jquery-validation-redos-xray-211348/">https://research.jfrog.com/vulnerabilities/jquery-validation-redos-xray-211348/</a></li>
<li><a href="https://github.com/jquery-validation/jquery-validation/commit/69cb17ed774b427f7e2ffcdf197968231725c30e">https://github.com/jquery-validation/jquery-validation/commit/69cb17ed774b427f7e2ffcdf197968231725c30e</a></li>
<li><a href="https://github.com/advisories/GHSA-j9m2-h2pv-wvph">https://github.com/advisories/GHSA-j9m2-h2pv-wvph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j9m2-h2pv-wvph</uri>
        </author>
        <published>2022-06-03T00:00:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[semver-regex] Regular expression denial of service in semver-regex]]></title>
        <id>https://github.com/advisories/GHSA-4x5v-gmq8-25ch</id>
        <link href="https://github.com/advisories/GHSA-4x5v-gmq8-25ch"/>
        <updated>2022-06-03T22:26:34.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43307">https://nvd.nist.gov/vuln/detail/CVE-2021-43307</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/">https://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/</a></li>
<li><a href="https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c">https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c</a></li>
<li><a href="https://github.com/advisories/GHSA-4x5v-gmq8-25ch">https://github.com/advisories/GHSA-4x5v-gmq8-25ch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x5v-gmq8-25ch</uri>
        </author>
        <published>2022-06-03T00:01:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[semver-regex] Regular expression denial of service in semver-regex]]></title>
        <id>https://github.com/advisories/GHSA-4x5v-gmq8-25ch</id>
        <link href="https://github.com/advisories/GHSA-4x5v-gmq8-25ch"/>
        <updated>2022-06-03T22:26:34.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43307">https://nvd.nist.gov/vuln/detail/CVE-2021-43307</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/">https://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/</a></li>
<li><a href="https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c">https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c</a></li>
<li><a href="https://github.com/advisories/GHSA-4x5v-gmq8-25ch">https://github.com/advisories/GHSA-4x5v-gmq8-25ch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x5v-gmq8-25ch</uri>
        </author>
        <published>2022-06-03T00:01:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[markdown-link-extractor] Regular expression denial of service in markdown-link-extractor]]></title>
        <id>https://github.com/advisories/GHSA-mmh6-m7v9-5956</id>
        <link href="https://github.com/advisories/GHSA-mmh6-m7v9-5956"/>
        <updated>2022-06-03T22:25:17.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the markdown-link-extractor npm package, when an attacker is able to supply arbitrary input to the module's exported function</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43308">https://nvd.nist.gov/vuln/detail/CVE-2021-43308</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/">https://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/</a></li>
<li><a href="https://github.com/advisories/GHSA-mmh6-m7v9-5956">https://github.com/advisories/GHSA-mmh6-m7v9-5956</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmh6-m7v9-5956</uri>
        </author>
        <published>2022-06-03T00:01:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[markdown-link-extractor] Regular expression denial of service in markdown-link-extractor]]></title>
        <id>https://github.com/advisories/GHSA-mmh6-m7v9-5956</id>
        <link href="https://github.com/advisories/GHSA-mmh6-m7v9-5956"/>
        <updated>2022-06-03T22:25:17.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the markdown-link-extractor npm package, when an attacker is able to supply arbitrary input to the module's exported function</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43308">https://nvd.nist.gov/vuln/detail/CVE-2021-43308</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/">https://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/</a></li>
<li><a href="https://github.com/advisories/GHSA-mmh6-m7v9-5956">https://github.com/advisories/GHSA-mmh6-m7v9-5956</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmh6-m7v9-5956</uri>
        </author>
        <published>2022-06-03T00:01:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[proctree] OS Command Injection in proctree]]></title>
        <id>https://github.com/advisories/GHSA-cv76-rv4h-4mqc</id>
        <link href="https://github.com/advisories/GHSA-cv76-rv4h-4mqc"/>
        <updated>2022-06-03T22:24:15.000Z</updated>
        <content type="html"><![CDATA[<p>OS Command Injection vulnerability in allenhwkim proctree through 0.1.1 and commit 0ac10ae575459457838f14e21d5996f2fa5c7593 for Node.js, allows attackers to execute arbitrary commands via the fix function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34082">https://nvd.nist.gov/vuln/detail/CVE-2021-34082</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4783">https://advisory.checkmarx.net/advisory/CX-2021-4783</a></li>
<li><a href="https://github.com/allenhwkim/proctree/blob/master/index.js#L46">https://github.com/allenhwkim/proctree/blob/master/index.js#L46</a></li>
<li><a href="https://github.com/advisories/GHSA-cv76-rv4h-4mqc">https://github.com/advisories/GHSA-cv76-rv4h-4mqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cv76-rv4h-4mqc</uri>
        </author>
        <published>2022-06-03T00:00:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[google-it] Command injection in google-it]]></title>
        <id>https://github.com/advisories/GHSA-7xhv-mpjw-422f</id>
        <link href="https://github.com/advisories/GHSA-7xhv-mpjw-422f"/>
        <updated>2022-06-03T22:23:46.000Z</updated>
        <content type="html"><![CDATA[<p>Google-it is a Node.js package which allows its users to send search queries to Google and receive the results in a JSON format. When using the 'Open in browser' option in versions up to 1.6.2, google-it will unsafely concat the result's link retrieved from google to a shell command, potentially exposing the server to RCE.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34083">https://nvd.nist.gov/vuln/detail/CVE-2021-34083</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4777">https://advisory.checkmarx.net/advisory/CX-2021-4777</a></li>
<li><a href="https://github.com/PatNeedham/google-it/blob/v1.6.2/lib/googleIt.js#L59">https://github.com/PatNeedham/google-it/blob/v1.6.2/lib/googleIt.js#L59</a></li>
<li><a href="https://github.com/PatNeedham/google-it/blob/v1.6.2/src/googleIt.js#L34">https://github.com/PatNeedham/google-it/blob/v1.6.2/src/googleIt.js#L34</a></li>
<li><a href="https://github.com/advisories/GHSA-7xhv-mpjw-422f">https://github.com/advisories/GHSA-7xhv-mpjw-422f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xhv-mpjw-422f</uri>
        </author>
        <published>2022-06-03T00:00:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[s3-uploader] OS Command Injection in s3-uploader]]></title>
        <id>https://github.com/advisories/GHSA-gwp3-f7mr-qpfv</id>
        <link href="https://github.com/advisories/GHSA-gwp3-f7mr-qpfv"/>
        <updated>2022-06-03T22:21:32.000Z</updated>
        <content type="html"><![CDATA[<p>OS command injection vulnerability in Turistforeningen node-s3-uploader through 2.0.3 for Node.js allows attackers to execute arbitrary commands via the metadata() function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34084">https://nvd.nist.gov/vuln/detail/CVE-2021-34084</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4776">https://advisory.checkmarx.net/advisory/CX-2021-4776</a></li>
<li><a href="https://github.com/advisories/GHSA-gwp3-f7mr-qpfv">https://github.com/advisories/GHSA-gwp3-f7mr-qpfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwp3-f7mr-qpfv</uri>
        </author>
        <published>2022-06-03T00:00:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[formio] Server-Side Template Injection in formio]]></title>
        <id>https://github.com/advisories/GHSA-52vj-mr2j-f8jh</id>
        <link href="https://github.com/advisories/GHSA-52vj-mr2j-f8jh"/>
        <updated>2022-06-03T22:20:22.000Z</updated>
        <content type="html"><![CDATA[<p>A Server-Side Template Injection (SSTI) was discovered in Form.io 2.0.0. This leads to Remote Code Execution during deletion of the default Email template URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28246">https://nvd.nist.gov/vuln/detail/CVE-2020-28246</a></li>
<li><a href="https://github.com/formio/enterprise-release/blob/master/API-Server-Change-Log.md">https://github.com/formio/enterprise-release/blob/master/API-Server-Change-Log.md</a></li>
<li><a href="https://github.com/advisories/GHSA-52vj-mr2j-f8jh">https://github.com/advisories/GHSA-52vj-mr2j-f8jh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52vj-mr2j-f8jh</uri>
        </author>
        <published>2022-06-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lifion-verify-deps] OS Command Injection in lifion-verify-deps]]></title>
        <id>https://github.com/advisories/GHSA-rphm-c8gw-3r38</id>
        <link href="https://github.com/advisories/GHSA-rphm-c8gw-3r38"/>
        <updated>2022-06-03T22:19:57.000Z</updated>
        <content type="html"><![CDATA[<p>lifion-verify-dependencies through 1.1.0 is vulnerable to OS command injection via a crafted dependency name on the scanned project's package.json file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34078">https://nvd.nist.gov/vuln/detail/CVE-2021-34078</a></li>
<li><a href="https://github.com/lifion/lifion-verify-deps/commit/be1133d5b78e3caa0004fa60207013dca4e1bf38">https://github.com/lifion/lifion-verify-deps/commit/be1133d5b78e3caa0004fa60207013dca4e1bf38</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4785">https://advisory.checkmarx.net/advisory/CX-2021-4785</a></li>
<li><a href="https://github.com/advisories/GHSA-rphm-c8gw-3r38">https://github.com/advisories/GHSA-rphm-c8gw-3r38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rphm-c8gw-3r38</uri>
        </author>
        <published>2022-06-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ssl-utils] OS Command injection in ssl-utils]]></title>
        <id>https://github.com/advisories/GHSA-552j-pv39-f3jf</id>
        <link href="https://github.com/advisories/GHSA-552j-pv39-f3jf"/>
        <updated>2022-06-03T22:13:44.000Z</updated>
        <content type="html"><![CDATA[<p>OS Command Injection vulnerability in es128 ssl-utils 1.0.0 for Node.js allows attackers to execute arbitrary commands via unsanitized shell metacharacters provided to the createCertRequest() and the createCert() functions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34080">https://nvd.nist.gov/vuln/detail/CVE-2021-34080</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4782">https://advisory.checkmarx.net/advisory/CX-2021-4782</a></li>
<li><a href="https://github.com/advisories/GHSA-552j-pv39-f3jf">https://github.com/advisories/GHSA-552j-pv39-f3jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-552j-pv39-f3jf</uri>
        </author>
        <published>2022-06-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gitsome] OS Command Injection in gitsome]]></title>
        <id>https://github.com/advisories/GHSA-9v73-x562-wv5x</id>
        <link href="https://github.com/advisories/GHSA-9v73-x562-wv5x"/>
        <updated>2022-06-03T22:09:26.000Z</updated>
        <content type="html"><![CDATA[<p>OS Command Injection vulnerability in bbultman gitsome through 0.2.3 allows attackers to execute arbitrary commands via a crafted tag name of the target git repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34081">https://nvd.nist.gov/vuln/detail/CVE-2021-34081</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4780">https://advisory.checkmarx.net/advisory/CX-2021-4780</a></li>
<li><a href="https://www.npmjs.com/package/gitsome">https://www.npmjs.com/package/gitsome</a></li>
<li><a href="https://github.com/advisories/GHSA-9v73-x562-wv5x">https://github.com/advisories/GHSA-9v73-x562-wv5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v73-x562-wv5x</uri>
        </author>
        <published>2022-06-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@shopify/hydrogen] Potential Cross-site Scripting vulnerability in Hydrogen]]></title>
        <id>https://github.com/advisories/GHSA-6j22-wv8g-894f</id>
        <link href="https://github.com/advisories/GHSA-6j22-wv8g-894f"/>
        <updated>2022-06-02T22:17:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. </p>
<h3 id="patches">Patches</h3>
<p>All Hydrogen users should upgrade their project to v0.19.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no current workaround, and users should update as soon as possible.</p>
<p>Additionally, the Content Security Policy is not an effective mitigation for this vulnerability. </p>
<h3 id="references">References</h3>
<p>GitHub: <a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">Hydrogen v0.19.0</a>
Fix PR: <a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Shopify/hydrogen/issues/new/choose">Shopify/hydrogen</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f">https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29230">https://nvd.nist.gov/vuln/detail/CVE-2022-29230</a></li>
<li><a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></li>
<li><a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6j22-wv8g-894f">https://github.com/advisories/GHSA-6j22-wv8g-894f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j22-wv8g-894f</uri>
        </author>
        <published>2022-05-19T20:29:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[protobufjs] Prototype Pollution in protobufjs]]></title>
        <id>https://github.com/advisories/GHSA-g954-5hwp-pp24</id>
        <link href="https://github.com/advisories/GHSA-g954-5hwp-pp24"/>
        <updated>2022-06-02T20:36:06.000Z</updated>
        <content type="html"><![CDATA[<p>The package protobufjs before 6.11.3 are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype.</p>
<p>This vulnerability can occur in multiple ways:</p>
<ol>
<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>
<li>by parsing/loading .proto files</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25878">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1731">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>
<li><a href="https://github.com/advisories/GHSA-g954-5hwp-pp24">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g954-5hwp-pp24</uri>
        </author>
        <published>2022-05-28T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2022-06-02T18:58:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2022-06-02T18:58:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
</feed>