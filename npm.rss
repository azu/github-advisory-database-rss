<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-10-01T06:13:21.157Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[isolated-vm] isolated-vm has vulnerable CachedDataOptions in API]]></title>
        <id>https://github.com/advisories/GHSA-2jjq-x548-rhpv</id>
        <link href="https://github.com/advisories/GHSA-2jjq-x548-rhpv"/>
        <updated>2022-09-30T22:59:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the untrusted v8 cached data is passed to the API through CachedDataOptions, the attackers can bypass the sandbox and run arbitrary code in the nodejs process. There are currently no known fixed versions or workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv">https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39266">https://nvd.nist.gov/vuln/detail/CVE-2022-39266</a></li>
<li><a href="https://github.com/advisories/GHSA-2jjq-x548-rhpv">https://github.com/advisories/GHSA-2jjq-x548-rhpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2jjq-x548-rhpv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-30T22:59:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk subject to user impersonation due to key/device identifier confusion in SAS verification]]></title>
        <id>https://github.com/advisories/GHSA-5w8r-8pgj-5jmf</id>
        <link href="https://github.com/advisories/GHSA-5w8r-8pgj-5jmf"/>
        <updated>2022-09-30T22:46:51.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>An attacker cooperating with a malicious homeserver could interfere with the verification flow between two users, injecting its own cross-signing user identity in place of one of the users’ identities, leading to the other device trusting/verifying the user identity under the control of the homeserver instead of the intended one.</p>
<p>The vulnerability is a bug in the matrix-js-sdk, caused by checking and signing user identities and devices in two separate steps, and inadequately fixing the keys to be signed between those steps.</p>
<p>Even though the attack is partly made possible due to the design decision of treating cross-signing user identities as Matrix devices on the server side (with their device ID set to the public part of the user identity key), no other examined implementations were vulnerable.</p>
<h2 id="patches">Patches</h2>
<p>The matrix-js-sdk has been modified to double check that the key signed is the one that was verified instead of just referencing the key by ID. An additional check has been made to report an error when one of the device ID matches a cross-signing key.</p>
<h2 id="workarounds">Workarounds</h2>
<p>As this attack requires coordination between a malicious homeserver and an attacker -- if you trust your homeserver no particular workaround is needed. </p>
<p>As a potential way of detecting compromise, it’s possible to review your device list or the device list of other users for devices with IDs in the form of a base64 cross-signing key (<code>5XaczGNlfz0bl8R1IX5qn+tBoue2tWJqLMh+SDUuvCk</code>) instead of classical device ID (<code>SEHACYDHMG</code>).</p>
<h2 id="references">References</h2>
<p>Blog post: <a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-5w8r-8pgj-5jmf">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-5w8r-8pgj-5jmf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39250">https://nvd.nist.gov/vuln/detail/CVE-2022-39250</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>
<li><a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>
<li><a href="https://github.com/advisories/GHSA-5w8r-8pgj-5jmf">https://github.com/advisories/GHSA-5w8r-8pgj-5jmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5w8r-8pgj-5jmf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T22:46:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[opencc] Open Chinese Convert subject to Denial of Service via Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</id>
        <link href="https://github.com/advisories/GHSA-9qh2-6fxg-9m4g"/>
        <updated>2022-09-30T23:14:00.000Z</updated>
        <content type="html"><![CDATA[<p>Open Chinese Convert (OpenCC) 1.0.5 allows attackers to cause a denial of service (segmentation fault) because BinaryDict::NewFromFile in BinaryDict.cpp may have out-of-bounds keyOffset and valueOffset values via a crafted .ocd file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16982">https://nvd.nist.gov/vuln/detail/CVE-2018-16982</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/issues/303">https://github.com/BYVoid/OpenCC/issues/303</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/309">https://github.com/BYVoid/OpenCC/pull/309</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/560">https://github.com/BYVoid/OpenCC/pull/560</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4">https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4</a></li>
<li><a href="https://github.com/advisories/GHSA-9qh2-6fxg-9m4g">https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:55:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@next-auth/upstash-redis-adapter] Upstash Adapter missing token verification]]></title>
        <id>https://github.com/advisories/GHSA-4rxr-27mm-mxq9</id>
        <link href="https://github.com/advisories/GHSA-4rxr-27mm-mxq9"/>
        <updated>2022-09-30T05:31:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Applications that use <code>next-auth</code> Email Provider and <code>@next-auth/upstash-redis-adapter</code> before v3.0.2 are affected.</p>
<h3 id="description">Description</h3>
<p>The Upstash Redis adapter implementation did not check for both the identifier (email) and the token, but only checking for the identifier when verifying the token in the email callback flow. An attacker who knows about the victim's email could easily sign in as the victim, given the attacker also knows about the verification token's expired duration. </p>
<h3 id="patches">Patches</h3>
<p>The vulnerability is patched in v3.0.2.
To upgrade, run one of the following:</p>
<pre><code>npm i @next-auth/upstash-redis-adapter@latest
</code></pre>
<pre><code>yarn add @next-auth/upstash-redis-adapter@latest
</code></pre>
<pre><code>pnpm add @next-auth/upstash-redis-adapter@latest
</code></pre>
<h3 id="workarounds">Workarounds</h3>
<p>Using Advanced Initialization, developers can check the requests and compare the query's token and identifier before proceeding. Below is an example of how to do this: (Upgrading is still strongly recommended)</p>
<pre><code class="language-js">import { createHash } from "crypto"
export default async function auth(req, res) {
  if (req.method === "POST" &amp;&amp; req.action === "callback") {
    const token = req.query?.token
    const identifier = req.query?.email
    function hashToken(token: string) {
      const provider = authOptions.providers.find((p) =&gt; p.id === "email")
      const secret = authOptions.secret
      return (
        createHash("sha256")
          // Prefer provider specific secret, but use default secret if none specified
          .update(`${token}${provider.secret ?? secret}`)
          .digest("hex")
      )
    }
    const hashedToken = hashToken(token)

    const invite = await authOptions.adapter.useVerificationToken?.({
      identifier,
      token: hashedToken,
    })
    if (invite.token !== hashedToken) {
      res.status(400).json({ error: "Invalid token" })
    }
  }
  return await NextAuth(req, res, authOptions)
}
</code></pre>
<h3 id="references">References</h3>
<p>EmailProvider: <a href="https://next-auth.js.org/providers/email">https://next-auth.js.org/providers/email</a>
Advanced Initialization: <a href="https://next-auth.js.org/configuration/initialization#advanced-initialization">https://next-auth.js.org/configuration/initialization#advanced-initialization</a>
Upstash Redis Adapter: <a href="https://next-auth.js.org/adapters/upstash-redis">https://next-auth.js.org/adapters/upstash-redis</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any concerns, we request responsible disclosure, outlined here: <a href="https://next-auth.js.org/security#reporting-a-vulnerability">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-4rxr-27mm-mxq9">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-4rxr-27mm-mxq9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39263">https://nvd.nist.gov/vuln/detail/CVE-2022-39263</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/commit/d16e04848ee703cf797724194d4ad2907fe125a9">https://github.com/nextauthjs/next-auth/commit/d16e04848ee703cf797724194d4ad2907fe125a9</a></li>
<li><a href="https://github.com/advisories/GHSA-4rxr-27mm-mxq9">https://github.com/advisories/GHSA-4rxr-27mm-mxq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rxr-27mm-mxq9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-30T05:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Strapi mishandles hidden attributes within admin API responses]]></title>
        <id>https://github.com/advisories/GHSA-4phg-hpqm-c3j4</id>
        <link href="https://github.com/advisories/GHSA-4phg-hpqm-c3j4"/>
        <updated>2022-09-30T05:17:56.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi before 3.6.10 and 4.x before 4.1.10 mishandles hidden attributes within admin API responses.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31367">https://nvd.nist.gov/vuln/detail/CVE-2022-31367</a></li>
<li><a href="https://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367">https://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v3.6.10">https://github.com/strapi/strapi/releases/tag/v3.6.10</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.1.10">https://github.com/strapi/strapi/releases/tag/v4.1.10</a></li>
<li><a href="https://github.com/strapi/strapi/pull/13185">https://github.com/strapi/strapi/pull/13185</a></li>
<li><a href="https://github.com/strapi/strapi/pull/13189">https://github.com/strapi/strapi/pull/13189</a></li>
<li><a href="https://github.com/advisories/GHSA-4phg-hpqm-c3j4">https://github.com/advisories/GHSA-4phg-hpqm-c3j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4phg-hpqm-c3j4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-28T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strapi] Strapi mishandles hidden attributes within admin API responses]]></title>
        <id>https://github.com/advisories/GHSA-4phg-hpqm-c3j4</id>
        <link href="https://github.com/advisories/GHSA-4phg-hpqm-c3j4"/>
        <updated>2022-09-30T05:17:56.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi before 3.6.10 and 4.x before 4.1.10 mishandles hidden attributes within admin API responses.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31367">https://nvd.nist.gov/vuln/detail/CVE-2022-31367</a></li>
<li><a href="https://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367">https://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v3.6.10">https://github.com/strapi/strapi/releases/tag/v3.6.10</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.1.10">https://github.com/strapi/strapi/releases/tag/v4.1.10</a></li>
<li><a href="https://github.com/strapi/strapi/pull/13185">https://github.com/strapi/strapi/pull/13185</a></li>
<li><a href="https://github.com/strapi/strapi/pull/13189">https://github.com/strapi/strapi/pull/13189</a></li>
<li><a href="https://github.com/advisories/GHSA-4phg-hpqm-c3j4">https://github.com/advisories/GHSA-4phg-hpqm-c3j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4phg-hpqm-c3j4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-28T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[express-xss-sanitizer] express-xss-sanitizer vulnerable to Prototype Pollution via allowedTags attribute]]></title>
        <id>https://github.com/advisories/GHSA-grjp-4jmr-mjcw</id>
        <link href="https://github.com/advisories/GHSA-grjp-4jmr-mjcw"/>
        <updated>2022-09-30T04:42:56.000Z</updated>
        <content type="html"><![CDATA[<p>The package express-xss-sanitizer before 1.1.3 is vulnerable to Prototype Pollution via the <code>allowedTags</code> attribute, allowing the attacker to bypass xss sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21169">https://nvd.nist.gov/vuln/detail/CVE-2022-21169</a></li>
<li><a href="https://github.com/AhmedAdelFahim/express-xss-sanitizer/issues/4">https://github.com/AhmedAdelFahim/express-xss-sanitizer/issues/4</a></li>
<li><a href="https://github.com/AhmedAdelFahim/express-xss-sanitizer/commit/3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a">https://github.com/AhmedAdelFahim/express-xss-sanitizer/commit/3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a</a></li>
<li><a href="https://runkit.com/embed/w306l6zfm7tu">https://runkit.com/embed/w306l6zfm7tu</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-EXPRESSXSSSANITIZER-3027443">https://security.snyk.io/vuln/SNYK-JS-EXPRESSXSSSANITIZER-3027443</a></li>
<li><a href="https://github.com/advisories/GHSA-grjp-4jmr-mjcw">https://github.com/advisories/GHSA-grjp-4jmr-mjcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-grjp-4jmr-mjcw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-27T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk subject to user spoofing via Olm/Megolm protocol confusion]]></title>
        <id>https://github.com/advisories/GHSA-r48r-j8fx-mq2c</id>
        <link href="https://github.com/advisories/GHSA-r48r-j8fx-mq2c"/>
        <updated>2022-09-30T00:41:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker cooperating with a malicious homeserver can construct messages that legitimately appear to have come from another person, without any indication such as a grey shield.</p>
<p>Additionally, a sophisticated attacker cooperating with a malicious homeserver could employ this vulnerability to perform a targeted attack in order to send fake to-device messages appearing to originate from another user. This can allow, for example, to inject the key backup secret during a self-verification, to make a targeted device start using a malicious key backup spoofed by the homeserver.</p>
<p>These attacks are possible due to a protocol confusion vulnerability that accepts to-device messages encrypted with Megolm instead of Olm.</p>
<h3 id="patches">Patches</h3>
<p>matrix-js-sdk has been modified to only accept Olm-encrypted to-device messages.</p>
<p>Out of caution, several other checks have been audited or added:</p>
<ul>
<li>Cleartext <code>m.room_key</code>, <code>m.forwarded_room_key</code> and <code>m.secret.send</code> to_device messages are discarded.</li>
<li>Secrets received from untrusted devices are discarded.</li>
<li>Key backups are only usable if they have a valid signature from a trusted device (no more local trust, or trust-on-decrypt).</li>
<li>The origin of a to-device message should only be determined by observing the Olm session which managed to decrypt the message, and not by using claimed sender_key, user_id, or any other fields controllable by the homeserver.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>As this attack requires coordination between a malicious home server and an attacker, if you trust your home server no particular workaround is needed. Notice that the backup spoofing attack is a particularly sophisticated targeted attack.</p>
<p>We are not aware of this attack being used in the wild, though specifying a false positive-free way of noticing malicious key backups key is challenging.</p>
<p>As an abundance of caution, to avoid malicious backup attacks, you should not verify your new logins using emoji/QR verifications methods until patched. Prefer verifying with your security passphrase instead.</p>
<h3 id="references">References</h3>
<p>Blog post: <a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-r48r-j8fx-mq2c">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-r48r-j8fx-mq2c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39251">https://nvd.nist.gov/vuln/detail/CVE-2022-39251</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>
<li><a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>
<li><a href="https://github.com/advisories/GHSA-r48r-j8fx-mq2c">https://github.com/advisories/GHSA-r48r-j8fx-mq2c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r48r-j8fx-mq2c</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-30T00:41:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk subject to impersonated messages due to permissive key forwarding]]></title>
        <id>https://github.com/advisories/GHSA-6263-x97c-c4gg</id>
        <link href="https://github.com/advisories/GHSA-6263-x97c-c4gg"/>
        <updated>2022-09-30T00:40:37.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>An attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.</p>
<p>This attack is possible due to the matrix-js-sdk implementing a too permissive <a href="https://spec.matrix.org/v1.3/client-server-api/#key-requests">key forwarding</a> strategy on the receiving end.</p>
<p>Key forwarding is a mechanism allowing clients to recover from “unable to decrypt” messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.</p>
<h2 id="patches">Patches</h2>
<p>The default policy for accepting key forwards has been made more strict in the matrix-js-sdk. matrix-js-sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.</p>
<p>A unique exception to this rule is with the experimental <a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3061">MSC3061</a>, that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window.</p>
<p>The SDK now sets a <code>trusted</code> flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with <code>trusted = false</code> are decorated appropriately (for example, by showing a warning for such messages).</p>
<h3 id="workarounds">Workarounds</h3>
<p>As this attack requires coordination between a malicious homeserver and an attacker, if you trust your homeserver, no particular workaround is needed.</p>
<h2 id="references">References</h2>
<p>Blog post: <a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6263-x97c-c4gg">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6263-x97c-c4gg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39249">https://nvd.nist.gov/vuln/detail/CVE-2022-39249</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3061">https://github.com/matrix-org/matrix-spec-proposals/pull/3061</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>
<li><a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>
<li><a href="https://github.com/advisories/GHSA-6263-x97c-c4gg">https://github.com/advisories/GHSA-6263-x97c-c4gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6263-x97c-c4gg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T00:40:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] Improper beacon events in matrix-js-sdk can result in availability issues]]></title>
        <id>https://github.com/advisories/GHSA-hvv8-5v86-r45x</id>
        <link href="https://github.com/advisories/GHSA-hvv8-5v86-r45x"/>
        <updated>2022-09-29T14:36:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Improperly formed beacon events (from <a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3488">MSC3488</a>) can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in matrix-js-sdk v19.7.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>Redacting applicable events, waiting for the sync processor to store data, and restarting the client can often fix it. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues.</p>
<p>Downgrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.</p>
<h3 id="references">References</h3>
<p>N/A - This was a logic error in the SDK.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory please email us at <a href="mailto:security@matrix.org">security at matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-hvv8-5v86-r45x">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-hvv8-5v86-r45x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39236">https://nvd.nist.gov/vuln/detail/CVE-2022-39236</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3488">https://github.com/matrix-org/matrix-spec-proposals/pull/3488</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hvv8-5v86-r45x">https://github.com/advisories/GHSA-hvv8-5v86-r45x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hvv8-5v86-r45x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T14:36:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@hapi/hoek] hoek subject to prototype pollution via the clone function.]]></title>
        <id>https://github.com/advisories/GHSA-c429-5p7v-vgjp</id>
        <link href="https://github.com/advisories/GHSA-c429-5p7v-vgjp"/>
        <updated>2022-09-29T14:13:31.000Z</updated>
        <content type="html"><![CDATA[<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36604">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>
<li><a href="https://github.com/hapijs/hoek/issues/352">https://github.com/hapijs/hoek/issues/352</a></li>
<li><a href="https://github.com/advisories/GHSA-c429-5p7v-vgjp">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c429-5p7v-vgjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@hapi/hoek] hoek subject to prototype pollution via the clone function.]]></title>
        <id>https://github.com/advisories/GHSA-c429-5p7v-vgjp</id>
        <link href="https://github.com/advisories/GHSA-c429-5p7v-vgjp"/>
        <updated>2022-09-29T14:13:31.000Z</updated>
        <content type="html"><![CDATA[<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36604">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>
<li><a href="https://github.com/hapijs/hoek/issues/352">https://github.com/hapijs/hoek/issues/352</a></li>
<li><a href="https://github.com/advisories/GHSA-c429-5p7v-vgjp">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c429-5p7v-vgjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[d3-color] d3-color vulnerable to ReDoS]]></title>
        <id>https://github.com/advisories/GHSA-36jr-mh4h-2g58</id>
        <link href="https://github.com/advisories/GHSA-36jr-mh4h-2g58"/>
        <updated>2022-09-29T14:12:56.000Z</updated>
        <content type="html"><![CDATA[<p>The d3-color module provides representations for various color spaces in the browser. Versions prior to 3.1.0 are vulnerable to a Regular expression Denial of Service. This issue has been patched in version 3.1.0. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/d3/d3-color/pull/100">https://github.com/d3/d3-color/pull/100</a></li>
<li><a href="https://github.com/d3/d3-color/releases/tag/v3.1.0">https://github.com/d3/d3-color/releases/tag/v3.1.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592">https://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592</a></li>
<li><a href="https://github.com/advisories/GHSA-36jr-mh4h-2g58">https://github.com/advisories/GHSA-36jr-mh4h-2g58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36jr-mh4h-2g58</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-29T14:12:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2022-09-29T03:02:53.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 vulnerable to Sandbox Escape resulting in Remote Code Execution on host]]></title>
        <id>https://github.com/advisories/GHSA-mrgp-mrhc-5jrq</id>
        <link href="https://github.com/advisories/GHSA-mrgp-mrhc-5jrq"/>
        <updated>2022-09-28T13:09:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.11</code> of <code>vm2</code></p>
<h3 id="workarounds">Workarounds</h3>
<p>None. </p>
<h3 id="references">References</h3>
<p>Github Issue - <a href="https://github.com/patriksimek/vm2/issues/467">https://github.com/patriksimek/vm2/issues/467</a>
The file that was patched - <a href="https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71">https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71</a>
The commit with the patch - <a href="https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164">https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/patriksimek/vm2">VM2</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq">https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36067">https://nvd.nist.gov/vuln/detail/CVE-2022-36067</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/467">https://github.com/patriksimek/vm2/issues/467</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164">https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164</a></li>
<li><a href="https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71">https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71</a></li>
<li><a href="https://github.com/advisories/GHSA-mrgp-mrhc-5jrq">https://github.com/advisories/GHSA-mrgp-mrhc-5jrq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrgp-mrhc-5jrq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-28T13:09:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jodit] Jodit Editor vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-42hx-vrxx-5r6v</id>
        <link href="https://github.com/advisories/GHSA-42hx-vrxx-5r6v"/>
        <updated>2022-09-27T22:48:56.000Z</updated>
        <content type="html"><![CDATA[<p>Jodit Editor is a WYSIWYG editor written in pure TypeScript without the use of additional libraries. Jodit Editor is vulnerable to XSS attacks when pasting specially constructed input. This issue has not been fully patched. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23461">https://nvd.nist.gov/vuln/detail/CVE-2022-23461</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/">https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/</a></li>
<li><a href="https://github.com/advisories/GHSA-42hx-vrxx-5r6v">https://github.com/advisories/GHSA-42hx-vrxx-5r6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-42hx-vrxx-5r6v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@lionello/secp256k1-js] secp256k1-js implements ECDSA without required r and s validation, leading to signature forgery]]></title>
        <id>https://github.com/advisories/GHSA-q3f4-9h4p-vgr3</id>
        <link href="https://github.com/advisories/GHSA-q3f4-9h4p-vgr3"/>
        <updated>2022-09-27T22:35:00.000Z</updated>
        <content type="html"><![CDATA[<p>The secp256k1-js package before 1.1.0 for Node.js implements ECDSA without required r and s validation, leading to signature forgery.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41340">https://nvd.nist.gov/vuln/detail/CVE-2022-41340</a></li>
<li><a href="https://github.com/lionello/secp256k1-js/issues/11">https://github.com/lionello/secp256k1-js/issues/11</a></li>
<li><a href="https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e">https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e</a></li>
<li><a href="https://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0">https://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0</a></li>
<li><a href="https://www.npmjs.com/package/@lionello/secp256k1-js">https://www.npmjs.com/package/@lionello/secp256k1-js</a></li>
<li><a href="https://github.com/advisories/GHSA-q3f4-9h4p-vgr3">https://github.com/advisories/GHSA-q3f4-9h4p-vgr3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3f4-9h4p-vgr3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[degenerator] Code Injection in pac-resolver]]></title>
        <id>https://github.com/advisories/GHSA-9j49-mfvp-vmhm</id>
        <link href="https://github.com/advisories/GHSA-9j49-mfvp-vmhm"/>
        <updated>2022-09-26T13:33:14.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package pac-resolver before 5.0.0. This can occur when used with untrusted input, due to unsafe PAC file handling. <strong>NOTE:</strong> The fix for this vulnerability is applied in the node-degenerator library, a dependency written by the same maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23406">https://nvd.nist.gov/vuln/detail/CVE-2021-23406</a></li>
<li><a href="https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e">https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e</a></li>
<li><a href="https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5">https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5</a></li>
<li><a href="https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0">https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1568506">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1568506</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857">https://snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857</a></li>
<li><a href="https://github.com/advisories/GHSA-9j49-mfvp-vmhm">https://github.com/advisories/GHSA-9j49-mfvp-vmhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9j49-mfvp-vmhm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-09-02T17:10:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[defaults-deep] Prototype Pollution in defaults-deep]]></title>
        <id>https://github.com/advisories/GHSA-cqp5-m4pq-gfgp</id>
        <link href="https://github.com/advisories/GHSA-cqp5-m4pq-gfgp"/>
        <updated>2022-09-26T13:31:49.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>default-deep</code> before 0.2.4 are vulnerable to prototype pollution</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 0.2.4 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3723">https://nvd.nist.gov/vuln/detail/CVE-2018-3723</a></li>
<li><a href="https://hackerone.com/reports/310514">https://hackerone.com/reports/310514</a></li>
<li><a href="https://github.com/advisories/GHSA-cqp5-m4pq-gfgp">https://github.com/advisories/GHSA-cqp5-m4pq-gfgp</a></li>
<li><a href="https://www.npmjs.com/advisories/581">https://www.npmjs.com/advisories/581</a></li>
<li><a href="https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5">https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqp5-m4pq-gfgp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2018-07-26T15:18:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[steal] steal vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-gvjw-8mmr-8f6g</id>
        <link href="https://github.com/advisories/GHSA-gvjw-8mmr-8f6g"/>
        <updated>2022-09-23T13:44:50.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function convertLater in npm-convert.js in stealjs steal 2.2.4 via the packageName variable in npm-convert.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37258">https://nvd.nist.gov/vuln/detail/CVE-2022-37258</a></li>
<li><a href="https://github.com/stealjs/steal/issues/1527">https://github.com/stealjs/steal/issues/1527</a></li>
<li><a href="https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362</a></li>
<li><a href="https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L369">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L369</a></li>
<li><a href="https://github.com/advisories/GHSA-gvjw-8mmr-8f6g">https://github.com/advisories/GHSA-gvjw-8mmr-8f6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvjw-8mmr-8f6g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-17T00:00:30.000Z</published>
    </entry>
</feed>