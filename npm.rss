<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-04-22T17:01:14.861Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] Session fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</id>
        <link href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9"/>
        <updated>2023-04-21T22:33:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using <code>@fastify/passport</code> for user authentication, in combination with <code>@fastify/session</code> as the underlying session management mechanism, are vulnerable to <a href="https://owasp.org/www-community/attacks/Session_fixation">session fixation attacks</a> from network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p>fastify applications rely on the <code>@fastify/passport</code> library for user authentication. The login and user validation are performed by the <code>authenticate</code> function. When executing this function, the <code>sessionId</code> is preserved between the pre-login and the authenticated session. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can hijack the victim's session by tossing a valid <code>sessionId</code> cookie in the victim's browser and waiting for the victim to log in on the website.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> regenerate <code>sessionId</code> upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-21T22:33:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] Session fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</id>
        <link href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9"/>
        <updated>2023-04-21T22:33:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using <code>@fastify/passport</code> for user authentication, in combination with <code>@fastify/session</code> as the underlying session management mechanism, are vulnerable to <a href="https://owasp.org/www-community/attacks/Session_fixation">session fixation attacks</a> from network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p>fastify applications rely on the <code>@fastify/passport</code> library for user authentication. The login and user validation are performed by the <code>authenticate</code> function. When executing this function, the <code>sessionId</code> is preserved between the pre-login and the authenticated session. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can hijack the victim's session by tossing a valid <code>sessionId</code> cookie in the victim's browser and waiting for the victim to log in on the website.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> regenerate <code>sessionId</code> upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-21T22:33:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] CSRF token fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</id>
        <link href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw"/>
        <updated>2023-04-21T22:32:50.000Z</updated>
        <content type="html"><![CDATA[<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library, when combined with <code>@fastify/passport</code>, can be bypassed by network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p><code>fastify/csrf-protection</code> implements the <a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">synchronizer token pattern</a> (using plugins <code>@fastify/session</code> and <code>@fastify/secure-session</code>) by storing a random value used for CSRF token generation in the <code>_csrf</code> attribute of a user's session.</p>
<p>The <code>@fastify/passport</code> library does not clear the session object upon authentication, preserving the <code>_csrf</code> attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> include the configuration options</p>
<ul>
<li><code>clearSessionOnLogin (default: true)</code> and</li>
<li><code>clearSessionIgnoreFields (default: ['session'])</code></li>
</ul>
<p>to clear all the session attributes by default, preserving those explicitly defined in <code>clearSessionIgnoreFields</code>.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
<li><a href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-21T22:32:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] CSRF token fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</id>
        <link href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw"/>
        <updated>2023-04-21T22:32:50.000Z</updated>
        <content type="html"><![CDATA[<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library, when combined with <code>@fastify/passport</code>, can be bypassed by network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p><code>fastify/csrf-protection</code> implements the <a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">synchronizer token pattern</a> (using plugins <code>@fastify/session</code> and <code>@fastify/secure-session</code>) by storing a random value used for CSRF token generation in the <code>_csrf</code> attribute of a user's session.</p>
<p>The <code>@fastify/passport</code> library does not clear the session object upon authentication, preserving the <code>_csrf</code> attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> include the configuration options</p>
<ul>
<li><code>clearSessionOnLogin (default: true)</code> and</li>
<li><code>clearSessionIgnoreFields (default: ['session'])</code></li>
</ul>
<p>to clear all the session attributes by default, preserving those explicitly defined in <code>clearSessionIgnoreFields</code>.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
<li><a href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-21T22:32:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@nuxtlabs/github-module] @nuxtlabs/github-module made Use of Hard-coded Credentials]]></title>
        <id>https://github.com/advisories/GHSA-fp2w-g92g-fgq4</id>
        <link href="https://github.com/advisories/GHSA-fp2w-g92g-fgq4"/>
        <updated>2023-04-21T20:26:50.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://nuxt.com">https://nuxt.com</a> had a hardcoded GitHub token in the source code of the page. This token had access to multiple repositories under <code>nuxt</code>, <code>nuxtlabs</code> and <code>nuxt-themes</code> GitHub organizations. A patch in version 1.6.2 fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2138">https://nvd.nist.gov/vuln/detail/CVE-2023-2138</a></li>
<li><a href="https://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e">https://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e</a></li>
<li><a href="https://huntr.dev/bounties/65096ef9-eafc-49da-b49a-5b88c0203ca6">https://huntr.dev/bounties/65096ef9-eafc-49da-b49a-5b88c0203ca6</a></li>
<li><a href="https://github.com/nuxtlabs/github-module/releases/tag/v1.6.2">https://github.com/nuxtlabs/github-module/releases/tag/v1.6.2</a></li>
<li><a href="https://github.com/advisories/GHSA-fp2w-g92g-fgq4">https://github.com/advisories/GHSA-fp2w-g92g-fgq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp2w-g92g-fgq4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-18T03:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sequelize] SQL Injection via GeoJSON in sequelize]]></title>
        <id>https://github.com/advisories/GHSA-5v9h-q3gj-c32x</id>
        <link href="https://github.com/advisories/GHSA-5v9h-q3gj-c32x"/>
        <updated>2023-04-21T18:34:24.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>sequelize</code> are vulnerable to SQL Injection in Models that have fields with the <code>GEOMETRY</code> DataType. This vulnerability occurs because single quotes in document values are not escaped for GeoJSON documents using <code>ST_GeomFromGeoJSON</code>, and MySQL GeoJSON documents using <code>GeomFromText</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 3.23.6 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sequelize/sequelize/issues/6194">https://github.com/sequelize/sequelize/issues/6194</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1000225">https://nvd.nist.gov/vuln/detail/CVE-2016-1000225</a></li>
<li><a href="https://snyk.io/vuln/npm:sequelize:20160718">https://snyk.io/vuln/npm:sequelize:20160718</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/6302">https://github.com/sequelize/sequelize/pull/6302</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/6306">https://github.com/sequelize/sequelize/pull/6306</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/14e3deaf3ad27f12900e5275db1d448844c9de3e">https://github.com/sequelize/sequelize/commit/14e3deaf3ad27f12900e5275db1d448844c9de3e</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/18ac91040d9c57351d26ba998f460e214255b704">https://github.com/sequelize/sequelize/commit/18ac91040d9c57351d26ba998f460e214255b704</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/562d52585902090f4e53eb21c61314098c29d795">https://github.com/sequelize/sequelize/commit/562d52585902090f4e53eb21c61314098c29d795</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/f93af43a1d86400487f5e3d9762f1a4b7cf6b1e1">https://github.com/sequelize/sequelize/commit/f93af43a1d86400487f5e3d9762f1a4b7cf6b1e1</a></li>
<li><a href="https://github.com/advisories/GHSA-5v9h-q3gj-c32x">https://github.com/advisories/GHSA-5v9h-q3gj-c32x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5v9h-q3gj-c32x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-09-01T15:27:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nunjucks] Nunjucks autoescape bypass leads to cross site scripting]]></title>
        <id>https://github.com/advisories/GHSA-x77j-w7wf-fjmw</id>
        <link href="https://github.com/advisories/GHSA-x77j-w7wf-fjmw"/>
        <updated>2023-04-20T21:19:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Nunjucks versions prior to version 3.2.4, it was possible to bypass the restrictions which are provided by the autoescape functionality. If there are two user-controlled parameters on the same line used in the views, it was possible to inject cross site scripting payloads using the backslash <code>\</code> character.</p>
<h4 id="example">Example</h4>
<p>If the user-controlled parameters were used in the views similar to the following:</p>
<pre><code>&lt;script&gt;
let testObject = { lang: '{{ lang }}', place: '{{ place }}' };
&lt;/script&gt;
</code></pre>
<p>It is possible to inject XSS payload using the below parameters:</p>
<pre><code>https://&lt;application-url&gt;/?lang=jp\&amp;place=};alert(document.domain)//
</code></pre>
<h3 id="patches">Patches</h3>
<p>The issue was patched in version 3.2.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1825980">https://bugzilla.mozilla.org/show_bug.cgi?id=1825980</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw">https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw</a></li>
<li><a href="https://github.com/mozilla/nunjucks/pull/1437">https://github.com/mozilla/nunjucks/pull/1437</a></li>
<li><a href="https://github.com/mozilla/nunjucks/commit/ec16d210e7e13f862eccdb0bc9af9f60ff6749d6">https://github.com/mozilla/nunjucks/commit/ec16d210e7e13f862eccdb0bc9af9f60ff6749d6</a></li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1825980">https://bugzilla.mozilla.org/show_bug.cgi?id=1825980</a></li>
<li><a href="https://github.com/mozilla/nunjucks/releases/tag/v3.2.4">https://github.com/mozilla/nunjucks/releases/tag/v3.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-x77j-w7wf-fjmw">https://github.com/advisories/GHSA-x77j-w7wf-fjmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x77j-w7wf-fjmw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:19:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/csrf-protection] Bypass of CSRF protection in the presence of predictable userInfo]]></title>
        <id>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</id>
        <link href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw"/>
        <updated>2023-04-20T21:18:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library in combination with <code>@fastify/cookie</code> can be bypassed from network and same-site attackers under certain conditions.</p>
<p><code>@fastify/csrf-protection</code> supports an optional <code>userInfo</code> parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for <a href="https://www.cvedetails.com/cve/CVE-2021-29624">CVE-2021-29624</a>. Whenever <code>userInfo</code> parameter is missing, or its value can be predicted for the target user account, network and <a href="https://canitakeyoursubdomain.name/">same-site</a> attackers can 1. fixate a <code>_csrf</code> cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.</p>
<p>As a fix, <code>@fastify/csrf-protection</code> starting from version 6.3.0 (and v4.1.0) includes a server-defined secret <code>hmacKey</code> that cryptographically binds the CSRF token to the value of the <code>_csrf</code> cookie and the <code>userInfo</code> parameter, making tokens non-spoofable by attackers. This protection is effective as long as the <code>userInfo</code> parameter is unique for each user.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in version 6.3.0 and v4.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, developers can use a random, non-predictable <code>userInfo</code> parameter for each user.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8">https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27495">https://nvd.nist.gov/vuln/detail/CVE-2023-27495</a></li>
<li><a href="https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058">https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v4.1.0">https://github.com/fastify/csrf-protection/releases/tag/v4.1.0</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v6.3.0">https://github.com/fastify/csrf-protection/releases/tag/v6.3.0</a></li>
<li><a href="https://www.cvedetails.com/cve/CVE-2021-29624">https://www.cvedetails.com/cve/CVE-2021-29624</a></li>
<li><a href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:18:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/csrf-protection] Bypass of CSRF protection in the presence of predictable userInfo]]></title>
        <id>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</id>
        <link href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw"/>
        <updated>2023-04-20T21:18:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library in combination with <code>@fastify/cookie</code> can be bypassed from network and same-site attackers under certain conditions.</p>
<p><code>@fastify/csrf-protection</code> supports an optional <code>userInfo</code> parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for <a href="https://www.cvedetails.com/cve/CVE-2021-29624">CVE-2021-29624</a>. Whenever <code>userInfo</code> parameter is missing, or its value can be predicted for the target user account, network and <a href="https://canitakeyoursubdomain.name/">same-site</a> attackers can 1. fixate a <code>_csrf</code> cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.</p>
<p>As a fix, <code>@fastify/csrf-protection</code> starting from version 6.3.0 (and v4.1.0) includes a server-defined secret <code>hmacKey</code> that cryptographically binds the CSRF token to the value of the <code>_csrf</code> cookie and the <code>userInfo</code> parameter, making tokens non-spoofable by attackers. This protection is effective as long as the <code>userInfo</code> parameter is unique for each user.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in version 6.3.0 and v4.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, developers can use a random, non-predictable <code>userInfo</code> parameter for each user.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8">https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27495">https://nvd.nist.gov/vuln/detail/CVE-2023-27495</a></li>
<li><a href="https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058">https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v4.1.0">https://github.com/fastify/csrf-protection/releases/tag/v4.1.0</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v6.3.0">https://github.com/fastify/csrf-protection/releases/tag/v6.3.0</a></li>
<li><a href="https://www.cvedetails.com/cve/CVE-2021-29624">https://www.cvedetails.com/cve/CVE-2021-29624</a></li>
<li><a href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:18:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eslint-detailed-reporter] eslint-detailed-reporter vulnerable to cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-4xr4-89m5-46c7</id>
        <link href="https://github.com/advisories/GHSA-4xr4-89m5-46c7"/>
        <updated>2023-04-20T20:34:40.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in mportuga eslint-detailed-reporter up to 0.9.0 and classified as problematic. Affected by this issue is the function renderIssue in the library lib/template-generator.js. The manipulation of the argument message leads to cross site scripting. The attack may be launched remotely. The name of the patch is 505c190efd4905990db6207863bdcbd9b1d7e1bd. It is recommended to apply a patch to fix this issue. VDB-226310 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4942">https://nvd.nist.gov/vuln/detail/CVE-2022-4942</a></li>
<li><a href="https://github.com/mportuga/eslint-detailed-reporter/pull/46">https://github.com/mportuga/eslint-detailed-reporter/pull/46</a></li>
<li><a href="https://github.com/mportuga/eslint-detailed-reporter/commit/505c190efd4905990db6207863bdcbd9b1d7e1bd">https://github.com/mportuga/eslint-detailed-reporter/commit/505c190efd4905990db6207863bdcbd9b1d7e1bd</a></li>
<li><a href="https://vuldb.com/?ctiid.226310">https://vuldb.com/?ctiid.226310</a></li>
<li><a href="https://vuldb.com/?id.226310">https://vuldb.com/?id.226310</a></li>
<li><a href="https://github.com/advisories/GHSA-4xr4-89m5-46c7">https://github.com/advisories/GHSA-4xr4-89m5-46c7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xr4-89m5-46c7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-04-20T06:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-plugin-sharp] Path traversal vulnerability in gatsby-plugin-sharp]]></title>
        <id>https://github.com/advisories/GHSA-h2pm-378c-pcxx</id>
        <link href="https://github.com/advisories/GHSA-h2pm-378c-pcxx"/>
        <updated>2023-04-20T19:05:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (<code>gatsby develop</code>).</p>
<p>The following steps can be used to reproduce the vulnerability:</p>
<pre><code># Create a new Gatsby project, and install gatsby-plugin-sharp
$ npm init gatsby
$ cd my-gatsby-site
$ npm install gatsby-plugin-sharp


# Add the plugin to gatsby-config.js
module.exports = {
  plugins: [
    {
      resolve: `gatsby-plugin-sharp`,
    },
  ]
}

# Start the Gatsby develop server
$ gatsby develop

# Execute the path traversal vulnerability
$ curl "http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
</code></pre>
<p>It should be noted that by default <code>gatsby develop</code> is only accessible via the localhost <code>127.0.0.1</code>, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as <code>--host 0.0.0.0</code>, <code>-H 0.0.0.0</code>, or the <code>GATSBY_HOST=0.0.0.0</code> environment variable.</p>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-plugin-sharp@5.8.1</code> and <code>gatsby-plugin-sharp@4.25.1</code> which mitigates the issue by ensuring that included paths remain within the project directory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As stated above, by default <code>gatsby develop</code> is only exposed to the localhost <code>127.0.0.1</code>.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.</p>
<p>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Patrick Rombouts and Bart Veneman [drukwerkdeal.nl] for bringing the issue to our attention.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30548">https://nvd.nist.gov/vuln/detail/CVE-2023-30548</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b">https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e">https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e</a></li>
<li><a href="https://github.com/advisories/GHSA-h2pm-378c-pcxx">https://github.com/advisories/GHSA-h2pm-378c-pcxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h2pm-378c-pcxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T19:05:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-plugin-sharp] Path traversal vulnerability in gatsby-plugin-sharp]]></title>
        <id>https://github.com/advisories/GHSA-h2pm-378c-pcxx</id>
        <link href="https://github.com/advisories/GHSA-h2pm-378c-pcxx"/>
        <updated>2023-04-20T19:05:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (<code>gatsby develop</code>).</p>
<p>The following steps can be used to reproduce the vulnerability:</p>
<pre><code># Create a new Gatsby project, and install gatsby-plugin-sharp
$ npm init gatsby
$ cd my-gatsby-site
$ npm install gatsby-plugin-sharp


# Add the plugin to gatsby-config.js
module.exports = {
  plugins: [
    {
      resolve: `gatsby-plugin-sharp`,
    },
  ]
}

# Start the Gatsby develop server
$ gatsby develop

# Execute the path traversal vulnerability
$ curl "http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
</code></pre>
<p>It should be noted that by default <code>gatsby develop</code> is only accessible via the localhost <code>127.0.0.1</code>, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as <code>--host 0.0.0.0</code>, <code>-H 0.0.0.0</code>, or the <code>GATSBY_HOST=0.0.0.0</code> environment variable.</p>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-plugin-sharp@5.8.1</code> and <code>gatsby-plugin-sharp@4.25.1</code> which mitigates the issue by ensuring that included paths remain within the project directory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As stated above, by default <code>gatsby develop</code> is only exposed to the localhost <code>127.0.0.1</code>.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.</p>
<p>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Patrick Rombouts and Bart Veneman [drukwerkdeal.nl] for bringing the issue to our attention.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30548">https://nvd.nist.gov/vuln/detail/CVE-2023-30548</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b">https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e">https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e</a></li>
<li><a href="https://github.com/advisories/GHSA-h2pm-378c-pcxx">https://github.com/advisories/GHSA-h2pm-378c-pcxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h2pm-378c-pcxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T19:05:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 Sandbox Escape vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</id>
        <link href="https://github.com/advisories/GHSA-ch3r-j5x3-6q2m"/>
        <updated>2023-04-20T14:37:53.000Z</updated>
        <content type="html"><![CDATA[<p>There exists a vulnerability in exception sanitization of vm2 for versions up to 3.9.16, allowing attackers to raise an unsanitized host exception inside <code>handleException()</code> which can be used to escape the sandbox and run arbitrary code in host context.</p>
<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.17</code> of <code>vm2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>PoC - <a href="https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244">https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/patriksimek/vm2">VM2</a></li>
</ul>
<p>Thanks to <a href="https://twitter.com/0x10n">Xion</a> (SeungHyun Lee) of <a href="https://kaist-hacking.github.io/">KAIST Hacking Lab</a> for disclosing this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m">https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30547">https://nvd.nist.gov/vuln/detail/CVE-2023-30547</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049">https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5">https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5</a></li>
<li><a href="https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244">https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244</a></li>
<li><a href="https://github.com/patriksimek/vm2/releases/tag/3.9.17">https://github.com/patriksimek/vm2/releases/tag/3.9.17</a></li>
<li><a href="https://github.com/advisories/GHSA-ch3r-j5x3-6q2m">https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-20T14:37:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] GovernorCompatibilityBravo may trim proposal calldata]]></title>
        <id>https://github.com/advisories/GHSA-93hq-5wgc-jc82</id>
        <link href="https://github.com/advisories/GHSA-93hq-5wgc-jc82"/>
        <updated>2023-04-20T14:11:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The proposal creation entrypoint (<code>propose</code>) in <code>GovernorCompatibilityBravo</code> allows the creation of proposals with a <code>signatures</code> array shorter than the <code>calldatas</code> array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The <code>ProposalCreated</code> event correctly represents what will eventually execute, but the proposal parameters as queried through <code>getActions</code> appear to respect the original intended calldata.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that all proposals that pass through governance have equal length <code>signatures</code> and <code>calldatas</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30542">https://nvd.nist.gov/vuln/detail/CVE-2023-30542</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-93hq-5wgc-jc82">https://github.com/advisories/GHSA-93hq-5wgc-jc82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93hq-5wgc-jc82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T14:11:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts] GovernorCompatibilityBravo may trim proposal calldata]]></title>
        <id>https://github.com/advisories/GHSA-93hq-5wgc-jc82</id>
        <link href="https://github.com/advisories/GHSA-93hq-5wgc-jc82"/>
        <updated>2023-04-20T14:11:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The proposal creation entrypoint (<code>propose</code>) in <code>GovernorCompatibilityBravo</code> allows the creation of proposals with a <code>signatures</code> array shorter than the <code>calldatas</code> array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The <code>ProposalCreated</code> event correctly represents what will eventually execute, but the proposal parameters as queried through <code>getActions</code> appear to respect the original intended calldata.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that all proposals that pass through governance have equal length <code>signatures</code> and <code>calldatas</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30542">https://nvd.nist.gov/vuln/detail/CVE-2023-30542</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-93hq-5wgc-jc82">https://github.com/advisories/GHSA-93hq-5wgc-jc82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93hq-5wgc-jc82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T14:11:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-email] Strapi plugins vulnerable to Server-Side Template Injection and Remote Code Execution in the Users-Permissions Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</id>
        <link href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf"/>
        <updated>2023-04-19T21:41:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.</p>
<h3 id="ioc">IoC</h3>
<p>Using just the request log files, the only IoC to search for is a <code>PUT</code> request to URL path <code>/users-permissions/email-templates</code>. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a <code>lodash</code> template delimiter (eg. <code>&lt;%STUFF HERE%&gt;</code>) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.</p>
<p>Reset Password Template:</p>
<pre><code class="language-html">&lt;p&gt;We heard that you lost your password. Sorry about that!&lt;/p&gt;

&lt;p&gt;But don’t worry! You can use the following link to reset your password:&lt;/p&gt;
&lt;p&gt;&lt;%= URL %&gt;?code=&lt;%= TOKEN %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Email Confirmation Template:</p>
<pre><code class="language-html">&lt;p&gt;Thank you for registering!&lt;/p&gt;

&lt;p&gt;You have to confirm your email address. Please click on the link below.&lt;/p&gt;

&lt;p&gt;&lt;%= URL %&gt;?confirmation=&lt;%= CODE %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Specifically you should look for odd code contained within the <code>&lt;%STUFF HERE%&gt;</code> blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.</p>
<h3 id="impact">Impact</h3>
<p>All users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22621">https://nvd.nist.gov/vuln/detail/CVE-2023-22621</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15385">https://github.com/strapi/strapi/pull/15385</a></li>
<li><a href="https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd">https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.5.6">https://github.com/strapi/strapi/releases/tag/v4.5.6</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/advisories/GHSA-2h87-4q2w-v4hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-19T21:41:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-users-permissions] Strapi plugins vulnerable to Server-Side Template Injection and Remote Code Execution in the Users-Permissions Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</id>
        <link href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf"/>
        <updated>2023-04-19T21:41:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.</p>
<h3 id="ioc">IoC</h3>
<p>Using just the request log files, the only IoC to search for is a <code>PUT</code> request to URL path <code>/users-permissions/email-templates</code>. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a <code>lodash</code> template delimiter (eg. <code>&lt;%STUFF HERE%&gt;</code>) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.</p>
<p>Reset Password Template:</p>
<pre><code class="language-html">&lt;p&gt;We heard that you lost your password. Sorry about that!&lt;/p&gt;

&lt;p&gt;But don’t worry! You can use the following link to reset your password:&lt;/p&gt;
&lt;p&gt;&lt;%= URL %&gt;?code=&lt;%= TOKEN %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Email Confirmation Template:</p>
<pre><code class="language-html">&lt;p&gt;Thank you for registering!&lt;/p&gt;

&lt;p&gt;You have to confirm your email address. Please click on the link below.&lt;/p&gt;

&lt;p&gt;&lt;%= URL %&gt;?confirmation=&lt;%= CODE %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Specifically you should look for odd code contained within the <code>&lt;%STUFF HERE%&gt;</code> blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.</p>
<h3 id="impact">Impact</h3>
<p>All users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22621">https://nvd.nist.gov/vuln/detail/CVE-2023-22621</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15385">https://github.com/strapi/strapi/pull/15385</a></li>
<li><a href="https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd">https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.5.6">https://github.com/strapi/strapi/releases/tag/v4.5.6</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/advisories/GHSA-2h87-4q2w-v4hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-19T21:41:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Strapi leaking sensitive user information by filtering on private fields]]></title>
        <id>https://github.com/advisories/GHSA-jjqf-j4w7-92w8</id>
        <link href="https://github.com/advisories/GHSA-jjqf-j4w7-92w8"/>
        <updated>2023-04-20T08:12:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users. The unauthenticated attacker can filter users by columns that contain sensitive information and infer the values by the changes in the API responses. An unauthenticated attacker can exploit this vulnerability to hijack Strapi administrator accounts and gain unauthorized Strapi Super Administrator access by leaking the password reset token and changing the admin password. This can be exploited on all Strapi versions &lt;=4.7.1.</p>
<h3 id="ioc">IoC</h3>
<p>The exploitation of CVE-2023-22894 is easily detectable, since the payload is within the GET parameters and are normally included in request logs. The following regex pattern will extract requests that are exploiting this vulnerability to leak user's email, password and password reset token columns.</p>
<p><code>/(\[|%5B)\s*(email|password|reset_password_token|resetPasswordToken)\s*(\]|%5D)/</code></p>
<p>You can search log files for this IoC by using the following grep command.</p>
<p><code>grep -iE '(\[|%5B)\s*(email|password|reset_password_token|resetPasswordToken)\s*(\]|%5D)' $PATH_TO_LOG_FILE</code></p>
<p>If the above regex pattern matches any lines in your log files, take extra precaution to look out for multiple requests that include password, reset_password_token or resetPasswordToken. This would indicate that an attacker has leaked the password hashes and reset tokens on your Strapi server and you need to immediately start an incident response!</p>
<h3 id="impact">Impact</h3>
<p>All Strapi users below 4.8.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-jjqf-j4w7-92w8">https://github.com/strapi/strapi/security/advisories/GHSA-jjqf-j4w7-92w8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22894">https://nvd.nist.gov/vuln/detail/CVE-2023-22894</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.8.0">https://github.com/strapi/strapi/releases/tag/v4.8.0</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-jjqf-j4w7-92w8">https://github.com/advisories/GHSA-jjqf-j4w7-92w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjqf-j4w7-92w8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-19T21:41:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/walletconnect] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/metamask] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
</feed>