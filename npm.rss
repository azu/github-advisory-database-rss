<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-04-19T09:01:37.190Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@web3-react/walletconnect] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/metamask] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/eip1193] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/coinbase-wallet] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-users-permissions] Authentication Bypass in @strapi/plugin-users-permissions]]></title>
        <id>https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</id>
        <link href="https://github.com/advisories/GHSA-xv3q-jrmm-4fxv"/>
        <updated>2023-04-18T23:04:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication. A remote attacker could forge an ID token that is signed using the 'None' type algorithm to bypass authentication and impersonate any user that use AWS Cognito for authentication.</p>
<h3 id="ioc">IoC</h3>
<p>Reviewing of application logs is recommended to detect any suspicious activity. Running the following regex pattern will extract all ID tokens sent to <code>/api/auth/cognito/callback</code>.</p>
<p><code>/\/api\/auth\/cognito\/callback\?[\s\S]*id_token=\s*([\S]*)/</code></p>
<p>Once you have a list of the ID tokens, you will need to verify each token using the public key file for your AWS Cognito user pool that you can download from <code>https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/jwks.json</code>. If there are any JWT tokens that cannot be verified using the correct public key, then you need to inspect the JWT body and see if it contains the <code>email</code> and <code>cognito:username</code> claims (example below).</p>
<pre><code class="language-json">{
  "cognito:username": "auth-bypass-example",
  "email": "user@example.com"
}
</code></pre>
<p>If there are any JWTs that have this body, verify when the account with the email address was created. If the account was created earlier than the request to <code>/api/auth/cognito/callback</code> with the invalid JWT token, then you need to contact the user to inform them their account has been breached!</p>
<p>After upgrading to Strapi v4.6.0 or greater you will need to reconfigure your AWS Cognito provider to include the JWKS URL for it to work properly. If you do not reconfigure your provider you will receive an error message when attempting to login.</p>
<h3 id="impact">Impact</h3>
<p>Any Strapi user using the users-permissions AWS Cognito provider before 4.6.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-xv3q-jrmm-4fxv">https://github.com/strapi/strapi/security/advisories/GHSA-xv3q-jrmm-4fxv</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15382">https://github.com/strapi/strapi/pull/15382</a></li>
<li><a href="https://github.com/strapi/strapi/commit/d0edd25ceb49d275d710bf8d59999a2c07072893">https://github.com/strapi/strapi/commit/d0edd25ceb49d275d710bf8d59999a2c07072893</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.6.0">https://github.com/strapi/strapi/releases/tag/v4.6.0</a></li>
<li><a href="https://github.com/advisories/GHSA-xv3q-jrmm-4fxv">https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-18T22:28:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] OpenZeppelin Contracts TransparentUpgradeableProxy clashing selector calls may not be delegated]]></title>
        <id>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</id>
        <link href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh"/>
        <updated>2023-04-18T16:14:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.</p>
<p>The probability of an accidental clash is negligible, but one could be caused deliberately.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30541">https://nvd.nist.gov/vuln/detail/CVE-2023-30541</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/advisories/GHSA-mx2q-35m2-x2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-17T16:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts] OpenZeppelin Contracts TransparentUpgradeableProxy clashing selector calls may not be delegated]]></title>
        <id>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</id>
        <link href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh"/>
        <updated>2023-04-18T16:14:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.</p>
<p>The probability of an accidental clash is negligible, but one could be caused deliberately.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30541">https://nvd.nist.gov/vuln/detail/CVE-2023-30541</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/advisories/GHSA-mx2q-35m2-x2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-17T16:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk vulnerable to invisible eavesdropping in group calls]]></title>
        <id>https://github.com/advisories/GHSA-6g67-q39g-r79q</id>
        <link href="https://github.com/advisories/GHSA-6g67-q39g-r79q"/>
        <updated>2023-04-14T21:35:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker present in a room where an <a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3401">MSC3401</a> group call is taking place can eavesdrop on the video and audio of participants using matrix-js-sdk, without their knowledge. To affected matrix-js-sdk users, the attacker will not appear to be participating in the call.</p>
<p>This attack is possible because matrix-js-sdk's group call implementation accepts incoming direct calls from other users, even if they have not yet declared intent to participate in the group call, as a means of resolving a race condition in call setup. Affected versions do not restrict access to the user's outbound media in this case.</p>
<p>Legacy 1:1 calls are unaffected.</p>
<h3 id="patches">Patches</h3>
<p>This is fixed in matrix-js-sdk 24.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may hold group calls in private rooms where only the exact users who are expected to participate in the call are present.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6g67-q39g-r79q">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6g67-q39g-r79q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29529">https://nvd.nist.gov/vuln/detail/CVE-2023-29529</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3401">https://github.com/matrix-org/matrix-spec-proposals/pull/3401</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v24.1.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v24.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6g67-q39g-r79q">https://github.com/advisories/GHSA-6g67-q39g-r79q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6g67-q39g-r79q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-14T16:14:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serialize-to-js] Code Execution Through IIFE in serialize-to-js]]></title>
        <id>https://github.com/advisories/GHSA-mm62-wxc8-cf7m</id>
        <link href="https://github.com/advisories/GHSA-mm62-wxc8-cf7m"/>
        <updated>2023-04-13T22:32:52.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>serialize-to-js</code> may be vulnerable to arbitrary code execution through an Immediately Invoked Function Expression (IIFE). </p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<pre><code>var payload = "{e: (function(){ eval('console.log(`exploited`)') })() }"
var serialize = require('serialize-to-js');
serialize.deserialize(payload);
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 1.0.0, or later, and review <a href="https://www.npmjs.com/package/serialize-to-js#deserialize">this disclaimer</a> from the author.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-5954">https://nvd.nist.gov/vuln/detail/CVE-2017-5954</a></li>
<li><a href="https://github.com/advisories/GHSA-mm62-wxc8-cf7m">https://github.com/advisories/GHSA-mm62-wxc8-cf7m</a></li>
<li><a href="https://www.npmjs.com/advisories/313">https://www.npmjs.com/advisories/313</a></li>
<li><a href="https://www.npmjs.com/package/serialize-to-js#deserialize">https://www.npmjs.com/package/serialize-to-js#deserialize</a></li>
<li><a href="https://github.com/commenthol/serialize-to-js/issues/1">https://github.com/commenthol/serialize-to-js/issues/1</a></li>
<li><a href="https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/">https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/</a></li>
<li><a href="http://www.securityfocus.com/bid/96223">http://www.securityfocus.com/bid/96223</a></li>
<li><a href="https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429">https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mm62-wxc8-cf7m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-07-18T18:27:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 Sandbox Escape vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xj72-wvfv-8985</id>
        <link href="https://github.com/advisories/GHSA-xj72-wvfv-8985"/>
        <updated>2023-04-14T21:35:02.000Z</updated>
        <content type="html"><![CDATA[<p>There exists a vulnerability in source code transformer (exception sanitization logic) of vm2 for versions up to 3.9.15, allowing attackers to bypass <code>handleException()</code> and leak unsanitized host exceptions which can be used to escape the sandbox and run arbitrary code in host context.</p>
<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.16</code> of <code>vm2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>Github Issue - <a href="https://github.com/patriksimek/vm2/issues/516">https://github.com/patriksimek/vm2/issues/516</a>
PoC - <a href="https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c">https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/patriksimek/vm2">VM2</a></li>
</ul>
<p>Thanks to <a href="https://twitter.com/0x10n">Xion</a> (SeungHyun Lee) of <a href="https://kaist-hacking.github.io/">KAIST Hacking Lab</a> for disclosing this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-xj72-wvfv-8985">https://github.com/patriksimek/vm2/security/advisories/GHSA-xj72-wvfv-8985</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/516">https://github.com/patriksimek/vm2/issues/516</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/24c724daa7c09f003e556d7cd1c7a8381cb985d7">https://github.com/patriksimek/vm2/commit/24c724daa7c09f003e556d7cd1c7a8381cb985d7</a></li>
<li><a href="https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c">https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c</a></li>
<li><a href="https://github.com/patriksimek/vm2/releases/tag/3.9.16">https://github.com/patriksimek/vm2/releases/tag/3.9.16</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29199">https://nvd.nist.gov/vuln/detail/CVE-2023-29199</a></li>
<li><a href="https://github.com/advisories/GHSA-xj72-wvfv-8985">https://github.com/advisories/GHSA-xj72-wvfv-8985</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj72-wvfv-8985</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-12T20:42:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] safe-eval vulnerable to Prototype Pollution via the safeEval function]]></title>
        <id>https://github.com/advisories/GHSA-hcg3-56jf-x4vh</id>
        <link href="https://github.com/advisories/GHSA-hcg3-56jf-x4vh"/>
        <updated>2023-04-14T21:35:38.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package safe-eval are vulnerable to Prototype Pollution via the safeEval function, due to improper sanitization of its parameter content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26121">https://nvd.nist.gov/vuln/detail/CVE-2023-26121</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/28">https://github.com/hacksparrow/safe-eval/issues/28</a></li>
<li><a href="https://gist.github.com/seongil-wi/9d9fc0cc5b7b130419cd45827e59c4f9">https://gist.github.com/seongil-wi/9d9fc0cc5b7b130419cd45827e59c4f9</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373062">https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373062</a></li>
<li><a href="https://github.com/advisories/GHSA-hcg3-56jf-x4vh">https://github.com/advisories/GHSA-hcg3-56jf-x4vh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcg3-56jf-x4vh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-11T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] safe-eval vulnerable to Sandbox Bypass due to improper input sanitization]]></title>
        <id>https://github.com/advisories/GHSA-79xf-67r4-q2jj</id>
        <link href="https://github.com/advisories/GHSA-79xf-67r4-q2jj"/>
        <updated>2023-04-11T15:27:28.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package safe-eval are vulnerable to Sandbox Bypass due to improper input sanitization. The vulnerability is derived from prototype pollution exploitation. Exploiting this vulnerability might result in remote code execution (RCE).</p>
<p><strong>Vulnerable functions:</strong></p>
<p><strong>defineGetter</strong>, stack(), toLocaleString(), propertyIsEnumerable.call(),  valueOf().</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26122">https://nvd.nist.gov/vuln/detail/CVE-2023-26122</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/27">https://github.com/hacksparrow/safe-eval/issues/27</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/31">https://github.com/hacksparrow/safe-eval/issues/31</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/32">https://github.com/hacksparrow/safe-eval/issues/32</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/33">https://github.com/hacksparrow/safe-eval/issues/33</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/34">https://github.com/hacksparrow/safe-eval/issues/34</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/35">https://github.com/hacksparrow/safe-eval/issues/35</a></li>
<li><a href="https://gist.github.com/seongil-wi/2db6cb884e10137a93132b7f74879cce">https://gist.github.com/seongil-wi/2db6cb884e10137a93132b7f74879cce</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373064">https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373064</a></li>
<li><a href="https://github.com/advisories/GHSA-79xf-67r4-q2jj">https://github.com/advisories/GHSA-79xf-67r4-q2jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79xf-67r4-q2jj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-11T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[element-plus] element-plus vulnerable to cross-site scripting (XSS) via el-table-column]]></title>
        <id>https://github.com/advisories/GHSA-rjvg-8v36-xv9r</id>
        <link href="https://github.com/advisories/GHSA-rjvg-8v36-xv9r"/>
        <updated>2023-04-11T14:26:35.000Z</updated>
        <content type="html"><![CDATA[<p>element-plus below 2.0.5 is vulnerable to Cross Site Scripting (XSS) when attribute <code>show-tooltips-overflow</code> of <code>el-table-column</code> is true. The mouseover action will make the text of this column render as html.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27103">https://nvd.nist.gov/vuln/detail/CVE-2022-27103</a></li>
<li><a href="https://github.com/asjdf/element-table-xss-test/issues/1">https://github.com/asjdf/element-table-xss-test/issues/1</a></li>
<li><a href="https://github.com/element-plus/element-plus/issues/6514">https://github.com/element-plus/element-plus/issues/6514</a></li>
<li><a href="https://github.com/asjdf/element-table-xss-test/">https://github.com/asjdf/element-table-xss-test/</a></li>
<li><a href="https://github.com/element-plus/element-plus/pull/6520">https://github.com/element-plus/element-plus/pull/6520</a></li>
<li><a href="https://github.com/element-plus/element-plus/commit/063c56446135176971f532bd0eb2e88a0b137d43">https://github.com/element-plus/element-plus/commit/063c56446135176971f532bd0eb2e88a0b137d43</a></li>
<li><a href="https://github.com/advisories/GHSA-rjvg-8v36-xv9r">https://github.com/advisories/GHSA-rjvg-8v36-xv9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjvg-8v36-xv9r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-26T00:00:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xml2js] xml2js is vulnerable to prototype pollution ]]></title>
        <id>https://github.com/advisories/GHSA-776f-qx25-q3cc</id>
        <link href="https://github.com/advisories/GHSA-776f-qx25-q3cc"/>
        <updated>2023-04-10T19:01:30.000Z</updated>
        <content type="html"><![CDATA[<p>xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0842">https://nvd.nist.gov/vuln/detail/CVE-2023-0842</a></li>
<li><a href="https://fluidattacks.com/advisories/myers/">https://fluidattacks.com/advisories/myers/</a></li>
<li><a href="https://github.com/Leonidas-from-XIV/node-xml2js/issues/663">https://github.com/Leonidas-from-XIV/node-xml2js/issues/663</a></li>
<li><a href="https://github.com/Leonidas-from-XIV/node-xml2js/pull/603/commits/581b19a62d88f8a3c068b5a45f4542c2d6a495a5">https://github.com/Leonidas-from-XIV/node-xml2js/pull/603/commits/581b19a62d88f8a3c068b5a45f4542c2d6a495a5</a></li>
<li><a href="https://github.com/advisories/GHSA-776f-qx25-q3cc">https://github.com/advisories/GHSA-776f-qx25-q3cc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-776f-qx25-q3cc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-05T21:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus API vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-3gvp-54v2-2jrp</id>
        <link href="https://github.com/advisories/GHSA-3gvp-54v2-2jrp"/>
        <updated>2023-04-07T22:09:08.000Z</updated>
        <content type="html"><![CDATA[<p>An issue found in Directus API v.2.2.0 allows a remote attacker to cause a denial of service via a great amount of HTTP requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-19850">https://nvd.nist.gov/vuln/detail/CVE-2020-19850</a></li>
<li><a href="https://github.com/directus/api/issues/982">https://github.com/directus/api/issues/982</a></li>
<li><a href="https://github.com/advisories/GHSA-3gvp-54v2-2jrp">https://github.com/advisories/GHSA-3gvp-54v2-2jrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gvp-54v2-2jrp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-04T15:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 vulnerable to sandbox escape]]></title>
        <id>https://github.com/advisories/GHSA-7jxr-cg7f-gpgv</id>
        <link href="https://github.com/advisories/GHSA-7jxr-cg7f-gpgv"/>
        <updated>2023-04-07T20:35:04.000Z</updated>
        <content type="html"><![CDATA[<p>vm2 was not properly handling host objects passed to <code>Error.prepareStackTrace</code> in case of unhandled async errors.</p>
<ul>
<li>vm2 version: ~3.9.14</li>
<li>Node version: 18.15.0, 19.8.1, 17.9.1</li>
</ul>
<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.15</code> of <code>vm2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-7jxr-cg7f-gpgv">https://github.com/patriksimek/vm2/security/advisories/GHSA-7jxr-cg7f-gpgv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29017">https://nvd.nist.gov/vuln/detail/CVE-2023-29017</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/515">https://github.com/patriksimek/vm2/issues/515</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/d534e5785f38307b70d3aac1945260a261a94d50">https://github.com/patriksimek/vm2/commit/d534e5785f38307b70d3aac1945260a261a94d50</a></li>
<li><a href="https://gist.github.com/seongil-wi/2a44e082001b959bfe304b62121fb76d">https://gist.github.com/seongil-wi/2a44e082001b959bfe304b62121fb76d</a></li>
<li><a href="https://github.com/advisories/GHSA-7jxr-cg7f-gpgv">https://github.com/advisories/GHSA-7jxr-cg7f-gpgv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jxr-cg7f-gpgv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-07T20:35:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@sveltejs/kit] SvelteKit framework has Insufficient CSRF protection for CORS requests]]></title>
        <id>https://github.com/advisories/GHSA-gv7g-x59x-wf8f</id>
        <link href="https://github.com/advisories/GHSA-gv7g-x59x-wf8f"/>
        <updated>2023-04-14T20:30:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a <code>+server.js</code> file, containing endpoint handlers for different HTTP methods.</p>
<p>SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is implemented at <code>kit/src/runtime/server/respond.js</code>. While the implementation does a sufficient job of mitigating common CSRF attacks, the protection can be bypassed by simply specifying an upper-cased <code>Content-Type</code> header value. The browser will not send uppercase characters on form submission, but this check does not block all expected cross-site requests: <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests</a></p>
<h3 id="details">Details</h3>
<p>The CSRF protection is implemented using the code shown below.</p>
<pre><code class="language-javascript">        const forbidden =
            is_form_content_type(request) &amp;&amp;
            (request.method === 'POST' ||
                request.method === 'PUT' ||
                request.method === 'PATCH' ||
                request.method === 'DELETE') &amp;&amp;
            request.headers.get('origin') !== url.origin;

        if (forbidden) {
            const csrf_error = error(403, `Cross-site ${request.method} form submissions are forbidden`);
            if (request.headers.get('accept') === 'application/json') {
                return json(csrf_error.body, { status: csrf_error.status });
            }
            return text(csrf_error.body.message, { status: csrf_error.status });
        }
</code></pre>
<p>If the incoming request specifies a POST/PUT/PATCH/DELETE method, the protection will compare the server’s origin with the value of the HTTP Origin header. A mismatch between these values signals that a potential attack has been detected. The final check is performed on the request’s <code>Content-Type</code> header whether the value is either <code>application/x-www-form-urlencoded</code>, <code>multipart/form-data</code> or <code>text/plain</code>. If all the previous checks pass, the request will be rejected with an 403 error response.
However, <code>is_form_content_type</code>, which is responsible for checking the value of the <code>Content-Type</code> header, is not sufficient to mitigate all possible variations of this type of attack. Since this function is checking <code>Content-Type</code> with lower-cased values, and the browser accepts upper-cased <code>Content-Type</code> header to be sent, a CSRF attack performed with the <code>Content-Type</code> header that contains an upper-cased character (e.g., <code>text/plaiN</code>) can circumvent the protection and the request will be processed by the endpoint handler.</p>

<h3 id="impact">Impact</h3>
<p>If abused, this issue will allow malicious requests to be submitted from third-party domains, which can allow execution of operations within the context of the victim's session, and in extreme scenarios can lead to unauthorized access to users’ accounts. This may lead to all POST operations requiring authentication being allowed in the following cases:</p>
<ol>
<li>If the target site sets <code>SameSite=None</code> on its auth cookie and the user visits a malicious site in a Chromium-based browser</li>
<li>If the target site doesn't set the <code>SameSite</code> attribute explicitly and the user visits a malicious site with Firefox/Safari with tracking protections turned off.</li>
<li>If the user is visiting a malicious site with a very outdated browser.</li>
</ol>
<h3 id="remediations">Remediations</h3>
<p>It is preferred to update to SvelteKit 1.15.2. It is also recommended to explicitly set <code>SameSite</code> to a value other than <code>None</code> on authentication cookies especially if the upgrade cannot be done in a timely manner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sveltejs/kit/security/advisories/GHSA-gv7g-x59x-wf8f">https://github.com/sveltejs/kit/security/advisories/GHSA-gv7g-x59x-wf8f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29008">https://nvd.nist.gov/vuln/detail/CVE-2023-29008</a></li>
<li><a href="https://github.com/sveltejs/kit/commit/ba436c6685e751d968a960fbda65f24cf7a82e9f">https://github.com/sveltejs/kit/commit/ba436c6685e751d968a960fbda65f24cf7a82e9f</a></li>
<li><a href="https://github.com/advisories/GHSA-gv7g-x59x-wf8f">https://github.com/advisories/GHSA-gv7g-x59x-wf8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gv7g-x59x-wf8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-07T19:23:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[markdown-pdf] markdown-pdf vulnerable to local file read via server side cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-qghr-877h-f9jh</id>
        <link href="https://github.com/advisories/GHSA-qghr-877h-f9jh"/>
        <updated>2023-04-05T17:55:20.000Z</updated>
        <content type="html"><![CDATA[<p>markdown-pdf version 11.0.0 allows an external attacker to remotely obtain arbitrary local files. This is possible because the application does not validate the Markdown content entered by the user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0835">https://nvd.nist.gov/vuln/detail/CVE-2023-0835</a></li>
<li><a href="https://fluidattacks.com/advisories/relsb/">https://fluidattacks.com/advisories/relsb/</a></li>
<li><a href="https://www.npmjs.com/package/markdown-pdf/">https://www.npmjs.com/package/markdown-pdf/</a></li>
<li><a href="https://github.com/advisories/GHSA-qghr-877h-f9jh">https://github.com/advisories/GHSA-qghr-877h-f9jh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qghr-877h-f9jh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-05T00:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[editor.md] Pandao Editor.md vulnerable to cross-site scripting (XSS) in editor parameter]]></title>
        <id>https://github.com/advisories/GHSA-5p84-mmh9-pxgr</id>
        <link href="https://github.com/advisories/GHSA-5p84-mmh9-pxgr"/>
        <updated>2023-04-07T22:35:12.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting vulnerability found in Pandao Editor.md v.1.5.0 allows a remote attacker to execute arbitrary code via a crafted script to the <code>editor</code> parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-19698">https://nvd.nist.gov/vuln/detail/CVE-2020-19698</a></li>
<li><a href="https://github.com/pandao/editor.md/issues/700">https://github.com/pandao/editor.md/issues/700</a></li>
<li><a href="https://github.com/pandao/editor.md/pull/860">https://github.com/pandao/editor.md/pull/860</a></li>
<li><a href="https://github.com/advisories/GHSA-5p84-mmh9-pxgr">https://github.com/advisories/GHSA-5p84-mmh9-pxgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5p84-mmh9-pxgr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-04T15:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[editor.md] Pandao Editor.md vulnerable to cross-site scripting (XSS) in iframe src parameter]]></title>
        <id>https://github.com/advisories/GHSA-w974-rq9x-mh3v</id>
        <link href="https://github.com/advisories/GHSA-w974-rq9x-mh3v"/>
        <updated>2023-04-07T22:43:27.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting vulnerability found in Pandao Editor.md v.1.5.0 allows a remote attacker to execute arbitrary code via a crafted script in the <code>&lt;iframe&gt; src</code> parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-19697">https://nvd.nist.gov/vuln/detail/CVE-2020-19697</a></li>
<li><a href="https://github.com/pandao/editor.md/issues/701">https://github.com/pandao/editor.md/issues/701</a></li>
<li><a href="https://github.com/pandao/editor.md/pull/860">https://github.com/pandao/editor.md/pull/860</a></li>
<li><a href="https://github.com/advisories/GHSA-w974-rq9x-mh3v">https://github.com/advisories/GHSA-w974-rq9x-mh3v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w974-rq9x-mh3v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-04T15:30:27.000Z</published>
    </entry>
</feed>