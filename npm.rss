<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-07-07T04:01:47.253Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[is_js] is_js vulnerable to Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</id>
        <link href="https://github.com/advisories/GHSA-pvrw-g6fx-mcx2"/>
        <updated>2023-07-06T21:46:36.000Z</updated>
        <content type="html"><![CDATA[<p>is.js is a general-purpose check library. Versions 0.9.0 and prior contain one or more regular expressions that are vulnerable to Regular Expression Denial of Service (ReDoS). is.js uses a regex copy-pasted from a gist to validate URLs. Trying to validate a malicious string can cause the regex to loop "forever." This vulnerability was found using a CodeQL query which identifies inefficient regular expressions. is.js has no patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26302">https://nvd.nist.gov/vuln/detail/CVE-2020-26302</a></li>
<li><a href="https://github.com/arasatasaygin/is.js/issues/320">https://github.com/arasatasaygin/is.js/issues/320</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js">https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js</a></li>
<li><a href="https://github.com/advisories/GHSA-pvrw-g6fx-mcx2">https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-06T19:24:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[snyk] snyk Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4vrv-93c7-m92j</id>
        <link href="https://github.com/advisories/GHSA-4vrv-93c7-m92j"/>
        <updated>2023-07-06T21:36:20.000Z</updated>
        <content type="html"><![CDATA[<p>The package snyk before 1.1064.0 is vulnerable to Code Injection when analyzing a project. An attacker who can convince a user to scan a malicious project can include commands in a build file such as build.gradle or gradle-wrapper.jar, which will be executed with the privileges of the application. This vulnerability may be triggered when running the the CLI tool directly, or when running a scan with one of the IDE plugins that invoke the Snyk CLI. Successful exploitation of this issue would likely require some level of social engineering - to coerce an untrusted project to be downloaded and analyzed via the Snyk CLI or opened in an IDE where a Snyk IDE plugin is installed and enabled. Additionally, if the IDE has a Trust feature then the target folder must be marked as ‘trusted’ in order to be vulnerable.</p>
<p><strong>NOTE:</strong> This issue is independent of the one reported in <a href="https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342">CVE-2022-40764</a>, and upgrading to a fixed version for this addresses that issue as well.</p>
<p>The affected IDE plugins and versions are: </p>
<ul>
<li>VS Code - Affected: &lt;=1.8.0, Fixed: 1.9.0 </li>
<li>IntelliJ - Affected: &lt;=2.4.47, Fixed: 2.4.48 </li>
<li>Visual Studio - Affected: &lt;=1.1.30, Fixed: 1.1.31 </li>
<li>Eclipse - Affected: &lt;=v20221115.132308, Fixed: All subsequent versions </li>
<li>Language Server - Affected: &lt;=v20221109.114426, Fixed: All subsequent versions</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24441">https://nvd.nist.gov/vuln/detail/CVE-2022-24441</a></li>
<li><a href="https://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495">https://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495</a></li>
<li><a href="https://github.com/snyk/snyk-intellij-plugin/commit/56682f4ba6081ce1d95cb980cbfacd3809a826f4">https://github.com/snyk/snyk-intellij-plugin/commit/56682f4ba6081ce1d95cb980cbfacd3809a826f4</a></li>
<li><a href="https://github.com/snyk/snyk-ls/commit/b3229f0142f782871aa72d1a7dcf417546d568ed">https://github.com/snyk/snyk-ls/commit/b3229f0142f782871aa72d1a7dcf417546d568ed</a></li>
<li><a href="https://github.com/snyk/snyk-visual-studio-plugin/commit/0b53dbbd4a3153c3ef9aaf797af3b5caad0f731a">https://github.com/snyk/snyk-visual-studio-plugin/commit/0b53dbbd4a3153c3ef9aaf797af3b5caad0f731a</a></li>
<li><a href="https://github.com/snyk/vscode-extension/commit/0db3b4240be0db6a0a5c6d02c0d4231a2c4ba708">https://github.com/snyk/vscode-extension/commit/0db3b4240be0db6a0a5c6d02c0d4231a2c4ba708</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SNYK-3111871">https://security.snyk.io/vuln/SNYK-JS-SNYK-3111871</a></li>
<li><a href="https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/">https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/</a></li>
<li><a href="https://github.com/advisories/GHSA-4vrv-93c7-m92j">https://github.com/advisories/GHSA-4vrv-93c7-m92j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vrv-93c7-m92j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-06T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/oauth2] Duplicate Advisory: @fastify/oauth2 Oauth2 state parameter reuse]]></title>
        <id>https://github.com/advisories/GHSA-hgxv-3497-3hhj</id>
        <link href="https://github.com/advisories/GHSA-hgxv-3497-3hhj"/>
        <updated>2023-07-06T20:39:14.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-g8x5-p9qc-cf95. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>All versions of @fastify/oauth2 used a statically generated state parameter at startup time and were used across all requests for all users. The purpose of the Oauth2 state parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.</p>
<p>v7.2.0 changes the default behavior to store the state in a cookie with the http-only and same-site=lax attributes set. The state is now by default generated for every user. Note that this contains a breaking change in the checkStateFunction function, which now accepts the full Request object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31999">https://nvd.nist.gov/vuln/detail/CVE-2023-31999</a></li>
<li><a href="https://hackerone.com/reports/2020418">https://hackerone.com/reports/2020418</a></li>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">https://auth0.com/docs/secure/attack-protection/state-parameters</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0">https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hgxv-3497-3hhj">https://github.com/advisories/GHSA-hgxv-3497-3hhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgxv-3497-3hhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-04T18:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vendure/admin-ui-plugin] @vendure/admin-ui-plugin authenticated Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gm68-572p-q28r</id>
        <link href="https://github.com/advisories/GHSA-gm68-572p-q28r"/>
        <updated>2023-07-06T15:30:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Vendure provides an authorization system with different levels of privileges. For example, an administrator cannot create another administrator.</p>
<p>In the admin UI, there are a couple of places with description inputs, such as inventory/collection catalog, shipping methods, promotions, and more.</p>
<p>While the WYSIWYG editor allows limited customization, altering the request data (not in the ui) saves and returns arbitrary HTML with no sanitization. Causing an XSS when viewing the page.</p>
<p>The impact of this XSS is privilege escalation. A user that can write any type of description can trigger the attack. Then any other user that visits the vulnerable page is prone to arbitrary Javascript code execution, giving the attacker ability to execute actions on behalf of this user.</p>
<h3 id="patches">Patches</h3>
<p>in progress</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r">https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r</a></li>
<li><a href="https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0">https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0</a></li>
<li><a href="https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04">https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04</a></li>
<li><a href="https://github.com/advisories/GHSA-gm68-572p-q28r">https://github.com/advisories/GHSA-gm68-572p-q28r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gm68-572p-q28r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-06T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/oauth2] @fastify/oauth2 vulnerable to Cross Site Request Forgery due to reused Oauth2 state]]></title>
        <id>https://github.com/advisories/GHSA-g8x5-p9qc-cf95</id>
        <link href="https://github.com/advisories/GHSA-g8x5-p9qc-cf95"/>
        <updated>2023-07-06T20:39:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of @fastify/oauth2 used a statically generated <code>state</code> parameter at startup time and were used across all requests for all users.
The purpose of the Oauth2 <code>state</code> parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.</p>
<h3 id="patches">Patches</h3>
<p>v7.2.0 changes the default behavior to store the <code>state</code> in a cookie with the <code>http-only</code> and <code>same-site=lax</code> attributes set. The state is now by default generated for every user.</p>
<p>Note that this contains a breaking change in the <code>checkStateFunction</code> function, which now accepts the full <code>Request</code> object.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">Prevent Attacks and Redirect Users with OAuth 2.0 State Parameters</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95">https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35935">https://nvd.nist.gov/vuln/detail/CVE-2023-35935</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c">https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c</a></li>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">https://auth0.com/docs/secure/attack-protection/state-parameters</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0">https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g8x5-p9qc-cf95">https://github.com/advisories/GHSA-g8x5-p9qc-cf95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8x5-p9qc-cf95</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-05T21:36:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-462x-c3jw-7vr6</id>
        <link href="https://github.com/advisories/GHSA-462x-c3jw-7vr6"/>
        <updated>2023-06-30T20:41:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="credits">Credits</h3>
<ul>
<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>
<li>Fixed by dbythy</li>
<li>Reviewed by mtrezza</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36475">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>
<li><a href="https://github.com/parse-community/parse-server/issues/8674">https://github.com/parse-community/parse-server/issues/8674</a></li>
<li><a href="https://github.com/parse-community/parse-server/issues/8675">https://github.com/parse-community/parse-server/issues/8675</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.5.2">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/6.2.1">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-462x-c3jw-7vr6">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-462x-c3jw-7vr6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-30T20:41:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-462x-c3jw-7vr6</id>
        <link href="https://github.com/advisories/GHSA-462x-c3jw-7vr6"/>
        <updated>2023-06-30T20:41:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="credits">Credits</h3>
<ul>
<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>
<li>Fixed by dbythy</li>
<li>Reviewed by mtrezza</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36475">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>
<li><a href="https://github.com/parse-community/parse-server/issues/8674">https://github.com/parse-community/parse-server/issues/8674</a></li>
<li><a href="https://github.com/parse-community/parse-server/issues/8675">https://github.com/parse-community/parse-server/issues/8675</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.5.2">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/6.2.1">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-462x-c3jw-7vr6">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-462x-c3jw-7vr6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-30T20:41:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] NocoDB information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mx8q-jqwm-85mv</id>
        <link href="https://github.com/advisories/GHSA-mx8q-jqwm-85mv"/>
        <updated>2023-06-30T20:40:24.000Z</updated>
        <content type="html"><![CDATA[<p>In NocoDB prior to 0.91.7, the SMTP plugin doesn't have verification or validation. This allows attackers to make requests to internal servers and read the contents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2062">https://nvd.nist.gov/vuln/detail/CVE-2022-2062</a></li>
<li><a href="https://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4">https://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4</a></li>
<li><a href="https://huntr.dev/bounties/35593b4c-f127-4699-8ad3-f0b2203a8ef6">https://huntr.dev/bounties/35593b4c-f127-4699-8ad3-f0b2203a8ef6</a></li>
<li><a href="https://github.com/advisories/GHSA-mx8q-jqwm-85mv">https://github.com/advisories/GHSA-mx8q-jqwm-85mv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx8q-jqwm-85mv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-14T00:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[joplin] Joplin Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4jjv-p8x9-rrf7</id>
        <link href="https://github.com/advisories/GHSA-4jjv-p8x9-rrf7"/>
        <updated>2023-07-06T21:39:15.000Z</updated>
        <content type="html"><![CDATA[<p>Joplin before 2.11.5 allows XSS via an AREA element of an image map.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37299">https://nvd.nist.gov/vuln/detail/CVE-2023-37299</a></li>
<li><a href="https://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071">https://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071</a></li>
<li><a href="https://github.com/laurent22/joplin/releases/tag/v2.11.5">https://github.com/laurent22/joplin/releases/tag/v2.11.5</a></li>
<li><a href="https://vuln.ryotak.net/advisories/68">https://vuln.ryotak.net/advisories/68</a></li>
<li><a href="https://github.com/advisories/GHSA-4jjv-p8x9-rrf7">https://github.com/advisories/GHSA-4jjv-p8x9-rrf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jjv-p8x9-rrf7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T15:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[joplin] Joplin Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7grw-xfx6-qhx6</id>
        <link href="https://github.com/advisories/GHSA-7grw-xfx6-qhx6"/>
        <updated>2023-07-06T21:39:17.000Z</updated>
        <content type="html"><![CDATA[<p>Joplin before 2.11.5 allows XSS via a USE element in an SVG document.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37298">https://nvd.nist.gov/vuln/detail/CVE-2023-37298</a></li>
<li><a href="https://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83">https://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83</a></li>
<li><a href="https://github.com/laurent22/joplin/releases/tag/v2.11.5">https://github.com/laurent22/joplin/releases/tag/v2.11.5</a></li>
<li><a href="https://vuln.ryotak.net/advisories/69">https://vuln.ryotak.net/advisories/69</a></li>
<li><a href="https://github.com/advisories/GHSA-7grw-xfx6-qhx6">https://github.com/advisories/GHSA-7grw-xfx6-qhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7grw-xfx6-qhx6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T15:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flatnest] flatnest Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7px2-3c2p-q4v4</id>
        <link href="https://github.com/advisories/GHSA-7px2-3c2p-q4v4"/>
        <updated>2023-06-30T20:38:37.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package flatnest are vulnerable to Prototype Pollution via the <code>nest()</code> function in <code>flatnest/nest.js</code> file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26135">https://nvd.nist.gov/vuln/detail/CVE-2023-26135</a></li>
<li><a href="https://github.com/brycebaril/node-flatnest/issues/4">https://github.com/brycebaril/node-flatnest/issues/4</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-FLATNEST-3185149">https://security.snyk.io/vuln/SNYK-JS-FLATNEST-3185149</a></li>
<li><a href="https://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js#L43">https://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js#L43</a></li>
<li><a href="https://github.com/advisories/GHSA-7px2-3c2p-q4v4">https://github.com/advisories/GHSA-7px2-3c2p-q4v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7px2-3c2p-q4v4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-30T06:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[angular-ui-notification] angular-ui-notification Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mrcj-5qxr-vhp2</id>
        <link href="https://github.com/advisories/GHSA-mrcj-5qxr-vhp2"/>
        <updated>2023-06-30T20:35:18.000Z</updated>
        <content type="html"><![CDATA[<p>angular-ui-notification v0.1.0, v0.2.0, and v0.3.6 was discovered to contain a cross-site scripting (XSS) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34840">https://nvd.nist.gov/vuln/detail/CVE-2023-34840</a></li>
<li><a href="https://github.com/Xh4H/CVE-2023-34840">https://github.com/Xh4H/CVE-2023-34840</a></li>
<li><a href="https://github.com/alexcrack/angular-ui-notification">https://github.com/alexcrack/angular-ui-notification</a></li>
<li><a href="http://alexcrack.com">http://alexcrack.com</a></li>
<li><a href="https://github.com/advisories/GHSA-mrcj-5qxr-vhp2">https://github.com/advisories/GHSA-mrcj-5qxr-vhp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrcj-5qxr-vhp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T18:31:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[git-commit-info] git-commit-info vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-h42j-mrmp-9369</id>
        <link href="https://github.com/advisories/GHSA-h42j-mrmp-9369"/>
        <updated>2023-07-06T19:30:50.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package git-commit-info before 2.0.2 are vulnerable to Command Injection such that the package-exported method gitCommitInfo() fails to sanitize its parameter commit, which later flows into a sensitive command execution API. As a result, attackers may inject malicious commands once they control the hash content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26134">https://nvd.nist.gov/vuln/detail/CVE-2023-26134</a></li>
<li><a href="https://github.com/JPeer264/node-git-commit-info/issues/24">https://github.com/JPeer264/node-git-commit-info/issues/24</a></li>
<li><a href="https://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c">https://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174">https://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174</a></li>
<li><a href="https://github.com/advisories/GHSA-h42j-mrmp-9369">https://github.com/advisories/GHSA-h42j-mrmp-9369</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h42j-mrmp-9369</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-28T06:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] Cross-Site Scripting in jquery]]></title>
        <id>https://github.com/advisories/GHSA-2pqj-h3vj-pqgw</id>
        <link href="https://github.com/advisories/GHSA-2pqj-h3vj-pqgw"/>
        <updated>2023-07-05T22:31:12.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>jquery</code> are vulnerable to cross-site scripting. This occurs because the main <code>jquery</code> function uses a regular expression to differentiate between HTML and selectors, but does not properly anchor the regular expression. The result is that <code>jquery</code> may interpret HTML as selectors when given certain inputs, allowing for client side code execution.</p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<pre><code>$("#log").html(
    $("element[attribute='&lt;img src=\"x\" onerror=\"alert(1)\" /&gt;']").html()
);
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 1.9.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://bugs.jquery.com/ticket/11290">https://bugs.jquery.com/ticket/11290</a></li>
<li><a href="https://bugs.jquery.com/ticket/12531">https://bugs.jquery.com/ticket/12531</a></li>
<li><a href="https://bugs.jquery.com/ticket/6429">https://bugs.jquery.com/ticket/6429</a></li>
<li><a href="https://bugs.jquery.com/ticket/9521">https://bugs.jquery.com/ticket/9521</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16011">https://nvd.nist.gov/vuln/detail/CVE-2017-16011</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6708">https://nvd.nist.gov/vuln/detail/CVE-2012-6708</a></li>
<li><a href="https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d">https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d</a></li>
<li><a href="https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0">https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0</a></li>
<li><a href="https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>
<li><a href="https://snyk.io/vuln/npm:jquery:20120206">https://snyk.io/vuln/npm:jquery:20120206</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html</a></li>
<li><a href="http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html">http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/161972/Linksys-EA7500-2.0.8.194281-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/161972/Linksys-EA7500-2.0.8.194281-Cross-Site-Scripting.html</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450223">https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450223</a></li>
<li><a href="https://research.insecurelabs.org/jquery/test/">https://research.insecurelabs.org/jquery/test/</a></li>
<li><a href="https://web.archive.org/web/20200227132049/http://www.securityfocus.com/bid/102792">https://web.archive.org/web/20200227132049/http://www.securityfocus.com/bid/102792</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L59">https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L59</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v2.2.0/vendor/assets/javascripts/jquery.js#L67">https://github.com/rails/jquery-rails/blob/v2.2.0/vendor/assets/javascripts/jquery.js#L67</a></li>
<li><a href="https://github.com/advisories/GHSA-2pqj-h3vj-pqgw">https://github.com/advisories/GHSA-2pqj-h3vj-pqgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2pqj-h3vj-pqgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-09-01T16:41:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[word-wrap] word-wrap vulnerable to Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-j8xg-fqg3-53r7</id>
        <link href="https://github.com/advisories/GHSA-j8xg-fqg3-53r7"/>
        <updated>2023-06-27T22:32:05.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26115">https://nvd.nist.gov/vuln/detail/CVE-2023-26115</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973">https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973</a></li>
<li><a href="https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39">https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39</a></li>
<li><a href="https://github.com/advisories/GHSA-j8xg-fqg3-53r7">https://github.com/advisories/GHSA-j8xg-fqg3-53r7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8xg-fqg3-53r7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-22T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nuxt] nuxt Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gc34-5v43-h7v8</id>
        <link href="https://github.com/advisories/GHSA-gc34-5v43-h7v8"/>
        <updated>2023-06-22T20:04:02.000Z</updated>
        <content type="html"><![CDATA[<p>he Nuxt dev server between versions 3.4.0 and 3.4.3 is vulnerable to code injection when it is exposed publicly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3224">https://nvd.nist.gov/vuln/detail/CVE-2023-3224</a></li>
<li><a href="https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff">https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff</a></li>
<li><a href="https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87">https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87</a></li>
<li><a href="https://github.com/nuxt/nuxt/commits/v3.4.3">https://github.com/nuxt/nuxt/commits/v3.4.3</a></li>
<li><a href="https://github.com/nuxt/nuxt/issues/21694">https://github.com/nuxt/nuxt/issues/21694</a></li>
<li><a href="https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507">https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507</a></li>
<li><a href="https://github.com/advisories/GHSA-gc34-5v43-h7v8">https://github.com/advisories/GHSA-gc34-5v43-h7v8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc34-5v43-h7v8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-13T18:30:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shescape] Shescape potential environment variable exposure on Windows with CMD]]></title>
        <id>https://github.com/advisories/GHSA-3g7p-8qhx-mc8r</id>
        <link href="https://github.com/advisories/GHSA-3g7p-8qhx-mc8r"/>
        <updated>2023-06-27T23:07:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This impact users of Shescape:</p>
<ol>
<li>On Windows using the Windows Command Prompt (i.e. <code>cmd.exe</code>), and</li>
<li>Using <code>quote</code>/<code>quoteAll</code> or <code>escape</code>/<code>escapeAll</code> with the <code>interpolation</code> option set to <code>true</code>.</li>
</ol>
<p>An attacker may be able to get read-only access to environment variables. Example:</p>
<pre><code class="language-javascript">import * as cp from "node:child_process";
import * as shescape from "shescape";

// 1. Prerequisites
const options = {
    shell: "cmd.exe",
    // Or
    shell: undefined, // Only if the default shell is CMD

    // And
    interpolation: true, // Only applies to `escape` and `escapeAll` usage
}

// 2. Attack (one of many)
const payload = "%PATH%";

// 3. Usage
let escapedPayload;

escapedPayload = shescape.quote(payload, options);
// Or
escapedPayload = shescape.quoteAll([payload], options);
// Or
escapedPayload = shescape.escape(payload, options);
// Or
escapedPayload = shescape.escapeAll([payload], options);

// And (example)
const result = cp.execSync(`echo Hello ${escapedPayload}`, options);

// 4. Impact
console.log(result.toString());
// Outputs "Hello" followed by the contents of the PATH environment variable
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been patched in <a href="https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1">v1.7.1</a> which you can upgrade to now. No further changes are required.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Alternatively, users can remove all instances of <code>%</code> from user input, either before or after using Shescape.</p>
<h3 id="references">References</h3>
<ul>
<li>Shescape Pull request <a href="https://github.com/ericcornelissen/shescape/pull/982">#982</a></li>
<li>Shescape commit <a href="https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac"><code>d0fce70</code></a></li>
<li>Shescape Release <a href="https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1">v1.7.1</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ericcornelissen/shescape/security/advisories/GHSA-3g7p-8qhx-mc8r">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-3g7p-8qhx-mc8r</a></li>
<li><a href="https://github.com/ericcornelissen/shescape/pull/982">https://github.com/ericcornelissen/shescape/pull/982</a></li>
<li><a href="https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac">https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac</a></li>
<li><a href="https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1">https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35931">https://nvd.nist.gov/vuln/detail/CVE-2023-35931</a></li>
<li><a href="https://github.com/advisories/GHSA-3g7p-8qhx-mc8r">https://github.com/advisories/GHSA-3g7p-8qhx-mc8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3g7p-8qhx-mc8r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-22T20:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-xml-parser] fast-xml-parser regex vulnerability patch could be improved from a safety perspective]]></title>
        <id>https://github.com/advisories/GHSA-gpv5-7x3g-ghjv</id>
        <link href="https://github.com/advisories/GHSA-gpv5-7x3g-ghjv"/>
        <updated>2023-06-22T18:28:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>This is a comment on <a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw</a> and the patches fixing it.</p>
<h3 id="details">Details</h3>
<p>The code which validates a name calls the validator:
<a href="https://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153">https://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153</a>
This checks for the presence of an invalid character.  Such an approach is always risky, as it is so easy to forget to include an invalid character in the list.  A safer approach is to validate entity names against the XML specification: <a href="https://www.w3.org/TR/xml11/#sec-common-syn">https://www.w3.org/TR/xml11/#sec-common-syn</a> - an ENTITY name is a Name:</p>
<pre><code>[4]   NameStartChar ::= ":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] |
                        [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] |
                        [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
[4a]  NameChar ::= NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
[5]   Name ::= NameStartChar (NameChar)*
</code></pre>
<p>so the safest way to validate an entity name is to build a regex to represent this expression and check whether the name given matches the regex.  (Something along the lines of <code>/^[name start char class][name char class]*$/</code>.)  There's probably a nice way to simplify the explicit list rather than typing it out verbatim using Unicode character properties, but I don't know enough to do so.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-gpv5-7x3g-ghjv">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-gpv5-7x3g-ghjv</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1">https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1</a></li>
<li><a href="https://github.com/advisories/GHSA-gpv5-7x3g-ghjv">https://github.com/advisories/GHSA-gpv5-7x3g-ghjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gpv5-7x3g-ghjv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-15T19:05:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[semver] semver vulnerable to Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</id>
        <link href="https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"/>
        <updated>2023-06-22T16:52:56.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25883">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>
<li><a href="https://github.com/npm/node-semver/pull/564">https://github.com/npm/node-semver/pull/564</a></li>
<li><a href="https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/internal/re.js#L138">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/internal/re.js#L160">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>
<li><a href="https://github.com/advisories/GHSA-c2qf-rxjj-qqgw">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-21T06:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[passport-wsfed-saml2] passport-wsfed-saml2 Signature Bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5wrg-8fxp-cx9r</id>
        <link href="https://github.com/advisories/GHSA-5wrg-8fxp-cx9r"/>
        <updated>2023-06-21T22:06:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="information">Information</h2>
<p>Please note that this is not a new disclosure, and is previously reported in our <a href="https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70">SECURITY-NOTICE.md</a> which we removed in favor of github advisory. </p>
<h1 id="overview">Overview</h1>
<p>A vulnerability was found in the validation of a SAML signature. The validation doesn't ensure that the "Signature" tag is at the proper location inside an "Assertion" tag. This leads to a signature relocation attack where the attacker can corrupt one field of data while maintaining the signature valid. This could allow an authenticated attacker to "remove" one group from the assertion or corrupt another field of an assertion.</p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You are affected if you are using the passport-wsfed-saml2 library to version &lt; 3.0.10</p>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>You may fix this issue by upgrading passport-wsfed-saml2 library to version 3.0.10 or above. </p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>This fix patches the library that your application runs, but will not impact your users, their current state, or any existing sessions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-5wrg-8fxp-cx9r">https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-5wrg-8fxp-cx9r</a></li>
<li><a href="https://github.com/auth0/passport-wsfed-saml2/pull/79">https://github.com/auth0/passport-wsfed-saml2/pull/79</a></li>
<li><a href="https://github.com/auth0/passport-wsfed-saml2/commit/f75211d42d2586a0d24a9da29ba8590e42363500">https://github.com/auth0/passport-wsfed-saml2/commit/f75211d42d2586a0d24a9da29ba8590e42363500</a></li>
<li><a href="https://github.com/advisories/GHSA-5wrg-8fxp-cx9r">https://github.com/advisories/GHSA-5wrg-8fxp-cx9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5wrg-8fxp-cx9r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-21T22:06:22.000Z</published>
    </entry>
</feed>