<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-11-10T01:29:38.318Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to Prototype Pollution via Cloud Code Webhooks or Cloud Code Triggers]]></title>
        <id>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</id>
        <link href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx"/>
        <updated>2022-11-09T20:47:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Keywords that are specified in the Parse Server option <code>requestKeywordDenylist</code> can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Configure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8301">https://github.com/parse-community/parse-server/pull/8301</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8302">https://github.com/parse-community/parse-server/pull/8302</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3">https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f">https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f</a></li>
<li><a href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/advisories/GHSA-xprv-wvh7-qqqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-09T20:47:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to Prototype Pollution via Cloud Code Webhooks or Cloud Code Triggers]]></title>
        <id>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</id>
        <link href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx"/>
        <updated>2022-11-09T20:47:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Keywords that are specified in the Parse Server option <code>requestKeywordDenylist</code> can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Configure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8301">https://github.com/parse-community/parse-server/pull/8301</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8302">https://github.com/parse-community/parse-server/pull/8302</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3">https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f">https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f</a></li>
<li><a href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/advisories/GHSA-xprv-wvh7-qqqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-09T20:47:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[octocat.js] Withdrawn: Octocat.js vulnerable to code injection]]></title>
        <id>https://github.com/advisories/GHSA-r4jg-5v89-9v62</id>
        <link href="https://github.com/advisories/GHSA-r4jg-5v89-9v62"/>
        <updated>2022-11-09T22:35:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn">Withdrawn</h2>
<p>This advisory has been withdrawn because it is a test.</p>
<h2 id="original-description">Original Description</h2>
<h3 id="impact">Impact</h3>
<p>Users can include their own images for accessories via provided URLs. These URLs are not validated and can result in execution of injected code.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was fixed in version 1.2 of octocat.js</p>
<h3 id="workarounds">Workarounds</h3>
<p>Directly exposing rendered images to a website can introduce the vulnerability to users. To avoid, writing an image to disk then using that image in an image element in HTML mitigates the risk.</p>
<h3 id="references">References</h3>
<p>To render the file correctly, see documentation at <code>readme.md</code></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/octocademy/octocat.js/issues">the octo.js repository</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/octocademy/octocat.js/security/advisories/GHSA-r4jg-5v89-9v62">https://github.com/octocademy/octocat.js/security/advisories/GHSA-r4jg-5v89-9v62</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39390">https://nvd.nist.gov/vuln/detail/CVE-2022-39390</a></li>
<li><a href="https://github.com/advisories/GHSA-r4jg-5v89-9v62">https://github.com/advisories/GHSA-r4jg-5v89-9v62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4jg-5v89-9v62</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-08T20:48:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-prm5-8g2m-24gg</id>
        <link href="https://github.com/advisories/GHSA-prm5-8g2m-24gg"/>
        <updated>2022-11-09T00:04:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8295">https://github.com/parse-community/parse-server/pull/8295</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8296">https://github.com/parse-community/parse-server/pull/8296</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.18">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.1">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prm5-8g2m-24gg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-08T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-prm5-8g2m-24gg</id>
        <link href="https://github.com/advisories/GHSA-prm5-8g2m-24gg"/>
        <updated>2022-11-09T00:04:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8295">https://github.com/parse-community/parse-server/pull/8295</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8296">https://github.com/parse-community/parse-server/pull/8296</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.18">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.1">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prm5-8g2m-24gg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-08T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fastest-json-copy] fastest-json-copy vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-p5g9-rjcf-95vj</id>
        <link href="https://github.com/advisories/GHSA-p5g9-rjcf-95vj"/>
        <updated>2022-11-08T14:49:19.000Z</updated>
        <content type="html"><![CDATA[<p>fastest-json-copy version 1.0.1 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41714">https://nvd.nist.gov/vuln/detail/CVE-2022-41714</a></li>
<li><a href="https://fluidattacks.com/advisories/guetta/">https://fluidattacks.com/advisories/guetta/</a></li>
<li><a href="https://github.com/streamich/fastest-json-copy">https://github.com/streamich/fastest-json-copy</a></li>
<li><a href="https://github.com/advisories/GHSA-p5g9-rjcf-95vj">https://github.com/advisories/GHSA-p5g9-rjcf-95vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p5g9-rjcf-95vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-parse-json] deep-parse-json vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</id>
        <link href="https://github.com/advisories/GHSA-ff9j-pwxg-q5p2"/>
        <updated>2022-11-08T14:49:06.000Z</updated>
        <content type="html"><![CDATA[<p>deep-parse-json version 1.0.2 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42743">https://nvd.nist.gov/vuln/detail/CVE-2022-42743</a></li>
<li><a href="https://fluidattacks.com/advisories/buuren/">https://fluidattacks.com/advisories/buuren/</a></li>
<li><a href="https://github.com/sibu-github/deep-parse-json/issues/6">https://github.com/sibu-github/deep-parse-json/issues/6</a></li>
<li><a href="https://github.com/advisories/GHSA-ff9j-pwxg-q5p2">https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-object-diff] deep-object-diff vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-653v-rqx9-j85p</id>
        <link href="https://github.com/advisories/GHSA-653v-rqx9-j85p"/>
        <updated>2022-11-08T14:48:52.000Z</updated>
        <content type="html"><![CDATA[<p>deep-object-diff version 1.1.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41713">https://nvd.nist.gov/vuln/detail/CVE-2022-41713</a></li>
<li><a href="https://fluidattacks.com/advisories/heldens/">https://fluidattacks.com/advisories/heldens/</a></li>
<li><a href="https://github.com/mattphillips/deep-object-diff/issues/85">https://github.com/mattphillips/deep-object-diff/issues/85</a></li>
<li><a href="https://github.com/advisories/GHSA-653v-rqx9-j85p">https://github.com/advisories/GHSA-653v-rqx9-j85p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-653v-rqx9-j85p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loader-utils] Prototype pollution in webpack loader-utils]]></title>
        <id>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</id>
        <link href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq"/>
        <updated>2022-11-07T22:14:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37601">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>
<li><a href="https://github.com/webpack/loader-utils/issues/212">https://github.com/webpack/loader-utils/issues/212</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v2.0.3">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/217">https://github.com/webpack/loader-utils/pull/217</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/220">https://github.com/webpack/loader-utils/pull/220</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v1.4.1">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loader-utils] Prototype pollution in webpack loader-utils]]></title>
        <id>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</id>
        <link href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq"/>
        <updated>2022-11-07T22:14:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37601">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>
<li><a href="https://github.com/webpack/loader-utils/issues/212">https://github.com/webpack/loader-utils/issues/212</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v2.0.3">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/217">https://github.com/webpack/loader-utils/pull/217</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/220">https://github.com/webpack/loader-utils/pull/220</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v1.4.1">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fastify-websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2022-11-07T03:03:20.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron-markdownify] Markdownify has Files or Directories Accessible to External Parties]]></title>
        <id>https://github.com/advisories/GHSA-qqhf-xfhw-7884</id>
        <link href="https://github.com/advisories/GHSA-qqhf-xfhw-7884"/>
        <updated>2022-11-04T20:49:17.000Z</updated>
        <content type="html"><![CDATA[<p>Markdownify version 1.4.1 allows an external attacker to remotely obtain arbitrary local files on any client that attempts to view a malicious markdown file through Markdownify. This is possible because the application does not have a CSP policy (or at least not strict enough) and/or does not properly validate the contents of markdown files before rendering them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41710">https://nvd.nist.gov/vuln/detail/CVE-2022-41710</a></li>
<li><a href="https://fluidattacks.com/advisories/noisestorm/">https://fluidattacks.com/advisories/noisestorm/</a></li>
<li><a href="https://github.com/amitmerchant1990/electron-markdownify">https://github.com/amitmerchant1990/electron-markdownify</a></li>
<li><a href="https://github.com/advisories/GHSA-qqhf-xfhw-7884">https://github.com/advisories/GHSA-qqhf-xfhw-7884</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qqhf-xfhw-7884</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@keystone-6/core] @keystone-6/core's NODE_ENV defaults to development with esbuild]]></title>
        <id>https://github.com/advisories/GHSA-25mx-2mxm-6343</id>
        <link href="https://github.com/advisories/GHSA-25mx-2mxm-6343"/>
        <updated>2022-11-04T20:35:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>@keystone-6/core@3.0.0 || 3.0.1</code> users that use <code>NODE_ENV</code> in their own code (<strong>not dependencies</strong>) to trigger security-sensitive functionality in a production build are vulnerable to <code>NODE_ENV</code> being inlined to <code>"development"</code> for user code.</p>
<p>If your dependencies use <code>NODE_ENV</code> to trigger particular behaviours (optimisations, security or otherwise), they should still respect your environment's configured <code>NODE_ENV</code> variable and thereby be unaffected.</p>
<p>If you do not use <code>NODE_ENV</code> in your own code to trigger security-sensitive functionality, <strong>you are not impacted</strong> by this vulnerability.
An example of code that would be affected, might be the following:</p>
<pre><code class="language-typescript">if (process.env.NODE_ENV !== 'production') {
  // this code would unintentionally run in your production builds
}
</code></pre>
<h3 id="technical-description">Technical Description</h3>
<p>The problem comes from esbuild defaulting <code>NODE_ENV</code> to <code>"development"</code> when a platform configuration is undefined.
You can read about why <a href="https://esbuild.github.io/api/#platform"><code>esbuild</code> has that behaviour in their documentation</a>, but the result for Keystone users is that user Typescript was compiled, and had inlined <code>NODE_ENV</code> to the constant <code>"development"</code>. </p>
<p>Your application's dependencies, as found in <code>node_modules</code> (including <code>@keystone-6/core</code>), are typically not compiled as part of this process, and thus should be unaffected. Therefore any libraries that used <code>NODE_ENV</code> to trigger particular behaviours (optimisations, security or otherwise) should still respect your environment's <code>NODE_ENV</code>.
We have tested this assumption by verifying that <code>NODE_ENV=production yarn keystone start</code> still uses secure cookies when using <code>statelessSessions</code>.</p>
<p>Thereby, the severity of this vulnerability is dependent on what functionality users conditionally triggered, in their own code, depending on the expectation that <code>NODE_ENV</code> would be correctly configured in their application. In accordance with Common Vulnerability Scoring System <code>2.3.3. Assume Vulnerable Configurations</code>, this security advisory assumes vulnerable configurations and is thus marked as <em>critical</em>, but you should evaluate the true security impact for your application to determine a relevant score.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been fixed in <code>@keystone-6/core@3.0.2</code>, thanks to @mmachatschek in <a href="https://github.com/keystonejs/keystone/pull/8031/">https://github.com/keystonejs/keystone/pull/8031/</a>.
We have added regression tests for this vulnerability in <a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade your <code>@keystone-6/core</code> version for any reason, your best alternative is to remove any code that uses <code>NODE_ENV</code> in a way that may reasonably impact your application security. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://esbuild.github.io/api/#platform">https://esbuild.github.io/api/#platform</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8031">https://github.com/keystonejs/keystone/pull/8031</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Thanks to <a href="https://github.com/acburdine">Austin Burdine</a> for reporting this problem as a potential security vulnerability.</p>
<p>If you have any questions around this security advisory, please don't hesitate to contact us at <a href="mailto:security@keystonejs.com">security@keystonejs.com</a>, or <a href="https://github.com/keystonejs/keystone/issues/new/choose">open an issue on GitHub</a>.</p>
<p>If you have a security flaw to report for any software in this repository, please see our <a href="https://github.com/keystonejs/keystone/blob/main/SECURITY.md">SECURITY policy</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/keystonejs/keystone/security/advisories/GHSA-25mx-2mxm-6343">https://github.com/keystonejs/keystone/security/advisories/GHSA-25mx-2mxm-6343</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39382">https://nvd.nist.gov/vuln/detail/CVE-2022-39382</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8031/">https://github.com/keystonejs/keystone/pull/8031/</a></li>
<li><a href="https://github.com/advisories/GHSA-25mx-2mxm-6343">https://github.com/advisories/GHSA-25mx-2mxm-6343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25mx-2mxm-6343</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-03T18:14:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@apollo/server] Batched HTTP requests may set incorrect `cache-control` response header]]></title>
        <id>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</id>
        <link href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3"/>
        <updated>2022-11-02T18:18:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Apollo Server 3 and 4, the <code>cache-control</code> HTTP response header may not reflect the cache policy that should apply to an HTTP request when that HTTP request contains multiple operations using HTTP batching. This could lead to data being inappropriately cached and shared.</p>
<p>Apollo Server allows clients to send multiple operations in a single HTTP request.  The results of these operations are returned in a single HTTP response, with a single set of headers.  Apollo Client Web and Apollo Kotlin both have opt-in features to use batched requests.</p>
<p>Apollo Server has several features relating to caching. This advisory is about the ability to set the <code>cache-control</code> response header based on field- and operation-specific cache hints. (It is not about the "response cache plugin".) This header can be interpreted by a reverse proxy such as a CDN in front of your server, or by a browser.</p>
<p>In Apollo Server 2, plugins such as the cache control plugin could not control the HTTP headers of responses to batch requests. This meant that batch requests never got the <code>cache-control</code> response header.</p>
<p>In Apollo Server 3 and 4, plugins can set HTTP response headers. But for batched requests, plugins essentially assemble a separate set of response headers in parallel for each operation, and then the header sets are merged together. If plugins set the same header on multiple operations, one value is chosen arbitrarily.</p>
<p>This meant that if a client sent a batched HTTP request with two operations with different cache policies, Apollo Server 3 and 4 would return a <code>cache-control</code> header that only applies to one of the operations. If one operation is allowed to be cached and the other operation is not allowed to be cached, the full response including both results could still end up being cached in a CDN or other reverse proxy cache.</p>
<p>Note that valid batched requests must be POST requests. (There's no defined format for sending batched requests over GET.) So in order for this incorrect <code>cache-control</code> header to have a harmful effect, a cache must allow caching POST requests. This means this bug is unlikely to cause incorrect caching in browser or mobile client caches, or in many reverse proxy/CDN caches.</p>
<p>This issue could lead to cache poisoning attacks. For example, if a client app regularly sends an operation that should not be cached due to its dependency on session-specific information in the same HTTP request as an operation that can be cached in a shared cache, an attacker could send its own version of the request to the server and manage to get the response to its request stored in the shared cache; other users would then see the response specific to the attacker for the first operation rather than the response for their own session. That said, we expect that in a system where this cache poisoning attack is feasible, normal operation would also run into the issue and users may have already disabled one of the features in order for their system to function properly.</p>
<h3 id="patches">Patches</h3>
<p>This issue is patched in Apollo Server v3.11.0 and v4.1.0. The issue resolved differently in the two versions.</p>
<p>If you are using Apollo Server 3, upgrade the package you depend on (eg <code>apollo-server</code> or <code>apollo-server-express</code>) to v3.11.0. This will restore the Apollo Server 2 behavior where the cache control plugin <em>never</em> sets the <code>cache-control</code> HTTP response header on batched requests. (Other cache-related features, like the response cache plugin, still function.)</p>
<p>If you are using Apollo Server 4, upgrade <code>@apollo/server</code> to v4.1.0. This upgrade makes the response HTTP header object seen by plugins shared among all plugins processing <em>all operations</em> on a request, and makes the cache control plugin merge <code>cache-control</code> header values across operations in a request. (Note that if you set the <code>cache-control</code> response header in your own plugin, Apollo Server v4.1.0's cache control plugin will not try to overwrite the value you set.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, you can disable either the HTTP batching feature or the <code>cache-control</code> header feature.</p>
<p>To disable HTTP batching in Apollo Server 3 (v3.5.0 or newer), pass <code>allowBatchedHttpRequests: false</code> to <code>new ApolloServer</code>.This is the default behavior for Apollo Server 4; in AS4, just make sure you're not passing <code>allowBatchedHttpRequests: true</code>. (You cannot disable batching in versions of Apollo Server 3 older than v3.5.0.)</p>
<p>To disable the <code>cache-control</code> header feature, add <code>ApolloServerPluginCacheControl({ calculateHttpHeaders: false })</code> to the <code>plugins</code> list in <code>new ApolloServer()</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/apollographql/apollo-server">the <code>apollo-server</code> repository</a></li>
<li>Email us at <a href="mailto:security@apollographql.com">security@apollographql.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19">https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850">https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850</a></li>
<li><a href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/advisories/GHSA-8r69-3cvp-wxc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-02T18:18:10.000Z</published>
    </entry>
</feed>