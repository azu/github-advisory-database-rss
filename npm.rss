<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-07-31T21:01:13.851Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@75lb/deep-merge] @75lb/deep-merge Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-28mc-g557-92m7</id>
        <link href="https://github.com/advisories/GHSA-28mc-g557-92m7"/>
        <updated>2024-07-31T15:29:36.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype Pollution in 75lb deep-merge 1.1.1 allows attackers to execute arbitrary code or cause a Denial of Service (DoS) and cause other impacts via merge methods of lodash to merge objects.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38986">https://nvd.nist.gov/vuln/detail/CVE-2024-38986</a></li>
<li><a href="https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb">https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb</a></li>
<li><a href="https://github.com/75lb/deep-merge/issues/1">https://github.com/75lb/deep-merge/issues/1</a></li>
<li><a href="https://github.com/advisories/GHSA-28mc-g557-92m7">https://github.com/advisories/GHSA-28mc-g557-92m7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-28mc-g557-92m7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-30T21:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fuel-ts/account] The fuels-ts typescript SDK has no awareness of to-be-spent transactions]]></title>
        <id>https://github.com/advisories/GHSA-3jcg-vx7f-j6qf</id>
        <link href="https://github.com/advisories/GHSA-3jcg-vx7f-j6qf"/>
        <updated>2024-07-30T21:37:55.000Z</updated>
        <content type="html"><![CDATA[<h1 id="briefintro">Brief/Intro</h1>
<p>The typescript SDK has no awareness of to-be-spent transactions causing some transactions to fail or silently get pruned as they are funded with already used UTXOs.</p>
<p>The <code>Typescript SDK</code> provides the <code>fund</code> function which retrieves <code>UTXOs</code>, which belong to the owner and can be used to fund the request in question, from fuel's graphql api. These then get added to the request making it possible to send it to the network as it now has inputs which can be spent by its outputs. Now this works when a user only wants to fund one transaction per block as in the next block, the spent UTXO will not exist anymore. However if a user wants to fund multiple transactions within one block, the following can happen:</p>
<p>It is important to note, that the graphql API will return a random UTXO which has enough value to fund the transaction in question.</p>
<ul>
<li>user has 2 spendable <code>UTXOs</code> in their wallet which can cover all expenses</li>
<li>user funds transaction <code>tA</code> with an input gotten from the API <code>iA</code></li>
<li>user submits <code>tA</code> to fuel</li>
<li><code>iA</code> is still in possession of the user as no new block has been produced</li>
<li>user funds a transaction <code>tB</code> and gets the same input <code>iA</code> from the API</li>
<li>user tries to submit transaction <code>tB</code> to fuel but now one of the following can happen:<ul>
<li>if the recipient and all other parameters are the same as in <code>tA</code>, submission will fail as <code>tB</code> will have the same <code>txHash</code> as <code>tA</code></li>
<li>if the parameters are different, there will be a collision in the <code>txpool</code> and <code>tA</code> will be removed from the <code>txpool</code></li>
</ul>
</li>
</ul>
<h1 id="vulnerability-details">Vulnerability Details</h1>
<p>The problem occurs, because the <code>fund</code> function in <code>fuels-ts/packages/account/src/account.ts</code> gets the needed ressources statelessly with the function <code>getResourcesToSpend</code> without taking into consideration already used UTXOs:</p>
<pre><code class="language-ts"> async fund&lt;T extends TransactionRequest&gt;(request: T, params: EstimatedTxParams): Promise&lt;T&gt; {

    // [...]

    let missingQuantities: CoinQuantity[] = [];
    Object.entries(quantitiesDict).forEach(([assetId, { owned, required }]) =&gt; {
      if (owned.lt(required)) {
        missingQuantities.push({
          assetId,
          amount: required.sub(owned),
        });
      }
    });

    let needsToBeFunded = missingQuantities.length &gt; 0;
    let fundingAttempts = 0;
    while (needsToBeFunded &amp;&amp; fundingAttempts &lt; MAX_FUNDING_ATTEMPTS) {
      const resources = await this.getResourcesToSpend(
        missingQuantities,
        cacheRequestInputsResourcesFromOwner(request.inputs, this.address)
      ); // @audit-issue here we do not exclude ids we already got and used for another transaction in the current block

      request.addResources(resources);

      // [...]
    }

    // [...]

    return request;
  }
</code></pre>
<h1 id="impact-details">Impact Details</h1>
<p>This issue will lead to unexpected SDK behaviour. Looking at the scenario in <code>Brief/Intro</code>, it could have the following impacts for users:</p>
<ol>
<li>A transaction does not get included in the <code>txpool</code> / in a block</li>
<li>A previous transaction silently gets removed from the <code>txpool</code> and replaced with a new one</li>
</ol>
<h1 id="recommendation">Recommendation</h1>
<p>I would recommend adding a buffer to the <code>Account</code> class, in which retrieved <code>resources</code> are saved. These can then be provided to <code>getResourcesToSpend</code> to be excluded from future queries but need to be removed from the buffer if their respective transaction fails to be included, in order to be able to use those <code>resources</code> again in such cases.</p>
<h1 id="proof-of-concept">Proof of Concept</h1>
<p>The following PoC transfers 100 coins from <code>wallet2</code> to <code>wallet</code> after which <code>wallet2</code> has two <code>UTXOs</code> one with value <code>100</code> and one with a very high value (this is printed to the console). Afterwards, <code>wallet</code> will attempt transfering <code>80</code> coins back to <code>wallet2</code> twice in one block, each in a separate transaction. This should work perfectly fine as <code>wallet</code> has two <code>UTXOs</code> where each can cover the cost of each respective transaction. Now when running this one of the following will happen:</p>
<ol>
<li>both transfers from <code>wallet</code> to <code>wallet2</code> get a different <code>UTXO</code>. This is the case if execution is successful and <code>wallet2</code> has <code>80</code> coins more than <code>wallet</code> in the end.</li>
<li>both transfers get the same <code>UTXO</code>. In this case the script will fail and throw an error as then both transactions will have the same hash</li>
</ol>
<p>In order to execute this PoC, please deploy a local node with a blocktime of <code>5secs</code> as I wrote my PoC for that blocktime. Note that with a small change it will also work with other blocktimes. Then add the PoC to a file <code>poc_resources.ts</code> and compile it with <code>tsc poc_resources.ts</code>. Finally execute it with <code>node poc_resources.js</code>.</p>
<p>Since the choice which <code>UTXO</code> is taken as input is random, it might take a few tries to trigger the bug!</p>
<pre><code class="language-ts">import { JsonAbi, Script, Provider, WalletUnlocked, Account, Predicate, Wallet, CoinQuantityLike, coinQuantityfy, EstimatedTxParams, BN, Coin, AbstractAddress, Address, Contract, ScriptTransactionRequest } from 'fuels';

const abi: JsonAbi = {
  'encoding': '1',
  'types': [
    {
      'typeId': 0,
      'type': '()',
      'components': [],
      'typeParameters': null
    }
  ],
  'functions': [
    {
      'inputs': [],
      'name': 'main',
      'output': {
        'name': '',
        'type': 0,
        'typeArguments': null
      },
      'attributes': null
    }
  ],
  'loggedTypes': [],
  'messagesTypes': [],
  'configurables': []
};

const FUEL_NETWORK_URL = 'http://127.0.0.1:4000/v1/graphql';

async function executeTransaction() {

  const provider = await Provider.create(FUEL_NETWORK_URL);
  
  const wallet: WalletUnlocked = Wallet.fromPrivateKey('0x37fa81c84ccd547c30c176b118d5cb892bdb113e8e80141f266519422ef9eefd', provider);
  const wallet2: WalletUnlocked = Wallet.fromPrivateKey('0xde97d8624a438121b86a1956544bd72ed68cd69f2c99555b08b1e8c51ffd511c', provider);
  const sleep = (ms: number) =&gt; new Promise((resolve) =&gt; setTimeout(resolve, ms));


  console.log("Balance wallet before: ", await wallet.getBalance());
  console.log("Balance wallet2 before: ", await wallet2.getBalance());

  wallet2.transfer(wallet.address, 100);

  await sleep(5500);


  await wallet.transfer(wallet2.address, 80);
  console.log('wallet -&gt; wallet2');

  await wallet.transfer(wallet2.address, 80);
  console.log('wallet -&gt; wallet2');

  console.log("Balance wallet after: ", await wallet.getBalance());
  console.log("Balance wallet2 after: ", await wallet2.getBalance());
};

executeTransaction().catch(console.error);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FuelLabs/fuels-ts/security/advisories/GHSA-3jcg-vx7f-j6qf">https://github.com/FuelLabs/fuels-ts/security/advisories/GHSA-3jcg-vx7f-j6qf</a></li>
<li><a href="https://github.com/FuelLabs/fuels-ts/commit/16ee1bfe66733551d00f0a76c21e8a09ea33006f">https://github.com/FuelLabs/fuels-ts/commit/16ee1bfe66733551d00f0a76c21e8a09ea33006f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41945">https://nvd.nist.gov/vuln/detail/CVE-2024-41945</a></li>
<li><a href="https://github.com/advisories/GHSA-3jcg-vx7f-j6qf">https://github.com/advisories/GHSA-3jcg-vx7f-j6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3jcg-vx7f-j6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-30T21:13:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nuxt] nuxt Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gc34-5v43-h7v8</id>
        <link href="https://github.com/advisories/GHSA-gc34-5v43-h7v8"/>
        <updated>2024-07-29T19:44:39.000Z</updated>
        <content type="html"><![CDATA[<p>he Nuxt dev server between versions 3.4.0 and 3.4.3 is vulnerable to code injection when it is exposed publicly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3224">https://nvd.nist.gov/vuln/detail/CVE-2023-3224</a></li>
<li><a href="https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff">https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff</a></li>
<li><a href="https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87">https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87</a></li>
<li><a href="https://github.com/nuxt/nuxt/commits/v3.4.3">https://github.com/nuxt/nuxt/commits/v3.4.3</a></li>
<li><a href="https://github.com/nuxt/nuxt/issues/21694">https://github.com/nuxt/nuxt/issues/21694</a></li>
<li><a href="https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507">https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507</a></li>
<li><a href="https://github.com/advisories/GHSA-gc34-5v43-h7v8">https://github.com/advisories/GHSA-gc34-5v43-h7v8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc34-5v43-h7v8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-13T18:30:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-xml-parser] fast-xml-parser vulnerable to ReDOS at currency parsing]]></title>
        <id>https://github.com/advisories/GHSA-mpg4-rc92-vx8v</id>
        <link href="https://github.com/advisories/GHSA-mpg4-rc92-vx8v"/>
        <updated>2024-07-29T19:47:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A ReDOS exists on currency.js  was discovered by Gauss Security Labs R&amp;D team.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10">https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10</a>
contains a vulnerable regex </p>
<h3 id="poc">PoC</h3>
<p>pass the following string '\t'.repeat(13337)  + '.'</p>
<h3 id="impact">Impact</h3>
<p>Denial of service during currency parsing in experimental version 5 of fast-xml-parser-library</p>
<p><a href="https://gauss-security.com">https://gauss-security.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164">https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10">https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41818">https://nvd.nist.gov/vuln/detail/CVE-2024-41818</a></li>
<li><a href="https://github.com/advisories/GHSA-mpg4-rc92-vx8v">https://github.com/advisories/GHSA-mpg4-rc92-vx8v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpg4-rc92-vx8v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-29T17:46:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[requirejs] jrburke requirejs vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</id>
        <link href="https://github.com/advisories/GHSA-x3m3-4wpv-5vgc"/>
        <updated>2024-07-25T15:25:41.000Z</updated>
        <content type="html"><![CDATA[<p>jrburke requirejs v2.3.6 was discovered to contain a prototype pollution via the function <code>s.contexts._.configure</code>. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38999">https://nvd.nist.gov/vuln/detail/CVE-2024-38999</a></li>
<li><a href="https://gist.github.com/mestrtee/9acae342285bd2998fa09ebcb1e6d30a">https://gist.github.com/mestrtee/9acae342285bd2998fa09ebcb1e6d30a</a></li>
<li><a href="https://github.com/requirejs/r.js/issues/1015">https://github.com/requirejs/r.js/issues/1015</a></li>
<li><a href="https://github.com/requirejs/requirejs/issues/1854">https://github.com/requirejs/requirejs/issues/1854</a></li>
<li><a href="https://github.com/requirejs/requirejs/pull/1856/commits/ebd7a2ff71473542fa132d0d15c10fb4ed1539e1">https://github.com/requirejs/requirejs/pull/1856/commits/ebd7a2ff71473542fa132d0d15c10fb4ed1539e1</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-REQUIREJS-5416713">https://security.snyk.io/vuln/SNYK-JS-REQUIREJS-5416713</a></li>
<li><a href="https://github.com/advisories/GHSA-x3m3-4wpv-5vgc">https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[systeminformation] Command Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2m8v-572m-ff2v</id>
        <link href="https://github.com/advisories/GHSA-2m8v-572m-ff2v"/>
        <updated>2024-07-25T15:00:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>command injection vulnerability</p>
<h3 id="patches">Patches</h3>
<p>Problem was fixed with a parameter check. Please upgrade to version &gt;= 5.3.1</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade, be sure to check or sanitize service parameters that are passed to si.inetLatency(), si.inetChecksite(), si.services(), si.processLoad() ... do only allow strings, reject any arrays. String sanitation works as expected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sebhildebrandt/systeminformation/security/advisories/GHSA-2m8v-572m-ff2v">https://github.com/sebhildebrandt/systeminformation/security/advisories/GHSA-2m8v-572m-ff2v</a></li>
<li><a href="https://github.com/sebhildebrandt/systeminformation/commit/07daa05fb06f24f96297abaa30c2ace8bfd8b525">https://github.com/sebhildebrandt/systeminformation/commit/07daa05fb06f24f96297abaa30c2ace8bfd8b525</a></li>
<li><a href="https://www.npmjs.com/package/systeminformation">https://www.npmjs.com/package/systeminformation</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21315">https://nvd.nist.gov/vuln/detail/CVE-2021-21315</a></li>
<li><a href="https://lists.apache.org/thread.html/r8afea9a83ed568f2647cccc6d8d06126f9815715ddf9a4d479b26b05@%3Cissues.cordova.apache.org%3E">https://lists.apache.org/thread.html/r8afea9a83ed568f2647cccc6d8d06126f9815715ddf9a4d479b26b05@%3Cissues.cordova.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r8afea9a83ed568f2647cccc6d8d06126f9815715ddf9a4d479b26b05%40%3Cissues.cordova.apache.org%3E">https://lists.apache.org/thread.html/r8afea9a83ed568f2647cccc6d8d06126f9815715ddf9a4d479b26b05%40%3Cissues.cordova.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0007">https://security.netapp.com/advisory/ntap-20210312-0007</a></li>
<li><a href="https://github.com/advisories/GHSA-2m8v-572m-ff2v">https://github.com/advisories/GHSA-2m8v-572m-ff2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2m8v-572m-ff2v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-02-16T16:51:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vue-template-compiler] vue-template-compiler vulnerable to client-side Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-g3ch-rx76-35fx</id>
        <link href="https://github.com/advisories/GHSA-g3ch-rx76-35fx"/>
        <updated>2024-07-23T16:26:54.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been discovered in vue-template-compiler, that allows an attacker to perform XSS via prototype pollution. The attacker could change the prototype chain of some properties such as <code>Object.prototype.staticClass</code> or <code>Object.prototype.staticStyle</code> to execute arbitrary JavaScript code. Vue 2 has reached End-of-Life. This vulnerability has been patched in Vue 3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6783">https://nvd.nist.gov/vuln/detail/CVE-2024-6783</a></li>
<li><a href="https://www.herodevs.com/vulnerability-directory/cve-2024-6783---vue-client-side-xss">https://www.herodevs.com/vulnerability-directory/cve-2024-6783---vue-client-side-xss</a></li>
<li><a href="https://github.com/advisories/GHSA-g3ch-rx76-35fx">https://github.com/advisories/GHSA-g3ch-rx76-35fx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3ch-rx76-35fx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-23T15:31:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tf2-item-format] (ReDoS) Regular Expression Denial of Service in tf2-item-format]]></title>
        <id>https://github.com/advisories/GHSA-8h55-q5qq-p685</id>
        <link href="https://github.com/advisories/GHSA-8h55-q5qq-p685"/>
        <updated>2024-07-23T15:51:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Versions of <code>tf2-item-format</code> since at least <code>4.2.6</code> are vulnerable to a Regular Expression Denial of Service (ReDoS) attack when parsing crafted user input. </p>
<h2 id="tested-versions">Tested Versions</h2>
<ul>
<li><code>5.9.13</code></li>
<li><code>5.8.10</code></li>
<li><code>5.7.0</code></li>
<li><code>5.6.17</code></li>
<li><code>4.3.5</code></li>
<li><code>4.2.6</code></li>
</ul>
<h3 id="v5">v5</h3>
<p>Upgrade package to <code>^5.9.14</code></p>
<h3 id="v4">v4</h3>
<p>No patch exists. Please consult the <a href="https://github.com/danocmx/node-tf2-item-format?tab=readme-ov-file#migrating-from-v4-to-v5">v4 to v5 migration guide</a> to upgrade to v5.</p>
<p>If upgrading to v5 is not possible, fork the module repository and implement the fix detailed below.</p>
<h2 id="impact">Impact</h2>
<p>This vulnerability can be exploited by an attacker to perform DoS attacks on any service that uses any <code>tf2-item-format</code> to parse user input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/danocmx/node-tf2-item-format/security/advisories/GHSA-8h55-q5qq-p685">https://github.com/danocmx/node-tf2-item-format/security/advisories/GHSA-8h55-q5qq-p685</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41655">https://nvd.nist.gov/vuln/detail/CVE-2024-41655</a></li>
<li><a href="https://github.com/danocmx/node-tf2-item-format/commit/5cffcc16a9261d6a937bda72bfe6830e02e31eec">https://github.com/danocmx/node-tf2-item-format/commit/5cffcc16a9261d6a937bda72bfe6830e02e31eec</a></li>
<li><a href="https://github.com/danocmx/node-tf2-item-format/releases/tag/v5.9.14">https://github.com/danocmx/node-tf2-item-format/releases/tag/v5.9.14</a></li>
<li><a href="https://github.com/advisories/GHSA-8h55-q5qq-p685">https://github.com/advisories/GHSA-8h55-q5qq-p685</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8h55-q5qq-p685</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-23T14:10:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</id>
        <link href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9"/>
        <updated>2024-07-22T20:09:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.</p>
<pre><code>TypeError: Cannot convert object to primitive value
       at Socket.emit (node:events:507:25)
       at .../node_modules/socket.io/lib/socket.js:531:14
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released today (2023/05/22):</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a>, included in <code>socket.io-parser@4.2.3</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a>, included in <code>socket.io-parser@3.4.3</code></li>
</ul>
<p>Another fix has been released for the <code>3.3.x</code> branch:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a>, included in `<a href="mailto:socket.io-parser@3.3.4">socket.io-parser@3.3.4</a></li>
</ul>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Needs minor update?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>2.3.0...2.5.0</code></td>
<td><code>~3.4.0</code> (<a href="https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround except upgrading to a safe version.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion <a href="https://github.com/socketio/socket.io/discussions">here</a></li>
</ul>
<p>Thanks to <a href="https://github.com/rafax00">@rafax00</a> for the responsible disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9">https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32695">https://nvd.nist.gov/vuln/detail/CVE-2023-32695</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/releases/tag/4.2.3">https://github.com/socketio/socket.io-parser/releases/tag/4.2.3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a></li>
<li><a href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/advisories/GHSA-cqmj-92xf-r6r9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:55:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</id>
        <link href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9"/>
        <updated>2024-07-22T20:09:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.</p>
<pre><code>TypeError: Cannot convert object to primitive value
       at Socket.emit (node:events:507:25)
       at .../node_modules/socket.io/lib/socket.js:531:14
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released today (2023/05/22):</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a>, included in <code>socket.io-parser@4.2.3</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a>, included in <code>socket.io-parser@3.4.3</code></li>
</ul>
<p>Another fix has been released for the <code>3.3.x</code> branch:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a>, included in `<a href="mailto:socket.io-parser@3.3.4">socket.io-parser@3.3.4</a></li>
</ul>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Needs minor update?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>2.3.0...2.5.0</code></td>
<td><code>~3.4.0</code> (<a href="https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround except upgrading to a safe version.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion <a href="https://github.com/socketio/socket.io/discussions">here</a></li>
</ul>
<p>Thanks to <a href="https://github.com/rafax00">@rafax00</a> for the responsible disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9">https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32695">https://nvd.nist.gov/vuln/detail/CVE-2023-32695</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/releases/tag/4.2.3">https://github.com/socketio/socket.io-parser/releases/tag/4.2.3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a></li>
<li><a href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/advisories/GHSA-cqmj-92xf-r6r9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:55:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</id>
        <link href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9"/>
        <updated>2024-07-22T20:09:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.</p>
<pre><code>TypeError: Cannot convert object to primitive value
       at Socket.emit (node:events:507:25)
       at .../node_modules/socket.io/lib/socket.js:531:14
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released today (2023/05/22):</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a>, included in <code>socket.io-parser@4.2.3</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a>, included in <code>socket.io-parser@3.4.3</code></li>
</ul>
<p>Another fix has been released for the <code>3.3.x</code> branch:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a>, included in `<a href="mailto:socket.io-parser@3.3.4">socket.io-parser@3.3.4</a></li>
</ul>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Needs minor update?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>2.3.0...2.5.0</code></td>
<td><code>~3.4.0</code> (<a href="https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround except upgrading to a safe version.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion <a href="https://github.com/socketio/socket.io/discussions">here</a></li>
</ul>
<p>Thanks to <a href="https://github.com/rafax00">@rafax00</a> for the responsible disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9">https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32695">https://nvd.nist.gov/vuln/detail/CVE-2023-32695</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/releases/tag/4.2.3">https://github.com/socketio/socket.io-parser/releases/tag/4.2.3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4">https://github.com/socketio/socket.io-parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4</a></li>
<li><a href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/advisories/GHSA-cqmj-92xf-r6r9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:55:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lunary] lunary-ai/lunary XSS in SAML metadata endpoint]]></title>
        <id>https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</id>
        <link href="https://github.com/advisories/GHSA-rpx8-fg6w-rm6x"/>
        <updated>2024-07-19T19:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-site Scripting (XSS) vulnerability exists in the SAML metadata endpoint <code>/auth/saml/${org?.id}/metadata</code> of lunary-ai/lunary version 1.2.7. The vulnerability arises due to the application's failure to escape or validate the <code>orgId</code> parameter supplied by the user before incorporating it into the generated response. Specifically, the endpoint generates XML responses for SAML metadata, where the <code>orgId</code> parameter is directly embedded into the XML structure without proper sanitization or validation. This flaw allows an attacker to inject arbitrary JavaScript code into the generated SAML metadata page, leading to potential theft of user cookies or authentication tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5478">https://nvd.nist.gov/vuln/detail/CVE-2024-5478</a></li>
<li><a href="https://huntr.com/bounties/e899f496-d493-4c06-b596-cb0a88ad451b">https://huntr.com/bounties/e899f496-d493-4c06-b596-cb0a88ad451b</a></li>
<li><a href="https://github.com/lunary-ai/lunary/blob/main/packages/backend/src/api/v1/auth/saml.ts#L34">https://github.com/lunary-ai/lunary/blob/main/packages/backend/src/api/v1/auth/saml.ts#L34</a></li>
<li><a href="https://github.com/advisories/GHSA-rpx8-fg6w-rm6x">https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@zowe/cli] Zowe CLI allows storage of previously entered secure credentials in a plaintext file]]></title>
        <id>https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</id>
        <link href="https://github.com/advisories/GHSA-ghgq-x6wc-6jr5"/>
        <updated>2024-07-17T19:30:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Zowe CLI allows local, privileged actors to store previously entered secure credentials in a plaintext file as part of an auto-init operation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6833">https://nvd.nist.gov/vuln/detail/CVE-2024-6833</a></li>
<li><a href="https://github.com/zowe/zowe-cli">https://github.com/zowe/zowe-cli</a></li>
<li><a href="https://github.com/zowe/zowe-cli/commit/6778da5e03c65dfcd3e6e4b4097b94d9fbd5d01b">https://github.com/zowe/zowe-cli/commit/6778da5e03c65dfcd3e6e4b4097b94d9fbd5d01b</a></li>
<li><a href="https://github.com/advisories/GHSA-ghgq-x6wc-6jr5">https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T15:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsdom] Withdrawn Advisory: Insufficient Granularity of Access Control in JSDom]]></title>
        <id>https://github.com/advisories/GHSA-f4c9-cqv8-9v98</id>
        <link href="https://github.com/advisories/GHSA-f4c9-cqv8-9v98"/>
        <updated>2024-07-19T18:34:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="withdrawn-advisory">Withdrawn Advisory</h1>
<p>This advisory has been withdrawn because the user must configure jsdom to allow access to local files.</p>
<h1 id="original-description">Original Description</h1>
<p>JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-20066">https://nvd.nist.gov/vuln/detail/CVE-2021-20066</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2021-05">https://www.tenable.com/security/research/tra-2021-05</a></li>
<li><a href="https://github.com/jsdom/jsdom/issues/3124">https://github.com/jsdom/jsdom/issues/3124</a></li>
<li><a href="https://github.com/jsdom/jsdom/issues/3124#issuecomment-783502951">https://github.com/jsdom/jsdom/issues/3124#issuecomment-783502951</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-JSDOM-1075447">https://security.snyk.io/vuln/SNYK-JS-JSDOM-1075447</a></li>
<li><a href="https://github.com/advisories/GHSA-f4c9-cqv8-9v98">https://github.com/advisories/GHSA-f4c9-cqv8-9v98</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4c9-cqv8-9v98</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:42:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-fetch] The `size` option isn't honored after following a redirect in node-fetch]]></title>
        <id>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</id>
        <link href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r"/>
        <updated>2024-07-15T19:46:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Node Fetch did not honor the <code>size</code> option after following a redirect, which means that when a content size was over the limit, a <code>FetchError</code> would never get thrown and the process would end without failure.</p>
<p>For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after <code>fetch()</code> has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.</p>
<h3 id="patches">Patches</h3>
<p>We released patched versions for both stable and beta channels:</p>
<ul>
<li>For <code>v2</code>: 2.6.1</li>
<li>For <code>v3</code>: 3.0.0-beta.9</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly recommended to update as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/node-fetch/node-fetch/issues/new?assignees=&amp;labels=question&amp;template=support-or-usage.md&amp;title=Question%3A+">node-fetch</a></li>
<li>Contact one of the core maintainers.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15168">https://nvd.nist.gov/vuln/detail/CVE-2020-15168</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334">https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072">https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072</a></li>
<li><a href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2020-09-10T17:46:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-fetch] The `size` option isn't honored after following a redirect in node-fetch]]></title>
        <id>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</id>
        <link href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r"/>
        <updated>2024-07-15T19:46:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Node Fetch did not honor the <code>size</code> option after following a redirect, which means that when a content size was over the limit, a <code>FetchError</code> would never get thrown and the process would end without failure.</p>
<p>For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after <code>fetch()</code> has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.</p>
<h3 id="patches">Patches</h3>
<p>We released patched versions for both stable and beta channels:</p>
<ul>
<li>For <code>v2</code>: 2.6.1</li>
<li>For <code>v3</code>: 3.0.0-beta.9</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly recommended to update as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/node-fetch/node-fetch/issues/new?assignees=&amp;labels=question&amp;template=support-or-usage.md&amp;title=Question%3A+">node-fetch</a></li>
<li>Contact one of the core maintainers.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15168">https://nvd.nist.gov/vuln/detail/CVE-2020-15168</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334">https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072">https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072</a></li>
<li><a href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2020-09-10T17:46:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@udecode/plate-media] Plate media plugins has a XSS in media embed element when using custom URL parsers]]></title>
        <id>https://github.com/advisories/GHSA-h3pq-667x-r789</id>
        <link href="https://github.com/advisories/GHSA-h3pq-667x-r789"/>
        <updated>2024-07-15T21:38:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Editors that use <code>MediaEmbedElement</code> and pass custom <code>urlParsers</code> to the <code>useMediaState</code> hook may be vulnerable to XSS if a custom parser allows <code>javascript:</code>, <code>data:</code> or <code>vbscript:</code> URLs to be embedded. Editors that do not use <code>urlParsers</code> and instead consume the <code>url</code> property directly may also be vulnerable if the URL is not sanitised.</p>
<p>The default parsers <code>parseTwitterUrl</code> and <code>parseVideoUrl</code> are not affected.</p>
<p>Examples of vulnerable code:</p>
<pre><code class="language-tsx">const { embed } = useMediaState({
  urlParsers: [
    // Custom parser that does not use an allowlist or validate the URL protocol
    (url) =&gt; ({ url }),
  ],
});

return (
  &lt;iframe
    src={embed!.url}
    // ...
  /&gt;
);
</code></pre>
<pre><code class="language-tsx">const { url } = useMediaState();

return (
  &lt;iframe
    // url property used directly from useMediaState() with no sanitisation
    src={url}
    // ...
  /&gt;
);
</code></pre>
<pre><code class="language-tsx">const { url } = element;

return (
  &lt;iframe
    // url property used directly from element with no sanitisation
    src={url}
    // ...
  /&gt;
);
</code></pre>
<h3 id="patches">Patches</h3>
<p><code>@udecode/plate-media</code> 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the <code>embed</code> property returned from <code>useMediaState</code>.</p>
<p>In addition, the <code>url</code> property returned from <code>useMediaState</code> has been renamed to <code>unsafeUrl</code> to indicate that it has not been sanitised. The <code>url</code> property on <code>element</code> is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that any custom <code>urlParsers</code> do not allow <code>javascript:</code>, <code>data:</code> or <code>vbscript:</code> URLs to be returned in the <code>url</code> property of their return values.</p>
<p>If <code>url</code> is consumed directly, validate the URL protocol before passing it to the <code>iframe</code> element.</p>
<h3 id="references">References</h3>
<p>How to verify the protocol of a URL: <a href="https://stackoverflow.com/a/43467144">https://stackoverflow.com/a/43467144</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789">https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789</a></li>
<li><a href="https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0">https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40631">https://nvd.nist.gov/vuln/detail/CVE-2024-40631</a></li>
<li><a href="https://stackoverflow.com/a/43467144">https://stackoverflow.com/a/43467144</a></li>
<li><a href="https://github.com/advisories/GHSA-h3pq-667x-r789">https://github.com/advisories/GHSA-h3pq-667x-r789</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3pq-667x-r789</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-15T18:33:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@jmondi/url-to-png] @jmondi/url-to-png enables capture screenshot of localhost web services (unauthenticated pages)]]></title>
        <id>https://github.com/advisories/GHSA-342q-2mc2-5gmp</id>
        <link href="https://github.com/advisories/GHSA-342q-2mc2-5gmp"/>
        <updated>2024-07-15T21:38:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The maintainer been contemplating whether FTP or other protocols could serve as useful functionalities, but there may not be a practical reason for it since we are utilizing headless Chrome to capture screenshots. The argument is based on the assumption that this package can function as a service.</p>
<p>The package includes an <code>ALLOW_LIST</code> where the host can specify which services the user is permitted to capture screenshots of. By default, capturing screenshots of web services running on localhost, 127.0.0.1, or the [::] is allowed.</p>
<p>The maintainer is of the opinion that the package should also have a blacklist due to a potential vulnerability (or rather design oversight). If someone hosts this on a server, users could then capture screenshots of other web services running locally.</p>
<p>Unless this is strictly for web pages. Something similar here: <a href="https://github.com/follow-redirects/follow-redirects/issues/235">https://github.com/follow-redirects/follow-redirects/issues/235</a> (localhost is intended for end users or hosts to deny, and the package is for HTTP/HTTPS.)</p>
<p>This is marked as a <code>LOW</code> since the maintainer is not sure if this is a vulnerability, but it's still best to highlight it. :) </p>
<h3 id="poc">PoC</h3>
<p>Have a service like so running locally:</p>
<pre><code class="language-js">const http = require("http")

const server = http.createServer((req, res) =&gt; {
  console.log("Received headers:", req.headers)
  res.writeHead(200, { "Content-Type": "text/plain" })
  res.end("Something private! But Hello from Server 2 :)")
})

server.listen(3001, () =&gt; {
  console.log("Server two running on http://localhost:3001")
})
</code></pre>
<p>Run the package in dev mode, <code>pnpm dev</code>. Feed these URLs:</p>
<pre><code>http://localhost:3089/?url=http://[::]:3001&amp;width=4000
http://localhost:3089/?url=http://localhost:3001&amp;width=4000
http://localhost:3089/?url=http://127.0.01:3001&amp;width=4000
</code></pre>
<img src="https://github.com/jasonraimondi/url-to-png/assets/42532003/21f1c883-ba00-4a15-83b8-922484fa4c2b" alt="image" width="622">



<h3 id="impact">Impact</h3>
<p>Disclose internal web services?</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-342q-2mc2-5gmp">https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-342q-2mc2-5gmp</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/commit/f62ff40403ffa1781459d6be8d97b8035888c00c">https://github.com/jasonraimondi/url-to-png/commit/f62ff40403ffa1781459d6be8d97b8035888c00c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39919">https://nvd.nist.gov/vuln/detail/CVE-2024-39919</a></li>
<li><a href="https://github.com/advisories/GHSA-342q-2mc2-5gmp">https://github.com/advisories/GHSA-342q-2mc2-5gmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-342q-2mc2-5gmp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-15T17:47:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@jmondi/url-to-png] @jmondi/url-to-png contains a Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</id>
        <link href="https://github.com/advisories/GHSA-vvmv-wrvp-9gjr"/>
        <updated>2024-07-15T21:38:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When trying to add a <code>BLOCK_LIST</code> feature when the maintainer noticed they didn't sanitize the <code>ImageId</code> in the code, which leads to path traversal vulnerability. Now, this is different from a traditional path traversal issue, because as of NOW you can store the image in any place arbitrarily, and given enough time they might be able to come up with a working exploit BUT for the time being they am reporting this.  </p>
<h3 id="details">Details</h3>
<p>@jmondi/url-to-png does not sanitizing the <code>ImageID</code> as in not removing special chars from the params <a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">(extract_query_params.ts#l75)</a></p>
<pre><code class="language-js">const imageId = dateString + "." + slugify(validData.url) +configToString(params);
</code></pre>
<p>This when fed to other parts of the code such as (<a href="https://github.com/jasonraimondi/url-to-png/blob/8afc00247c1d7e6c7b37356a5f6282b486e596fa/src/lib/storage/filesystem.ts#L34">filesystem.ts#L34</a>)</p>
<pre><code class="language-js">return path.join(this.storagePath, imageId) + ".png";
</code></pre>
<p>Would result in path traversal issue. </p>
<h3 id="poc">PoC</h3>
<pre><code># Configuration for filesystem storage provider (optional)
STORAGE_PROVIDER=filesystem
IMAGE_STORAGE_PATH=poc
</code></pre>
<p>Set this in your <code>.env</code> file and use this as your payload. </p>
<pre><code>http://localhost:3089/?url=http://example.com&amp;width=400&amp;isDarkMode=../../../../../../../../../../../../tmp/hack
</code></pre>
<p>This will create a <code>.png</code> file in the <code>/tmp</code> section of the system.</p>
<p>Loom POC: <a href="https://www.loom.com/share/bd7b306cdae7445c97e68f0626e743a6">https://www.loom.com/share/bd7b306cdae7445c97e68f0626e743a6</a> </p>
<p>This is valid for pretty much all the arguments (except for numeric values)</p>
<p>A simple fix would be to use the <code>slugify</code> for the params as well like so (<a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">#L75</a>)</p>
<pre><code class="language-diff">- const imageId = dateString + "." + slugify(validData.url) + configToString(params);
+ const imageId = dateString + "." + slugify(validData.url) + slugify(configToString(params));
</code></pre>
<h3 id="impact">Impact</h3>
<p>This would be path traversal vulnerability which allows arbitrary write as of now. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-vvmv-wrvp-9gjr">https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-vvmv-wrvp-9gjr</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/commit/e4eaeca6493b21cd515b582fd6c0af09ede54507">https://github.com/jasonraimondi/url-to-png/commit/e4eaeca6493b21cd515b582fd6c0af09ede54507</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/releases/tag/v2.1.2">https://github.com/jasonraimondi/url-to-png/releases/tag/v2.1.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39918">https://nvd.nist.gov/vuln/detail/CVE-2024-39918</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75</a></li>
<li><a href="https://github.com/advisories/GHSA-vvmv-wrvp-9gjr">https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-15T17:46:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-enterprise] ag-grid packages vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-328p-362g-r48j</id>
        <link href="https://github.com/advisories/GHSA-328p-362g-r48j"/>
        <updated>2024-07-12T14:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-enterprise v31.3.2 was discovered to contain a prototype pollution via the component _ModuleSupport.jsonApply. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39001">https://nvd.nist.gov/vuln/detail/CVE-2024-39001</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/issues/8261">https://github.com/ag-grid/ag-grid/issues/8261</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522">https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522</a></li>
<li><a href="https://www.ag-grid.com/changelog/?fixVersion=32.0.1">https://www.ag-grid.com/changelog/?fixVersion=32.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-328p-362g-r48j">https://github.com/advisories/GHSA-328p-362g-r48j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-328p-362g-r48j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:20.000Z</published>
    </entry>
</feed>