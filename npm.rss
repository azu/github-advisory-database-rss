<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-04-05T13:01:21.591Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[babel-traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code]]></title>
        <id>https://github.com/advisories/GHSA-67hx-6x53-jw92</id>
        <link href="https://github.com/advisories/GHSA-67hx-6x53-jw92"/>
        <updated>2024-04-04T14:26:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>
<p>Known affected plugins are:</p>
<ul>
<li><code>@babel/plugin-transform-runtime</code></li>
<li><code>@babel/preset-env</code> when using its <a href="https://babeljs.io/docs/babel-preset-env#usebuiltins"><code>useBuiltIns</code></a> option</li>
<li>Any "polyfill provider" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>
</ul>
<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>
<p><strong>Users that only compile trusted code are not impacted.</strong></p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>
<p>Babel 6 does not receive security fixes anymore (see <a href="https://github.com/babel/babel/security/policy">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>
<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>
<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>
<li><code>@babel/preset-env</code> v7.23.2</li>
<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>
<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>
<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>
<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>
<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>
</ul>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45133">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>
<li><a href="https://github.com/babel/babel/pull/16033">https://github.com/babel/babel/pull/16033</a></li>
<li><a href="https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v7.23.2">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5528">https://www.debian.org/security/2023/dsa-5528</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html">https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</a></li>
<li><a href="https://babeljs.io/blog/2023/10/16/cve-2023-45133">https://babeljs.io/blog/2023/10/16/cve-2023-45133</a></li>
<li><a href="https://github.com/advisories/GHSA-67hx-6x53-jw92">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67hx-6x53-jw92</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-16T13:55:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dectalk-tts] dectalk-tts Uses Unencrypted HTTP Request]]></title>
        <id>https://github.com/advisories/GHSA-6cf6-8hvr-r68w</id>
        <link href="https://github.com/advisories/GHSA-6cf6-8hvr-r68w"/>
        <updated>2024-04-04T14:21:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In <code>dectalk-tts@1.0.0</code>, network requests to the third-party API are sent over HTTP, which is unencrypted. Unencrypted traffic can be easily intercepted and modified by attackers. Anyone who uses the package could be the victim of a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">man-in-the-middle (MITM)</a> attack.</p>
<p><ins>Theft</ins></p>
<p>Because <code>dectalk-tts</code> is a text-to-speech package, user requests are expected to only contain natural language. The package <a href="https://github.com/JstnMcBrd/dectalk-tts/blob/main/README.md">README</a> warns that user input is sent to a third-party API, so users should not send sensitive information regardless.</p>
<p>But if users ignore the warnings and send sensitive information anyway, that information could be stolen by attackers.</p>
<p><ins>Modification</ins></p>
<p>Attackers could manipulate requests to the API. However, the worst a modified request could do is return an incorrect audio file or bad request rejection.</p>
<p>Attackers could also manipulate responses from the API, returning malicious output to the user. Output is expected to be a wav-encoded buffer, which users will likely save to a file. This could be a dangerous entrypoint to the user's filesystem.</p>
<h3 id="patches">Patches</h3>
<p>The network request was upgraded to HTTPS in version <code>1.0.1</code>. No other changes were made, so updating is risk-free.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds, but here are some precautions:</p>
<ul>
<li><p>Do not send any sensitive information.</p>
</li>
<li><p>Carefully verify the API response before saving it.</p>
</li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18">Vulnerable code</a>
<a href="https://github.com/JstnMcBrd/dectalk-tts/issues/3">Original report</a>
<a href="https://github.com/JstnMcBrd/dectalk-tts/pull/4">Patch pull request</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/security/advisories/GHSA-6cf6-8hvr-r68w">https://github.com/JstnMcBrd/dectalk-tts/security/advisories/GHSA-6cf6-8hvr-r68w</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/issues/3">https://github.com/JstnMcBrd/dectalk-tts/issues/3</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/pull/4">https://github.com/JstnMcBrd/dectalk-tts/pull/4</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/commit/3600d8ac156f27da553ac4ead46d16989a350105">https://github.com/JstnMcBrd/dectalk-tts/commit/3600d8ac156f27da553ac4ead46d16989a350105</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18">https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18</a></li>
<li><a href="https://github.com/advisories/GHSA-6cf6-8hvr-r68w">https://github.com/advisories/GHSA-6cf6-8hvr-r68w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cf6-8hvr-r68w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-04T14:21:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's fetch with integrity option is too lax when algorithm is specified but hash value is in incorrect]]></title>
        <id>https://github.com/advisories/GHSA-9qxr-qj54-h672</id>
        <link href="https://github.com/advisories/GHSA-9qxr-qj54-h672"/>
        <updated>2024-04-04T16:25:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If an attacker can alter the <code>integrity</code> option passed to <code>fetch()</code>, they can let <code>fetch()</code> accept requests as valid even if they have been tampered.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that <code>integrity</code> cannot be tampered with.</p>
<h3 id="references">References</h3>
<p><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672">https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672</a></li>
<li><a href="https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055">https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055</a></li>
<li><a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a></li>
<li><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30261">https://nvd.nist.gov/vuln/detail/CVE-2024-30261</a></li>
<li><a href="https://github.com/advisories/GHSA-9qxr-qj54-h672">https://github.com/advisories/GHSA-9qxr-qj54-h672</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qxr-qj54-h672</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's fetch with integrity option is too lax when algorithm is specified but hash value is in incorrect]]></title>
        <id>https://github.com/advisories/GHSA-9qxr-qj54-h672</id>
        <link href="https://github.com/advisories/GHSA-9qxr-qj54-h672"/>
        <updated>2024-04-04T16:25:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If an attacker can alter the <code>integrity</code> option passed to <code>fetch()</code>, they can let <code>fetch()</code> accept requests as valid even if they have been tampered.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that <code>integrity</code> cannot be tampered with.</p>
<h3 id="references">References</h3>
<p><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672">https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672</a></li>
<li><a href="https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055">https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055</a></li>
<li><a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a></li>
<li><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30261">https://nvd.nist.gov/vuln/detail/CVE-2024-30261</a></li>
<li><a href="https://github.com/advisories/GHSA-9qxr-qj54-h672">https://github.com/advisories/GHSA-9qxr-qj54-h672</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qxr-qj54-h672</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's Proxy-Authorization header not cleared on cross-origin redirect for dispatch, request, stream, pipeline]]></title>
        <id>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</id>
        <link href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7"/>
        <updated>2024-04-04T20:24:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Undici cleared Authorization and Proxy-Authorization headers for <code>fetch()</code>, but did not clear them for <code>undici.request()</code>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in <a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>use <code>fetch()</code> or disable <code>maxRedirections</code>.</p>
<h3 id="references">References</h3>
<p>Linzi Shang reported this.</p>
<ul>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3">https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
<li><a href="https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f">https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f</a></li>
<li><a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a></li>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30260">https://nvd.nist.gov/vuln/detail/CVE-2024-30260</a></li>
<li><a href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's Proxy-Authorization header not cleared on cross-origin redirect for dispatch, request, stream, pipeline]]></title>
        <id>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</id>
        <link href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7"/>
        <updated>2024-04-04T20:24:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Undici cleared Authorization and Proxy-Authorization headers for <code>fetch()</code>, but did not clear them for <code>undici.request()</code>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in <a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>use <code>fetch()</code> or disable <code>maxRedirections</code>.</p>
<h3 id="references">References</h3>
<p>Linzi Shang reported this.</p>
<ul>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3">https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
<li><a href="https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f">https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f</a></li>
<li><a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a></li>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30260">https://nvd.nist.gov/vuln/detail/CVE-2024-30260</a></li>
<li><a href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json-pointer] json-pointer vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-6xrf-q977-5vgc</id>
        <link href="https://github.com/advisories/GHSA-6xrf-q977-5vgc"/>
        <updated>2024-04-04T13:49:58.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, has been found in json-pointer up to 0.6.1. Affected by this issue is the function set of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. Upgrading to version 0.6.2 is able to address this issue. The patch is identified as 859c9984b6c407fc2d5a0a7e47c7274daa681941. It is recommended to upgrade the affected component. VDB-216794 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4742">https://nvd.nist.gov/vuln/detail/CVE-2022-4742</a></li>
<li><a href="https://github.com/manuelstofer/json-pointer/pull/36">https://github.com/manuelstofer/json-pointer/pull/36</a></li>
<li><a href="https://github.com/manuelstofer/json-pointer/commit/859c9984b6c407fc2d5a0a7e47c7274daa681941">https://github.com/manuelstofer/json-pointer/commit/859c9984b6c407fc2d5a0a7e47c7274daa681941</a></li>
<li><a href="https://vuldb.com/?ctiid.216794">https://vuldb.com/?ctiid.216794</a></li>
<li><a href="https://vuldb.com/?id.216794">https://vuldb.com/?id.216794</a></li>
<li><a href="https://github.com/advisories/GHSA-6xrf-q977-5vgc">https://github.com/advisories/GHSA-6xrf-q977-5vgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6xrf-q977-5vgc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-26T09:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite's `server.fs.deny` did not deny requests for patterns with directories.]]></title>
        <id>https://github.com/advisories/GHSA-8jhw-289h-jh2g</id>
        <link href="https://github.com/advisories/GHSA-8jhw-289h-jh2g"/>
        <updated>2024-04-04T20:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="https://vitejs.dev/config/server-options.html#server-fs-deny">Vite dev server option</a> <code>server.fs.deny</code> did not deny requests for patterns with directories. An example of such a pattern is <code>/foo/**/*</code>.</p>
<h3 id="impact">Impact</h3>
<p>Only apps setting a custom <code>server.fs.deny</code> that includes a pattern with directories, and explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@5.2.6">vite@5.2.6</a>, <a href="mailto:vite@5.1.7">vite@5.1.7</a>, <a href="mailto:vite@5.0.13">vite@5.0.13</a>, <a href="mailto:vite@4.5.3">vite@4.5.3</a>, <a href="mailto:vite@3.2.10">vite@3.2.10</a>, <a href="mailto:vite@2.9.18">vite@2.9.18</a></p>
<h3 id="details">Details</h3>
<p><code>server.fs.deny</code> uses picomatch with the config of <code>{ matchBase: true }</code>. <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=Description-,basename,-boolean">matchBase</a> only matches the basename of the file, not the path due to a bug (<a href="https://github.com/micromatch/picomatch/issues/89">https://github.com/micromatch/picomatch/issues/89</a>). The vite config docs read like you should be able to set fs.deny to glob with picomatch. Vite also does not set <code>{ dot: true }</code> and that causes <a href="https://github.com/micromatch/picomatch/blob/master/README.md#options:~:text=error%20is%20thrown.-,dot,-boolean">dotfiles not to be denied</a> unless they are explicitly defined.</p>
<p><strong>Reproduction</strong></p>
<p>Set fs.deny to <code>['**/.git/**']</code> and then curl for <code>/.git/config</code>.</p>
<ul>
<li>with <code>matchBase: true</code>, you can get any file under  <code>.git/</code> (config, HEAD, etc).</li>
<li>with <code>matchBase: false</code>, you cannot get any file under  <code>.git/</code> (config, HEAD, etc).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g">https://github.com/vitejs/vite/security/advisories/GHSA-8jhw-289h-jh2g</a></li>
<li><a href="https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0">https://github.com/vitejs/vite/commit/011bbca350e447d1b499d242804ce62738c12bc0</a></li>
<li><a href="https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48">https://github.com/vitejs/vite/commit/5a056dd2fc80dbafed033062fe6aaf4717309f48</a></li>
<li><a href="https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67">https://github.com/vitejs/vite/commit/89c7c645f09d16a38f146ef4a1528f218e844d67</a></li>
<li><a href="https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9">https://github.com/vitejs/vite/commit/96a7f3a41ef2f9351c46f3ab12489bb4efa03cc9</a></li>
<li><a href="https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258">https://github.com/vitejs/vite/commit/ba5269cca81de3f5fbb0f49d58a1c55688043258</a></li>
<li><a href="https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649">https://github.com/vitejs/vite/commit/d2db33f7d4b96750b35370c70dd2c35ec3b9b649</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31207">https://nvd.nist.gov/vuln/detail/CVE-2024-31207</a></li>
<li><a href="https://github.com/advisories/GHSA-8jhw-289h-jh2g">https://github.com/advisories/GHSA-8jhw-289h-jh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jhw-289h-jh2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-03T16:46:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery-file-upload] jQuery-Upload-File XSS in fileNameStr]]></title>
        <id>https://github.com/advisories/GHSA-43x9-7hfv-mxrf</id>
        <link href="https://github.com/advisories/GHSA-43x9-7hfv-mxrf"/>
        <updated>2024-04-02T20:31:04.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in the fileNameStr parameter of jQuery-Upload-File v4.0.11 allows attackers to execute arbitrary web scripts or HTML via a crafted file with a Javascript payload in the file name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37504">https://nvd.nist.gov/vuln/detail/CVE-2021-37504</a></li>
<li><a href="https://github.com/hayageek/jquery-upload-file/blob/master/js/jquery.uploadfile.js#L469">https://github.com/hayageek/jquery-upload-file/blob/master/js/jquery.uploadfile.js#L469</a></li>
<li><a href="https://github.com/advisories/GHSA-43x9-7hfv-mxrf">https://github.com/advisories/GHSA-43x9-7hfv-mxrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43x9-7hfv-mxrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-26T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jplayer] jplayer Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3jcq-cwr7-6332</id>
        <link href="https://github.com/advisories/GHSA-3jcq-cwr7-6332"/>
        <updated>2024-04-02T14:07:58.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in actionscript/Jplayer.as in the Flash SWF component (jplayer.swf) in jPlayer before 2.3.0 allow remote attackers to inject arbitrary web script or HTML via the (1) jQuery or (2) id parameters, a different vulnerability than CVE-2013-1942 and CVE-2013-2023, as demonstrated by using the alert function in the jQuery parameter.  NOTE: these are the same parameters as CVE-2013-1942, but the fix for CVE-2013-1942 uses a blacklist for the jQuery parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-2022">https://nvd.nist.gov/vuln/detail/CVE-2013-2022</a></li>
<li><a href="https://github.com/happyworm/jPlayer/commit/c5fe17bb4459164bd59153b57248cf94b8867373">https://github.com/happyworm/jPlayer/commit/c5fe17bb4459164bd59153b57248cf94b8867373</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=136570964825921&amp;w=2">http://marc.info/?l=oss-security&amp;m=136570964825921&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=136726705917858&amp;w=2">http://marc.info/?l=oss-security&amp;m=136726705917858&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=136773622321563&amp;w=2">http://marc.info/?l=oss-security&amp;m=136773622321563&amp;w=2</a></li>
<li><a href="http://seclists.org/fulldisclosure/2013/Apr/192">http://seclists.org/fulldisclosure/2013/Apr/192</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/27/7">http://www.openwall.com/lists/oss-security/2013/06/27/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/07/04/5">http://www.openwall.com/lists/oss-security/2013/07/04/5</a></li>
<li><a href="https://github.com/jplayer/jPlayer/commit/c5fe17bb4459164bd59153b57248cf94b8867373">https://github.com/jplayer/jPlayer/commit/c5fe17bb4459164bd59153b57248cf94b8867373</a></li>
<li><a href="http://www.jplayer.org/2.3.0/release-notes">http://www.jplayer.org/2.3.0/release-notes</a></li>
<li><a href="https://github.com/advisories/GHSA-3jcq-cwr7-6332">https://github.com/advisories/GHSA-3jcq-cwr7-6332</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3jcq-cwr7-6332</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T04:39:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mootools] MooTools Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-v63q-hgqc-qvpg</id>
        <link href="https://github.com/advisories/GHSA-v63q-hgqc-qvpg"/>
        <updated>2024-04-02T14:07:07.000Z</updated>
        <content type="html"><![CDATA[<p>MooTools is a collection of JavaScript utilities for JavaScript developers. All known versions include a CSS selector parser that is vulnerable to Regular Expression Denial of Service (ReDoS). An attack requires that an attacker can inject a string into a CSS selector at runtime, which is quite common with e.g. jQuery CSS selectors. No patches are available for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32821">https://nvd.nist.gov/vuln/detail/CVE-2021-32821</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2020-345-redos-mootools">https://securitylab.github.com/advisories/GHSL-2020-345-redos-mootools</a></li>
<li><a href="https://github.com/advisories/GHSA-v63q-hgqc-qvpg">https://github.com/advisories/GHSA-v63q-hgqc-qvpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v63q-hgqc-qvpg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-03T18:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[express-cart] express-cart allows any user to create an admin user]]></title>
        <id>https://github.com/advisories/GHSA-hr89-w7p6-pjmq</id>
        <link href="https://github.com/advisories/GHSA-hr89-w7p6-pjmq"/>
        <updated>2024-04-01T22:03:24.000Z</updated>
        <content type="html"><![CDATA[<p>Express-Cart before 1.1.6 allows remote attackers to create an admin user via an <code>/admin/setup</code> Referer header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-12457">https://nvd.nist.gov/vuln/detail/CVE-2018-12457</a></li>
<li><a href="https://github.com/mrvautin/expressCart/commit/baccaae9b0b72f00b10c5453ca00231340ad3e3b">https://github.com/mrvautin/expressCart/commit/baccaae9b0b72f00b10c5453ca00231340ad3e3b</a></li>
<li><a href="https://hackerone.com/reports/343626">https://hackerone.com/reports/343626</a></li>
<li><a href="https://www.npmjs.com/package/express-cart?activeTab=versions">https://www.npmjs.com/package/express-cart?activeTab=versions</a></li>
<li><a href="https://github.com/advisories/GHSA-hr89-w7p6-pjmq">https://github.com/advisories/GHSA-hr89-w7p6-pjmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr89-w7p6-pjmq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:49:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[express-cart] express-cart unrestricted file upload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4w62-cq5r-5mmq</id>
        <link href="https://github.com/advisories/GHSA-4w62-cq5r-5mmq"/>
        <updated>2024-04-01T22:03:21.000Z</updated>
        <content type="html"><![CDATA[<p>Unrestricted file upload (RCE) in express-cart module before 1.1.7 allows a privileged user to gain access in the hosting machine.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3758">https://nvd.nist.gov/vuln/detail/CVE-2018-3758</a></li>
<li><a href="https://hackerone.com/reports/343726">https://hackerone.com/reports/343726</a></li>
<li><a href="https://github.com/mrvautin/expressCart/commit/65b18cfe426fa217aa6ada1d4162891883137893">https://github.com/mrvautin/expressCart/commit/65b18cfe426fa217aa6ada1d4162891883137893</a></li>
<li><a href="https://github.com/advisories/GHSA-4w62-cq5r-5mmq">https://github.com/advisories/GHSA-4w62-cq5r-5mmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4w62-cq5r-5mmq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:32:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[formstone] Formstone Vulnerable to Reflected XSS]]></title>
        <id>https://github.com/advisories/GHSA-wc29-h54q-q8qx</id>
        <link href="https://github.com/advisories/GHSA-wc29-h54q-q8qx"/>
        <updated>2024-04-01T22:02:55.000Z</updated>
        <content type="html"><![CDATA[<p>Formstone &lt;=1.4.16 is vulnerable to a Reflected Cross-Site Scripting (XSS) vulnerability caused by improper validation of user supplied input in the <code>upload-target.php</code> and <code>upload-chunked.php</code> files. A remote attacker could exploit this vulnerability using a specially crafted URL to execute a script in a victim's Web browser within the security context of the hosting Web site once the URL is clicked or visited. An attacker could use this vulnerability to steal the victim's cookie-based authentication credentials, force malware execution, user redirection and others.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26768">https://nvd.nist.gov/vuln/detail/CVE-2020-26768</a></li>
<li><a href="https://github.com/Formstone/Formstone/issues/286">https://github.com/Formstone/Formstone/issues/286</a></li>
<li><a href="https://github.com/Formstone/Formstone/commit/b067f31f5f6a0acd3ade4fd6dccae6e3633caa02">https://github.com/Formstone/Formstone/commit/b067f31f5f6a0acd3ade4fd6dccae6e3633caa02</a></li>
<li><a href="https://github.com/advisories/GHSA-wc29-h54q-q8qx">https://github.com/advisories/GHSA-wc29-h54q-q8qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc29-h54q-q8qx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:38:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@kindspells/astro-shield] In Astro-Shield, setting a correct `integrity` attribute to injected code allows to bypass the allow-lists]]></title>
        <id>https://github.com/advisories/GHSA-c4gr-q97g-ppwc</id>
        <link href="https://github.com/advisories/GHSA-c4gr-q97g-ppwc"/>
        <updated>2024-04-04T16:25:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Versions from 1.2.0 to 1.3.1 of Astro-Shield allow to bypass the allow-lists for cross-origin resources by introducing valid <code>integrity</code> attributes to the injected code. This implies that the injected SRI hash would be added to the generated CSP header, which would lead the browser to believe that the injected resource is legit.</p>
<p>To exploit this vulnerability, the attacker needs to first inject code into the rendered pages by exploiting other not-related potential vulnerabilities.</p>
<h3 id="patches">Patches</h3>
<p>Version <a href="https://github.com/kindspells/astro-shield/releases/tag/1.3.2">1.3.2</a> provides a patch.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>To not use the middleware functionality of Astro-Shield.</li>
<li>To use the middleware functionality of Astro-Shield ONLY for content that cannot be controlled in any way by external users.</li>
</ul>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kindspells/astro-shield/security/advisories/GHSA-c4gr-q97g-ppwc">https://github.com/kindspells/astro-shield/security/advisories/GHSA-c4gr-q97g-ppwc</a></li>
<li><a href="https://github.com/kindspells/astro-shield/commit/1221019306f501bf5fa9bcfb5a23a2321d34ba0a">https://github.com/kindspells/astro-shield/commit/1221019306f501bf5fa9bcfb5a23a2321d34ba0a</a></li>
<li><a href="https://github.com/kindspells/astro-shield/commit/5ae8b8ef4f681d3a81431ee7e79d5dec545c6e1f">https://github.com/kindspells/astro-shield/commit/5ae8b8ef4f681d3a81431ee7e79d5dec545c6e1f</a></li>
<li><a href="https://github.com/kindspells/astro-shield/releases/tag/1.3.2">https://github.com/kindspells/astro-shield/releases/tag/1.3.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30250">https://nvd.nist.gov/vuln/detail/CVE-2024-30250</a></li>
<li><a href="https://github.com/advisories/GHSA-c4gr-q97g-ppwc">https://github.com/advisories/GHSA-c4gr-q97g-ppwc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c4gr-q97g-ppwc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-01T20:33:53.000Z</published>
    </entry>
</feed>