<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-06-19T00:21:24.103Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</id>
        <link href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"/>
        <updated>2022-06-17T22:09:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href="https://developer.apple.com/news/?id=stttq465">current root certificate</a> as of May 27, 2022.</p>
<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="more-information">More information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org">community forum</a> or <a href="http://chat.parseplatform.org">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</uri>
        </author>
        <published>2022-06-17T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</id>
        <link href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"/>
        <updated>2022-06-17T22:09:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href="https://developer.apple.com/news/?id=stttq465">current root certificate</a> as of May 27, 2022.</p>
<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="more-information">More information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org">community forum</a> or <a href="http://chat.parseplatform.org">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</uri>
        </author>
        <published>2022-06-17T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kityminder] Server-Side Request Forgery in kityminder]]></title>
        <id>https://github.com/advisories/GHSA-q56h-x9h5-q53c</id>
        <link href="https://github.com/advisories/GHSA-q56h-x9h5-q53c"/>
        <updated>2022-06-17T21:48:56.000Z</updated>
        <content type="html"><![CDATA[<p>Kity Minder v1.3.5 was discovered to contain a Server-Side Request Forgery (SSRF) via the init function at ImageCapture.class.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31830">https://nvd.nist.gov/vuln/detail/CVE-2022-31830</a></li>
<li><a href="https://github.com/fex-team/kityminder/issues/345">https://github.com/fex-team/kityminder/issues/345</a></li>
<li><a href="https://github.com/advisories/GHSA-q56h-x9h5-q53c">https://github.com/advisories/GHSA-q56h-x9h5-q53c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q56h-x9h5-q53c</uri>
        </author>
        <published>2022-06-10T00:00:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@finastra/nestjs-proxy] Potential Sensitive Cookie Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy]]></title>
        <id>https://github.com/advisories/GHSA-77mv-4rg7-r8qv</id>
        <link href="https://github.com/advisories/GHSA-77mv-4rg7-r8qv"/>
        <updated>2022-06-17T21:43:46.000Z</updated>
        <content type="html"><![CDATA[<p>The nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them.</p>
<p>The patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the <code>allowedCookies</code> config setting. Further details of this feature can be found in the library's README on <a href="https://github.com/Finastra/finastra-nodejs-libs/tree/develop/libs/proxy">Github</a> or <a href="https://www.npmjs.com/package/@finastra/nestjs-proxy">NPM</a>.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>
<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/232">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31070">https://nvd.nist.gov/vuln/detail/CVE-2022-31070</a></li>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/232">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>
<li><a href="https://github.com/advisories/GHSA-77mv-4rg7-r8qv">https://github.com/advisories/GHSA-77mv-4rg7-r8qv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77mv-4rg7-r8qv</uri>
        </author>
        <published>2022-06-17T21:43:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@finastra/nestjs-proxy] Potential Authorization Header Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy]]></title>
        <id>https://github.com/advisories/GHSA-j562-c3cw-3p5g</id>
        <link href="https://github.com/advisories/GHSA-j562-c3cw-3p5g"/>
        <updated>2022-06-17T21:39:56.000Z</updated>
        <content type="html"><![CDATA[<p>The nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them.</p>
<p>A new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the <code>forwardToken</code> config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>
<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/231">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></p>
<h3 id="references-1">References</h3>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g</a></p>
</li>
<li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31069">https://nvd.nist.gov/vuln/detail/CVE-2022-31069</a></p>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/231">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-j562-c3cw-3p5g">https://github.com/advisories/GHSA-j562-c3cw-3p5g</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j562-c3cw-3p5g</uri>
        </author>
        <published>2022-06-17T21:39:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strikeentco/set] Prototype pollution in @strikeentco/set]]></title>
        <id>https://github.com/advisories/GHSA-wwg2-2crq-6grr</id>
        <link href="https://github.com/advisories/GHSA-wwg2-2crq-6grr"/>
        <updated>2022-06-17T21:38:53.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in '@strikeentco/set' version 1.0.0 allows attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28267">https://nvd.nist.gov/vuln/detail/CVE-2020-28267</a></li>
<li><a href="https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60">https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267</a></li>
<li><a href="https://github.com/advisories/GHSA-wwg2-2crq-6grr">https://github.com/advisories/GHSA-wwg2-2crq-6grr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wwg2-2crq-6grr</uri>
        </author>
        <published>2022-05-24T17:34:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openpgp] OpenPGP 1.2.0 and earlier decrypts arbitrary messages]]></title>
        <id>https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</id>
        <link href="https://github.com/advisories/GHSA-qmvq-f3fj-m3wg"/>
        <updated>2022-06-17T21:22:32.000Z</updated>
        <content type="html"><![CDATA[<p>s2k.js in OpenPGP.js will decrypt arbitrary messages regardless of passphrase for crafted PGP keys which allows remote attackers to bypass authentication if message decryption is used as an authentication mechanism via a crafted symmetrically encrypted PGP message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8013">https://nvd.nist.gov/vuln/detail/CVE-2015-8013</a></li>
<li><a href="https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29">https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/10/30/5">http://www.openwall.com/lists/oss-security/2015/10/30/5</a></li>
<li><a href="https://github.com/advisories/GHSA-qmvq-f3fj-m3wg">https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</uri>
        </author>
        <published>2022-05-17T02:15:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[giting] OS Command Injection in giting]]></title>
        <id>https://github.com/advisories/GHSA-53xj-v576-3ch2</id>
        <link href="https://github.com/advisories/GHSA-53xj-v576-3ch2"/>
        <updated>2022-06-17T20:44:21.000Z</updated>
        <content type="html"><![CDATA[<p>giting version prior to 0.0.8 allows execution of arbritary commands. The first argument <code>repo</code> of function <code>pull()</code> is executed by the package without any validation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10802">https://nvd.nist.gov/vuln/detail/CVE-2019-10802</a></li>
<li><a href="https://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0">https://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-GITING-559008">https://snyk.io/vuln/SNYK-JS-GITING-559008</a></li>
<li><a href="https://github.com/advisories/GHSA-53xj-v576-3ch2">https://github.com/advisories/GHSA-53xj-v576-3ch2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53xj-v576-3ch2</uri>
        </author>
        <published>2021-04-13T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ghost] Remote code execution in locale setting change]]></title>
        <id>https://github.com/advisories/GHSA-7v28-g2pq-ggg8</id>
        <link href="https://github.com/advisories/GHSA-7v28-g2pq-ggg8"/>
        <updated>2022-06-17T01:16:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://www.cve.org/CVERecord?id=CVE-2022-24785">vulnerability</a> in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in 5.2.3, all 5.x sites should update as soon as possible.
Fixed in 4.48.2, all 4.x sites should update as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Patched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.</p>
<p>As a workaround, if for any reason you cannot update your Ghost instance, you can block the <code>POST /ghost/api/admin/settings/</code> endpoint, which will also disable updating settings for your site.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@ghost.org">security@ghost.org</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>devx00 - <a href="https://twitter.com/devx00">https://twitter.com/devx00</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8">https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8</a></li>
<li><a href="https://github.com/advisories/GHSA-7v28-g2pq-ggg8">https://github.com/advisories/GHSA-7v28-g2pq-ggg8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v28-g2pq-ggg8</uri>
        </author>
        <published>2022-06-17T01:16:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ghost] Remote code execution in locale setting change]]></title>
        <id>https://github.com/advisories/GHSA-7v28-g2pq-ggg8</id>
        <link href="https://github.com/advisories/GHSA-7v28-g2pq-ggg8"/>
        <updated>2022-06-17T01:16:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://www.cve.org/CVERecord?id=CVE-2022-24785">vulnerability</a> in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in 5.2.3, all 5.x sites should update as soon as possible.
Fixed in 4.48.2, all 4.x sites should update as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Patched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.</p>
<p>As a workaround, if for any reason you cannot update your Ghost instance, you can block the <code>POST /ghost/api/admin/settings/</code> endpoint, which will also disable updating settings for your site.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@ghost.org">security@ghost.org</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>devx00 - <a href="https://twitter.com/devx00">https://twitter.com/devx00</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8">https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8</a></li>
<li><a href="https://github.com/advisories/GHSA-7v28-g2pq-ggg8">https://github.com/advisories/GHSA-7v28-g2pq-ggg8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v28-g2pq-ggg8</uri>
        </author>
        <published>2022-06-17T01:16:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@backstage/techdocs-common] Path traversal for local publishers in TechDocs backend]]></title>
        <id>https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</id>
        <link href="https://github.com/advisories/GHSA-4jqc-jvh2-pxg9"/>
        <updated>2022-06-17T01:11:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when <code>techdocs.publisher.type</code> is set to <code>local</code>.</p>
<p>This vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.</p>
<h3 id="patches">Patches</h3>
<p>Those affected are advised to upgrade to <code>@backstage/plugin-techdocs-node</code> version <code>1.1.2</code> or higher.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing <code>..</code></p>


<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><p>Open an issue in the <a href="https://github.com/backstage/backstage">Backstage repository</a></p>
</li>
<li><p>Visit our chat, linked to in the <a href="https://github.com/backstage/backstage">Backstage README</a></p>
<h3 id="references">References</h3>
</li>
<li><p><a href="https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9">https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9</a></p>
</li>
<li><p><a href="https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa">https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-4jqc-jvh2-pxg9">https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</uri>
        </author>
        <published>2022-06-17T01:11:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@backstage/plugin-techdocs-node] Path traversal for local publishers in TechDocs backend]]></title>
        <id>https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</id>
        <link href="https://github.com/advisories/GHSA-4jqc-jvh2-pxg9"/>
        <updated>2022-06-17T01:11:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when <code>techdocs.publisher.type</code> is set to <code>local</code>.</p>
<p>This vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.</p>
<h3 id="patches">Patches</h3>
<p>Those affected are advised to upgrade to <code>@backstage/plugin-techdocs-node</code> version <code>1.1.2</code> or higher.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing <code>..</code></p>


<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><p>Open an issue in the <a href="https://github.com/backstage/backstage">Backstage repository</a></p>
</li>
<li><p>Visit our chat, linked to in the <a href="https://github.com/backstage/backstage">Backstage README</a></p>
<h3 id="references">References</h3>
</li>
<li><p><a href="https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9">https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9</a></p>
</li>
<li><p><a href="https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa">https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-4jqc-jvh2-pxg9">https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</uri>
        </author>
        <published>2022-06-17T01:11:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] ProxyAgent vulnerable to MITM]]></title>
        <id>https://github.com/advisories/GHSA-pgw7-wx7w-2w33</id>
        <link href="https://github.com/advisories/GHSA-pgw7-wx7w-2w33"/>
        <updated>2022-06-17T01:02:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p><code>Undici.ProxyAgent</code> never verifies the remote server's certificate, and always exposes all request &amp; response data to the proxy. This unexpectedly means that proxies can MitM all HTTPS traffic, and if the proxy's URL is HTTP then it also means that nominally HTTPS requests are actually sent via plain-text HTTP between Undici and the proxy server.</p>
<h3 id="impact">Impact</h3>
<p>This affects all use of HTTPS via HTTP proxy using <strong><code>Undici.ProxyAgent</code></strong>  with Undici or Node's global <code>fetch</code>. In this case, it removes all HTTPS security from all requests sent using Undici's <code>ProxyAgent</code>, allowing trivial MitM attacks by anybody on the network path between the client and the target server (local network users, your ISP, the proxy, the target server's ISP, etc).
This less seriously affects HTTPS via HTTPS proxies. When you send HTTPS via a proxy to a remote server, the proxy can freely view or modify all HTTPS traffic unexpectedly (but only the proxy). </p>
<p>Example:</p>
<pre><code class="language-js">setGlobalDispatcher(new ProxyAgent('http://localhost:8000/')) // HTTP Proxy
// or
undici.request('https://example.com/', { dispatcher: new ProxyAgent('http://localhost:8000') }) // HTTP Proxy
// or
fetch('https://example.com/', { dispatcher: new ProxyAgent('http://localhost:8000') }) // HTTP Proxy
</code></pre>
<h3 id="patches">Patches</h3>
<p>This issue was patched in Undici v5.5.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, the only workaround is to not use <code>ProxyAgent</code> as a dispatcher for TLS Connections.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/nodejs/undici/issues">undici repository</a></li>
<li>To make a report, follow the <a href="https://github.com/nodejs/node/blob/HEAD/SECURITY.md">SECURITY</a> document</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-pgw7-wx7w-2w33">https://github.com/nodejs/undici/security/advisories/GHSA-pgw7-wx7w-2w33</a></li>
<li><a href="https://github.com/advisories/GHSA-pgw7-wx7w-2w33">https://github.com/advisories/GHSA-pgw7-wx7w-2w33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pgw7-wx7w-2w33</uri>
        </author>
        <published>2022-06-17T01:02:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jpeg-js] Infinite loop in jpeg-js]]></title>
        <id>https://github.com/advisories/GHSA-xvf7-4v9q-58w6</id>
        <link href="https://github.com/advisories/GHSA-xvf7-4v9q-58w6"/>
        <updated>2022-06-17T01:00:49.000Z</updated>
        <content type="html"><![CDATA[<p>The package jpeg-js before 0.4.4 are vulnerable to Denial of Service (DoS) where a particular piece of input will cause to enter an infinite loop and never return.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25851">https://nvd.nist.gov/vuln/detail/CVE-2022-25851</a></li>
<li><a href="https://github.com/jpeg-js/jpeg-js/issues/105">https://github.com/jpeg-js/jpeg-js/issues/105</a></li>
<li><a href="https://github.com/jpeg-js/jpeg-js/pull/106/">https://github.com/jpeg-js/jpeg-js/pull/106/</a></li>
<li><a href="https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27">https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2860295">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2860295</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JPEGJS-2859218">https://snyk.io/vuln/SNYK-JS-JPEGJS-2859218</a></li>
<li><a href="https://github.com/advisories/GHSA-xvf7-4v9q-58w6">https://github.com/advisories/GHSA-xvf7-4v9q-58w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvf7-4v9q-58w6</uri>
        </author>
        <published>2022-06-11T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convert-svg-core] Directory-traversal in convert-svg-core]]></title>
        <id>https://github.com/advisories/GHSA-5f47-rcg5-9m24</id>
        <link href="https://github.com/advisories/GHSA-5f47-rcg5-9m24"/>
        <updated>2022-06-17T00:56:39.000Z</updated>
        <content type="html"><![CDATA[<p>The package convert-svg-core before 0.6.4 are vulnerable to Directory Traversal due to improper sanitization of SVG tags. Exploiting this vulnerability is possible by using a specially crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24278">https://nvd.nist.gov/vuln/detail/CVE-2022-24278</a></li>
<li><a href="https://github.com/neocotic/convert-svg/issues/86">https://github.com/neocotic/convert-svg/issues/86</a></li>
<li><a href="https://github.com/neocotic/convert-svg/pull/87">https://github.com/neocotic/convert-svg/pull/87</a></li>
<li><a href="https://github.com/neocotic/convert-svg/commit/2bbc498c5029238637206661dbac9e44d37d17c5">https://github.com/neocotic/convert-svg/commit/2bbc498c5029238637206661dbac9e44d37d17c5</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859830">https://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859830</a></li>
<li><a href="https://github.com/advisories/GHSA-5f47-rcg5-9m24">https://github.com/advisories/GHSA-5f47-rcg5-9m24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5f47-rcg5-9m24</uri>
        </author>
        <published>2022-06-11T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[git-promise] OS Command Injection in git-promise]]></title>
        <id>https://github.com/advisories/GHSA-chj3-f7xw-367m</id>
        <link href="https://github.com/advisories/GHSA-chj3-f7xw-367m"/>
        <updated>2022-06-17T00:56:06.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package git-promise are vulnerable to Command Injection due to an inappropriate fix of a prior <a href="https://security.snyk.io/vuln/SNYK-JS-GITPROMISE-567476">vulnerability</a> in this package. <strong>Note:</strong> Please note that the vulnerability will not be fixed. The README file was updated with a warning regarding this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24376">https://nvd.nist.gov/vuln/detail/CVE-2022-24376</a></li>
<li><a href="https://gist.github.com/lirantal/9da1fceb32f5279eb76a5fc1cb9707dd">https://gist.github.com/lirantal/9da1fceb32f5279eb76a5fc1cb9707dd</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-GITPROMISE-2434310">https://snyk.io/vuln/SNYK-JS-GITPROMISE-2434310</a></li>
<li><a href="https://github.com/advisories/GHSA-chj3-f7xw-367m">https://github.com/advisories/GHSA-chj3-f7xw-367m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chj3-f7xw-367m</uri>
        </author>
        <published>2022-06-11T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convert-svg-core] Code injection via SVG file in convert-svg-core]]></title>
        <id>https://github.com/advisories/GHSA-54px-mhwv-5v8x</id>
        <link href="https://github.com/advisories/GHSA-54px-mhwv-5v8x"/>
        <updated>2022-06-17T00:55:36.000Z</updated>
        <content type="html"><![CDATA[<p>The package convert-svg-core before 0.6.3 are vulnerable to Arbitrary Code Injection when using a specially crafted SVG file. An attacker can read arbitrary files from the file system and then show the file content as a converted PNG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24429">https://nvd.nist.gov/vuln/detail/CVE-2022-24429</a></li>
<li><a href="https://github.com/neocotic/convert-svg/issues/84">https://github.com/neocotic/convert-svg/issues/84</a></li>
<li><a href="https://github.com/neocotic/convert-svg/commit/a43dffaab0f1e419d5be84e2e7356b86ffac3cf1">https://github.com/neocotic/convert-svg/commit/a43dffaab0f1e419d5be84e2e7356b86ffac3cf1</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859212">https://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859212</a></li>
<li><a href="https://github.com/advisories/GHSA-54px-mhwv-5v8x">https://github.com/advisories/GHSA-54px-mhwv-5v8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54px-mhwv-5v8x</uri>
        </author>
        <published>2022-06-11T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[posix] Unhandled crash in npm posix]]></title>
        <id>https://github.com/advisories/GHSA-27mx-gchc-6xjp</id>
        <link href="https://github.com/advisories/GHSA-27mx-gchc-6xjp"/>
        <updated>2022-06-17T00:40:17.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package posix. When invoking the toString method, it will fallback to 0x0 value, as the value of toString is not invokable (not a function), and then it will crash with type-check.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21211">https://nvd.nist.gov/vuln/detail/CVE-2022-21211</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-POSIX-2400719">https://snyk.io/vuln/SNYK-JS-POSIX-2400719</a></li>
<li><a href="https://github.com/advisories/GHSA-27mx-gchc-6xjp">https://github.com/advisories/GHSA-27mx-gchc-6xjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27mx-gchc-6xjp</uri>
        </author>
        <published>2022-06-11T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] AutoUpdater module fails to validate certain nested components of the bundle]]></title>
        <id>https://github.com/advisories/GHSA-77xc-hjv8-ww97</id>
        <link href="https://github.com/advisories/GHSA-77xc-hjv8-ww97"/>
        <updated>2022-06-16T23:18:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.</p>
<p>Please note that this kind of attack would require <strong>significant</strong> privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>18.0.0-beta.6</code></li>
<li><code>17.2.0</code></li>
<li><code>16.2.0</code></li>
<li><code>15.5.0</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this issue, please update to a patched version of Electron.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97">https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29257">https://nvd.nist.gov/vuln/detail/CVE-2022-29257</a></li>
<li><a href="https://github.com/advisories/GHSA-77xc-hjv8-ww97">https://github.com/advisories/GHSA-77xc-hjv8-ww97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77xc-hjv8-ww97</uri>
        </author>
        <published>2022-06-16T23:18:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] AutoUpdater module fails to validate certain nested components of the bundle]]></title>
        <id>https://github.com/advisories/GHSA-77xc-hjv8-ww97</id>
        <link href="https://github.com/advisories/GHSA-77xc-hjv8-ww97"/>
        <updated>2022-06-16T23:18:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.</p>
<p>Please note that this kind of attack would require <strong>significant</strong> privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched and the following Electron versions contain the fix:</p>
<ul>
<li><code>18.0.0-beta.6</code></li>
<li><code>17.2.0</code></li>
<li><code>16.2.0</code></li>
<li><code>15.5.0</code></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this issue, please update to a patched version of Electron.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97">https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29257">https://nvd.nist.gov/vuln/detail/CVE-2022-29257</a></li>
<li><a href="https://github.com/advisories/GHSA-77xc-hjv8-ww97">https://github.com/advisories/GHSA-77xc-hjv8-ww97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77xc-hjv8-ww97</uri>
        </author>
        <published>2022-06-16T23:18:47.000Z</published>
    </entry>
</feed>