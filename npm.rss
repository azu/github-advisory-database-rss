<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-06-22T00:24:47.564Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[shell-quote] Improper Neutralization of Special Elements used in a Command in Shell-quote]]></title>
        <id>https://github.com/advisories/GHSA-g4rg-993r-mgx7</id>
        <link href="https://github.com/advisories/GHSA-g4rg-993r-mgx7"/>
        <updated>2022-06-21T20:08:11.000Z</updated>
        <content type="html"><![CDATA[<p>The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z]. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-42740">https://nvd.nist.gov/vuln/detail/CVE-2021-42740</a></li>
<li><a href="https://github.com/substack/node-shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe">https://github.com/substack/node-shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe</a></li>
<li><a href="https://github.com/substack/node-shell-quote/blob/master/CHANGELOG.md#173">https://github.com/substack/node-shell-quote/blob/master/CHANGELOG.md#173</a></li>
<li><a href="https://www.npmjs.com/package/shell-quote">https://www.npmjs.com/package/shell-quote</a></li>
<li><a href="https://github.com/advisories/GHSA-g4rg-993r-mgx7">https://github.com/advisories/GHSA-g4rg-993r-mgx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4rg-993r-mgx7</uri>
        </author>
        <published>2022-05-24T19:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] Improper Handling of `callbackUrl` parameter in next-auth]]></title>
        <id>https://github.com/advisories/GHSA-g5fm-jp9v-2432</id>
        <link href="https://github.com/advisories/GHSA-g5fm-jp9v-2432"/>
        <updated>2022-06-21T20:06:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can send a request to an app using NextAuth.js with an invalid <code>callbackUrl</code> query parameter, which internally we convert to a <code>URL</code> object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our <strong>API route handler timing out and logging in to fail</strong>. This has been remedied in the following releases:</p>
<p>next-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href="https://next-auth.js.org/getting-started/upgrade-v4">migration guide</a>)</p>
<p>next-auth v4 users before version 4.5.0 are impacted.</p>
<h3 id="patches">Patches</h3>
<p>We've released patches for this vulnerability in:</p>
<ul>
<li>v3 - <code>3.29.5</code></li>
<li>v4 - <code>4.5.0</code></li>
</ul>
<p>You can do:</p>
<pre><code class="language-sh">npm i next-auth@latest
</code></pre>
<p>or</p>
<pre><code class="language-sh">yarn add next-auth@latest
</code></pre>
<p>or</p>
<pre><code class="language-sh">pnpm add next-auth@latest
</code></pre>
<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>If for some reason you cannot upgrade, the workaround requires you to rely on <a href="https://next-auth.js.org/configuration/initialization#advanced-initialization">Advanced Initialization</a>. Here is an example:</p>
<p><strong>Before:</strong></p>
<pre><code class="language-js">// pages/api/auth/[...nextauth].js
import NextAuth from "next-auth"

export default NextAuth(/* your config */)
</code></pre>
<p><strong>After:</strong></p>
<pre><code class="language-js">// pages/api/auth/[...nextauth].js
import NextAuth from "next-auth"

function isValidHttpUrl(url) {
  try {
    return /^https?:/.test(url).protocol);
  } catch {
    return false;
  }
}

export default async function handler(req, res) {
  if (
    req.query.callbackUrl &amp;&amp;
    !isValidHttpUrl(req.query.callbackUrl)
  ) {
   return res.status(500).send('');
  }
  
  return await NextAuth(req, res, /* your config */)
}
</code></pre>
<h3 id="references">References</h3>
<p>This vulnerability was discovered not long after <a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74</a> was published and is very similar in nature.</p>
<p>Related documentation:</p>
<ul>
<li><a href="https://next-auth.js.org/getting-started/client#specifying-a-callbackurl">https://next-auth.js.org/getting-started/client#specifying-a-callbackurl</a></li>
<li><a href="https://next-auth.js.org/configuration/callbacks#redirect-callback">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>
</ul>
<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href="https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6">https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any concerns, we request responsible disclosure, outlined here: <a href="https://next-auth.js.org/security#reporting-a-vulnerability">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>
<h3 id="timeline">Timeline</h3>
<p>The issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432</a></li>
<li><a href="https://github.com/advisories/GHSA-g5fm-jp9v-2432">https://github.com/advisories/GHSA-g5fm-jp9v-2432</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5fm-jp9v-2432</uri>
        </author>
        <published>2022-06-21T20:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] Improper Handling of `callbackUrl` parameter in next-auth]]></title>
        <id>https://github.com/advisories/GHSA-g5fm-jp9v-2432</id>
        <link href="https://github.com/advisories/GHSA-g5fm-jp9v-2432"/>
        <updated>2022-06-21T20:06:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can send a request to an app using NextAuth.js with an invalid <code>callbackUrl</code> query parameter, which internally we convert to a <code>URL</code> object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our <strong>API route handler timing out and logging in to fail</strong>. This has been remedied in the following releases:</p>
<p>next-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href="https://next-auth.js.org/getting-started/upgrade-v4">migration guide</a>)</p>
<p>next-auth v4 users before version 4.5.0 are impacted.</p>
<h3 id="patches">Patches</h3>
<p>We've released patches for this vulnerability in:</p>
<ul>
<li>v3 - <code>3.29.5</code></li>
<li>v4 - <code>4.5.0</code></li>
</ul>
<p>You can do:</p>
<pre><code class="language-sh">npm i next-auth@latest
</code></pre>
<p>or</p>
<pre><code class="language-sh">yarn add next-auth@latest
</code></pre>
<p>or</p>
<pre><code class="language-sh">pnpm add next-auth@latest
</code></pre>
<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>If for some reason you cannot upgrade, the workaround requires you to rely on <a href="https://next-auth.js.org/configuration/initialization#advanced-initialization">Advanced Initialization</a>. Here is an example:</p>
<p><strong>Before:</strong></p>
<pre><code class="language-js">// pages/api/auth/[...nextauth].js
import NextAuth from "next-auth"

export default NextAuth(/* your config */)
</code></pre>
<p><strong>After:</strong></p>
<pre><code class="language-js">// pages/api/auth/[...nextauth].js
import NextAuth from "next-auth"

function isValidHttpUrl(url) {
  try {
    return /^https?:/.test(url).protocol);
  } catch {
    return false;
  }
}

export default async function handler(req, res) {
  if (
    req.query.callbackUrl &amp;&amp;
    !isValidHttpUrl(req.query.callbackUrl)
  ) {
   return res.status(500).send('');
  }
  
  return await NextAuth(req, res, /* your config */)
}
</code></pre>
<h3 id="references">References</h3>
<p>This vulnerability was discovered not long after <a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74</a> was published and is very similar in nature.</p>
<p>Related documentation:</p>
<ul>
<li><a href="https://next-auth.js.org/getting-started/client#specifying-a-callbackurl">https://next-auth.js.org/getting-started/client#specifying-a-callbackurl</a></li>
<li><a href="https://next-auth.js.org/configuration/callbacks#redirect-callback">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>
</ul>
<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href="https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6">https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any concerns, we request responsible disclosure, outlined here: <a href="https://next-auth.js.org/security#reporting-a-vulnerability">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>
<h3 id="timeline">Timeline</h3>
<p>The issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432</a></li>
<li><a href="https://github.com/advisories/GHSA-g5fm-jp9v-2432">https://github.com/advisories/GHSA-g5fm-jp9v-2432</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5fm-jp9v-2432</uri>
        </author>
        <published>2022-06-21T20:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[got] Got allows a redirect to a UNIX socket]]></title>
        <id>https://github.com/advisories/GHSA-pfrx-2q88-qq97</id>
        <link href="https://github.com/advisories/GHSA-pfrx-2q88-qq97"/>
        <updated>2022-06-21T20:05:26.000Z</updated>
        <content type="html"><![CDATA[<p>The got package before 12.1.0 for Node.js allows a redirect to a UNIX socket.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33987">https://nvd.nist.gov/vuln/detail/CVE-2022-33987</a></li>
<li><a href="https://github.com/sindresorhus/got/pull/2047">https://github.com/sindresorhus/got/pull/2047</a></li>
<li><a href="https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0">https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0</a></li>
<li><a href="https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc">https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc</a></li>
<li><a href="https://github.com/sindresorhus/got/releases/tag/v11.8.5">https://github.com/sindresorhus/got/releases/tag/v11.8.5</a></li>
<li><a href="https://github.com/sindresorhus/got/releases/tag/v12.1.0">https://github.com/sindresorhus/got/releases/tag/v12.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-pfrx-2q88-qq97">https://github.com/advisories/GHSA-pfrx-2q88-qq97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfrx-2q88-qq97</uri>
        </author>
        <published>2022-06-19T00:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[got] Got allows a redirect to a UNIX socket]]></title>
        <id>https://github.com/advisories/GHSA-pfrx-2q88-qq97</id>
        <link href="https://github.com/advisories/GHSA-pfrx-2q88-qq97"/>
        <updated>2022-06-21T20:05:26.000Z</updated>
        <content type="html"><![CDATA[<p>The got package before 12.1.0 for Node.js allows a redirect to a UNIX socket.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33987">https://nvd.nist.gov/vuln/detail/CVE-2022-33987</a></li>
<li><a href="https://github.com/sindresorhus/got/pull/2047">https://github.com/sindresorhus/got/pull/2047</a></li>
<li><a href="https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0">https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0</a></li>
<li><a href="https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc">https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc</a></li>
<li><a href="https://github.com/sindresorhus/got/releases/tag/v11.8.5">https://github.com/sindresorhus/got/releases/tag/v11.8.5</a></li>
<li><a href="https://github.com/sindresorhus/got/releases/tag/v12.1.0">https://github.com/sindresorhus/got/releases/tag/v12.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-pfrx-2q88-qq97">https://github.com/advisories/GHSA-pfrx-2q88-qq97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfrx-2q88-qq97</uri>
        </author>
        <published>2022-06-19T00:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strapi] Improper Input Validation in strapi]]></title>
        <id>https://github.com/advisories/GHSA-65wv-528r-m892</id>
        <link href="https://github.com/advisories/GHSA-65wv-528r-m892"/>
        <updated>2022-06-21T20:05:09.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi before 3.0.2 could allow a remote authenticated attacker to bypass security restrictions because templates are stored in a global variable without any sanitation. By sending a specially crafted request, an attacker could exploit this vulnerability to update the email template for both password reset and account confirmation emails.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13961">https://nvd.nist.gov/vuln/detail/CVE-2020-13961</a></li>
<li><a href="https://github.com/strapi/strapi/pull/6599">https://github.com/strapi/strapi/pull/6599</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/183045">https://exchange.xforce.ibmcloud.com/vulnerabilities/183045</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v3.0.2">https://github.com/strapi/strapi/releases/tag/v3.0.2</a></li>
<li><a href="https://github.com/advisories/GHSA-65wv-528r-m892">https://github.com/advisories/GHSA-65wv-528r-m892</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-65wv-528r-m892</uri>
        </author>
        <published>2022-05-24T17:21:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-string-search] Uncontrolled Resource Consumption in fast-string-search]]></title>
        <id>https://github.com/advisories/GHSA-4263-q746-94mw</id>
        <link href="https://github.com/advisories/GHSA-4263-q746-94mw"/>
        <updated>2022-06-20T22:35:50.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package fast-string-search are vulnerable to Denial of Service (DoS) when computations are incorrect for non-string inputs. One can cause the V8 to attempt reading from non-permitted locations and cause a segmentation fault due to the violation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22138">https://nvd.nist.gov/vuln/detail/CVE-2022-22138</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367</a></li>
<li><a href="https://github.com/advisories/GHSA-4263-q746-94mw">https://github.com/advisories/GHSA-4263-q746-94mw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4263-q746-94mw</uri>
        </author>
        <published>2022-06-18T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mout] Prototype Pollution in mout]]></title>
        <id>https://github.com/advisories/GHSA-vvv8-xw5f-3f88</id>
        <link href="https://github.com/advisories/GHSA-vvv8-xw5f-3f88"/>
        <updated>2022-06-20T22:34:00.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href="https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544">CVE-2020-7792</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21213">https://nvd.nist.gov/vuln/detail/CVE-2022-21213</a></li>
<li><a href="https://github.com/mout/mout/blob/master/src/object/deepFillIn.js">https://github.com/mout/mout/blob/master/src/object/deepFillIn.js</a></li>
<li><a href="https://github.com/mout/mout/blob/master/src/object/deepMixIn.js">https://github.com/mout/mout/blob/master/src/object/deepMixIn.js</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MOUT-2342654">https://snyk.io/vuln/SNYK-JS-MOUT-2342654</a></li>
<li><a href="https://github.com/advisories/GHSA-vvv8-xw5f-3f88">https://github.com/advisories/GHSA-vvv8-xw5f-3f88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvv8-xw5f-3f88</uri>
        </author>
        <published>2022-06-18T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@discordjs/opus] Uncontrolled Resource Consumption in @discordjs/opus]]></title>
        <id>https://github.com/advisories/GHSA-rvgf-69j7-xh78</id>
        <link href="https://github.com/advisories/GHSA-rvgf-69j7-xh78"/>
        <updated>2022-06-20T22:30:05.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package @discordjs/opus are vulnerable to Denial of Service (DoS) when trying to encode using an encoder with zero channels, or a non-initialized buffer. This leads to a hard crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25345">https://nvd.nist.gov/vuln/detail/CVE-2022-25345</a></li>
<li><a href="https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28">https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100">https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100</a></li>
<li><a href="https://github.com/advisories/GHSA-rvgf-69j7-xh78">https://github.com/advisories/GHSA-rvgf-69j7-xh78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvgf-69j7-xh78</uri>
        </author>
        <published>2022-06-18T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-string-search] Out-of-bounds Read in fast-string-search]]></title>
        <id>https://github.com/advisories/GHSA-hmqg-p8f8-3qrw</id>
        <link href="https://github.com/advisories/GHSA-hmqg-p8f8-3qrw"/>
        <updated>2022-06-20T22:28:15.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package fast-string-search are vulnerable to Out-of-bounds Read due to incorrect memory freeing and length calculation for any non-string input as the source. This allows the attacker to read previously allocated memory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25872">https://nvd.nist.gov/vuln/detail/CVE-2022-25872</a></li>
<li><a href="https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192">https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368</a></li>
<li><a href="https://github.com/advisories/GHSA-hmqg-p8f8-3qrw">https://github.com/advisories/GHSA-hmqg-p8f8-3qrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmqg-p8f8-3qrw</uri>
        </author>
        <published>2022-06-18T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[querymen] Prototype Pollution in querymen]]></title>
        <id>https://github.com/advisories/GHSA-p23c-p8w2-ww5v</id>
        <link href="https://github.com/advisories/GHSA-p23c-p8w2-ww5v"/>
        <updated>2022-06-20T22:27:39.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package querymen are vulnerable to Prototype Pollution if the parameters of exported function handler(type, name, fn) can be controlled by users without any sanitization. Note: This vulnerability derives from an incomplete fix of <a href="https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867">CVE-2020-7600</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25871">https://nvd.nist.gov/vuln/detail/CVE-2022-25871</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488">https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488</a></li>
<li><a href="https://github.com/advisories/GHSA-p23c-p8w2-ww5v">https://github.com/advisories/GHSA-p23c-p8w2-ww5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p23c-p8w2-ww5v</uri>
        </author>
        <published>2022-06-18T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Invalid file request can crash server]]></title>
        <id>https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</id>
        <link href="https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"/>
        <updated>2022-06-20T22:25:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, invalid requests are now properly handled.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org/">community forum</a> or <a href="http://chat.parseplatform.org/">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org/">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
<li><a href="https://github.com/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</uri>
        </author>
        <published>2022-06-20T22:25:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Invalid file request can crash server]]></title>
        <id>https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</id>
        <link href="https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"/>
        <updated>2022-06-20T22:25:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, invalid requests are now properly handled.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org/">community forum</a> or <a href="http://chat.parseplatform.org/">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org/">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
<li><a href="https://github.com/advisories/GHSA-xw6g-jjvf-wwf9">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</uri>
        </author>
        <published>2022-06-20T22:25:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</id>
        <link href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"/>
        <updated>2022-06-20T21:20:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href="https://developer.apple.com/news/?id=stttq465">current root certificate</a> as of May 27, 2022.</p>
<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="more-information">More information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org">community forum</a> or <a href="http://chat.parseplatform.org">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31083">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054">https://github.com/parse-community/parse-server/pull/8054</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>
<li><a href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</uri>
        </author>
        <published>2022-06-17T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</id>
        <link href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"/>
        <updated>2022-06-20T21:20:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>
<h3 id="patches">Patches</h3>
<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href="https://developer.apple.com/news/?id=stttq465">current root certificate</a> as of May 27, 2022.</p>
<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://github.com/parse-community/parse-server">https://github.com/parse-community/parse-server</a></li>
</ul>
<h3 id="more-information">More information</h3>
<ul>
<li>For questions or comments about this vulnerability visit our <a href="http://community.parseplatform.org">community forum</a> or <a href="http://chat.parseplatform.org">community chat</a></li>
<li>Report other vulnerabilities at <a href="https://report.parseplatform.org">report.parseplatform.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>
<li><a href="https://developer.apple.com/news/?id=stttq465">https://developer.apple.com/news/?id=stttq465</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31083">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8054">https://github.com/parse-community/parse-server/pull/8054</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>
<li><a href="https://github.com/advisories/GHSA-rh9j-f5f8-rvgc">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</uri>
        </author>
        <published>2022-06-17T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kityminder] Server-Side Request Forgery in kityminder]]></title>
        <id>https://github.com/advisories/GHSA-q56h-x9h5-q53c</id>
        <link href="https://github.com/advisories/GHSA-q56h-x9h5-q53c"/>
        <updated>2022-06-17T21:48:56.000Z</updated>
        <content type="html"><![CDATA[<p>Kity Minder v1.3.5 was discovered to contain a Server-Side Request Forgery (SSRF) via the init function at ImageCapture.class.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31830">https://nvd.nist.gov/vuln/detail/CVE-2022-31830</a></li>
<li><a href="https://github.com/fex-team/kityminder/issues/345">https://github.com/fex-team/kityminder/issues/345</a></li>
<li><a href="https://github.com/advisories/GHSA-q56h-x9h5-q53c">https://github.com/advisories/GHSA-q56h-x9h5-q53c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q56h-x9h5-q53c</uri>
        </author>
        <published>2022-06-10T00:00:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@finastra/nestjs-proxy] Potential Sensitive Cookie Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy]]></title>
        <id>https://github.com/advisories/GHSA-77mv-4rg7-r8qv</id>
        <link href="https://github.com/advisories/GHSA-77mv-4rg7-r8qv"/>
        <updated>2022-06-17T21:43:46.000Z</updated>
        <content type="html"><![CDATA[<p>The nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them.</p>
<p>The patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the <code>allowedCookies</code> config setting. Further details of this feature can be found in the library's README on <a href="https://github.com/Finastra/finastra-nodejs-libs/tree/develop/libs/proxy">Github</a> or <a href="https://www.npmjs.com/package/@finastra/nestjs-proxy">NPM</a>.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>
<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/232">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31070">https://nvd.nist.gov/vuln/detail/CVE-2022-31070</a></li>
<li><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/232">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>
<li><a href="https://github.com/advisories/GHSA-77mv-4rg7-r8qv">https://github.com/advisories/GHSA-77mv-4rg7-r8qv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77mv-4rg7-r8qv</uri>
        </author>
        <published>2022-06-17T21:43:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@finastra/nestjs-proxy] Potential Authorization Header Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy]]></title>
        <id>https://github.com/advisories/GHSA-j562-c3cw-3p5g</id>
        <link href="https://github.com/advisories/GHSA-j562-c3cw-3p5g"/>
        <updated>2022-06-17T21:39:56.000Z</updated>
        <content type="html"><![CDATA[<p>The nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them.</p>
<p>A new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the <code>forwardToken</code> config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>
<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/231">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></p>
<h3 id="references-1">References</h3>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g</a></p>
</li>
<li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31069">https://nvd.nist.gov/vuln/detail/CVE-2022-31069</a></p>
</li>
<li><p><a href="https://github.com/Finastra/finastra-nodejs-libs/pull/231">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-j562-c3cw-3p5g">https://github.com/advisories/GHSA-j562-c3cw-3p5g</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j562-c3cw-3p5g</uri>
        </author>
        <published>2022-06-17T21:39:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strikeentco/set] Prototype pollution in @strikeentco/set]]></title>
        <id>https://github.com/advisories/GHSA-wwg2-2crq-6grr</id>
        <link href="https://github.com/advisories/GHSA-wwg2-2crq-6grr"/>
        <updated>2022-06-17T21:38:53.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in '@strikeentco/set' version 1.0.0 allows attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28267">https://nvd.nist.gov/vuln/detail/CVE-2020-28267</a></li>
<li><a href="https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60">https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267</a></li>
<li><a href="https://github.com/advisories/GHSA-wwg2-2crq-6grr">https://github.com/advisories/GHSA-wwg2-2crq-6grr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wwg2-2crq-6grr</uri>
        </author>
        <published>2022-05-24T17:34:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openpgp] OpenPGP 1.2.0 and earlier decrypts arbitrary messages]]></title>
        <id>https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</id>
        <link href="https://github.com/advisories/GHSA-qmvq-f3fj-m3wg"/>
        <updated>2022-06-17T21:22:32.000Z</updated>
        <content type="html"><![CDATA[<p>s2k.js in OpenPGP.js will decrypt arbitrary messages regardless of passphrase for crafted PGP keys which allows remote attackers to bypass authentication if message decryption is used as an authentication mechanism via a crafted symmetrically encrypted PGP message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8013">https://nvd.nist.gov/vuln/detail/CVE-2015-8013</a></li>
<li><a href="https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29">https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/10/30/5">http://www.openwall.com/lists/oss-security/2015/10/30/5</a></li>
<li><a href="https://github.com/advisories/GHSA-qmvq-f3fj-m3wg">https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</uri>
        </author>
        <published>2022-05-17T02:15:35.000Z</published>
    </entry>
</feed>