<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-08-14T21:01:27.012Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@cypress/request] Server-Side Request Forgery in Request]]></title>
        <id>https://github.com/advisories/GHSA-p8p7-x288-28g6</id>
        <link href="https://github.com/advisories/GHSA-p8p7-x288-28g6"/>
        <updated>2023-08-14T20:53:47.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>request</code> package through 2.88.2 for Node.js and the <code>@cypress/request</code> package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).</p>
<p>NOTE: The <code>request</code> package is no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28155">https://nvd.nist.gov/vuln/detail/CVE-2023-28155</a></li>
<li><a href="https://github.com/request/request/issues/3442">https://github.com/request/request/issues/3442</a></li>
<li><a href="https://github.com/request/request/pull/3444">https://github.com/request/request/pull/3444</a></li>
<li><a href="https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf">https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230413-0007/">https://security.netapp.com/advisory/ntap-20230413-0007/</a></li>
<li><a href="https://github.com/github/advisory-database/pull/2500">https://github.com/github/advisory-database/pull/2500</a></li>
<li><a href="https://github.com/cypress-io/request/blob/master/lib/redirect.js#L116">https://github.com/cypress-io/request/blob/master/lib/redirect.js#L116</a></li>
<li><a href="https://github.com/request/request/blob/master/lib/redirect.js#L111">https://github.com/request/request/blob/master/lib/redirect.js#L111</a></li>
<li><a href="https://github.com/cypress-io/request/pull/28">https://github.com/cypress-io/request/pull/28</a></li>
<li><a href="https://github.com/cypress-io/request/commit/c5bcf21d40fb61feaff21a0e5a2b3934a440024f">https://github.com/cypress-io/request/commit/c5bcf21d40fb61feaff21a0e5a2b3934a440024f</a></li>
<li><a href="https://github.com/cypress-io/request/releases/tag/v3.0.0">https://github.com/cypress-io/request/releases/tag/v3.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p8p7-x288-28g6">https://github.com/advisories/GHSA-p8p7-x288-28g6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p8p7-x288-28g6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-16T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[request] Server-Side Request Forgery in Request]]></title>
        <id>https://github.com/advisories/GHSA-p8p7-x288-28g6</id>
        <link href="https://github.com/advisories/GHSA-p8p7-x288-28g6"/>
        <updated>2023-08-14T20:53:47.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>request</code> package through 2.88.2 for Node.js and the <code>@cypress/request</code> package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).</p>
<p>NOTE: The <code>request</code> package is no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28155">https://nvd.nist.gov/vuln/detail/CVE-2023-28155</a></li>
<li><a href="https://github.com/request/request/issues/3442">https://github.com/request/request/issues/3442</a></li>
<li><a href="https://github.com/request/request/pull/3444">https://github.com/request/request/pull/3444</a></li>
<li><a href="https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf">https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230413-0007/">https://security.netapp.com/advisory/ntap-20230413-0007/</a></li>
<li><a href="https://github.com/github/advisory-database/pull/2500">https://github.com/github/advisory-database/pull/2500</a></li>
<li><a href="https://github.com/cypress-io/request/blob/master/lib/redirect.js#L116">https://github.com/cypress-io/request/blob/master/lib/redirect.js#L116</a></li>
<li><a href="https://github.com/request/request/blob/master/lib/redirect.js#L111">https://github.com/request/request/blob/master/lib/redirect.js#L111</a></li>
<li><a href="https://github.com/cypress-io/request/pull/28">https://github.com/cypress-io/request/pull/28</a></li>
<li><a href="https://github.com/cypress-io/request/commit/c5bcf21d40fb61feaff21a0e5a2b3934a440024f">https://github.com/cypress-io/request/commit/c5bcf21d40fb61feaff21a0e5a2b3934a440024f</a></li>
<li><a href="https://github.com/cypress-io/request/releases/tag/v3.0.0">https://github.com/cypress-io/request/releases/tag/v3.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p8p7-x288-28g6">https://github.com/advisories/GHSA-p8p7-x288-28g6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p8p7-x288-28g6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-16T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[import-in-the-middle] import-in-the-middle has unsanitized user controlled input in module generation]]></title>
        <id>https://github.com/advisories/GHSA-5r27-rw8r-7967</id>
        <link href="https://github.com/advisories/GHSA-5r27-rw8r-7967"/>
        <updated>2023-08-14T13:14:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>import-in-the-middle</code> loader works by generating a wrapper module on the fly. The wrapper uses the module specifier to load the original module and add some wrapping code. It allows for remote code execution in cases where an application passes user-supplied input directly to an import() function.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in <code>import-in-the-middle</code> version 1.4.2</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Do not pass any user-supplied input to <code>import()</code>. Instead, verify it against a set of allowed values.</li>
<li>If using <code>import-in-the-middle</code> and support for EcmaScript Modules is not needed, ensure that none of the following options are set (either via command-line or the <code>NODE_OPTIONS</code> environment variable):</li>
</ul>
<pre><code>--loader=import-in-the-middle/hook.mjs
--loader import-in-the-middle/hook.mjs
</code></pre>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@datadoghq.com">security@datadoghq.com</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/DataDog/import-in-the-middle/security/advisories/GHSA-5r27-rw8r-7967">https://github.com/DataDog/import-in-the-middle/security/advisories/GHSA-5r27-rw8r-7967</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38704">https://nvd.nist.gov/vuln/detail/CVE-2023-38704</a></li>
<li><a href="https://github.com/DataDog/import-in-the-middle/commit/2531cdd9d1d73f9eaa87c16967f60cb276c1971b">https://github.com/DataDog/import-in-the-middle/commit/2531cdd9d1d73f9eaa87c16967f60cb276c1971b</a></li>
<li><a href="https://github.com/advisories/GHSA-5r27-rw8r-7967">https://github.com/advisories/GHSA-5r27-rw8r-7967</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5r27-rw8r-7967</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-08T19:26:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@hapi/hoek] hoek subject to prototype pollution via the clone function.]]></title>
        <id>https://github.com/advisories/GHSA-c429-5p7v-vgjp</id>
        <link href="https://github.com/advisories/GHSA-c429-5p7v-vgjp"/>
        <updated>2023-08-14T05:04:31.000Z</updated>
        <content type="html"><![CDATA[<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36604">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>
<li><a href="https://github.com/hapijs/hoek/issues/352">https://github.com/hapijs/hoek/issues/352</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a">https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90">https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90</a></li>
<li><a href="https://github.com/advisories/GHSA-c429-5p7v-vgjp">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c429-5p7v-vgjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@hapi/hoek] hoek subject to prototype pollution via the clone function.]]></title>
        <id>https://github.com/advisories/GHSA-c429-5p7v-vgjp</id>
        <link href="https://github.com/advisories/GHSA-c429-5p7v-vgjp"/>
        <updated>2023-08-14T05:04:31.000Z</updated>
        <content type="html"><![CDATA[<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36604">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>
<li><a href="https://github.com/hapijs/hoek/issues/352">https://github.com/hapijs/hoek/issues/352</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a">https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90">https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90</a></li>
<li><a href="https://github.com/advisories/GHSA-c429-5p7v-vgjp">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c429-5p7v-vgjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[marked] Inefficient Regular Expression Complexity in marked]]></title>
        <id>https://github.com/advisories/GHSA-5v2h-r2cx-5xgj</id>
        <link href="https://github.com/advisories/GHSA-5v2h-r2cx-5xgj"/>
        <updated>2023-08-14T05:04:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it?</em></p>
<p>Denial of service.</p>
<p>The regular expression <code>inline.reflinkSearch</code> may cause catastrophic backtracking against some strings.
PoC is the following.</p>
<pre><code class="language-javascript">import * as marked from 'marked';

console.log(marked.parse(`[x]: x

\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](\\[\\](`));
</code></pre>
<p><em>Who is impacted?</em></p>
<p>Anyone who runs untrusted markdown through marked and does not use a worker with a time limit.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched?</em></p>
<p>Yes</p>
<p><em>What versions should users upgrade to?</em></p>
<p>4.0.10</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Do not run untrusted markdown through marked or run marked on a <a href="https://marked.js.org/using_advanced#workers">worker</a> thread and set a reasonable time limit to prevent draining resources.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://marked.js.org/using_advanced#workers">https://marked.js.org/using_advanced#workers</a></li>
<li><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/markedjs/marked">marked</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/markedjs/marked/security/advisories/GHSA-5v2h-r2cx-5xgj">https://github.com/markedjs/marked/security/advisories/GHSA-5v2h-r2cx-5xgj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21681">https://nvd.nist.gov/vuln/detail/CVE-2022-21681</a></li>
<li><a href="https://github.com/markedjs/marked/commit/8f806573a3f6c6b7a39b8cdb66ab5ebb8d55a5f5">https://github.com/markedjs/marked/commit/8f806573a3f6c6b7a39b8cdb66ab5ebb8d55a5f5</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/</a></li>
<li><a href="https://github.com/advisories/GHSA-5v2h-r2cx-5xgj">https://github.com/advisories/GHSA-5v2h-r2cx-5xgj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5v2h-r2cx-5xgj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-01-14T21:04:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urijs] Hostname spoofing via backslashes in URL]]></title>
        <id>https://github.com/advisories/GHSA-p6j9-7xhc-rhwp</id>
        <link href="https://github.com/advisories/GHSA-p6j9-7xhc-rhwp"/>
        <updated>2023-08-14T05:04:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If using affected versions to determine a URL's hostname, the hostname can be spoofed by using a backslash (<code>\</code>) character as part of the scheme delimiter, e.g. <code>scheme:/\hostname</code>. If the hostname is used in security decisions, the decision may be incorrect.</p>
<p>Depending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior.</p>
<p>Example URL: <code>https:/\expected-example.com/path</code>
Escaped string: <code>https:/\\expected-example.com/path</code> (JavaScript strings must escape backslash)</p>
<p>Affected versions incorrectly return no hostname. Patched versions correctly return <code>expected-example.com</code>. Patched versions match the behavior of other parsers which implement the <a href="https://url.spec.whatwg.org/">WHATWG URL specification</a>, including web browsers and <a href="https://nodejs.org/api/url.html">Node's built-in URL class</a>.</p>
<h3 id="patches">Patches</h3>
<p>Version 1.19.6 is patched against all known payload variants.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/medialize/URI.js/releases/tag/v1.19.6">https://github.com/medialize/URI.js/releases/tag/v1.19.6</a> (fix for this particular bypass)
<a href="https://github.com/medialize/URI.js/releases/tag/v1.19.4">https://github.com/medialize/URI.js/releases/tag/v1.19.4</a> (fix for related bypass)
<a href="https://github.com/medialize/URI.js/releases/tag/v1.19.3">https://github.com/medialize/URI.js/releases/tag/v1.19.3</a> (fix for related bypass)
<a href="https://github.com/medialize/URI.js/pull/233">PR #233</a> (initial fix for backslash handling)</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, open an issue in <a href="https://github.com/medialize/URI.js">https://github.com/medialize/URI.js</a></p>
<h3 id="reporter-credit">Reporter credit</h3>
<p><a href="https://twitter.com/ynizry">Yaniv Nizry</a> from the CxSCA AppSec team at Checkmarx</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/medialize/URI.js/security/advisories/GHSA-p6j9-7xhc-rhwp">https://github.com/medialize/URI.js/security/advisories/GHSA-p6j9-7xhc-rhwp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27516">https://nvd.nist.gov/vuln/detail/CVE-2021-27516</a></li>
<li><a href="https://github.com/medialize/URI.js/commit/a1ad8bcbc39a4d136d7e252e76e957f3ece70839">https://github.com/medialize/URI.js/commit/a1ad8bcbc39a4d136d7e252e76e957f3ece70839</a></li>
<li><a href="https://github.com/medialize/URI.js/releases/tag/v1.19.6">https://github.com/medialize/URI.js/releases/tag/v1.19.6</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4305">https://advisory.checkmarx.net/advisory/CX-2021-4305</a></li>
<li><a href="https://github.com/advisories/GHSA-p6j9-7xhc-rhwp">https://github.com/advisories/GHSA-p6j9-7xhc-rhwp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6j9-7xhc-rhwp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-03-01T20:03:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[diff] Regular Expression Denial of Service (ReDoS)]]></title>
        <id>https://github.com/advisories/GHSA-h6ch-v84p-w6p9</id>
        <link href="https://github.com/advisories/GHSA-h6ch-v84p-w6p9"/>
        <updated>2023-08-14T05:04:30.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in diff before v3.5.0, the affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0">https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1552148">https://bugzilla.redhat.com/show_bug.cgi?id=1552148</a></li>
<li><a href="https://snyk.io/vuln/npm:diff:20180305">https://snyk.io/vuln/npm:diff:20180305</a></li>
<li><a href="https://www.npmjs.com/advisories/1631">https://www.npmjs.com/advisories/1631</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/WS-2018-0590">https://www.whitesourcesoftware.com/vulnerability-database/WS-2018-0590</a></li>
<li><a href="https://github.com/advisories/GHSA-h6ch-v84p-w6p9">https://github.com/advisories/GHSA-h6ch-v84p-w6p9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6ch-v84p-w6p9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-06-13T18:58:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urijs] Incorrect protocol extraction via \r, \n and \t characters]]></title>
        <id>https://github.com/advisories/GHSA-3vjf-82ff-p4r3</id>
        <link href="https://github.com/advisories/GHSA-3vjf-82ff-p4r3"/>
        <updated>2023-08-14T05:04:16.000Z</updated>
        <content type="html"><![CDATA[<p>\r, \n and \t characters in user-input URLs can potentially lead to incorrect protocol extraction when using npm package urijs prior to version 1.19.11.</p>
<p>This can lead to XSS when the module is used to prevent passing in malicious javascript: links into HTML or Javascript (see following example):</p>
<pre><code>const parse = require('urijs')
const express = require('express')
const app = express()
const port = 3000

input = "ja\r\nvascript:alert(1)"
url = parse(input)

console.log(url)

app.get('/', (req, res) =&gt; {
 if (url.protocol !== "javascript:") {res.send("&lt;iframe src=\'" + input + "\'&gt;CLICK ME!&lt;/iframe&gt;")}
})

app.listen(port, () =&gt; {
 console.log(`Example app listening on port ${port}`)
})
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1243">https://nvd.nist.gov/vuln/detail/CVE-2022-1243</a></li>
<li><a href="https://github.com/medialize/uri.js/commit/b0c9796aa1a95a85f40924fb18b1e5da3dc8ffae">https://github.com/medialize/uri.js/commit/b0c9796aa1a95a85f40924fb18b1e5da3dc8ffae</a></li>
<li><a href="https://huntr.dev/bounties/8c5afc47-1553-4eba-a98e-024e4cc3dfb7">https://huntr.dev/bounties/8c5afc47-1553-4eba-a98e-024e4cc3dfb7</a></li>
<li><a href="https://github.com/advisories/GHSA-3vjf-82ff-p4r3">https://github.com/advisories/GHSA-3vjf-82ff-p4r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3vjf-82ff-p4r3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-06T00:01:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plist] Prototype pollution in Plist before 3.0.5 can cause denial of service]]></title>
        <id>https://github.com/advisories/GHSA-4cpg-3vgw-4877</id>
        <link href="https://github.com/advisories/GHSA-4cpg-3vgw-4877"/>
        <updated>2023-08-14T05:04:04.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability via <code>.parse()</code> in Plist allows attackers to cause a Denial of Service (DoS) and may lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22912">https://nvd.nist.gov/vuln/detail/CVE-2022-22912</a></li>
<li><a href="https://github.com/TooTallNate/plist.js/issues/114">https://github.com/TooTallNate/plist.js/issues/114</a></li>
<li><a href="https://github.com/TooTallNate/plist.js/pull/118">https://github.com/TooTallNate/plist.js/pull/118</a></li>
<li><a href="https://github.com/TooTallNate/plist.js/commit/96e2303d059e6be0c9e0c4773226d14b4758de52">https://github.com/TooTallNate/plist.js/commit/96e2303d059e6be0c9e0c4773226d14b4758de52</a></li>
<li><a href="https://github.com/advisories/GHSA-4cpg-3vgw-4877">https://github.com/advisories/GHSA-4cpg-3vgw-4877</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cpg-3vgw-4877</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-02-18T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[marked] Inefficient Regular Expression Complexity in marked]]></title>
        <id>https://github.com/advisories/GHSA-rrrm-qjm4-v8hf</id>
        <link href="https://github.com/advisories/GHSA-rrrm-qjm4-v8hf"/>
        <updated>2023-08-14T05:03:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it?</em></p>
<p>Denial of service.</p>
<p>The regular expression <code>block.def</code> may cause catastrophic backtracking against some strings.
PoC is the following.</p>
<pre><code class="language-javascript">import * as marked from "marked";

marked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);
</code></pre>
<p><em>Who is impacted?</em></p>
<p>Anyone who runs untrusted markdown through marked and does not use a worker with a time limit.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched?</em></p>
<p>Yes</p>
<p><em>What versions should users upgrade to?</em></p>
<p>4.0.10</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Do not run untrusted markdown through marked or run marked on a <a href="https://marked.js.org/using_advanced#workers">worker</a> thread and set a reasonable time limit to prevent draining resources.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://marked.js.org/using_advanced#workers">https://marked.js.org/using_advanced#workers</a></li>
<li><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/markedjs/marked">marked</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/markedjs/marked/security/advisories/GHSA-rrrm-qjm4-v8hf">https://github.com/markedjs/marked/security/advisories/GHSA-rrrm-qjm4-v8hf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21680">https://nvd.nist.gov/vuln/detail/CVE-2022-21680</a></li>
<li><a href="https://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0">https://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0</a></li>
<li><a href="https://github.com/markedjs/marked/releases/tag/v4.0.10">https://github.com/markedjs/marked/releases/tag/v4.0.10</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/</a></li>
<li><a href="https://github.com/advisories/GHSA-rrrm-qjm4-v8hf">https://github.com/advisories/GHSA-rrrm-qjm4-v8hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrrm-qjm4-v8hf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-01-14T21:04:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodebb-plugin-markdown] NodeBB Cross-site Scripting Vulnerability in Markdown Processing]]></title>
        <id>https://github.com/advisories/GHSA-9g4f-5rpg-4948</id>
        <link href="https://github.com/advisories/GHSA-9g4f-5rpg-4948"/>
        <updated>2023-08-13T05:02:21.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in NodeBB before 0.7 allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) javascript: or (2) data: URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-3296">https://nvd.nist.gov/vuln/detail/CVE-2015-3296</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/04/10/10">http://www.openwall.com/lists/oss-security/2015/04/10/10</a></li>
<li><a href="https://github.com/NodeBB/NodeBB/issues/2273">https://github.com/NodeBB/NodeBB/issues/2273</a></li>
<li><a href="https://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3">https://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3</a></li>
<li><a href="https://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3">https://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3</a></li>
<li><a href="https://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824">https://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824</a></li>
<li><a href="https://github.com/advisories/GHSA-9g4f-5rpg-4948">https://github.com/advisories/GHSA-9g4f-5rpg-4948</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9g4f-5rpg-4948</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:47:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodebb] NodeBB Cross-site Scripting Vulnerability in Markdown Processing]]></title>
        <id>https://github.com/advisories/GHSA-9g4f-5rpg-4948</id>
        <link href="https://github.com/advisories/GHSA-9g4f-5rpg-4948"/>
        <updated>2023-08-13T05:02:21.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in NodeBB before 0.7 allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) javascript: or (2) data: URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-3296">https://nvd.nist.gov/vuln/detail/CVE-2015-3296</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/04/10/10">http://www.openwall.com/lists/oss-security/2015/04/10/10</a></li>
<li><a href="https://github.com/NodeBB/NodeBB/issues/2273">https://github.com/NodeBB/NodeBB/issues/2273</a></li>
<li><a href="https://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3">https://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3</a></li>
<li><a href="https://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3">https://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3</a></li>
<li><a href="https://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824">https://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824</a></li>
<li><a href="https://github.com/advisories/GHSA-9g4f-5rpg-4948">https://github.com/advisories/GHSA-9g4f-5rpg-4948</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9g4f-5rpg-4948</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:47:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-worker-threads-pool] SUCHMOKUO node-worker-threads-pool denial of service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7vxc-q7rv-qfj8</id>
        <link href="https://github.com/advisories/GHSA-7vxc-q7rv-qfj8"/>
        <updated>2023-08-11T22:16:45.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in StaticPool in SUCHMOKUO node-worker-threads-pool version 1.4.3 that allows attackers to cause a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29057">https://nvd.nist.gov/vuln/detail/CVE-2021-29057</a></li>
<li><a href="https://github.com/SUCHMOKUO/node-worker-threads-pool/issues/20">https://github.com/SUCHMOKUO/node-worker-threads-pool/issues/20</a></li>
<li><a href="https://github.com/advisories/GHSA-7vxc-q7rv-qfj8">https://github.com/advisories/GHSA-7vxc-q7rv-qfj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vxc-q7rv-qfj8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-11T15:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hellojs] MrSwitch hello.js vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-g3vf-47fv-8f3c</id>
        <link href="https://github.com/advisories/GHSA-g3vf-47fv-8f3c"/>
        <updated>2023-08-11T22:08:43.000Z</updated>
        <content type="html"><![CDATA[<p>A prototype pollution vulnerability in MrSwitch hello.js prior to version 1.18.8 allows remote attackers to execute arbitrary code via <code>hello.utils.extend</code> function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26505">https://nvd.nist.gov/vuln/detail/CVE-2021-26505</a></li>
<li><a href="https://github.com/MrSwitch/hello.js/issues/634">https://github.com/MrSwitch/hello.js/issues/634</a></li>
<li><a href="https://github.com/MrSwitch/hello.js/commit/7ab50aeff2d41991f08d4ad6c0481125eea8f6b7">https://github.com/MrSwitch/hello.js/commit/7ab50aeff2d41991f08d4ad6c0481125eea8f6b7</a></li>
<li><a href="https://github.com/advisories/GHSA-g3vf-47fv-8f3c">https://github.com/advisories/GHSA-g3vf-47fv-8f3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3vf-47fv-8f3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-11T15:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[braft-editor] Margox Braft-Editor Cross-site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jfrf-vv54-j2jg</id>
        <link href="https://github.com/advisories/GHSA-jfrf-vv54-j2jg"/>
        <updated>2023-08-11T22:06:57.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting (XSS) vulnerability in margox braft-editor version 2.3.8, allows remote attackers to execute arbitrary code via the embed media feature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27524">https://nvd.nist.gov/vuln/detail/CVE-2021-27524</a></li>
<li><a href="https://github.com/margox/braft-editor/issues/880">https://github.com/margox/braft-editor/issues/880</a></li>
<li><a href="https://github.com/advisories/GHSA-jfrf-vv54-j2jg">https://github.com/advisories/GHSA-jfrf-vv54-j2jg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfrf-vv54-j2jg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-11T15:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] OpenZeppelin Contracts vulnerable to Improper Escaping of Output]]></title>
        <id>https://github.com/advisories/GHSA-g4vp-m682-qqmp</id>
        <link href="https://github.com/advisories/GHSA-g4vp-m682-qqmp"/>
        <updated>2023-08-11T19:00:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>OpenZeppelin Contracts is a library for secure smart contract development. Starting in version 4.0.0 and prior to version 4.9.3, contracts using <code>ERC2771Context</code> along with a custom trusted forwarder may see <code>_msgSender</code> return <code>address(0)</code> in calls that originate from the forwarder with calldata shorter than 20 bytes. This combination of circumstances does not appear to be common, in particular it is not the case for <code>MinimalForwarder</code> from OpenZeppelin Contracts, or any deployed forwarder the team is aware of, given that the signer address is appended to all calls that originate from these forwarders.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in v4.9.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-g4vp-m682-qqmp">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-g4vp-m682-qqmp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40014">https://nvd.nist.gov/vuln/detail/CVE-2023-40014</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4481">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4481</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4484">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4484</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/9445f96223041abf2bf08daa56f8da50b674cbcd">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/9445f96223041abf2bf08daa56f8da50b674cbcd</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/e4435eed757d4309436b1e06608e97b6d6e2fdb5">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/e4435eed757d4309436b1e06608e97b6d6e2fdb5</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/CHANGELOG.md">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/CHANGELOG.md</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.3</a></li>
<li><a href="https://github.com/advisories/GHSA-g4vp-m682-qqmp">https://github.com/advisories/GHSA-g4vp-m682-qqmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4vp-m682-qqmp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-11T19:00:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts] OpenZeppelin Contracts vulnerable to Improper Escaping of Output]]></title>
        <id>https://github.com/advisories/GHSA-g4vp-m682-qqmp</id>
        <link href="https://github.com/advisories/GHSA-g4vp-m682-qqmp"/>
        <updated>2023-08-11T19:00:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>OpenZeppelin Contracts is a library for secure smart contract development. Starting in version 4.0.0 and prior to version 4.9.3, contracts using <code>ERC2771Context</code> along with a custom trusted forwarder may see <code>_msgSender</code> return <code>address(0)</code> in calls that originate from the forwarder with calldata shorter than 20 bytes. This combination of circumstances does not appear to be common, in particular it is not the case for <code>MinimalForwarder</code> from OpenZeppelin Contracts, or any deployed forwarder the team is aware of, given that the signer address is appended to all calls that originate from these forwarders.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in v4.9.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-g4vp-m682-qqmp">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-g4vp-m682-qqmp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40014">https://nvd.nist.gov/vuln/detail/CVE-2023-40014</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4481">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4481</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4484">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4484</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/9445f96223041abf2bf08daa56f8da50b674cbcd">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/9445f96223041abf2bf08daa56f8da50b674cbcd</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/e4435eed757d4309436b1e06608e97b6d6e2fdb5">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/e4435eed757d4309436b1e06608e97b6d6e2fdb5</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/CHANGELOG.md">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/CHANGELOG.md</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.3</a></li>
<li><a href="https://github.com/advisories/GHSA-g4vp-m682-qqmp">https://github.com/advisories/GHSA-g4vp-m682-qqmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4vp-m682-qqmp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-11T19:00:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[critters] Critters Cross-site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cx3j-qqxj-9597</id>
        <link href="https://github.com/advisories/GHSA-cx3j-qqxj-9597"/>
        <updated>2023-08-11T18:57:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Critters version 0.0.17-0.0.19 have an issue when parsing the HTML which leads to a potential <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> bug.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been fixed in <code>v0.0.20</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Upgrading Critters version to <code>&gt;0.0.20</code> is the easiest fix. This is a non breaking version upgrade so we recommend all users to use <code>v0.0.20</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/GoogleChromeLabs/critters/security/advisories/GHSA-cx3j-qqxj-9597">https://github.com/GoogleChromeLabs/critters/security/advisories/GHSA-cx3j-qqxj-9597</a></li>
<li><a href="https://github.com/GoogleChromeLabs/critters/pull/133">https://github.com/GoogleChromeLabs/critters/pull/133</a></li>
<li><a href="https://github.com/GoogleChromeLabs/critters/commit/7757902c9e0b3285d516359b3cb602cd9d50d80e">https://github.com/GoogleChromeLabs/critters/commit/7757902c9e0b3285d516359b3cb602cd9d50d80e</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3j-qqxj-9597">https://github.com/advisories/GHSA-cx3j-qqxj-9597</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3j-qqxj-9597</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-11T18:57:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@ensdomains/ens-contracts] .eth registrar controller can shorten the duration of registered names]]></title>
        <id>https://github.com/advisories/GHSA-rrxv-q8m4-wch3</id>
        <link href="https://github.com/advisories/GHSA-rrxv-q8m4-wch3"/>
        <updated>2023-08-10T22:10:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>According to the documentation, controllers are allowed to register new domains and extend the expiry of existing domains, but they cannot change the ownership or reduce the expiration time of existing domains. However, a preliminary analysis suggests that an attacker-controlled controller may be able to reduce the expiration time of existing domains due to an integer overflow in the renew function.</p>
<p>The vulnerability resides in the following GitHub repository: <a href="https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171">https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171</a> </p>
<p>The vulnerable line of code is:</p>
<pre><code class="language-js">require(
            expiries[id] + duration + GRACE_PERIOD &gt; duration + GRACE_PERIOD
        ); // Prevent future overflow
</code></pre>
<p>In this code snippet, the <code>duration</code> variable is user-supplied, making it possible to provide a value that would cause an overflow on both sides of the '&gt;' expression, ultimately rendering the condition true. Specifically, when the duration is set to <code>2^256 - GRACE_PERIOD</code>, the subsequent line <code>expiries[id] += duration;</code> also experiences an overflow, as <code>expiries[id]</code> is greater than <code>GRACE_PERIOD</code>. This results in the reduction of <code>expiries[id]</code> by <code>GRACE_PERIOD</code>. By repeatedly calling the renew function, an attacker could potentially force the expiration of an ENS record.</p>
<p>You can find the PoC included in the attached document. To execute the test, please use the following command:</p>
<pre><code>forge test -vvv --match-contract RegistrarExploit --fork-url &lt;alchemy_url&gt;
</code></pre>
<p>Replace <code>&lt;alchemy_url&gt;</code> with your Alchemy API URL. This command will run the Foundry test file and demonstrate the potential vulnerability.</p>
<h3 id="impact">Impact</h3>
<p>If successfully exploited, this vulnerability would enable attackers to force the expiration of any ENS record, ultimately allowing them to claim the affected domains for themselves.</p>
<p>Currently, it would require a malicious DAO to exploit it. Nevertheless, any vulnerability present in the controllers could potentially render this issue exploitable in the future.</p>
<p>An additional concern is the possibility of renewal discounts. Should ENS decide to implement a system that offers unlimited .eth domains for a fixed fee in the future, the vulnerability could become exploitable by any user due to the reduced attack cost.</p>
<h3 id="patches">Patches</h3>
<p>A mitigation is being developed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As long as registration cost remains linear or superlinear based on registration duration, or limited to a reasonable maximum (eg, 1 million years), this vulnerability could only be exploited by a malicious DAO. The interim workaround is thus to take no action.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ensdomains/ens-contracts/security/advisories/GHSA-rrxv-q8m4-wch3">https://github.com/ensdomains/ens-contracts/security/advisories/GHSA-rrxv-q8m4-wch3</a></li>
<li><a href="https://github.com/ensdomains/ens-contracts/commit/e6b136e979084de3761c125142620304173990ca">https://github.com/ensdomains/ens-contracts/commit/e6b136e979084de3761c125142620304173990ca</a></li>
<li><a href="https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171">https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38698">https://nvd.nist.gov/vuln/detail/CVE-2023-38698</a></li>
<li><a href="https://github.com/advisories/GHSA-rrxv-q8m4-wch3">https://github.com/advisories/GHSA-rrxv-q8m4-wch3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrxv-q8m4-wch3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-01T19:48:31.000Z</published>
    </entry>
</feed>