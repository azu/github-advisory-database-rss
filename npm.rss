<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-06-03T00:18:09.422Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[@shopify/hydrogen] Potential Cross-site Scripting vulnerability in Hydrogen]]></title>
        <id>https://github.com/advisories/GHSA-6j22-wv8g-894f</id>
        <link href="https://github.com/advisories/GHSA-6j22-wv8g-894f"/>
        <updated>2022-06-02T22:17:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. </p>
<h3 id="patches">Patches</h3>
<p>All Hydrogen users should upgrade their project to v0.19.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no current workaround, and users should update as soon as possible.</p>
<p>Additionally, the Content Security Policy is not an effective mitigation for this vulnerability. </p>
<h3 id="references">References</h3>
<p>GitHub: <a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">Hydrogen v0.19.0</a>
Fix PR: <a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Shopify/hydrogen/issues/new/choose">Shopify/hydrogen</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f">https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29230">https://nvd.nist.gov/vuln/detail/CVE-2022-29230</a></li>
<li><a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></li>
<li><a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6j22-wv8g-894f">https://github.com/advisories/GHSA-6j22-wv8g-894f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j22-wv8g-894f</uri>
        </author>
        <published>2022-05-19T20:29:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[protobufjs] Prototype Pollution in protobufjs]]></title>
        <id>https://github.com/advisories/GHSA-g954-5hwp-pp24</id>
        <link href="https://github.com/advisories/GHSA-g954-5hwp-pp24"/>
        <updated>2022-06-02T20:36:06.000Z</updated>
        <content type="html"><![CDATA[<p>The package protobufjs before 6.11.3 are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype.</p>
<p>This vulnerability can occur in multiple ways:</p>
<ol>
<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>
<li>by parsing/loading .proto files</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25878">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1731">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>
<li><a href="https://github.com/advisories/GHSA-g954-5hwp-pp24">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g954-5hwp-pp24</uri>
        </author>
        <published>2022-05-28T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2022-06-02T18:58:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2022-06-02T18:58:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[async] Prototype Pollution in async]]></title>
        <id>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</id>
        <link href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25"/>
        <updated>2022-06-02T17:28:57.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43138">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>
<li><a href="https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/internal/iterator.js">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>
<li><a href="https://jsfiddle.net/oz5twjd9/">https://jsfiddle.net/oz5twjd9/</a></li>
<li><a href="https://github.com/caolan/async/pull/1828">https://github.com/caolan/async/pull/1828</a></li>
<li><a href="https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>
<li><a href="https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</uri>
        </author>
        <published>2022-04-07T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[npm] Packing does not respect root-level ignore files in workspaces]]></title>
        <id>https://github.com/advisories/GHSA-hj9c-8jmm-8c52</id>
        <link href="https://github.com/advisories/GHSA-hj9c-8jmm-8c52"/>
        <updated>2022-06-02T22:19:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>npm pack</code> ignores root-level <code>.gitignore</code> &amp; <code>.npmignore</code> file exclusion directives when run in a workspace or with a workspace flag (ie. <code>--workspaces</code>, <code>--workspace=&lt;name&gt;</code>). Anyone who has run <code>npm pack</code> or <code>npm publish</code> with workspaces, as of <a href="https://github.com/npm/cli/releases/tag/v7.9.0">v7.9.0</a> &amp; <a href="https://github.com/npm/cli/releases/tag/v7.13.0">v7.13.0</a> respectively, may be affected and have published files into the npm registry they did not intend to include.</p>
<h3 id="patch">Patch</h3>
<ul>
<li>Upgrade to the latest, patched version of <code>npm</code> (<a href="https://github.com/npm/cli/releases/tag/v8.11.0"><code>v8.11.0</code></a> or greater), run: <code>npm i -g npm@latest</code></li>
<li>Node.js versions <a href="https://github.com/nodejs/node/releases/tag/v16.15.1"><code>v16.15.1</code></a>, <a href="https://github.com/nodejs/node/releases/tag/v17.9.1"><code>v17.19.1</code></a> &amp; <a href="https://github.com/nodejs/node/releases/tag/v18.3.0"><code>v18.3.0</code></a> include the patched <code>v8.11.0</code> version of <code>npm</code></li>
</ul>
<h4 id="steps-to-take-to-see-if-youre-impacted">Steps to take to see if you're impacted</h4>
<ol>
<li>Run <code>npm publish --dry-run</code> or <code>npm pack</code> with an <code>npm</code> version <code>&gt;=7.9.0</code> &amp; <code>&lt;8.11.0</code> inside the project's root directory using a workspace flag like: <code>--workspaces</code> or <code>--workspace=&lt;name&gt;</code> (ex. <code>npm pack --workspace=foo</code>)</li>
<li>Check the output in your terminal which will list the package contents (note: <code>tar -tvf &lt;package-on-disk&gt;</code> also works)</li>
<li>If you find that there are files included you did not expect, you should:</li>
</ol>
<p>  3.1. Create &amp; publish a new release excluding those files (ref. <a href="https://docs.npmjs.com/cli/v8/using-npm/developers#keeping-files-out-of-your-package">"Keeping files out of your Package"</a>)
  3.2. Deprecate the old package (ex. <code>npm deprecate &lt;pkg&gt;[@&lt;version&gt;] &lt;message&gt;</code>)
  3.3. Revoke or rotate any sensitive information (ex. passwords, tokens, secrets etc.) which might have been exposed</p>
<h3 id="references">References</h3>
<ul>
<li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29244">CVE-2022-29244</a></p>
</li>
<li><p><a href="https://github.com/npm/npm-packlist"><code>npm-packlist</code></a></p>
</li>
<li><p><a href="https://github.com/npm/cli/tree/latest/workspaces/libnpmpack"><code>libnpmpack</code></a></p>
</li>
<li><p><a href="https://github.com/npm/cli/tree/latest/workspaces/libnpmpublish"><code>libnpmpublish</code></a></p>
<h3 id="references-1">References</h3>
</li>
<li><p><a href="https://github.com/npm/cli/security/advisories/GHSA-hj9c-8jmm-8c52">https://github.com/npm/cli/security/advisories/GHSA-hj9c-8jmm-8c52</a></p>
</li>
<li><p><a href="https://github.com/nodejs/node/releases/tag/v16.15.1">https://github.com/nodejs/node/releases/tag/v16.15.1</a></p>
</li>
<li><p><a href="https://github.com/nodejs/node/releases/tag/v17.9.1">https://github.com/nodejs/node/releases/tag/v17.9.1</a></p>
</li>
<li><p><a href="https://github.com/nodejs/node/releases/tag/v18.3.0">https://github.com/nodejs/node/releases/tag/v18.3.0</a></p>
</li>
<li><p><a href="https://github.com/npm/cli/releases/tag/v8.11.0">https://github.com/npm/cli/releases/tag/v8.11.0</a></p>
</li>
<li><p><a href="https://github.com/npm/cli/tree/latest/workspaces/libnpmpack">https://github.com/npm/cli/tree/latest/workspaces/libnpmpack</a></p>
</li>
<li><p><a href="https://github.com/npm/cli/tree/latest/workspaces/libnpmpublish">https://github.com/npm/cli/tree/latest/workspaces/libnpmpublish</a></p>
</li>
<li><p><a href="https://github.com/npm/npm-packlist">https://github.com/npm/npm-packlist</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-hj9c-8jmm-8c52">https://github.com/advisories/GHSA-hj9c-8jmm-8c52</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj9c-8jmm-8c52</uri>
        </author>
        <published>2022-06-02T15:37:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simple-plist] Prototype Pollution in simple-plist]]></title>
        <id>https://github.com/advisories/GHSA-gff7-g5r8-mg8m</id>
        <link href="https://github.com/advisories/GHSA-gff7-g5r8-mg8m"/>
        <updated>2022-06-01T21:52:07.000Z</updated>
        <content type="html"><![CDATA[<p>simple-plist v1.3.0 was discovered to contain a prototype pollution vulnerability via .parse().</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26260">https://nvd.nist.gov/vuln/detail/CVE-2022-26260</a></li>
<li><a href="https://github.com/wollardj/simple-plist/issues/60">https://github.com/wollardj/simple-plist/issues/60</a></li>
<li><a href="https://github.com/wollardj/simple-plist/issues/60#issuecomment-1083991840">https://github.com/wollardj/simple-plist/issues/60#issuecomment-1083991840</a></li>
<li><a href="https://github.com/advisories/GHSA-gff7-g5r8-mg8m">https://github.com/advisories/GHSA-gff7-g5r8-mg8m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gff7-g5r8-mg8m</uri>
        </author>
        <published>2022-03-23T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[predefine] Prototype pollution vulnerability in 'predefine']]></title>
        <id>https://github.com/advisories/GHSA-mx3x-ghqm-r43h</id>
        <link href="https://github.com/advisories/GHSA-mx3x-ghqm-r43h"/>
        <updated>2022-06-01T21:51:13.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in 'predefine' versions 0.0.0 through 0.1.2 allows an attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28280">https://nvd.nist.gov/vuln/detail/CVE-2020-28280</a></li>
<li><a href="https://github.com/bigpipe/predefine/blob/238137e3d1b8288ff5d7529c3cbcdd371888c26b/index.js#L284">https://github.com/bigpipe/predefine/blob/238137e3d1b8288ff5d7529c3cbcdd371888c26b/index.js#L284</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28280">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28280</a></li>
<li><a href="https://github.com/bigpipe/predefine/commit/1a86a013c0b37c9d6ca078ba34017052af38b7fc">https://github.com/bigpipe/predefine/commit/1a86a013c0b37c9d6ca078ba34017052af38b7fc</a></li>
<li><a href="https://github.com/advisories/GHSA-mx3x-ghqm-r43h">https://github.com/advisories/GHSA-mx3x-ghqm-r43h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx3x-ghqm-r43h</uri>
        </author>
        <published>2021-10-12T16:27:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sharp] Possible vulnerability in sharp at 'npm install' time if an attacker has control over build environment]]></title>
        <id>https://github.com/advisories/GHSA-gp95-ppv5-3jc5</id>
        <link href="https://github.com/advisories/GHSA-gp95-ppv5-3jc5"/>
        <updated>2022-06-01T19:58:32.000Z</updated>
        <content type="html"><![CDATA[<p>There's a possible vulnerability in logic that is run only at <code>npm install</code> time when installing versions of <code>sharp</code> prior to the latest v0.30.5.</p>
<p>This is not part of any runtime code, does not affect Windows users at all, and is unlikely to affect anyone that already cares about the security of their build environment. However, out of an abundance of caution, I've created this advisory.</p>
<p>If an attacker has the ability to set the value of the <code>PKG_CONFIG_PATH</code> environment variable in a build environment then they might be able to use this to inject an arbitrary command at <code>npm install</code> time.</p>
<p>I've used the Common Vulnerability Scoring System (CVSS) calculator to determine the maximum possible impact, which suggests a "medium" score of 5.9, but for most people the real impact will be dealing with the noise from automated security tooling that this advisory will bring.</p>
<p><a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA:X&amp;version=3.1"><code>AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA:X</code></a></p>
<p>This problem was fixed in commit a6aeef6 and published as part of <code>sharp</code> v0.30.5.</p>
<p>Thank you very much to @dwisiswant0 for the responsible disclosure.</p>
<p>Remember: if an attacker has control over environment variables in your build environment then you have a bigger problem to deal with than this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lovell/sharp/security/advisories/GHSA-gp95-ppv5-3jc5">https://github.com/lovell/sharp/security/advisories/GHSA-gp95-ppv5-3jc5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29256">https://nvd.nist.gov/vuln/detail/CVE-2022-29256</a></li>
<li><a href="https://github.com/lovell/sharp/commit/a6aeef612be50f5868a77481848b1de674216f0c">https://github.com/lovell/sharp/commit/a6aeef612be50f5868a77481848b1de674216f0c</a></li>
<li><a href="https://github.com/advisories/GHSA-gp95-ppv5-3jc5">https://github.com/advisories/GHSA-gp95-ppv5-3jc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gp95-ppv5-3jc5</uri>
        </author>
        <published>2022-06-01T19:58:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eventsource] Exposure of Sensitive Information in eventsource]]></title>
        <id>https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</id>
        <link href="https://github.com/advisories/GHSA-6h5x-7c5m-7cr7"/>
        <updated>2022-05-31T23:17:01.000Z</updated>
        <content type="html"><![CDATA[<p>When fetching an url with a link to an external site (Redirect), the users Cookies &amp; Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be "sanitized."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1650">https://nvd.nist.gov/vuln/detail/CVE-2022-1650</a></li>
<li><a href="https://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4">https://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4</a></li>
<li><a href="https://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e">https://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e</a></li>
<li><a href="https://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508">https://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508</a></li>
<li><a href="https://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2">https://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6h5x-7c5m-7cr7">https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</uri>
        </author>
        <published>2022-05-13T00:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eventsource] Exposure of Sensitive Information in eventsource]]></title>
        <id>https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</id>
        <link href="https://github.com/advisories/GHSA-6h5x-7c5m-7cr7"/>
        <updated>2022-05-31T23:17:01.000Z</updated>
        <content type="html"><![CDATA[<p>When fetching an url with a link to an external site (Redirect), the users Cookies &amp; Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be "sanitized."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1650">https://nvd.nist.gov/vuln/detail/CVE-2022-1650</a></li>
<li><a href="https://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4">https://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4</a></li>
<li><a href="https://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e">https://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e</a></li>
<li><a href="https://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508">https://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508</a></li>
<li><a href="https://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2">https://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6h5x-7c5m-7cr7">https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h5x-7c5m-7cr7</uri>
        </author>
        <published>2022-05-13T00:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[swagger-ui-react] Server side request forgery in SwaggerUI]]></title>
        <id>https://github.com/advisories/GHSA-qrmm-w75w-3wpx</id>
        <link href="https://github.com/advisories/GHSA-qrmm-w75w-3wpx"/>
        <updated>2022-05-26T20:08:35.000Z</updated>
        <content type="html"><![CDATA[<p>SwaggerUI supports displaying remote OpenAPI definitions through the <code>?url</code> parameter. This enables robust demonstration capabilities on sites like <code>petstore.swagger.io</code>, <code>editor.swagger.io</code>, and similar sites, where users often want to see what their OpenAPI definitions would look like rendered.</p>
<p>However, this functionality may pose a risk for users who host their own SwaggerUI instances. In particular, including remote OpenAPI definitions opens a vector for phishing attacks by abusing the trusted names/domains of self-hosted instances.</p>
<p>An example scenario abusing this functionality could take the following form:</p>
<ul>
<li><code>https://example.com/api-docs</code> hosts a version of SwaggerUI with <code>?url=</code> query parameter enabled.</li>
<li>Users will trust the domain <code>https://example.com</code> and the contents of the OpenAPI definition.</li>
<li>A malicious actor may craft a similar OpenAPI definition and service that responds to the defined APIs at <code>https://evildomain</code>.</li>
<li>Users mistakenly click a phishing URL like <code>https://example.com/api-docs?url=https://evildomain/fakeapi.yaml</code> and enters sensitive data via the "Try-it-out" feature.</li>
</ul>
<p>We do want to stress that this attack vector is limited to scenarios that actively trick users into divulging sensitive information. The ease of this is highly contextual and, therefore, the threat model may be different for individual users and organizations. It is <em>not</em> possible to perform non-interactive attacks (e.g., cross-site scripting or code injection) through this mechanism.</p>
<h3 id="resolution">Resolution</h3>
<p>We've made the decision to <a href="https://github.com/swagger-api/swagger-ui/issues/4872">disable query parameters (#4872)</a> by default starting with SwaggerUI version <code>4.1.3</code>. Please update to this version when it becomes available (<strong>ETA: 2021 December</strong>). Users will still be able to be re-enable the options at their discretion. We'll continue to enable query parameters on the Swagger demo sites.</p>
<h3 id="workaround">Workaround</h3>
<p>If you host a version of SwaggerUI and wish to mitigate this issue immediately, you are encouraged to add the following custom plugin code:</p>
<pre><code class="language-js">SwaggerUI({
  //  ...other configuration options,
  plugins: [function UrlParamDisablePlugin() {
    return {
      statePlugins: {
        spec: {
          wrapActions: {
            // Remove the ?url parameter from loading an external OpenAPI definition.
            updateUrl: (oriAction) =&gt; (payload) =&gt; {
              const url = new URL(window.location.href)
              if (url.searchParams.has('url')) {
                url.searchParams.delete('url')
                window.location.replace(url.toString())
              }
              return oriAction(payload)
            }
          }
        }
      }
    }
  }],
})
</code></pre>
<h3 id="future-ux-work">Future UX work</h3>
<p>Through the exploration of this issue, it became apparent that users may not be aware to which web server the Try-it-out function will send requests. While this information is currently presented at the top of the page, understanding may improve by displaying it closer to the "Execute" button where requests are actually made. We'll be exploring these UX improvements over the coming months and welcome community input. Please create a Feature Request under the GitHub Issue tab to start a conversation with us and the community.</p>
<h2 id="reflected-xss-attack">Reflected XSS attack</h2>
<p><strong>Warning</strong> in versions &lt; 3.38.0, it is possible to combine the URL options (as mentioned above) with a vulnerability in DOMPurify (<a href="https://www.cvedetails.com/cve/CVE-2020-26870/">https://www.cvedetails.com/cve/CVE-2020-26870/</a>) to create a reflected XSS vector. If your version of Swagger UI is older than 3.38.0, we suggest you upgrade or implement the workaround as mentioned above.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx">https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/issues/4872">https://github.com/swagger-api/swagger-ui/issues/4872</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/commit/01a3e55960f864a0acf6a8d06e5ddaf6776a7f76">https://github.com/swagger-api/swagger-ui/commit/01a3e55960f864a0acf6a8d06e5ddaf6776a7f76</a></li>
<li><a href="https://github.com/advisories/GHSA-qrmm-w75w-3wpx">https://github.com/advisories/GHSA-qrmm-w75w-3wpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrmm-w75w-3wpx</uri>
        </author>
        <published>2021-12-09T19:08:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convict] Prototype Pollution in convict]]></title>
        <id>https://github.com/advisories/GHSA-x2w5-725j-gf2g</id>
        <link href="https://github.com/advisories/GHSA-x2w5-725j-gf2g"/>
        <updated>2022-05-26T19:43:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<ul>
<li>An attacker can inject attributes that are used in other components</li>
<li>An attacker can override existing attributes with ones that have incompatible type, which may lead to a crash.</li>
</ul>
<p>The main use case of Convict is for handling server-side configurations written by the admins owning the servers, and not random users. So it's unlikely that an admin would deliberately sabotage their own server. Still a situation can happen where an admin not knowledgeable about JavaScript could be tricked by an attacker into writing the malicious JavaScript code into some config files.</p>
<h3 id="patches">Patches</h3>
<p>The problem is patched in <code>convict@6.2.3</code>. Users should upgrade to <code>convict@6.2.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No way for users to fix or remediate the vulnerability without upgrading</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.huntr.dev/bounties/1-npm-convict/">https://www.huntr.dev/bounties/1-npm-convict/</a></li>
<li>#384</li>
<li>3b86be087d8f14681a9c889d45da7fe3ad9cd880</li>
<li>1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory: 
add your question as a comment in #384 </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mozilla/node-convict/security/advisories/GHSA-x2w5-725j-gf2g">https://github.com/mozilla/node-convict/security/advisories/GHSA-x2w5-725j-gf2g</a></li>
<li><a href="https://github.com/mozilla/node-convict/pull/384">https://github.com/mozilla/node-convict/pull/384</a></li>
<li><a href="https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880">https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880</a></li>
<li><a href="https://github.com/mozilla/node-convict/releases/tag/v6.2.2">https://github.com/mozilla/node-convict/releases/tag/v6.2.2</a></li>
<li><a href="https://www.huntr.dev/bounties/1-npm-convict/">https://www.huntr.dev/bounties/1-npm-convict/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22143">https://nvd.nist.gov/vuln/detail/CVE-2022-22143</a></li>
<li><a href="https://github.com/mozilla/node-convict/blob/5eb1314f85346760a3c31cb14510f2f0af11d0d3/packages/convict/src/main.js%23L569">https://github.com/mozilla/node-convict/blob/5eb1314f85346760a3c31cb14510f2f0af11d0d3/packages/convict/src/main.js%23L569</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-CONVICT-2340604">https://snyk.io/vuln/SNYK-JS-CONVICT-2340604</a></li>
<li><a href="https://github.com/advisories/GHSA-x2w5-725j-gf2g">https://github.com/advisories/GHSA-x2w5-725j-gf2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x2w5-725j-gf2g</uri>
        </author>
        <published>2022-04-20T16:21:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convict] Prototype Pollution in convict]]></title>
        <id>https://github.com/advisories/GHSA-jjf5-wx3j-3fv7</id>
        <link href="https://github.com/advisories/GHSA-jjf5-wx3j-3fv7"/>
        <updated>2022-05-25T22:54:52.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package convict before 6.2.3. This is a bypass of <a href="https://security.snyk.io/vuln/SNYK-JS-CONVICT-2340604">CVE-2022-22143</a>. The <a href="https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880">fix</a> introduced, relies on the startsWith method and does not prevent the vulnerability: before splitting the path, it checks if it starts with <strong>proto</strong> or this.constructor.prototype. To bypass this check it's possible to prepend the dangerous paths with any string value followed by a dot, like for example foo.<strong>proto</strong> or foo.this.constructor.prototype.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21190">https://nvd.nist.gov/vuln/detail/CVE-2022-21190</a></li>
<li><a href="https://github.com/mozilla/node-convict/commit/1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75">https://github.com/mozilla/node-convict/commit/1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75</a></li>
<li><a href="https://gist.github.com/dellalibera/cebce20e51410acebff1f46afdc89808">https://gist.github.com/dellalibera/cebce20e51410acebff1f46afdc89808</a></li>
<li><a href="https://github.com/mozilla/node-convict/blob/3b86be087d8f14681a9c889d45da7fe3ad9cd880/packages/convict/src/main.js%23L571">https://github.com/mozilla/node-convict/blob/3b86be087d8f14681a9c889d45da7fe3ad9cd880/packages/convict/src/main.js%23L571</a></li>
<li><a href="https://github.com/mozilla/node-convict/blob/master/CHANGELOG.md%23623---2022-05-07">https://github.com/mozilla/node-convict/blob/master/CHANGELOG.md%23623---2022-05-07</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-CONVICT-2774757">https://snyk.io/vuln/SNYK-JS-CONVICT-2774757</a></li>
<li><a href="https://github.com/advisories/GHSA-jjf5-wx3j-3fv7">https://github.com/advisories/GHSA-jjf5-wx3j-3fv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjf5-wx3j-3fv7</uri>
        </author>
        <published>2022-05-14T00:01:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sds] Prototype Pollution in sds]]></title>
        <id>https://github.com/advisories/GHSA-ph28-wwfj-fv7f</id>
        <link href="https://github.com/advisories/GHSA-ph28-wwfj-fv7f"/>
        <updated>2022-05-25T22:53:57.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package sds from 0.0.0. The library could be tricked into adding or modifying properties of the Object.prototype by abusing the set function located in js/set.js. <strong>Note:</strong> This vulnerability derives from an incomplete fix to CVE-2020-7618</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25862">https://nvd.nist.gov/vuln/detail/CVE-2022-25862</a></li>
<li><a href="https://github.com/monsterkodi/sds/blob/master/js/set.js">https://github.com/monsterkodi/sds/blob/master/js/set.js</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SDS-2385944">https://snyk.io/vuln/SNYK-JS-SDS-2385944</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7618">https://nvd.nist.gov/vuln/detail/CVE-2020-7618</a></li>
<li><a href="https://github.com/advisories/GHSA-ph28-wwfj-fv7f">https://github.com/advisories/GHSA-ph28-wwfj-fv7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ph28-wwfj-fv7f</uri>
        </author>
        <published>2022-05-14T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dicer] Crash in HeaderParser in dicer]]></title>
        <id>https://github.com/advisories/GHSA-wm7h-9275-46v2</id>
        <link href="https://github.com/advisories/GHSA-wm7h-9275-46v2"/>
        <updated>2022-05-25T20:23:49.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. A complete denial of service can be achived by sending the malicious form in a loop.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24434">https://nvd.nist.gov/vuln/detail/CVE-2022-24434</a></li>
<li><a href="https://github.com/mscdex/busboy/issues/250">https://github.com/mscdex/busboy/issues/250</a></li>
<li><a href="https://github.com/mscdex/dicer/pull/22">https://github.com/mscdex/dicer/pull/22</a></li>
<li><a href="https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac">https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-DICER-2311764">https://snyk.io/vuln/SNYK-JS-DICER-2311764</a></li>
<li><a href="https://github.com/advisories/GHSA-wm7h-9275-46v2">https://github.com/advisories/GHSA-wm7h-9275-46v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wm7h-9275-46v2</uri>
        </author>
        <published>2022-05-21T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tiddlywiki] Code execution via SVG file upload in tiddlywiki]]></title>
        <id>https://github.com/advisories/GHSA-cr9c-rhq6-vh53</id>
        <link href="https://github.com/advisories/GHSA-cr9c-rhq6-vh53"/>
        <updated>2022-05-25T20:13:42.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the file upload module of Tiddlywiki5 v5.2.2 allows attackers to execute arbitrary code via a crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29351">https://nvd.nist.gov/vuln/detail/CVE-2022-29351</a></li>
<li><a href="https://github.com/Jermolene/TiddlyWiki5">https://github.com/Jermolene/TiddlyWiki5</a></li>
<li><a href="https://github.com/jimcola99/corruptsvgfile">https://github.com/jimcola99/corruptsvgfile</a></li>
<li><a href="https://www.youtube.com/watch?v=F_DBx4psWns">https://www.youtube.com/watch?v=F_DBx4psWns</a></li>
<li><a href="http://tiddlywiki5.com">http://tiddlywiki5.com</a></li>
<li><a href="https://github.com/advisories/GHSA-cr9c-rhq6-vh53">https://github.com/advisories/GHSA-cr9c-rhq6-vh53</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cr9c-rhq6-vh53</uri>
        </author>
        <published>2022-05-17T00:01:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[workspace-tools] Command injection in workspace-tools]]></title>
        <id>https://github.com/advisories/GHSA-5875-m6jq-vf78</id>
        <link href="https://github.com/advisories/GHSA-5875-m6jq-vf78"/>
        <updated>2022-05-25T20:12:47.000Z</updated>
        <content type="html"><![CDATA[<p>The package workspace-tools before 0.18.4 is vulnerable to Command Injection via git argument injection. When calling the fetchRemoteBranch(remote: string, remoteBranch: string, cwd: string) function, both the remote and remoteBranch parameters are passed to the git fetch subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25865">https://nvd.nist.gov/vuln/detail/CVE-2022-25865</a></li>
<li><a href="https://github.com/microsoft/workspace-tools/pull/103">https://github.com/microsoft/workspace-tools/pull/103</a></li>
<li><a href="https://github.com/microsoft/workspace-tools/commit/9bc7e65ce497f87e1f363fd47b8f802f3d3cd978">https://github.com/microsoft/workspace-tools/commit/9bc7e65ce497f87e1f363fd47b8f802f3d3cd978</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-WORKSPACETOOLS-2421201">https://snyk.io/vuln/SNYK-JS-WORKSPACETOOLS-2421201</a></li>
<li><a href="https://github.com/advisories/GHSA-5875-m6jq-vf78">https://github.com/advisories/GHSA-5875-m6jq-vf78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5875-m6jq-vf78</uri>
        </author>
        <published>2022-05-14T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cassproject] Missing Cryptographic Step in cassproject]]></title>
        <id>https://github.com/advisories/GHSA-7qcx-4p32-qcmx</id>
        <link href="https://github.com/advisories/GHSA-7qcx-4p32-qcmx"/>
        <updated>2022-05-25T19:34:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>CaSS Library, (npm:cassproject) has a missing cryptographic step when storing cryptographic keys that can allow a server administrator access to an account’s cryptographic keys. This affects CaSS servers using standalone username/password authentication, which uses a method that expects e2e cryptographic security of authorization credentials.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in 1.5.8, however, the vulnerable accounts are only resecured when the user next logs in using standalone authentication, as the data required to resecure the account is not available to the server.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The issue may be mitigated by using SSO or client side certificates to log in. Please note that SSO and client side certificate authentication does not have this expectation of no-knowledge credential access, and cryptographic keys are available to the server administrator.</p>
<h3 id="references">References</h3>
<p>There are no references at this time.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/cassproject/CASS/issues">the CaSS Project Github</a></li>
<li>Email us at <a href="mailto:cass@eduworks.com">the CaSS Project</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cassproject/CASS/security/advisories/GHSA-7qcx-4p32-qcmx">https://github.com/cassproject/CASS/security/advisories/GHSA-7qcx-4p32-qcmx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29229">https://nvd.nist.gov/vuln/detail/CVE-2022-29229</a></li>
<li><a href="https://github.com/cassproject/CASS/releases/tag/1.5.8">https://github.com/cassproject/CASS/releases/tag/1.5.8</a></li>
<li><a href="https://github.com/advisories/GHSA-7qcx-4p32-qcmx">https://github.com/advisories/GHSA-7qcx-4p32-qcmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qcx-4p32-qcmx</uri>
        </author>
        <published>2022-05-25T19:34:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bootstrap-table] Cross-site Scripting in bootstrap-table]]></title>
        <id>https://github.com/advisories/GHSA-grw5-g9h2-wpg8</id>
        <link href="https://github.com/advisories/GHSA-grw5-g9h2-wpg8"/>
        <updated>2022-05-25T19:32:52.000Z</updated>
        <content type="html"><![CDATA[<p>Bootstrap Tables XSS vulnerability with Table Export plug-in when exportOptions: htmlContent is true in GitHub repository wenzhixin/bootstrap-table prior to 1.20.2. Disclosing session cookies, disclosing secure session data, exfiltrating data to third-parties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1726">https://nvd.nist.gov/vuln/detail/CVE-2022-1726</a></li>
<li><a href="https://github.com/wenzhixin/bootstrap-table/commit/b4a1e5dd332be652e0bc376fd9256886cf4bbde9">https://github.com/wenzhixin/bootstrap-table/commit/b4a1e5dd332be652e0bc376fd9256886cf4bbde9</a></li>
<li><a href="https://huntr.dev/bounties/9b85cc33-0395-4c31-8a42-3a94beb2efea">https://huntr.dev/bounties/9b85cc33-0395-4c31-8a42-3a94beb2efea</a></li>
<li><a href="https://github.com/advisories/GHSA-grw5-g9h2-wpg8">https://github.com/advisories/GHSA-grw5-g9h2-wpg8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-grw5-g9h2-wpg8</uri>
        </author>
        <published>2022-05-17T00:01:42.000Z</published>
    </entry>
</feed>