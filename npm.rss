<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-11-08T05:09:08.164Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[loader-utils] Prototype pollution in webpack loader-utils]]></title>
        <id>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</id>
        <link href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq"/>
        <updated>2022-11-07T22:14:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37601">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>
<li><a href="https://github.com/webpack/loader-utils/issues/212">https://github.com/webpack/loader-utils/issues/212</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v2.0.3">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/217">https://github.com/webpack/loader-utils/pull/217</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/220">https://github.com/webpack/loader-utils/pull/220</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v1.4.1">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loader-utils] Prototype pollution in webpack loader-utils]]></title>
        <id>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</id>
        <link href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq"/>
        <updated>2022-11-07T22:14:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37601">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>
<li><a href="https://github.com/webpack/loader-utils/issues/212">https://github.com/webpack/loader-utils/issues/212</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v2.0.3">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/217">https://github.com/webpack/loader-utils/pull/217</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/220">https://github.com/webpack/loader-utils/pull/220</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v1.4.1">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fastify-websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/websocket] fastify/websocket vulnerable to uncaught exception via crash on malformed packet]]></title>
        <id>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</id>
        <link href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq"/>
        <updated>2022-11-07T22:05:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any application using @fastify/websocket could crash if a specific, malformed packet is sent. </p>
<p>All versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workaround is available. However, it should be possible to attach the error handler manually.
The recommended path is upgrading to the patched versions.</p>
<h2 id="credits">Credits</h2>
<p><a href="https://github.com/marcolanaro">marcolanaro</a> for finding and patching this vulnerability</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/fastify/fastify-websocket">@fastify/websocket</a></li>
<li>Email us at <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1">https://github.com/fastify/fastify-websocket/releases/tag/v5.0.1</a></li>
<li><a href="https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1">https://github.com/fastify/fastify-websocket/releases/tag/v7.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-4pcg-wr6c-h9cq">https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pcg-wr6c-h9cq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-07T21:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2022-11-07T03:03:20.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron-markdownify] Markdownify has Files or Directories Accessible to External Parties]]></title>
        <id>https://github.com/advisories/GHSA-qqhf-xfhw-7884</id>
        <link href="https://github.com/advisories/GHSA-qqhf-xfhw-7884"/>
        <updated>2022-11-04T20:49:17.000Z</updated>
        <content type="html"><![CDATA[<p>Markdownify version 1.4.1 allows an external attacker to remotely obtain arbitrary local files on any client that attempts to view a malicious markdown file through Markdownify. This is possible because the application does not have a CSP policy (or at least not strict enough) and/or does not properly validate the contents of markdown files before rendering them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41710">https://nvd.nist.gov/vuln/detail/CVE-2022-41710</a></li>
<li><a href="https://fluidattacks.com/advisories/noisestorm/">https://fluidattacks.com/advisories/noisestorm/</a></li>
<li><a href="https://github.com/amitmerchant1990/electron-markdownify">https://github.com/amitmerchant1990/electron-markdownify</a></li>
<li><a href="https://github.com/advisories/GHSA-qqhf-xfhw-7884">https://github.com/advisories/GHSA-qqhf-xfhw-7884</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qqhf-xfhw-7884</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@keystone-6/core] @keystone-6/core's NODE_ENV defaults to development with esbuild]]></title>
        <id>https://github.com/advisories/GHSA-25mx-2mxm-6343</id>
        <link href="https://github.com/advisories/GHSA-25mx-2mxm-6343"/>
        <updated>2022-11-04T20:35:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>@keystone-6/core@3.0.0 || 3.0.1</code> users that use <code>NODE_ENV</code> in their own code (<strong>not dependencies</strong>) to trigger security-sensitive functionality in a production build are vulnerable to <code>NODE_ENV</code> being inlined to <code>"development"</code> for user code.</p>
<p>If your dependencies use <code>NODE_ENV</code> to trigger particular behaviours (optimisations, security or otherwise), they should still respect your environment's configured <code>NODE_ENV</code> variable and thereby be unaffected.</p>
<p>If you do not use <code>NODE_ENV</code> in your own code to trigger security-sensitive functionality, <strong>you are not impacted</strong> by this vulnerability.
An example of code that would be affected, might be the following:</p>
<pre><code class="language-typescript">if (process.env.NODE_ENV !== 'production') {
  // this code would unintentionally run in your production builds
}
</code></pre>
<h3 id="technical-description">Technical Description</h3>
<p>The problem comes from esbuild defaulting <code>NODE_ENV</code> to <code>"development"</code> when a platform configuration is undefined.
You can read about why <a href="https://esbuild.github.io/api/#platform"><code>esbuild</code> has that behaviour in their documentation</a>, but the result for Keystone users is that user Typescript was compiled, and had inlined <code>NODE_ENV</code> to the constant <code>"development"</code>. </p>
<p>Your application's dependencies, as found in <code>node_modules</code> (including <code>@keystone-6/core</code>), are typically not compiled as part of this process, and thus should be unaffected. Therefore any libraries that used <code>NODE_ENV</code> to trigger particular behaviours (optimisations, security or otherwise) should still respect your environment's <code>NODE_ENV</code>.
We have tested this assumption by verifying that <code>NODE_ENV=production yarn keystone start</code> still uses secure cookies when using <code>statelessSessions</code>.</p>
<p>Thereby, the severity of this vulnerability is dependent on what functionality users conditionally triggered, in their own code, depending on the expectation that <code>NODE_ENV</code> would be correctly configured in their application. In accordance with Common Vulnerability Scoring System <code>2.3.3. Assume Vulnerable Configurations</code>, this security advisory assumes vulnerable configurations and is thus marked as <em>critical</em>, but you should evaluate the true security impact for your application to determine a relevant score.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been fixed in <code>@keystone-6/core@3.0.2</code>, thanks to @mmachatschek in <a href="https://github.com/keystonejs/keystone/pull/8031/">https://github.com/keystonejs/keystone/pull/8031/</a>.
We have added regression tests for this vulnerability in <a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade your <code>@keystone-6/core</code> version for any reason, your best alternative is to remove any code that uses <code>NODE_ENV</code> in a way that may reasonably impact your application security. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://esbuild.github.io/api/#platform">https://esbuild.github.io/api/#platform</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8031">https://github.com/keystonejs/keystone/pull/8031</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Thanks to <a href="https://github.com/acburdine">Austin Burdine</a> for reporting this problem as a potential security vulnerability.</p>
<p>If you have any questions around this security advisory, please don't hesitate to contact us at <a href="mailto:security@keystonejs.com">security@keystonejs.com</a>, or <a href="https://github.com/keystonejs/keystone/issues/new/choose">open an issue on GitHub</a>.</p>
<p>If you have a security flaw to report for any software in this repository, please see our <a href="https://github.com/keystonejs/keystone/blob/main/SECURITY.md">SECURITY policy</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/keystonejs/keystone/security/advisories/GHSA-25mx-2mxm-6343">https://github.com/keystonejs/keystone/security/advisories/GHSA-25mx-2mxm-6343</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8063">https://github.com/keystonejs/keystone/pull/8063</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39382">https://nvd.nist.gov/vuln/detail/CVE-2022-39382</a></li>
<li><a href="https://github.com/keystonejs/keystone/pull/8031/">https://github.com/keystonejs/keystone/pull/8031/</a></li>
<li><a href="https://github.com/advisories/GHSA-25mx-2mxm-6343">https://github.com/advisories/GHSA-25mx-2mxm-6343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25mx-2mxm-6343</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-03T18:14:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@apollo/server] Batched HTTP requests may set incorrect `cache-control` response header]]></title>
        <id>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</id>
        <link href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3"/>
        <updated>2022-11-02T18:18:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Apollo Server 3 and 4, the <code>cache-control</code> HTTP response header may not reflect the cache policy that should apply to an HTTP request when that HTTP request contains multiple operations using HTTP batching. This could lead to data being inappropriately cached and shared.</p>
<p>Apollo Server allows clients to send multiple operations in a single HTTP request.  The results of these operations are returned in a single HTTP response, with a single set of headers.  Apollo Client Web and Apollo Kotlin both have opt-in features to use batched requests.</p>
<p>Apollo Server has several features relating to caching. This advisory is about the ability to set the <code>cache-control</code> response header based on field- and operation-specific cache hints. (It is not about the "response cache plugin".) This header can be interpreted by a reverse proxy such as a CDN in front of your server, or by a browser.</p>
<p>In Apollo Server 2, plugins such as the cache control plugin could not control the HTTP headers of responses to batch requests. This meant that batch requests never got the <code>cache-control</code> response header.</p>
<p>In Apollo Server 3 and 4, plugins can set HTTP response headers. But for batched requests, plugins essentially assemble a separate set of response headers in parallel for each operation, and then the header sets are merged together. If plugins set the same header on multiple operations, one value is chosen arbitrarily.</p>
<p>This meant that if a client sent a batched HTTP request with two operations with different cache policies, Apollo Server 3 and 4 would return a <code>cache-control</code> header that only applies to one of the operations. If one operation is allowed to be cached and the other operation is not allowed to be cached, the full response including both results could still end up being cached in a CDN or other reverse proxy cache.</p>
<p>Note that valid batched requests must be POST requests. (There's no defined format for sending batched requests over GET.) So in order for this incorrect <code>cache-control</code> header to have a harmful effect, a cache must allow caching POST requests. This means this bug is unlikely to cause incorrect caching in browser or mobile client caches, or in many reverse proxy/CDN caches.</p>
<p>This issue could lead to cache poisoning attacks. For example, if a client app regularly sends an operation that should not be cached due to its dependency on session-specific information in the same HTTP request as an operation that can be cached in a shared cache, an attacker could send its own version of the request to the server and manage to get the response to its request stored in the shared cache; other users would then see the response specific to the attacker for the first operation rather than the response for their own session. That said, we expect that in a system where this cache poisoning attack is feasible, normal operation would also run into the issue and users may have already disabled one of the features in order for their system to function properly.</p>
<h3 id="patches">Patches</h3>
<p>This issue is patched in Apollo Server v3.11.0 and v4.1.0. The issue resolved differently in the two versions.</p>
<p>If you are using Apollo Server 3, upgrade the package you depend on (eg <code>apollo-server</code> or <code>apollo-server-express</code>) to v3.11.0. This will restore the Apollo Server 2 behavior where the cache control plugin <em>never</em> sets the <code>cache-control</code> HTTP response header on batched requests. (Other cache-related features, like the response cache plugin, still function.)</p>
<p>If you are using Apollo Server 4, upgrade <code>@apollo/server</code> to v4.1.0. This upgrade makes the response HTTP header object seen by plugins shared among all plugins processing <em>all operations</em> on a request, and makes the cache control plugin merge <code>cache-control</code> header values across operations in a request. (Note that if you set the <code>cache-control</code> response header in your own plugin, Apollo Server v4.1.0's cache control plugin will not try to overwrite the value you set.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, you can disable either the HTTP batching feature or the <code>cache-control</code> header feature.</p>
<p>To disable HTTP batching in Apollo Server 3 (v3.5.0 or newer), pass <code>allowBatchedHttpRequests: false</code> to <code>new ApolloServer</code>.This is the default behavior for Apollo Server 4; in AS4, just make sure you're not passing <code>allowBatchedHttpRequests: true</code>. (You cannot disable batching in versions of Apollo Server 3 older than v3.5.0.)</p>
<p>To disable the <code>cache-control</code> header feature, add <code>ApolloServerPluginCacheControl({ calculateHttpHeaders: false })</code> to the <code>plugins</code> list in <code>new ApolloServer()</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/apollographql/apollo-server">the <code>apollo-server</code> repository</a></li>
<li>Email us at <a href="mailto:security@apollographql.com">security@apollographql.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19">https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850">https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850</a></li>
<li><a href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/advisories/GHSA-8r69-3cvp-wxc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-02T18:18:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apollo-server-core] Batched HTTP requests may set incorrect `cache-control` response header]]></title>
        <id>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</id>
        <link href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3"/>
        <updated>2022-11-02T18:18:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Apollo Server 3 and 4, the <code>cache-control</code> HTTP response header may not reflect the cache policy that should apply to an HTTP request when that HTTP request contains multiple operations using HTTP batching. This could lead to data being inappropriately cached and shared.</p>
<p>Apollo Server allows clients to send multiple operations in a single HTTP request.  The results of these operations are returned in a single HTTP response, with a single set of headers.  Apollo Client Web and Apollo Kotlin both have opt-in features to use batched requests.</p>
<p>Apollo Server has several features relating to caching. This advisory is about the ability to set the <code>cache-control</code> response header based on field- and operation-specific cache hints. (It is not about the "response cache plugin".) This header can be interpreted by a reverse proxy such as a CDN in front of your server, or by a browser.</p>
<p>In Apollo Server 2, plugins such as the cache control plugin could not control the HTTP headers of responses to batch requests. This meant that batch requests never got the <code>cache-control</code> response header.</p>
<p>In Apollo Server 3 and 4, plugins can set HTTP response headers. But for batched requests, plugins essentially assemble a separate set of response headers in parallel for each operation, and then the header sets are merged together. If plugins set the same header on multiple operations, one value is chosen arbitrarily.</p>
<p>This meant that if a client sent a batched HTTP request with two operations with different cache policies, Apollo Server 3 and 4 would return a <code>cache-control</code> header that only applies to one of the operations. If one operation is allowed to be cached and the other operation is not allowed to be cached, the full response including both results could still end up being cached in a CDN or other reverse proxy cache.</p>
<p>Note that valid batched requests must be POST requests. (There's no defined format for sending batched requests over GET.) So in order for this incorrect <code>cache-control</code> header to have a harmful effect, a cache must allow caching POST requests. This means this bug is unlikely to cause incorrect caching in browser or mobile client caches, or in many reverse proxy/CDN caches.</p>
<p>This issue could lead to cache poisoning attacks. For example, if a client app regularly sends an operation that should not be cached due to its dependency on session-specific information in the same HTTP request as an operation that can be cached in a shared cache, an attacker could send its own version of the request to the server and manage to get the response to its request stored in the shared cache; other users would then see the response specific to the attacker for the first operation rather than the response for their own session. That said, we expect that in a system where this cache poisoning attack is feasible, normal operation would also run into the issue and users may have already disabled one of the features in order for their system to function properly.</p>
<h3 id="patches">Patches</h3>
<p>This issue is patched in Apollo Server v3.11.0 and v4.1.0. The issue resolved differently in the two versions.</p>
<p>If you are using Apollo Server 3, upgrade the package you depend on (eg <code>apollo-server</code> or <code>apollo-server-express</code>) to v3.11.0. This will restore the Apollo Server 2 behavior where the cache control plugin <em>never</em> sets the <code>cache-control</code> HTTP response header on batched requests. (Other cache-related features, like the response cache plugin, still function.)</p>
<p>If you are using Apollo Server 4, upgrade <code>@apollo/server</code> to v4.1.0. This upgrade makes the response HTTP header object seen by plugins shared among all plugins processing <em>all operations</em> on a request, and makes the cache control plugin merge <code>cache-control</code> header values across operations in a request. (Note that if you set the <code>cache-control</code> response header in your own plugin, Apollo Server v4.1.0's cache control plugin will not try to overwrite the value you set.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, you can disable either the HTTP batching feature or the <code>cache-control</code> header feature.</p>
<p>To disable HTTP batching in Apollo Server 3 (v3.5.0 or newer), pass <code>allowBatchedHttpRequests: false</code> to <code>new ApolloServer</code>.This is the default behavior for Apollo Server 4; in AS4, just make sure you're not passing <code>allowBatchedHttpRequests: true</code>. (You cannot disable batching in versions of Apollo Server 3 older than v3.5.0.)</p>
<p>To disable the <code>cache-control</code> header feature, add <code>ApolloServerPluginCacheControl({ calculateHttpHeaders: false })</code> to the <code>plugins</code> list in <code>new ApolloServer()</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/apollographql/apollo-server">the <code>apollo-server</code> repository</a></li>
<li>Email us at <a href="mailto:security@apollographql.com">security@apollographql.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19">https://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850">https://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850</a></li>
<li><a href="https://github.com/advisories/GHSA-8r69-3cvp-wxc3">https://github.com/advisories/GHSA-8r69-3cvp-wxc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r69-3cvp-wxc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-02T18:18:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hummus] Unchecked Return Value to NULL Pointer Dereference in PDFDocumentHandler.cpp]]></title>
        <id>https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</id>
        <link href="https://github.com/advisories/GHSA-rcrx-fpjp-mfrw"/>
        <updated>2022-11-04T16:12:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 2.6.0 for muhammara and not at all for hummus</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not process files from untrusted sources</p>
<h3 id="references">References</h3>
<p>PR: <a href="https://github.com/julianhille/MuhammaraJS/pull/194">https://github.com/julianhille/MuhammaraJS/pull/194</a>
Issue: <a href="https://github.com/julianhille/MuhammaraJS/issues/191">https://github.com/julianhille/MuhammaraJS/issues/191</a>
Issue in hummus: <a href="https://github.com/galkahana/HummusJS/issues/293">https://github.com/galkahana/HummusJS/issues/293</a></p>
<h3 id="outline-differences-to-httpsnvdnistgovvulndetailcve-2022-25892">Outline differences to <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></h3>
<p>The difference is one is in <a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b">src/deps/PDFWriter/PDFParser.cpp</a> and the other is <a href="https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2">PDFDocumentHandler.cpp</a> both is a null pointer but for different cases
These are totally diffent issues, one is in reading a pdf the other is in appendending a maliciously crafted one. The function calls are different the versions in which they are solved are diffent. </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/293">https://github.com/galkahana/HummusJS/issues/293</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/191">https://github.com/julianhille/MuhammaraJS/issues/191</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/pull/194">https://github.com/julianhille/MuhammaraJS/pull/194</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39381">https://nvd.nist.gov/vuln/detail/CVE-2022-39381</a></li>
<li><a href="https://github.com/advisories/GHSA-rcrx-fpjp-mfrw">https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-02T18:10:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[muhammara] Unchecked Return Value to NULL Pointer Dereference in PDFDocumentHandler.cpp]]></title>
        <id>https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</id>
        <link href="https://github.com/advisories/GHSA-rcrx-fpjp-mfrw"/>
        <updated>2022-11-04T16:12:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 2.6.0 for muhammara and not at all for hummus</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not process files from untrusted sources</p>
<h3 id="references">References</h3>
<p>PR: <a href="https://github.com/julianhille/MuhammaraJS/pull/194">https://github.com/julianhille/MuhammaraJS/pull/194</a>
Issue: <a href="https://github.com/julianhille/MuhammaraJS/issues/191">https://github.com/julianhille/MuhammaraJS/issues/191</a>
Issue in hummus: <a href="https://github.com/galkahana/HummusJS/issues/293">https://github.com/galkahana/HummusJS/issues/293</a></p>
<h3 id="outline-differences-to-httpsnvdnistgovvulndetailcve-2022-25892">Outline differences to <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></h3>
<p>The difference is one is in <a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b">src/deps/PDFWriter/PDFParser.cpp</a> and the other is <a href="https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2">PDFDocumentHandler.cpp</a> both is a null pointer but for different cases
These are totally diffent issues, one is in reading a pdf the other is in appendending a maliciously crafted one. The function calls are different the versions in which they are solved are diffent. </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/293">https://github.com/galkahana/HummusJS/issues/293</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/191">https://github.com/julianhille/MuhammaraJS/issues/191</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/pull/194">https://github.com/julianhille/MuhammaraJS/pull/194</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39381">https://nvd.nist.gov/vuln/detail/CVE-2022-39381</a></li>
<li><a href="https://github.com/advisories/GHSA-rcrx-fpjp-mfrw">https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcrx-fpjp-mfrw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-02T18:10:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hummus] muhammara and hummus vulnerable to null pointer dereference on bad response object]]></title>
        <id>https://github.com/advisories/GHSA-frp9-2v6r-gj97</id>
        <link href="https://github.com/advisories/GHSA-frp9-2v6r-gj97"/>
        <updated>2022-11-02T16:06:50.000Z</updated>
        <content type="html"><![CDATA[<p>The package muhammara before 2.6.0 and the package hummus before 1.0.111 are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25885">https://nvd.nist.gov/vuln/detail/CVE-2022-25885</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/439">https://github.com/galkahana/HummusJS/issues/439</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/188">https://github.com/julianhille/MuhammaraJS/issues/188</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c">https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://github.com/advisories/GHSA-frp9-2v6r-gj97">https://github.com/advisories/GHSA-frp9-2v6r-gj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-frp9-2v6r-gj97</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hummus] muhammara and hummus vulnerable to denial of service by NULL pointer dereference]]></title>
        <id>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</id>
        <link href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94"/>
        <updated>2022-11-02T16:01:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 3.1.1 and has been backported to 2.6.1
Hummus has a patch in 1.0.111.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not process files from untrusted sources or update.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>
<a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a>
<a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[muhammara] muhammara and hummus vulnerable to null pointer dereference on bad response object]]></title>
        <id>https://github.com/advisories/GHSA-frp9-2v6r-gj97</id>
        <link href="https://github.com/advisories/GHSA-frp9-2v6r-gj97"/>
        <updated>2022-11-02T16:06:50.000Z</updated>
        <content type="html"><![CDATA[<p>The package muhammara before 2.6.0 and the package hummus before 1.0.111 are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25885">https://nvd.nist.gov/vuln/detail/CVE-2022-25885</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/439">https://github.com/galkahana/HummusJS/issues/439</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/188">https://github.com/julianhille/MuhammaraJS/issues/188</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c">https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://github.com/advisories/GHSA-frp9-2v6r-gj97">https://github.com/advisories/GHSA-frp9-2v6r-gj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-frp9-2v6r-gj97</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[muhammara] muhammara and hummus vulnerable to denial of service by NULL pointer dereference]]></title>
        <id>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</id>
        <link href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94"/>
        <updated>2022-11-02T16:01:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 3.1.1 and has been backported to 2.6.1
Hummus has a patch in 1.0.111.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not process files from untrusted sources or update.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>
<a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a>
<a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[muhammara] muhammara and hummus vulnerable to denial of service by NULL pointer dereference]]></title>
        <id>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</id>
        <link href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94"/>
        <updated>2022-11-02T16:01:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 3.1.1 and has been backported to 2.6.1
Hummus has a patch in 1.0.111.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not process files from untrusted sources or update.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>
<a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a>
<a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>
<a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>
<a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25892">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>
<li><a href="https://github.com/galkahana/HummusJS/issues/463">https://github.com/galkahana/HummusJS/issues/463</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/issues/214">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>
<li><a href="https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>
<li><a href="https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a">https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a</a></li>
<li><a href="https://github.com/advisories/GHSA-9cv5-4wqv-9w94">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cv5-4wqv-9w94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-red-dashboard] node-red-dashboard vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-vrv9-3x3w-ffxw</id>
        <link href="https://github.com/advisories/GHSA-vrv9-3x3w-ffxw"/>
        <updated>2022-11-03T19:32:24.000Z</updated>
        <content type="html"><![CDATA[<p>node-red-dashboard contains a cross-site scripting vulnerability. This issue affects some unknown processing of the file <code>components/ui-component/ui-component-ctrl.js</code> of the component ui_text Format Handler. The attack may be initiated remotely. The issue is patched in version 3.2.0. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3783">https://nvd.nist.gov/vuln/detail/CVE-2022-3783</a></li>
<li><a href="https://github.com/node-red/node-red-dashboard/issues/772">https://github.com/node-red/node-red-dashboard/issues/772</a></li>
<li><a href="https://github.com/node-red/node-red-dashboard/commit/9305d1a82f19b235dfad24a7d1dd4ed244db7743">https://github.com/node-red/node-red-dashboard/commit/9305d1a82f19b235dfad24a7d1dd4ed244db7743</a></li>
<li><a href="https://vuldb.com/?id.212555">https://vuldb.com/?id.212555</a></li>
<li><a href="https://github.com/advisories/GHSA-vrv9-3x3w-ffxw">https://github.com/advisories/GHSA-vrv9-3x3w-ffxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vrv9-3x3w-ffxw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T12:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@xmldom/xmldom] xmldom allows multiple root nodes in a DOM]]></title>
        <id>https://github.com/advisories/GHSA-crh6-fp67-6883</id>
        <link href="https://github.com/advisories/GHSA-crh6-fp67-6883"/>
        <updated>2022-11-04T20:44:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.
This breaks the assumption that there is only a single root node in the tree, which led to <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>One of the following approaches might help, depending on your use case:</p>
<ul>
<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>
<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/jindw/xmldom/issues/150">https://github.com/jindw/xmldom/issues/150</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.7.7">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.8.4">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39353">https://nvd.nist.gov/vuln/detail/CVE-2022-39353</a></li>
<li><a href="https://github.com/jindw/xmldom/issues/150">https://github.com/jindw/xmldom/issues/150</a></li>
<li><a href="https://github.com/advisories/GHSA-crh6-fp67-6883">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crh6-fp67-6883</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-01T17:29:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@xmldom/xmldom] xmldom allows multiple root nodes in a DOM]]></title>
        <id>https://github.com/advisories/GHSA-crh6-fp67-6883</id>
        <link href="https://github.com/advisories/GHSA-crh6-fp67-6883"/>
        <updated>2022-11-04T20:44:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.
This breaks the assumption that there is only a single root node in the tree, which led to <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>One of the following approaches might help, depending on your use case:</p>
<ul>
<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>
<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/jindw/xmldom/issues/150">https://github.com/jindw/xmldom/issues/150</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.7.7">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.8.4">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>
<li><a href="https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39353">https://nvd.nist.gov/vuln/detail/CVE-2022-39353</a></li>
<li><a href="https://github.com/jindw/xmldom/issues/150">https://github.com/jindw/xmldom/issues/150</a></li>
<li><a href="https://github.com/advisories/GHSA-crh6-fp67-6883">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crh6-fp67-6883</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-01T17:29:11.000Z</published>
    </entry>
</feed>