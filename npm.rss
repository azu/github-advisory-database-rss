<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-07-06T18:01:32.245Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@fedify/fedify] Server Side Request Forgery (SSRF) attack in Fedify]]></title>
        <id>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</id>
        <link href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx"/>
        <updated>2024-07-05T20:07:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>At present, when Fedify needs to retrieve an object or activity from a remote activitypub server, it makes a HTTP request to the <code>@id</code> or other resources present within the activity it has received from the web. This activity could reference an <code>@id</code> that points to an internal IP address, allowing an attacker to send request to resources internal to the fedify server's network.</p>
<p>This applies to not just resolution of documents containing activities or objects, but also to media URLs as well.</p>
<p>Specifically this is a <a href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery">Server Side Request Forgery attack</a>. You can learn more about SSRF attacks via <a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918</a></p>
<h3 id="details">Details</h3>
<p>When Fedify makes a request at runtime via the DocLoader [1] [2], the <code>fetch</code> API does not first check the URI's to assert that it resolve to a public IP address. Additionally, any downstream software of Fedify that may fetch data from URIs contained within Activities or Objects maybe be at risk of requesting non-public resources, and storing those, exposing non-public information to the public.</p>
<p>Additionally, in many cases the URIs are not asserted to be either strictly HTTPS or HTTP protocols, which could lead to further attacks, and there is no check that the URI contains a <code>hostname</code> part. Whilst the <a href="https://fetch.spec.whatwg.org/"><code>fetch()</code> specification</a> may provide some safety here, along with underlying fetch implementations, there is still potential for attacks through using <code>data:</code> URIs, or just attacking some other protocol entirely, e.g., FTP or CalDav.</p>
<p>[1] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141</a>
[2] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175</a></p>
<h4 id="deno-specific-attack-vectors">Deno-specific Attack Vectors</h4>
<p>In Deno specifically, the <code>fetch()</code> API allows <a href="https://docs.deno.com/deploy/api/runtime-fetch/">accessing local filesystem</a>, I'm not sure how Deno's <a href="https://docs.deno.com/runtime/manual/runtime/permission_apis/">Permissions model</a> may prevent attacks utilising <code>file:</code> URIs.</p>
<blockquote>
<p>Fetch also supports fetching from file URLs to retrieve static files. For more info on static files, see the <a href="https://docs.deno.com/deploy/api/runtime-fs">filesystem API documentation</a>.</p>
</blockquote>
<h4 id="activitypub-security-considerations">ActivityPub Security Considerations</h4>
<p>This is also noted in the ActivityPub spec in <a href="https://www.w3.org/TR/activitypub/#security-localhost">Section B.3 Security Considerations</a>, however, there it is more limited in scope.</p>
<h4 id="other-implementations">Other Implementations</h4>
<p>It may be acceptable to allow a server operator to allow access to given non-public IP addresses, for instance <a href="https://github.com/mastodon/mastodon/blob/092bb8a27af9ee87ff9ebabaf354477470ea3a94/app/lib/request.rb#L330">in Mastodon</a> they allow requests to non-public IP addresses, i.e., localhost in development and those in the <code>ALLOWED_PRIVATE_ADDRESSES</code> environment variable.</p>
<h3 id="poc">PoC</h3>
<p>I'm not sure a PoC is necessary given this is a reasonably well known vulnerability vector.</p>
<h3 id="impact">Impact</h3>
<p>This impacts server operates, as resources that are internal to their network may find themselves being improperly accessed or potentially even attacked or exposed to the public.</p>
<h3 id="notes-for-resolution">Notes for resolution:</h3>
<p>When implementing public IP address validation, be careful of <a href="https://cwe.mitre.org/data/definitions/1389.html">CWE-1389</a> and <a href="https://cwe.mitre.org/data/definitions/1286.html">CWE-1286</a> both of which <a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22">recently</a> caused a CVE to be filed against the popular node.js <code>ip</code> package, although this package was not originally intended for security purposes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39687">https://nvd.nist.gov/vuln/detail/CVE-2024-39687</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28">https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba">https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba</a></li>
<li><a href="https://github.com/dahlia/fedify/releases/tag/0.11.1">https://github.com/dahlia/fedify/releases/tag/0.11.1</a></li>
<li><a href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/advisories/GHSA-p9cg-vqcc-grcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-05T20:07:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fedify/fedify] Server Side Request Forgery (SSRF) attack in Fedify]]></title>
        <id>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</id>
        <link href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx"/>
        <updated>2024-07-05T20:07:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>At present, when Fedify needs to retrieve an object or activity from a remote activitypub server, it makes a HTTP request to the <code>@id</code> or other resources present within the activity it has received from the web. This activity could reference an <code>@id</code> that points to an internal IP address, allowing an attacker to send request to resources internal to the fedify server's network.</p>
<p>This applies to not just resolution of documents containing activities or objects, but also to media URLs as well.</p>
<p>Specifically this is a <a href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery">Server Side Request Forgery attack</a>. You can learn more about SSRF attacks via <a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918</a></p>
<h3 id="details">Details</h3>
<p>When Fedify makes a request at runtime via the DocLoader [1] [2], the <code>fetch</code> API does not first check the URI's to assert that it resolve to a public IP address. Additionally, any downstream software of Fedify that may fetch data from URIs contained within Activities or Objects maybe be at risk of requesting non-public resources, and storing those, exposing non-public information to the public.</p>
<p>Additionally, in many cases the URIs are not asserted to be either strictly HTTPS or HTTP protocols, which could lead to further attacks, and there is no check that the URI contains a <code>hostname</code> part. Whilst the <a href="https://fetch.spec.whatwg.org/"><code>fetch()</code> specification</a> may provide some safety here, along with underlying fetch implementations, there is still potential for attacks through using <code>data:</code> URIs, or just attacking some other protocol entirely, e.g., FTP or CalDav.</p>
<p>[1] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141</a>
[2] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175</a></p>
<h4 id="deno-specific-attack-vectors">Deno-specific Attack Vectors</h4>
<p>In Deno specifically, the <code>fetch()</code> API allows <a href="https://docs.deno.com/deploy/api/runtime-fetch/">accessing local filesystem</a>, I'm not sure how Deno's <a href="https://docs.deno.com/runtime/manual/runtime/permission_apis/">Permissions model</a> may prevent attacks utilising <code>file:</code> URIs.</p>
<blockquote>
<p>Fetch also supports fetching from file URLs to retrieve static files. For more info on static files, see the <a href="https://docs.deno.com/deploy/api/runtime-fs">filesystem API documentation</a>.</p>
</blockquote>
<h4 id="activitypub-security-considerations">ActivityPub Security Considerations</h4>
<p>This is also noted in the ActivityPub spec in <a href="https://www.w3.org/TR/activitypub/#security-localhost">Section B.3 Security Considerations</a>, however, there it is more limited in scope.</p>
<h4 id="other-implementations">Other Implementations</h4>
<p>It may be acceptable to allow a server operator to allow access to given non-public IP addresses, for instance <a href="https://github.com/mastodon/mastodon/blob/092bb8a27af9ee87ff9ebabaf354477470ea3a94/app/lib/request.rb#L330">in Mastodon</a> they allow requests to non-public IP addresses, i.e., localhost in development and those in the <code>ALLOWED_PRIVATE_ADDRESSES</code> environment variable.</p>
<h3 id="poc">PoC</h3>
<p>I'm not sure a PoC is necessary given this is a reasonably well known vulnerability vector.</p>
<h3 id="impact">Impact</h3>
<p>This impacts server operates, as resources that are internal to their network may find themselves being improperly accessed or potentially even attacked or exposed to the public.</p>
<h3 id="notes-for-resolution">Notes for resolution:</h3>
<p>When implementing public IP address validation, be careful of <a href="https://cwe.mitre.org/data/definitions/1389.html">CWE-1389</a> and <a href="https://cwe.mitre.org/data/definitions/1286.html">CWE-1286</a> both of which <a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22">recently</a> caused a CVE to be filed against the popular node.js <code>ip</code> package, although this package was not originally intended for security purposes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39687">https://nvd.nist.gov/vuln/detail/CVE-2024-39687</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28">https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba">https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba</a></li>
<li><a href="https://github.com/dahlia/fedify/releases/tag/0.11.1">https://github.com/dahlia/fedify/releases/tag/0.11.1</a></li>
<li><a href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/advisories/GHSA-p9cg-vqcc-grcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-05T20:07:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-appservice-irc] Malicious Matrix homeserver can leak truncated message content of messages it shouldn't have access to]]></title>
        <id>https://github.com/advisories/GHSA-w9mh-5x8j-9754</id>
        <link href="https://github.com/advisories/GHSA-w9mh-5x8j-9754"/>
        <updated>2024-07-05T21:37:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The fix for GHSA-wm4w-7h2q-3pf7 / <a href="https://www.cve.org/CVERecord?id=CVE-2024-32000">CVE-2024-32000</a> included in matrix-appservice-irc 2.0.0 relied on the Matrix homeserver-provided timestamp to determine whether a user has access to the event they're replying to when determining whether or not to include a truncated version of the original event in the IRC message. Since this value is controlled by external entities, a malicious Matrix homeserver joined to a room in which a matrix-appservice-irc bridge instance (before version 2.0.1) is present can fabricate the timestamp with the intent of tricking the bridge into leaking room messages the homeserver should not have access to.</p>
<h3 id="patches">Patches</h3>
<p>matrix-appservice-irc 2.0.1 <a href="https://github.com/matrix-org/matrix-appservice-irc/pull/1804">drops the reliance</a> on <code>origin_server_ts</code> when determining whether or not an event should be visible to a user, instead tracking the event timestamps internally.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It's possible to limit the amount of information leaked by setting a reply template that doesn't contain the original message. See <a href="https://github.com/matrix-org/matrix-appservice-irc/blob/d5d67d1d3ea3f0f6962a0af2cc57b56af3ad2129/config.sample.yaml#L601-L604">these lines</a> in the configuration file.</p>
<h3 id="references">References</h3>
<ul>
<li>Patch: <a href="https://github.com/matrix-org/matrix-appservice-irc/pull/1804">https://github.com/matrix-org/matrix-appservice-irc/pull/1804</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@matrix.org">security at matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-w9mh-5x8j-9754">https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-w9mh-5x8j-9754</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/pull/1804">https://github.com/matrix-org/matrix-appservice-irc/pull/1804</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/commit/1835e047f269001054be4c68867797aa12372a0f">https://github.com/matrix-org/matrix-appservice-irc/commit/1835e047f269001054be4c68867797aa12372a0f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39691">https://nvd.nist.gov/vuln/detail/CVE-2024-39691</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/blob/d5d67d1d3ea3f0f6962a0af2cc57b56af3ad2129/config.sample.yaml#L601-L604">https://github.com/matrix-org/matrix-appservice-irc/blob/d5d67d1d3ea3f0f6962a0af2cc57b56af3ad2129/config.sample.yaml#L601-L604</a></li>
<li><a href="https://github.com/advisories/GHSA-w9mh-5x8j-9754">https://github.com/advisories/GHSA-w9mh-5x8j-9754</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w9mh-5x8j-9754</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T20:06:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@adolph_dudu/ratio-swiper] adolph_dudu ratio-swiper was discovered to contain a prototype pollution via the function extendDefaults]]></title>
        <id>https://github.com/advisories/GHSA-88vr-hjqx-57qh</id>
        <link href="https://github.com/advisories/GHSA-88vr-hjqx-57qh"/>
        <updated>2024-07-03T20:04:01.000Z</updated>
        <content type="html"><![CDATA[<p>adolph_dudu ratio-swiper v0.0.2 was discovered to contain a prototype pollution via the function extendDefaults. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38997">https://nvd.nist.gov/vuln/detail/CVE-2024-38997</a></li>
<li><a href="https://gist.github.com/mestrtee/840f5d160aab4151bd0451cfb822e6b5">https://gist.github.com/mestrtee/840f5d160aab4151bd0451cfb822e6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-88vr-hjqx-57qh">https://github.com/advisories/GHSA-88vr-hjqx-57qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-88vr-hjqx-57qh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-community] ag-grid-community were discovered to contain a prototype pollution via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-03T20:03:14.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-enterprise] ag-grid-community were discovered to contain a prototype pollution via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-03T20:03:14.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@airvertco/frappejs] frappejs was discovered to contain a prototype pollution via the function registerView]]></title>
        <id>https://github.com/advisories/GHSA-gc7m-596h-x57r</id>
        <link href="https://github.com/advisories/GHSA-gc7m-596h-x57r"/>
        <updated>2024-07-05T17:45:28.000Z</updated>
        <content type="html"><![CDATA[<p>airvertco frappejs v0.0.11 was discovered to contain a prototype pollution via the function registerView. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38992">https://nvd.nist.gov/vuln/detail/CVE-2024-38992</a></li>
<li><a href="https://gist.github.com/mestrtee/10c88b9069229979ac7e52e0efc98055">https://gist.github.com/mestrtee/10c88b9069229979ac7e52e0efc98055</a></li>
<li><a href="https://www.npmjs.com/package/@airvertco/frappejs">https://www.npmjs.com/package/@airvertco/frappejs</a></li>
<li><a href="https://github.com/advisories/GHSA-gc7m-596h-x57r">https://github.com/advisories/GHSA-gc7m-596h-x57r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc7m-596h-x57r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonic] jsonic was discovered to contain a prototype pollution via the function empty.]]></title>
        <id>https://github.com/advisories/GHSA-4wm9-3qmv-gvxj</id>
        <link href="https://github.com/advisories/GHSA-4wm9-3qmv-gvxj"/>
        <updated>2024-07-05T17:46:57.000Z</updated>
        <content type="html"><![CDATA[<p>rjrodger jsonic-next v2.12.1 was discovered to contain a prototype pollution via the function empty. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38993">https://nvd.nist.gov/vuln/detail/CVE-2024-38993</a></li>
<li><a href="https://gist.github.com/mestrtee/9a2b522d59c53f31f45c1edb96459693">https://gist.github.com/mestrtee/9a2b522d59c53f31f45c1edb96459693</a></li>
<li><a href="https://github.com/advisories/GHSA-4wm9-3qmv-gvxj">https://github.com/advisories/GHSA-4wm9-3qmv-gvxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wm9-3qmv-gvxj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@amoy/common] @amoy/common v was discovered to contain a prototype pollution via the function extend]]></title>
        <id>https://github.com/advisories/GHSA-w58v-r3cp-qr93</id>
        <link href="https://github.com/advisories/GHSA-w58v-r3cp-qr93"/>
        <updated>2024-07-05T17:48:13.000Z</updated>
        <content type="html"><![CDATA[<p>amoyjs amoy common v1.0.10 was discovered to contain a prototype pollution via the function extend. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38994">https://nvd.nist.gov/vuln/detail/CVE-2024-38994</a></li>
<li><a href="https://gist.github.com/mestrtee/02091aa86c6c14c29b9703642439dd03">https://gist.github.com/mestrtee/02091aa86c6c14c29b9703642439dd03</a></li>
<li><a href="https://github.com/advisories/GHSA-w58v-r3cp-qr93">https://github.com/advisories/GHSA-w58v-r3cp-qr93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w58v-r3cp-qr93</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@akbr/patch-into] akbr patch-into was discovered to contain a prototype pollution via the function patchInto]]></title>
        <id>https://github.com/advisories/GHSA-gh4x-qv3p-m9pm</id>
        <link href="https://github.com/advisories/GHSA-gh4x-qv3p-m9pm"/>
        <updated>2024-07-05T17:41:37.000Z</updated>
        <content type="html"><![CDATA[<p>akbr patch-into version 1.0.1 was discovered to contain a prototype pollution via the function patchInto. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38991">https://nvd.nist.gov/vuln/detail/CVE-2024-38991</a></li>
<li><a href="https://gist.github.com/mestrtee/8851413e3b33a96f191f0e9c81706532">https://gist.github.com/mestrtee/8851413e3b33a96f191f0e9c81706532</a></li>
<li><a href="https://github.com/advisories/GHSA-gh4x-qv3p-m9pm">https://github.com/advisories/GHSA-gh4x-qv3p-m9pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gh4x-qv3p-m9pm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] ZDI-CAN-23894: Parse Server literalizeRegexPart SQL Injection Authentication Bypass Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</id>
        <link href="https://github.com/advisories/GHSA-c2hr-cqg6-8j6r"/>
        <updated>2024-07-02T02:40:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows SQL injection when Parse Server is configured to use the PostgreSQL database.</p>
<h3 id="patches">Patches</h3>
<p>The algorithm to detect SQL injection has been improved.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9167">https://github.com/parse-community/parse-server/pull/9167</a> (fix for Parse Server 7)</li>
<li><a href="https://github.com/parse-community/parse-server/pull/9168">https://github.com/parse-community/parse-server/pull/9168</a> (fix for Parse Server 6)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Smile Thanapattheerakul of Trend Micro (finder)</li>
<li>Manuel Trezza (coordinator)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9167">https://github.com/parse-community/parse-server/pull/9167</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9168">https://github.com/parse-community/parse-server/pull/9168</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39309">https://nvd.nist.gov/vuln/detail/CVE-2024-39309</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/2edf1e4c0363af01e97a7fbc97694f851b7d1ff3">https://github.com/parse-community/parse-server/commit/2edf1e4c0363af01e97a7fbc97694f851b7d1ff3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/f332d54577608c5ad927255e06d8c694e2e0ff5b">https://github.com/parse-community/parse-server/commit/f332d54577608c5ad927255e06d8c694e2e0ff5b</a></li>
<li><a href="https://github.com/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T18:35:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] ZDI-CAN-23894: Parse Server literalizeRegexPart SQL Injection Authentication Bypass Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</id>
        <link href="https://github.com/advisories/GHSA-c2hr-cqg6-8j6r"/>
        <updated>2024-07-02T02:40:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows SQL injection when Parse Server is configured to use the PostgreSQL database.</p>
<h3 id="patches">Patches</h3>
<p>The algorithm to detect SQL injection has been improved.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9167">https://github.com/parse-community/parse-server/pull/9167</a> (fix for Parse Server 7)</li>
<li><a href="https://github.com/parse-community/parse-server/pull/9168">https://github.com/parse-community/parse-server/pull/9168</a> (fix for Parse Server 6)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Smile Thanapattheerakul of Trend Micro (finder)</li>
<li>Manuel Trezza (coordinator)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/parse-community/parse-server/security/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9167">https://github.com/parse-community/parse-server/pull/9167</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/9168">https://github.com/parse-community/parse-server/pull/9168</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39309">https://nvd.nist.gov/vuln/detail/CVE-2024-39309</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/2edf1e4c0363af01e97a7fbc97694f851b7d1ff3">https://github.com/parse-community/parse-server/commit/2edf1e4c0363af01e97a7fbc97694f851b7d1ff3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/f332d54577608c5ad927255e06d8c694e2e0ff5b">https://github.com/parse-community/parse-server/commit/f332d54577608c5ad927255e06d8c694e2e0ff5b</a></li>
<li><a href="https://github.com/advisories/GHSA-c2hr-cqg6-8j6r">https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2hr-cqg6-8j6r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T18:35:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[glob-parent] glob-parent vulnerable to Regular Expression Denial of Service in enclosure regex]]></title>
        <id>https://github.com/advisories/GHSA-ww39-953v-wcq6</id>
        <link href="https://github.com/advisories/GHSA-ww39-953v-wcq6"/>
        <updated>2024-06-27T14:00:25.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28469">https://nvd.nist.gov/vuln/detail/CVE-2020-28469</a></li>
<li><a href="https://github.com/gulpjs/glob-parent/pull/36">https://github.com/gulpjs/glob-parent/pull/36</a></li>
<li><a href="https://github.com/gulpjs/glob-parent/blob/6ce8d11f2f1ed8e80a9526b1dc8cf3aa71f43474/index.js%23L9">https://github.com/gulpjs/glob-parent/blob/6ce8d11f2f1ed8e80a9526b1dc8cf3aa71f43474/index.js%23L9</a></li>
<li><a href="https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2">https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBES128-1059093">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBES128-1059093</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1059092">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1059092</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905">https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/gulpjs/glob-parent/pull/36/commits/c6db86422a9731d4f3d332ce4a81c27ea6b0ee46">https://github.com/gulpjs/glob-parent/pull/36/commits/c6db86422a9731d4f3d332ce4a81c27ea6b0ee46</a></li>
<li><a href="https://github.com/gulpjs/glob-parent/commit/4a80667c69355c76a572a5892b0f133c8e1f457e">https://github.com/gulpjs/glob-parent/commit/4a80667c69355c76a572a5892b0f133c8e1f457e</a></li>
<li><a href="https://github.com/advisories/GHSA-ww39-953v-wcq6">https://github.com/advisories/GHSA-ww39-953v-wcq6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ww39-953v-wcq6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-07T21:56:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastly/js-compute] @fastly/js-compute has a use-after-free in some host call implementations]]></title>
        <id>https://github.com/advisories/GHSA-mp3g-vpm9-9vqv</id>
        <link href="https://github.com/advisories/GHSA-mp3g-vpm9-9vqv"/>
        <updated>2024-06-26T21:56:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The implementation of the following functions were determined to include a use-after-free bug:</p>
<ul>
<li><code>FetchEvent.client.tlsCipherOpensslName</code></li>
<li><code>FetchEvent.client.tlsProtocol</code></li>
<li><code>FetchEvent.client.tlsClientCertificate</code></li>
<li><code>FetchEvent.client.tlsJA3MD5</code></li>
<li><code>FetchEvent.client.tlsClientHello</code></li>
<li><code>CacheEntry.prototype.userMetadata</code> of the <code>fastly:cache</code> subsystem</li>
<li><code>Device.lookup</code> of the <code>fastly:device</code> subsystem</li>
</ul>
<p>This bug could allow for an unintended data leak if the result of the preceding functions were sent anywhere else, and often results in a Compute service crash causing an HTTP 500 error to be returned. As all requests to Compute are isolated from one another, the only data at risk is data present for a single request.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in version 3.16.0 of the <code>@fastly/js-compute</code> package.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this bug, any use of the affected functions introduces the possibility of a data leak or crash in guest code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastly/js-compute-runtime/security/advisories/GHSA-mp3g-vpm9-9vqv">https://github.com/fastly/js-compute-runtime/security/advisories/GHSA-mp3g-vpm9-9vqv</a></li>
<li><a href="https://github.com/fastly/js-compute-runtime/commit/4e16641ef4e159c4a11b500ac861b8fa8d9ff5d3">https://github.com/fastly/js-compute-runtime/commit/4e16641ef4e159c4a11b500ac861b8fa8d9ff5d3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38375">https://nvd.nist.gov/vuln/detail/CVE-2024-38375</a></li>
<li><a href="https://github.com/advisories/GHSA-mp3g-vpm9-9vqv">https://github.com/advisories/GHSA-mp3g-vpm9-9vqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp3g-vpm9-9vqv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-26T19:12:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@zenuml/core] Cross-site Scripting in ZenUML]]></title>
        <id>https://github.com/advisories/GHSA-q6xv-jm4v-349h</id>
        <link href="https://github.com/advisories/GHSA-q6xv-jm4v-349h"/>
        <updated>2024-06-26T21:56:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Markdown-based comments in the ZenUML diagram syntax are susceptible to Cross-site Scripting (XSS).</p>
<h3 id="details">Details</h3>
<p>The comment feature allows the user to attach small notes for reference. This feature allows the user to enter in their comment in markdown comment, allowing them to use common markdown features, such as <code>**</code> for bolded text. However, the markdown text is currently not sanitized before rendering, allowing an attacker to enter a malicious payload for the comment which leads to XSS.</p>
<p><a href="https://github.com/mermaid-js/zenuml-core/blob/dcfee8cde42673c09e19401f43ad8506658c8442/src/components/DiagramFrame/SeqDiagram/MessageLayer/Block/Statement/Comment/Comment.vue#L65">https://github.com/mermaid-js/zenuml-core/blob/dcfee8cde42673c09e19401f43ad8506658c8442/src/components/DiagramFrame/SeqDiagram/MessageLayer/Block/Statement/Comment/Comment.vue#L65</a></p>
<h3 id="poc">PoC</h3>
<pre><code>// p&lt;img onerror=alert(1) src=""/&gt;
A-&gt;B:hi
</code></pre>
<p>Above is a POC diagram payload that results in an XSS.</p>
<p>Here is a similar POC in mermaid.live: <a href="https://mermaid.live/edit#pako:eNpNjrFuwyAQhl8F3dRK1DaQGhs1kVq1Y6duFQsylwTVgEWw1MTyuxc5S7df39399y0wRIug4IZh9qMOdU2mF-dPJAZMKaa9GTHlB_ZILmnYa9BQH3R4fTq8qbMDCh6TN86WhkUHQjTkM3rUoEq0Jv2Ui7CWPTPn-HUNA6icZqQwT9ZkfHfmlIwHdTTjpVC0Lsf0eVfazChMJoBa4BdUL6uGC8n7TrCGd5zCFRRnXbVjvBVNK3gJXbtSuMVYSlnFC-Kyf961UshWbmXf2-y_xcf29c7WP2yrVC0">https://mermaid.live/edit#pako:eNpNjrFuwyAQhl8F3dRK1DaQGhs1kVq1Y6duFQsylwTVgEWw1MTyuxc5S7df39399y0wRIug4IZh9qMOdU2mF-dPJAZMKaa9GTHlB_ZILmnYa9BQH3R4fTq8qbMDCh6TN86WhkUHQjTkM3rUoEq0Jv2Ui7CWPTPn-HUNA6icZqQwT9ZkfHfmlIwHdTTjpVC0Lsf0eVfazChMJoBa4BdUL6uGC8n7TrCGd5zCFRRnXbVjvBVNK3gJXbtSuMVYSlnFC-Kyf961UshWbmXf2-y_xcf29c7WP2yrVC0</a></p>
<h3 id="impact">Impact</h3>
<p>This puts existing applications that use ZenUML <strong>unsandboxed</strong> at risk of arbitrary JavaScript execution when rendering user-controlled diagrams.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mermaid-js/zenuml-core/security/advisories/GHSA-q6xv-jm4v-349h">https://github.com/mermaid-js/zenuml-core/security/advisories/GHSA-q6xv-jm4v-349h</a></li>
<li><a href="https://github.com/mermaid-js/zenuml-core/commit/ad7545b33f5f27466cbf357beb65969ca1953e3c">https://github.com/mermaid-js/zenuml-core/commit/ad7545b33f5f27466cbf357beb65969ca1953e3c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38527">https://nvd.nist.gov/vuln/detail/CVE-2024-38527</a></li>
<li><a href="https://github.com/advisories/GHSA-q6xv-jm4v-349h">https://github.com/advisories/GHSA-q6xv-jm4v-349h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q6xv-jm4v-349h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-26T19:03:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonwebtoken] jsonwebtoken unrestricted key type could lead to legacy keys usage ]]></title>
        <id>https://github.com/advisories/GHSA-8cf7-32gw-wr33</id>
        <link href="https://github.com/advisories/GHSA-8cf7-32gw-wr33"/>
        <updated>2024-06-24T21:23:39.000Z</updated>
        <content type="html"><![CDATA[<h1 id="overview">Overview</h1>
<p>Versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. </p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You are affected if you are using an algorithm and a key type other than the combinations mentioned below</p>
<table>
<thead>
<tr>
<th>Key type</th>
<th>algorithm</th>
</tr>
</thead>
<tbody><tr>
<td>ec</td>
<td>ES256, ES384, ES512</td>
</tr>
<tr>
<td>rsa</td>
<td>RS256, RS384, RS512, PS256, PS384, PS512</td>
</tr>
<tr>
<td>rsa-pss</td>
<td>PS256, PS384, PS512</td>
</tr>
</tbody></table>
<p>And for Elliptic Curve algorithms:</p>
<table>
<thead>
<tr>
<th><code>alg</code></th>
<th>Curve</th>
</tr>
</thead>
<tbody><tr>
<td>ES256</td>
<td>prime256v1</td>
</tr>
<tr>
<td>ES384</td>
<td>secp384r1</td>
</tr>
<tr>
<td>ES512</td>
<td>secp521r1</td>
</tr>
</tbody></table>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>Update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the <code>allowInvalidAsymmetricKeyTypes</code> option to <code>true</code> in the <code>sign()</code> and/or <code>verify()</code> functions.</p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>There will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,  use the  <code>allowInvalidAsymmetricKeyTypes</code> option  to <code>true</code> in the <code>sign()</code> and <code>verify()</code> functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33</a></li>
<li><a href="https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23539">https://nvd.nist.gov/vuln/detail/CVE-2022-23539</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240621-0007">https://security.netapp.com/advisory/ntap-20240621-0007</a></li>
<li><a href="https://github.com/advisories/GHSA-8cf7-32gw-wr33">https://github.com/advisories/GHSA-8cf7-32gw-wr33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8cf7-32gw-wr33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-22T03:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-appservice-irc] matrix-appservice-irc IRC command injection via admin commands containing newlines ]]></title>
        <id>https://github.com/advisories/GHSA-3pmj-jqqp-2mj3</id>
        <link href="https://github.com/advisories/GHSA-3pmj-jqqp-2mj3"/>
        <updated>2024-06-20T14:53:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible to craft a command with newlines which would not be properly parsed. This would mean you could pass a string of commands as a channel name, which would then be run by the IRC bridge bot. </p>
<h3 id="patches">Patches</h3>
<p>Versions 1.0.1 and above are patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no robust workarounds to the bug. You can disable dynamic channels in the config to disable the most common execution method but others may exist. It is highly recommended to upgrade the bridge.</p>
<h3 id="credits">Credits</h3>
<p>Discovered and reported by <a href="https://valentin-lorentz.fr/">Val Lorentz</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-3pmj-jqqp-2mj3">https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-3pmj-jqqp-2mj3</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/commit/0afb064635d37e039067b5b3d6423448b93026d3">https://github.com/matrix-org/matrix-appservice-irc/commit/0afb064635d37e039067b5b3d6423448b93026d3</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/releases/tag/1.0.1">https://github.com/matrix-org/matrix-appservice-irc/releases/tag/1.0.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38690">https://nvd.nist.gov/vuln/detail/CVE-2023-38690</a></li>
<li><a href="https://github.com/advisories/GHSA-3pmj-jqqp-2mj3">https://github.com/advisories/GHSA-3pmj-jqqp-2mj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3pmj-jqqp-2mj3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-04T17:26:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability using noneditable_regexp option]]></title>
        <id>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</id>
        <link href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph"/>
        <updated>2024-07-02T02:39:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content extraction code. When using the <code>noneditable_regexp</code> option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the <code>noneditable_regexp</code> option, any content within an attribute is properly verified to match the configured regular expression before being added.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 7.2.0 or higher.</li>
<li>Upgrade to TinyMCE 6.8.4 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.11.0 LTS or higher for TinyMCE 5.x (only available as part of commercial <a href="https://www.tiny.cloud/long-term-support/">long-term support</a> contract).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">TinyMCE 6.8.4</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">TinyMCE 7.2.0</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38356">https://nvd.nist.gov/vuln/detail/CVE-2024-38356</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d">https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0">https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss">https://owasp.org/www-community/attacks/xss</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview</a></li>
<li><a href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/advisories/GHSA-9hcv-j9pv-qmph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-19T15:07:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability using noneditable_regexp option]]></title>
        <id>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</id>
        <link href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph"/>
        <updated>2024-07-02T02:39:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content extraction code. When using the <code>noneditable_regexp</code> option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the <code>noneditable_regexp</code> option, any content within an attribute is properly verified to match the configured regular expression before being added.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 7.2.0 or higher.</li>
<li>Upgrade to TinyMCE 6.8.4 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.11.0 LTS or higher for TinyMCE 5.x (only available as part of commercial <a href="https://www.tiny.cloud/long-term-support/">long-term support</a> contract).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">TinyMCE 6.8.4</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">TinyMCE 7.2.0</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38356">https://nvd.nist.gov/vuln/detail/CVE-2024-38356</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d">https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0">https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss">https://owasp.org/www-community/attacks/xss</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview</a></li>
<li><a href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/advisories/GHSA-9hcv-j9pv-qmph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-19T15:07:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability using noneditable_regexp option]]></title>
        <id>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</id>
        <link href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph"/>
        <updated>2024-07-02T02:39:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content extraction code. When using the <code>noneditable_regexp</code> option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the <code>noneditable_regexp</code> option, any content within an attribute is properly verified to match the configured regular expression before being added.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 7.2.0 or higher.</li>
<li>Upgrade to TinyMCE 6.8.4 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.11.0 LTS or higher for TinyMCE 5.x (only available as part of commercial <a href="https://www.tiny.cloud/long-term-support/">long-term support</a> contract).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">TinyMCE 6.8.4</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">TinyMCE 7.2.0</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38356">https://nvd.nist.gov/vuln/detail/CVE-2024-38356</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d">https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0">https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss">https://owasp.org/www-community/attacks/xss</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview</a></li>
<li><a href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/advisories/GHSA-9hcv-j9pv-qmph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-19T15:07:08.000Z</published>
    </entry>
</feed>