<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-10-15T00:04:29.080Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[astro] DOM Clobbering Gadget found in astro's client-side router that leads to XSS]]></title>
        <id>https://github.com/advisories/GHSA-m85w-3h95-hcf9</id>
        <link href="https://github.com/advisories/GHSA-m85w-3h95-hcf9"/>
        <updated>2024-10-14T22:24:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A DOM Clobbering gadget has been discoverd in Astro's client-side router. It can lead to cross-site scripting (XSS) in websites enables Astro's client-side routing and has <em>stored</em> attacker-controlled scriptless HTML elements (i.e., <code>iframe</code> tags with unsanitized <code>name</code> attributes) on the destination pages.</p>
<h3 id="details">Details</h3>
<h4 id="backgrounds">Backgrounds</h4>
<p>DOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. More for information about DOM Clobbering, here are some references:</p>
<p>[1] <a href="https://scnps.co/papers/sp23_domclob.pdf">https://scnps.co/papers/sp23_domclob.pdf</a>
[2] <a href="https://research.securitum.com/xss-in-amp4email-dom-clobbering/">https://research.securitum.com/xss-in-amp4email-dom-clobbering/</a></p>
<h4 id="gadgets-found-in-astro">Gadgets found in Astro</h4>
<p>We identified a DOM Clobbering gadget in Astro's client-side routing module, specifically in the <code>&lt;ViewTransitions /&gt;</code> component. When integrated, this component introduces the following vulnerable code, which is executed during page transitions (e.g., clicking an <code>&lt;a&gt;</code> link):</p>
<p><a href="https://github.com/withastro/astro/blob/7814a6cad15f06931f963580176d9b38aa7819f2/packages/astro/src/transitions/router.ts#L135-L156">https://github.com/withastro/astro/blob/7814a6cad15f06931f963580176d9b38aa7819f2/packages/astro/src/transitions/router.ts#L135-L156</a></p>
<p>However, this implementation is vulnerable to a DOM Clobbering attack. The <code>document.scripts</code> lookup can be shadowed by an attacker injected non-script HTML elements (e.g., <code>&lt;img name="scripts"&gt;&lt;img name="scripts"&gt;</code>) via the browser's named DOM access mechanism. This manipulation allows an attacker to replace the intended script elements with an array of attacker-controlled scriptless HTML elements. </p>
<p>The condition <code>script.dataset.astroExec === ''</code> on line 138 can be bypassed because the attacker-controlled element does not have a data-astroExec attribute. Similarly, the check on line 134 can be bypassed as the element does not require a <code>type</code> attribute.</p>
<p>Finally, the <code>innerHTML</code> of an attacker-injected non-script HTML elements, which is plain text content before, will be set to the <code>.innerHTML</code> of an script element that leads to XSS.</p>
<h3 id="poc">PoC</h3>
<p>Consider a web application using Astro as the framework with client-side routing enabled and allowing users to embed certain scriptless HTML elements (e.g., <code>form</code> or <code>iframe</code>). This can be done through a bunch of website's feature that allows users to embed certain script-less HTML (e.g., markdown renderers, web email clients, forums) or via an HTML injection vulnerability in third-party JavaScript loaded on the page.</p>
<p>For PoC website, please refer to: <code>https://stackblitz.com/edit/github-4xgj2d</code>. Clicking the "about" button in the menu will trigger an <code>alert(1)</code> from an attacker-injected <code>form</code> element.</p>
<pre><code>---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { ViewTransitions } from "astro:transitions";
import "../styles/global.css";
const { pageTitle } = Astro.props;
---
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;link rel="icon" type="image/svg+xml" href="/favicon.svg" /&gt;
    &lt;meta name="viewport" content="width=device-width" /&gt;
    &lt;meta name="generator" content={Astro.generator} /&gt;
    &lt;title&gt;{pageTitle}&lt;/title&gt;
    &lt;ViewTransitions /&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!--USER INPUT--&gt;
    &lt;iframe name="scripts"&gt;alert(1)&lt;/iframe&gt;
    &lt;iframe name="scripts"&gt;alert(1)&lt;/iframe&gt;
    &lt;!--USER INPUT--&gt;
    
    &lt;Header /&gt;
    &lt;h1&gt;{pageTitle}&lt;/h1&gt;
    &lt;slot /&gt;
    &lt;Footer /&gt;
    &lt;script&gt;
      import "../scripts/menu.js";
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="impact">Impact</h3>
<p>This vulnerability can result in cross-site scripting (XSS) attacks on websites that built with Astro that enable the client-side routing with <code>ViewTransitions</code> and store the user-inserted scriptless HTML tags without properly sanitizing the <code>name</code> attributes on the page.</p>
<h3 id="patch">Patch</h3>
<p>We recommend replacing <code>document.scripts</code> with <code>document.getElementsByTagName('script')</code> for referring to script elements. This will mitigate the possibility of DOM Clobbering attacks leveraging the <code>name</code> attribute.</p>
<h3 id="reference">Reference</h3>
<p>Similar issues for reference:</p>
<ul>
<li>Webpack (<a href="https://github.com/webpack/webpack/security/advisories/GHSA-4vvj-4cpr-p986">CVE-2024-43788</a>)</li>
<li>Vite (<a href="https://github.com/vitejs/vite/security/advisories/GHSA-64vr-g452-qvp3">CVE-2024-45812</a>)</li>
<li>layui (<a href="https://github.com/layui/layui/security/advisories/GHSA-j827-6rgf-9629">CVE-2024-47075</a>)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/withastro/astro/security/advisories/GHSA-m85w-3h95-hcf9">https://github.com/withastro/astro/security/advisories/GHSA-m85w-3h95-hcf9</a></li>
<li><a href="https://github.com/withastro/astro/commit/a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e">https://github.com/withastro/astro/commit/a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47885">https://nvd.nist.gov/vuln/detail/CVE-2024-47885</a></li>
<li><a href="https://github.com/withastro/astro/blob/7814a6cad15f06931f963580176d9b38aa7819f2/packages/astro/src/transitions/router.ts#L135-L156">https://github.com/withastro/astro/blob/7814a6cad15f06931f963580176d9b38aa7819f2/packages/astro/src/transitions/router.ts#L135-L156</a></li>
<li><a href="https://github.com/advisories/GHSA-m85w-3h95-hcf9">https://github.com/advisories/GHSA-m85w-3h95-hcf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m85w-3h95-hcf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-14T20:02:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Denial of Service condition in Next.js image optimization]]></title>
        <id>https://github.com/advisories/GHSA-g77x-44xx-532m</id>
        <link href="https://github.com/advisories/GHSA-g77x-44xx-532m"/>
        <updated>2024-10-14T19:45:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The image optimization feature of Next.js contained a vulnerability which allowed for a potential Denial of Service (DoS) condition which could lead to excessive CPU consumption.</p>
<p><strong>Not affected:</strong></p>
<ul>
<li>The <code>next.config.js</code> file is configured with <code>images.unoptimized</code> set to <code>true</code> or <code>images.loader</code> set to a non-default value.</li>
<li>The Next.js application is hosted on Vercel.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>This issue was fully patched in Next.js <code>14.2.7</code>. We recommend that users upgrade to at least this version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that the <code>next.config.js</code> file has either <code>images.unoptimized</code>, <code>images.loader</code> or <code>images.loaderFile</code> assigned.</p>
<h4 id="credits">Credits</h4>
<p>Brandon Dahler (brandondahler), AWS
Dimitrios Vlastaras</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-g77x-44xx-532m">https://github.com/vercel/next.js/security/advisories/GHSA-g77x-44xx-532m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47831">https://nvd.nist.gov/vuln/detail/CVE-2024-47831</a></li>
<li><a href="https://github.com/vercel/next.js/commit/d11cbc9ff0b1aaefabcba9afe1e562e0b1fde65a">https://github.com/vercel/next.js/commit/d11cbc9ff0b1aaefabcba9afe1e562e0b1fde65a</a></li>
<li><a href="https://github.com/advisories/GHSA-g77x-44xx-532m">https://github.com/advisories/GHSA-g77x-44xx-532m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g77x-44xx-532m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-14T19:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonpath-plus] JSONPath Plus Remote Code Execution (RCE) Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pppg-cpfq-h7wr</id>
        <link href="https://github.com/advisories/GHSA-pppg-cpfq-h7wr"/>
        <updated>2024-10-14T16:27:22.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package jsonpath-plus before 10.0.0 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of vm in Node.</p>
<p><strong>Note:</strong></p>
<p>The unsafe behavior is still available after applying the fix but it is not turned on by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21534">https://nvd.nist.gov/vuln/detail/CVE-2024-21534</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3">https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884">https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884</a></li>
<li><a href="https://github.com/advisories/GHSA-pppg-cpfq-h7wr">https://github.com/advisories/GHSA-pppg-cpfq-h7wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pppg-cpfq-h7wr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-11T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[angular-base64-upload] angular-base64-upload vulnerable to unauthenticated remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-vgxq-6rcf-qwrw</id>
        <link href="https://github.com/advisories/GHSA-vgxq-6rcf-qwrw"/>
        <updated>2024-10-11T19:44:07.000Z</updated>
        <content type="html"><![CDATA[<p>angular-base64-upload versions prior to v0.1.21 are vulnerable to unauthenticated remote code execution via the <code>angular-base64-upload/demo/server.php</code> endpoint. Exploitation of this vulnerability involves uploading arbitrary file content to the server, which can subsequently accessed through the <code>angular-base64-upload/demo/uploads</code> endpoint. This leads to the execution of previously uploaded content which enables the attacker to achieve code execution on the server.</p>
<p>NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42640">https://nvd.nist.gov/vuln/detail/CVE-2024-42640</a></li>
<li><a href="https://github.com/adonespitogo/angular-base64-upload">https://github.com/adonespitogo/angular-base64-upload</a></li>
<li><a href="https://www.zyenra.com/blog/unauthenticated-rce-in-angular-base64-upload.html">https://www.zyenra.com/blog/unauthenticated-rce-in-angular-base64-upload.html</a></li>
<li><a href="https://github.com/rvizx/CVE-2024-42640">https://github.com/rvizx/CVE-2024-42640</a></li>
<li><a href="https://github.com/advisories/GHSA-vgxq-6rcf-qwrw">https://github.com/advisories/GHSA-vgxq-6rcf-qwrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vgxq-6rcf-qwrw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-11T18:32:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dompurify] DOMpurify has a nesting-based mXSS]]></title>
        <id>https://github.com/advisories/GHSA-gx9m-whjm-85jf</id>
        <link href="https://github.com/advisories/GHSA-gx9m-whjm-85jf"/>
        <updated>2024-10-11T17:27:30.000Z</updated>
        <content type="html"><![CDATA[<p>DOMpurify was vulnerable to nesting-based mXSS </p>
<p>fixed by <a href="https://github.com/cure53/DOMPurify/tree/0ef5e537a514f904b6aa1d7ad9e749e365d7185f">0ef5e537</a> (2.x) and
<a href="https://github.com/cure53/DOMPurify/pull/943">merge 943</a></p>
<p>Backporter should be aware of GHSA-mmhx-hmjr-r674 (CVE-2024-45801) when cherry-picking</p>
<p>POC is avaible under <a href="https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098">test</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cure53/DOMPurify/security/advisories/GHSA-gx9m-whjm-85jf">https://github.com/cure53/DOMPurify/security/advisories/GHSA-gx9m-whjm-85jf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47875">https://nvd.nist.gov/vuln/detail/CVE-2024-47875</a></li>
<li><a href="https://github.com/cure53/DOMPurify/commit/0ef5e537a514f904b6aa1d7ad9e749e365d7185f">https://github.com/cure53/DOMPurify/commit/0ef5e537a514f904b6aa1d7ad9e749e365d7185f</a></li>
<li><a href="https://github.com/cure53/DOMPurify/commit/6ea80cd8b47640c20f2f230c7920b1f4ce4fdf7a">https://github.com/cure53/DOMPurify/commit/6ea80cd8b47640c20f2f230c7920b1f4ce4fdf7a</a></li>
<li><a href="https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098">https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098</a></li>
<li><a href="https://github.com/advisories/GHSA-gx9m-whjm-85jf">https://github.com/advisories/GHSA-gx9m-whjm-85jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gx9m-whjm-85jf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-11T17:27:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dompurify] DOMpurify has a nesting-based mXSS]]></title>
        <id>https://github.com/advisories/GHSA-gx9m-whjm-85jf</id>
        <link href="https://github.com/advisories/GHSA-gx9m-whjm-85jf"/>
        <updated>2024-10-11T17:27:30.000Z</updated>
        <content type="html"><![CDATA[<p>DOMpurify was vulnerable to nesting-based mXSS </p>
<p>fixed by <a href="https://github.com/cure53/DOMPurify/tree/0ef5e537a514f904b6aa1d7ad9e749e365d7185f">0ef5e537</a> (2.x) and
<a href="https://github.com/cure53/DOMPurify/pull/943">merge 943</a></p>
<p>Backporter should be aware of GHSA-mmhx-hmjr-r674 (CVE-2024-45801) when cherry-picking</p>
<p>POC is avaible under <a href="https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098">test</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cure53/DOMPurify/security/advisories/GHSA-gx9m-whjm-85jf">https://github.com/cure53/DOMPurify/security/advisories/GHSA-gx9m-whjm-85jf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47875">https://nvd.nist.gov/vuln/detail/CVE-2024-47875</a></li>
<li><a href="https://github.com/cure53/DOMPurify/commit/0ef5e537a514f904b6aa1d7ad9e749e365d7185f">https://github.com/cure53/DOMPurify/commit/0ef5e537a514f904b6aa1d7ad9e749e365d7185f</a></li>
<li><a href="https://github.com/cure53/DOMPurify/commit/6ea80cd8b47640c20f2f230c7920b1f4ce4fdf7a">https://github.com/cure53/DOMPurify/commit/6ea80cd8b47640c20f2f230c7920b1f4ce4fdf7a</a></li>
<li><a href="https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098">https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test-suite.js#L2098</a></li>
<li><a href="https://github.com/advisories/GHSA-gx9m-whjm-85jf">https://github.com/advisories/GHSA-gx9m-whjm-85jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gx9m-whjm-85jf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-11T17:27:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-xml-parser] fast-xml-parser vulnerable to ReDOS at currency parsing]]></title>
        <id>https://github.com/advisories/GHSA-mpg4-rc92-vx8v</id>
        <link href="https://github.com/advisories/GHSA-mpg4-rc92-vx8v"/>
        <updated>2024-10-11T14:14:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A ReDOS that exists on currency.js was discovered by Gauss Security Labs R&amp;D team.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/NaturalIntelligence/fast-xml-parser/blob/v4.4.0/src/v5/valueParsers/currency.js#L10">https://github.com/NaturalIntelligence/fast-xml-parser/blob/v4.4.0/src/v5/valueParsers/currency.js#L10</a> contains a vulnerable regex </p>
<h3 id="poc">PoC</h3>
<p>pass the following string '\t'.repeat(13337)  + '.'</p>
<h3 id="impact">Impact</h3>
<p>Denial of service during currency parsing in experimental version 5 of fast-xml-parser-library</p>
<p><a href="https://gauss-security.com">https://gauss-security.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164">https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10">https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41818">https://nvd.nist.gov/vuln/detail/CVE-2024-41818</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/commit/ba5f35e7680468acd7906eaabb2f69e28ed8b2aa">https://github.com/NaturalIntelligence/fast-xml-parser/commit/ba5f35e7680468acd7906eaabb2f69e28ed8b2aa</a></li>
<li><a href="https://github.com/advisories/GHSA-mpg4-rc92-vx8v">https://github.com/advisories/GHSA-mpg4-rc92-vx8v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpg4-rc92-vx8v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-29T17:46:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic's verify function omits validation]]></title>
        <id>https://github.com/advisories/GHSA-434g-2637-qmqr</id>
        <link href="https://github.com/advisories/GHSA-434g-2637-qmqr"/>
        <updated>2024-10-10T21:00:06.000Z</updated>
        <content type="html"><![CDATA[<p>The Elliptic package 6.5.5 for Node.js for EDDSA implementation does not perform the required check if the signature proof(s) is within the bounds of the order n of the base point of the elliptic curve, leading to signature malleability. Namely, the <code>verify</code> function in <code>lib/elliptic/eddsa/index.js</code> omits <code>sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()</code> validation.</p>
<p>This vulnerability could have a security-relevant impact if an application relies on the uniqueness of a signature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48949">https://nvd.nist.gov/vuln/detail/CVE-2024-48949</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/7ac5360118f74eb02da73bdf9f24fd0c72ff5281">https://github.com/indutny/elliptic/commit/7ac5360118f74eb02da73bdf9f24fd0c72ff5281</a></li>
<li><a href="https://github.com/indutny/elliptic/compare/v6.5.5...v6.5.6">https://github.com/indutny/elliptic/compare/v6.5.5...v6.5.6</a></li>
<li><a href="https://github.com/advisories/GHSA-434g-2637-qmqr">https://github.com/advisories/GHSA-434g-2637-qmqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-434g-2637-qmqr</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-10T03:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] Cross-Site Scripting in jquery]]></title>
        <id>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</id>
        <link href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw"/>
        <updated>2024-10-10T16:17:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>jquery</code> prior to 1.9.0 are vulnerable to Cross-Site Scripting. The load method fails to recognize and remove <code>&lt;script&gt;</code> HTML tags that contain a whitespace character, i.e: <code>&lt;/script &gt;</code>, which results in the enclosed script logic to be executed. This allows attackers to execute arbitrary JavaScript in a victim's browser.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 1.9.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7656">https://nvd.nist.gov/vuln/detail/CVE-2020-7656</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JQUERY-569619">https://snyk.io/vuln/SNYK-JS-JQUERY-569619</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203">https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481">https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481</a></li>
<li><a href="https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US">https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml</a></li>
<li><a href="https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d">https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d</a></li>
<li><a href="https://github.com/jquery/jquery/commit/606b863edaff29035960e4d813b45d63b8d92876">https://github.com/jquery/jquery/commit/606b863edaff29035960e4d813b45d63b8d92876</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200528-0001">https://security.netapp.com/advisory/ntap-20200528-0001</a></li>
<li><a href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw">https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-20T16:18:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[express] Express Open Redirect vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jj78-5fmv-mv28</id>
        <link href="https://github.com/advisories/GHSA-jj78-5fmv-mv28"/>
        <updated>2024-10-09T23:46:56.000Z</updated>
        <content type="html"><![CDATA[<p>URL Redirection to Untrusted Site ('Open Redirect') vulnerability in Express. This vulnerability affects the use of the Express Response object. This issue impacts Express: from 3.4.5 before 4.0.0-rc1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9266">https://nvd.nist.gov/vuln/detail/CVE-2024-9266</a></li>
<li><a href="https://www.herodevs.com/vulnerability-directory/cve-2024-9266">https://www.herodevs.com/vulnerability-directory/cve-2024-9266</a></li>
<li><a href="https://github.com/expressjs/express/compare/3.4.4...3.4.5">https://github.com/expressjs/express/compare/3.4.4...3.4.5</a></li>
<li><a href="https://github.com/advisories/GHSA-jj78-5fmv-mv28">https://github.com/advisories/GHSA-jj78-5fmv-mv28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jj78-5fmv-mv28</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-03T21:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[relaxedjs] ReLaXed Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gj3p-j74v-3x57</id>
        <link href="https://github.com/advisories/GHSA-gj3p-j74v-3x57"/>
        <updated>2024-10-08T18:56:11.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in RelaxedJS ReLaXed up to 0.2.2. Affected is an unknown function of the component Pug to PDF Converter. The manipulation leads to cross site scripting. An attack has to be approached locally. The exploit has been disclosed to the public and may be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9283">https://nvd.nist.gov/vuln/detail/CVE-2024-9283</a></li>
<li><a href="https://drive.google.com/file/d/1Ll1dRwQds8987S-l5o2iJu4MQRG-p4-A/view?usp=sharing">https://drive.google.com/file/d/1Ll1dRwQds8987S-l5o2iJu4MQRG-p4-A/view?usp=sharing</a></li>
<li><a href="https://vuldb.com/?ctiid.278676">https://vuldb.com/?ctiid.278676</a></li>
<li><a href="https://vuldb.com/?id.278676">https://vuldb.com/?id.278676</a></li>
<li><a href="https://vuldb.com/?submit.411185">https://vuldb.com/?submit.411185</a></li>
<li><a href="https://github.com/advisories/GHSA-gj3p-j74v-3x57">https://github.com/advisories/GHSA-gj3p-j74v-3x57</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gj3p-j74v-3x57</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-09-27T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[slim-select] Slim Select has potential Cross-site Scripting issue]]></title>
        <id>https://github.com/advisories/GHSA-qvqv-mcxr-x8qw</id>
        <link href="https://github.com/advisories/GHSA-qvqv-mcxr-x8qw"/>
        <updated>2024-10-08T18:50:10.000Z</updated>
        <content type="html"><![CDATA[<p>Slim Select 2.0 versions through 2.9.0 are affected by a potential cross-site scripting vulnerability. In select.ts:createOption(), the text variable from the user-provided Options object is assigned to an innerHTML without sanitation. Software that depends on this library to dynamically generate lists using unsanitized user-provided input may be vulnerable to cross-site scripting, resulting in attacker executed JavaScript. At this time, no patch is available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9440">https://nvd.nist.gov/vuln/detail/CVE-2024-9440</a></li>
<li><a href="https://github.com/brianvoe/slim-select/issues/564">https://github.com/brianvoe/slim-select/issues/564</a></li>
<li><a href="https://github.com/brianvoe/slim-select/blob/e7e37e2ff90e125f846bd98d6b8f278524ead79e/src/slim-select/select.ts#L377">https://github.com/brianvoe/slim-select/blob/e7e37e2ff90e125f846bd98d6b8f278524ead79e/src/slim-select/select.ts#L377</a></li>
<li><a href="https://vulncheck.com/advisories/slim-select-xss">https://vulncheck.com/advisories/slim-select-xss</a></li>
<li><a href="https://github.com/advisories/GHSA-qvqv-mcxr-x8qw">https://github.com/advisories/GHSA-qvqv-mcxr-x8qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvqv-mcxr-x8qw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-02T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ggit] ggit is vulnerable to Arbitrary Argument Injection via the clone() API]]></title>
        <id>https://github.com/advisories/GHSA-pr45-cg4x-ff4m</id>
        <link href="https://github.com/advisories/GHSA-pr45-cg4x-ff4m"/>
        <updated>2024-10-08T14:38:54.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package ggit are vulnerable to Arbitrary Argument Injection via the clone() API, which allows specifying the remote URL to clone and the file on disk to clone to. The library does not sanitize for user input or validate a given URL scheme, nor does it properly pass command-line flags to the git binary using the double-dash POSIX characters (--) to communicate the end of options.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21533">https://nvd.nist.gov/vuln/detail/CVE-2024-21533</a></li>
<li><a href="https://gist.github.com/lirantal/80c6d59ac1b682a32bc9d2ff92044bb9">https://gist.github.com/lirantal/80c6d59ac1b682a32bc9d2ff92044bb9</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-GGIT-5731319">https://security.snyk.io/vuln/SNYK-JS-GGIT-5731319</a></li>
<li><a href="https://github.com/advisories/GHSA-pr45-cg4x-ff4m">https://github.com/advisories/GHSA-pr45-cg4x-ff4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pr45-cg4x-ff4m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-08T06:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ggit] ggit is vulnerable to Command Injection via the fetchTags(branch) API]]></title>
        <id>https://github.com/advisories/GHSA-62cx-5xj4-wfm4</id>
        <link href="https://github.com/advisories/GHSA-62cx-5xj4-wfm4"/>
        <updated>2024-10-08T14:38:50.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package ggit are vulnerable to Command Injection via the fetchTags(branch) API, which allows user input to specify the branch to be fetched and then concatenates this string along with a git command which is then passed to the unsafe exec() Node.js child process API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21532">https://nvd.nist.gov/vuln/detail/CVE-2024-21532</a></li>
<li><a href="https://gist.github.com/lirantal/d8f87b366d2078e6118ab7bf2b005f02">https://gist.github.com/lirantal/d8f87b366d2078e6118ab7bf2b005f02</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-GGIT-5731320">https://security.snyk.io/vuln/SNYK-JS-GGIT-5731320</a></li>
<li><a href="https://github.com/advisories/GHSA-62cx-5xj4-wfm4">https://github.com/advisories/GHSA-62cx-5xj4-wfm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62cx-5xj4-wfm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-08T06:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@sap/hana-client] SAP HANA Node.js client package vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-6339-gv7w-g5f4</id>
        <link href="https://github.com/advisories/GHSA-6339-gv7w-g5f4"/>
        <updated>2024-10-08T14:37:56.000Z</updated>
        <content type="html"><![CDATA[<p>The SAP HANA Node.js client package versions from 2.0.0 before 2.21.31 is impacted by Prototype Pollution vulnerability allowing an attacker to add arbitrary properties to global object prototypes. This is due to improper user input sanitation when using the nestTables feature causing low impact on the availability of the application. This has no impact on Confidentiality and Integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45277">https://nvd.nist.gov/vuln/detail/CVE-2024-45277</a></li>
<li><a href="https://me.sap.com/notes/3520100">https://me.sap.com/notes/3520100</a></li>
<li><a href="https://url.sap/sapsecuritypatchday">https://url.sap/sapsecuritypatchday</a></li>
<li><a href="https://www.npmjs.com/package/@sap/hana-client?activeTab=code">https://www.npmjs.com/package/@sap/hana-client?activeTab=code</a></li>
<li><a href="https://github.com/advisories/GHSA-6339-gv7w-g5f4">https://github.com/advisories/GHSA-6339-gv7w-g5f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6339-gv7w-g5f4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-08T06:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[find-my-way] find-my-way has a ReDoS vulnerability in multiparametric routes]]></title>
        <id>https://github.com/advisories/GHSA-rrr8-f88r-h8q6</id>
        <link href="https://github.com/advisories/GHSA-rrr8-f88r-h8q6"/>
        <updated>2024-10-07T21:52:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bad regular expression is generated any time you have two parameters within a single segment, when adding a <code>-</code> at the end, like <code>/:a-:b-</code>.</p>
<h3 id="patches">Patches</h3>
<p>Update to find-my-way v8.2.2 or v9.0.1. or subsequent versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/advisories/GHSA-9wv6-86v2-598j">CVE-2024-45296</a></li>
<li><a href="https://blakeembrey.com/posts/2024-09-web-redos/">Detailed blog post about <code>path-to-regexp</code> vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/delvedor/find-my-way/security/advisories/GHSA-rrr8-f88r-h8q6">https://github.com/delvedor/find-my-way/security/advisories/GHSA-rrr8-f88r-h8q6</a></li>
<li><a href="https://github.com/delvedor/find-my-way/commit/17fae694dcefc056045da201681c1530f0f80518">https://github.com/delvedor/find-my-way/commit/17fae694dcefc056045da201681c1530f0f80518</a></li>
<li><a href="https://github.com/delvedor/find-my-way/commit/5e9e0eb5d8d438e06a185d5e536a896572dd0440">https://github.com/delvedor/find-my-way/commit/5e9e0eb5d8d438e06a185d5e536a896572dd0440</a></li>
<li><a href="https://blakeembrey.com/posts/2024-09-web-redos">https://blakeembrey.com/posts/2024-09-web-redos</a></li>
<li><a href="https://github.com/advisories/GHSA-9wv6-86v2-598j">https://github.com/advisories/GHSA-9wv6-86v2-598j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45813">https://nvd.nist.gov/vuln/detail/CVE-2024-45813</a></li>
<li><a href="https://github.com/delvedor/find-my-way/commit/66fa03923355b8da1db4ba572d66a4fee4a57cf5">https://github.com/delvedor/find-my-way/commit/66fa03923355b8da1db4ba572d66a4fee4a57cf5</a></li>
<li><a href="https://github.com/advisories/GHSA-rrr8-f88r-h8q6">https://github.com/advisories/GHSA-rrr8-f88r-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrr8-f88r-h8q6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-18T15:52:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@saltcorn/server] Saltcorn Server Stored Cross-Site Scripting (XSS) in event logs page]]></title>
        <id>https://github.com/advisories/GHSA-pf56-h9qf-rxq4</id>
        <link href="https://github.com/advisories/GHSA-pf56-h9qf-rxq4"/>
        <updated>2024-10-07T15:14:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Event log data is not properly sanitized leading to stored Cross-Site Scripting (XSS) vulnerability.</p>
<h3 id="details">Details</h3>
<ul>
<li>file: <a href="https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/eventlog.js#L445">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/eventlog.js#L445</a></li>
</ul>
<pre><code class="language-js">router.get(
  "/:id",
  isAdmin,
  error_catcher(async (req, res) =&gt; {
    const { id } = req.params;
    const ev = await EventLog.findOneWithUser(id);
    send_events_page({
      [...]
      contents: {
        type: "card",
        contents:
          [...]
          ) +
          div(
            { class: "eventpayload" },
            ev.payload ? pre(JSON.stringify(ev.payload, null, 2)) : "" //&lt;---
          ),
      },
    });
  })
</code></pre>
<h3 id="poc">PoC</h3>
<p>The following PoC demonstrates how a non-admin user with permission to read/write on a table can inject malicious javascript code that will be executed in the event log admin panel if event logs are enabled.</p>
<p>To demonstrate this issue, we need to prepare some components. The following steps should be executed with an admin user.</p>
<ol>
<li>create a table with one column of type string set read/write permission to staff users (just as an example)</li>
</ol>
<ul>
<li>visit <code>http://localhost:3000/table/new</code></li>
<li>create a table with <code>Table name</code> <code>my_table_xss</code> and click <code>Create</code></li>
<li>click <code>Add field</code> to add a field with <code>Label</code> called <code>payload</code> of type <code>String</code> and click <code>Next &gt;&gt;</code></li>
<li>leave default values for <code>Attributes</code> and click <code>Next &gt;&gt;</code> - it should redirect to <code>http://localhost:3000/table/&lt;table-number&gt;</code></li>
<li>under <code>Edit table properties</code>, set <code>Minimum role to read</code> and <code>Minimum role to write</code> to <code>staff</code></li>
</ul>
<ol start="2">
<li>create an edit view so that staff users can insert more data</li>
</ol>
<ul>
<li>visit <code>http://localhost:3000/viewedit</code> anc click <code>Create View</code></li>
<li>set the following values:<ul>
<li><code>View name</code>: <code>my_xss_view</code></li>
<li><code>View pattern</code>: <code>Edit</code></li>
<li><code>Table</code>: <code>my_table_xss</code></li>
<li><code>Minimum role</code>: <code>staff</code></li>
</ul>
</li>
<li>click <code>Configure &gt;&gt;</code></li>
<li>on page <code>http://localhost:3000/viewedit/config/my_xss_view</code> click <code>Next &gt;&gt;</code> and then <code>Finish &gt;&gt;</code></li>
<li>you should see a message <code>View my_xss_view saved</code></li>
</ul>
<ol start="3">
<li>edit the site structure to add the View just created so that <code>staff</code> users can access it</li>
</ol>
<ul>
<li>visit <code>http://localhost:3000/menu</code></li>
<li>set the following values:<ul>
<li><code>Type</code>: <code>View</code></li>
<li><code>View</code>: <code>my_xss_view [Edit]</code></li>
<li><code>Text label</code>: <code>view</code></li>
<li><code>Minimum role</code>: <code>staff</code></li>
</ul>
</li>
<li>click <code>Add</code></li>
</ul>
<ol start="4">
<li>create an event that will log when data is inserted in the <code>my_table_xss</code> table create at step 1</li>
</ol>
<ul>
<li>visit <code>http://localhost:3000/eventlog/settings</code></li>
<li>under <code>Which events should be logged?</code> select:<ul>
<li><code>[X] Insert</code></li>
<li><code>[X] Insert my_table_xss</code></li>
</ul>
</li>
</ul>
<p>Login with a user with staff role (you can do the same steps also with an admin user)</p>
<ul>
<li>visit <code>http://localhost:3000/view/my_xss_view</code></li>
<li>in the <code>payload</code> field insert <code>"&lt;svg/onload=alert(`xss`)&gt;</code> and click <code>Save</code></li>
</ul>
<p>With an admin user inspect the log entry generated by the above action:</p>
<ul>
<li>visit <code>http://localhost:3000/eventlog</code></li>
<li>click on the event log generated (<code>http://localhost:3000/eventlog/&lt;event-number&gt;</code>)</li>
<li>an alert will appear</li>
</ul>
<h3 id="impact">Impact</h3>
<p>Stored Cross-Site Scripting (XSS)</p>
<h3 id="recommended-mitigation">Recommended Mitigation</h3>
<p>Sanitize the user input before building HTML elements</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/saltcorn/saltcorn/security/advisories/GHSA-pf56-h9qf-rxq4">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-pf56-h9qf-rxq4</a></li>
<li><a href="https://github.com/saltcorn/saltcorn/commit/3c551261d0e230635774798009951fa83a07cc3a">https://github.com/saltcorn/saltcorn/commit/3c551261d0e230635774798009951fa83a07cc3a</a></li>
<li><a href="https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/eventlog.js#L445">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/eventlog.js#L445</a></li>
<li><a href="https://github.com/advisories/GHSA-pf56-h9qf-rxq4">https://github.com/advisories/GHSA-pf56-h9qf-rxq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pf56-h9qf-rxq4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-07T15:14:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@saltcorn/server] Saltcorn Server allows logged-in users to delete arbitrary files because of a path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-43f3-h63w-p6f6</id>
        <link href="https://github.com/advisories/GHSA-43f3-h63w-p6f6"/>
        <updated>2024-10-08T14:19:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A logged-in user with any role can delete arbitrary files on the filesystem by calling the <code>sync/clean_sync_dir</code> endpoint. The <code>dir_name</code> POST parameter is not validated/sanitized and is used to construct the <code>syncDir</code> that is deleted by calling <code>fs.rm</code>.</p>
<h3 id="details">Details</h3>
<ul>
<li>file: <a href="https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.15/packages/server/routes/sync.js#L337-L346">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.15/packages/server/routes/sync.js#L337-L346</a></li>
</ul>
<pre><code class="language-js">router.post(
  "/clean_sync_dir",
  error_catcher(async (req, res) =&gt; {
    const { dir_name } = req.body; // [1] source
    try {
      const rootFolder = await File.rootFolder();
      const syncDir = path.join(
        rootFolder.location,
        "mobile_app",
        "sync",
        dir_name // [2]
      );
      await fs.rm(syncDir, { recursive: true, force: true }); // [3] sink
      res.status(200).send("");
    } catch (error) {
      getState().log(2, `POST /sync/clean_sync_dir: '${error.message}'`);
      res.status(400).json({ error: error.message || error });
    }
  })
);
</code></pre>
<h3 id="poc">PoC</h3>
<p>The following PoC can be executed with a user with any role (<code>admin</code>, <code>staff</code>, <code>user</code>, <code>public</code>)</p>
<ul>
<li>create a file in a folder different from where the server is started:</li>
</ul>
<pre><code>touch /tmp/secret
cat /tmp/secret
</code></pre>
<ul>
<li>log with a user and retrieve valid <code>connect.sid</code> and <code>_csrf</code> values***</li>
<li>send the following <code>curl</code> request</li>
</ul>
<pre><code>curl -i -X $'POST' \
  -H $'Host: localhost:3000' \
  -H $'Content-Type: application/x-www-form-urlencoded' \
  -H $'Content-Length: 93' \
  -H $'Origin: http://localhost:3000' \
  -H $'Connection: close' \
  -b $'connect.sid=VALID_CONNECT_SID_COOKIE; loggedin=true' \
  --data-binary $'_csrf=VALID_CSRF_VALUE&amp;dir_name=/../../../../../../../../../../tmp/secret' \
  $'http://localhost:3000/sync/clean_sync_dir'
</code></pre>
<ul>
<li>check if the file previously created does not exist anymore:</li>
</ul>
<pre><code>cat /tmp/secret
cat: /tmp/secret: No such file or directory
</code></pre>
<p>*** obtain <code>connect.sid</code> and <code>_csrf</code> values</p>
<p>A possible way to retrieve <code>connect.sid</code> and <code>_csrf</code> values is to use the password reset functionality:</p>
<ul>
<li>log in</li>
<li>open the browser developer console, go to the <code>Network</code> tab filter for <code>settings</code> request</li>
<li>visit <code>http://localhost:3000/auth/settings</code></li>
<li>trigger the change password functionality</li>
<li>under the <code>Headers</code> and <code>Request</code> tabs, grab the <code>connect.sid</code> and <code>_csrf</code> values and replace them in the curl command</li>
</ul>
<h3 id="impact">Impact</h3>
<p>Arbitrary file delete</p>
<h3 id="recommended-mitigation">Recommended Mitigation</h3>
<p>Resolve the <code>syncDir</code> and check if it starts with <code>rootFolder.location/mobile_app/sync</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/saltcorn/saltcorn/security/advisories/GHSA-43f3-h63w-p6f6">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-43f3-h63w-p6f6</a></li>
<li><a href="https://github.com/saltcorn/saltcorn/commit/3c551261d0e230635774798009951fa83a07cc3a">https://github.com/saltcorn/saltcorn/commit/3c551261d0e230635774798009951fa83a07cc3a</a></li>
<li><a href="https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.15/packages/server/routes/sync.js#L337-L346">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.15/packages/server/routes/sync.js#L337-L346</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47818">https://nvd.nist.gov/vuln/detail/CVE-2024-47818</a></li>
<li><a href="https://github.com/advisories/GHSA-43f3-h63w-p6f6">https://github.com/advisories/GHSA-43f3-h63w-p6f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43f3-h63w-p6f6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-07T15:10:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Strapi Server-Side Request Forgery (SSRF)]]></title>
        <id>https://github.com/advisories/GHSA-p9ff-j98v-p435</id>
        <link href="https://github.com/advisories/GHSA-p9ff-j98v-p435"/>
        <updated>2024-10-04T23:33:30.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi v4.24.4 was discovered to contain a Server-Side Request Forgery (SSRF) via the component /strapi.io/_next/image. This vulnerability allows attackers to scan for open ports or access sensitive information via a crafted GET request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37818">https://nvd.nist.gov/vuln/detail/CVE-2024-37818</a></li>
<li><a href="https://medium.com/%40barkadevaibhav491/server-side-request-forgery-in-strapi-e02d5fe218ab">https://medium.com/%40barkadevaibhav491/server-side-request-forgery-in-strapi-e02d5fe218ab</a></li>
<li><a href="https://strapi.io">https://strapi.io</a></li>
<li><a href="https://github.com/advisories/GHSA-p9ff-j98v-p435">https://github.com/advisories/GHSA-p9ff-j98v-p435</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9ff-j98v-p435</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-20T21:31:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cookie] cookie accepts cookie name, path, and domain with out of bounds characters]]></title>
        <id>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</id>
        <link href="https://github.com/advisories/GHSA-pxg6-pf52-xh8x"/>
        <updated>2024-10-04T20:31:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, <code>serialize("userName=&lt;script&gt;alert('XSS3')&lt;/script&gt;; Max-Age=2592000; a", value)</code> would result in <code>"userName=&lt;script&gt;alert('XSS3')&lt;/script&gt;; Max-Age=2592000; a=test"</code>, setting <code>userName</code> cookie to <code>&lt;script&gt;</code> and ignoring <code>value</code>.</p>
<p>A similar escape can be used for <code>path</code> and <code>domain</code>, which could be abused to alter other fields of the cookie.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to 0.7.0, which updates the validation for <code>name</code>, <code>path</code>, and <code>domain</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jshttp/cookie/pull/167">https://github.com/jshttp/cookie/pull/167</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x">https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x</a></li>
<li><a href="https://github.com/jshttp/cookie/pull/167">https://github.com/jshttp/cookie/pull/167</a></li>
<li><a href="https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c">https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c</a></li>
<li><a href="https://github.com/advisories/GHSA-pxg6-pf52-xh8x">https://github.com/advisories/GHSA-pxg6-pf52-xh8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-04T20:31:00.000Z</published>
    </entry>
</feed>