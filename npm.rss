<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-07-05T00:21:02.577Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[pg-native] Uncontrolled Resource Consumption in pg-native and libpq]]></title>
        <id>https://github.com/advisories/GHSA-j32j-2hxv-rqf7</id>
        <link href="https://github.com/advisories/GHSA-j32j-2hxv-rqf7"/>
        <updated>2022-06-29T21:53:02.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package pg-native; all versions of package libpq are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. <strong>Note:</strong> pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25852">https://nvd.nist.gov/vuln/detail/CVE-2022-25852</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366">https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365">https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365</a></li>
<li><a href="https://github.com/advisories/GHSA-j32j-2hxv-rqf7">https://github.com/advisories/GHSA-j32j-2hxv-rqf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j32j-2hxv-rqf7</uri>
        </author>
        <published>2022-06-18T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libpq] Uncontrolled Resource Consumption in pg-native and libpq]]></title>
        <id>https://github.com/advisories/GHSA-j32j-2hxv-rqf7</id>
        <link href="https://github.com/advisories/GHSA-j32j-2hxv-rqf7"/>
        <updated>2022-06-29T21:53:02.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package pg-native; all versions of package libpq are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. <strong>Note:</strong> pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25852">https://nvd.nist.gov/vuln/detail/CVE-2022-25852</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366">https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365">https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365</a></li>
<li><a href="https://github.com/advisories/GHSA-j32j-2hxv-rqf7">https://github.com/advisories/GHSA-j32j-2hxv-rqf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j32j-2hxv-rqf7</uri>
        </author>
        <published>2022-06-18T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-get-set] Prototype Pollution in deep-get-set]]></title>
        <id>https://github.com/advisories/GHSA-mjjj-6p43-vhhv</id>
        <link href="https://github.com/advisories/GHSA-mjjj-6p43-vhhv"/>
        <updated>2022-06-29T21:52:19.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package deep-get-set are vulnerable to Prototype Pollution via the 'deep' function. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href="https://security.snyk.io/vuln/SNYK-JS-DEEPGETSET-598666">CVE-2020-7715</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21231">https://nvd.nist.gov/vuln/detail/CVE-2022-21231</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-DEEPGETSET-2342655">https://snyk.io/vuln/SNYK-JS-DEEPGETSET-2342655</a></li>
<li><a href="https://github.com/advisories/GHSA-mjjj-6p43-vhhv">https://github.com/advisories/GHSA-mjjj-6p43-vhhv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjjj-6p43-vhhv</uri>
        </author>
        <published>2022-06-25T00:00:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[just-safe-set] Prototype polluation in just-safe-set]]></title>
        <id>https://github.com/advisories/GHSA-v26w-gcxh-v4r7</id>
        <link href="https://github.com/advisories/GHSA-v26w-gcxh-v4r7"/>
        <updated>2022-06-29T20:42:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in ‘just-safe-set’ versions 1.0.0 through 2.2.1 allows an attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-25952">https://nvd.nist.gov/vuln/detail/CVE-2021-25952</a></li>
<li><a href="https://github.com/angus-c/just/pull/267">https://github.com/angus-c/just/pull/267</a></li>
<li><a href="https://github.com/angus-c/just/commit/dd57a476f4bb9d78c6f60741898dc04c71d2eb53">https://github.com/angus-c/just/commit/dd57a476f4bb9d78c6f60741898dc04c71d2eb53</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25952">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25952</a></li>
<li><a href="https://github.com/advisories/GHSA-v26w-gcxh-v4r7">https://github.com/advisories/GHSA-v26w-gcxh-v4r7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v26w-gcxh-v4r7</uri>
        </author>
        <published>2021-12-10T18:50:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[npm] Incorrect Permission Assignment for Critical Resource in NPM]]></title>
        <id>https://github.com/advisories/GHSA-ph34-pc88-72gc</id>
        <link href="https://github.com/advisories/GHSA-ph34-pc88-72gc"/>
        <updated>2022-06-28T23:53:13.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as "next: 5.7.0" and therefore automatically installed by an "npm upgrade -g npm" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a "correctMkdir" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7408">https://nvd.nist.gov/vuln/detail/CVE-2018-7408</a></li>
<li><a href="https://github.com/npm/npm/issues/19883">https://github.com/npm/npm/issues/19883</a></li>
<li><a href="https://github.com/npm/npm/commit/74e149da6efe6ed89477faa81fef08eee7999ad0">https://github.com/npm/npm/commit/74e149da6efe6ed89477faa81fef08eee7999ad0</a></li>
<li><a href="http://blog.npmjs.org/post/171169301000/v571">http://blog.npmjs.org/post/171169301000/v571</a></li>
<li><a href="https://github.com/advisories/GHSA-ph34-pc88-72gc">https://github.com/advisories/GHSA-ph34-pc88-72gc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ph34-pc88-72gc</uri>
        </author>
        <published>2022-05-13T01:53:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deap] Improper Input Validation in Deap]]></title>
        <id>https://github.com/advisories/GHSA-xg47-r67p-vhv5</id>
        <link href="https://github.com/advisories/GHSA-xg47-r67p-vhv5"/>
        <updated>2022-06-28T23:46:37.000Z</updated>
        <content type="html"><![CDATA[<p>The utilities function in all versions &lt; 1.0.1 of the deap node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3749">https://nvd.nist.gov/vuln/detail/CVE-2018-3749</a></li>
<li><a href="https://hackerone.com/reports/310446">https://hackerone.com/reports/310446</a></li>
<li><a href="https://github.com/selfcontained/deap/commit/ed27b7e890bdd616e1ee931ea1c64228e2b52a71">https://github.com/selfcontained/deap/commit/ed27b7e890bdd616e1ee931ea1c64228e2b52a71</a></li>
<li><a href="https://github.com/advisories/GHSA-xg47-r67p-vhv5">https://github.com/advisories/GHSA-xg47-r67p-vhv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xg47-r67p-vhv5</uri>
        </author>
        <published>2022-05-14T03:05:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blamer] Improper Neutralization of Special Elements used in an OS Command in Blamer]]></title>
        <id>https://github.com/advisories/GHSA-8cxp-cjm8-fj36</id>
        <link href="https://github.com/advisories/GHSA-8cxp-cjm8-fj36"/>
        <updated>2022-06-28T15:22:17.000Z</updated>
        <content type="html"><![CDATA[<p>Blamer versions prior to 1.0.1 allows execution of arbitrary commands. It is possible to inject arbitrary commands as part of the arguments provided to blamer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10807">https://nvd.nist.gov/vuln/detail/CVE-2019-10807</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-BLAMER-559541">https://snyk.io/vuln/SNYK-JS-BLAMER-559541</a></li>
<li><a href="https://github.com/kucherenko/blamer/commit/5fada8c9b6986ecd28942b724fa682e77ce1e11c">https://github.com/kucherenko/blamer/commit/5fada8c9b6986ecd28942b724fa682e77ce1e11c</a></li>
<li><a href="https://github.com/advisories/GHSA-8cxp-cjm8-fj36">https://github.com/advisories/GHSA-8cxp-cjm8-fj36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8cxp-cjm8-fj36</uri>
        </author>
        <published>2022-05-24T17:10:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[engine.io] Resource exhaustion in engine.io ]]></title>
        <id>https://github.com/advisories/GHSA-j4f2-536g-r55m</id>
        <link href="https://github.com/advisories/GHSA-j4f2-536g-r55m"/>
        <updated>2022-06-27T23:47:40.000Z</updated>
        <content type="html"><![CDATA[<p>Engine.IO before 4.0.0 and 3.6.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36048">https://nvd.nist.gov/vuln/detail/CVE-2020-36048</a></li>
<li><a href="https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b">https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b</a></li>
<li><a href="https://blog.caller.xyz/socketio-engineio-dos/">https://blog.caller.xyz/socketio-engineio-dos/</a></li>
<li><a href="https://github.com/bcaller/kill-engine-io">https://github.com/bcaller/kill-engine-io</a></li>
<li><a href="https://github.com/advisories/GHSA-j4f2-536g-r55m">https://github.com/advisories/GHSA-j4f2-536g-r55m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j4f2-536g-r55m</uri>
        </author>
        <published>2022-02-09T22:29:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[protobufjs] Prototype Pollution in protobufjs]]></title>
        <id>https://github.com/advisories/GHSA-g954-5hwp-pp24</id>
        <link href="https://github.com/advisories/GHSA-g954-5hwp-pp24"/>
        <updated>2022-06-27T21:06:33.000Z</updated>
        <content type="html"><![CDATA[<p>The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype.</p>
<p>This vulnerability can occur in multiple ways:</p>
<ol>
<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>
<li>by parsing/loading .proto files</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25878">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1731">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1735">https://github.com/protobufjs/protobuf.js/pull/1735</a></li>
<li><a href="https://github.com/advisories/GHSA-g954-5hwp-pp24">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g954-5hwp-pp24</uri>
        </author>
        <published>2022-05-28T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[protobufjs] Prototype Pollution in protobufjs]]></title>
        <id>https://github.com/advisories/GHSA-g954-5hwp-pp24</id>
        <link href="https://github.com/advisories/GHSA-g954-5hwp-pp24"/>
        <updated>2022-06-27T21:06:33.000Z</updated>
        <content type="html"><![CDATA[<p>The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype.</p>
<p>This vulnerability can occur in multiple ways:</p>
<ol>
<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>
<li>by parsing/loading .proto files</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25878">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1731">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1735">https://github.com/protobufjs/protobuf.js/pull/1735</a></li>
<li><a href="https://github.com/advisories/GHSA-g954-5hwp-pp24">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g954-5hwp-pp24</uri>
        </author>
        <published>2022-05-28T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codecov] Improper Neutralization of Special Elements in Output Used by a Downstream Component in Codecov]]></title>
        <id>https://github.com/advisories/GHSA-mh2h-6j8q-x246</id>
        <link href="https://github.com/advisories/GHSA-mh2h-6j8q-x246"/>
        <updated>2022-06-27T21:02:06.000Z</updated>
        <content type="html"><![CDATA[<p>Codecov npm module before 3.6.2 allows remote attackers to execute arbitrary commands via the "gcov-args" argument.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7596">https://nvd.nist.gov/vuln/detail/CVE-2020-7596</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-CODECOV-543183">https://snyk.io/vuln/SNYK-JS-CODECOV-543183</a></li>
<li><a href="https://github.com/advisories/GHSA-mh2h-6j8q-x246">https://github.com/advisories/GHSA-mh2h-6j8q-x246</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh2h-6j8q-x246</uri>
        </author>
        <published>2022-05-24T17:07:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hermes-engine] Always-Incorrect Control Flow Implementation in Facebook Hermes]]></title>
        <id>https://github.com/advisories/GHSA-327c-qx3v-h673</id>
        <link href="https://github.com/advisories/GHSA-327c-qx3v-h673"/>
        <updated>2022-06-27T17:05:28.000Z</updated>
        <content type="html"><![CDATA[<p>A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1914">https://nvd.nist.gov/vuln/detail/CVE-2020-1914</a></li>
<li><a href="https://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc">https://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2020-1914">https://www.facebook.com/security/advisories/cve-2020-1914</a></li>
<li><a href="https://github.com/facebook/hermes/issues/373">https://github.com/facebook/hermes/issues/373</a></li>
<li><a href="https://github.com/advisories/GHSA-327c-qx3v-h673">https://github.com/advisories/GHSA-327c-qx3v-h673</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-327c-qx3v-h673</uri>
        </author>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hermes-engine] Out-of-bounds Read in Facebook Hermes]]></title>
        <id>https://github.com/advisories/GHSA-x4cf-6jr3-3qvp</id>
        <link href="https://github.com/advisories/GHSA-x4cf-6jr3-3qvp"/>
        <updated>2022-06-27T17:02:34.000Z</updated>
        <content type="html"><![CDATA[<p>An out-of-bounds read in the JavaScript Interpreter in Facebook Hermes prior to commit 8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0 allows attackers to cause a denial of service attack or possible further memory corruption via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1915">https://nvd.nist.gov/vuln/detail/CVE-2020-1915</a></li>
<li><a href="https://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0">https://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2020-1915">https://www.facebook.com/security/advisories/cve-2020-1915</a></li>
<li><a href="https://github.com/facebook/hermes/issues/373">https://github.com/facebook/hermes/issues/373</a></li>
<li><a href="https://github.com/advisories/GHSA-x4cf-6jr3-3qvp">https://github.com/advisories/GHSA-x4cf-6jr3-3qvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4cf-6jr3-3qvp</uri>
        </author>
        <published>2022-05-24T17:32:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsrsasign] JWS and JWT signature validation vulnerability with special characters]]></title>
        <id>https://github.com/advisories/GHSA-3fvg-4v2m-98jf</id>
        <link href="https://github.com/advisories/GHSA-3fvg-4v2m-98jf"/>
        <updated>2022-06-25T07:19:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jsrsasign supports JWS(JSON Web Signatures) and JWT(JSON Web Token) validation. However JWS or JWT signature with non Base64URL encoding special characters or number escaped characters may be validated as valid by mistake.</p>
<p>For example, even if a string of non Base64URL encoding characters such as <code>!@$%</code> or <code>\11</code> is inserted into a valid JWS or JWT signature value string, it will still be a valid JWS or JWT signature by mistake.</p>
<p>When jsrsasign's JWS or JWT validation is used in OpenID connect or OAuth2, this vulnerability will affect to authentication or authorization.</p>
<p>By our internal assessment, CVSS 3.1 score will be 7.5.
CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N</p>
<h3 id="patches">Patches</h3>
<p>Users validate JWS or JWT signatures should upgrade to 10.5.25.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Validate JWS or JWT signature if it has Base64URL and dot safe string before
executing JWS.verify() or JWS.verifyJWT() method.</p>
<h3 id="acknowledgement">ACKNOWLEDGEMENT</h3>
<p>Thanks to Adi Malyanker and Or David for this vulnerability report. Also thanks for <a href="https://snyk.io/">Snyk security team</a> for this coordination.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/kjur/jsrsasign/releases/tag/10.5.25">https://github.com/kjur/jsrsasign/releases/tag/10.5.25</a>
<a href="https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf">https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf</a>
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898</a>
<a href="https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT">https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT</a>
<a href="https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify">https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify</a>
<a href="https://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot">https://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot</a>
<a href="https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification">https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification</a>
<a href="https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification">https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf">https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898</a></li>
<li><a href="https://github.com/kjur/jsrsasign/releases/tag/10.5.25">https://github.com/kjur/jsrsasign/releases/tag/10.5.25</a></li>
<li><a href="https://github.com/advisories/GHSA-3fvg-4v2m-98jf">https://github.com/advisories/GHSA-3fvg-4v2m-98jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3fvg-4v2m-98jf</uri>
        </author>
        <published>2022-06-25T07:19:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hermes-engine] Access of Resource Using Incompatible Type in Facebook Hermes]]></title>
        <id>https://github.com/advisories/GHSA-f5x2-xv93-4p23</id>
        <link href="https://github.com/advisories/GHSA-f5x2-xv93-4p23"/>
        <updated>2022-06-24T01:24:09.000Z</updated>
        <content type="html"><![CDATA[<p>A type confusion vulnerability when resolving properties of JavaScript objects with specially-crafted prototype chains in Facebook Hermes prior to commit fe52854cdf6725c2eaa9e125995da76e6ceb27da allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1911">https://nvd.nist.gov/vuln/detail/CVE-2020-1911</a></li>
<li><a href="https://github.com/facebook/hermes/commit/fe52854cdf6725c2eaa9e125995da76e6ceb27da">https://github.com/facebook/hermes/commit/fe52854cdf6725c2eaa9e125995da76e6ceb27da</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2020-1911">https://www.facebook.com/security/advisories/cve-2020-1911</a></li>
<li><a href="https://github.com/advisories/GHSA-f5x2-xv93-4p23">https://github.com/advisories/GHSA-f5x2-xv93-4p23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5x2-xv93-4p23</uri>
        </author>
        <published>2022-05-24T17:27:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hermes-engine] Out-of-bounds Read and Out-of-bounds Write in Facebook Hermes]]></title>
        <id>https://github.com/advisories/GHSA-pf27-929j-9pmm</id>
        <link href="https://github.com/advisories/GHSA-pf27-929j-9pmm"/>
        <updated>2022-06-24T01:23:54.000Z</updated>
        <content type="html"><![CDATA[<p>An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1912">https://nvd.nist.gov/vuln/detail/CVE-2020-1912</a></li>
<li><a href="https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168">https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2020-1912">https://www.facebook.com/security/advisories/cve-2020-1912</a></li>
<li><a href="https://github.com/advisories/GHSA-pf27-929j-9pmm">https://github.com/advisories/GHSA-pf27-929j-9pmm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pf27-929j-9pmm</uri>
        </author>
        <published>2022-05-24T17:27:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hermes-engine] Signed to Unsigned Conversion Error in Facebook Hermes]]></title>
        <id>https://github.com/advisories/GHSA-gmpm-xp43-f7g6</id>
        <link href="https://github.com/advisories/GHSA-gmpm-xp43-f7g6"/>
        <updated>2022-06-24T01:23:39.000Z</updated>
        <content type="html"><![CDATA[<p>An Integer signedness error in the JavaScript Interpreter in Facebook Hermes prior to commit 2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6 allows attackers to cause a denial of service attack or a potential RCE via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1913">https://nvd.nist.gov/vuln/detail/CVE-2020-1913</a></li>
<li><a href="https://github.com/facebook/hermes/commit/2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6">https://github.com/facebook/hermes/commit/2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2020-1913">https://www.facebook.com/security/advisories/cve-2020-1913</a></li>
<li><a href="https://github.com/advisories/GHSA-gmpm-xp43-f7g6">https://github.com/advisories/GHSA-gmpm-xp43-f7g6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmpm-xp43-f7g6</uri>
        </author>
        <published>2022-05-24T17:27:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strapi] Cross-site Scripting in Strapi]]></title>
        <id>https://github.com/advisories/GHSA-mcqm-6ff4-53qx</id>
        <link href="https://github.com/advisories/GHSA-mcqm-6ff4-53qx"/>
        <updated>2022-06-24T00:53:31.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi v3.x.x versions and earlier contain a stored cross-site scripting vulnerability in file upload function. By exploiting this vulnerability, an arbitrary script may be executed on the web browser of the user who is logging in to the product with the administrative privilege.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29894">https://nvd.nist.gov/vuln/detail/CVE-2022-29894</a></li>
<li><a href="https://github.com/strapi/strapi">https://github.com/strapi/strapi</a></li>
<li><a href="https://jvn.jp/en/jp/JVN44550983/index.html">https://jvn.jp/en/jp/JVN44550983/index.html</a></li>
<li><a href="https://strapi.io/">https://strapi.io/</a></li>
<li><a href="https://github.com/advisories/GHSA-mcqm-6ff4-53qx">https://github.com/advisories/GHSA-mcqm-6ff4-53qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mcqm-6ff4-53qx</uri>
        </author>
        <published>2022-06-14T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] Insufficient Session Expiration in NocoDB]]></title>
        <id>https://github.com/advisories/GHSA-6293-2vg2-pmp5</id>
        <link href="https://github.com/advisories/GHSA-6293-2vg2-pmp5"/>
        <updated>2022-06-24T00:53:06.000Z</updated>
        <content type="html"><![CDATA[<p>Insufficient Session Expiration in GitHub repository nocodb/nocodb prior to 0.91.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2064">https://nvd.nist.gov/vuln/detail/CVE-2022-2064</a></li>
<li><a href="https://github.com/nocodb/nocodb/commit/c9b5111b25aea2781e19395a8e9107ddbd235a2b">https://github.com/nocodb/nocodb/commit/c9b5111b25aea2781e19395a8e9107ddbd235a2b</a></li>
<li><a href="https://huntr.dev/bounties/39523d51-fc5c-48b8-a082-171da79761bb">https://huntr.dev/bounties/39523d51-fc5c-48b8-a082-171da79761bb</a></li>
<li><a href="https://github.com/nocodb/nocodb/pull/2262">https://github.com/nocodb/nocodb/pull/2262</a></li>
<li><a href="https://github.com/nocodb/nocodb/pull/2338">https://github.com/nocodb/nocodb/pull/2338</a></li>
<li><a href="https://github.com/nocodb/nocodb/releases/tag/0.91.9">https://github.com/nocodb/nocodb/releases/tag/0.91.9</a></li>
<li><a href="https://github.com/advisories/GHSA-6293-2vg2-pmp5">https://github.com/advisories/GHSA-6293-2vg2-pmp5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6293-2vg2-pmp5</uri>
        </author>
        <published>2022-06-14T00:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] Improper Privilege Management in NocoDB]]></title>
        <id>https://github.com/advisories/GHSA-fq4h-m3c8-8m2v</id>
        <link href="https://github.com/advisories/GHSA-fq4h-m3c8-8m2v"/>
        <updated>2022-06-24T00:52:56.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Privilege Management in GitHub repository nocodb/nocodb prior to 0.91.8.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2063">https://nvd.nist.gov/vuln/detail/CVE-2022-2063</a></li>
<li><a href="https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2">https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2</a></li>
<li><a href="https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20">https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20</a></li>
<li><a href="https://github.com/nocodb/nocodb/pull/2262">https://github.com/nocodb/nocodb/pull/2262</a></li>
<li><a href="https://github.com/nocodb/nocodb/pull/2337">https://github.com/nocodb/nocodb/pull/2337</a></li>
<li><a href="https://github.com/advisories/GHSA-fq4h-m3c8-8m2v">https://github.com/advisories/GHSA-fq4h-m3c8-8m2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq4h-m3c8-8m2v</uri>
        </author>
        <published>2022-06-14T00:00:37.000Z</published>
    </entry>
</feed>