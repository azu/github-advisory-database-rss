<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-11-14T01:29:37.564Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[readthedocs] Read the Docs vulnerable to Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-98pf-gfh3-x3mp</id>
        <link href="https://github.com/advisories/GHSA-98pf-gfh3-x3mp"/>
        <updated>2022-11-10T16:02:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allowed a malicious user to serve arbitrary HTML files from the main application domain (readthedocs[.]org/readthedocs[.]com) by exploiting a vulnerability in the code that serves downloadable content from a project. </p>
<p>Exploiting this would have required the attacker to get a logged-in user to visit the malicious URL, which would have allowed the attacker to take control of the user's session with JavaScript (making requests to the API/site on behalf of the user). This URL would have looked something like <code>hxxps[:]//readthedocs[.]org/projects/attacker-project/downloads/html/version-with-javascript-attack/</code>.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in our 8.8.1 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/readthedocs/readthedocs.org/security/advisories/GHSA-98pf-gfh3-x3mp">https://github.com/readthedocs/readthedocs.org/security/advisories/GHSA-98pf-gfh3-x3mp</a></li>
<li><a href="https://github.com/readthedocs/readthedocs.org/commit/b0ae626acd13882170ec5888e35f3ef2e48e6ff6">https://github.com/readthedocs/readthedocs.org/commit/b0ae626acd13882170ec5888e35f3ef2e48e6ff6</a></li>
<li><a href="https://github.com/advisories/GHSA-98pf-gfh3-x3mp">https://github.com/advisories/GHSA-98pf-gfh3-x3mp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98pf-gfh3-x3mp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T16:02:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@redwoodjs/api] Redwood is vulnerable to account takeover via dbAuth "forgot-password" ]]></title>
        <id>https://github.com/advisories/GHSA-3qmc-2r76-4rqp</id>
        <link href="https://github.com/advisories/GHSA-3qmc-2r76-4rqp"/>
        <updated>2022-11-10T15:51:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="impact">Impact</h1>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>This is an API vulnerability in Redwood's [dbAuth], specifically the dbAuth forgot password feature:</p>
<ul>
<li>only projects with the dbAuth "forgot password" feature are affected</li>
<li>this vulnerability was introduced in v0.38.0</li>
</ul>
<h2 id="user-accounts-are-vulnerable-to-takeover-hijacking">User Accounts are Vulnerable to Takeover (Hijacking)</h2>
<p>A reset token for any user can be obtained given knowledge of their username or email via the forgot-password API. With the leaked reset token, a malicious user could request to reset a user's password, changing their credentials and gaining access to their account.</p>
<h2 id="how-to-determine-if-projects-have-been-attacked">How to Determine if Projects have been Attacked</h2>
<p>To determine if a project has been attacked, we recommend checking logs for suspicious activity; namely, the volume of requests to the forgot-password API using emails that don't exist. Another indication is if users inform you that they can't access their accounts.</p>
<p>If you have question or concerns, reach out via the "For More Information" section below.</p>
<h1 id="patch-releases-available">Patch Releases Available</h1>
<p><strong>The problem has been patched on the v3 and v2 release lines.</strong> Users should upgrade to <strong>v3.3.1+</strong>  or <strong>v2.2.5+</strong> respectively.</p>
<h2 id="workarounds">Workarounds</h2>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>We recommend upgrading to the Patch Releases above. If upgrading is not possible, there are several workarounds:</p>
<h3 id="manually-strip-out-resettoken-and-resettokenexpiresat-in-the-forgotpasswordhandler">Manually strip out <code>resetToken</code> and <code>resetTokenExpiresAt</code> in the <code>forgotPassword.handler()</code></h3>
<p>Users on all release lines can have their <code>forgotPassword.handler()</code> function strip out the sensitive fields manually before returning</p>
<pre><code class="language-js">handler: (user) =&gt; {
  // your code to notify/email user of the link to reset their password...

  const = { resetToken, resetTokenExpiresAt, ...rest }

  return rest
}
</code></pre>
<h3 id="use-yarn-patch-to-manually-apply-the-fix">Use <code>yarn patch</code> to manually apply the fix</h3>
<p>Users on v3 and v2 can use [<code>yarn patch</code>] to apply the fix if they're using yarn v3. See the dbAuth "forgot-password" Account Takeover Vulnerability high gist for instructions. </p>
<h3 id="disable-the-forgot-password-flow-entirely-v3-only">Disable the forgot password flow entirely v3 only</h3>
<p>Users on v3 can disable the forgot password flow entirely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp">https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp</a></li>
<li><a href="https://github.com/redwoodjs/redwood/issues/6343">https://github.com/redwoodjs/redwood/issues/6343</a></li>
<li><a href="https://github.com/redwoodjs/redwood/pull/6778">https://github.com/redwoodjs/redwood/pull/6778</a></li>
<li><a href="https://github.com/redwoodjs/redwood/releases/tag/v2.2.5">https://github.com/redwoodjs/redwood/releases/tag/v2.2.5</a></li>
<li><a href="https://github.com/redwoodjs/redwood/releases/tag/v3.3.1">https://github.com/redwoodjs/redwood/releases/tag/v3.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-3qmc-2r76-4rqp">https://github.com/advisories/GHSA-3qmc-2r76-4rqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qmc-2r76-4rqp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-10T15:51:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@redwoodjs/api] Redwood is vulnerable to account takeover via dbAuth "forgot-password" ]]></title>
        <id>https://github.com/advisories/GHSA-3qmc-2r76-4rqp</id>
        <link href="https://github.com/advisories/GHSA-3qmc-2r76-4rqp"/>
        <updated>2022-11-10T15:51:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="impact">Impact</h1>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>This is an API vulnerability in Redwood's [dbAuth], specifically the dbAuth forgot password feature:</p>
<ul>
<li>only projects with the dbAuth "forgot password" feature are affected</li>
<li>this vulnerability was introduced in v0.38.0</li>
</ul>
<h2 id="user-accounts-are-vulnerable-to-takeover-hijacking">User Accounts are Vulnerable to Takeover (Hijacking)</h2>
<p>A reset token for any user can be obtained given knowledge of their username or email via the forgot-password API. With the leaked reset token, a malicious user could request to reset a user's password, changing their credentials and gaining access to their account.</p>
<h2 id="how-to-determine-if-projects-have-been-attacked">How to Determine if Projects have been Attacked</h2>
<p>To determine if a project has been attacked, we recommend checking logs for suspicious activity; namely, the volume of requests to the forgot-password API using emails that don't exist. Another indication is if users inform you that they can't access their accounts.</p>
<p>If you have question or concerns, reach out via the "For More Information" section below.</p>
<h1 id="patch-releases-available">Patch Releases Available</h1>
<p><strong>The problem has been patched on the v3 and v2 release lines.</strong> Users should upgrade to <strong>v3.3.1+</strong>  or <strong>v2.2.5+</strong> respectively.</p>
<h2 id="workarounds">Workarounds</h2>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>We recommend upgrading to the Patch Releases above. If upgrading is not possible, there are several workarounds:</p>
<h3 id="manually-strip-out-resettoken-and-resettokenexpiresat-in-the-forgotpasswordhandler">Manually strip out <code>resetToken</code> and <code>resetTokenExpiresAt</code> in the <code>forgotPassword.handler()</code></h3>
<p>Users on all release lines can have their <code>forgotPassword.handler()</code> function strip out the sensitive fields manually before returning</p>
<pre><code class="language-js">handler: (user) =&gt; {
  // your code to notify/email user of the link to reset their password...

  const = { resetToken, resetTokenExpiresAt, ...rest }

  return rest
}
</code></pre>
<h3 id="use-yarn-patch-to-manually-apply-the-fix">Use <code>yarn patch</code> to manually apply the fix</h3>
<p>Users on v3 and v2 can use [<code>yarn patch</code>] to apply the fix if they're using yarn v3. See the dbAuth "forgot-password" Account Takeover Vulnerability high gist for instructions. </p>
<h3 id="disable-the-forgot-password-flow-entirely-v3-only">Disable the forgot password flow entirely v3 only</h3>
<p>Users on v3 can disable the forgot password flow entirely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp">https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp</a></li>
<li><a href="https://github.com/redwoodjs/redwood/issues/6343">https://github.com/redwoodjs/redwood/issues/6343</a></li>
<li><a href="https://github.com/redwoodjs/redwood/pull/6778">https://github.com/redwoodjs/redwood/pull/6778</a></li>
<li><a href="https://github.com/redwoodjs/redwood/releases/tag/v2.2.5">https://github.com/redwoodjs/redwood/releases/tag/v2.2.5</a></li>
<li><a href="https://github.com/redwoodjs/redwood/releases/tag/v3.3.1">https://github.com/redwoodjs/redwood/releases/tag/v3.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-3qmc-2r76-4rqp">https://github.com/advisories/GHSA-3qmc-2r76-4rqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qmc-2r76-4rqp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-10T15:51:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server is vulnerable to Prototype Pollution via Cloud Code Webhooks]]></title>
        <id>https://github.com/advisories/GHSA-93vw-8fm5-p2jf</id>
        <link href="https://github.com/advisories/GHSA-93vw-8fm5-p2jf"/>
        <updated>2022-11-12T05:22:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8305">https://github.com/parse-community/parse-server/pull/8305</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8306">https://github.com/parse-community/parse-server/pull/8306</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8">https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4">https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.20">https://github.com/parse-community/parse-server/releases/tag/4.10.20</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.3">https://github.com/parse-community/parse-server/releases/tag/5.3.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41879">https://nvd.nist.gov/vuln/detail/CVE-2022-41879</a></li>
<li><a href="https://github.com/advisories/GHSA-93vw-8fm5-p2jf">https://github.com/advisories/GHSA-93vw-8fm5-p2jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93vw-8fm5-p2jf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-10T13:02:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server is vulnerable to Prototype Pollution via Cloud Code Webhooks]]></title>
        <id>https://github.com/advisories/GHSA-93vw-8fm5-p2jf</id>
        <link href="https://github.com/advisories/GHSA-93vw-8fm5-p2jf"/>
        <updated>2022-11-12T05:22:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8305">https://github.com/parse-community/parse-server/pull/8305</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8306">https://github.com/parse-community/parse-server/pull/8306</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8">https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4">https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.20">https://github.com/parse-community/parse-server/releases/tag/4.10.20</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.3">https://github.com/parse-community/parse-server/releases/tag/5.3.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41879">https://nvd.nist.gov/vuln/detail/CVE-2022-41879</a></li>
<li><a href="https://github.com/advisories/GHSA-93vw-8fm5-p2jf">https://github.com/advisories/GHSA-93vw-8fm5-p2jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93vw-8fm5-p2jf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-10T13:02:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Exfiltration of hashed SMB credentials on Windows via file:// redirect]]></title>
        <id>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</id>
        <link href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v"/>
        <updated>2022-11-10T12:38:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as <code>file://some.website.com/</code>, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:</p>
<ul>
<li>21.0.0-beta.1</li>
<li>20.0.1</li>
<li>19.0.11</li>
<li>18.3.7</li>
</ul>
<p>We recommend all apps upgrade to the latest stable version of Electron.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the <code>WebContents.on('will-redirect')</code> event, for all WebContents:</p>
<pre><code class="language-js">app.on('web-contents-created', (e, webContents) =&gt; {
  webContents.on('will-redirect', (e, url) =&gt; {
    if (/^file:/.test(url)) e.preventDefault()
  })
})
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="credit">Credit</h3>
<p>Thanks to user @coolcoolnoworries for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36077">https://nvd.nist.gov/vuln/detail/CVE-2022-36077</a></li>
<li><a href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/advisories/GHSA-p2jh-44qj-pf2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T12:38:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Exfiltration of hashed SMB credentials on Windows via file:// redirect]]></title>
        <id>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</id>
        <link href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v"/>
        <updated>2022-11-10T12:38:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as <code>file://some.website.com/</code>, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:</p>
<ul>
<li>21.0.0-beta.1</li>
<li>20.0.1</li>
<li>19.0.11</li>
<li>18.3.7</li>
</ul>
<p>We recommend all apps upgrade to the latest stable version of Electron.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the <code>WebContents.on('will-redirect')</code> event, for all WebContents:</p>
<pre><code class="language-js">app.on('web-contents-created', (e, webContents) =&gt; {
  webContents.on('will-redirect', (e, url) =&gt; {
    if (/^file:/.test(url)) e.preventDefault()
  })
})
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="credit">Credit</h3>
<p>Thanks to user @coolcoolnoworries for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36077">https://nvd.nist.gov/vuln/detail/CVE-2022-36077</a></li>
<li><a href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/advisories/GHSA-p2jh-44qj-pf2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T12:38:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Exfiltration of hashed SMB credentials on Windows via file:// redirect]]></title>
        <id>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</id>
        <link href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v"/>
        <updated>2022-11-10T12:38:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as <code>file://some.website.com/</code>, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:</p>
<ul>
<li>21.0.0-beta.1</li>
<li>20.0.1</li>
<li>19.0.11</li>
<li>18.3.7</li>
</ul>
<p>We recommend all apps upgrade to the latest stable version of Electron.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the <code>WebContents.on('will-redirect')</code> event, for all WebContents:</p>
<pre><code class="language-js">app.on('web-contents-created', (e, webContents) =&gt; {
  webContents.on('will-redirect', (e, url) =&gt; {
    if (/^file:/.test(url)) e.preventDefault()
  })
})
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@electronjs.org">security@electronjs.org</a>.</p>
<h3 id="credit">Credit</h3>
<p>Thanks to user @coolcoolnoworries for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36077">https://nvd.nist.gov/vuln/detail/CVE-2022-36077</a></li>
<li><a href="https://github.com/advisories/GHSA-p2jh-44qj-pf2v">https://github.com/advisories/GHSA-p2jh-44qj-pf2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2jh-44qj-pf2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T12:38:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</id>
        <link href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq"/>
        <updated>2022-11-09T21:50:30.000Z</updated>
        <content type="html"><![CDATA[<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>
<p>Example:</p>
<pre><code class="language-js">const decoder = new Decoder();

decoder.on(\"decoded\", (packet) =&gt; {
 console.log(packet.data); // prints [ 'hello', [Function: splice] ]
 })

decoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');
decoder.add(Buffer.from(\"world\"));
</code></pre>
<p>This bubbles up in the <code>socket.io</code> package:</p>
<pre><code class="language-js">io.on(\"connection\", (socket) =&gt; {
 socket.on(\"hello\", (val) =&gt; {
 // here, \"val\" could be a reference instead of what the user expected
 });
 });
</code></pre>
<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>
<p>This should be fixed by:</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>
</ul>
<h3 id="dependency-analysis-for-the-socketio-package">Dependency analysis for the <code>socket.io</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="dependency-analysis-for-the-socketio-client-package">Dependency analysis for the <code>socket.io-client</code> package</h3>
<table>
<thead>
<tr>
<th><code>socket.io-client</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Covered?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.0...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>4.3.0...4.4.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188">ref</a>)</td>
<td>No, but the impact is very limited</td>
</tr>
<tr>
<td><code>3.1.0...4.2.0</code></td>
<td><code>~4.0.4</code> (<a href="https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.5</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a">ref</a>)</td>
<td>Yes :heavy_check_mark:</td>
</tr>
</tbody></table>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2421">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>
<li><a href="https://csirt.divd.nl/cases/DIVD-2022-00045">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>
<li><a href="https://csirt.divd.nl/cves/CVE-2022-2421">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14">https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983">https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983</a></li>
<li><a href="https://github.com/advisories/GHSA-qm95-pgcg-qqfq">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm95-pgcg-qqfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T12:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to Prototype Pollution via Cloud Code Webhooks or Cloud Code Triggers]]></title>
        <id>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</id>
        <link href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx"/>
        <updated>2022-11-12T05:23:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Keywords that are specified in the Parse Server option <code>requestKeywordDenylist</code> can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Configure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8301">https://github.com/parse-community/parse-server/pull/8301</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8302">https://github.com/parse-community/parse-server/pull/8302</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3">https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f">https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41878">https://nvd.nist.gov/vuln/detail/CVE-2022-41878</a></li>
<li><a href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/advisories/GHSA-xprv-wvh7-qqqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-09T20:47:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server vulnerable to Prototype Pollution via Cloud Code Webhooks or Cloud Code Triggers]]></title>
        <id>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</id>
        <link href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx"/>
        <updated>2022-11-12T05:23:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Keywords that are specified in the Parse Server option <code>requestKeywordDenylist</code> can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the <code>requestKeywordDenylist</code> option.</p>
<h3 id="patches">Patches</h3>
<p>Improved keyword detection.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Configure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8301">https://github.com/parse-community/parse-server/pull/8301</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8302">https://github.com/parse-community/parse-server/pull/8302</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3">https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f">https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41878">https://nvd.nist.gov/vuln/detail/CVE-2022-41878</a></li>
<li><a href="https://github.com/advisories/GHSA-xprv-wvh7-qqqx">https://github.com/advisories/GHSA-xprv-wvh7-qqqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xprv-wvh7-qqqx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-09T20:47:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[octocat.js] Withdrawn: Octocat.js vulnerable to code injection]]></title>
        <id>https://github.com/advisories/GHSA-r4jg-5v89-9v62</id>
        <link href="https://github.com/advisories/GHSA-r4jg-5v89-9v62"/>
        <updated>2022-11-09T22:35:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn">Withdrawn</h2>
<p>This advisory has been withdrawn because it is a test.</p>
<h2 id="original-description">Original Description</h2>
<h3 id="impact">Impact</h3>
<p>Users can include their own images for accessories via provided URLs. These URLs are not validated and can result in execution of injected code.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was fixed in version 1.2 of octocat.js</p>
<h3 id="workarounds">Workarounds</h3>
<p>Directly exposing rendered images to a website can introduce the vulnerability to users. To avoid, writing an image to disk then using that image in an image element in HTML mitigates the risk.</p>
<h3 id="references">References</h3>
<p>To render the file correctly, see documentation at <code>readme.md</code></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/octocademy/octocat.js/issues">the octo.js repository</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/octocademy/octocat.js/security/advisories/GHSA-r4jg-5v89-9v62">https://github.com/octocademy/octocat.js/security/advisories/GHSA-r4jg-5v89-9v62</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39390">https://nvd.nist.gov/vuln/detail/CVE-2022-39390</a></li>
<li><a href="https://github.com/advisories/GHSA-r4jg-5v89-9v62">https://github.com/advisories/GHSA-r4jg-5v89-9v62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4jg-5v89-9v62</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-08T20:48:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-prm5-8g2m-24gg</id>
        <link href="https://github.com/advisories/GHSA-prm5-8g2m-24gg"/>
        <updated>2022-11-12T05:23:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8295">https://github.com/parse-community/parse-server/pull/8295</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8296">https://github.com/parse-community/parse-server/pull/8296</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.18">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.1">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39396">https://nvd.nist.gov/vuln/detail/CVE-2022-39396</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prm5-8g2m-24gg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-08T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-prm5-8g2m-24gg</id>
        <link href="https://github.com/advisories/GHSA-prm5-8g2m-24gg"/>
        <updated>2022-11-12T05:23:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>
<h3 id="patches">Patches</h3>
<p>Prevent prototype pollution in MongoDB database adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable remote code execution through the MongoDB BSON parser.</p>
<h3 id="collaborators">Collaborators</h3>
<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8295">https://github.com/parse-community/parse-server/pull/8295</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8296">https://github.com/parse-community/parse-server/pull/8296</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.18">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.3.1">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39396">https://nvd.nist.gov/vuln/detail/CVE-2022-39396</a></li>
<li><a href="https://github.com/advisories/GHSA-prm5-8g2m-24gg">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prm5-8g2m-24gg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-08T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fastest-json-copy] fastest-json-copy vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-p5g9-rjcf-95vj</id>
        <link href="https://github.com/advisories/GHSA-p5g9-rjcf-95vj"/>
        <updated>2022-11-08T14:49:19.000Z</updated>
        <content type="html"><![CDATA[<p>fastest-json-copy version 1.0.1 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41714">https://nvd.nist.gov/vuln/detail/CVE-2022-41714</a></li>
<li><a href="https://fluidattacks.com/advisories/guetta/">https://fluidattacks.com/advisories/guetta/</a></li>
<li><a href="https://github.com/streamich/fastest-json-copy">https://github.com/streamich/fastest-json-copy</a></li>
<li><a href="https://github.com/advisories/GHSA-p5g9-rjcf-95vj">https://github.com/advisories/GHSA-p5g9-rjcf-95vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p5g9-rjcf-95vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-parse-json] deep-parse-json vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</id>
        <link href="https://github.com/advisories/GHSA-ff9j-pwxg-q5p2"/>
        <updated>2022-11-08T14:49:06.000Z</updated>
        <content type="html"><![CDATA[<p>deep-parse-json version 1.0.2 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42743">https://nvd.nist.gov/vuln/detail/CVE-2022-42743</a></li>
<li><a href="https://fluidattacks.com/advisories/buuren/">https://fluidattacks.com/advisories/buuren/</a></li>
<li><a href="https://github.com/sibu-github/deep-parse-json/issues/6">https://github.com/sibu-github/deep-parse-json/issues/6</a></li>
<li><a href="https://github.com/advisories/GHSA-ff9j-pwxg-q5p2">https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ff9j-pwxg-q5p2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-object-diff] deep-object-diff vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-653v-rqx9-j85p</id>
        <link href="https://github.com/advisories/GHSA-653v-rqx9-j85p"/>
        <updated>2022-11-08T14:48:52.000Z</updated>
        <content type="html"><![CDATA[<p>deep-object-diff version 1.1.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41713">https://nvd.nist.gov/vuln/detail/CVE-2022-41713</a></li>
<li><a href="https://fluidattacks.com/advisories/heldens/">https://fluidattacks.com/advisories/heldens/</a></li>
<li><a href="https://github.com/mattphillips/deep-object-diff/issues/85">https://github.com/mattphillips/deep-object-diff/issues/85</a></li>
<li><a href="https://github.com/advisories/GHSA-653v-rqx9-j85p">https://github.com/advisories/GHSA-653v-rqx9-j85p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-653v-rqx9-j85p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-04T12:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[loader-utils] Prototype pollution in webpack loader-utils]]></title>
        <id>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</id>
        <link href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq"/>
        <updated>2022-11-07T22:14:16.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37601">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>
<li><a href="https://github.com/webpack/loader-utils/issues/212">https://github.com/webpack/loader-utils/issues/212</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>
<li><a href="https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v2.0.3">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/217">https://github.com/webpack/loader-utils/pull/217</a></li>
<li><a href="https://github.com/webpack/loader-utils/pull/220">https://github.com/webpack/loader-utils/pull/220</a></li>
<li><a href="https://github.com/webpack/loader-utils/releases/tag/v1.4.1">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-76p3-8jx3-jpfq">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p3-8jx3-jpfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T12:00:28.000Z</published>
    </entry>
</feed>