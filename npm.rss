<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-05-23T00:23:30.099Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[jsgui-lang-essentials] Prototype Pollution in jsgui-lang-essentials]]></title>
        <id>https://github.com/advisories/GHSA-p3pg-64pv-v7jg</id>
        <link href="https://github.com/advisories/GHSA-p3pg-64pv-v7jg"/>
        <updated>2022-05-20T20:48:38.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package <code>jsgui-lang-essentials</code> are vulnerable to Prototype Pollution due to allowing all <code>Object</code> attributes to be altered, including their magical attributes such as <code>proto</code>, <code>constructor</code> and <code>prototype</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25301">https://nvd.nist.gov/vuln/detail/CVE-2022-25301</a></li>
<li><a href="https://github.com/metabench/jsgui-lang-essentials/issues/1">https://github.com/metabench/jsgui-lang-essentials/issues/1</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JSGUILANGESSENTIALS-2316897">https://snyk.io/vuln/SNYK-JS-JSGUILANGESSENTIALS-2316897</a></li>
<li><a href="https://github.com/advisories/GHSA-p3pg-64pv-v7jg">https://github.com/advisories/GHSA-p3pg-64pv-v7jg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p3pg-64pv-v7jg</uri>
        </author>
        <published>2022-05-03T00:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dset] Prototype Pollution in dset]]></title>
        <id>https://github.com/advisories/GHSA-23wx-cgxq-vpwx</id>
        <link href="https://github.com/advisories/GHSA-23wx-cgxq-vpwx"/>
        <updated>2022-05-20T20:13:33.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of <code>dset</code> prior to 3.1.2 are vulnerable to Prototype Pollution via <code>dset/merge</code> mode, as the <code>dset</code> function checks for prototype pollution by validating if the top-level path contains <code>__proto__</code>, <code>constructor</code> or <code>prototype</code>. By crafting a malicious object, it is possible to bypass this check and achieve prototype pollution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25645">https://nvd.nist.gov/vuln/detail/CVE-2022-25645</a></li>
<li><a href="https://github.com/lukeed/dset/blob/master/src/merge.js%23L9">https://github.com/lukeed/dset/blob/master/src/merge.js%23L9</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2431974">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2431974</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-DSET-2330881">https://snyk.io/vuln/SNYK-JS-DSET-2330881</a></li>
<li><a href="https://github.com/advisories/GHSA-23wx-cgxq-vpwx">https://github.com/advisories/GHSA-23wx-cgxq-vpwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23wx-cgxq-vpwx</uri>
        </author>
        <published>2022-05-03T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@shopify/hydrogen] Potential Cross-site Scripting vulnerability in Hydrogen]]></title>
        <id>https://github.com/advisories/GHSA-6j22-wv8g-894f</id>
        <link href="https://github.com/advisories/GHSA-6j22-wv8g-894f"/>
        <updated>2022-05-19T20:29:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. </p>
<h3 id="patches">Patches</h3>
<p>All Hydrogen users should upgrade their project to v0.19.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no current workaround, and users should update as soon as possible.</p>
<p>Additionally, the Content Security Policy is not an effective mitigation for this vulnerability. </p>
<h3 id="references">References</h3>
<p>GitHub: <a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">Hydrogen v0.19.0</a>
Fix PR: <a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Shopify/hydrogen/issues/new/choose">Shopify/hydrogen</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f">https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29230">https://nvd.nist.gov/vuln/detail/CVE-2022-29230</a></li>
<li><a href="https://github.com/Shopify/hydrogen/pull/1272">https://github.com/Shopify/hydrogen/pull/1272</a></li>
<li><a href="https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0">https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6j22-wv8g-894f">https://github.com/advisories/GHSA-6j22-wv8g-894f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j22-wv8g-894f</uri>
        </author>
        <published>2022-05-19T20:29:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Insecure password handling vulnerability in Strapi]]></title>
        <id>https://github.com/advisories/GHSA-85vg-grr5-pw42</id>
        <link href="https://github.com/advisories/GHSA-85vg-grr5-pw42"/>
        <updated>2022-05-18T19:30:00.000Z</updated>
        <content type="html"><![CDATA[<p>Storing passwords in a recoverable format in the DOCUMENTATION plugin component of Strapi before 3.6.9 and 4.x before 4.1.5 allows an attacker to access a victim's HTTP request. From this, the attacker can get the victim's cookie, base64 decode it, and obtain a cleartext password, leading to getting API documentation for further API attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-46440">https://nvd.nist.gov/vuln/detail/CVE-2021-46440</a></li>
<li><a href="https://github.com/strapi/strapi/pull/12246">https://github.com/strapi/strapi/pull/12246</a></li>
<li><a href="https://hub.docker.com/r/strapi/strapi">https://hub.docker.com/r/strapi/strapi</a></li>
<li><a href="https://strapi.io/">https://strapi.io/</a></li>
<li><a href="http://packetstormsecurity.com/files/166915/Strapi-3.6.8-Password-Disclosure-Insecure-Handling.html">http://packetstormsecurity.com/files/166915/Strapi-3.6.8-Password-Disclosure-Insecure-Handling.html</a></li>
<li><a href="https://github.com/advisories/GHSA-85vg-grr5-pw42">https://github.com/advisories/GHSA-85vg-grr5-pw42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85vg-grr5-pw42</uri>
        </author>
        <published>2022-05-04T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strapi] Insecure password handling vulnerability in Strapi]]></title>
        <id>https://github.com/advisories/GHSA-85vg-grr5-pw42</id>
        <link href="https://github.com/advisories/GHSA-85vg-grr5-pw42"/>
        <updated>2022-05-18T19:30:00.000Z</updated>
        <content type="html"><![CDATA[<p>Storing passwords in a recoverable format in the DOCUMENTATION plugin component of Strapi before 3.6.9 and 4.x before 4.1.5 allows an attacker to access a victim's HTTP request. From this, the attacker can get the victim's cookie, base64 decode it, and obtain a cleartext password, leading to getting API documentation for further API attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-46440">https://nvd.nist.gov/vuln/detail/CVE-2021-46440</a></li>
<li><a href="https://github.com/strapi/strapi/pull/12246">https://github.com/strapi/strapi/pull/12246</a></li>
<li><a href="https://hub.docker.com/r/strapi/strapi">https://hub.docker.com/r/strapi/strapi</a></li>
<li><a href="https://strapi.io/">https://strapi.io/</a></li>
<li><a href="http://packetstormsecurity.com/files/166915/Strapi-3.6.8-Password-Disclosure-Insecure-Handling.html">http://packetstormsecurity.com/files/166915/Strapi-3.6.8-Password-Disclosure-Insecure-Handling.html</a></li>
<li><a href="https://github.com/advisories/GHSA-85vg-grr5-pw42">https://github.com/advisories/GHSA-85vg-grr5-pw42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85vg-grr5-pw42</uri>
        </author>
        <published>2022-05-04T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-org-irc] Improper handling of multiline messages in node-irc]]></title>
        <id>https://github.com/advisories/GHSA-52rh-5rpj-c3w6</id>
        <link href="https://github.com/advisories/GHSA-52rh-5rpj-c3w6"/>
        <updated>2022-05-11T10:55:58.000Z</updated>
        <content type="html"><![CDATA[<p>node-irc is a socket wrapper for the IRC protocol that extends Node.js' EventEmitter. The vulnerability allows an attacker to manipulate a Matrix user into executing IRC commands by having them reply to a maliciously crafted message. Incorrect handling of a CR character allowed for making part of the message be sent to the IRC server verbatim rather than as a message to the channel.
The vulnerability has been patched in node-irc version 1.2.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/node-irc/security/advisories/GHSA-52rh-5rpj-c3w6">https://github.com/matrix-org/node-irc/security/advisories/GHSA-52rh-5rpj-c3w6</a></li>
<li><a href="https://matrix.org/blog/2022/05/04/0-34-0-security-release-for-matrix-appservice-irc-high-severity">https://matrix.org/blog/2022/05/04/0-34-0-security-release-for-matrix-appservice-irc-high-severity</a></li>
<li><a href="https://github.com/matrix-org/node-irc/commit/2976c856df37660a9d664e94c857c796de2e34f7">https://github.com/matrix-org/node-irc/commit/2976c856df37660a9d664e94c857c796de2e34f7</a></li>
<li><a href="https://github.com/matrix-org/node-irc/commit/e3eb9c15f8240e9c92365f5ffc3944469229771b">https://github.com/matrix-org/node-irc/commit/e3eb9c15f8240e9c92365f5ffc3944469229771b</a></li>
<li><a href="https://github.com/advisories/GHSA-52rh-5rpj-c3w6">https://github.com/advisories/GHSA-52rh-5rpj-c3w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52rh-5rpj-c3w6</uri>
        </author>
        <published>2022-05-05T16:00:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[angular] angular vulnerable to regular expression denial of service (ReDoS)]]></title>
        <id>https://github.com/advisories/GHSA-m2h2-264f-f486</id>
        <link href="https://github.com/advisories/GHSA-m2h2-264f-f486"/>
        <updated>2022-05-04T20:12:03.000Z</updated>
        <content type="html"><![CDATA[<p>AngularJS lets users write client-side web applications. The package angular after 1.7.0 is vulnerable to Regular Expression Denial of Service (ReDoS) by providing a custom locale rule that makes it possible to assign the parameter in posPre: ' '.repeat() of NUMBER_FORMATS.PATTERNS[1].posPre with a very high value.</p>
<p><strong>Note:</strong></p>
<ol>
<li>This package has been deprecated and is no longer maintained.</li>
<li>The vulnerable versions are 1.7.0 and higher.<h3 id="references">References</h3>
</li>
</ol>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25844">https://nvd.nist.gov/vuln/detail/CVE-2022-25844</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-2772736">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-2772736</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-2772738">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-2772738</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2772737">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2772737</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-ANGULAR-2772735">https://snyk.io/vuln/SNYK-JS-ANGULAR-2772735</a></li>
<li><a href="https://stackblitz.com/edit/angularjs-material-blank-zvtdvb">https://stackblitz.com/edit/angularjs-material-blank-zvtdvb</a></li>
<li><a href="https://github.com/advisories/GHSA-m2h2-264f-f486">https://github.com/advisories/GHSA-m2h2-264f-f486</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m2h2-264f-f486</uri>
        </author>
        <published>2022-05-03T00:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass and denial of service (DoS) vulnerabilities in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-qf8x-vqjv-92gr</id>
        <link href="https://github.com/advisories/GHSA-qf8x-vqjv-92gr"/>
        <updated>2022-05-13T18:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Weak validation of the Apple certificate URL in the Apple Game Center authentication adapter allows to bypass authentication and makes the server vulnerable to DoS attacks. The vulnerability has been fixed by improving the URL validation and adding additional checks of the resource the URL points to before downloading it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-qf8x-vqjv-92gr">https://github.com/parse-community/parse-server/security/advisories/GHSA-qf8x-vqjv-92gr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24901">https://nvd.nist.gov/vuln/detail/CVE-2022-24901</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/af4a0417a9f3c1e99b3793806b4b18e04d9fa999">https://github.com/parse-community/parse-server/commit/af4a0417a9f3c1e99b3793806b4b18e04d9fa999</a></li>
<li><a href="https://github.com/advisories/GHSA-qf8x-vqjv-92gr">https://github.com/advisories/GHSA-qf8x-vqjv-92gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qf8x-vqjv-92gr</uri>
        </author>
        <published>2022-05-04T18:59:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Authentication bypass and denial of service (DoS) vulnerabilities in Apple Game Center auth adapter ]]></title>
        <id>https://github.com/advisories/GHSA-qf8x-vqjv-92gr</id>
        <link href="https://github.com/advisories/GHSA-qf8x-vqjv-92gr"/>
        <updated>2022-05-13T18:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Weak validation of the Apple certificate URL in the Apple Game Center authentication adapter allows to bypass authentication and makes the server vulnerable to DoS attacks. The vulnerability has been fixed by improving the URL validation and adding additional checks of the resource the URL points to before downloading it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-qf8x-vqjv-92gr">https://github.com/parse-community/parse-server/security/advisories/GHSA-qf8x-vqjv-92gr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24901">https://nvd.nist.gov/vuln/detail/CVE-2022-24901</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/af4a0417a9f3c1e99b3793806b4b18e04d9fa999">https://github.com/parse-community/parse-server/commit/af4a0417a9f3c1e99b3793806b4b18e04d9fa999</a></li>
<li><a href="https://github.com/advisories/GHSA-qf8x-vqjv-92gr">https://github.com/advisories/GHSA-qf8x-vqjv-92gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qf8x-vqjv-92gr</uri>
        </author>
        <published>2022-05-04T18:59:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libxmljs] Denial of service vulnerability exists in libxmljs]]></title>
        <id>https://github.com/advisories/GHSA-773h-w45w-f2f9</id>
        <link href="https://github.com/advisories/GHSA-773h-w45w-f2f9"/>
        <updated>2022-05-04T14:48:04.000Z</updated>
        <content type="html"><![CDATA[<p>libxmljs provides libxml bindings for v8 javascript engine. This affects all versions of package libxmljs. When invoking the libxmljs.parseXml function with a non-buffer argument the V8 code will attempt invoking the .toString method of the argument. If the argument's toString value is not a Function object V8 will crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21144">https://nvd.nist.gov/vuln/detail/CVE-2022-21144</a></li>
<li><a href="https://github.com/libxmljs/libxmljs/pull/594">https://github.com/libxmljs/libxmljs/pull/594</a></li>
<li><a href="https://github.com/libxmljs/libxmljs/commit/2501807bde9b38cfaed06d1e140487516d91379d">https://github.com/libxmljs/libxmljs/commit/2501807bde9b38cfaed06d1e140487516d91379d</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LIBXMLJS-2348756">https://snyk.io/vuln/SNYK-JS-LIBXMLJS-2348756</a></li>
<li><a href="https://github.com/advisories/GHSA-773h-w45w-f2f9">https://github.com/advisories/GHSA-773h-w45w-f2f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-773h-w45w-f2f9</uri>
        </author>
        <published>2022-05-03T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[materialize-css] materialize-css vulnerable to cross-site Scripting (XSS) due to improper escape of user input]]></title>
        <id>https://github.com/advisories/GHSA-7jvx-f994-rfw2</id>
        <link href="https://github.com/advisories/GHSA-7jvx-f994-rfw2"/>
        <updated>2022-05-03T21:09:13.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package materialize-css are vulnerable to Cross-site Scripting (XSS) due to improper escape of user input (such as &lt;not-a-tag /&gt;) that is being parsed as HTML/JavaScript, and inserted into the Document Object Model (DOM). This vulnerability can be exploited when the user-input is provided to the autocomplete component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25349">https://nvd.nist.gov/vuln/detail/CVE-2022-25349</a></li>
<li><a href="https://github.com/Dogfalo/materialize/blob/v1-dev/js/autocomplete.js%23L285%20">https://github.com/Dogfalo/materialize/blob/v1-dev/js/autocomplete.js%23L285%20</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2766498">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2766498</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MATERIALIZECSS-2324800">https://snyk.io/vuln/SNYK-JS-MATERIALIZECSS-2324800</a></li>
<li><a href="https://github.com/advisories/GHSA-7jvx-f994-rfw2">https://github.com/advisories/GHSA-7jvx-f994-rfw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jvx-f994-rfw2</uri>
        </author>
        <published>2022-05-03T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cross-fetch] Incorrect Authorization in cross-fetch]]></title>
        <id>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</id>
        <link href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8"/>
        <updated>2022-05-03T17:48:17.000Z</updated>
        <content type="html"><![CDATA[<p>When fetching a remote url with Cookie if it get Location response header then it will follow that url and try to fetch that url with provided cookie . So cookie is leaked here to thirdparty.
Ex: you try to fetch example.com with cookie and if it get redirect url to attacker.com then it fetch that redirect url with provided cookie .</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1365">https://nvd.nist.gov/vuln/detail/CVE-2022-1365</a></li>
<li><a href="https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a">https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a</a></li>
<li><a href="https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac">https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac</a></li>
<li><a href="https://github.com/lquixada/cross-fetch/pull/135">https://github.com/lquixada/cross-fetch/pull/135</a></li>
<li><a href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8">https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</uri>
        </author>
        <published>2022-04-17T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cross-fetch] Incorrect Authorization in cross-fetch]]></title>
        <id>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</id>
        <link href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8"/>
        <updated>2022-05-03T17:48:17.000Z</updated>
        <content type="html"><![CDATA[<p>When fetching a remote url with Cookie if it get Location response header then it will follow that url and try to fetch that url with provided cookie . So cookie is leaked here to thirdparty.
Ex: you try to fetch example.com with cookie and if it get redirect url to attacker.com then it fetch that redirect url with provided cookie .</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1365">https://nvd.nist.gov/vuln/detail/CVE-2022-1365</a></li>
<li><a href="https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a">https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a</a></li>
<li><a href="https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac">https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac</a></li>
<li><a href="https://github.com/lquixada/cross-fetch/pull/135">https://github.com/lquixada/cross-fetch/pull/135</a></li>
<li><a href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8">https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</uri>
        </author>
        <published>2022-04-17T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@yaireo/tagify] tagify can pass a malicious placeholder to initiate the cross-site scripting (XSS) payload]]></title>
        <id>https://github.com/advisories/GHSA-pxpf-v376-7xx5</id>
        <link href="https://github.com/advisories/GHSA-pxpf-v376-7xx5"/>
        <updated>2022-05-03T04:55:33.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package @yaireo/tagify before 4.9.8. The package is used for rendering UI components inside the input or text fields, and an attacker can pass a malicious placeholder value to it to fire the cross-site scripting (XSS) payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25854">https://nvd.nist.gov/vuln/detail/CVE-2022-25854</a></li>
<li><a href="https://github.com/yairEO/tagify/issues/988">https://github.com/yairEO/tagify/issues/988</a></li>
<li><a href="https://github.com/yairEO/tagify/commit/198c0451fad188390390395ccfc84ab371def4c7">https://github.com/yairEO/tagify/commit/198c0451fad188390390395ccfc84ab371def4c7</a></li>
<li><a href="https://github.com/yairEO/tagify/releases/tag/v4.9.8">https://github.com/yairEO/tagify/releases/tag/v4.9.8</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-YAIREOTAGIFY-2404358">https://snyk.io/vuln/SNYK-JS-YAIREOTAGIFY-2404358</a></li>
<li><a href="https://github.com/advisories/GHSA-pxpf-v376-7xx5">https://github.com/advisories/GHSA-pxpf-v376-7xx5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pxpf-v376-7xx5</uri>
        </author>
        <published>2022-04-30T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keycloak-js] High severity vulnerability that affects keycloak-connect and keycloak-js]]></title>
        <id>https://github.com/advisories/GHSA-mw35-24gh-f82w</id>
        <link href="https://github.com/advisories/GHSA-mw35-24gh-f82w"/>
        <updated>2022-05-02T20:40:47.000Z</updated>
        <content type="html"><![CDATA[<p>It was found that the Keycloak Node.js adapter 2.5 - 3.0 did not handle invalid tokens correctly.  An attacker could use this flaw to bypass authentication and gain access to restricted information, or to possibly conduct further attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7474">https://nvd.nist.gov/vuln/detail/CVE-2017-7474</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1445271">https://bugzilla.redhat.com/show_bug.cgi?id=1445271</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-1203.html">http://rhn.redhat.com/errata/RHSA-2017-1203.html</a></li>
<li><a href="https://github.com/advisories/GHSA-mw35-24gh-f82w">https://github.com/advisories/GHSA-mw35-24gh-f82w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mw35-24gh-f82w</uri>
        </author>
        <published>2017-11-15T20:41:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keycloak-connect] High severity vulnerability that affects keycloak-connect and keycloak-js]]></title>
        <id>https://github.com/advisories/GHSA-mw35-24gh-f82w</id>
        <link href="https://github.com/advisories/GHSA-mw35-24gh-f82w"/>
        <updated>2022-05-02T20:40:47.000Z</updated>
        <content type="html"><![CDATA[<p>It was found that the Keycloak Node.js adapter 2.5 - 3.0 did not handle invalid tokens correctly.  An attacker could use this flaw to bypass authentication and gain access to restricted information, or to possibly conduct further attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7474">https://nvd.nist.gov/vuln/detail/CVE-2017-7474</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1445271">https://bugzilla.redhat.com/show_bug.cgi?id=1445271</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-1203.html">http://rhn.redhat.com/errata/RHSA-2017-1203.html</a></li>
<li><a href="https://github.com/advisories/GHSA-mw35-24gh-f82w">https://github.com/advisories/GHSA-mw35-24gh-f82w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mw35-24gh-f82w</uri>
        </author>
        <published>2017-11-15T20:41:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Open Redirect in Next.js]]></title>
        <id>https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</id>
        <link href="https://github.com/advisories/GHSA-vxf5-wxwp-m7g9"/>
        <updated>2022-04-28T20:32:19.000Z</updated>
        <content type="html"><![CDATA[<p>Next.js is an open source website development framework to be used with the React library. In affected versions specially encoded paths could be used when <code>pages/_error.js</code> was statically generated, allowing an open redirect to occur to an external site. In general, this redirect does not directly harm users although it can allow for phishing attacks by redirecting to an attacker's domain from a trusted domain.</p>
<h3 id="impact">Impact</h3>
<ul>
<li><strong>Affected:</strong> Users of Next.js between <code>10.0.5</code> and <code>10.2.0</code></li>
<li><strong>Affected:</strong> Users of Next.js between <code>11.0.0</code> and <code>11.0.1</code> using <code>pages/_error.js</code> without <code>getInitialProps</code></li>
<li><strong>Affected:</strong> Users of Next.js between <code>11.0.0</code> and <code>11.0.1</code> using <code>pages/_error.js</code> and <code>next export</code></li>
<li><strong>Not affected</strong>: Deployments on Vercel (<a href="https://vercel.com">vercel.com</a>) are not affected</li>
<li><strong>Not affected:</strong> Deployments <strong>with</strong> <code>pages/404.js</code></li>
<li>Note that versions prior to 0.9.9 package <code>next</code> npm package hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</li>
</ul>
<p>We recommend upgrading to the latest version of Next.js to improve the overall security of your application.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/vercel/next.js/releases/tag/v11.1.0">https://github.com/vercel/next.js/releases/tag/v11.1.0</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9">https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37699">https://nvd.nist.gov/vuln/detail/CVE-2021-37699</a></li>
<li><a href="https://github.com/vercel/next.js/releases/tag/v11.1.0">https://github.com/vercel/next.js/releases/tag/v11.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-vxf5-wxwp-m7g9">https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</uri>
        </author>
        <published>2021-08-12T14:51:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sqlite3] Denial-of-Service when binding invalid parameters in sqlite3]]></title>
        <id>https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</id>
        <link href="https://github.com/advisories/GHSA-9qrh-qjmc-5w2p"/>
        <updated>2022-05-03T02:24:26.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of sqlite3 will experience a fatal error when supplying a specific object in the parameter array. This error causes the application to crash and could not be caught. Users of <code>sqlite3</code> v5.0.0, v5.0.1 and v5.0.2 are affected by this. This issue is fixed in v5.0.3. All users are recommended to upgrade to v5.0.3 or later. Ensure there is sufficient sanitization in the parent application to protect against invalid values being supplied to binding parameters as a workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-9qrh-qjmc-5w2p">https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-9qrh-qjmc-5w2p</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/issues/1440">https://github.com/TryGhost/node-sqlite3/issues/1440</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/issues/1449">https://github.com/TryGhost/node-sqlite3/issues/1449</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a">https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645">https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21227">https://nvd.nist.gov/vuln/detail/CVE-2022-21227</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2805470">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2805470</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SQLITE3-2388645">https://snyk.io/vuln/SNYK-JS-SQLITE3-2388645</a></li>
<li><a href="https://github.com/advisories/GHSA-9qrh-qjmc-5w2p">https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</uri>
        </author>
        <published>2022-04-28T20:25:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Remote Code Execution in next]]></title>
        <id>https://github.com/advisories/GHSA-5vj8-3v2h-h38v</id>
        <link href="https://github.com/advisories/GHSA-5vj8-3v2h-h38v"/>
        <updated>2022-04-28T19:57:45.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>next</code> prior to 5.1.0 are vulnerable to Remote Code Execution. The <code>/path:</code> route fails to properly sanitize input and passes it to a <code>require()</code> call. This allows attackers to execute JavaScript code on the server. Note that prior version 0.9.9 package <code>next</code> npm package hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 5.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.npmjs.com/advisories/1538">https://www.npmjs.com/advisories/1538</a></li>
<li><a href="https://github.com/advisories/GHSA-5vj8-3v2h-h38v">https://github.com/advisories/GHSA-5vj8-3v2h-h38v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vj8-3v2h-h38v</uri>
        </author>
        <published>2020-09-04T18:04:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[config-shield] Improper Control of Dynamically-Managed Code Resources in config-shield]]></title>
        <id>https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</id>
        <link href="https://github.com/advisories/GHSA-w8h4-vw8f-rvvj"/>
        <updated>2022-04-27T20:27:31.000Z</updated>
        <content type="html"><![CDATA[<p>scripts/cli.js in the GoDaddy node-config-shield (aka Config Shield) package before 0.2.2 for Node.js calls eval when processing a set command. NOTE: the vendor reportedly states that this is not a vulnerability. The set command was not intended for use with untrusted data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26276">https://nvd.nist.gov/vuln/detail/CVE-2021-26276</a></li>
<li><a href="https://github.com/godaddy/node-config-shield/commit/cdba5d3a7accd661ffbc52e208153464bd0d9da6">https://github.com/godaddy/node-config-shield/commit/cdba5d3a7accd661ffbc52e208153464bd0d9da6</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4773">https://advisory.checkmarx.net/advisory/CX-2021-4773</a></li>
<li><a href="https://github.com/advisories/GHSA-w8h4-vw8f-rvvj">https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</uri>
        </author>
        <published>2021-04-13T15:30:09.000Z</published>
    </entry>
</feed>