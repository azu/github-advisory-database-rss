<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-07-07T20:01:42.830Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[semver] semver vulnerable to Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</id>
        <link href="https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"/>
        <updated>2023-07-07T18:57:56.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25883">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>
<li><a href="https://github.com/npm/node-semver/pull/564">https://github.com/npm/node-semver/pull/564</a></li>
<li><a href="https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/internal/re.js#L138">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>
<li><a href="https://github.com/npm/node-semver/blob/main/internal/re.js#L160">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>
<li><a href="https://github.com/advisories/GHSA-c2qf-rxjj-qqgw">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-21T06:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.defaultsdeep] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.mergewith] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.merge] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.template] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-amd] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-jf85-cpcp-j695</id>
        <link href="https://github.com/advisories/GHSA-jf85-cpcp-j695"/>
        <updated>2023-07-07T18:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 4.17.12 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/pull/4336">https://github.com/lodash/lodash/pull/4336</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10744">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>
<li><a href="https://www.npmjs.com/advisories/1065">https://www.npmjs.com/advisories/1065</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3024">https://access.redhat.com/errata/RHSA-2019:3024</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20191004-0005/">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>
<li><a href="https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jf85-cpcp-j695">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf85-cpcp-j695</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-07-10T19:45:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[minimist] Prototype Pollution in minimist]]></title>
        <id>https://github.com/advisories/GHSA-vh95-rmgr-6w4m</id>
        <link href="https://github.com/advisories/GHSA-vh95-rmgr-6w4m"/>
        <updated>2023-07-07T18:36:02.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>minimist</code> are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of <code>Object</code>, causing the addition or modification of an existing property that will exist on all objects.<br>Parsing the argument <code>--__proto__.y=Polluted</code> adds a <code>y</code> property with value <code>Polluted</code> to all objects. The argument <code>--__proto__=Polluted</code> raises and uncaught error and crashes the application.<br>This is exploitable if attackers have control over the arguments being passed to <code>minimist</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to versions 0.2.1, 1.2.3 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7598">https://nvd.nist.gov/vuln/detail/CVE-2020-7598</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MINIMIST-559764">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html">http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html</a></li>
<li><a href="https://www.npmjs.com/advisories/1179">https://www.npmjs.com/advisories/1179</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68">https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab">https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95">https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94">https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94</a></li>
<li><a href="https://github.com/advisories/GHSA-vh95-rmgr-6w4m">https://github.com/advisories/GHSA-vh95-rmgr-6w4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vh95-rmgr-6w4m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-04-03T21:48:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[minimist] Prototype Pollution in minimist]]></title>
        <id>https://github.com/advisories/GHSA-vh95-rmgr-6w4m</id>
        <link href="https://github.com/advisories/GHSA-vh95-rmgr-6w4m"/>
        <updated>2023-07-07T18:36:02.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>minimist</code> are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of <code>Object</code>, causing the addition or modification of an existing property that will exist on all objects.<br>Parsing the argument <code>--__proto__.y=Polluted</code> adds a <code>y</code> property with value <code>Polluted</code> to all objects. The argument <code>--__proto__=Polluted</code> raises and uncaught error and crashes the application.<br>This is exploitable if attackers have control over the arguments being passed to <code>minimist</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to versions 0.2.1, 1.2.3 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7598">https://nvd.nist.gov/vuln/detail/CVE-2020-7598</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MINIMIST-559764">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html">http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html</a></li>
<li><a href="https://www.npmjs.com/advisories/1179">https://www.npmjs.com/advisories/1179</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68">https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab">https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95">https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95</a></li>
<li><a href="https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94">https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94</a></li>
<li><a href="https://github.com/advisories/GHSA-vh95-rmgr-6w4m">https://github.com/advisories/GHSA-vh95-rmgr-6w4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vh95-rmgr-6w4m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-04-03T21:48:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[async] Prototype Pollution in async]]></title>
        <id>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</id>
        <link href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25"/>
        <updated>2023-07-07T18:19:47.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43138">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>
<li><a href="https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/internal/iterator.js">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>
<li><a href="https://jsfiddle.net/oz5twjd9/">https://jsfiddle.net/oz5twjd9/</a></li>
<li><a href="https://github.com/caolan/async/pull/1828">https://github.com/caolan/async/pull/1828</a></li>
<li><a href="https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>
<li><a href="https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>
<li><a href="https://github.com/caolan/async/compare/v2.6.3...v2.6.4">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-07T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[async] Prototype Pollution in async]]></title>
        <id>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</id>
        <link href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25"/>
        <updated>2023-07-07T18:19:47.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43138">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>
<li><a href="https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/internal/iterator.js">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>
<li><a href="https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>
<li><a href="https://jsfiddle.net/oz5twjd9/">https://jsfiddle.net/oz5twjd9/</a></li>
<li><a href="https://github.com/caolan/async/pull/1828">https://github.com/caolan/async/pull/1828</a></li>
<li><a href="https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>
<li><a href="https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>
<li><a href="https://github.com/caolan/async/compare/v2.6.3...v2.6.4">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr7-v2mv-hh25">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr7-v2mv-hh25</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-07T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json5] Prototype Pollution in JSON5 via Parse Method]]></title>
        <id>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</id>
        <link href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h"/>
        <updated>2023-07-07T18:17:19.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>
<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>
<h2 id="impact">Impact</h2>
<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>
<h2 id="mitigation">Mitigation</h2>
<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>
<h2 id="details">Details</h2>
<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>
<pre><code class="language-js">const JSON5 = require('json5');

const doSomethingDangerous = (props) =&gt; {
  if (props.isAdmin) {
    console.log('Doing dangerous thing as admin.');
  } else {
    console.log('Doing dangerous thing as user.');
  }
};

const secCheckKeysSet = (obj, searchKeys) =&gt; {
  let searchKeyFound = false;
  Object.keys(obj).forEach((key) =&gt; {
    if (searchKeys.indexOf(key) &gt; -1) {
      searchKeyFound = true;
    }
  });
  return searchKeyFound;
};

const props = JSON5.parse('{"foo": "bar"}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as user."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "isAdmin": true}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props);
} else {
  throw new Error('Forbidden...'); // Error: Forbidden...
}
</code></pre>
<p>However, users can instead set the <code>__proto__</code> key to <code>{"isAdmin": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "__proto__": {"isAdmin": true}}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as admin."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46175">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>
<li><a href="https://github.com/json5/json5/issues/199">https://github.com/json5/json5/issues/199</a></li>
<li><a href="https://github.com/json5/json5/issues/295">https://github.com/json5/json5/issues/295</a></li>
<li><a href="https://github.com/json5/json5/pull/298">https://github.com/json5/json5/pull/298</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>
<li><a href="https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>
<li><a href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-29T01:51:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json5] Prototype Pollution in JSON5 via Parse Method]]></title>
        <id>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</id>
        <link href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h"/>
        <updated>2023-07-07T18:17:19.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>
<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>
<h2 id="impact">Impact</h2>
<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>
<h2 id="mitigation">Mitigation</h2>
<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>
<h2 id="details">Details</h2>
<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>
<pre><code class="language-js">const JSON5 = require('json5');

const doSomethingDangerous = (props) =&gt; {
  if (props.isAdmin) {
    console.log('Doing dangerous thing as admin.');
  } else {
    console.log('Doing dangerous thing as user.');
  }
};

const secCheckKeysSet = (obj, searchKeys) =&gt; {
  let searchKeyFound = false;
  Object.keys(obj).forEach((key) =&gt; {
    if (searchKeys.indexOf(key) &gt; -1) {
      searchKeyFound = true;
    }
  });
  return searchKeyFound;
};

const props = JSON5.parse('{"foo": "bar"}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as user."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "isAdmin": true}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props);
} else {
  throw new Error('Forbidden...'); // Error: Forbidden...
}
</code></pre>
<p>However, users can instead set the <code>__proto__</code> key to <code>{"isAdmin": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "__proto__": {"isAdmin": true}}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as admin."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46175">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>
<li><a href="https://github.com/json5/json5/issues/199">https://github.com/json5/json5/issues/199</a></li>
<li><a href="https://github.com/json5/json5/issues/295">https://github.com/json5/json5/issues/295</a></li>
<li><a href="https://github.com/json5/json5/pull/298">https://github.com/json5/json5/pull/298</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>
<li><a href="https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>
<li><a href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-29T01:51:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] jQuery Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-257q-pv89-v3xv</id>
        <link href="https://github.com/advisories/GHSA-257q-pv89-v3xv"/>
        <updated>2023-07-07T15:08:27.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in jQuery v.2.2.0 until v.3.5.0 allows a remote attacker to execute arbitrary code via the <code>&lt;options&gt;</code> element.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-23064">https://nvd.nist.gov/vuln/detail/CVE-2020-23064</a></li>
<li><a href="https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/">https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JQUERY-565129">https://snyk.io/vuln/SNYK-JS-JQUERY-565129</a></li>
<li><a href="https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77">https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979">https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162">https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162</a></li>
<li><a href="https://github.com/advisories/GHSA-257q-pv89-v3xv">https://github.com/advisories/GHSA-257q-pv89-v3xv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-257q-pv89-v3xv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-26T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[is_js] is_js vulnerable to Regular Expression Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</id>
        <link href="https://github.com/advisories/GHSA-pvrw-g6fx-mcx2"/>
        <updated>2023-07-06T21:46:36.000Z</updated>
        <content type="html"><![CDATA[<p>is.js is a general-purpose check library. Versions 0.9.0 and prior contain one or more regular expressions that are vulnerable to Regular Expression Denial of Service (ReDoS). is.js uses a regex copy-pasted from a gist to validate URLs. Trying to validate a malicious string can cause the regex to loop "forever." This vulnerability was found using a CodeQL query which identifies inefficient regular expressions. is.js has no patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26302">https://nvd.nist.gov/vuln/detail/CVE-2020-26302</a></li>
<li><a href="https://github.com/arasatasaygin/is.js/issues/320">https://github.com/arasatasaygin/is.js/issues/320</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js">https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js</a></li>
<li><a href="https://github.com/advisories/GHSA-pvrw-g6fx-mcx2">https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-06T19:24:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[snyk] snyk Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4vrv-93c7-m92j</id>
        <link href="https://github.com/advisories/GHSA-4vrv-93c7-m92j"/>
        <updated>2023-07-06T21:36:20.000Z</updated>
        <content type="html"><![CDATA[<p>The package snyk before 1.1064.0 is vulnerable to Code Injection when analyzing a project. An attacker who can convince a user to scan a malicious project can include commands in a build file such as build.gradle or gradle-wrapper.jar, which will be executed with the privileges of the application. This vulnerability may be triggered when running the the CLI tool directly, or when running a scan with one of the IDE plugins that invoke the Snyk CLI. Successful exploitation of this issue would likely require some level of social engineering - to coerce an untrusted project to be downloaded and analyzed via the Snyk CLI or opened in an IDE where a Snyk IDE plugin is installed and enabled. Additionally, if the IDE has a Trust feature then the target folder must be marked as ‘trusted’ in order to be vulnerable.</p>
<p><strong>NOTE:</strong> This issue is independent of the one reported in <a href="https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342">CVE-2022-40764</a>, and upgrading to a fixed version for this addresses that issue as well.</p>
<p>The affected IDE plugins and versions are: </p>
<ul>
<li>VS Code - Affected: &lt;=1.8.0, Fixed: 1.9.0 </li>
<li>IntelliJ - Affected: &lt;=2.4.47, Fixed: 2.4.48 </li>
<li>Visual Studio - Affected: &lt;=1.1.30, Fixed: 1.1.31 </li>
<li>Eclipse - Affected: &lt;=v20221115.132308, Fixed: All subsequent versions </li>
<li>Language Server - Affected: &lt;=v20221109.114426, Fixed: All subsequent versions</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24441">https://nvd.nist.gov/vuln/detail/CVE-2022-24441</a></li>
<li><a href="https://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495">https://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495</a></li>
<li><a href="https://github.com/snyk/snyk-intellij-plugin/commit/56682f4ba6081ce1d95cb980cbfacd3809a826f4">https://github.com/snyk/snyk-intellij-plugin/commit/56682f4ba6081ce1d95cb980cbfacd3809a826f4</a></li>
<li><a href="https://github.com/snyk/snyk-ls/commit/b3229f0142f782871aa72d1a7dcf417546d568ed">https://github.com/snyk/snyk-ls/commit/b3229f0142f782871aa72d1a7dcf417546d568ed</a></li>
<li><a href="https://github.com/snyk/snyk-visual-studio-plugin/commit/0b53dbbd4a3153c3ef9aaf797af3b5caad0f731a">https://github.com/snyk/snyk-visual-studio-plugin/commit/0b53dbbd4a3153c3ef9aaf797af3b5caad0f731a</a></li>
<li><a href="https://github.com/snyk/vscode-extension/commit/0db3b4240be0db6a0a5c6d02c0d4231a2c4ba708">https://github.com/snyk/vscode-extension/commit/0db3b4240be0db6a0a5c6d02c0d4231a2c4ba708</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SNYK-3111871">https://security.snyk.io/vuln/SNYK-JS-SNYK-3111871</a></li>
<li><a href="https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/">https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/</a></li>
<li><a href="https://github.com/advisories/GHSA-4vrv-93c7-m92j">https://github.com/advisories/GHSA-4vrv-93c7-m92j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vrv-93c7-m92j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-06T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/oauth2] Duplicate Advisory: @fastify/oauth2 Oauth2 state parameter reuse]]></title>
        <id>https://github.com/advisories/GHSA-hgxv-3497-3hhj</id>
        <link href="https://github.com/advisories/GHSA-hgxv-3497-3hhj"/>
        <updated>2023-07-06T20:39:14.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-g8x5-p9qc-cf95. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>All versions of @fastify/oauth2 used a statically generated state parameter at startup time and were used across all requests for all users. The purpose of the Oauth2 state parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.</p>
<p>v7.2.0 changes the default behavior to store the state in a cookie with the http-only and same-site=lax attributes set. The state is now by default generated for every user. Note that this contains a breaking change in the checkStateFunction function, which now accepts the full Request object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31999">https://nvd.nist.gov/vuln/detail/CVE-2023-31999</a></li>
<li><a href="https://hackerone.com/reports/2020418">https://hackerone.com/reports/2020418</a></li>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">https://auth0.com/docs/secure/attack-protection/state-parameters</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0">https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hgxv-3497-3hhj">https://github.com/advisories/GHSA-hgxv-3497-3hhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgxv-3497-3hhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-04T18:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vendure/admin-ui-plugin] @vendure/admin-ui-plugin authenticated Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gm68-572p-q28r</id>
        <link href="https://github.com/advisories/GHSA-gm68-572p-q28r"/>
        <updated>2023-07-06T15:30:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Vendure provides an authorization system with different levels of privileges. For example, an administrator cannot create another administrator.</p>
<p>In the admin UI, there are a couple of places with description inputs, such as inventory/collection catalog, shipping methods, promotions, and more.</p>
<p>While the WYSIWYG editor allows limited customization, altering the request data (not in the ui) saves and returns arbitrary HTML with no sanitization. Causing an XSS when viewing the page.</p>
<p>The impact of this XSS is privilege escalation. A user that can write any type of description can trigger the attack. Then any other user that visits the vulnerable page is prone to arbitrary Javascript code execution, giving the attacker ability to execute actions on behalf of this user.</p>
<h3 id="patches">Patches</h3>
<p>in progress</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r">https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r</a></li>
<li><a href="https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0">https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0</a></li>
<li><a href="https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04">https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04</a></li>
<li><a href="https://github.com/advisories/GHSA-gm68-572p-q28r">https://github.com/advisories/GHSA-gm68-572p-q28r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gm68-572p-q28r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-06T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/oauth2] @fastify/oauth2 vulnerable to Cross Site Request Forgery due to reused Oauth2 state]]></title>
        <id>https://github.com/advisories/GHSA-g8x5-p9qc-cf95</id>
        <link href="https://github.com/advisories/GHSA-g8x5-p9qc-cf95"/>
        <updated>2023-07-06T20:39:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of @fastify/oauth2 used a statically generated <code>state</code> parameter at startup time and were used across all requests for all users.
The purpose of the Oauth2 <code>state</code> parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.</p>
<h3 id="patches">Patches</h3>
<p>v7.2.0 changes the default behavior to store the <code>state</code> in a cookie with the <code>http-only</code> and <code>same-site=lax</code> attributes set. The state is now by default generated for every user.</p>
<p>Note that this contains a breaking change in the <code>checkStateFunction</code> function, which now accepts the full <code>Request</code> object.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">Prevent Attacks and Redirect Users with OAuth 2.0 State Parameters</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95">https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35935">https://nvd.nist.gov/vuln/detail/CVE-2023-35935</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c">https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c</a></li>
<li><a href="https://auth0.com/docs/secure/attack-protection/state-parameters">https://auth0.com/docs/secure/attack-protection/state-parameters</a></li>
<li><a href="https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0">https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g8x5-p9qc-cf95">https://github.com/advisories/GHSA-g8x5-p9qc-cf95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8x5-p9qc-cf95</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-05T21:36:56.000Z</published>
    </entry>
</feed>