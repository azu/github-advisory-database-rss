<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-01-31T18:01:31.800Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[taffydb] TaffyDB can allow access to any data items in the DB]]></title>
        <id>https://github.com/advisories/GHSA-mxhp-79qh-mcx6</id>
        <link href="https://github.com/advisories/GHSA-mxhp-79qh-mcx6"/>
        <updated>2023-01-30T19:22:18.000Z</updated>
        <content type="html"><![CDATA[<p>TaffyDB allows attackers to forge adding additional properties into user-input processed by taffy which can allow access to any data items in the DB. Taffy sets an internal index for each data item in its DB. However, it is found that the internal index can be forged by adding additional properties into user-input. If index is found in the query, TaffyDB will ignore other query conditions and directly return the indexed data item. Moreover, the internal index is in an easily-guessable format (e.g., T000002R000001). As such, attackers can use this vulnerability to access any data items in the DB. <strong>Note:</strong> <code>taffy</code> and its successor package <code>taffydb</code> are not maintained.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10790">https://nvd.nist.gov/vuln/detail/CVE-2019-10790</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-TAFFY-546521">https://snyk.io/vuln/SNYK-JS-TAFFY-546521</a></li>
<li><a href="https://www.npmjs.com/package/taffy">https://www.npmjs.com/package/taffy</a></li>
<li><a href="https://github.com/advisories/GHSA-mxhp-79qh-mcx6">https://github.com/advisories/GHSA-mxhp-79qh-mcx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxhp-79qh-mcx6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-02-19T16:43:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serve-lite] Directory Traversal vulnerability in serve-lite]]></title>
        <id>https://github.com/advisories/GHSA-5qq4-m6c3-xxmf</id>
        <link href="https://github.com/advisories/GHSA-5qq4-m6c3-xxmf"/>
        <updated>2023-01-30T18:17:38.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package serve-lite are vulnerable to Directory Traversal due to missing input sanitization or other checks and protections employed to the req.url passed as-is to path.join().</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21192">https://nvd.nist.gov/vuln/detail/CVE-2022-21192</a></li>
<li><a href="https://gist.github.com/lirantal/9ccdfda0edcb95e36d07a04b0b6c2db0">https://gist.github.com/lirantal/9ccdfda0edcb95e36d07a04b0b6c2db0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149916">https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149916</a></li>
<li><a href="https://github.com/advisories/GHSA-5qq4-m6c3-xxmf">https://github.com/advisories/GHSA-5qq4-m6c3-xxmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qq4-m6c3-xxmf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-26T21:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serve-lite] Cross-site Scripting (XSS) in serve-lite]]></title>
        <id>https://github.com/advisories/GHSA-j8x7-qcw4-xx85</id>
        <link href="https://github.com/advisories/GHSA-j8x7-qcw4-xx85"/>
        <updated>2023-01-30T18:17:38.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package serve-lite are vulnerable to Cross-site Scripting (XSS) because when it detects a request to a directory, it renders a file listing of all of its contents with links that include the actual file names without any sanitization or output encoding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25847">https://nvd.nist.gov/vuln/detail/CVE-2022-25847</a></li>
<li><a href="https://gist.github.com/lirantal/52debd25284726fcc2eaed9c7512975c">https://gist.github.com/lirantal/52debd25284726fcc2eaed9c7512975c</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149915">https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149915</a></li>
<li><a href="https://github.com/advisories/GHSA-j8x7-qcw4-xx85">https://github.com/advisories/GHSA-j8x7-qcw4-xx85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8x7-qcw4-xx85</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-26T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2023-01-28T05:03:09.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electerm] Code injection in electerm]]></title>
        <id>https://github.com/advisories/GHSA-x73w-g8hx-v7rp</id>
        <link href="https://github.com/advisories/GHSA-x73w-g8hx-v7rp"/>
        <updated>2023-01-28T01:18:12.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Electerm 1.3.22, allows attackers to execute arbitrary code via unverified request to electerms service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-23256">https://nvd.nist.gov/vuln/detail/CVE-2020-23256</a></li>
<li><a href="https://github.com/electerm/electerm/issues/1686">https://github.com/electerm/electerm/issues/1686</a></li>
<li><a href="https://github.com/advisories/GHSA-x73w-g8hx-v7rp">https://github.com/advisories/GHSA-x73w-g8hx-v7rp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x73w-g8hx-v7rp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-01-20T21:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vagrant.js] Command injection in vagrant.js]]></title>
        <id>https://github.com/advisories/GHSA-54jw-jqr9-6cj9</id>
        <link href="https://github.com/advisories/GHSA-54jw-jqr9-6cj9"/>
        <updated>2023-01-27T01:07:48.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25962">https://nvd.nist.gov/vuln/detail/CVE-2022-25962</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-VAGRANTJS-3175614">https://security.snyk.io/vuln/SNYK-JS-VAGRANTJS-3175614</a></li>
<li><a href="https://github.com/advisories/GHSA-54jw-jqr9-6cj9">https://github.com/advisories/GHSA-54jw-jqr9-6cj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54jw-jqr9-6cj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-26T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[create-choo-electron] Command Injection in create-choo-electron]]></title>
        <id>https://github.com/advisories/GHSA-j8wr-fwf2-vvr9</id>
        <link href="https://github.com/advisories/GHSA-j8wr-fwf2-vvr9"/>
        <updated>2023-01-27T01:06:32.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25908">https://nvd.nist.gov/vuln/detail/CVE-2022-25908</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-CREATECHOOELECTRON-3157953">https://security.snyk.io/vuln/SNYK-JS-CREATECHOOELECTRON-3157953</a></li>
<li><a href="https://github.com/advisories/GHSA-j8wr-fwf2-vvr9">https://github.com/advisories/GHSA-j8wr-fwf2-vvr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8wr-fwf2-vvr9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-26T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yapi-vendor] Cross-site Scripting in yapi-vendor]]></title>
        <id>https://github.com/advisories/GHSA-4jqw-vfmj-9rmh</id>
        <link href="https://github.com/advisories/GHSA-4jqw-vfmj-9rmh"/>
        <updated>2023-01-27T01:04:11.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting (XSS) vulnerability in yapi 1.9.1 allows attackers to execute arbitrary code via the /interface/api edit page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-36686">https://nvd.nist.gov/vuln/detail/CVE-2021-36686</a></li>
<li><a href="https://github.com/YMFE/yapi/issues/2190">https://github.com/YMFE/yapi/issues/2190</a></li>
<li><a href="https://github.com/advisories/GHSA-4jqw-vfmj-9rmh">https://github.com/advisories/GHSA-4jqw-vfmj-9rmh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jqw-vfmj-9rmh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-26T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smartctl] Command injection in smartctl]]></title>
        <id>https://github.com/advisories/GHSA-69f2-4375-qv9h</id>
        <link href="https://github.com/advisories/GHSA-69f2-4375-qv9h"/>
        <updated>2023-01-27T01:02:31.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21810">https://nvd.nist.gov/vuln/detail/CVE-2022-21810</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SMARTCTL-3175613">https://security.snyk.io/vuln/SNYK-JS-SMARTCTL-3175613</a></li>
<li><a href="https://github.com/baslr/node-smartctl/blob/f61266084d5b3e4baae9bd85f67ec4ec6a716736/index.js#23L18">https://github.com/baslr/node-smartctl/blob/f61266084d5b3e4baae9bd85f67ec4ec6a716736/index.js#23L18</a></li>
<li><a href="https://github.com/advisories/GHSA-69f2-4375-qv9h">https://github.com/advisories/GHSA-69f2-4375-qv9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69f2-4375-qv9h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-26T21:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simple-git] Remote code execution in simple-git]]></title>
        <id>https://github.com/advisories/GHSA-9w5j-4mwv-2wj8</id>
        <link href="https://github.com/advisories/GHSA-9w5j-4mwv-2wj8"/>
        <updated>2023-01-27T01:01:27.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package simple-git before 3.16.0 are vulnerable to Remote Code Execution (RCE) via the clone(), pull(), push() and listRemote() methods, due to improper input sanitization. This vulnerability exists due to an incomplete fix of CVE-2022-25912.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25860">https://nvd.nist.gov/vuln/detail/CVE-2022-25860</a></li>
<li><a href="https://github.com/steveukx/git-js/pull/881/commits/95459310e5b8f96e20bb77ef1a6559036b779e13">https://github.com/steveukx/git-js/pull/881/commits/95459310e5b8f96e20bb77ef1a6559036b779e13</a></li>
<li><a href="https://github.com/steveukx/git-js/commit/ec97a39ab60b89e870c5170121cd9c1603cc1951">https://github.com/steveukx/git-js/commit/ec97a39ab60b89e870c5170121cd9c1603cc1951</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3177391">https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3177391</a></li>
<li><a href="https://github.com/advisories/GHSA-9w5j-4mwv-2wj8">https://github.com/advisories/GHSA-9w5j-4mwv-2wj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w5j-4mwv-2wj8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-26T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[puppet-facter] Command Injection in puppet-facter]]></title>
        <id>https://github.com/advisories/GHSA-g5qr-xgg7-8q2w</id>
        <link href="https://github.com/advisories/GHSA-g5qr-xgg7-8q2w"/>
        <updated>2023-01-27T01:00:47.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25350">https://nvd.nist.gov/vuln/detail/CVE-2022-25350</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUPPETFACTER-3175616">https://security.snyk.io/vuln/SNYK-JS-PUPPETFACTER-3175616</a></li>
<li><a href="https://github.com/olindata/node-puppet-facter/blob/f34bcc754325d71bb3b1b534804e53d6170f15f5/index.js#23L10">https://github.com/olindata/node-puppet-facter/blob/f34bcc754325d71bb3b1b534804e53d6170f15f5/index.js#23L10</a></li>
<li><a href="https://github.com/advisories/GHSA-g5qr-xgg7-8q2w">https://github.com/advisories/GHSA-g5qr-xgg7-8q2w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5qr-xgg7-8q2w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-26T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@asyncapi/modelina] Improper Control of Generation of Code ('Code Injection') in @asyncapi/modelina]]></title>
        <id>https://github.com/advisories/GHSA-4jg2-84c2-pj95</id>
        <link href="https://github.com/advisories/GHSA-4jg2-84c2-pj95"/>
        <updated>2023-01-26T21:57:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Anyone who is using the default presets and/or does not handle the functionality themself.</p>
<h3 id="patches">Patches</h3>
<p>It is impossible to fully guard against this, because users have access to the original raw information. However, as of version 1, if you only access the constrained models, you will not encounter this issue.</p>
<p>Further similar situations are NOT seen as a security issue, but intended behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Fully custom presets that change the entire rendering process which can then escape the user input.</p>
<h3 id="for-more-information">For more information</h3>
<p>Even though that I changed all the presets here, the vulnerability is still present throughout. I am using a JSON Schema here for simplicity.</p>
<pre><code class="language-ts">const jsonSchemaDoc = {
  $id: 'CustomClass',
  type: 'object',
  properties: {
      'property: any; \n constructor(){console.log("injected")} \n private _temp': { type: 'string' },
  }
};
generator = new TypeScriptGenerator(
  { 
    presets: [
      {
        class: {
            property({ propertyName, content }) {
              return `private ${propertyName}: any;`;
            },
            ctor() {
              return '';
            },
            getter() {
              return '';
            },
            setter() {
              return '';
            }
        }
      }
    ]
  }
);
const inputModel = await generator.process(jsonSchemaDoc);
</code></pre>
<p>This would render</p>
<pre><code class="language-ts">export class CustomClass {
  private property: any; 
   constructor(){console.log("injected")} 
   private _temp: any;
  private additionalProperties: any;
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95">https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-23619">https://nvd.nist.gov/vuln/detail/CVE-2023-23619</a></li>
<li><a href="https://github.com/advisories/GHSA-4jg2-84c2-pj95">https://github.com/advisories/GHSA-4jg2-84c2-pj95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jg2-84c2-pj95</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-09-21T18:41:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ua-parser-js] ReDoS Vulnerability in ua-parser-js version ]]></title>
        <id>https://github.com/advisories/GHSA-fhg7-m89q-25r3</id>
        <link href="https://github.com/advisories/GHSA-fhg7-m89q-25r3"/>
        <updated>2023-01-26T21:57:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>A regular expression denial of service (ReDoS) vulnerability has been discovered in <code>ua-parser-js</code>.</p>
<h3 id="impact">Impact:</h3>
<p>This vulnerability bypass the library's <code>MAX_LENGTH</code> input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.</p>
<h3 id="affected-versions">Affected Versions:</h3>
<p>All versions of the library prior to version <code>0.7.33</code> / <code>1.0.33</code>.</p>
<h3 id="patches">Patches:</h3>
<p>A patch has been released to remove the vulnerable regular expression, update to version <code>0.7.33</code> / <code>1.0.33</code> or later.</p>
<h3 id="references">References:</h3>
<p><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">Regular expression Denial of Service - ReDoS</a></p>
<h3 id="credits">Credits:</h3>
<p>Thanks to @Snyk who first reported the issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3">https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3</a></li>
<li><a href="https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411">https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25927">https://nvd.nist.gov/vuln/detail/CVE-2022-25927</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450">https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg7-m89q-25r3">https://github.com/advisories/GHSA-fhg7-m89q-25r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg7-m89q-25r3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-24T15:36:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ua-parser-js] ReDoS Vulnerability in ua-parser-js version ]]></title>
        <id>https://github.com/advisories/GHSA-fhg7-m89q-25r3</id>
        <link href="https://github.com/advisories/GHSA-fhg7-m89q-25r3"/>
        <updated>2023-01-26T21:57:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>A regular expression denial of service (ReDoS) vulnerability has been discovered in <code>ua-parser-js</code>.</p>
<h3 id="impact">Impact:</h3>
<p>This vulnerability bypass the library's <code>MAX_LENGTH</code> input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.</p>
<h3 id="affected-versions">Affected Versions:</h3>
<p>All versions of the library prior to version <code>0.7.33</code> / <code>1.0.33</code>.</p>
<h3 id="patches">Patches:</h3>
<p>A patch has been released to remove the vulnerable regular expression, update to version <code>0.7.33</code> / <code>1.0.33</code> or later.</p>
<h3 id="references">References:</h3>
<p><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">Regular expression Denial of Service - ReDoS</a></p>
<h3 id="credits">Credits:</h3>
<p>Thanks to @Snyk who first reported the issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3">https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3</a></li>
<li><a href="https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411">https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25927">https://nvd.nist.gov/vuln/detail/CVE-2022-25927</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450">https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg7-m89q-25r3">https://github.com/advisories/GHSA-fhg7-m89q-25r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg7-m89q-25r3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-24T15:36:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cookiejar] cookiejar Regular Expression Denial of Service via Cookie.parse function]]></title>
        <id>https://github.com/advisories/GHSA-h452-7996-h45h</id>
        <link href="https://github.com/advisories/GHSA-h452-7996-h45h"/>
        <updated>2023-01-23T16:59:53.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>Cookie.parse</code> function and other aspects of the API, which use an insecure regular expression for parsing cookie values. Applications could be stalled for extended periods of time if untrusted input is passed to cookie values or attempted to parse from request headers.</p>
<p>Proof of concept:</p>
<pre><code>ts\nconst { CookieJar } = require("cookiejar");

const jar = new CookieJar();

const start = performance.now();

const attack = "a" + "t".repeat(50_000);
jar.setCookie(attack);

console.log(`CookieJar.setCookie(): ${performance.now() - start}ms`);
</code></pre>
<pre><code>CookieJar.setCookie(): 2963.214399999939ms
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25901">https://nvd.nist.gov/vuln/detail/CVE-2022-25901</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/pull/39">https://github.com/bmeck/node-cookiejar/pull/39</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5">https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984">https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73">https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73</a></li>
<li><a href="https://github.com/advisories/GHSA-h452-7996-h45h">https://github.com/advisories/GHSA-h452-7996-h45h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h452-7996-h45h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-18T06:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mel-spintax] mel-spintax has Inefficient Regular Expression Complexity]]></title>
        <id>https://github.com/advisories/GHSA-qjm7-55vv-3c5f</id>
        <link href="https://github.com/advisories/GHSA-qjm7-55vv-3c5f"/>
        <updated>2023-01-20T23:35:16.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in melnaron mel-spintax. It has been rated as problematic. Affected by this issue is some unknown functionality of the file <code>lib/spintax.js</code>. The manipulation of the argument text leads to inefficient regular expression complexity. The name of the patch is 37767617846e27b87b63004e30216e8f919637d3. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-218456.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25077">https://nvd.nist.gov/vuln/detail/CVE-2018-25077</a></li>
<li><a href="https://github.com/melnaron/mel-spintax/commit/37767617846e27b87b63004e30216e8f919637d3">https://github.com/melnaron/mel-spintax/commit/37767617846e27b87b63004e30216e8f919637d3</a></li>
<li><a href="https://vuldb.com/?id.218456">https://vuldb.com/?id.218456</a></li>
<li><a href="https://github.com/advisories/GHSA-qjm7-55vv-3c5f">https://github.com/advisories/GHSA-qjm7-55vv-3c5f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjm7-55vv-3c5f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-18T03:31:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik] @builder.io/qwik vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</id>
        <link href="https://github.com/advisories/GHSA-hm7f-rq7q-j9xp"/>
        <updated>2023-01-26T17:04:28.000Z</updated>
        <content type="html"><![CDATA[<p>@builder.io/qwik prior to version 0.16.2 is vulnerable to cross-site scripting due to attribute names and the class attribute values not being properly handled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0410">https://nvd.nist.gov/vuln/detail/CVE-2023-0410</a></li>
<li><a href="https://github.com/builderio/qwik/commit/4b2f89dbbd2bc0a2c92eae1a49bdd186e589151a">https://github.com/builderio/qwik/commit/4b2f89dbbd2bc0a2c92eae1a49bdd186e589151a</a></li>
<li><a href="https://huntr.dev/bounties/2da583f0-7f66-4ba7-9bed-8e7229aa578e">https://huntr.dev/bounties/2da583f0-7f66-4ba7-9bed-8e7229aa578e</a></li>
<li><a href="https://github.com/advisories/GHSA-hm7f-rq7q-j9xp">https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-20T03:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@curveball/a12n-server] a12nserver vulnerable to potential SQL Injections via Knex dependency]]></title>
        <id>https://github.com/advisories/GHSA-crhg-xgrg-vvcc</id>
        <link href="https://github.com/advisories/GHSA-crhg-xgrg-vvcc"/>
        <updated>2023-01-29T05:03:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of a12nserver that use MySQL might be vulnerable to SQL injection bugs. </p>
<p>If you use a12nserver and MySQL, update as soon as possible. This SQL injection bug might let an attacker obtain OAuth2 Access Tokens for users unrelated to those that permitted OAuth2 clients.</p>
<h3 id="patches">Patches</h3>
<p>The knex dependency has been updated to 2.4.0 in a12nserver 0.23.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>No further workarounds</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/knex/knex/issues/1227">https://github.com/knex/knex/issues/1227</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-20018">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>
<li><a href="https://www.ghostccamm.com/blog/knex_sqli/">https://www.ghostccamm.com/blog/knex_sqli/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/curveball/a12n-server/security/advisories/GHSA-crhg-xgrg-vvcc">https://github.com/curveball/a12n-server/security/advisories/GHSA-crhg-xgrg-vvcc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-20018">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>
<li><a href="https://github.com/knex/knex/issues/1227">https://github.com/knex/knex/issues/1227</a></li>
<li><a href="https://github.com/curveball/a12n-server/commit/f4acd7549043e6e2b8917b77a50dce0756a922cc">https://github.com/curveball/a12n-server/commit/f4acd7549043e6e2b8917b77a50dce0756a922cc</a></li>
<li><a href="https://github.com/curveball/a12n-server/releases/tag/v0.23.0">https://github.com/curveball/a12n-server/releases/tag/v0.23.0</a></li>
<li><a href="https://www.ghostccamm.com/blog/knex_sqli/">https://www.ghostccamm.com/blog/knex_sqli/</a></li>
<li><a href="https://github.com/advisories/GHSA-crhg-xgrg-vvcc">https://github.com/advisories/GHSA-crhg-xgrg-vvcc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crhg-xgrg-vvcc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-13T21:34:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[global-modules-path] global-modules-path Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vvj3-85vf-fgmw</id>
        <link href="https://github.com/advisories/GHSA-vvj3-85vf-fgmw"/>
        <updated>2023-01-28T05:06:24.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21191">https://nvd.nist.gov/vuln/detail/CVE-2022-21191</a></li>
<li><a href="https://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180">https://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180</a></li>
<li><a href="https://github.com/lorenzomigliorero/npm-node-utils/blob/b55dd81c597db657c9751332bb2242403fd3e26b/index.js%23L186">https://github.com/lorenzomigliorero/npm-node-utils/blob/b55dd81c597db657c9751332bb2242403fd3e26b/index.js%23L186</a></li>
<li><a href="https://github.com/rosen-vladimirov/global-modules-path/releases/tag/v3.0.0">https://github.com/rosen-vladimirov/global-modules-path/releases/tag/v3.0.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973">https://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973</a></li>
<li><a href="https://github.com/advisories/GHSA-vvj3-85vf-fgmw">https://github.com/advisories/GHSA-vvj3-85vf-fgmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvj3-85vf-fgmw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-01-13T06:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[terminal-kit] terminal-kit Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</id>
        <link href="https://github.com/advisories/GHSA-wxgh-8gmr-3qh3"/>
        <updated>2023-01-28T05:04:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in cronvel terminal-kit up to 2.1.7. Affected is an unknown function. The manipulation leads to inefficient regular expression complexity. Upgrading to version 2.1.8 can address this issue. The name of the patch is a2e446cc3927b559d0281683feb9b821e83b758c. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217620.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4306">https://nvd.nist.gov/vuln/detail/CVE-2021-4306</a></li>
<li><a href="https://github.com/cronvel/terminal-kit/commit/a2e446cc3927b559d0281683feb9b821e83b758c">https://github.com/cronvel/terminal-kit/commit/a2e446cc3927b559d0281683feb9b821e83b758c</a></li>
<li><a href="https://github.com/cronvel/terminal-kit/releases/tag/v2.1.8">https://github.com/cronvel/terminal-kit/releases/tag/v2.1.8</a></li>
<li><a href="https://vuldb.com/?ctiid.217620">https://vuldb.com/?ctiid.217620</a></li>
<li><a href="https://vuldb.com/?id.217620">https://vuldb.com/?id.217620</a></li>
<li><a href="https://github.com/advisories/GHSA-wxgh-8gmr-3qh3">https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-07T18:30:20.000Z</published>
    </entry>
</feed>