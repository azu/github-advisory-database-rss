<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-04-30T00:23:40.835Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[cross-fetch] Incorrect Authorization in cross-fetch]]></title>
        <id>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</id>
        <link href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8"/>
        <updated>2022-04-28T20:45:26.000Z</updated>
        <content type="html"><![CDATA[<p>When fetching a remote url with Cookie if it get Location response header then it will follow that url and try to fetch that url with provided cookie . So cookie is leaked here to thirdparty.
Ex: you try to fetch example.com with cookie and if it get redirect url to attacker.com then it fetch that redirect url with provided cookie .</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1365">https://nvd.nist.gov/vuln/detail/CVE-2022-1365</a></li>
<li><a href="https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a">https://github.com/lquixada/cross-fetch/commit/a3b3a9481091ddd06b8f83784ba9c4e034dc912a</a></li>
<li><a href="https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac">https://huntr.dev/bounties/ab55dfdd-2a60-437a-a832-e3efe3d264ac</a></li>
<li><a href="https://github.com/advisories/GHSA-7gc6-qh9x-w6h8">https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gc6-qh9x-w6h8</uri>
        </author>
        <published>2022-04-17T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Open Redirect in Next.js]]></title>
        <id>https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</id>
        <link href="https://github.com/advisories/GHSA-vxf5-wxwp-m7g9"/>
        <updated>2022-04-28T20:32:19.000Z</updated>
        <content type="html"><![CDATA[<p>Next.js is an open source website development framework to be used with the React library. In affected versions specially encoded paths could be used when <code>pages/_error.js</code> was statically generated, allowing an open redirect to occur to an external site. In general, this redirect does not directly harm users although it can allow for phishing attacks by redirecting to an attacker's domain from a trusted domain.</p>
<h3 id="impact">Impact</h3>
<ul>
<li><strong>Affected:</strong> Users of Next.js between <code>10.0.5</code> and <code>10.2.0</code></li>
<li><strong>Affected:</strong> Users of Next.js between <code>11.0.0</code> and <code>11.0.1</code> using <code>pages/_error.js</code> without <code>getInitialProps</code></li>
<li><strong>Affected:</strong> Users of Next.js between <code>11.0.0</code> and <code>11.0.1</code> using <code>pages/_error.js</code> and <code>next export</code></li>
<li><strong>Not affected</strong>: Deployments on Vercel (<a href="https://vercel.com">vercel.com</a>) are not affected</li>
<li><strong>Not affected:</strong> Deployments <strong>with</strong> <code>pages/404.js</code></li>
<li>Note that versions prior to 0.9.9 package <code>next</code> npm package hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</li>
</ul>
<p>We recommend upgrading to the latest version of Next.js to improve the overall security of your application.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/vercel/next.js/releases/tag/v11.1.0">https://github.com/vercel/next.js/releases/tag/v11.1.0</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9">https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37699">https://nvd.nist.gov/vuln/detail/CVE-2021-37699</a></li>
<li><a href="https://github.com/vercel/next.js/releases/tag/v11.1.0">https://github.com/vercel/next.js/releases/tag/v11.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-vxf5-wxwp-m7g9">https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxf5-wxwp-m7g9</uri>
        </author>
        <published>2021-08-12T14:51:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sqlite3] Denial-of-Service due to fatal error when binding invalid parameters]]></title>
        <id>https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</id>
        <link href="https://github.com/advisories/GHSA-9qrh-qjmc-5w2p"/>
        <updated>2022-04-28T20:25:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Affected versions will experience a fatal error when supplying a specific object in the parameter array. This error causes the application to crash and could not be caught.</p>
<p>Users of <code>sqlite3</code> v5.0.0, v5.0.1 and v5.0.2 are affected by this.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in v5.0.3. All users are recommended to upgrade to v5.0.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Ensure there is sufficient sanitization in the parent application to protect against invalid values being supplied to binding parameters.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li>GitHub commit: <a href="https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a">https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a</a></li>
<li>Reported via issues: <a href="https://github.com/TryGhost/node-sqlite3/issues/1440">https://github.com/TryGhost/node-sqlite3/issues/1440</a> and <a href="https://github.com/TryGhost/node-sqlite3/issues/1449">https://github.com/TryGhost/node-sqlite3/issues/1449</a></li>
<li>Snyk: <a href="https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645">https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@ghost.org">security@ghost.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-9qrh-qjmc-5w2p">https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-9qrh-qjmc-5w2p</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/issues/1440">https://github.com/TryGhost/node-sqlite3/issues/1440</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/issues/1449">https://github.com/TryGhost/node-sqlite3/issues/1449</a></li>
<li><a href="https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a">https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645">https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645</a></li>
<li><a href="https://github.com/advisories/GHSA-9qrh-qjmc-5w2p">https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qrh-qjmc-5w2p</uri>
        </author>
        <published>2022-04-28T20:25:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Remote Code Execution in next]]></title>
        <id>https://github.com/advisories/GHSA-5vj8-3v2h-h38v</id>
        <link href="https://github.com/advisories/GHSA-5vj8-3v2h-h38v"/>
        <updated>2022-04-28T19:57:45.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>next</code> prior to 5.1.0 are vulnerable to Remote Code Execution. The <code>/path:</code> route fails to properly sanitize input and passes it to a <code>require()</code> call. This allows attackers to execute JavaScript code on the server. Note that prior version 0.9.9 package <code>next</code> npm package hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 5.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.npmjs.com/advisories/1538">https://www.npmjs.com/advisories/1538</a></li>
<li><a href="https://github.com/advisories/GHSA-5vj8-3v2h-h38v">https://github.com/advisories/GHSA-5vj8-3v2h-h38v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vj8-3v2h-h38v</uri>
        </author>
        <published>2020-09-04T18:04:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[config-shield] Improper Control of Dynamically-Managed Code Resources in config-shield]]></title>
        <id>https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</id>
        <link href="https://github.com/advisories/GHSA-w8h4-vw8f-rvvj"/>
        <updated>2022-04-27T20:27:31.000Z</updated>
        <content type="html"><![CDATA[<p>scripts/cli.js in the GoDaddy node-config-shield (aka Config Shield) package before 0.2.2 for Node.js calls eval when processing a set command. NOTE: the vendor reportedly states that this is not a vulnerability. The set command was not intended for use with untrusted data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26276">https://nvd.nist.gov/vuln/detail/CVE-2021-26276</a></li>
<li><a href="https://github.com/godaddy/node-config-shield/commit/cdba5d3a7accd661ffbc52e208153464bd0d9da6">https://github.com/godaddy/node-config-shield/commit/cdba5d3a7accd661ffbc52e208153464bd0d9da6</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4773">https://advisory.checkmarx.net/advisory/CX-2021-4773</a></li>
<li><a href="https://github.com/advisories/GHSA-w8h4-vw8f-rvvj">https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8h4-vw8f-rvvj</uri>
        </author>
        <published>2021-04-13T15:30:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ejs] Template injection in ejs]]></title>
        <id>https://github.com/advisories/GHSA-phwq-j96m-2c2q</id>
        <link href="https://github.com/advisories/GHSA-phwq-j96m-2c2q"/>
        <updated>2022-04-27T14:36:25.000Z</updated>
        <content type="html"><![CDATA[<p>The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29078">https://nvd.nist.gov/vuln/detail/CVE-2022-29078</a></li>
<li><a href="https://eslam.io/posts/ejs-server-side-template-injection-rce/">https://eslam.io/posts/ejs-server-side-template-injection-rce/</a></li>
<li><a href="https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf">https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf</a></li>
<li><a href="https://github.com/advisories/GHSA-phwq-j96m-2c2q">https://github.com/advisories/GHSA-phwq-j96m-2c2q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phwq-j96m-2c2q</uri>
        </author>
        <published>2022-04-26T00:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[grunt] Path Traversal in Grunt]]></title>
        <id>https://github.com/advisories/GHSA-j383-35pm-c5h4</id>
        <link href="https://github.com/advisories/GHSA-j383-35pm-c5h4"/>
        <updated>2022-04-26T21:51:43.000Z</updated>
        <content type="html"><![CDATA[<p>Grunt prior to version 1.5.2 is vulnerable to path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0436">https://nvd.nist.gov/vuln/detail/CVE-2022-0436</a></li>
<li><a href="https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665">https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665</a></li>
<li><a href="https://huntr.dev/bounties/f55315e9-9f6d-4dbb-8c40-bae50c1ae92b">https://huntr.dev/bounties/f55315e9-9f6d-4dbb-8c40-bae50c1ae92b</a></li>
<li><a href="https://github.com/gruntjs/grunt/pull/1743">https://github.com/gruntjs/grunt/pull/1743</a></li>
<li><a href="https://github.com/gruntjs/grunt/commit/b0ec6e12426fc8d5720dee1702f6a67455c5986c">https://github.com/gruntjs/grunt/commit/b0ec6e12426fc8d5720dee1702f6a67455c5986c</a></li>
<li><a href="https://github.com/advisories/GHSA-j383-35pm-c5h4">https://github.com/advisories/GHSA-j383-35pm-c5h4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j383-35pm-c5h4</uri>
        </author>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[git-interface] Command injection in git-interface]]></title>
        <id>https://github.com/advisories/GHSA-qffw-8wg7-h665</id>
        <link href="https://github.com/advisories/GHSA-qffw-8wg7-h665"/>
        <updated>2022-04-29T17:22:44.000Z</updated>
        <content type="html"><![CDATA[<p>A command injection vulnerability exists in git-interface in the GitHub repository yarkeev/git-interface prior to 2.1.2. If both the git remote and destination directory are provided by user input, then the use of an <code>--upload-pack</code> command-line argument feature of git is also supported for <code>git clone</code>, which would then allow for any operating system command to be spawned by the attacker.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1440">https://nvd.nist.gov/vuln/detail/CVE-2022-1440</a></li>
<li><a href="https://github.com/yarkeev/git-interface/commit/f828aa790016fee3aa667f7b44cf94bf0aa8c60d">https://github.com/yarkeev/git-interface/commit/f828aa790016fee3aa667f7b44cf94bf0aa8c60d</a></li>
<li><a href="https://huntr.dev/bounties/cdc25408-d3c1-4a9d-bb45-33b12a715ca1">https://huntr.dev/bounties/cdc25408-d3c1-4a9d-bb45-33b12a715ca1</a></li>
<li><a href="https://github.com/advisories/GHSA-qffw-8wg7-h665">https://github.com/advisories/GHSA-qffw-8wg7-h665</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qffw-8wg7-h665</uri>
        </author>
        <published>2022-04-23T00:03:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strapi] Unrestricted Upload of File with Dangerous Type in Strapi]]></title>
        <id>https://github.com/advisories/GHSA-9qgm-w87q-hx89</id>
        <link href="https://github.com/advisories/GHSA-9qgm-w87q-hx89"/>
        <updated>2022-04-22T21:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the file upload module of Strapi v4.1.5 allows attackers to execute arbitrary code via a crafted file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27263">https://nvd.nist.gov/vuln/detail/CVE-2022-27263</a></li>
<li><a href="https://www.youtube.com/watch?v=LEeabouqRrg">https://www.youtube.com/watch?v=LEeabouqRrg</a></li>
<li><a href="https://github.com/advisories/GHSA-9qgm-w87q-hx89">https://github.com/advisories/GHSA-9qgm-w87q-hx89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qgm-w87q-hx89</uri>
        </author>
        <published>2022-04-13T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[buttercms] Unrestricted Upload of File with Dangerous Type in ButterCMS]]></title>
        <id>https://github.com/advisories/GHSA-3v5x-qjrp-q2hq</id>
        <link href="https://github.com/advisories/GHSA-3v5x-qjrp-q2hq"/>
        <updated>2022-04-26T18:01:52.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the file upload component of ButterCMS v1.2.8 allows attackers to execute arbitrary code via a crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27260">https://nvd.nist.gov/vuln/detail/CVE-2022-27260</a></li>
<li><a href="https://www.youtube.com/watch?v=Tw8OhtVd-mE">https://www.youtube.com/watch?v=Tw8OhtVd-mE</a></li>
<li><a href="https://github.com/ButterCMS/buttercms-js">https://github.com/ButterCMS/buttercms-js</a></li>
<li><a href="https://github.com/advisories/GHSA-3v5x-qjrp-q2hq">https://github.com/advisories/GHSA-3v5x-qjrp-q2hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v5x-qjrp-q2hq</uri>
        </author>
        <published>2022-04-13T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[madlib-object-utils] Prototype Pollution in madlib-object-utils]]></title>
        <id>https://github.com/advisories/GHSA-pfv6-prqm-85q8</id>
        <link href="https://github.com/advisories/GHSA-pfv6-prqm-85q8"/>
        <updated>2022-04-22T20:50:34.000Z</updated>
        <content type="html"><![CDATA[<p>The package madlib-object-utils before version 0.1.8 is vulnerable to Prototype Pollution via the <code>setValue</code> method, as it allows an attacker to merge object prototypes into it. <em>Note:</em> This vulnerability derives from an incomplete fix of <a href="https://security.snyk.io/vuln/SNYK-JS-MADLIBOBJECTUTILS-598676">CVE-2020-7701</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24279">https://nvd.nist.gov/vuln/detail/CVE-2022-24279</a></li>
<li><a href="https://github.com/Qwerios/madlib-object-utils/commit/8d5d54c11c8fb9a7980a99778329acd13e3ef98f">https://github.com/Qwerios/madlib-object-utils/commit/8d5d54c11c8fb9a7980a99778329acd13e3ef98f</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MADLIBOBJECTUTILS-2388572">https://snyk.io/vuln/SNYK-JS-MADLIBOBJECTUTILS-2388572</a></li>
<li><a href="https://github.com/advisories/GHSA-pfv6-prqm-85q8">https://github.com/advisories/GHSA-pfv6-prqm-85q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfv6-prqm-85q8</uri>
        </author>
        <published>2022-04-16T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] NextAuth.js default redirect callback vulnerable to open redirects]]></title>
        <id>https://github.com/advisories/GHSA-f9wg-5f46-cjmw</id>
        <link href="https://github.com/advisories/GHSA-f9wg-5f46-cjmw"/>
        <updated>2022-04-22T20:49:09.000Z</updated>
        <content type="html"><![CDATA[<p><code>next-auth</code> v3 users before version 3.29.2 are impacted. (We recommend upgrading to v4 in most cases. See our <a href="https://next-auth.js.org/getting-started/upgrade-v4">migration guide</a>).<code>next-auth</code> v4 users before version 4.3.2 are impacted. Upgrading to 3.29.2 or 4.3.2 will patch this vulnerability. If you are not able to upgrade for any reason, you can add a configuration to your <code>callbacks</code> option:</p>
<pre><code class="language-js">// async redirect(url, baseUrl) { // v3
async redirect({ url, baseUrl }) { // v4
    // Allows relative callback URLs
    if (url.startsWith("/")) return new URL(url, baseUrl).toString()
    // Allows callback URLs on the same origin
    else if (new URL(url).origin === baseUrl) return url
    return baseUrl
}
</code></pre>
<p>If you already have a <code>redirect</code> callback, make sure that you match the incoming <code>url</code> origin against the <code>baseUrl</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24858">https://nvd.nist.gov/vuln/detail/CVE-2022-24858</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/commit/6e15bdcb2d93c1ad5ee3889f702607637e79db50">https://github.com/nextauthjs/next-auth/commit/6e15bdcb2d93c1ad5ee3889f702607637e79db50</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.2">https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.2</a></li>
<li><a href="https://next-auth.js.org/configuration/callbacks#redirect-callback">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>
<li><a href="https://next-auth.js.org/getting-started/upgrade-v4">https://next-auth.js.org/getting-started/upgrade-v4</a></li>
<li><a href="https://github.com/advisories/GHSA-f9wg-5f46-cjmw">https://github.com/advisories/GHSA-f9wg-5f46-cjmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9wg-5f46-cjmw</uri>
        </author>
        <published>2022-04-22T20:49:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] NextAuth.js default redirect callback vulnerable to open redirects]]></title>
        <id>https://github.com/advisories/GHSA-f9wg-5f46-cjmw</id>
        <link href="https://github.com/advisories/GHSA-f9wg-5f46-cjmw"/>
        <updated>2022-04-22T20:49:09.000Z</updated>
        <content type="html"><![CDATA[<p><code>next-auth</code> v3 users before version 3.29.2 are impacted. (We recommend upgrading to v4 in most cases. See our <a href="https://next-auth.js.org/getting-started/upgrade-v4">migration guide</a>).<code>next-auth</code> v4 users before version 4.3.2 are impacted. Upgrading to 3.29.2 or 4.3.2 will patch this vulnerability. If you are not able to upgrade for any reason, you can add a configuration to your <code>callbacks</code> option:</p>
<pre><code class="language-js">// async redirect(url, baseUrl) { // v3
async redirect({ url, baseUrl }) { // v4
    // Allows relative callback URLs
    if (url.startsWith("/")) return new URL(url, baseUrl).toString()
    // Allows callback URLs on the same origin
    else if (new URL(url).origin === baseUrl) return url
    return baseUrl
}
</code></pre>
<p>If you already have a <code>redirect</code> callback, make sure that you match the incoming <code>url</code> origin against the <code>baseUrl</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24858">https://nvd.nist.gov/vuln/detail/CVE-2022-24858</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/commit/6e15bdcb2d93c1ad5ee3889f702607637e79db50">https://github.com/nextauthjs/next-auth/commit/6e15bdcb2d93c1ad5ee3889f702607637e79db50</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.2">https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.2</a></li>
<li><a href="https://next-auth.js.org/configuration/callbacks#redirect-callback">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>
<li><a href="https://next-auth.js.org/getting-started/upgrade-v4">https://next-auth.js.org/getting-started/upgrade-v4</a></li>
<li><a href="https://github.com/advisories/GHSA-f9wg-5f46-cjmw">https://github.com/advisories/GHSA-f9wg-5f46-cjmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9wg-5f46-cjmw</uri>
        </author>
        <published>2022-04-22T20:49:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nconf] Prototype Pollution in nconf]]></title>
        <id>https://github.com/advisories/GHSA-6xwr-q98w-rvg7</id>
        <link href="https://github.com/advisories/GHSA-6xwr-q98w-rvg7"/>
        <updated>2022-04-22T20:32:07.000Z</updated>
        <content type="html"><![CDATA[<p>nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21803">https://nvd.nist.gov/vuln/detail/CVE-2022-21803</a></li>
<li><a href="https://github.com/indexzero/nconf/pull/397">https://github.com/indexzero/nconf/pull/397</a></li>
<li><a href="https://github.com/indexzero/nconf/releases/tag/v0.11.4">https://github.com/indexzero/nconf/releases/tag/v0.11.4</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NCONF-2395478">https://snyk.io/vuln/SNYK-JS-NCONF-2395478</a></li>
<li><a href="https://github.com/advisories/GHSA-6xwr-q98w-rvg7">https://github.com/advisories/GHSA-6xwr-q98w-rvg7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6xwr-q98w-rvg7</uri>
        </author>
        <published>2022-04-13T00:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ghost] Arbitrary file upload in Ghost]]></title>
        <id>https://github.com/advisories/GHSA-fvc6-qjp7-m4g4</id>
        <link href="https://github.com/advisories/GHSA-fvc6-qjp7-m4g4"/>
        <updated>2022-04-22T20:29:43.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the file upload module of Ghost v4.39.0 allows attackers to execute arbitrary code via a crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27139">https://nvd.nist.gov/vuln/detail/CVE-2022-27139</a></li>
<li><a href="https://youtu.be/FCqWEvir2wE">https://youtu.be/FCqWEvir2wE</a></li>
<li><a href="https://github.com/advisories/GHSA-fvc6-qjp7-m4g4">https://github.com/advisories/GHSA-fvc6-qjp7-m4g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fvc6-qjp7-m4g4</uri>
        </author>
        <published>2022-04-13T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[payload] Unrestricted Upload of File with Dangerous Type in Payload]]></title>
        <id>https://github.com/advisories/GHSA-w8xh-93qh-35vw</id>
        <link href="https://github.com/advisories/GHSA-w8xh-93qh-35vw"/>
        <updated>2022-04-22T20:29:01.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the file upload module of PayloadCMS v0.15.0 allows attackers to execute arbitrary code via a crafted SVG file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27952">https://nvd.nist.gov/vuln/detail/CVE-2022-27952</a></li>
<li><a href="https://github.com/payloadcms/payload">https://github.com/payloadcms/payload</a></li>
<li><a href="https://www.youtube.com/watch?v=6CfhAxA3xdQ">https://www.youtube.com/watch?v=6CfhAxA3xdQ</a></li>
<li><a href="https://github.com/advisories/GHSA-w8xh-93qh-35vw">https://github.com/advisories/GHSA-w8xh-93qh-35vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8xh-93qh-35vw</uri>
        </author>
        <published>2022-04-13T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fullpage.js] Cross-site Scripting in fullpage.js]]></title>
        <id>https://github.com/advisories/GHSA-h3cq-j957-vhxg</id>
        <link href="https://github.com/advisories/GHSA-h3cq-j957-vhxg"/>
        <updated>2022-04-22T20:26:50.000Z</updated>
        <content type="html"><![CDATA[<p>using fullpage.js you can create a anchor tag . But when put href in anchor then it does not sanitize the url which allow for a break in the context of anchor element and can add our new element.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1330">https://nvd.nist.gov/vuln/detail/CVE-2022-1330</a></li>
<li><a href="https://github.com/alvarotrigo/fullpage.js/commit/e7a5db42711700c8a584e61b5e532a64039fe92b">https://github.com/alvarotrigo/fullpage.js/commit/e7a5db42711700c8a584e61b5e532a64039fe92b</a></li>
<li><a href="https://huntr.dev/bounties/08d2a6d0-772f-4b05-834e-86343f263c35">https://huntr.dev/bounties/08d2a6d0-772f-4b05-834e-86343f263c35</a></li>
<li><a href="https://github.com/alvarotrigo/fullPage.js/pull/4360">https://github.com/alvarotrigo/fullPage.js/pull/4360</a></li>
<li><a href="https://github.com/advisories/GHSA-h3cq-j957-vhxg">https://github.com/advisories/GHSA-h3cq-j957-vhxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3cq-j957-vhxg</uri>
        </author>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fullpage.js] Prototype Pollution in fullpage.js]]></title>
        <id>https://github.com/advisories/GHSA-vpgw-ffh3-648h</id>
        <link href="https://github.com/advisories/GHSA-vpgw-ffh3-648h"/>
        <updated>2022-04-22T20:20:56.000Z</updated>
        <content type="html"><![CDATA[<p>fullPage utils are available to developers using window.fp_utils. They can use these utils for their own use-case (other than fullPage) as well. However, one of the utils deepExtend is vulnerable to Prototype Pollution vulnerability.</p>
<p>Javascript is "prototype" language which means when a new "object" is created, it carries the predefined properties and methods of an "object" with itself like toString, constructor etc. By using prototype-pollution vulnerability, an attacker can overwrite/create the property of that "object" type. If the victim developer has used that property anywhere in the code, then it will have severe effect on the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1295">https://nvd.nist.gov/vuln/detail/CVE-2022-1295</a></li>
<li><a href="https://github.com/alvarotrigo/fullpage.js/commit/bf62492a22e5d296e63c3ed918a42fc5645a0d48">https://github.com/alvarotrigo/fullpage.js/commit/bf62492a22e5d296e63c3ed918a42fc5645a0d48</a></li>
<li><a href="https://huntr.dev/bounties/3b9d450c-24ac-4037-b04d-4d4dafbf593a">https://huntr.dev/bounties/3b9d450c-24ac-4037-b04d-4d4dafbf593a</a></li>
<li><a href="https://github.com/advisories/GHSA-vpgw-ffh3-648h">https://github.com/advisories/GHSA-vpgw-ffh3-648h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpgw-ffh3-648h</uri>
        </author>
        <published>2022-04-12T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tableexport.jquery.plugin] Cross-site Scripting in tableexport.jquery.plugin]]></title>
        <id>https://github.com/advisories/GHSA-j636-crp3-m584</id>
        <link href="https://github.com/advisories/GHSA-j636-crp3-m584"/>
        <updated>2022-04-22T20:17:23.000Z</updated>
        <content type="html"><![CDATA[<p>There is a cross-site scripting vulnerability with default <code>onCellHtmlData</code> function in GitHub repository hhurz/tableexport.jquery.plugin prior to 1.25.0. This can result in transmitting cookies to third-party servers and/or sending data from secure sessions to third-party servers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1291">https://nvd.nist.gov/vuln/detail/CVE-2022-1291</a></li>
<li><a href="https://github.com/hhurz/tableexport.jquery.plugin/commit/dcbaee23cf98328397a153e71556f75202988ec9">https://github.com/hhurz/tableexport.jquery.plugin/commit/dcbaee23cf98328397a153e71556f75202988ec9</a></li>
<li><a href="https://huntr.dev/bounties/49a14371-6058-47dd-9801-ec38a7459fc5">https://huntr.dev/bounties/49a14371-6058-47dd-9801-ec38a7459fc5</a></li>
<li><a href="https://github.com/advisories/GHSA-j636-crp3-m584">https://github.com/advisories/GHSA-j636-crp3-m584</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j636-crp3-m584</uri>
        </author>
        <published>2022-04-11T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convict] Prototype Pollution in convict]]></title>
        <id>https://github.com/advisories/GHSA-x2w5-725j-gf2g</id>
        <link href="https://github.com/advisories/GHSA-x2w5-725j-gf2g"/>
        <updated>2022-04-20T16:21:09.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker can inject attributes that are used in other components and override existing attributes with ones that have incompatible type, which may lead to a crash.</p>
<p>The main use case of Convict is for handling server-side configurations written by the admins owning the servers, and not random users. So it's unlikely that an admin would deliberately sabotage their own server. Still a situation can happen where an admin not knowledgeable about JavaScript could be tricked by an attacker into writing the malicious JavaScript code into some config files.</p>
<p>The problem is patched in <code>convict@6.2.2</code>. Users should upgrade to <code>convict@6.2.2</code>. There is no way for users to fix or remediate the vulnerability without upgrading.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mozilla/node-convict/security/advisories/GHSA-x2w5-725j-gf2g">https://github.com/mozilla/node-convict/security/advisories/GHSA-x2w5-725j-gf2g</a></li>
<li><a href="https://github.com/mozilla/node-convict/pull/384">https://github.com/mozilla/node-convict/pull/384</a></li>
<li><a href="https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880">https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880</a></li>
<li><a href="https://github.com/mozilla/node-convict/releases/tag/v6.2.2">https://github.com/mozilla/node-convict/releases/tag/v6.2.2</a></li>
<li><a href="https://www.huntr.dev/bounties/1-npm-convict/">https://www.huntr.dev/bounties/1-npm-convict/</a></li>
<li><a href="https://github.com/advisories/GHSA-x2w5-725j-gf2g">https://github.com/advisories/GHSA-x2w5-725j-gf2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x2w5-725j-gf2g</uri>
        </author>
        <published>2022-04-20T16:21:03.000Z</published>
    </entry>
</feed>