<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-04-28T22:01:08.851Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[typed-rest-client] Potential leak of authentication data to 3rd parties]]></title>
        <id>https://github.com/advisories/GHSA-558p-m34m-vpmq</id>
        <link href="https://github.com/advisories/GHSA-558p-m34m-vpmq"/>
        <updated>2023-04-27T14:31:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of typed-rest-client library version 1.7.3 or lower are vulnerable to leak authentication data to 3rd parties. </p>
<p>The flow of the vulnerability is as follows:</p>
<ol>
<li>Send any request with <code>BasicCredentialHandler</code>, <code>BearerCredentialHandler</code> or <code>PersonalAccessTokenCredentialHandler</code> </li>
<li>The target host may return a redirection (3xx), with a link to a second host.</li>
<li>The next request will use the credentials to authenticate with the second host, by setting the <code>Authorization</code> header.</li>
</ol>
<p>The expected behavior is that the next request will <em>NOT</em> set the <code>Authorization</code> header.</p>
<h3 id="patches">Patches</h3>
<p>The problem was fixed on April 1st 2020.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround.</p>
<h3 id="references">References</h3>
<p>This is similar to the following issues in nature:</p>
<ol>
<li><a href="https://curl.haxx.se/docs/CVE-2018-1000007.html">HTTP authentication leak in redirects</a> - I used the same solution as CURL did.</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000007">CVE-2018-1000007</a>.</li>
</ol>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/microsoft/typed-rest-client/security/advisories/GHSA-558p-m34m-vpmq">https://github.com/microsoft/typed-rest-client/security/advisories/GHSA-558p-m34m-vpmq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30846">https://nvd.nist.gov/vuln/detail/CVE-2023-30846</a></li>
<li><a href="https://github.com/microsoft/typed-rest-client/pull/207">https://github.com/microsoft/typed-rest-client/pull/207</a></li>
<li><a href="https://github.com/microsoft/typed-rest-client/commit/f9ff755631b982ee1303dfc3e3c823d0d31233e8">https://github.com/microsoft/typed-rest-client/commit/f9ff755631b982ee1303dfc3e3c823d0d31233e8</a></li>
<li><a href="https://github.com/advisories/GHSA-558p-m34m-vpmq">https://github.com/advisories/GHSA-558p-m34m-vpmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-558p-m34m-vpmq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-27T14:02:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vconsole] Prototype Pollution in vConsole]]></title>
        <id>https://github.com/advisories/GHSA-f737-3fh6-jf6w</id>
        <link href="https://github.com/advisories/GHSA-f737-3fh6-jf6w"/>
        <updated>2023-04-27T13:58:24.000Z</updated>
        <content type="html"><![CDATA[<p>vConsole v3.15.0 was discovered to contain a prototype pollution due to incorrect key and value resolution in setOptions in core.ts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30363">https://nvd.nist.gov/vuln/detail/CVE-2023-30363</a></li>
<li><a href="https://github.com/Tencent/vConsole/issues/616">https://github.com/Tencent/vConsole/issues/616</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/1321.html">https://cwe.mitre.org/data/definitions/1321.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f737-3fh6-jf6w">https://github.com/advisories/GHSA-f737-3fh6-jf6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f737-3fh6-jf6w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-26T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[payload] Hidden fields can be leaked on readable collections in Payload]]></title>
        <id>https://github.com/advisories/GHSA-35jj-vqcf-f2jf</id>
        <link href="https://github.com/advisories/GHSA-35jj-vqcf-f2jf"/>
        <updated>2023-04-26T22:13:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="details">Details</h3>
<p>If a user has access to documents that contain hidden fields or fields they do not have access to, the user could reverse-engineer those values via brute force.</p>
<p>Affected versions:  &lt; 1.7.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are unable to update, you can write a <code>beforeOperation</code> hook to remove <code>where</code> queries that attempt to access hidden field data.</p>
<h3 id="detecting-compromise">Detecting Compromise</h3>
<p>Monitor your instance for brute-force style requests against your instance using <code>where</code> queries.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/payloadcms/payload/security/advisories/GHSA-35jj-vqcf-f2jf">https://github.com/payloadcms/payload/security/advisories/GHSA-35jj-vqcf-f2jf</a></li>
<li><a href="https://github.com/payloadcms/payload/releases/tag/v1.7.0">https://github.com/payloadcms/payload/releases/tag/v1.7.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30843">https://nvd.nist.gov/vuln/detail/CVE-2023-30843</a></li>
<li><a href="https://github.com/advisories/GHSA-35jj-vqcf-f2jf">https://github.com/advisories/GHSA-35jj-vqcf-f2jf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35jj-vqcf-f2jf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-26T19:45:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yaml] Uncaught Exception in yaml]]></title>
        <id>https://github.com/advisories/GHSA-f9xv-q969-pqx4</id>
        <link href="https://github.com/advisories/GHSA-f9xv-q969-pqx4"/>
        <updated>2023-04-25T19:57:07.000Z</updated>
        <content type="html"><![CDATA[<p>Uncaught Exception in GitHub repository eemeli/yaml starting at version 2.0.0-5 and prior to 2.2.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2251">https://nvd.nist.gov/vuln/detail/CVE-2023-2251</a></li>
<li><a href="https://github.com/eemeli/yaml/commit/984f5781ffd807e58cad3b5c8da1f940dab75fba">https://github.com/eemeli/yaml/commit/984f5781ffd807e58cad3b5c8da1f940dab75fba</a></li>
<li><a href="https://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c">https://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c</a></li>
<li><a href="https://github.com/advisories/GHSA-f9xv-q969-pqx4">https://github.com/advisories/GHSA-f9xv-q969-pqx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9xv-q969-pqx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-24T15:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-react-sdk] HTML injection in search results via plaintext message highlighting]]></title>
        <id>https://github.com/advisories/GHSA-xv83-x443-7rmw</id>
        <link href="https://github.com/advisories/GHSA-xv83-x443-7rmw"/>
        <updated>2023-04-25T21:48:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Plain text messages containing HTML tags are rendered as HTML in the search results. To exploit this, an attacker needs to trick a user into searching for a specific message containing an HTML injection payload. No cross-site scripting attack is possible due to the hardcoded content security policy.</p>
<h3 id="patches">Patches</h3>
<p>Version 3.71.0 of the SDK patches over the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Restarting the client will clear the HTML injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-xv83-x443-7rmw">https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-xv83-x443-7rmw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30609">https://nvd.nist.gov/vuln/detail/CVE-2023-30609</a></li>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/commit/bf182bc94556849d7acdfa0e5fdea2aa129ea826">https://github.com/matrix-org/matrix-react-sdk/commit/bf182bc94556849d7acdfa0e5fdea2aa129ea826</a></li>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.71.0">https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.71.0</a></li>
<li><a href="https://github.com/advisories/GHSA-xv83-x443-7rmw">https://github.com/advisories/GHSA-xv83-x443-7rmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv83-x443-7rmw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-25T19:48:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dawnsparks-node-tesseract] Remote code execution in dawnsparks-node-tesseract]]></title>
        <id>https://github.com/advisories/GHSA-88qf-5f3v-pm6m</id>
        <link href="https://github.com/advisories/GHSA-88qf-5f3v-pm6m"/>
        <updated>2023-04-24T22:45:56.000Z</updated>
        <content type="html"><![CDATA[<p>dawnsparks-node-tesseract before 0.4.1 was discovered to contain a remote code execution (RCE) vulnerability via the child_process function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29566">https://nvd.nist.gov/vuln/detail/CVE-2023-29566</a></li>
<li><a href="https://github.com/rona-dinihari/dawnsparks-node-tesseract/commit/81d1664f0b9fe521534acfae1d5b9c40127b36c1">https://github.com/rona-dinihari/dawnsparks-node-tesseract/commit/81d1664f0b9fe521534acfae1d5b9c40127b36c1</a></li>
<li><a href="https://github.com/omnitaint/Vulnerability-Reports/blob/ec3645003c7f8996459b5b24c722474adc2d599f/reports/dawnsparks-node-tesseract/report.md">https://github.com/omnitaint/Vulnerability-Reports/blob/ec3645003c7f8996459b5b24c722474adc2d599f/reports/dawnsparks-node-tesseract/report.md</a></li>
<li><a href="https://github.com/rona-dinihari/dawnsparks-node-tesseract">https://github.com/rona-dinihari/dawnsparks-node-tesseract</a></li>
<li><a href="https://www.npmjs.com/package/dawnsparks-node-tesseract">https://www.npmjs.com/package/dawnsparks-node-tesseract</a></li>
<li><a href="https://github.com/advisories/GHSA-88qf-5f3v-pm6m">https://github.com/advisories/GHSA-88qf-5f3v-pm6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-88qf-5f3v-pm6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-24T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[broccoli-compass] Remote code execution in broccoli-compass]]></title>
        <id>https://github.com/advisories/GHSA-wq8f-xmq3-5vq9</id>
        <link href="https://github.com/advisories/GHSA-wq8f-xmq3-5vq9"/>
        <updated>2023-04-24T22:45:05.000Z</updated>
        <content type="html"><![CDATA[<p>broccoli-compass v0.2.4 was discovered to contain a remote code execution (RCE) vulnerability via the child_process function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27848">https://nvd.nist.gov/vuln/detail/CVE-2023-27848</a></li>
<li><a href="https://github.com/omnitaint/Vulnerability-Reports/blob/9d65add2bca71ed6d6b2e281ee6790a12504ff8e/reports/broccoli-compass/report.md">https://github.com/omnitaint/Vulnerability-Reports/blob/9d65add2bca71ed6d6b2e281ee6790a12504ff8e/reports/broccoli-compass/report.md</a></li>
<li><a href="https://www.npmjs.com/package/broccoli-compass">https://www.npmjs.com/package/broccoli-compass</a></li>
<li><a href="https://github.com/advisories/GHSA-wq8f-xmq3-5vq9">https://github.com/advisories/GHSA-wq8f-xmq3-5vq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq8f-xmq3-5vq9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-24T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xlsx] Prototype Pollution in sheetJS]]></title>
        <id>https://github.com/advisories/GHSA-4r6h-8v6p-xvw6</id>
        <link href="https://github.com/advisories/GHSA-4r6h-8v6p-xvw6"/>
        <updated>2023-04-24T22:40:46.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of SheetJS CE through 0.19.2 are vulnerable to "Prototype Pollution" when reading specially crafted files. Workflows that do not read arbitrary files (for example, exporting data to spreadsheet files) are unaffected. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30533">https://nvd.nist.gov/vuln/detail/CVE-2023-30533</a></li>
<li><a href="https://cdn.sheetjs.com/advisories/CVE-2023-30533">https://cdn.sheetjs.com/advisories/CVE-2023-30533</a></li>
<li><a href="https://git.sheetjs.com/sheetjs/sheetjs/src/branch/master/CHANGELOG.md">https://git.sheetjs.com/sheetjs/sheetjs/src/branch/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-4r6h-8v6p-xvw6">https://github.com/advisories/GHSA-4r6h-8v6p-xvw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4r6h-8v6p-xvw6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-24T09:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-users-permissions] Strapi does not verify the access or ID tokens issued during the OAuth flow]]></title>
        <id>https://github.com/advisories/GHSA-583x-23h9-f5w7</id>
        <link href="https://github.com/advisories/GHSA-583x-23h9-f5w7"/>
        <updated>2023-04-24T18:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>Strapi 3.2.1 until 4.6.0 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication. A remote attacker could forge an ID token that is signed using the 'None' type algorithm to bypass authentication and impersonate any user that use AWS Cognito for authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22893">https://nvd.nist.gov/vuln/detail/CVE-2023-22893</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/strapi/strapi/commit/46f8f98378338f18b5c6139d0157a8f71bf4de83">https://github.com/strapi/strapi/commit/46f8f98378338f18b5c6139d0157a8f71bf4de83</a></li>
<li><a href="https://github.com/strapi/strapi/commit/8bbbd7383a20bb7cb163c8b462baffee559e994f">https://github.com/strapi/strapi/commit/8bbbd7383a20bb7cb163c8b462baffee559e994f</a></li>
<li><a href="https://github.com/strapi/strapi/commit/eeab43b57707d7ef275076d27be6eabc72bd71a7">https://github.com/strapi/strapi/commit/eeab43b57707d7ef275076d27be6eabc72bd71a7</a></li>
<li><a href="https://github.com/strapi/strapi/blob/v4.5.6/packages/plugins/users-permissions/server/services/providers-registry.js">https://github.com/strapi/strapi/blob/v4.5.6/packages/plugins/users-permissions/server/services/providers-registry.js</a></li>
<li><a href="https://github.com/advisories/GHSA-583x-23h9-f5w7">https://github.com/advisories/GHSA-583x-23h9-f5w7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-583x-23h9-f5w7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-19T18:33:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] Session fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</id>
        <link href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9"/>
        <updated>2023-04-24T15:56:25.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using <code>@fastify/passport</code> for user authentication, in combination with <code>@fastify/session</code> as the underlying session management mechanism, are vulnerable to <a href="https://owasp.org/www-community/attacks/Session_fixation">session fixation attacks</a> from network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p>fastify applications rely on the <code>@fastify/passport</code> library for user authentication. The login and user validation are performed by the <code>authenticate</code> function. When executing this function, the <code>sessionId</code> is preserved between the pre-login and the authenticated session. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can hijack the victim's session by tossing a valid <code>sessionId</code> cookie in the victim's browser and waiting for the victim to log in on the website.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> regenerate <code>sessionId</code> upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29019">https://nvd.nist.gov/vuln/detail/CVE-2023-29019</a></li>
<li><a href="https://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11">https://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11</a></li>
<li><a href="https://owasp.org/www-community/attacks/Session_fixation">https://owasp.org/www-community/attacks/Session_fixation</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-21T22:33:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] Session fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</id>
        <link href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9"/>
        <updated>2023-04-24T15:56:25.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using <code>@fastify/passport</code> for user authentication, in combination with <code>@fastify/session</code> as the underlying session management mechanism, are vulnerable to <a href="https://owasp.org/www-community/attacks/Session_fixation">session fixation attacks</a> from network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p>fastify applications rely on the <code>@fastify/passport</code> library for user authentication. The login and user validation are performed by the <code>authenticate</code> function. When executing this function, the <code>sessionId</code> is preserved between the pre-login and the authenticated session. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can hijack the victim's session by tossing a valid <code>sessionId</code> cookie in the victim's browser and waiting for the victim to log in on the website.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> regenerate <code>sessionId</code> upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29019">https://nvd.nist.gov/vuln/detail/CVE-2023-29019</a></li>
<li><a href="https://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11">https://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11</a></li>
<li><a href="https://owasp.org/www-community/attacks/Session_fixation">https://owasp.org/www-community/attacks/Session_fixation</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3m-ppvx-xgw9">https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3m-ppvx-xgw9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-21T22:33:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] CSRF token fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</id>
        <link href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw"/>
        <updated>2023-04-24T15:56:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library, when combined with <code>@fastify/passport</code>, can be bypassed by network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p><code>fastify/csrf-protection</code> implements the <a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">synchronizer token pattern</a> (using plugins <code>@fastify/session</code> and <code>@fastify/secure-session</code>) by storing a random value used for CSRF token generation in the <code>_csrf</code> attribute of a user's session.</p>
<p>The <code>@fastify/passport</code> library does not clear the session object upon authentication, preserving the <code>_csrf</code> attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> include the configuration options</p>
<ul>
<li><code>clearSessionOnLogin (default: true)</code> and</li>
<li><code>clearSessionIgnoreFields (default: ['session'])</code></li>
</ul>
<p>to clear all the session attributes by default, preserving those explicitly defined in <code>clearSessionIgnoreFields</code>.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29020">https://nvd.nist.gov/vuln/detail/CVE-2023-29020</a></li>
<li><a href="https://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d">https://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern</a></li>
<li><a href="https://owasp.org/www-community/attacks/csrf">https://owasp.org/www-community/attacks/csrf</a></li>
<li><a href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-21T22:32:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/passport] CSRF token fixation in fastify-passport]]></title>
        <id>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</id>
        <link href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw"/>
        <updated>2023-04-24T15:56:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library, when combined with <code>@fastify/passport</code>, can be bypassed by network and same-site attackers.</p>
<h2 id="details">Details</h2>
<p><code>fastify/csrf-protection</code> implements the <a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">synchronizer token pattern</a> (using plugins <code>@fastify/session</code> and <code>@fastify/secure-session</code>) by storing a random value used for CSRF token generation in the <code>_csrf</code> attribute of a user's session.</p>
<p>The <code>@fastify/passport</code> library does not clear the session object upon authentication, preserving the <code>_csrf</code> attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and <a href="https://canitakeyoursubdomain.name/">same-site attackers</a> can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.</p>
<h2 id="fix">Fix</h2>
<p>As a solution, newer versions of <code>@fastify/passport</code> include the configuration options</p>
<ul>
<li><code>clearSessionOnLogin (default: true)</code> and</li>
<li><code>clearSessionIgnoreFields (default: ['session'])</code></li>
</ul>
<p>to clear all the session attributes by default, preserving those explicitly defined in <code>clearSessionIgnoreFields</code>.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29020">https://nvd.nist.gov/vuln/detail/CVE-2023-29020</a></li>
<li><a href="https://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d">https://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern">https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern</a></li>
<li><a href="https://owasp.org/www-community/attacks/csrf">https://owasp.org/www-community/attacks/csrf</a></li>
<li><a href="https://github.com/advisories/GHSA-2ccf-ffrj-m4qw">https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2ccf-ffrj-m4qw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-21T22:32:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@nuxtlabs/github-module] @nuxtlabs/github-module made Use of Hard-coded Credentials]]></title>
        <id>https://github.com/advisories/GHSA-fp2w-g92g-fgq4</id>
        <link href="https://github.com/advisories/GHSA-fp2w-g92g-fgq4"/>
        <updated>2023-04-21T20:26:50.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://nuxt.com">https://nuxt.com</a> had a hardcoded GitHub token in the source code of the page. This token had access to multiple repositories under <code>nuxt</code>, <code>nuxtlabs</code> and <code>nuxt-themes</code> GitHub organizations. A patch in version 1.6.2 fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2138">https://nvd.nist.gov/vuln/detail/CVE-2023-2138</a></li>
<li><a href="https://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e">https://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e</a></li>
<li><a href="https://huntr.dev/bounties/65096ef9-eafc-49da-b49a-5b88c0203ca6">https://huntr.dev/bounties/65096ef9-eafc-49da-b49a-5b88c0203ca6</a></li>
<li><a href="https://github.com/nuxtlabs/github-module/releases/tag/v1.6.2">https://github.com/nuxtlabs/github-module/releases/tag/v1.6.2</a></li>
<li><a href="https://github.com/advisories/GHSA-fp2w-g92g-fgq4">https://github.com/advisories/GHSA-fp2w-g92g-fgq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp2w-g92g-fgq4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-18T03:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sequelize] SQL Injection via GeoJSON in sequelize]]></title>
        <id>https://github.com/advisories/GHSA-5v9h-q3gj-c32x</id>
        <link href="https://github.com/advisories/GHSA-5v9h-q3gj-c32x"/>
        <updated>2023-04-21T18:34:24.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>sequelize</code> are vulnerable to SQL Injection in Models that have fields with the <code>GEOMETRY</code> DataType. This vulnerability occurs because single quotes in document values are not escaped for GeoJSON documents using <code>ST_GeomFromGeoJSON</code>, and MySQL GeoJSON documents using <code>GeomFromText</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 3.23.6 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sequelize/sequelize/issues/6194">https://github.com/sequelize/sequelize/issues/6194</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1000225">https://nvd.nist.gov/vuln/detail/CVE-2016-1000225</a></li>
<li><a href="https://snyk.io/vuln/npm:sequelize:20160718">https://snyk.io/vuln/npm:sequelize:20160718</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/6302">https://github.com/sequelize/sequelize/pull/6302</a></li>
<li><a href="https://github.com/sequelize/sequelize/pull/6306">https://github.com/sequelize/sequelize/pull/6306</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/14e3deaf3ad27f12900e5275db1d448844c9de3e">https://github.com/sequelize/sequelize/commit/14e3deaf3ad27f12900e5275db1d448844c9de3e</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/18ac91040d9c57351d26ba998f460e214255b704">https://github.com/sequelize/sequelize/commit/18ac91040d9c57351d26ba998f460e214255b704</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/562d52585902090f4e53eb21c61314098c29d795">https://github.com/sequelize/sequelize/commit/562d52585902090f4e53eb21c61314098c29d795</a></li>
<li><a href="https://github.com/sequelize/sequelize/commit/f93af43a1d86400487f5e3d9762f1a4b7cf6b1e1">https://github.com/sequelize/sequelize/commit/f93af43a1d86400487f5e3d9762f1a4b7cf6b1e1</a></li>
<li><a href="https://github.com/advisories/GHSA-5v9h-q3gj-c32x">https://github.com/advisories/GHSA-5v9h-q3gj-c32x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5v9h-q3gj-c32x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-09-01T15:27:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nunjucks] Nunjucks autoescape bypass leads to cross site scripting]]></title>
        <id>https://github.com/advisories/GHSA-x77j-w7wf-fjmw</id>
        <link href="https://github.com/advisories/GHSA-x77j-w7wf-fjmw"/>
        <updated>2023-04-20T21:19:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Nunjucks versions prior to version 3.2.4, it was possible to bypass the restrictions which are provided by the autoescape functionality. If there are two user-controlled parameters on the same line used in the views, it was possible to inject cross site scripting payloads using the backslash <code>\</code> character.</p>
<h4 id="example">Example</h4>
<p>If the user-controlled parameters were used in the views similar to the following:</p>
<pre><code>&lt;script&gt;
let testObject = { lang: '{{ lang }}', place: '{{ place }}' };
&lt;/script&gt;
</code></pre>
<p>It is possible to inject XSS payload using the below parameters:</p>
<pre><code>https://&lt;application-url&gt;/?lang=jp\&amp;place=};alert(document.domain)//
</code></pre>
<h3 id="patches">Patches</h3>
<p>The issue was patched in version 3.2.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1825980">https://bugzilla.mozilla.org/show_bug.cgi?id=1825980</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw">https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw</a></li>
<li><a href="https://github.com/mozilla/nunjucks/pull/1437">https://github.com/mozilla/nunjucks/pull/1437</a></li>
<li><a href="https://github.com/mozilla/nunjucks/commit/ec16d210e7e13f862eccdb0bc9af9f60ff6749d6">https://github.com/mozilla/nunjucks/commit/ec16d210e7e13f862eccdb0bc9af9f60ff6749d6</a></li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1825980">https://bugzilla.mozilla.org/show_bug.cgi?id=1825980</a></li>
<li><a href="https://github.com/mozilla/nunjucks/releases/tag/v3.2.4">https://github.com/mozilla/nunjucks/releases/tag/v3.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-x77j-w7wf-fjmw">https://github.com/advisories/GHSA-x77j-w7wf-fjmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x77j-w7wf-fjmw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:19:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/csrf-protection] Bypass of CSRF protection in the presence of predictable userInfo]]></title>
        <id>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</id>
        <link href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw"/>
        <updated>2023-04-20T21:18:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library in combination with <code>@fastify/cookie</code> can be bypassed from network and same-site attackers under certain conditions.</p>
<p><code>@fastify/csrf-protection</code> supports an optional <code>userInfo</code> parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for <a href="https://www.cvedetails.com/cve/CVE-2021-29624">CVE-2021-29624</a>. Whenever <code>userInfo</code> parameter is missing, or its value can be predicted for the target user account, network and <a href="https://canitakeyoursubdomain.name/">same-site</a> attackers can 1. fixate a <code>_csrf</code> cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.</p>
<p>As a fix, <code>@fastify/csrf-protection</code> starting from version 6.3.0 (and v4.1.0) includes a server-defined secret <code>hmacKey</code> that cryptographically binds the CSRF token to the value of the <code>_csrf</code> cookie and the <code>userInfo</code> parameter, making tokens non-spoofable by attackers. This protection is effective as long as the <code>userInfo</code> parameter is unique for each user.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in version 6.3.0 and v4.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, developers can use a random, non-predictable <code>userInfo</code> parameter for each user.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8">https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27495">https://nvd.nist.gov/vuln/detail/CVE-2023-27495</a></li>
<li><a href="https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058">https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v4.1.0">https://github.com/fastify/csrf-protection/releases/tag/v4.1.0</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v6.3.0">https://github.com/fastify/csrf-protection/releases/tag/v6.3.0</a></li>
<li><a href="https://www.cvedetails.com/cve/CVE-2021-29624">https://www.cvedetails.com/cve/CVE-2021-29624</a></li>
<li><a href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:18:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/csrf-protection] Bypass of CSRF protection in the presence of predictable userInfo]]></title>
        <id>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</id>
        <link href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw"/>
        <updated>2023-04-20T21:18:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<p>The <a href="https://owasp.org/www-community/attacks/csrf">CSRF</a> protection enforced by the <code>@fastify/csrf-protection</code> library in combination with <code>@fastify/cookie</code> can be bypassed from network and same-site attackers under certain conditions.</p>
<p><code>@fastify/csrf-protection</code> supports an optional <code>userInfo</code> parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for <a href="https://www.cvedetails.com/cve/CVE-2021-29624">CVE-2021-29624</a>. Whenever <code>userInfo</code> parameter is missing, or its value can be predicted for the target user account, network and <a href="https://canitakeyoursubdomain.name/">same-site</a> attackers can 1. fixate a <code>_csrf</code> cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.</p>
<p>As a fix, <code>@fastify/csrf-protection</code> starting from version 6.3.0 (and v4.1.0) includes a server-defined secret <code>hmacKey</code> that cryptographically binds the CSRF token to the value of the <code>_csrf</code> cookie and the <code>userInfo</code> parameter, making tokens non-spoofable by attackers. This protection is effective as long as the <code>userInfo</code> parameter is unique for each user.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in version 6.3.0 and v4.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, developers can use a random, non-predictable <code>userInfo</code> parameter for each user.</p>
<h2 id="credits">Credits</h2>
<ul>
<li>Pedro Adão (@pedromigueladao), <a href="https://tecnico.ulisboa.pt/">Instituto Superior Técnico, University of Lisbon</a></li>
<li>Marco Squarcina (@lavish), <a href="https://secpriv.wien/">Security &amp; Privacy Research Unit, TU Wien</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
<li><a href="https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8">https://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27495">https://nvd.nist.gov/vuln/detail/CVE-2023-27495</a></li>
<li><a href="https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058">https://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v4.1.0">https://github.com/fastify/csrf-protection/releases/tag/v4.1.0</a></li>
<li><a href="https://github.com/fastify/csrf-protection/releases/tag/v6.3.0">https://github.com/fastify/csrf-protection/releases/tag/v6.3.0</a></li>
<li><a href="https://www.cvedetails.com/cve/CVE-2021-29624">https://www.cvedetails.com/cve/CVE-2021-29624</a></li>
<li><a href="https://github.com/advisories/GHSA-qrgf-9gpc-vrxw">https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrgf-9gpc-vrxw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:18:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eslint-detailed-reporter] eslint-detailed-reporter vulnerable to cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-4xr4-89m5-46c7</id>
        <link href="https://github.com/advisories/GHSA-4xr4-89m5-46c7"/>
        <updated>2023-04-20T20:34:40.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in mportuga eslint-detailed-reporter up to 0.9.0 and classified as problematic. Affected by this issue is the function renderIssue in the library lib/template-generator.js. The manipulation of the argument message leads to cross site scripting. The attack may be launched remotely. The name of the patch is 505c190efd4905990db6207863bdcbd9b1d7e1bd. It is recommended to apply a patch to fix this issue. VDB-226310 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4942">https://nvd.nist.gov/vuln/detail/CVE-2022-4942</a></li>
<li><a href="https://github.com/mportuga/eslint-detailed-reporter/pull/46">https://github.com/mportuga/eslint-detailed-reporter/pull/46</a></li>
<li><a href="https://github.com/mportuga/eslint-detailed-reporter/commit/505c190efd4905990db6207863bdcbd9b1d7e1bd">https://github.com/mportuga/eslint-detailed-reporter/commit/505c190efd4905990db6207863bdcbd9b1d7e1bd</a></li>
<li><a href="https://vuldb.com/?ctiid.226310">https://vuldb.com/?ctiid.226310</a></li>
<li><a href="https://vuldb.com/?id.226310">https://vuldb.com/?id.226310</a></li>
<li><a href="https://github.com/advisories/GHSA-4xr4-89m5-46c7">https://github.com/advisories/GHSA-4xr4-89m5-46c7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xr4-89m5-46c7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-04-20T06:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-plugin-sharp] Path traversal vulnerability in gatsby-plugin-sharp]]></title>
        <id>https://github.com/advisories/GHSA-h2pm-378c-pcxx</id>
        <link href="https://github.com/advisories/GHSA-h2pm-378c-pcxx"/>
        <updated>2023-04-20T19:05:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (<code>gatsby develop</code>).</p>
<p>The following steps can be used to reproduce the vulnerability:</p>
<pre><code># Create a new Gatsby project, and install gatsby-plugin-sharp
$ npm init gatsby
$ cd my-gatsby-site
$ npm install gatsby-plugin-sharp


# Add the plugin to gatsby-config.js
module.exports = {
  plugins: [
    {
      resolve: `gatsby-plugin-sharp`,
    },
  ]
}

# Start the Gatsby develop server
$ gatsby develop

# Execute the path traversal vulnerability
$ curl "http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
</code></pre>
<p>It should be noted that by default <code>gatsby develop</code> is only accessible via the localhost <code>127.0.0.1</code>, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as <code>--host 0.0.0.0</code>, <code>-H 0.0.0.0</code>, or the <code>GATSBY_HOST=0.0.0.0</code> environment variable.</p>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-plugin-sharp@5.8.1</code> and <code>gatsby-plugin-sharp@4.25.1</code> which mitigates the issue by ensuring that included paths remain within the project directory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As stated above, by default <code>gatsby develop</code> is only exposed to the localhost <code>127.0.0.1</code>.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.</p>
<p>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Patrick Rombouts and Bart Veneman [drukwerkdeal.nl] for bringing the issue to our attention.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30548">https://nvd.nist.gov/vuln/detail/CVE-2023-30548</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b">https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b</a></li>
<li><a href="https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e">https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e</a></li>
<li><a href="https://github.com/advisories/GHSA-h2pm-378c-pcxx">https://github.com/advisories/GHSA-h2pm-378c-pcxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h2pm-378c-pcxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T19:05:34.000Z</published>
    </entry>
</feed>