<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-03-13T12:01:46.280Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik] builderio/qwik is vulnerable to code injection]]></title>
        <id>https://github.com/advisories/GHSA-9wf9-qvvp-2929</id>
        <link href="https://github.com/advisories/GHSA-9wf9-qvvp-2929"/>
        <updated>2023-03-10T22:28:41.000Z</updated>
        <content type="html"><![CDATA[<p>Code Injection in GitHub repository builderio/qwik prior to 0.21.0. The Function deserializer can be accessed using the pureServerFunction feature. This allows any Javascript code to be run by node.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1283">https://nvd.nist.gov/vuln/detail/CVE-2023-1283</a></li>
<li><a href="https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66">https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66</a></li>
<li><a href="https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8">https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8</a></li>
<li><a href="https://github.com/advisories/GHSA-9wf9-qvvp-2929">https://github.com/advisories/GHSA-9wf9-qvvp-2929</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wf9-qvvp-2929</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-09T00:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@stoqey/gnuplot] stoqey/gnuplot is vulnerable to command injection]]></title>
        <id>https://github.com/advisories/GHSA-795w-7426-m94j</id>
        <link href="https://github.com/advisories/GHSA-795w-7426-m94j"/>
        <updated>2023-03-10T21:52:20.000Z</updated>
        <content type="html"><![CDATA[<p>An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33360">https://nvd.nist.gov/vuln/detail/CVE-2021-33360</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4811/">https://advisory.checkmarx.net/advisory/CX-2021-4811/</a></li>
<li><a href="https://github.com/stoqey/gnuplot/blob/cd76060a15f58348baeef1c5fd867ce856515949/src/index.ts#L211-L217">https://github.com/stoqey/gnuplot/blob/cd76060a15f58348baeef1c5fd867ce856515949/src/index.ts#L211-L217</a></li>
<li><a href="https://github.com/advisories/GHSA-795w-7426-m94j">https://github.com/advisories/GHSA-795w-7426-m94j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-795w-7426-m94j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T18:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[set-value] Prototype Pollution in set-value]]></title>
        <id>https://github.com/advisories/GHSA-4jqc-8m5r-9rpr</id>
        <link href="https://github.com/advisories/GHSA-4jqc-8m5r-9rpr"/>
        <updated>2023-03-10T05:05:42.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package <code>set-value</code> before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23440">https://nvd.nist.gov/vuln/detail/CVE-2021-23440</a></li>
<li><a href="https://github.com/jonschlinkert/set-value/pull/33">https://github.com/jonschlinkert/set-value/pull/33</a></li>
<li><a href="https://github.com/jonschlinkert/set-value/commit/7cf8073bb06bf0c15e08475f9f952823b4576452">https://github.com/jonschlinkert/set-value/commit/7cf8073bb06bf0c15e08475f9f952823b4576452</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1584212">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1584212</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-SETVALUE-1540541">https://snyk.io/vuln/SNYK-JS-SETVALUE-1540541</a></li>
<li><a href="https://www.huntr.dev/bounties/2eae1159-01de-4f82-a177-7478a408c4a2/">https://www.huntr.dev/bounties/2eae1159-01de-4f82-a177-7478a408c4a2/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://github.com/jonschlinkert/set-value/pull/33/commits/383b72d47c74a55ae8b6e231da548f9280a4296a">https://github.com/jonschlinkert/set-value/pull/33/commits/383b72d47c74a55ae8b6e231da548f9280a4296a</a></li>
<li><a href="https://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad">https://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad</a></li>
<li><a href="https://github.com/advisories/GHSA-4jqc-8m5r-9rpr">https://github.com/advisories/GHSA-4jqc-8m5r-9rpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jqc-8m5r-9rpr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-09-13T20:09:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-bluetooth] node-bluetooth is vulnerable to Buffer Overflow via the findSerialPortChannel method due to improper user input length validation]]></title>
        <id>https://github.com/advisories/GHSA-cxx3-36qc-m6qm</id>
        <link href="https://github.com/advisories/GHSA-cxx3-36qc-m6qm"/>
        <updated>2023-03-09T20:16:25.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-bluetooth are vulnerable to Buffer Overflow via the findSerialPortChannel method due to improper user input length validation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26110">https://nvd.nist.gov/vuln/detail/CVE-2023-26110</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODEBLUETOOTH-3311821">https://security.snyk.io/vuln/SNYK-JS-NODEBLUETOOTH-3311821</a></li>
<li><a href="https://github.com/advisories/GHSA-cxx3-36qc-m6qm">https://github.com/advisories/GHSA-cxx3-36qc-m6qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxx3-36qc-m6qm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-09T06:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-r628-mhmh-qjhw</id>
        <link href="https://github.com/advisories/GHSA-r628-mhmh-qjhw"/>
        <updated>2023-03-09T16:44:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>
<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary <code>stat</code> calls to determine whether a given path is a directory, paths are cached when directories are created.</p>
<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the <code>node-tar</code> directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where <code>node-tar</code> checks for symlinks occur.</p>
<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass <code>node-tar</code> symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>
<p>This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.</p>
<h3 id="patches">Patches</h3>
<p>3.2.3 || 4.4.15 || 5.0.7 || 6.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may work around this vulnerability without upgrading by creating a custom <code>filter</code> method which prevents the extraction of symbolic links.</p>
<pre><code class="language-js">const tar = require('tar')

tar.x({
  file: 'archive.tgz',
  filter: (file, entry) =&gt; {
    if (entry.type === 'SymbolicLink') {
      return false
    } else {
      return true
    }
  }
})
</code></pre>
<p>Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw">https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw</a></li>
<li><a href="https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://www.npmjs.com/advisories/1771">https://www.npmjs.com/advisories/1771</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32803">https://nvd.nist.gov/vuln/detail/CVE-2021-32803</a></li>
<li><a href="https://www.npmjs.com/package/tar">https://www.npmjs.com/package/tar</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356">https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571">https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349">https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://github.com/advisories/GHSA-r628-mhmh-qjhw">https://github.com/advisories/GHSA-r628-mhmh-qjhw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r628-mhmh-qjhw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-03T19:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-r628-mhmh-qjhw</id>
        <link href="https://github.com/advisories/GHSA-r628-mhmh-qjhw"/>
        <updated>2023-03-09T16:44:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>
<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary <code>stat</code> calls to determine whether a given path is a directory, paths are cached when directories are created.</p>
<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the <code>node-tar</code> directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where <code>node-tar</code> checks for symlinks occur.</p>
<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass <code>node-tar</code> symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>
<p>This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.</p>
<h3 id="patches">Patches</h3>
<p>3.2.3 || 4.4.15 || 5.0.7 || 6.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may work around this vulnerability without upgrading by creating a custom <code>filter</code> method which prevents the extraction of symbolic links.</p>
<pre><code class="language-js">const tar = require('tar')

tar.x({
  file: 'archive.tgz',
  filter: (file, entry) =&gt; {
    if (entry.type === 'SymbolicLink') {
      return false
    } else {
      return true
    }
  }
})
</code></pre>
<p>Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw">https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw</a></li>
<li><a href="https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://www.npmjs.com/advisories/1771">https://www.npmjs.com/advisories/1771</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32803">https://nvd.nist.gov/vuln/detail/CVE-2021-32803</a></li>
<li><a href="https://www.npmjs.com/package/tar">https://www.npmjs.com/package/tar</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356">https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571">https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349">https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://github.com/advisories/GHSA-r628-mhmh-qjhw">https://github.com/advisories/GHSA-r628-mhmh-qjhw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r628-mhmh-qjhw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-03T19:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-r628-mhmh-qjhw</id>
        <link href="https://github.com/advisories/GHSA-r628-mhmh-qjhw"/>
        <updated>2023-03-09T16:44:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>
<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary <code>stat</code> calls to determine whether a given path is a directory, paths are cached when directories are created.</p>
<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the <code>node-tar</code> directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where <code>node-tar</code> checks for symlinks occur.</p>
<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass <code>node-tar</code> symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>
<p>This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.</p>
<h3 id="patches">Patches</h3>
<p>3.2.3 || 4.4.15 || 5.0.7 || 6.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may work around this vulnerability without upgrading by creating a custom <code>filter</code> method which prevents the extraction of symbolic links.</p>
<pre><code class="language-js">const tar = require('tar')

tar.x({
  file: 'archive.tgz',
  filter: (file, entry) =&gt; {
    if (entry.type === 'SymbolicLink') {
      return false
    } else {
      return true
    }
  }
})
</code></pre>
<p>Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw">https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw</a></li>
<li><a href="https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://www.npmjs.com/advisories/1771">https://www.npmjs.com/advisories/1771</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32803">https://nvd.nist.gov/vuln/detail/CVE-2021-32803</a></li>
<li><a href="https://www.npmjs.com/package/tar">https://www.npmjs.com/package/tar</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356">https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571">https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349">https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://github.com/advisories/GHSA-r628-mhmh-qjhw">https://github.com/advisories/GHSA-r628-mhmh-qjhw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r628-mhmh-qjhw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-03T19:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-r628-mhmh-qjhw</id>
        <link href="https://github.com/advisories/GHSA-r628-mhmh-qjhw"/>
        <updated>2023-03-09T16:44:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>
<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary <code>stat</code> calls to determine whether a given path is a directory, paths are cached when directories are created.</p>
<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the <code>node-tar</code> directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where <code>node-tar</code> checks for symlinks occur.</p>
<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass <code>node-tar</code> symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>
<p>This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.</p>
<h3 id="patches">Patches</h3>
<p>3.2.3 || 4.4.15 || 5.0.7 || 6.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may work around this vulnerability without upgrading by creating a custom <code>filter</code> method which prevents the extraction of symbolic links.</p>
<pre><code class="language-js">const tar = require('tar')

tar.x({
  file: 'archive.tgz',
  filter: (file, entry) =&gt; {
    if (entry.type === 'SymbolicLink') {
      return false
    } else {
      return true
    }
  }
})
</code></pre>
<p>Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw">https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw</a></li>
<li><a href="https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://www.npmjs.com/advisories/1771">https://www.npmjs.com/advisories/1771</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32803">https://nvd.nist.gov/vuln/detail/CVE-2021-32803</a></li>
<li><a href="https://www.npmjs.com/package/tar">https://www.npmjs.com/package/tar</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356">https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571">https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349">https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20">https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>
<li><a href="https://github.com/advisories/GHSA-r628-mhmh-qjhw">https://github.com/advisories/GHSA-r628-mhmh-qjhw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r628-mhmh-qjhw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-03T19:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ecdh] ecdh vulnerable to Exposure of Resource to Wrong Sphere]]></title>
        <id>https://github.com/advisories/GHSA-p2hp-3wv3-4w74</id>
        <link href="https://github.com/advisories/GHSA-p2hp-3wv3-4w74"/>
        <updated>2023-03-08T17:22:31.000Z</updated>
        <content type="html"><![CDATA[<p>In Development IL ecdh before 0.2.0, an attacker can send an invalid point (not on the curve) as the public key, and obtain the derived shared secret.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44310">https://nvd.nist.gov/vuln/detail/CVE-2022-44310</a></li>
<li><a href="https://github.com/developmentil/ecdh/issues/3">https://github.com/developmentil/ecdh/issues/3</a></li>
<li><a href="https://github.com/developmentil/ecdh/pull/4">https://github.com/developmentil/ecdh/pull/4</a></li>
<li><a href="https://github.com/developmentil/ecdh/commit/ef4560e7233f4e8107a17a77bc540121599c78fa">https://github.com/developmentil/ecdh/commit/ef4560e7233f4e8107a17a77bc540121599c78fa</a></li>
<li><a href="https://github.com/advisories/GHSA-p2hp-3wv3-4w74">https://github.com/advisories/GHSA-p2hp-3wv3-4w74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2hp-3wv3-4w74</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-24T21:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus vulnerable to extraction of password hashes through export querying]]></title>
        <id>https://github.com/advisories/GHSA-m5q3-8wgf-x8xf</id>
        <link href="https://github.com/advisories/GHSA-m5q3-8wgf-x8xf"/>
        <updated>2023-03-08T17:13:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users with read access to the <code>password</code> field in <code>directus_users</code> can extract the argon2 password hashes by brute forcing the export functionality combined with a <code>_starts_with</code> filter. This allows the user to enumerate the password hashes.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched by preventing any hashed/concealed field to be filtered against with the <code>_starts_with</code> or other string operator.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensuring that no user has <code>read</code> access to the <code>password</code> field in <code>directus_users</code> is sufficient to prevent this vulnerability. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a Discussion in <a href="https://github.com/directus/directus/discussions/new">directus/directus</a></li>
<li>Email us at <a href="mailto:security@directus.io">security@directus.io</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-m5q3-8wgf-x8xf">https://github.com/directus/directus/security/advisories/GHSA-m5q3-8wgf-x8xf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27481">https://nvd.nist.gov/vuln/detail/CVE-2023-27481</a></li>
<li><a href="https://github.com/directus/directus/pull/14829">https://github.com/directus/directus/pull/14829</a></li>
<li><a href="https://github.com/directus/directus/pull/15010">https://github.com/directus/directus/pull/15010</a></li>
<li><a href="https://github.com/advisories/GHSA-m5q3-8wgf-x8xf">https://github.com/advisories/GHSA-m5q3-8wgf-x8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5q3-8wgf-x8xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-08T17:13:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2023-03-08T05:05:35.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://www.npmjs.com/advisories/1523">https://www.npmjs.com/advisories/1523</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200724-0006/">https://security.netapp.com/advisory/ntap-20200724-0006/</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2023-03-08T05:05:35.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://www.npmjs.com/advisories/1523">https://www.npmjs.com/advisories/1523</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200724-0006/">https://security.netapp.com/advisory/ntap-20200724-0006/</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@nestjs/core] @nestjs/core vulnerable to Information Exposure via StreamableFile pipe]]></title>
        <id>https://github.com/advisories/GHSA-4jpv-8r57-pv7j</id>
        <link href="https://github.com/advisories/GHSA-4jpv-8r57-pv7j"/>
        <updated>2023-03-08T00:10:03.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package @nestjs/core before 9.0.5 are vulnerable to Information Exposure via the StreamableFile pipe. Exploiting this vulnerability is possible when the client cancels a request while it is streaming a StreamableFile, the stream wrapped by the StreamableFile will be kept open.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26108">https://nvd.nist.gov/vuln/detail/CVE-2023-26108</a></li>
<li><a href="https://github.com/nestjs/nest/issues/9759">https://github.com/nestjs/nest/issues/9759</a></li>
<li><a href="https://github.com/nestjs/nest/pull/9819">https://github.com/nestjs/nest/pull/9819</a></li>
<li><a href="https://github.com/nestjs/nest/pull/9819/commits/f59cf5e81ca73bcdf1b5b36713550fd93918db41">https://github.com/nestjs/nest/pull/9819/commits/f59cf5e81ca73bcdf1b5b36713550fd93918db41</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NESTJSCORE-2869127">https://security.snyk.io/vuln/SNYK-JS-NESTJSCORE-2869127</a></li>
<li><a href="https://github.com/advisories/GHSA-4jpv-8r57-pv7j">https://github.com/advisories/GHSA-4jpv-8r57-pv7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jpv-8r57-pv7j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-06T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] directus vulnerable to HTML Injection in Password Reset email to custom Reset URL]]></title>
        <id>https://github.com/advisories/GHSA-4hmq-ggrm-qfc6</id>
        <link href="https://github.com/advisories/GHSA-4hmq-ggrm-qfc6"/>
        <updated>2023-03-07T20:35:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Instances relying on an allow-listed reset URL are vulnerable to an HTML injection attack through the use of query parameters in the reset URL. </p>
<h3 id="patches">Patches</h3>
<p>The problem has been resolved and released under version 9.23.0. People relying on a custom password reset URL should upgrade to 9.23.0 or later, or remove the custom reset url from the configured allow list.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the custom reset URL allow list.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-4hmq-ggrm-qfc6">https://github.com/directus/directus/security/advisories/GHSA-4hmq-ggrm-qfc6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27474">https://nvd.nist.gov/vuln/detail/CVE-2023-27474</a></li>
<li><a href="https://github.com/directus/directus/issues/17119">https://github.com/directus/directus/issues/17119</a></li>
<li><a href="https://github.com/directus/directus/pull/17120">https://github.com/directus/directus/pull/17120</a></li>
<li><a href="https://github.com/advisories/GHSA-4hmq-ggrm-qfc6">https://github.com/advisories/GHSA-4hmq-ggrm-qfc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hmq-ggrm-qfc6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-07T20:35:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dot-lens] dot-lens vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-rmhg-2cvv-q7vx</id>
        <link href="https://github.com/advisories/GHSA-rmhg-2cvv-q7vx"/>
        <updated>2023-03-07T20:32:04.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package dot-lens are vulnerable to Prototype Pollution via the <code>set()</code> function in <code>index.js</code> file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26106">https://nvd.nist.gov/vuln/detail/CVE-2023-26106</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-DOTLENS-3227646">https://security.snyk.io/vuln/SNYK-JS-DOTLENS-3227646</a></li>
<li><a href="https://github.com/jb55/dot-lens/blob/465ef2088e4065b7be1c4372eedd2215c3820bc4/index.js#23L70">https://github.com/jb55/dot-lens/blob/465ef2088e4065b7be1c4372eedd2215c3820bc4/index.js#23L70</a></li>
<li><a href="https://github.com/advisories/GHSA-rmhg-2cvv-q7vx">https://github.com/advisories/GHSA-rmhg-2cvv-q7vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmhg-2cvv-q7vx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-06T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sketchsvg] SketchSVG Arbitrary Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6722-xvq8-3254</id>
        <link href="https://github.com/advisories/GHSA-6722-xvq8-3254"/>
        <updated>2023-03-07T20:30:34.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package sketchsvg are vulnerable to Arbitrary Code Injection when invoking <code>shell.exec</code> without sanitization nor parametrization while concatenating the current directory as part of the command string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26107">https://nvd.nist.gov/vuln/detail/CVE-2023-26107</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SKETCHSVG-3167969">https://security.snyk.io/vuln/SNYK-JS-SKETCHSVG-3167969</a></li>
<li><a href="https://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L115">https://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L115</a></li>
<li><a href="https://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L64">https://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L64</a></li>
<li><a href="https://github.com/advisories/GHSA-6722-xvq8-3254">https://github.com/advisories/GHSA-6722-xvq8-3254</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6722-xvq8-3254</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-06T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@nubosoftware/node-static] node-static and @nubosoftware/node-static vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-5g97-whc9-8g7j</id>
        <link href="https://github.com/advisories/GHSA-5g97-whc9-8g7j"/>
        <updated>2023-03-07T20:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>node-static and the fork @nubosoftware/node-static are vulnerable to Directory Traversal due to improper file path sanitization in the startsWith() method in the servePath function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26111">https://nvd.nist.gov/vuln/detail/CVE-2023-26111</a></li>
<li><a href="https://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc">https://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928">https://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927">https://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927</a></li>
<li><a href="https://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163">https://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163</a></li>
<li><a href="https://github.com/advisories/GHSA-5g97-whc9-8g7j">https://github.com/advisories/GHSA-5g97-whc9-8g7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5g97-whc9-8g7j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-06T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-static] node-static and @nubosoftware/node-static vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-5g97-whc9-8g7j</id>
        <link href="https://github.com/advisories/GHSA-5g97-whc9-8g7j"/>
        <updated>2023-03-07T20:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>node-static and the fork @nubosoftware/node-static are vulnerable to Directory Traversal due to improper file path sanitization in the startsWith() method in the servePath function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26111">https://nvd.nist.gov/vuln/detail/CVE-2023-26111</a></li>
<li><a href="https://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc">https://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928">https://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927">https://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927</a></li>
<li><a href="https://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163">https://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163</a></li>
<li><a href="https://github.com/advisories/GHSA-5g97-whc9-8g7j">https://github.com/advisories/GHSA-5g97-whc9-8g7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5g97-whc9-8g7j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-06T06:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json-logic-js] json-logic-js Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-67j4-2mh6-8627</id>
        <link href="https://github.com/advisories/GHSA-67j4-2mh6-8627"/>
        <updated>2023-03-07T20:14:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, has been found in json-logic-js 2.0.0. Affected by this issue is some unknown functionality of the file logic.js. The manipulation leads to command injection. Upgrading to version 2.0.1 is able to address this issue. The name of the patch is c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227. It is recommended to upgrade the affected component. VDB-222266 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4329">https://nvd.nist.gov/vuln/detail/CVE-2021-4329</a></li>
<li><a href="https://github.com/jwadhams/json-logic-js/pull/98">https://github.com/jwadhams/json-logic-js/pull/98</a></li>
<li><a href="https://github.com/jwadhams/json-logic-js/commit/c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227">https://github.com/jwadhams/json-logic-js/commit/c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227</a></li>
<li><a href="https://vuldb.com/?ctiid.222266">https://vuldb.com/?ctiid.222266</a></li>
<li><a href="https://vuldb.com/?id.222266">https://vuldb.com/?id.222266</a></li>
<li><a href="https://github.com/advisories/GHSA-67j4-2mh6-8627">https://github.com/advisories/GHSA-67j4-2mh6-8627</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67j4-2mh6-8627</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-05T21:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xterm] xterm vulnerable to remote code execution ]]></title>
        <id>https://github.com/advisories/GHSA-mc23-976p-j42x</id>
        <link href="https://github.com/advisories/GHSA-mc23-976p-j42x"/>
        <updated>2023-03-07T00:43:49.000Z</updated>
        <content type="html"><![CDATA[<p>A remote code execution vulnerability exists in Xterm.js when the component mishandles special characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-0542">https://nvd.nist.gov/vuln/detail/CVE-2019-0542</a></li>
<li><a href="https://github.com/advisories/GHSA-mc23-976p-j42x">https://github.com/advisories/GHSA-mc23-976p-j42x</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2019:0959">https://access.redhat.com/errata/RHBA-2019:0959</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:1422">https://access.redhat.com/errata/RHSA-2019:1422</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2551">https://access.redhat.com/errata/RHSA-2019:2551</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2552">https://access.redhat.com/errata/RHSA-2019:2552</a></li>
<li><a href="http://www.securityfocus.com/bid/106434">http://www.securityfocus.com/bid/106434</a></li>
<li><a href="https://github.com/xtermjs/xterm.js/commit/3592c641cd0348e0b698e8a180aea2072c6bcd9a">https://github.com/xtermjs/xterm.js/commit/3592c641cd0348e0b698e8a180aea2072c6bcd9a</a></li>
<li><a href="https://github.com/xtermjs/xterm.js/releases/tag/3.8.1">https://github.com/xtermjs/xterm.js/releases/tag/3.8.1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mc23-976p-j42x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-01-14T16:19:55.000Z</published>
    </entry>
</feed>