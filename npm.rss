<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-02-10T12:01:49.460Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[json5] Prototype Pollution in JSON5 via Parse Method]]></title>
        <id>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</id>
        <link href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h"/>
        <updated>2024-02-10T01:09:55.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>
<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>
<h2 id="impact">Impact</h2>
<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>
<h2 id="mitigation">Mitigation</h2>
<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>
<h2 id="details">Details</h2>
<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>
<pre><code class="language-js">const JSON5 = require('json5');

const doSomethingDangerous = (props) =&gt; {
  if (props.isAdmin) {
    console.log('Doing dangerous thing as admin.');
  } else {
    console.log('Doing dangerous thing as user.');
  }
};

const secCheckKeysSet = (obj, searchKeys) =&gt; {
  let searchKeyFound = false;
  Object.keys(obj).forEach((key) =&gt; {
    if (searchKeys.indexOf(key) &gt; -1) {
      searchKeyFound = true;
    }
  });
  return searchKeyFound;
};

const props = JSON5.parse('{"foo": "bar"}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as user."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "isAdmin": true}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props);
} else {
  throw new Error('Forbidden...'); // Error: Forbidden...
}
</code></pre>
<p>However, users can instead set the <code>__proto__</code> key to <code>{"isAdmin": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "__proto__": {"isAdmin": true}}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as admin."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46175">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>
<li><a href="https://github.com/json5/json5/issues/199">https://github.com/json5/json5/issues/199</a></li>
<li><a href="https://github.com/json5/json5/issues/295">https://github.com/json5/json5/issues/295</a></li>
<li><a href="https://github.com/json5/json5/pull/298">https://github.com/json5/json5/pull/298</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>
<li><a href="https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html">https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-29T01:51:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json5] Prototype Pollution in JSON5 via Parse Method]]></title>
        <id>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</id>
        <link href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h"/>
        <updated>2024-02-10T01:09:55.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>
<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>
<h2 id="impact">Impact</h2>
<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>
<h2 id="mitigation">Mitigation</h2>
<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>
<h2 id="details">Details</h2>
<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>
<pre><code class="language-js">const JSON5 = require('json5');

const doSomethingDangerous = (props) =&gt; {
  if (props.isAdmin) {
    console.log('Doing dangerous thing as admin.');
  } else {
    console.log('Doing dangerous thing as user.');
  }
};

const secCheckKeysSet = (obj, searchKeys) =&gt; {
  let searchKeyFound = false;
  Object.keys(obj).forEach((key) =&gt; {
    if (searchKeys.indexOf(key) &gt; -1) {
      searchKeyFound = true;
    }
  });
  return searchKeyFound;
};

const props = JSON5.parse('{"foo": "bar"}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as user."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "isAdmin": true}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props);
} else {
  throw new Error('Forbidden...'); // Error: Forbidden...
}
</code></pre>
<p>However, users can instead set the <code>__proto__</code> key to <code>{"isAdmin": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>
<pre><code class="language-js">const props = JSON5.parse('{"foo": "bar", "__proto__": {"isAdmin": true}}');
if (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {
  doSomethingDangerous(props); // "Doing dangerous thing as admin."
} else {
  throw new Error('Forbidden...');
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46175">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>
<li><a href="https://github.com/json5/json5/issues/199">https://github.com/json5/json5/issues/199</a></li>
<li><a href="https://github.com/json5/json5/issues/295">https://github.com/json5/json5/issues/295</a></li>
<li><a href="https://github.com/json5/json5/pull/298">https://github.com/json5/json5/pull/298</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>
<li><a href="https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html">https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>
<li><a href="https://github.com/advisories/GHSA-9c47-m6qq-7p4h">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c47-m6qq-7p4h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-29T01:51:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[passport-saml] Unlimited transforms allowed for signed nodes]]></title>
        <id>https://github.com/advisories/GHSA-5379-r78w-42h2</id>
        <link href="https://github.com/advisories/GHSA-5379-r78w-42h2"/>
        <updated>2024-02-10T00:55:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack.</p>
<h3 id="patches">Patches</h3>
<p>This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/node-saml/passport-saml/pull/595">https://github.com/node-saml/passport-saml/pull/595</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/passport-saml/security/advisories/GHSA-5379-r78w-42h2">https://github.com/node-saml/passport-saml/security/advisories/GHSA-5379-r78w-42h2</a></li>
<li><a href="https://github.com/node-saml/passport-saml/pull/595">https://github.com/node-saml/passport-saml/pull/595</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-39171">https://nvd.nist.gov/vuln/detail/CVE-2021-39171</a></li>
<li><a href="https://github.com/node-saml/passport-saml/commit/f1e00b64c21a725f545e675cd810bbaa435a3972">https://github.com/node-saml/passport-saml/commit/f1e00b64c21a725f545e675cd810bbaa435a3972</a></li>
<li><a href="https://github.com/advisories/GHSA-5379-r78w-42h2">https://github.com/advisories/GHSA-5379-r78w-42h2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5379-r78w-42h2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-30T16:11:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[marked] Regular Expression Denial of Service in marked]]></title>
        <id>https://github.com/advisories/GHSA-hjcp-j389-59ff</id>
        <link href="https://github.com/advisories/GHSA-hjcp-j389-59ff"/>
        <updated>2024-02-09T17:50:44.000Z</updated>
        <content type="html"><![CDATA[<p>Versions 0.3.3 and earlier of <code>marked</code> are affected by a regular expression denial of service ( ReDoS ) vulnerability when passed inputs that reach the <code>em</code> inline rule.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 0.3.4 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8854">https://nvd.nist.gov/vuln/detail/CVE-2015-8854</a></li>
<li><a href="https://github.com/chjj/marked/issues/497">https://github.com/chjj/marked/issues/497</a></li>
<li><a href="https://github.com/advisories/GHSA-hjcp-j389-59ff">https://github.com/advisories/GHSA-hjcp-j389-59ff</a></li>
<li><a href="https://www.npmjs.com/advisories/23">https://www.npmjs.com/advisories/23</a></li>
<li><a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BO2RMVVZVV6NFTU46B5RYRK7ZCXYARZS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BO2RMVVZVV6NFTU46B5RYRK7ZCXYARZS/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M6BJG6RGDH7ZWVVAUFBFI5L32RSMQN2S/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M6BJG6RGDH7ZWVVAUFBFI5L32RSMQN2S/</a></li>
<li><a href="https://support.f5.com/csp/article/K05052081?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K05052081?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/04/20/11">http://www.openwall.com/lists/oss-security/2016/04/20/11</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjcp-j389-59ff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2017-10-24T18:33:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pkg] Pkg Local Privilege Escalation]]></title>
        <id>https://github.com/advisories/GHSA-22r3-9w55-cj54</id>
        <link href="https://github.com/advisories/GHSA-22r3-9w55-cj54"/>
        <updated>2024-02-09T15:20:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any native code packages built by <code>pkg</code> are written to a hardcoded directory. On unix systems, this is <code>/tmp/pkg/*</code> which is a shared directory for all users on the same local system. There is no uniqueness to the package names within this directory, they are predictable.</p>
<p>An attacker who has access to the same local system has the ability to replace the genuine executables in the shared directory with malicious executables of the same name. A user may then run the malicious executable without realising it has been modified.</p>
<h3 id="patches">Patches</h3>
<p>This package is deprecated. Therefore, there will not be a patch provided for this vulnerability.</p>
<h3 id="recommended-action">Recommended Action:</h3>
<p>To check if your executable build by pkg depends on native code and is vulnerable, run the executable and check if <code>/tmp/pkg/</code> was created.</p>
<p>Users should transition to actively maintained alternatives. We would recommend investigating Node.js 21’s support for <a href="https://nodejs.org/api/single-executable-applications.html">single executable applications</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Given the decision to deprecate the pkg package, there are no official workarounds or remediations provided by our team. Users should prioritize migrating to other packages that offer similar functionality with enhanced security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/pkg/security/advisories/GHSA-22r3-9w55-cj54">https://github.com/vercel/pkg/security/advisories/GHSA-22r3-9w55-cj54</a></li>
<li><a href="https://github.com/advisories/GHSA-22r3-9w55-cj54">https://github.com/advisories/GHSA-22r3-9w55-cj54</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22r3-9w55-cj54</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-09T15:20:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ip] NPM IP package vulnerable to Server-Side Request Forgery (SSRF) attacks]]></title>
        <id>https://github.com/advisories/GHSA-78xj-cgh5-2h22</id>
        <link href="https://github.com/advisories/GHSA-78xj-cgh5-2h22"/>
        <updated>2024-02-09T15:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in NPM IP Package v.1.1.8 and before allows an attacker to execute arbitrary code and obtain sensitive information via the <code>isPublic()</code> function. This can lead to potential Server-Side Request Forgery (SSRF) attacks. The core issue is the function's failure to accurately distinguish between public and private IP addresses.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42282">https://nvd.nist.gov/vuln/detail/CVE-2023-42282</a></li>
<li><a href="https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html">https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html</a></li>
<li><a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22">https://github.com/advisories/GHSA-78xj-cgh5-2h22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78xj-cgh5-2h22</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-08T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uap-core] Denial of Service in uap-core]]></title>
        <id>https://github.com/advisories/GHSA-p4pj-mg4r-x6v4</id>
        <link href="https://github.com/advisories/GHSA-p4pj-mg4r-x6v4"/>
        <updated>2024-02-08T22:17:20.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>Some regexes are vulnerable to regular expression denial of service (REDoS) due to overlapping capture groups. This allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to maliciously crafted long strings.</p>
<h2 id="patches">Patches</h2>
<p>Please update uap-core to &gt;= v0.11.0</p>
<p>Downstream packages such as uap-python, uap-ruby etc which depend upon uap-core follow different version schemes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ua-parser/uap-core/security/advisories/GHSA-p4pj-mg4r-x6v4">https://github.com/ua-parser/uap-core/security/advisories/GHSA-p4pj-mg4r-x6v4</a></li>
<li><a href="https://github.com/ua-parser/uap-core/commit/dc9925d458214cfe87b93e35346980612f6ae96c">https://github.com/ua-parser/uap-core/commit/dc9925d458214cfe87b93e35346980612f6ae96c</a></li>
<li><a href="https://www.npmjs.com/package/uap-core">https://www.npmjs.com/package/uap-core</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21317">https://nvd.nist.gov/vuln/detail/CVE-2021-21317</a></li>
<li><a href="https://github.com/advisories/GHSA-p4pj-mg4r-x6v4">https://github.com/advisories/GHSA-p4pj-mg4r-x6v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4pj-mg4r-x6v4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-02-02T15:46:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hoek] hoek subject to prototype pollution via the clone function.]]></title>
        <id>https://github.com/advisories/GHSA-c429-5p7v-vgjp</id>
        <link href="https://github.com/advisories/GHSA-c429-5p7v-vgjp"/>
        <updated>2024-02-07T18:59:37.000Z</updated>
        <content type="html"><![CDATA[<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36604">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>
<li><a href="https://github.com/hapijs/hoek/issues/352">https://github.com/hapijs/hoek/issues/352</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a">https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a</a></li>
<li><a href="https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90">https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90</a></li>
<li><a href="https://github.com/advisories/GHSA-c429-5p7v-vgjp">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c429-5p7v-vgjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links]]></title>
        <id>https://github.com/advisories/GHSA-qq89-hq3f-393p</id>
        <link href="https://github.com/advisories/GHSA-qq89-hq3f-393p"/>
        <updated>2024-02-07T18:41:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>
<p>node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.</p>
<p>This logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 "short path" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>
<p>The v3 branch of <code>node-tar</code> has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of <code>node-tar</code>. If this is not possible, a workaround is available below.</p>
<h3 id="patches">Patches</h3>
<p>6.1.9 || 5.0.10 || 4.4.18</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.</p>
<pre><code class="language-js">const tar = require('tar')

tar.x({
  file: 'archive.tgz',
  filter: (file, entry) =&gt; {
    if (entry.type === 'SymbolicLink') {
      return false
    } else {
      return true
    }
  }
})
</code></pre>
<p>Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.</p>
<h4 id="fix">Fix</h4>
<p>The problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:</p>
<ol>
<li>The <code>String.normalize('NFKD')</code> method is used to first normalize all unicode to its maximally compatible and multi-code-point form.</li>
<li>All slashes are normalized to <code>/</code> on Windows systems (on posix systems, <code>\</code> is a valid filename character, and thus left intact).</li>
<li>When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p">https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p</a></li>
<li><a href="https://www.npmjs.com/package/tar">https://www.npmjs.com/package/tar</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37712">https://nvd.nist.gov/vuln/detail/CVE-2021-37712</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-5008">https://www.debian.org/security/2021/dsa-5008</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b">https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455">https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e">https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a">https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f">https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1">https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1</a></li>
<li><a href="https://github.com/advisories/GHSA-qq89-hq3f-393p">https://github.com/advisories/GHSA-qq89-hq3f-393p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq89-hq3f-393p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-31T16:05:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] CKEditor cross-site scripting vulnerability in AJAX sample]]></title>
        <id>https://github.com/advisories/GHSA-wh5w-82f3-wrxh</id>
        <link href="https://github.com/advisories/GHSA-wh5w-82f3-wrxh"/>
        <updated>2024-02-07T18:21:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in the AJAX sample available at the <code>samples/old/ajax.html</code> file location. All integrators that use that sample in the production code can be affected.</p>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the AJAX sample. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts where <code>samples/old/ajax.html</code> is used in a production environment.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank Rafael Pedrero and INCIBE (<a href="https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor">original report</a>) for recognizing and reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4771">https://nvd.nist.gov/vuln/detail/CVE-2023-4771</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>
<li><a href="https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor</a></li>
<li><a href="https://github.com/advisories/GHSA-wh5w-82f3-wrxh">https://github.com/advisories/GHSA-wh5w-82f3-wrxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wh5w-82f3-wrxh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T17:34:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] CKEditor4 Cross-site Scripting vulnerability in samples with enabled the preview feature]]></title>
        <id>https://github.com/advisories/GHSA-mw2c-vx6j-mg76</id>
        <link href="https://github.com/advisories/GHSA-mw2c-vx6j-mg76"/>
        <updated>2024-02-07T20:24:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in the samples that use the <a href="https://ckeditor.com/cke4/addon/preview">preview</a> feature:</p>
<ul>
<li><code>samples/old/**/*.html</code></li>
<li><code>plugins/[plugin name]/samples/**/*.html</code></li>
</ul>
<p>All integrators that use these samples in the production code can be affected.</p>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the misconfigured <a href="https://ckeditor.com/cke4/addon/preview">preview feature</a>. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts with affected samples used in a production environment.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank Marcin Wyczechowski &amp; Michał Majchrowicz AFINE Team for recognizing and reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>
<li><a href="https://ckeditor.com/cke4/addon/preview">https://ckeditor.com/cke4/addon/preview</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24816">https://nvd.nist.gov/vuln/detail/CVE-2024-24816</a></li>
<li><a href="https://github.com/advisories/GHSA-mw2c-vx6j-mg76">https://github.com/advisories/GHSA-mw2c-vx6j-mg76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mw2c-vx6j-mg76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T17:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] CKEditor4 Cross-site Scripting vulnerability caused by incorrect CDATA detection]]></title>
        <id>https://github.com/advisories/GHSA-fq6h-4g8v-qqvm</id>
        <link href="https://github.com/advisories/GHSA-fq6h-4g8v-qqvm"/>
        <updated>2024-02-07T20:23:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in the core HTML parsing module and may affect all editor instances that:</p>
<ul>
<li>Enabled <a href="https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html">full-page editing</a> mode,</li>
<li>or enabled <a href="https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata">CDATA</a> elements in <a href="https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html">Advanced Content Filtering</a> configuration (defaults to <code>script</code> and <code>style</code> elements).</li>
</ul>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML content bypassing Advanced Content Filtering mechanism, which could result in executing JavaScript code. An attacker could abuse faulty CDATA content detection and use it to prepare an intentional attack on the editor. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank <a href="https://cz.linkedin.com/in/michal-fryba">Michal Frýba</a> from <a href="https://www.alefnula.com/">ALEF NULA</a> for recognizing and reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata">https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html">https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html">https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24815">https://nvd.nist.gov/vuln/detail/CVE-2024-24815</a></li>
<li><a href="https://github.com/advisories/GHSA-fq6h-4g8v-qqvm">https://github.com/advisories/GHSA-fq6h-4g8v-qqvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq6h-4g8v-qqvm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T17:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[handlebars] Arbitrary Code Execution in handlebars]]></title>
        <id>https://github.com/advisories/GHSA-2cf5-4w76-r9qv</id>
        <link href="https://github.com/advisories/GHSA-2cf5-4w76-r9qv"/>
        <updated>2024-02-07T05:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>
<p>The following template can be used to demonstrate the vulnerability:  </p>
<pre><code class="language-{{#with">    {{#with split as |a|}}
        {{pop (push "alert('Vulnerable Handlebars JS');")}}
        {{#with (concat (lookup join (slice 0 1)))}}
            {{#each (slice 2 3)}}
                {{#with (apply 0 a)}}
                    {{.}}
                {{/with}}
            {{/each}}
        {{/with}}
    {{/with}}
{{/with}}```


## Recommendation

Upgrade to version 3.0.8, 4.5.2 or later.
### References

- &lt;https://www.npmjs.com/advisories/1316&gt;
- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;
</code></pre>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2cf5-4w76-r9qv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-09-04T14:57:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[handlebars] Arbitrary Code Execution in handlebars]]></title>
        <id>https://github.com/advisories/GHSA-2cf5-4w76-r9qv</id>
        <link href="https://github.com/advisories/GHSA-2cf5-4w76-r9qv"/>
        <updated>2024-02-07T05:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>
<p>The following template can be used to demonstrate the vulnerability:  </p>
<pre><code class="language-{{#with">    {{#with split as |a|}}
        {{pop (push "alert('Vulnerable Handlebars JS');")}}
        {{#with (concat (lookup join (slice 0 1)))}}
            {{#each (slice 2 3)}}
                {{#with (apply 0 a)}}
                    {{.}}
                {{/with}}
            {{/each}}
        {{/with}}
    {{/with}}
{{/with}}```


## Recommendation

Upgrade to version 3.0.8, 4.5.2 or later.
### References

- &lt;https://www.npmjs.com/advisories/1316&gt;
- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;
</code></pre>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2cf5-4w76-r9qv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-09-04T14:57:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@devicefarmer/stf] DeviceFarmer stf uses DES-ECB]]></title>
        <id>https://github.com/advisories/GHSA-7xm8-wjq7-88r5</id>
        <link href="https://github.com/advisories/GHSA-7xm8-wjq7-88r5"/>
        <updated>2024-02-06T20:29:20.000Z</updated>
        <content type="html"><![CDATA[<p>DeviceFarmer stf v3.6.6 suffers from Use of a Broken or Risky Cryptographic Algorithm.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51839">https://nvd.nist.gov/vuln/detail/CVE-2023-51839</a></li>
<li><a href="https://github.com/DeviceFarmer/stf/issues/736">https://github.com/DeviceFarmer/stf/issues/736</a></li>
<li><a href="https://github.com/DeviceFarmer/stf">https://github.com/DeviceFarmer/stf</a></li>
<li><a href="https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md</a></li>
<li><a href="https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35">https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35</a></li>
<li><a href="https://github.com/advisories/GHSA-7xm8-wjq7-88r5">https://github.com/advisories/GHSA-7xm8-wjq7-88r5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xm8-wjq7-88r5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-01-29T21:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gfqf-9w98-7jmx</id>
        <link href="https://github.com/advisories/GHSA-gfqf-9w98-7jmx"/>
        <updated>2024-02-06T18:23:20.000Z</updated>
        <content type="html"><![CDATA[<p>Directory Traversal vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.3 allows a remote attacker to execute arbitrary code via a crafted payload to the fileName parameter of the Save function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24398">https://nvd.nist.gov/vuln/detail/CVE-2024-24398</a></li>
<li><a href="https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>
<li><a href="https://cves.at/posts/cve-2024-24398/writeup/">https://cves.at/posts/cve-2024-24398/writeup/</a></li>
<li><a href="http://stimulsoft.com">http://stimulsoft.com</a></li>
<li><a href="https://github.com/advisories/GHSA-gfqf-9w98-7jmx">https://github.com/advisories/GHSA-gfqf-9w98-7jmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gfqf-9w98-7jmx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-06T00:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9m6m-c64r-w4f4</id>
        <link href="https://github.com/advisories/GHSA-9m6m-c64r-w4f4"/>
        <updated>2024-02-05T22:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.2 allows a remote attacker to execute arbitrary code via a crafted payload to the search bar component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24396">https://nvd.nist.gov/vuln/detail/CVE-2024-24396</a></li>
<li><a href="https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>
<li><a href="https://cves.at/posts/cve-2024-24396/writeup/">https://cves.at/posts/cve-2024-24396/writeup/</a></li>
<li><a href="http://stimulsoft.com">http://stimulsoft.com</a></li>
<li><a href="https://github.com/advisories/GHSA-9m6m-c64r-w4f4">https://github.com/advisories/GHSA-9m6m-c64r-w4f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m6m-c64r-w4f4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-05T21:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9cgf-pxwq-2cpw</id>
        <link href="https://github.com/advisories/GHSA-9cgf-pxwq-2cpw"/>
        <updated>2024-02-09T17:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.2 allows a remote attacker to execute arbitrary code via a crafted payload to the ReportName field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24397">https://nvd.nist.gov/vuln/detail/CVE-2024-24397</a></li>
<li><a href="https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>
<li><a href="https://cves.at/posts/cve-2024-24397/writeup/">https://cves.at/posts/cve-2024-24397/writeup/</a></li>
<li><a href="http://stimulsoft.com">http://stimulsoft.com</a></li>
<li><a href="https://github.com/advisories/GHSA-9cgf-pxwq-2cpw">https://github.com/advisories/GHSA-9cgf-pxwq-2cpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cgf-pxwq-2cpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-05T18:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yarn] Yarn untrusted search path vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mpwj-fcr6-x34c</id>
        <link href="https://github.com/advisories/GHSA-mpwj-fcr6-x34c"/>
        <updated>2024-02-05T20:20:30.000Z</updated>
        <content type="html"><![CDATA[<p>An untrusted search path vulnerability was found in Yarn. When a victim runs certain Yarn commands in a directory with attacker-controlled content, malicious commands could be executed in unexpected ways.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4435">https://nvd.nist.gov/vuln/detail/CVE-2021-4435</a></li>
<li><a href="https://github.com/yarnpkg/yarn/commit/67fcce88935e45092ffa2674c08053f1ef5268a1">https://github.com/yarnpkg/yarn/commit/67fcce88935e45092ffa2674c08053f1ef5268a1</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2021-4435">https://access.redhat.com/security/cve/CVE-2021-4435</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2262284">https://bugzilla.redhat.com/show_bug.cgi?id=2262284</a></li>
<li><a href="https://github.com/yarnpkg/yarn/releases/tag/v1.22.13">https://github.com/yarnpkg/yarn/releases/tag/v1.22.13</a></li>
<li><a href="https://github.com/advisories/GHSA-mpwj-fcr6-x34c">https://github.com/advisories/GHSA-mpwj-fcr6-x34c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpwj-fcr6-x34c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-04T21:30:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@backstage/backend-app-api] @backstage/backend-app-api leaks GitLab access tokens]]></title>
        <id>https://github.com/advisories/GHSA-86rg-pf4c-5grg</id>
        <link href="https://github.com/advisories/GHSA-86rg-pf4c-5grg"/>
        <updated>2024-02-05T17:59:42.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Red Hat Developer Hub (RHDH). The catalog-import function leaks GitLab access tokens on the frontend when the base64 encoded GitLab token includes a newline at the end of the string. The sanitized error can display on the frontend, including the raw access token. Upon gaining access to this token and depending on permissions, an attacker could push malicious code to repositories, delete resources in Git, revoke or generate new keys, and sign code illegitimately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6944">https://nvd.nist.gov/vuln/detail/CVE-2023-6944</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-6944">https://access.redhat.com/security/cve/CVE-2023-6944</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2255204">https://bugzilla.redhat.com/show_bug.cgi?id=2255204</a></li>
<li><a href="https://github.com/backstage/backstage/issues/21503">https://github.com/backstage/backstage/issues/21503</a></li>
<li><a href="https://github.com/backstage/backstage/pull/21582">https://github.com/backstage/backstage/pull/21582</a></li>
<li><a href="https://github.com/backstage/backstage/commit/0382db60f6c8e8715a702bde6408ad10a48d8e11">https://github.com/backstage/backstage/commit/0382db60f6c8e8715a702bde6408ad10a48d8e11</a></li>
<li><a href="https://github.com/backstage/backstage/blob/master/docs/releases/v1.21.0-next.2-changelog.md">https://github.com/backstage/backstage/blob/master/docs/releases/v1.21.0-next.2-changelog.md</a></li>
<li><a href="https://github.com/advisories/GHSA-86rg-pf4c-5grg">https://github.com/advisories/GHSA-86rg-pf4c-5grg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86rg-pf4c-5grg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-04T12:30:20.000Z</published>
    </entry>
</feed>