<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-11-01T06:01:37.243Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[next] Next.js missing cache-control header may lead to CDN caching empty reply]]></title>
        <id>https://github.com/advisories/GHSA-c59h-r6p8-q9wc</id>
        <link href="https://github.com/advisories/GHSA-c59h-r6p8-q9wc"/>
        <updated>2023-10-31T20:14:37.000Z</updated>
        <content type="html"><![CDATA[<p>Next.js before 13.4.20-canary.13 lacks a cache-control header and thus empty prefetch responses may sometimes be cached by a CDN, causing a denial of service to all users requesting the same URL via that CDN. Cloudflare considers these requests cacheable assets.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46298">https://nvd.nist.gov/vuln/detail/CVE-2023-46298</a></li>
<li><a href="https://github.com/vercel/next.js/issues/45301">https://github.com/vercel/next.js/issues/45301</a></li>
<li><a href="https://github.com/vercel/next.js/pull/54732">https://github.com/vercel/next.js/pull/54732</a></li>
<li><a href="https://github.com/vercel/next.js/compare/v13.4.20-canary.12...v13.4.20-canary.13">https://github.com/vercel/next.js/compare/v13.4.20-canary.12...v13.4.20-canary.13</a></li>
<li><a href="https://github.com/vercel/next.js/commit/20d05958ff853e9c9e42139ffec294336881c648">https://github.com/vercel/next.js/commit/20d05958ff853e9c9e42139ffec294336881c648</a></li>
<li><a href="https://github.com/advisories/GHSA-c59h-r6p8-q9wc">https://github.com/advisories/GHSA-c59h-r6p8-q9wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c59h-r6p8-q9wc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-10-22T03:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[epiceditor] EpicEditor XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4wc5-gfgh-4vjx</id>
        <link href="https://github.com/advisories/GHSA-4wc5-gfgh-4vjx"/>
        <updated>2023-10-31T19:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>EpicEditor through 0.2.3 has Cross-Site Scripting because of an insecure default marked.js configuration. An example attack vector is a crafted IMG element in an HTML document.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-6589">https://nvd.nist.gov/vuln/detail/CVE-2017-6589</a></li>
<li><a href="https://bad.code.blog/2017/03/09/epiceditor-cross-site-scripting/">https://bad.code.blog/2017/03/09/epiceditor-cross-site-scripting/</a></li>
<li><a href="https://github.com/advisories/GHSA-4wc5-gfgh-4vjx">https://github.com/advisories/GHSA-4wc5-gfgh-4vjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wc5-gfgh-4vjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:56:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[generator-jhipster] generator-jhipster allows a timing attack against validateToken due to a string comparison that stops at the first character]]></title>
        <id>https://github.com/advisories/GHSA-4gpm-r23h-gprw</id>
        <link href="https://github.com/advisories/GHSA-4gpm-r23h-gprw"/>
        <updated>2023-10-31T19:30:57.000Z</updated>
        <content type="html"><![CDATA[<p>JHipster generator-jhipster before 2.23.0 allows a timing attack against validateToken due to a string comparison that stops at the first character that is different. Attackers can guess tokens by brute forcing one character at a time and observing the timing. This of course drastically reduces the search space to a linear amount of guesses based on the token length times the possible characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-20110">https://nvd.nist.gov/vuln/detail/CVE-2015-20110</a></li>
<li><a href="https://github.com/jhipster/generator-jhipster/issues/2095">https://github.com/jhipster/generator-jhipster/issues/2095</a></li>
<li><a href="https://github.com/jhipster/generator-jhipster/commit/79fe5626cb1bb80f9ac86cf46980748e65d2bdbc">https://github.com/jhipster/generator-jhipster/commit/79fe5626cb1bb80f9ac86cf46980748e65d2bdbc</a></li>
<li><a href="https://github.com/jhipster/generator-jhipster/commit/7c49ab3d45dc4921b831a2ca55fb1e2a2db1ee25">https://github.com/jhipster/generator-jhipster/commit/7c49ab3d45dc4921b831a2ca55fb1e2a2db1ee25</a></li>
<li><a href="https://github.com/jhipster/generator-jhipster/compare/v2.22.0...v2.23.0">https://github.com/jhipster/generator-jhipster/compare/v2.22.0...v2.23.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4gpm-r23h-gprw">https://github.com/advisories/GHSA-4gpm-r23h-gprw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gpm-r23h-gprw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-31T03:31:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-email-check] Inefficient Regular Expression Complexity in node-email-check]]></title>
        <id>https://github.com/advisories/GHSA-9242-6p36-6256</id>
        <link href="https://github.com/advisories/GHSA-9242-6p36-6256"/>
        <updated>2023-10-30T19:58:58.000Z</updated>
        <content type="html"><![CDATA[<p>ReDos in NPMJS Node Email Check v.1.0.4 allows an attacker to cause a denial of service via a crafted string to the scpSyntax component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39619">https://nvd.nist.gov/vuln/detail/CVE-2023-39619</a></li>
<li><a href="https://gist.github.com/6en6ar/712a4c1eab0324f15e09232c77ea08f8">https://gist.github.com/6en6ar/712a4c1eab0324f15e09232c77ea08f8</a></li>
<li><a href="https://www.npmjs.com/package/node-email-check">https://www.npmjs.com/package/node-email-check</a></li>
<li><a href="https://github.com/teomantuncer/node-email-check/issues/2">https://github.com/teomantuncer/node-email-check/issues/2</a></li>
<li><a href="https://github.com/advisories/GHSA-9242-6p36-6256">https://github.com/advisories/GHSA-9242-6p36-6256</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9242-6p36-6256</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-25T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webpack] Cross-realm object access in Webpack 5]]></title>
        <id>https://github.com/advisories/GHSA-hc6q-2mpp-qw7j</id>
        <link href="https://github.com/advisories/GHSA-hc6q-2mpp-qw7j"/>
        <updated>2023-10-30T13:11:26.000Z</updated>
        <content type="html"><![CDATA[<p>Webpack 5 before 5.76.0 does not avoid cross-realm object access. ImportParserPlugin.js mishandles the magic comment feature. An attacker who controls a property of an untrusted object can obtain access to the real global object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28154">https://nvd.nist.gov/vuln/detail/CVE-2023-28154</a></li>
<li><a href="https://github.com/webpack/webpack/pull/16500">https://github.com/webpack/webpack/pull/16500</a></li>
<li><a href="https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0">https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AU7BOXTBK3KDYSWH67ASZ22TUIOZ3X5G/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AU7BOXTBK3KDYSWH67ASZ22TUIOZ3X5G/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPSAXUTXBCCTAHTCX5BUR4YVP25XALQ3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPSAXUTXBCCTAHTCX5BUR4YVP25XALQ3/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U2AFCM6FFE3LRYI6KNEQWKMXMQOBZQ2D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U2AFCM6FFE3LRYI6KNEQWKMXMQOBZQ2D/</a></li>
<li><a href="https://github.com/advisories/GHSA-hc6q-2mpp-qw7j">https://github.com/advisories/GHSA-hc6q-2mpp-qw7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hc6q-2mpp-qw7j</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-13T03:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[browserify-sign] browserify-sign upper bound check issue in `dsaVerify` leads to a signature forgery attack]]></title>
        <id>https://github.com/advisories/GHSA-x9w5-v3q2-3rhw</id>
        <link href="https://github.com/advisories/GHSA-x9w5-v3q2-3rhw"/>
        <updated>2023-10-26T20:53:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An upper bound check issue in <code>dsaVerify</code> function allows an attacker to construct signatures that can be successfully verified by any public key, thus leading to a signature forgery attack.</p>
<h3 id="details">Details</h3>
<p>In <code>dsaVerify</code> function, it checks whether the value of the signature is legal by calling function <code>checkValue</code>, namely, whether <code>r</code> and <code>s</code> are both in the interval <code>[1, q - 1]</code>. However, the second line of the <code>checkValue</code> function wrongly checks the upper bound of the passed parameters, since the value of <code>b.cmp(q)</code> can only be <code>0</code>, <code>1</code> and <code>-1</code>, and it can never be greater than <code>q</code>. </p>
<p>In this way, although the values of <code>s</code> cannot be <code>0</code>, an attacker can achieve the same effect as zero by setting its value to <code>q</code>, and then send <code>(r, s) = (1, q)</code> to pass the verification of any public key.</p>
<h3 id="impact">Impact</h3>
<p>All places in this project that involve DSA verification of user-input signatures will be affected by this vulnerability.</p>
<h3 id="fix-pr">Fix PR:</h3>
<p>Since the temporary private fork was deleted, here's a webarchive of the PR discussion and diff pages: <a href="https://github.com/browserify/browserify-sign/files/13172957/PR.webarchive.zip">PR webarchive.zip</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/browserify/browserify-sign/security/advisories/GHSA-x9w5-v3q2-3rhw">https://github.com/browserify/browserify-sign/security/advisories/GHSA-x9w5-v3q2-3rhw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46234">https://nvd.nist.gov/vuln/detail/CVE-2023-46234</a></li>
<li><a href="https://github.com/browserify/browserify-sign/commit/85994cd6348b50f2fd1b73c54e20881416f44a30">https://github.com/browserify/browserify-sign/commit/85994cd6348b50f2fd1b73c54e20881416f44a30</a></li>
<li><a href="https://github.com/advisories/GHSA-x9w5-v3q2-3rhw">https://github.com/advisories/GHSA-x9w5-v3q2-3rhw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9w5-v3q2-3rhw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-26T20:53:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] GraphQL: Security breach on Viewer query]]></title>
        <id>https://github.com/advisories/GHSA-236h-rqv8-8q73</id>
        <link href="https://github.com/advisories/GHSA-236h-rqv8-8q73"/>
        <updated>2023-10-26T11:33:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated user using the viewer GraphQL query can bypass all read security on his User object and can also bypass all objects linked via relation or Pointer on his User object.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in Parse Server 4.3.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/parse-community/parse-server/commit/78239ac9071167fdf243c55ae4bc9a2c0b0d89aa">commit 78239ac</a> for details.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-236h-rqv8-8q73">https://github.com/parse-community/parse-server/security/advisories/GHSA-236h-rqv8-8q73</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/78239ac9071167fdf243c55ae4bc9a2c0b0d89aa">https://github.com/parse-community/parse-server/commit/78239ac9071167fdf243c55ae4bc9a2c0b0d89aa</a></li>
<li><a href="https://github.com/parse-community/parse-server/blob/master/CHANGELOG.md#430">https://github.com/parse-community/parse-server/blob/master/CHANGELOG.md#430</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15126">https://nvd.nist.gov/vuln/detail/CVE-2020-15126</a></li>
<li><a href="https://github.com/advisories/GHSA-236h-rqv8-8q73">https://github.com/advisories/GHSA-236h-rqv8-8q73</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-236h-rqv8-8q73</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-07-22T23:06:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[crypto-js] crypto-js PBKDF2 1,000 times weaker than specified in 1993 and 1.3M times weaker than current standard]]></title>
        <id>https://github.com/advisories/GHSA-xwcq-pm8m-c4vf</id>
        <link href="https://github.com/advisories/GHSA-xwcq-pm8m-c4vf"/>
        <updated>2023-10-27T21:06:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="summary">Summary</h4>
<p>Crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">at least 1,300,000 times weaker than current industry standard</a>. This is because it both (1) defaults to <a title="SHA-1, Wikipedia" href="https://en.wikipedia.org/wiki/SHA-1">SHA1</a>, a cryptographic hash algorithm considered insecure <a title="Cryptanalysis of SHA-1" href="https://www.schneier.com/blog/archives/2005/02/cryptanalysis_o.html">since at least 2005</a> and (2) defaults to <a title="crypto-js/src/pbkdf2.js lines 22-26" href="https://github.com/brix/crypto-js/blob/1da3dabf93f0a0435c47627d6f171ad25f452012/src/pbkdf2.js#L22-L26">one single iteration</a>, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to <a title="Preimage Attack, Wikipedia" href="https://en.wikipedia.org/wiki/Preimage_attack">preimage</a> and <a title="Collision Attack, Wikipedia" href="https://en.wikipedia.org/wiki/Hash_collision">collision</a> attacks.</p>
<p>Potential Impact:</p>
<ol>
<li>If used to protect passwords, the impact is high.</li>
<li>If used to generate signatures, the impact is high.</li>
</ol>
<p>Probability / risk analysis / attack enumeration:</p>
<ol>
<li><a title="SHA-1 is a Shambles: First Chosen-Prefix Collision on SHA-1
and Application to the PGP Web of Trust, Gaëtan Leurent and Thomas Peyrin" href="https://eprint.iacr.org/2020/014.pdf">For at most $45,000</a>, an attacker, given control of only the beginning of a crypto-js PBKDF2 input, can create a value which has <em>identical cryptographic signature</em> to any chosen known value.</li>
<li>Due to the <a title="Length extension attack, Wikipedia" href="https://en.wikipedia.org/wiki/Length_extension_attack">length extension attack</a> on SHA1, we can create a value that has identical signature to any <em>unknown</em> value, provided it is prefixed by a known value. It does not matter if PBKDF2 applies '<a title="Salt (cryptography), Wikipedia" href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a>' or '<a title="Pepper (cryptography), Wikipedia" href="https://en.wikipedia.org/wiki/Pepper_(cryptography)">pepper</a>' or any other secret unknown to the attacker. It will still create an identical signature.</li>
</ol>
<p>crypto-js has 10,642 public users <a title="crypto-js on NPM" href="https://www.npmjs.com/package/crypto-js">as displayed on NPM</a>, today October 11th 2023. The number of transient dependents is likely several orders of magnitude higher.</p>
<p>A very rough GitHub search<a title="GitHub search: crypto-js AND pbkdf2 AND (lang:JavaScript OR lang:TypeScript)  NOT iterations" href="https://github.com/search?q=%22crypto-js%22+AND+pbkdf2+AND+%28lang%3AJavaScript+OR+lang%3ATypeScript%29++NOT+%22iterations%22&amp;type=code&amp;p=2"> shows 432 files</a> cross GitHub using PBKDF2 in crypto-js in Typescript or JavaScript, but not specifying any number of iterations.</p>
<h4 id="affected-versions">Affected versions</h4>
<p>All versions are impacted. This code has been the same since crypto-js was first created.</p>
<h4 id="further-cryptanalysis">Further Cryptanalysis</h4>
<p>The issue here is especially egregious because the length extension attack makes useless any secret that might be appended to the plaintext before calculating its signature.</p>
<p>Consider a scheme in which a secret is created for a user's username, and that secret is used to protect e.g. their passwords. Let's say that password is 'fake-password', and their username is 'example-username'.</p>
<p>To encrypt the user password via symmetric encryption we might do <code>encrypt(plaintext: 'fake-password', encryption_key: cryptojs.pbkdf2(value: 'example username' + salt_or_pepper))</code>. By this means, we would, in theory, create an <code>encryption_key</code> that can be determined from the public username, but which requires the secret <code>salt_or_pepper</code> to generate. This is a common scheme for protecting passwords, as exemplified in bcrypt &amp; scrypt. Because the encryption key is symmetric, we can use this derived key to also decrypt the ciphertext.</p>
<p>Because of the length extension issue, if the attacker obtains (via attack 1), a collision with 'example username', the attacker <em>does not need to know</em> <code>salt_or_pepper</code> to decrypt their account data, only their public username.</p>
<h3 id="description">Description</h3>
<p>PBKDF2 is a key-derivation is a key-derivation function that is used for two main purposes: (1) to stretch or squash a variable length password's entropy into a fixed size for consumption by another cryptographic operation and (2) to reduce the chance of downstream operations recovering the password input (for example, for password storage).</p>
<p>Unlike the modern <a href="https://w3c.github.io/webcrypto/#pbkdf2-operations">webcrypto</a> standard, crypto-js does not throw an error when a number of iterations is not specified, and defaults to one single iteration. In the year 2000, when PBKDF2 was originally specified, the minimum number of iterations suggested was set at 1,000. Today, <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">OWASP recommends 1,300,000</a>:</p>
<p><a href="https://github.com/brix/crypto-js/blob/4dcaa7afd08f48cd285463b8f9499cdb242605fa/src/pbkdf2.js#L22-L26">https://github.com/brix/crypto-js/blob/4dcaa7afd08f48cd285463b8f9499cdb242605fa/src/pbkdf2.js#L22-L26</a></p>
<h3 id="patches">Patches</h3>
<p>No available patch. The package is not maintained.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Consult the <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">OWASP PBKDF2 Cheatsheet</a>. Configure to use SHA256 with at least 250,000 iterations.</p>
<h3 id="coordinated-disclosure">Coordinated disclosure</h3>
<p>This issue was simultaneously submitted to <a href="https://github.com/brix/crypto-js">crypto-js</a> and <a href="https://github.com/entronad/crypto-es">crypto-es</a> on the 23rd of October 2023.</p>
<h3 id="caveats">Caveats</h3>
<p>This issue was found in a security review that was <em>not</em> scoped to crypto-js. This report is not an indication that crypto-js has undergone a formal security assessment by the author.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf">https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf</a></li>
<li><a href="https://github.com/brix/crypto-js/commit/421dd538b2d34e7c24a5b72cc64dc2b9167db40a">https://github.com/brix/crypto-js/commit/421dd538b2d34e7c24a5b72cc64dc2b9167db40a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46233">https://nvd.nist.gov/vuln/detail/CVE-2023-46233</a></li>
<li><a href="https://github.com/advisories/GHSA-xwcq-pm8m-c4vf">https://github.com/advisories/GHSA-xwcq-pm8m-c4vf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xwcq-pm8m-c4vf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-25T21:15:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[crypto-es] crypto-es PBKDF2 1,000 times weaker than specified in 1993 and 1.3M times weaker than current standard]]></title>
        <id>https://github.com/advisories/GHSA-mpj8-q39x-wq5h</id>
        <link href="https://github.com/advisories/GHSA-mpj8-q39x-wq5h"/>
        <updated>2023-10-27T20:47:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="summary">Summary</h4>
<p>Crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">at least 1,300,000 times weaker than current industry standard</a>. This is because it both (1) defaults to <a title="SHA-1, Wikipedia" href="https://en.wikipedia.org/wiki/SHA-1">SHA1</a>, a cryptographic hash algorithm considered insecure <a title="Cryptanalysis of SHA-1" href="https://www.schneier.com/blog/archives/2005/02/cryptanalysis_o.html">since at least 2005</a> and (2) defaults to <a title="crypto-js/src/pbkdf2.js lines 22-26" href="https://github.com/brix/crypto-js/blob/1da3dabf93f0a0435c47627d6f171ad25f452012/src/pbkdf2.js#L22-L26">one single iteration</a>, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to <a title="Preimage Attack, Wikipedia" href="https://en.wikipedia.org/wiki/Preimage_attack">preimage</a> and <a title="Collision Attack, Wikipedia" href="https://en.wikipedia.org/wiki/Hash_collision">collision</a> attacks. Remediation of this issue might be very difficult, as the changes required to fix this issue would change the output of this method and thus break most, if not all, current uses of this method as configured by default.</p>
<p>Potential Impact:</p>
<ol>
<li>If used to protect passwords, the impact is high.</li>
<li>If used to generate signatures, the impact is high.</li>
</ol>
<p>Probability / risk analysis / attack enumeration:</p>
<ol>
<li><a title="SHA-1 is a Shambles: First Chosen-Prefix Collision on SHA-1
and Application to the PGP Web of Trust, Gaëtan Leurent and Thomas Peyrin" href="https://eprint.iacr.org/2020/014.pdf">For at most $45,000</a>, an attacker, given control of only the beginning of a crypto-js PBKDF2 input, can create a value which has <em>identical cryptographic signature</em> to any chosen known value.</li>
<li>Due to the <a title="Length extension attack, Wikipedia" href="https://en.wikipedia.org/wiki/Length_extension_attack">length extension attack</a> on SHA1, we can create a value that has identical signature to any <em>unknown</em> value, provided it is prefixed by a known value. It does not matter if PBKDF2 applies '<a title="Salt (cryptography), Wikipedia" href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a>' or '<a title="Pepper (cryptography), Wikipedia" href="https://en.wikipedia.org/wiki/Pepper_(cryptography)">pepper</a>' or any other secret unknown to the attacker. It will still create an identical signature.</li>
</ol>
<p>crypto-js has 10,642 public users <a title="crypto-js on NPM" href="https://www.npmjs.com/package/crypto-js">as displayed on NPM</a>, today October 11th 2023. The number of transient dependents is likely several orders of magnitude higher.</p>
<p>A very rough GitHub search<a title="GitHub search: crypto-js AND pbkdf2 AND (lang:JavaScript OR lang:TypeScript)  NOT iterations" href="https://github.com/search?q=%22crypto-js%22+AND+pbkdf2+AND+%28lang%3AJavaScript+OR+lang%3ATypeScript%29++NOT+%22iterations%22&amp;type=code&amp;p=2"> shows 432 files</a> cross GitHub using PBKDF2 in crypto-js in Typescript or JavaScript, but not specifying any number of iterations.</p>
<h4 id="affected-versions">Affected versions</h4>
<p>All versions are impacted. This code has been the same since crypto-js was first created.</p>
<h4 id="further-cryptanalysis">Further Cryptanalysis</h4>
<p>The issue here is especially egregious because the length extension attack makes useless any secret that might be appended to the plaintext before calculating its signature.</p>
<p>Consider a scheme in which a secret is created for a user's username, and that secret is used to protect e.g. their passwords. Let's say that password is 'fake-password', and their username is 'example-username'.</p>
<p>To encrypt the user password via symmetric encryption we might do <code>encrypt(plaintext: 'fake-password', encryption_key: cryptojs.pbkdf2(value: 'example username' + salt_or_pepper))</code>. By this means, we would, in theory, create an <code>encryption_key</code> that can be determined from the public username, but which requires the secret <code>salt_or_pepper</code> to generate. This is a common scheme for protecting passwords, as exemplified in bcrypt &amp; scrypt. Because the encryption key is symmetric, we can use this derived key to also decrypt the ciphertext.</p>
<p>Because of the length extension issue, if the attacker obtains (via attack 1), a collision with 'example username', the attacker <em>does not need to know</em> <code>salt_or_pepper</code> to decrypt their account data, only their public username.</p>
<h3 id="description">Description</h3>
<p>PBKDF2 is a key-derivation function that is used for two main purposes: (1) to stretch or squash a variable length password's entropy into a fixed size for consumption by another cryptographic operation and (2) to reduce the chance of downstream operations recovering the password input (for example, for password storage).</p>
<p>Unlike the modern <a href="https://w3c.github.io/webcrypto/#pbkdf2-operations">webcrypto</a> standard, crypto-js does not throw an error when a number of iterations is not specified, and defaults to one single iteration. In the year 1993, when PBKDF2 was originally specified, the minimum number of iterations suggested was set at 1,000. Today, <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">OWASP recommends 1,300,000</a>:</p>
<p><a href="https://github.com/entronad/crypto-es/blob/aa48d48413549addc06cd737a272466d5fc1b5e6/lib/pbkdf2.js#L35-L39">https://github.com/entronad/crypto-es/blob/aa48d48413549addc06cd737a272466d5fc1b5e6/lib/pbkdf2.js#L35-L39</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Consult the <a title="OWASP PBKDF2 Cheatsheet" href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2">OWASP PBKDF2 Cheatsheet</a>. Configure to use SHA256 with at least 250,000 iterations.</p>
<h3 id="coordinated-disclosure">Coordinated disclosure</h3>
<p>This issue was simultaneously submitted to <a href="https://github.com/brix/crypto-js">crypto-js</a> and <a href="https://github.com/entronad/crypto-es">crypto-es</a> on the 23rd of October 2023.</p>
<h3 id="caveats">Caveats</h3>
<p>This issue was found in a security review that was <em>not</em> scoped to crypto-es. This report is not an indication that crypto-es has undergone a formal security assessment by the author.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/entronad/crypto-es/security/advisories/GHSA-mpj8-q39x-wq5h">https://github.com/entronad/crypto-es/security/advisories/GHSA-mpj8-q39x-wq5h</a></li>
<li><a href="https://github.com/entronad/crypto-es/commit/d506677fae3d03a454b37ad126e0c119d416b757">https://github.com/entronad/crypto-es/commit/d506677fae3d03a454b37ad126e0c119d416b757</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46133">https://nvd.nist.gov/vuln/detail/CVE-2023-46133</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj8-q39x-wq5h">https://github.com/advisories/GHSA-mpj8-q39x-wq5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj8-q39x-wq5h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-25T21:14:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[debug] debug Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</id>
        <link href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h"/>
        <updated>2023-10-24T22:46:24.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-20165">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>
<li><a href="https://github.com/debug-js/debug/pull/504">https://github.com/debug-js/debug/pull/504</a></li>
<li><a href="https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/3.1.0">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>
<li><a href="https://vuldb.com/?id.217665">https://vuldb.com/?id.217665</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/2.6.9">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>
<li><a href="https://vuldb.com/?ctiid.217665">https://vuldb.com/?ctiid.217665</a></li>
<li><a href="https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a">https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a</a></li>
<li><a href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-09T12:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[debug] debug Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</id>
        <link href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h"/>
        <updated>2023-10-24T22:46:24.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-20165">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>
<li><a href="https://github.com/debug-js/debug/pull/504">https://github.com/debug-js/debug/pull/504</a></li>
<li><a href="https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/3.1.0">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>
<li><a href="https://vuldb.com/?id.217665">https://vuldb.com/?id.217665</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/2.6.9">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>
<li><a href="https://vuldb.com/?ctiid.217665">https://vuldb.com/?ctiid.217665</a></li>
<li><a href="https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a">https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a</a></li>
<li><a href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-09T12:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</id>
        <link href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9"/>
        <updated>2023-10-24T21:03:52.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> functions. </p>
<p>Steps to reproduce (provided by reporter Liyuan Chen):</p>
<pre><code class="language-js">var lo = require('lodash');

function build_blank(n) {
    var ret = "1"
    for (var i = 0; i &lt; n; i++) {
        ret += " "
    }
    return ret + "1";
}
var s = build_blank(50000) var time0 = Date.now();
lo.trim(s) 
var time_cost0 = Date.now() - time0;
console.log("time_cost0: " + time_cost0);
var time1 = Date.now();
lo.toNumber(s) var time_cost1 = Date.now() - time1;
console.log("time_cost1: " + time_cost1);
var time2 = Date.now();
lo.trimEnd(s);
var time_cost2 = Date.now() - time2;
console.log("time_cost2: " + time_cost2);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28500">https://nvd.nist.gov/vuln/detail/CVE-2020-28500</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065">https://github.com/lodash/lodash/pull/5065</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7">https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7</a></li>
<li><a href="https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8">https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1018905">https://snyk.io/vuln/SNYK-JS-LODASH-1018905</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a">https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a</a></li>
<li><a href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9">https://github.com/advisories/GHSA-29mw-wpgm-hmr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-06T20:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</id>
        <link href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9"/>
        <updated>2023-10-24T21:03:52.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> functions. </p>
<p>Steps to reproduce (provided by reporter Liyuan Chen):</p>
<pre><code class="language-js">var lo = require('lodash');

function build_blank(n) {
    var ret = "1"
    for (var i = 0; i &lt; n; i++) {
        ret += " "
    }
    return ret + "1";
}
var s = build_blank(50000) var time0 = Date.now();
lo.trim(s) 
var time_cost0 = Date.now() - time0;
console.log("time_cost0: " + time_cost0);
var time1 = Date.now();
lo.toNumber(s) var time_cost1 = Date.now() - time1;
console.log("time_cost1: " + time_cost1);
var time2 = Date.now();
lo.trimEnd(s);
var time_cost2 = Date.now() - time2;
console.log("time_cost2: " + time_cost2);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28500">https://nvd.nist.gov/vuln/detail/CVE-2020-28500</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065">https://github.com/lodash/lodash/pull/5065</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7">https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7</a></li>
<li><a href="https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8">https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1018905">https://snyk.io/vuln/SNYK-JS-LODASH-1018905</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a">https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a</a></li>
<li><a href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9">https://github.com/advisories/GHSA-29mw-wpgm-hmr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-06T20:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2023-10-24T20:51:25.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions <code>pick</code>, <code>set</code>, <code>setWith</code>, <code>update</code>, <code>updateWith</code>, and <code>zipObjectDeep</code> allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://github.com/github/advisory-database/pull/2884">https://github.com/github/advisory-database/pull/2884</a></li>
<li><a href="https://hackerone.com/reports/864701">https://hackerone.com/reports/864701</a></li>
<li><a href="https://github.com/lodash/lodash/wiki/Changelog#v41719">https://github.com/lodash/lodash/wiki/Changelog#v41719</a></li>
<li><a href="https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744">https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash-es] Prototype Pollution in lodash]]></title>
        <id>https://github.com/advisories/GHSA-p6mc-m468-83gw</id>
        <link href="https://github.com/advisories/GHSA-p6mc-m468-83gw"/>
        <updated>2023-10-24T20:51:25.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions <code>pick</code>, <code>set</code>, <code>setWith</code>, <code>update</code>, <code>updateWith</code>, and <code>zipObjectDeep</code> allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.</p>
<p>This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lodash/lodash/issues/4744">https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12">https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8203">https://nvd.nist.gov/vuln/detail/CVE-2020-8203</a></li>
<li><a href="https://hackerone.com/reports/712065">https://hackerone.com/reports/712065</a></li>
<li><a href="https://github.com/lodash/lodash/issues/4874">https://github.com/lodash/lodash/issues/4874</a></li>
<li><a href="https://github.com/github/advisory-database/pull/2884">https://github.com/github/advisory-database/pull/2884</a></li>
<li><a href="https://hackerone.com/reports/864701">https://hackerone.com/reports/864701</a></li>
<li><a href="https://github.com/lodash/lodash/wiki/Changelog#v41719">https://github.com/lodash/lodash/wiki/Changelog#v41719</a></li>
<li><a href="https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744">https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744</a></li>
<li><a href="https://github.com/advisories/GHSA-p6mc-m468-83gw">https://github.com/advisories/GHSA-p6mc-m468-83gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6mc-m468-83gw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-07-15T19:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server may crash when uploading file without extension]]></title>
        <id>https://github.com/advisories/GHSA-792q-q67h-w579</id>
        <link href="https://github.com/advisories/GHSA-792q-q67h-w579"/>
        <updated>2023-10-31T21:18:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Parse Server crashes when uploading a file without extension.</p>
<h3 id="patches">Patches</h3>
<p>A permanent fix has been implemented to prevent the server from crashing.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li>GitHub security advisory: <a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579">https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579</a></li>
<li>Patched in Parse Server 6: <a href="https://github.com/parse-community/parse-server/releases/tag/6.3.1">https://github.com/parse-community/parse-server/releases/tag/6.3.1</a></li>
<li>Patched in Parse Server 5 (LTS): <a href="https://github.com/parse-community/parse-server/releases/tag/5.5.6">https://github.com/parse-community/parse-server/releases/tag/5.5.6</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579">https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/686a9f282dc23c31beab3d93e6d21ccd0e1328fe">https://github.com/parse-community/parse-server/commit/686a9f282dc23c31beab3d93e6d21ccd0e1328fe</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/fd86278919556d3682e7e2c856dfccd5beffbfc0">https://github.com/parse-community/parse-server/commit/fd86278919556d3682e7e2c856dfccd5beffbfc0</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.5.6">https://github.com/parse-community/parse-server/releases/tag/5.5.6</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/6.3.1">https://github.com/parse-community/parse-server/releases/tag/6.3.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46119">https://nvd.nist.gov/vuln/detail/CVE-2023-46119</a></li>
<li><a href="https://github.com/advisories/GHSA-792q-q67h-w579">https://github.com/advisories/GHSA-792q-q67h-w579</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-792q-q67h-w579</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-24T01:35:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Parse Server may crash when uploading file without extension]]></title>
        <id>https://github.com/advisories/GHSA-792q-q67h-w579</id>
        <link href="https://github.com/advisories/GHSA-792q-q67h-w579"/>
        <updated>2023-10-31T21:18:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Parse Server crashes when uploading a file without extension.</p>
<h3 id="patches">Patches</h3>
<p>A permanent fix has been implemented to prevent the server from crashing.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li>GitHub security advisory: <a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579">https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579</a></li>
<li>Patched in Parse Server 6: <a href="https://github.com/parse-community/parse-server/releases/tag/6.3.1">https://github.com/parse-community/parse-server/releases/tag/6.3.1</a></li>
<li>Patched in Parse Server 5 (LTS): <a href="https://github.com/parse-community/parse-server/releases/tag/5.5.6">https://github.com/parse-community/parse-server/releases/tag/5.5.6</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579">https://github.com/parse-community/parse-server/security/advisories/GHSA-792q-q67h-w579</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/686a9f282dc23c31beab3d93e6d21ccd0e1328fe">https://github.com/parse-community/parse-server/commit/686a9f282dc23c31beab3d93e6d21ccd0e1328fe</a></li>
<li><a href="https://github.com/parse-community/parse-server/commit/fd86278919556d3682e7e2c856dfccd5beffbfc0">https://github.com/parse-community/parse-server/commit/fd86278919556d3682e7e2c856dfccd5beffbfc0</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/5.5.6">https://github.com/parse-community/parse-server/releases/tag/5.5.6</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/6.3.1">https://github.com/parse-community/parse-server/releases/tag/6.3.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46119">https://nvd.nist.gov/vuln/detail/CVE-2023-46119</a></li>
<li><a href="https://github.com/advisories/GHSA-792q-q67h-w579">https://github.com/advisories/GHSA-792q-q67h-w579</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-792q-q67h-w579</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-24T01:35:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[json-logic-js] json-logic-js Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-67j4-2mh6-8627</id>
        <link href="https://github.com/advisories/GHSA-67j4-2mh6-8627"/>
        <updated>2023-10-20T22:49:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, has been found in json-logic-js 2.0.0. Affected by this issue is some unknown functionality of the file logic.js. The manipulation leads to command injection. Upgrading to version 2.0.1 is able to address this issue. The name of the patch is c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227. It is recommended to upgrade the affected component. VDB-222266 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4329">https://nvd.nist.gov/vuln/detail/CVE-2021-4329</a></li>
<li><a href="https://github.com/jwadhams/json-logic-js/pull/98">https://github.com/jwadhams/json-logic-js/pull/98</a></li>
<li><a href="https://github.com/jwadhams/json-logic-js/commit/c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227">https://github.com/jwadhams/json-logic-js/commit/c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227</a></li>
<li><a href="https://vuldb.com/?ctiid.222266">https://vuldb.com/?ctiid.222266</a></li>
<li><a href="https://vuldb.com/?id.222266">https://vuldb.com/?id.222266</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/json-logic/PYSEC-2023-209.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/json-logic/PYSEC-2023-209.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-67j4-2mh6-8627">https://github.com/advisories/GHSA-67j4-2mh6-8627</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67j4-2mh6-8627</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-05T21:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[is-url] is-url Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p9w8-2mpq-49h9</id>
        <link href="https://github.com/advisories/GHSA-p9w8-2mpq-49h9"/>
        <updated>2023-10-20T22:45:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Segmentio is-url up to 1.2.2. It has been rated as problematic. Affected by this issue is an unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. Upgrading to version 1.2.3 is able to address this issue. The name of the patch is 149550935c63a98c11f27f694a7c4a9479e53794. It is recommended to upgrade the affected component. VDB-220058 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25079">https://nvd.nist.gov/vuln/detail/CVE-2018-25079</a></li>
<li><a href="https://github.com/segmentio/is-url/pull/18">https://github.com/segmentio/is-url/pull/18</a></li>
<li><a href="https://github.com/segmentio/is-url/commit/149550935c63a98c11f27f694a7c4a9479e53794">https://github.com/segmentio/is-url/commit/149550935c63a98c11f27f694a7c4a9479e53794</a></li>
<li><a href="https://github.com/segmentio/is-url/releases/tag/v1.2.3">https://github.com/segmentio/is-url/releases/tag/v1.2.3</a></li>
<li><a href="https://vuldb.com/?ctiid.220058">https://vuldb.com/?ctiid.220058</a></li>
<li><a href="https://vuldb.com/?id.220058">https://vuldb.com/?id.220058</a></li>
<li><a href="https://github.com/advisories/GHSA-p9w8-2mpq-49h9">https://github.com/advisories/GHSA-p9w8-2mpq-49h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9w8-2mpq-49h9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-04T06:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simple-markdown] Regular Expression Denial of Service in simple-markdown]]></title>
        <id>https://github.com/advisories/GHSA-j533-2g8v-pmpg</id>
        <link href="https://github.com/advisories/GHSA-j533-2g8v-pmpg"/>
        <updated>2023-10-20T22:44:34.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, was found in simple-markdown 0.6.0. Affected is an unknown function of the file simple-markdown.js. The manipulation with the input &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;:/:/:/:/:/:/:/:/:/:/ leads to inefficient regular expression complexity. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 0.6.1 is able to address this issue. The name of the patch is 015a719bf5cdc561feea05500ecb3274ef609cd2. It is recommended to upgrade the affected component. VDB-220638 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25102">https://nvd.nist.gov/vuln/detail/CVE-2019-25102</a></li>
<li><a href="https://github.com/ariabuckles/simple-markdown/pull/73">https://github.com/ariabuckles/simple-markdown/pull/73</a></li>
<li><a href="https://github.com/ariabuckles/simple-markdown/commit/015a719bf5cdc561feea05500ecb3274ef609cd2">https://github.com/ariabuckles/simple-markdown/commit/015a719bf5cdc561feea05500ecb3274ef609cd2</a></li>
<li><a href="https://github.com/ariabuckles/simple-markdown/releases/tag/0.6.1">https://github.com/ariabuckles/simple-markdown/releases/tag/0.6.1</a></li>
<li><a href="https://vuldb.com/?ctiid.220638">https://vuldb.com/?ctiid.220638</a></li>
<li><a href="https://vuldb.com/?id.220638">https://vuldb.com/?id.220638</a></li>
<li><a href="https://github.com/advisories/GHSA-j533-2g8v-pmpg">https://github.com/advisories/GHSA-j533-2g8v-pmpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j533-2g8v-pmpg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-12T15:30:25.000Z</published>
    </entry>
</feed>