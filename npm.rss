<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-10-19T17:01:23.239Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE XSS vulnerability in notificationManager.open API]]></title>
        <id>https://github.com/advisories/GHSA-hgqx-r2hp-jr38</id>
        <link href="https://github.com/advisories/GHSA-hgqx-r2hp-jr38"/>
        <updated>2023-10-19T16:42:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s Notification Manager API. The vulnerability exploits TinyMCE's unfiltered notification system, which is used in error handling.  The conditions for this exploit requires carefully crafted malicious content to have been inserted into the editor and a notification to have been triggered.  </p>
<p>When a notification was opened, the HTML within the text argument was displayed unfiltered in the notification. The vulnerability allowed arbitrary JavaScript execution when an notification presented in the TinyMCE UI for the current user.  This issue could also be exploited by any integration which uses a TinyMCE notification to display unfiltered HTML content.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 5.10.8 and TinyMCE 6.7.1 by ensuring that the HTML displayed in the notification is sanitized, preventing the exploit.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 5.10.8 or higher for TinyMCE 5.x.</li>
<li>Upgrade to TinyMCE 6.7.1 or higher for TinyMCE 6.x.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-hgqx-r2hp-jr38">https://github.com/tinymce/tinymce/security/advisories/GHSA-hgqx-r2hp-jr38</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
<li><a href="https://github.com/advisories/GHSA-hgqx-r2hp-jr38">https://github.com/advisories/GHSA-hgqx-r2hp-jr38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgqx-r2hp-jr38</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T16:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE XSS vulnerability in notificationManager.open API]]></title>
        <id>https://github.com/advisories/GHSA-hgqx-r2hp-jr38</id>
        <link href="https://github.com/advisories/GHSA-hgqx-r2hp-jr38"/>
        <updated>2023-10-19T16:42:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s Notification Manager API. The vulnerability exploits TinyMCE's unfiltered notification system, which is used in error handling.  The conditions for this exploit requires carefully crafted malicious content to have been inserted into the editor and a notification to have been triggered.  </p>
<p>When a notification was opened, the HTML within the text argument was displayed unfiltered in the notification. The vulnerability allowed arbitrary JavaScript execution when an notification presented in the TinyMCE UI for the current user.  This issue could also be exploited by any integration which uses a TinyMCE notification to display unfiltered HTML content.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 5.10.8 and TinyMCE 6.7.1 by ensuring that the HTML displayed in the notification is sanitized, preventing the exploit.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 5.10.8 or higher for TinyMCE 5.x.</li>
<li>Upgrade to TinyMCE 6.7.1 or higher for TinyMCE 6.x.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-hgqx-r2hp-jr38">https://github.com/tinymce/tinymce/security/advisories/GHSA-hgqx-r2hp-jr38</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
<li><a href="https://github.com/advisories/GHSA-hgqx-r2hp-jr38">https://github.com/advisories/GHSA-hgqx-r2hp-jr38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgqx-r2hp-jr38</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T16:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE mXSS vulnerability in undo/redo, getContent API, resetContent API, and Autosave plugin]]></title>
        <id>https://github.com/advisories/GHSA-v65r-p3vv-jjfv</id>
        <link href="https://github.com/advisories/GHSA-v65r-p3vv-jjfv"/>
        <updated>2023-10-19T16:36:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://researchgate.net/publication/266654651_mXSS_attacks_Attacking_well-secured_web-applications_by_using_innerHTML_mutations">mutation cross-site scripting</a> (mXSS) vulnerability was discovered in TinyMCE’s core undo and redo functionality. When a carefully-crafted HTML snippet passes the XSS sanitisation layer, it is manipulated as a string by internal trimming functions before being stored in the undo stack. If the HTML snippet is restored from the undo stack, the combination of the string manipulation and reparative parsing by either the browser's native <a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMParser">DOMParser API</a> (TinyMCE 6) or the <a href="https://www.tiny.cloud/docs/api/tinymce.html/tinymce.html.saxparser/">SaxParser API</a> (TinyMCE 5) mutates the HTML maliciously, allowing an XSS payload to be executed.
​This vulnerability also impacts these related TinyMCE APIs and plugins:​</p>
<ul>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#getContent"><code>tinymce.Editor.getContent({ format: 'raw' })</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#resetContent"><code>tinymce.Editor.resetContent()</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/autosave/">Austosave Plugin</a></li>
</ul>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 5.10.8 and TinyMCE 6.7.1 by ensuring HTML is trimmed using node-level manipulation instead of string manipulation.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 5.10.8 or higher for TinyMCE 5.x.</li>
<li>Upgrade to TinyMCE 6.7.1 or higher for TinyMCE 6.x.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-v65r-p3vv-jjfv">https://github.com/tinymce/tinymce/security/advisories/GHSA-v65r-p3vv-jjfv</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
<li><a href="https://github.com/advisories/GHSA-v65r-p3vv-jjfv">https://github.com/advisories/GHSA-v65r-p3vv-jjfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v65r-p3vv-jjfv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T16:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce] TinyMCE mXSS vulnerability in undo/redo, getContent API, resetContent API, and Autosave plugin]]></title>
        <id>https://github.com/advisories/GHSA-v65r-p3vv-jjfv</id>
        <link href="https://github.com/advisories/GHSA-v65r-p3vv-jjfv"/>
        <updated>2023-10-19T16:36:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://researchgate.net/publication/266654651_mXSS_attacks_Attacking_well-secured_web-applications_by_using_innerHTML_mutations">mutation cross-site scripting</a> (mXSS) vulnerability was discovered in TinyMCE’s core undo and redo functionality. When a carefully-crafted HTML snippet passes the XSS sanitisation layer, it is manipulated as a string by internal trimming functions before being stored in the undo stack. If the HTML snippet is restored from the undo stack, the combination of the string manipulation and reparative parsing by either the browser's native <a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMParser">DOMParser API</a> (TinyMCE 6) or the <a href="https://www.tiny.cloud/docs/api/tinymce.html/tinymce.html.saxparser/">SaxParser API</a> (TinyMCE 5) mutates the HTML maliciously, allowing an XSS payload to be executed.
​This vulnerability also impacts these related TinyMCE APIs and plugins:​</p>
<ul>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#getContent"><code>tinymce.Editor.getContent({ format: 'raw' })</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#resetContent"><code>tinymce.Editor.resetContent()</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/autosave/">Austosave Plugin</a></li>
</ul>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 5.10.8 and TinyMCE 6.7.1 by ensuring HTML is trimmed using node-level manipulation instead of string manipulation.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 5.10.8 or higher for TinyMCE 5.x.</li>
<li>Upgrade to TinyMCE 6.7.1 or higher for TinyMCE 6.x.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-v65r-p3vv-jjfv">https://github.com/tinymce/tinymce/security/advisories/GHSA-v65r-p3vv-jjfv</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes">https://tiny.cloud/docs/release-notes/release-notes5108/#securityfixes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes">https://tiny.cloud/docs/tinymce/6/6.7.1-release-notes/#security-fixes</a></li>
<li><a href="https://github.com/advisories/GHSA-v65r-p3vv-jjfv">https://github.com/advisories/GHSA-v65r-p3vv-jjfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v65r-p3vv-jjfv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T16:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.trim] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</id>
        <link href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9"/>
        <updated>2023-10-18T22:34:24.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> functions. </p>
<p>Steps to reproduce (provided by reporter Liyuan Chen):</p>
<pre><code class="language-js">var lo = require('lodash');

function build_blank(n) {
    var ret = "1"
    for (var i = 0; i &lt; n; i++) {
        ret += " "
    }
    return ret + "1";
}
var s = build_blank(50000) var time0 = Date.now();
lo.trim(s) var time_cost0 = Date.now() - time0;
console.log("time_cost0: " + time_cost0) var time1 = Date.now();
lo.toNumber(s) var time_cost1 = Date.now() - time1;
console.log("time_cost1: " + time_cost1) var time2 = Date.now();
lo.trimEnd(s) var time_cost2 = Date.now() - time2;
console.log("time_cost2: " + time_cost2)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28500">https://nvd.nist.gov/vuln/detail/CVE-2020-28500</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065">https://github.com/lodash/lodash/pull/5065</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7">https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7</a></li>
<li><a href="https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8">https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1018905">https://snyk.io/vuln/SNYK-JS-LODASH-1018905</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a">https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a</a></li>
<li><a href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9">https://github.com/advisories/GHSA-29mw-wpgm-hmr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-06T20:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lodash.trimend] Regular Expression Denial of Service (ReDoS) in lodash]]></title>
        <id>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</id>
        <link href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9"/>
        <updated>2023-10-18T22:34:24.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> functions. </p>
<p>Steps to reproduce (provided by reporter Liyuan Chen):</p>
<pre><code class="language-js">var lo = require('lodash');

function build_blank(n) {
    var ret = "1"
    for (var i = 0; i &lt; n; i++) {
        ret += " "
    }
    return ret + "1";
}
var s = build_blank(50000) var time0 = Date.now();
lo.trim(s) var time_cost0 = Date.now() - time0;
console.log("time_cost0: " + time_cost0) var time1 = Date.now();
lo.toNumber(s) var time_cost1 = Date.now() - time1;
console.log("time_cost1: " + time_cost1) var time2 = Date.now();
lo.trimEnd(s) var time_cost2 = Date.now() - time2;
console.log("time_cost2: " + time_cost2)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28500">https://nvd.nist.gov/vuln/detail/CVE-2020-28500</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065">https://github.com/lodash/lodash/pull/5065</a></li>
<li><a href="https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7">https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7</a></li>
<li><a href="https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8">https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210312-0006/">https://security.netapp.com/advisory/ntap-20210312-0006/</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-LODASH-1018905">https://snyk.io/vuln/SNYK-JS-LODASH-1018905</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896">https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf</a></li>
<li><a href="https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a">https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a</a></li>
<li><a href="https://github.com/advisories/GHSA-29mw-wpgm-hmr9">https://github.com/advisories/GHSA-29mw-wpgm-hmr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29mw-wpgm-hmr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-06T20:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deobfuscator] Synchrony deobfuscator prototype pollution vulnerability leading to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-jg82-xh3w-rhxx</id>
        <link href="https://github.com/advisories/GHSA-jg82-xh3w-rhxx"/>
        <updated>2023-10-18T18:27:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <code>__proto__</code> pollution vulnerability exists in synchrony versions before v2.4.4. Successful exploitation could lead to arbitrary code execution.</p>
<h3 id="summary">Summary</h3>
<p>A <code>__proto__</code> pollution vulnerability exists in the <a href="src/transformers/literalmap.ts">LiteralMap</a> transformer allowing crafted input to modify properties in the Object prototype.</p>
<p>When executing in Node.js, due to use of the <code>prettier</code> module, defining a <code>parser</code> property on <code>__proto__</code> with a path to a JS module on disk <a href="https://github.com/prettier/prettier/blob/2.5.1/src/main/parser.js#L53-L63">causes a <code>require</code> of the value</a> which can lead to arbitrary code execution.</p>
<h3 id="patch">Patch</h3>
<p>A fix has been released in <code>deobfuscator@2.4.4</code>.</p>
<h3 id="mitigation">Mitigation</h3>
<ul>
<li>Upgrade synchrony to v2.4.4</li>
<li>Launch node with the <a href="https://nodejs.dev/en/api/v20/cli/#--disable-protomode">--disable-proto=delete</a> or <a href="https://nodejs.dev/en/api/v20/cli/#--disable-protomode">--disable-proto=throw</a> flag</li>
</ul>
<h3 id="proof-of-concept">Proof of Concept</h3>
<p>Craft a malicious input file named <code>poc.js</code> as follows:</p>
<pre><code class="language-js">// Malicious code to be run after this file is imported. Logs the result of shell command "dir" to the console.
console.log(require('child_process').execSync('dir').toString())

// Synchrony exploit PoC
{
  var __proto__ = { parser: 'poc.js' }
}
</code></pre>
<p>Then, run <code>synchrony poc.js</code> from the same directory as the malicious file.</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found and disclosed by <a href="https://github.com/SteakEnthusiast">William Khem-Marquez</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/relative/synchrony/security/advisories/GHSA-jg82-xh3w-rhxx">https://github.com/relative/synchrony/security/advisories/GHSA-jg82-xh3w-rhxx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45811">https://nvd.nist.gov/vuln/detail/CVE-2023-45811</a></li>
<li><a href="https://github.com/relative/synchrony/commit/b583126be94c4db7c5a478f1c5204bfb4162cf40">https://github.com/relative/synchrony/commit/b583126be94c4db7c5a478f1c5204bfb4162cf40</a></li>
<li><a href="https://github.com/relative/synchrony/security/advisories/src/transformers/literalmap.ts">https://github.com/relative/synchrony/security/advisories/src/transformers/literalmap.ts</a></li>
<li><a href="https://github.com/advisories/GHSA-jg82-xh3w-rhxx">https://github.com/advisories/GHSA-jg82-xh3w-rhxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jg82-xh3w-rhxx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-18T18:27:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@seal-security/mongoose-fixed] Prototype Pollution in ali-security/mongoose]]></title>
        <id>https://github.com/advisories/GHSA-rc4v-99cr-pjcm</id>
        <link href="https://github.com/advisories/GHSA-rc4v-99cr-pjcm"/>
        <updated>2023-10-17T14:21:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability causes a Prototype Pollution in document.js, through functions such as findByIdAndUpdate().
For applications using Express and EJS, this can potentially allow remote code execution.</p>
<h3 id="patches">Patches</h3>
<p>The original patched version for mongoose 5.3.3 did not include a fix for CVE-2023-3696. Therefore the existing version @seal-security/mongoose-fixed version 5.3.3 is affected by this vulnerability (though it is protected from CVE-2022-2564 and CVE-2019-17426). To mitigate this issue, a @seal-security/mongoose-fixed version 5.3.4 has been deployed. Note that this version is compatible with the original mongoose version 5.3.3, not version 5.3.4</p>
<h3 id="references">References</h3>
<p><a href="https://security.snyk.io/vuln/SNYK-JS-MONGOOSE-5777721">https://security.snyk.io/vuln/SNYK-JS-MONGOOSE-5777721</a>
<a href="https://github.com/advisories/GHSA-9m93-w8w6-76hh">https://github.com/advisories/GHSA-9m93-w8w6-76hh</a>
<a href="https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2">https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ali-security/mongoose/security/advisories/GHSA-rc4v-99cr-pjcm">https://github.com/ali-security/mongoose/security/advisories/GHSA-rc4v-99cr-pjcm</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2">https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MONGOOSE-5777721">https://security.snyk.io/vuln/SNYK-JS-MONGOOSE-5777721</a></li>
<li><a href="https://github.com/advisories/GHSA-rc4v-99cr-pjcm">https://github.com/advisories/GHSA-rc4v-99cr-pjcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rc4v-99cr-pjcm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-17T14:21:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nocodb] nocodb SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3m5q-q39v-xf8f</id>
        <link href="https://github.com/advisories/GHSA-3m5q-q39v-xf8f"/>
        <updated>2023-10-18T14:28:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Nocodb contains SQL injection vulnerability, that allows an authenticated attacker with creator access to query the underlying database.</p>
<h2 id="product">Product</h2>
<p>nocodb/nocodb</p>
<h2 id="tested-version">Tested Version</h2>
<p><a href="https://github.com/nocodb/nocodb/releases/tag/0.109.2">0.109.2</a></p>
<h2 id="details">Details</h2>
<h3 id="sql-injection-in-sqliteclientts-ghsl-2023-141">SQL injection in <code>SqliteClient.ts</code> (<code>GHSL-2023-141</code>)</h3>
<p>By supplying a specially crafted payload to the given below parameter and endpoint, an attacker can inject arbitrary SQL queries to be executed. Since this is a blind SQL injections, an attacker may need to use time-based payloads which would include a function to delay execution for a given number of seconds. The response time indicates, whether the result of the query execution was true or false. Depending on the result, the HTTP response will be returned after a given number of seconds, indicating TRUE, or immediately, indicating FALSE. In that way, an attacker can reveal the data present in the database.</p>
<p>The <a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L628-L654"><code>triggerList</code></a> method creates a SQL query using the user-controlled <a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L637"><code>table_name</code></a> parameter value from the <a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/controllers/tables.controller.ts#L63"><code>tableCreate</code></a> endpoint.</p>
<pre><code class="language-javascript">async triggerList(args: any = {}) {
  const _func = this.triggerList.name;
  const result = new Result();
  log.api(`${_func}:args:`, args);

  try {
    args.databaseName = this.connectionConfig.connection.database;

    const response = await this.sqlClient.raw(
      `select *, name as trigger_name from sqlite_master where type = 'trigger' and tbl_name='${args.tn}';`,
    );
[...]
</code></pre>
<h4 id="impact">Impact</h4>
<p>This issue may lead to <code>Information Disclosure</code>.</p>
<h2 id="credit">Credit</h2>
<p>This issue was discovered and reported by GHSL team member <a href="https://github.com/sylwia-budzynska">@sylwia-budzynska (Sylwia Budzynska)</a>.</p>
<h2 id="disclosure-policy">Disclosure Policy</h2>
<p>This report is subject to our <a href="https://securitylab.github.com/advisories#policy">coordinated disclosure policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nocodb/nocodb/security/advisories/GHSA-3m5q-q39v-xf8f">https://github.com/nocodb/nocodb/security/advisories/GHSA-3m5q-q39v-xf8f</a></li>
<li><a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/controllers/tables.controller.ts#L63">https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/controllers/tables.controller.ts#L63</a></li>
<li><a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L628-L654">https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L628-L654</a></li>
<li><a href="https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L637">https://github.com/nocodb/nocodb/blob/3ec82824eeb2295f6b67fd67e7d6049784b41221/packages/nocodb/src/db/sql-client/lib/sqlite/SqliteClient.ts#L637</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43794">https://nvd.nist.gov/vuln/detail/CVE-2023-43794</a></li>
<li><a href="https://github.com/advisories/GHSA-3m5q-q39v-xf8f">https://github.com/advisories/GHSA-3m5q-q39v-xf8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3m5q-q39v-xf8f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-17T13:52:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-qpdf] node-qpdf vulnerable to command injection ]]></title>
        <id>https://github.com/advisories/GHSA-fpr8-4wvx-j9q3</id>
        <link href="https://github.com/advisories/GHSA-fpr8-4wvx-j9q3"/>
        <updated>2023-10-19T00:09:23.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-qpdf are vulnerable to Command Injection such that the package-exported method encrypt() fails to sanitize its parameter input, which later flows into a sensitive command execution API. As a result, attackers may inject malicious commands once they can specify the input pdf file path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26155">https://nvd.nist.gov/vuln/detail/CVE-2023-26155</a></li>
<li><a href="https://github.com/nrhirani/node-qpdf/issues/23">https://github.com/nrhirani/node-qpdf/issues/23</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODEQPDF-5747918">https://security.snyk.io/vuln/SNYK-JS-NODEQPDF-5747918</a></li>
<li><a href="https://github.com/advisories/GHSA-fpr8-4wvx-j9q3">https://github.com/advisories/GHSA-fpr8-4wvx-j9q3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpr8-4wvx-j9q3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-14T06:30:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's cookie header not cleared on cross-origin redirect in fetch]]></title>
        <id>https://github.com/advisories/GHSA-wqq4-5wpv-mx2g</id>
        <link href="https://github.com/advisories/GHSA-wqq4-5wpv-mx2g"/>
        <updated>2023-10-16T14:05:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Undici clears Authorization headers on cross-origin redirects, but does not clear <code>Cookie</code> headers. By design, <code>cookie</code> headers are <a href="https://fetch.spec.whatwg.org/#forbidden-request-header">forbidden request headers</a>, disallowing them to be set in <code>RequestInit.headers</code> in browser environments. Since Undici handles headers more liberally than the specification, there was a disconnect from the assumptions the spec made, and Undici's implementation of fetch.</p>
<p>As such this may lead to accidental leakage of cookie to a 3rd-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the 3rd party site.</p>
<h3 id="patches">Patches</h3>
<p>This was patched in <a href="https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76">e041de359221ebeae04c469e8aff4145764e6d76</a>, which is included in version 5.26.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-q768-x9m6-m9qp">https://github.com/nodejs/undici/security/advisories/GHSA-q768-x9m6-m9qp</a></li>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-wqq4-5wpv-mx2g">https://github.com/nodejs/undici/security/advisories/GHSA-wqq4-5wpv-mx2g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45143">https://nvd.nist.gov/vuln/detail/CVE-2023-45143</a></li>
<li><a href="https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76">https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76</a></li>
<li><a href="https://hackerone.com/reports/2166948">https://hackerone.com/reports/2166948</a></li>
<li><a href="https://github.com/nodejs/undici/releases/tag/v5.26.2">https://github.com/nodejs/undici/releases/tag/v5.26.2</a></li>
<li><a href="https://github.com/advisories/GHSA-wqq4-5wpv-mx2g">https://github.com/advisories/GHSA-wqq4-5wpv-mx2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wqq4-5wpv-mx2g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-10-16T14:05:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@babel/traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code]]></title>
        <id>https://github.com/advisories/GHSA-67hx-6x53-jw92</id>
        <link href="https://github.com/advisories/GHSA-67hx-6x53-jw92"/>
        <updated>2023-10-19T14:21:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>
<p>Known affected plugins are:</p>
<ul>
<li><code>@babel/plugin-transform-runtime</code></li>
<li><code>@babel/preset-env</code> when using its <a href="https://babeljs.io/docs/babel-preset-env#usebuiltins"><code>useBuiltIns</code></a> option</li>
<li>Any "polyfill provider" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>
</ul>
<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>
<p><strong>Users that only compile trusted code are not impacted.</strong></p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>
<p>Babel 6 does not receive security fixes anymore (see <a href="https://github.com/babel/babel/security/policy">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>
<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>
<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>
<li><code>@babel/preset-env</code> v7.23.2</li>
<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>
<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>
<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>
<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>
<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>
</ul>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45133">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>
<li><a href="https://github.com/babel/babel/pull/16033">https://github.com/babel/babel/pull/16033</a></li>
<li><a href="https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v7.23.2">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5528">https://www.debian.org/security/2023/dsa-5528</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html">https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</a></li>
<li><a href="https://github.com/advisories/GHSA-67hx-6x53-jw92">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67hx-6x53-jw92</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-16T13:55:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@babel/traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code]]></title>
        <id>https://github.com/advisories/GHSA-67hx-6x53-jw92</id>
        <link href="https://github.com/advisories/GHSA-67hx-6x53-jw92"/>
        <updated>2023-10-19T14:21:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>
<p>Known affected plugins are:</p>
<ul>
<li><code>@babel/plugin-transform-runtime</code></li>
<li><code>@babel/preset-env</code> when using its <a href="https://babeljs.io/docs/babel-preset-env#usebuiltins"><code>useBuiltIns</code></a> option</li>
<li>Any "polyfill provider" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>
</ul>
<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>
<p><strong>Users that only compile trusted code are not impacted.</strong></p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>
<p>Babel 6 does not receive security fixes anymore (see <a href="https://github.com/babel/babel/security/policy">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>
<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>
<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>
<li><code>@babel/preset-env</code> v7.23.2</li>
<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>
<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>
<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>
<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>
<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>
</ul>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45133">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>
<li><a href="https://github.com/babel/babel/pull/16033">https://github.com/babel/babel/pull/16033</a></li>
<li><a href="https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v7.23.2">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5528">https://www.debian.org/security/2023/dsa-5528</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html">https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</a></li>
<li><a href="https://github.com/advisories/GHSA-67hx-6x53-jw92">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67hx-6x53-jw92</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-16T13:55:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-jose] Cisco node-jose improper validation of JWT signature]]></title>
        <id>https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</id>
        <link href="https://github.com/advisories/GHSA-jfxm-w8g2-4rcv"/>
        <updated>2023-10-14T05:03:23.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the Cisco node-jose open source library before 0.11.0 could allow an unauthenticated, remote attacker to re-sign tokens using a key that is embedded within the token. The vulnerability is due to node-jose following the JSON Web Signature (JWS) standard for JSON Web Tokens (JWTs). This standard specifies that a JSON Web Key (JWK) representing a public key can be embedded within the header of a JWS. This public key is then trusted for verification. An attacker could exploit this by forging valid JWS objects by removing the original signature, adding a new public key to the header, and then signing the object using the (attacker-owned) private key associated with the public key embedded in that JWS header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-0114">https://nvd.nist.gov/vuln/detail/CVE-2018-0114</a></li>
<li><a href="https://github.com/cisco/node-jose/blob/master/CHANGELOG.md">https://github.com/cisco/node-jose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/zi0Black/POC-CVE-2018-0114">https://github.com/zi0Black/POC-CVE-2018-0114</a></li>
<li><a href="https://tools.cisco.com/security/center/viewAlert.x?alertId=56326">https://tools.cisco.com/security/center/viewAlert.x?alertId=56326</a></li>
<li><a href="https://www.exploit-db.com/exploits/44324/">https://www.exploit-db.com/exploits/44324/</a></li>
<li><a href="https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445">https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445</a></li>
<li><a href="https://github.com/advisories/GHSA-jfxm-w8g2-4rcv">https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:17:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vrite/sdk] Server-Side Request Forgery (SSRF) in vriteio/vrite]]></title>
        <id>https://github.com/advisories/GHSA-w35p-wxwj-rcm9</id>
        <link href="https://github.com/advisories/GHSA-w35p-wxwj-rcm9"/>
        <updated>2023-10-13T23:38:24.000Z</updated>
        <content type="html"><![CDATA[<p>Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5572">https://nvd.nist.gov/vuln/detail/CVE-2023-5572</a></li>
<li><a href="https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>
<li><a href="https://huntr.dev/bounties/db649f1b-8578-4ef0-8df3-d320ab33f1be">https://huntr.dev/bounties/db649f1b-8578-4ef0-8df3-d320ab33f1be</a></li>
<li><a href="https://github.com/advisories/GHSA-w35p-wxwj-rcm9">https://github.com/advisories/GHSA-w35p-wxwj-rcm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w35p-wxwj-rcm9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-13T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vrite/sdk] Improper Input Validation in vriteio/vrite]]></title>
        <id>https://github.com/advisories/GHSA-44ff-9w4f-99w6</id>
        <link href="https://github.com/advisories/GHSA-44ff-9w4f-99w6"/>
        <updated>2023-10-13T23:38:19.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation in GitHub repository vriteio/vrite prior to 0.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5571">https://nvd.nist.gov/vuln/detail/CVE-2023-5571</a></li>
<li><a href="https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>
<li><a href="https://huntr.dev/bounties/926ca25f-dd4a-40cf-8e6b-9d7b5938e95a">https://huntr.dev/bounties/926ca25f-dd4a-40cf-8e6b-9d7b5938e95a</a></li>
<li><a href="https://github.com/advisories/GHSA-44ff-9w4f-99w6">https://github.com/advisories/GHSA-44ff-9w4f-99w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-44ff-9w4f-99w6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-13T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cryptiles] Insufficient Entropy in cryptiles]]></title>
        <id>https://github.com/advisories/GHSA-rq8g-5pc5-wrhr</id>
        <link href="https://github.com/advisories/GHSA-rq8g-5pc5-wrhr"/>
        <updated>2023-10-13T21:10:49.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>cryptiles</code> prior to 4.1.2 are vulnerable to Insufficient Entropy. The <code>randomDigits()</code> method does not provide sufficient entropy and its generates digits that are not evenly distributed.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 4.1.2. The package is deprecated and has been moved to <code>@hapi/cryptiles</code> and it is strongly recommended to use the maintained package.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000620">https://nvd.nist.gov/vuln/detail/CVE-2018-1000620</a></li>
<li><a href="https://github.com/hapijs/cryptiles/issues/34">https://github.com/hapijs/cryptiles/issues/34</a></li>
<li><a href="https://github.com/advisories/GHSA-rq8g-5pc5-wrhr">https://github.com/advisories/GHSA-rq8g-5pc5-wrhr</a></li>
<li><a href="https://github.com/nodejs/security-wg/blob/master/vuln/npm/476.json">https://github.com/nodejs/security-wg/blob/master/vuln/npm/476.json</a></li>
<li><a href="https://www.npmjs.com/advisories/720">https://www.npmjs.com/advisories/720</a></li>
<li><a href="https://www.npmjs.com/advisories/1464">https://www.npmjs.com/advisories/1464</a></li>
<li><a href="https://github.com/hapijs/cryptiles/commit/9332d4263a32b84e76bf538d7470d01ea63fa047">https://github.com/hapijs/cryptiles/commit/9332d4263a32b84e76bf538d7470d01ea63fa047</a></li>
<li><a href="https://github.com/hapijs/cryptiles/issues/35">https://github.com/hapijs/cryptiles/issues/35</a></li>
<li><a href="https://github.com/hapijs/cryptiles/commit/6bdcd0f6ee8ade96e7b30350bad39ee0c2ef0f9b">https://github.com/hapijs/cryptiles/commit/6bdcd0f6ee8ade96e7b30350bad39ee0c2ef0f9b</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rq8g-5pc5-wrhr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-09-11T18:22:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vrite/sdk] Allocation of Resources Without Limits or Throttling in vriteio/vrite]]></title>
        <id>https://github.com/advisories/GHSA-5ghm-h2wq-g3mh</id>
        <link href="https://github.com/advisories/GHSA-5ghm-h2wq-g3mh"/>
        <updated>2023-10-13T19:24:51.000Z</updated>
        <content type="html"><![CDATA[<p>Allocation of Resources Without Limits or Throttling in GitHub repository vriteio/vrite prior to 0.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5573">https://nvd.nist.gov/vuln/detail/CVE-2023-5573</a></li>
<li><a href="https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>
<li><a href="https://huntr.dev/bounties/46a2bb2c-712a-4008-a147-b862e3af7d72">https://huntr.dev/bounties/46a2bb2c-712a-4008-a147-b862e3af7d72</a></li>
<li><a href="https://github.com/advisories/GHSA-5ghm-h2wq-g3mh">https://github.com/advisories/GHSA-5ghm-h2wq-g3mh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5ghm-h2wq-g3mh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-13T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@graphql-mesh/runtime] Cache variables with the operations when transforms exist on the root level even if variables change in the further requests with the same operation]]></title>
        <id>https://github.com/advisories/GHSA-rr4x-crhf-8886</id>
        <link href="https://github.com/advisories/GHSA-rr4x-crhf-8886"/>
        <updated>2023-10-10T21:29:51.000Z</updated>
        <content type="html"><![CDATA[<p>When you have transforms on the root level or single source with transforms, and the client sends the same query with different variables, the initial variables are used in all following requests until the cache evicts DocumentNode.</p>
<p>Let's say if a token is sent via variables, the following requests will act like the same token is sent even if the following requests have different tokens.</p>
<p>This can cause a short memory leak but it won't grow per each request but per different operation until the cache evicts DocumentNode by LRU mechanism.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886">https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886</a></li>
<li><a href="https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0">https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0</a></li>
<li><a href="https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678">https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678</a></li>
<li><a href="https://github.com/advisories/GHSA-rr4x-crhf-8886">https://github.com/advisories/GHSA-rr4x-crhf-8886</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr4x-crhf-8886</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T21:29:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uptime-kuma] Uptime Kuma has Persistentent User Sessions]]></title>
        <id>https://github.com/advisories/GHSA-g9v2-wqcj-j99g</id>
        <link href="https://github.com/advisories/GHSA-g9v2-wqcj-j99g"/>
        <updated>2023-10-13T22:04:35.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>Attackers with access to a users' device can gain persistent account access.
This is caused by missing verification of Session Tokens after password changes and/or elapsed inactivity-periods.</p>
<h1 id="details">Details</h1>
<p><code>uptime-kuma</code> sets JWT tokens for users after successful authentication.</p>
<p>These tokens have the following design flaws:</p>
<ul>
<li>After successful login, a JWT token and it is stored in <code>sessionStorage</code> or <code>localStorage</code>. 
Which of the two is decided based on the <code>Remember Me</code> button. 
The users' token is valid without any time limitation, even after long periods of inactivity. 
This increases the risk of session hijacking if, for example, a user forgets to log off and leaves the PC.</li>
<li>sessions are only deleted on the client side after a user loggs out, meaning a local attacker could reuse said token with deep system access over the browser</li>
<li>If a user changes a password<ul>
<li>any previously logged in clients are not logged out</li>
<li>previously issued tokens remained valid forever</li>
</ul>
</li>
</ul>
<p>These flaws allow user cookies to remain valid even after changing passwords or being inactive, posing a high security risk.</p>
<h1 id="poc">POC</h1>
<h3 id="password-resets-not-deactivating-cookies">Password resets not deactivating cookies</h3>
<ul>
<li>Log in.</li>
<li>Note the user cookie.</li>
<li>Change your password.</li>
<li>Attempt to log in again with the same cookie.</li>
<li>The cookie remains valid despite the password change.</li>
</ul>
<h3 id="inactivity-not-deactivating-sessions">Inactivity not deactivating sessions</h3>
<p> In testing, even after a period of over a day of inactivity, the session was still valid</p>
<h1 id="impact">Impact</h1>
<p>Another person with local access to the device could take over the session permanently, even after hours of previous inactivity or a password change.
Such activity would not be obvious to the user (see <a href="https://github.com/louislam/uptime-kuma/issues/3481">https://github.com/louislam/uptime-kuma/issues/3481</a> if you want to help with this).</p>
<p>With this gained account access, an attacker can cause:</p>
<h2 id="confidentially-loss">confidentially loss</h2>
<ul>
<li>monitors (including private ones not shared on public status pages)</li>
<li>notification providers </li>
<li>settings like <code>api-keys</code> (only used for accessing <code>/metrics</code>)</li>
<li>settings like secrets like the <code>Steam API Key</code></li>
<li>maintenance periods</li>
</ul>
<h2 id="availability-loss">availability loss</h2>
<ul>
<li>by creating a lot of monitors and setting the retention policy very high leading to degraded database performance or out of storage</li>
<li>by creating a lot of <code>HTTP(s) - Browser Engine (Chrome/Chromium) (Beta)</code> leading to RAM exhaustion</li>
</ul>
<h2 id="integrity-loss">integrity loss</h2>
<ul>
<li>by the attacker deleting a monitor</li>
<li>by the attacker deleting a monitor's history</li>
<li>by the atacker changing the meaning of a monitor (changing where it points)</li>
</ul>
<h2 id="scope-creep">scope creep</h2>
<p>If operated in some restricted network, access to monitors may provide the ability to change the scope of the attack to a different piece of infrastructure, for example via SQL commands to a database server.
We have not classified this as <code>changed scope</code> because credentials stored in the application for accessing other systems are existing valid paths across the trust boundary, and the user should be aware of that.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g">https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44400">https://nvd.nist.gov/vuln/detail/CVE-2023-44400</a></li>
<li><a href="https://github.com/louislam/uptime-kuma/issues/3481">https://github.com/louislam/uptime-kuma/issues/3481</a></li>
<li><a href="https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a">https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a</a></li>
<li><a href="https://github.com/advisories/GHSA-g9v2-wqcj-j99g">https://github.com/advisories/GHSA-g9v2-wqcj-j99g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9v2-wqcj-j99g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T21:29:23.000Z</published>
    </entry>
</feed>