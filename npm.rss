<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-06-07T09:01:20.386Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[fast-xml-parser] fast-xml-parser vulnerable to Regex Injection via Doctype Entities]]></title>
        <id>https://github.com/advisories/GHSA-6w63-h3fj-q4vw</id>
        <link href="https://github.com/advisories/GHSA-6w63-h3fj-q4vw"/>
        <updated>2023-06-06T18:50:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>"fast-xml-parser" allows special characters in entity names, which are not escaped or sanitized. Since the entity name is used for creating a regex for searching and replacing entities in the XML body, an attacker can abuse it for DoS attacks. By crafting an entity name that results in an intentionally bad performing regex and utilizing it in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been resolved in v4.2.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using DOCTYPE parsing by <code>processEntities: false</code> option.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw</a></li>
<li><a href="https://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c">https://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34104">https://nvd.nist.gov/vuln/detail/CVE-2023-34104</a></li>
<li><a href="https://github.com/advisories/GHSA-6w63-h3fj-q4vw">https://github.com/advisories/GHSA-6w63-h3fj-q4vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6w63-h3fj-q4vw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T17:33:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)]]></title>
        <id>https://github.com/advisories/GHSA-353f-5xf4-qw67</id>
        <link href="https://github.com/advisories/GHSA-353f-5xf4-qw67"/>
        <updated>2023-06-06T02:01:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Vite Server Options (<code>server.fs.deny</code>) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default <a href="https://vitejs.dev/config/server-options.html#server-fs-deny"><code>fs.deny</code> settings</a> (<code>['.env', '.env.*', '*.{crt,pem}']</code>)</p>
<h3 id="impact">Impact</h3>
<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href="https://vitejs.dev/config/server-options.html#server-host"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="mailto:vite@4.3.9">vite@4.3.9</a>, <a href="mailto:vite@4.2.3">vite@4.2.3</a>, <a href="mailto:vite@4.1.5">vite@4.1.5</a>, <a href="mailto:vite@4.0.5">vite@4.0.5</a>
And in the latest minors of the previous two majors: <a href="mailto:vite@3.2.7">vite@3.2.7</a>, <a href="mailto:vite@2.9.16">vite@2.9.16</a></p>
<h3 id="details">Details</h3>
<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>
<li>Serve the application on dev mode using pnpm run dev.</li>
<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>
<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>
</ol>
<p>Proof Images:
<img alt="proof-1" src="https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png">
<img alt="proof-2" src="https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34092">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>
<li><a href="https://github.com/vitejs/vite/pull/13348">https://github.com/vitejs/vite/pull/13348</a></li>
<li><a href="https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>
<li><a href="https://github.com/advisories/GHSA-353f-5xf4-qw67">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-353f-5xf4-qw67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-06T02:01:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[proxy] proxy denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mj6p-3pc9-wf5m</id>
        <link href="https://github.com/advisories/GHSA-mj6p-3pc9-wf5m"/>
        <updated>2023-06-06T01:52:50.000Z</updated>
        <content type="html"><![CDATA[<p>A remote attacker can trigger a denial of service in the <code>socket.remoteAddress</code> variable, by sending a crafted HTTP request. Usage of the undefined variable raises a TypeError exception.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2968">https://nvd.nist.gov/vuln/detail/CVE-2023-2968</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/undefined-variable-usage-in-proxy-leads-to-remote-denial-of-service-xray-520917">https://research.jfrog.com/vulnerabilities/undefined-variable-usage-in-proxy-leads-to-remote-denial-of-service-xray-520917</a></li>
<li><a href="https://github.com/TooTallNate/proxy-agents/pull/178">https://github.com/TooTallNate/proxy-agents/pull/178</a></li>
<li><a href="https://github.com/TooTallNate/proxy-agents/commit/25e0c931390eb8f41c5ceaca72820de9198ece39">https://github.com/TooTallNate/proxy-agents/commit/25e0c931390eb8f41c5ceaca72820de9198ece39</a></li>
<li><a href="https://github.com/advisories/GHSA-mj6p-3pc9-wf5m">https://github.com/advisories/GHSA-mj6p-3pc9-wf5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj6p-3pc9-wf5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-30T18:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@antfu/utils] antfu/utils vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-p2fh-2h23-6grg</id>
        <link href="https://github.com/advisories/GHSA-p2fh-2h23-6grg"/>
        <updated>2023-06-02T17:11:19.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype Pollution in GitHub repository antfu/utils prior to 0.7.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2972">https://nvd.nist.gov/vuln/detail/CVE-2023-2972</a></li>
<li><a href="https://github.com/antfu/utils/commit/7f8b16c6181c988bdb96613fbb2533b345f68682">https://github.com/antfu/utils/commit/7f8b16c6181c988bdb96613fbb2533b345f68682</a></li>
<li><a href="https://huntr.dev/bounties/009f1cd9-401c-49a7-bd08-be35cff6faef">https://huntr.dev/bounties/009f1cd9-401c-49a7-bd08-be35cff6faef</a></li>
<li><a href="https://github.com/advisories/GHSA-p2fh-2h23-6grg">https://github.com/advisories/GHSA-p2fh-2h23-6grg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2fh-2h23-6grg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-30T12:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Phishing attack vulnerability by uploading malicious HTML file]]></title>
        <id>https://github.com/advisories/GHSA-9prm-jqwx-45x9</id>
        <link href="https://github.com/advisories/GHSA-9prm-jqwx-45x9"/>
        <updated>2023-05-31T23:39:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Phishing attack vulnerability by uploading malicious files. A malicious user could upload a HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.</p>
<p>An additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.</p>
<h3 id="patches">Patches</h3>
<p>The fix adds a new Parse Server option <code>fileUpload.fileExtensions</code> to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to <code>['.*']</code> or another custom value to override the default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9">https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8538">https://github.com/parse-community/parse-server/pull/8538</a> (Parse Server 6)</li>
<li><a href="https://github.com/parse-community/parse-server/pull/8537">https://github.com/parse-community/parse-server/pull/8537</a> (Parse Server 5)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9">https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32689">https://nvd.nist.gov/vuln/detail/CVE-2023-32689</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8537">https://github.com/parse-community/parse-server/pull/8537</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8538">https://github.com/parse-community/parse-server/pull/8538</a></li>
<li><a href="https://github.com/advisories/GHSA-9prm-jqwx-45x9">https://github.com/advisories/GHSA-9prm-jqwx-45x9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9prm-jqwx-45x9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-31T23:39:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] Phishing attack vulnerability by uploading malicious HTML file]]></title>
        <id>https://github.com/advisories/GHSA-9prm-jqwx-45x9</id>
        <link href="https://github.com/advisories/GHSA-9prm-jqwx-45x9"/>
        <updated>2023-05-31T23:39:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Phishing attack vulnerability by uploading malicious files. A malicious user could upload a HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.</p>
<p>An additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.</p>
<h3 id="patches">Patches</h3>
<p>The fix adds a new Parse Server option <code>fileUpload.fileExtensions</code> to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to <code>['.*']</code> or another custom value to override the default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9">https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8538">https://github.com/parse-community/parse-server/pull/8538</a> (Parse Server 6)</li>
<li><a href="https://github.com/parse-community/parse-server/pull/8537">https://github.com/parse-community/parse-server/pull/8537</a> (Parse Server 5)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9">https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32689">https://nvd.nist.gov/vuln/detail/CVE-2023-32689</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8537">https://github.com/parse-community/parse-server/pull/8537</a></li>
<li><a href="https://github.com/parse-community/parse-server/pull/8538">https://github.com/parse-community/parse-server/pull/8538</a></li>
<li><a href="https://github.com/advisories/GHSA-9prm-jqwx-45x9">https://github.com/advisories/GHSA-9prm-jqwx-45x9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9prm-jqwx-45x9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-31T23:39:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] Cross-Site Scripting (XSS) in jquery]]></title>
        <id>https://github.com/advisories/GHSA-rmxg-73gg-4p98</id>
        <link href="https://github.com/advisories/GHSA-rmxg-73gg-4p98"/>
        <updated>2023-05-31T17:48:09.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>jquery</code> interpret <code>text/javascript</code> responses from cross-origin ajax requests, and automatically execute the contents in <code>jQuery.globalEval</code>, even when the ajax request doesn't contain the <code>dataType</code> option.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 3.0.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-9251">https://nvd.nist.gov/vuln/detail/CVE-2015-9251</a></li>
<li><a href="https://github.com/jquery/jquery/issues/2432">https://github.com/jquery/jquery/issues/2432</a></li>
<li><a href="https://github.com/jquery/jquery/pull/2588">https://github.com/jquery/jquery/pull/2588</a></li>
<li><a href="https://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614">https://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614</a></li>
<li><a href="https://github.com/advisories/GHSA-rmxg-73gg-4p98">https://github.com/advisories/GHSA-rmxg-73gg-4p98</a></li>
<li><a href="https://www.npmjs.com/advisories/328">https://www.npmjs.com/advisories/328</a></li>
<li><a href="https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2">https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2</a></li>
<li><a href="https://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc">https://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0481">https://access.redhat.com/errata/RHSA-2020:0481</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0729">https://access.redhat.com/errata/RHSA-2020:0729</a></li>
<li><a href="https://ics-cert.us-cert.gov/advisories/ICSA-18-212-04">https://ics-cert.us-cert.gov/advisories/ICSA-18-212-04</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601</a></li>
<li><a href="https://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E">https://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E">https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>
<li><a href="https://seclists.org/bugtraq/2019/May/18">https://seclists.org/bugtraq/2019/May/18</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210108-0004/">https://security.netapp.com/advisory/ntap-20210108-0004/</a></li>
<li><a href="https://snyk.io/vuln/npm:jquery:20150627">https://snyk.io/vuln/npm:jquery:20150627</a></li>
<li><a href="https://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf">https://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2020.html">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2020.html">https://www.oracle.com/security-alerts/cpujan2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html">https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2019-08">https://www.tenable.com/security/tns-2019-08</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html">http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html</a></li>
<li><a href="http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html">http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html">http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/10">http://seclists.org/fulldisclosure/2019/May/10</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/11">http://seclists.org/fulldisclosure/2019/May/11</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/13">http://seclists.org/fulldisclosure/2019/May/13</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>
<li><a href="http://www.securityfocus.com/bid/105658">http://www.securityfocus.com/bid/105658</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227">https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227</a></li>
<li><a href="https://github.com/jquery/jquery/issues/2432#issuecomment-403761229">https://github.com/jquery/jquery/issues/2432#issuecomment-403761229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmxg-73gg-4p98</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-01-22T13:32:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery] Cross-Site Scripting (XSS) in jquery]]></title>
        <id>https://github.com/advisories/GHSA-rmxg-73gg-4p98</id>
        <link href="https://github.com/advisories/GHSA-rmxg-73gg-4p98"/>
        <updated>2023-05-31T17:48:09.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>jquery</code> interpret <code>text/javascript</code> responses from cross-origin ajax requests, and automatically execute the contents in <code>jQuery.globalEval</code>, even when the ajax request doesn't contain the <code>dataType</code> option.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 3.0.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-9251">https://nvd.nist.gov/vuln/detail/CVE-2015-9251</a></li>
<li><a href="https://github.com/jquery/jquery/issues/2432">https://github.com/jquery/jquery/issues/2432</a></li>
<li><a href="https://github.com/jquery/jquery/pull/2588">https://github.com/jquery/jquery/pull/2588</a></li>
<li><a href="https://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614">https://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614</a></li>
<li><a href="https://github.com/advisories/GHSA-rmxg-73gg-4p98">https://github.com/advisories/GHSA-rmxg-73gg-4p98</a></li>
<li><a href="https://www.npmjs.com/advisories/328">https://www.npmjs.com/advisories/328</a></li>
<li><a href="https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2">https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2</a></li>
<li><a href="https://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc">https://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0481">https://access.redhat.com/errata/RHSA-2020:0481</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0729">https://access.redhat.com/errata/RHSA-2020:0729</a></li>
<li><a href="https://ics-cert.us-cert.gov/advisories/ICSA-18-212-04">https://ics-cert.us-cert.gov/advisories/ICSA-18-212-04</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601</a></li>
<li><a href="https://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E">https://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E">https://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E">https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>
<li><a href="https://seclists.org/bugtraq/2019/May/18">https://seclists.org/bugtraq/2019/May/18</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210108-0004/">https://security.netapp.com/advisory/ntap-20210108-0004/</a></li>
<li><a href="https://snyk.io/vuln/npm:jquery:20150627">https://snyk.io/vuln/npm:jquery:20150627</a></li>
<li><a href="https://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf">https://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2020.html">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2020.html">https://www.oracle.com/security-alerts/cpujan2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html">https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2019-08">https://www.tenable.com/security/tns-2019-08</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html">http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html</a></li>
<li><a href="http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html">http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html">http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/10">http://seclists.org/fulldisclosure/2019/May/10</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/11">http://seclists.org/fulldisclosure/2019/May/11</a></li>
<li><a href="http://seclists.org/fulldisclosure/2019/May/13">http://seclists.org/fulldisclosure/2019/May/13</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>
<li><a href="http://www.securityfocus.com/bid/105658">http://www.securityfocus.com/bid/105658</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227">https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227</a></li>
<li><a href="https://github.com/jquery/jquery/issues/2432#issuecomment-403761229">https://github.com/jquery/jquery/issues/2432#issuecomment-403761229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmxg-73gg-4p98</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-01-22T13:32:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[n158] n158 vulnerable to Command Injection due to improper input sanitization in the 'module.exports' function]]></title>
        <id>https://github.com/advisories/GHSA-549h-r7g9-2qpf</id>
        <link href="https://github.com/advisories/GHSA-549h-r7g9-2qpf"/>
        <updated>2023-06-02T22:20:51.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package n158 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports' function.</p>
<p><strong>Note:</strong></p>
<p>To execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26127">https://nvd.nist.gov/vuln/detail/CVE-2023-26127</a></li>
<li><a href="https://github.com/dsilva2401/n158/blob/master/src/cli/initProject.js#L8">https://github.com/dsilva2401/n158/blob/master/src/cli/initProject.js#L8</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-N158-3183746">https://security.snyk.io/vuln/SNYK-JS-N158-3183746</a></li>
<li><a href="https://github.com/advisories/GHSA-549h-r7g9-2qpf">https://github.com/advisories/GHSA-549h-r7g9-2qpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-549h-r7g9-2qpf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-27T06:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keep-module-latest] keep-module-latest vulnerable to Command Injection due to missing input sanitization ]]></title>
        <id>https://github.com/advisories/GHSA-wxrx-pc44-rcgc</id>
        <link href="https://github.com/advisories/GHSA-wxrx-pc44-rcgc"/>
        <updated>2023-06-02T22:19:15.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package keep-module-latest are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the installModule function.</p>
<p><strong>Note:</strong></p>
<p>To execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26128">https://nvd.nist.gov/vuln/detail/CVE-2023-26128</a></li>
<li><a href="https://github.com/liujunyang/keep-module-latest/blob/master/index.js%23L50">https://github.com/liujunyang/keep-module-latest/blob/master/index.js%23L50</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-KEEPMODULELATEST-3157165">https://security.snyk.io/vuln/SNYK-JS-KEEPMODULELATEST-3157165</a></li>
<li><a href="https://github.com/advisories/GHSA-wxrx-pc44-rcgc">https://github.com/advisories/GHSA-wxrx-pc44-rcgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxrx-pc44-rcgc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-27T06:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bwm-ng] bwm-ng vulnerable to command injection]]></title>
        <id>https://github.com/advisories/GHSA-8vw3-vxmj-h43w</id>
        <link href="https://github.com/advisories/GHSA-8vw3-vxmj-h43w"/>
        <updated>2023-06-06T17:21:42.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package bwm-ng are vulnerable to Command Injection due to improper input sanitization in the 'check' function in the bwm-ng.js file. </p>
<p><strong>Note:</strong></p>
<p>To execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26129">https://nvd.nist.gov/vuln/detail/CVE-2023-26129</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-BWMNG-3175876">https://security.snyk.io/vuln/SNYK-JS-BWMNG-3175876</a></li>
<li><a href="https://github.com/advisories/GHSA-8vw3-vxmj-h43w">https://github.com/advisories/GHSA-8vw3-vxmj-h43w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8vw3-vxmj-h43w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-27T06:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[connect] Cross-Site Scripting in connect]]></title>
        <id>https://github.com/advisories/GHSA-rch9-xh7r-mqgw</id>
        <link href="https://github.com/advisories/GHSA-rch9-xh7r-mqgw"/>
        <updated>2023-05-30T19:26:14.000Z</updated>
        <content type="html"><![CDATA[<p>connect node module before 2.14.0 suffers from a Cross-Site Scripting (XSS) vulnerability due to a lack of validation of file in directory.js middleware.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3717">https://nvd.nist.gov/vuln/detail/CVE-2018-3717</a></li>
<li><a href="https://github.com/JacksonTian/anywhere/issues/33#issuecomment-366527448">https://github.com/JacksonTian/anywhere/issues/33#issuecomment-366527448</a></li>
<li><a href="https://hackerone.com/reports/309394">https://hackerone.com/reports/309394</a></li>
<li><a href="https://hackerone.com/reports/309641">https://hackerone.com/reports/309641</a></li>
<li><a href="https://github.com/advisories/GHSA-rch9-xh7r-mqgw">https://github.com/advisories/GHSA-rch9-xh7r-mqgw</a></li>
<li><a href="https://www.npmjs.com/advisories/584">https://www.npmjs.com/advisories/584</a></li>
<li><a href="https://www.npmjs.com/advisories/595">https://www.npmjs.com/advisories/595</a></li>
<li><a href="https://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b">https://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rch9-xh7r-mqgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-07-26T15:08:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[highlight.run] html inputs of type password recorded in plaintext when converted to text inputs]]></title>
        <id>https://github.com/advisories/GHSA-9qpj-qq2r-5mcc</id>
        <link href="https://github.com/advisories/GHSA-9qpj-qq2r-5mcc"/>
        <updated>2023-05-26T21:50:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Highlight may record passwords on customer deployments when a password html input is switched to <code>type="text"</code> via a javascript "Show Password" button. This differs from the expected behavior which always obfuscates <code>type="password"</code> inputs. A customer may assume that switching to <code>type="text"</code> would also not record this input; hence, they would not add additional <code>highlight-mask</code> css-class obfuscation to this part of the DOM, resulting in unintentional recording of a password value when a <code>Show Password</code> button is used.</p>
<h3 id="patches">Patches</h3>
<p><code>highlight.run@6.0.0</code> resolves the issue via <a href="https://github.com/rrweb-io/rrweb/pull/1184">https://github.com/rrweb-io/rrweb/pull/1184</a>
This patch tracks changes to the <code>type</code> attribute of an input to ensure an input that used to be a <code>type="password"</code> continues to be obfuscated. </p>
<h3 id="workarounds">Workarounds</h3>
<p>We have deployed a change to our data ingest to obfuscate passwords server side from older clients.
This means that upgrading to the latest version of highlight.run is not necessary but recommended to prevent potential network transfer of recorded password data to our backend.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/rrweb-io/rrweb/pull/1184">https://github.com/rrweb-io/rrweb/pull/1184</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/highlight/highlight/security/advisories/GHSA-9qpj-qq2r-5mcc">https://github.com/highlight/highlight/security/advisories/GHSA-9qpj-qq2r-5mcc</a></li>
<li><a href="https://github.com/rrweb-io/rrweb/pull/1184">https://github.com/rrweb-io/rrweb/pull/1184</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33187">https://nvd.nist.gov/vuln/detail/CVE-2023-33187</a></li>
<li><a href="https://github.com/advisories/GHSA-9qpj-qq2r-5mcc">https://github.com/advisories/GHSA-9qpj-qq2r-5mcc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qpj-qq2r-5mcc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-26T13:52:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[socket.io-parser] Insufficient validation when decoding a Socket.IO packet]]></title>
        <id>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</id>
        <link href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9"/>
        <updated>2023-06-05T21:07:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.</p>
<pre><code>TypeError: Cannot convert object to primitive value
       at Socket.emit (node:events:507:25)
       at .../node_modules/socket.io/lib/socket.js:531:14
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released today (2023/05/22):</p>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a>, included in <code>socket.io-parser@4.2.3</code></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a>, included in <code>socket.io-parser@3.4.3</code></li>
</ul>
<table>
<thead>
<tr>
<th><code>socket.io</code> version</th>
<th><code>socket.io-parser</code> version</th>
<th>Needs minor update?</th>
</tr>
</thead>
<tbody><tr>
<td><code>4.5.2...latest</code></td>
<td><code>~4.2.0</code> (<a href="https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
<tr>
<td><code>4.1.3...4.5.1</code></td>
<td><code>~4.1.1</code> (<a href="https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.5...4.1.2</code></td>
<td><code>~4.0.3</code> (<a href="https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>3.0.0...3.0.4</code></td>
<td><code>~4.0.1</code> (<a href="https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0">ref</a>)</td>
<td>Please upgrade to <code>socket.io@4.6.x</code></td>
</tr>
<tr>
<td><code>2.3.0...2.5.0</code></td>
<td><code>~3.4.0</code> (<a href="https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd">ref</a>)</td>
<td><code>npm audit fix</code> should be sufficient</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround except upgrading to a safe version.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion <a href="https://github.com/socketio/socket.io/discussions">here</a></li>
</ul>
<p>Thanks to <a href="https://github.com/rafax00">@rafax00</a> for the responsible disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced">https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3">https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9">https://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32695">https://nvd.nist.gov/vuln/detail/CVE-2023-32695</a></li>
<li><a href="https://github.com/socketio/socket.io-parser/releases/tag/4.2.3">https://github.com/socketio/socket.io-parser/releases/tag/4.2.3</a></li>
<li><a href="https://github.com/advisories/GHSA-cqmj-92xf-r6r9">https://github.com/advisories/GHSA-cqmj-92xf-r6r9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqmj-92xf-r6r9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:55:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bignum] Malware in pre-build binaries of bignum]]></title>
        <id>https://github.com/advisories/GHSA-7cgc-fjv4-52x6</id>
        <link href="https://github.com/advisories/GHSA-7cgc-fjv4-52x6"/>
        <updated>2023-05-24T16:43:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>bignum releases from v0.12.2 to v0.13.0 (inclusive) used node-pre-gyp to optionally download pre-built binary versions of the addon. These binaries were published on a now-expired S3 bucket which has since been claimed by a malicious third party which is now serving binaries containing malware that exfiltrates data from the user's computer.</p>
<h3 id="patches">Patches</h3>
<p>v0.13.1 does not use node-pre-gyp and does not have support for downloading pre-built binaries in any form, avoiding the risk of malicious downloads.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/justmoon/node-bignum/security/advisories/GHSA-7cgc-fjv4-52x6">https://github.com/justmoon/node-bignum/security/advisories/GHSA-7cgc-fjv4-52x6</a></li>
<li><a href="https://github.com/justmoon/node-bignum/commit/57e48c3f052249725517415d83c7147e4a8c44c8">https://github.com/justmoon/node-bignum/commit/57e48c3f052249725517415d83c7147e4a8c44c8</a></li>
<li><a href="https://github.com/justmoon/node-bignum/commit/72951c53e7c5c1ac157f04686dc12c3c393b4b08">https://github.com/justmoon/node-bignum/commit/72951c53e7c5c1ac157f04686dc12c3c393b4b08</a></li>
<li><a href="https://github.com/advisories/GHSA-7cgc-fjv4-52x6">https://github.com/advisories/GHSA-7cgc-fjv4-52x6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cgc-fjv4-52x6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-05-24T16:43:58.000Z</published>
    </entry>
</feed>