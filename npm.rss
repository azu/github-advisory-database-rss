<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-10-13T14:01:33.304Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@graphql-mesh/runtime] Cache variables with the operations when transforms exist on the root level even if variables change in the further requests with the same operation]]></title>
        <id>https://github.com/advisories/GHSA-rr4x-crhf-8886</id>
        <link href="https://github.com/advisories/GHSA-rr4x-crhf-8886"/>
        <updated>2023-10-10T21:29:51.000Z</updated>
        <content type="html"><![CDATA[<p>When you have transforms on the root level or single source with transforms, and the client sends the same query with different variables, the initial variables are used in all following requests until the cache evicts DocumentNode.</p>
<p>Let's say if a token is sent via variables, the following requests will act like the same token is sent even if the following requests have different tokens.</p>
<p>This can cause a short memory leak but it won't grow per each request but per different operation until the cache evicts DocumentNode by LRU mechanism.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886">https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886</a></li>
<li><a href="https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0">https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0</a></li>
<li><a href="https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678">https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678</a></li>
<li><a href="https://github.com/advisories/GHSA-rr4x-crhf-8886">https://github.com/advisories/GHSA-rr4x-crhf-8886</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr4x-crhf-8886</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T21:29:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uptime-kuma] Uptime Kuma has Persistentent User Sessions]]></title>
        <id>https://github.com/advisories/GHSA-g9v2-wqcj-j99g</id>
        <link href="https://github.com/advisories/GHSA-g9v2-wqcj-j99g"/>
        <updated>2023-10-10T21:29:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>Attackers with access to a users' device can gain persistent account access.
This is caused by missing verification of Session Tokens after password changes and/or elapsed inactivity-periods.</p>
<h1 id="details">Details</h1>
<p><code>uptime-kuma</code> sets JWT tokens for users after successful authentication.</p>
<p>These tokens have the following design flaws:</p>
<ul>
<li>After successful login, a JWT token and it is stored in <code>sessionStorage</code> or <code>localStorage</code>. 
Which of the two is decided based on the <code>Remember Me</code> button. 
The users' token is valid without any time limitation, even after long periods of inactivity. 
This increases the risk of session hijacking if, for example, a user forgets to log off and leaves the PC.</li>
<li>sessions are only deleted on the client side after a user loggs out, meaning a local attacker could reuse said token with deep system access over the browser</li>
<li>If a user changes a password<ul>
<li>any previously logged in clients are not logged out</li>
<li>previously issued tokens remained valid forever</li>
</ul>
</li>
</ul>
<p>These flaws allow user cookies to remain valid even after changing passwords or being inactive, posing a high security risk.</p>
<h1 id="poc">POC</h1>
<h3 id="password-resets-not-deactivating-cookies">Password resets not deactivating cookies</h3>
<ul>
<li>Log in.</li>
<li>Note the user cookie.</li>
<li>Change your password.</li>
<li>Attempt to log in again with the same cookie.</li>
<li>The cookie remains valid despite the password change.</li>
</ul>
<h3 id="inactivity-not-deactivating-sessions">Inactivity not deactivating sessions</h3>
<p> In testing, even after a period of over a day of inactivity, the session was still valid</p>
<h1 id="impact">Impact</h1>
<p>Another person with local access to the device could take over the session permanently, even after hours of previous inactivity or a password change.
Such activity would not be obvious to the user (see <a href="https://github.com/louislam/uptime-kuma/issues/3481">https://github.com/louislam/uptime-kuma/issues/3481</a> if you want to help with this).</p>
<p>With this gained account access, an attacker can cause:</p>
<h2 id="confidentially-loss">confidentially loss</h2>
<ul>
<li>monitors (including private ones not shared on public status pages)</li>
<li>notification providers </li>
<li>settings like <code>api-keys</code> (only used for accessing <code>/metrics</code>)</li>
<li>settings like secrets like the <code>Steam API Key</code></li>
<li>maintenance periods</li>
</ul>
<h2 id="availability-loss">availability loss</h2>
<ul>
<li>by creating a lot of monitors and setting the retention policy very high leading to degraded database performance or out of storage</li>
<li>by creating a lot of <code>HTTP(s) - Browser Engine (Chrome/Chromium) (Beta)</code> leading to RAM exhaustion</li>
</ul>
<h2 id="integrity-loss">integrity loss</h2>
<ul>
<li>by the attacker deleting a monitor</li>
<li>by the attacker deleting a monitor's history</li>
<li>by the atacker changing the meaning of a monitor (changing where it points)</li>
</ul>
<h2 id="scope-creep">scope creep</h2>
<p>If operated in some restricted network, access to monitors may provide the ability to change the scope of the attack to a different piece of infrastructure, for example via SQL commands to a database server.
We have not classified this as <code>changed scope</code> because credentials stored in the application for accessing other systems are existing valid paths across the trust boundary, and the user should be aware of that.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g">https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44400">https://nvd.nist.gov/vuln/detail/CVE-2023-44400</a></li>
<li><a href="https://github.com/louislam/uptime-kuma/issues/3481">https://github.com/louislam/uptime-kuma/issues/3481</a></li>
<li><a href="https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a">https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a</a></li>
<li><a href="https://github.com/advisories/GHSA-g9v2-wqcj-j99g">https://github.com/advisories/GHSA-g9v2-wqcj-j99g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9v2-wqcj-j99g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:29:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik-city] @builder.io/qwik-city Cross-Site Request Forgery  vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c54w-7j5f-xg98</id>
        <link href="https://github.com/advisories/GHSA-c54w-7j5f-xg98"/>
        <updated>2023-10-10T21:26:33.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-Site Request Forgery (CSRF) in GitHub repository builderio/qwik prior to 0.104.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2307">https://nvd.nist.gov/vuln/detail/CVE-2023-2307</a></li>
<li><a href="https://huntr.dev/bounties/204ea12e-9e5c-4166-bf0e-fd49c8836917">https://huntr.dev/bounties/204ea12e-9e5c-4166-bf0e-fd49c8836917</a></li>
<li><a href="https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57">https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57</a></li>
<li><a href="https://github.com/BuilderIO/qwik/commit/f434d335277418f5bd8dd90fae5cb089e1230cb8">https://github.com/BuilderIO/qwik/commit/f434d335277418f5bd8dd90fae5cb089e1230cb8</a></li>
<li><a href="https://github.com/BuilderIO/qwik/releases/tag/v0.104.0">https://github.com/BuilderIO/qwik/releases/tag/v0.104.0</a></li>
<li><a href="https://github.com/advisories/GHSA-c54w-7j5f-xg98">https://github.com/advisories/GHSA-c54w-7j5f-xg98</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c54w-7j5f-xg98</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-26T18:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik] builderio/qwik is vulnerable to code injection]]></title>
        <id>https://github.com/advisories/GHSA-9wf9-qvvp-2929</id>
        <link href="https://github.com/advisories/GHSA-9wf9-qvvp-2929"/>
        <updated>2023-10-10T21:23:17.000Z</updated>
        <content type="html"><![CDATA[<p>Code Injection in GitHub repository builderio/qwik prior to 0.21.0. The Function deserializer can be accessed using the pureServerFunction feature. This allows any Javascript code to be run by node.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1283">https://nvd.nist.gov/vuln/detail/CVE-2023-1283</a></li>
<li><a href="https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66">https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66</a></li>
<li><a href="https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8">https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8</a></li>
<li><a href="https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66">https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66</a></li>
<li><a href="https://github.com/advisories/GHSA-9wf9-qvvp-2929">https://github.com/advisories/GHSA-9wf9-qvvp-2929</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wf9-qvvp-2929</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-09T00:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[swagger-ui] Cross-Site Scripting in swagger-ui]]></title>
        <id>https://github.com/advisories/GHSA-mrx7-8hxf-f853</id>
        <link href="https://github.com/advisories/GHSA-mrx7-8hxf-f853"/>
        <updated>2023-10-10T21:02:42.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>swagger-ui</code> are vulnerable to cross-site scripting. This vulnerability exists because <code>swagger-ui</code> automatically executes external Javascript that is loaded in via the <code>url</code> query string parameter when a <code>Content-Type: application/javascript</code> header is included.</p>
<p>An attacker can create a server that replies with a malicious script and the proper content-type, and then craft a <code>swagger-ui</code> URL that includes the location to their server/script in the <code>url</code> query string parameter. When viewed, such a link would execute the attacker's malicious script.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to 2.2.1 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/swagger-api/swagger-ui/issues/1863">https://github.com/swagger-api/swagger-ui/issues/1863</a></li>
<li><a href="https://www.npmjs.com/advisories/131">https://www.npmjs.com/advisories/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1000233">https://nvd.nist.gov/vuln/detail/CVE-2016-1000233</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui/commit/331d2be070d89162aa3174a8773ae4a0093f78bc">https://github.com/swagger-api/swagger-ui/commit/331d2be070d89162aa3174a8773ae4a0093f78bc</a></li>
<li><a href="https://github.com/advisories/GHSA-mrx7-8hxf-f853">https://github.com/advisories/GHSA-mrx7-8hxf-f853</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrx7-8hxf-f853</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-09-01T15:36:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2023-10-10T19:57:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>
<li><a href="https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2023-10-10T19:57:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>
<li><a href="https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@angular/core] Cross site scripting in Angular]]></title>
        <id>https://github.com/advisories/GHSA-c75v-2vq8-878f</id>
        <link href="https://github.com/advisories/GHSA-c75v-2vq8-878f"/>
        <updated>2023-10-10T19:57:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4231">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>
<li><a href="https://github.com/angular/angular/issues/40136">https://github.com/angular/angular/issues/40136</a></li>
<li><a href="https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>
<li><a href="https://vuldb.com/?id.181356">https://vuldb.com/?id.181356</a></li>
<li><a href="https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>
<li><a href="https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>
<li><a href="https://github.com/advisories/GHSA-c75v-2vq8-878f">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c75v-2vq8-878f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-27T00:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aegir] Exposure of Sensitive Information to an Unauthorized Actor in AEgir]]></title>
        <id>https://github.com/advisories/GHSA-qfcv-5whw-7pcw</id>
        <link href="https://github.com/advisories/GHSA-qfcv-5whw-7pcw"/>
        <updated>2023-10-10T19:06:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>aegir publish</code> and <code>aegir build</code> may leak secrets from environmental variables in the browser bundle published to npm.</p>
<h3 id="patches">Patches</h3>
<p>The code has been patched, users should upgrade to &gt;= 21.10.1</p>
<h3 id="workarounds">Workarounds</h3>
<p>Run <code>printenv</code> to check your environment variables and revoke any secrets.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ipfs/aegir">aegir</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ipfs/aegir/security/advisories/GHSA-qfcv-5whw-7pcw">https://github.com/ipfs/aegir/security/advisories/GHSA-qfcv-5whw-7pcw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11059">https://nvd.nist.gov/vuln/detail/CVE-2020-11059</a></li>
<li><a href="https://github.com/ipfs/aegir/commit/e36e1def57b2dc1e4b7a5beba964c5924e87f8d8">https://github.com/ipfs/aegir/commit/e36e1def57b2dc1e4b7a5beba964c5924e87f8d8</a></li>
<li><a href="https://github.com/advisories/GHSA-qfcv-5whw-7pcw">https://github.com/advisories/GHSA-qfcv-5whw-7pcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qfcv-5whw-7pcw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-05-27T21:09:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[papaparse] Regular Expression Denial of Service in papaparse]]></title>
        <id>https://github.com/advisories/GHSA-qvjc-g5vr-mfgr</id>
        <link href="https://github.com/advisories/GHSA-qvjc-g5vr-mfgr"/>
        <updated>2023-10-10T19:04:33.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>papaparse</code> prior to 5.2.0 are vulnerable to Regular Expression Denial of Service (ReDos). The <code>parse</code> function contains a malformed regular expression that takes exponentially longer to process non-numerical inputs. This allows attackers to stall systems and lead to Denial of Service.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 5.2.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mholt/PapaParse/issues/777">https://github.com/mholt/PapaParse/issues/777</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PAPAPARSE-564258">https://snyk.io/vuln/SNYK-JS-PAPAPARSE-564258</a></li>
<li><a href="https://www.npmjs.com/advisories/1515">https://www.npmjs.com/advisories/1515</a></li>
<li><a href="https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621">https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621</a></li>
<li><a href="https://github.com/advisories/GHSA-qvjc-g5vr-mfgr">https://github.com/advisories/GHSA-qvjc-g5vr-mfgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvjc-g5vr-mfgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-09-04T18:03:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[home-assistant-frontend] Withdrawn Advisory: Home Assistant Frontend XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7wfq-wmx2-3wr4</id>
        <link href="https://github.com/advisories/GHSA-7wfq-wmx2-3wr4"/>
        <updated>2023-10-10T18:21:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn-advisory">Withdrawn Advisory</h2>
<p>This advisory has been withdrawn because we cannot confirm <a href="https://www.npmjs.com/package/home-assistant-frontend">home-assistant-frontend</a> is or was ever published to npm.</p>
<h2 id="original-description">Original Description</h2>
<p>In Home Assistant before 0.57, it is possible to inject JavaScript code into a persistent notification via crafted Markdown text, aka XSS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16782">https://nvd.nist.gov/vuln/detail/CVE-2017-16782</a></li>
<li><a href="https://github.com/home-assistant/home-assistant-polymer/pull/514">https://github.com/home-assistant/home-assistant-polymer/pull/514</a></li>
<li><a href="https://github.com/advisories/GHSA-7wfq-wmx2-3wr4">https://github.com/advisories/GHSA-7wfq-wmx2-3wr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7wfq-wmx2-3wr4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:20:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fsevents] Code injection in fsevents]]></title>
        <id>https://github.com/advisories/GHSA-8r6j-v8pm-fqw3</id>
        <link href="https://github.com/advisories/GHSA-8r6j-v8pm-fqw3"/>
        <updated>2023-10-09T21:35:19.000Z</updated>
        <content type="html"><![CDATA[<p>fsevents before 1.2.11 depends on the <a href="https://fsevents-binaries.s3-us-west-2.amazonaws.com">https://fsevents-binaries.s3-us-west-2.amazonaws.com</a> URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45311">https://nvd.nist.gov/vuln/detail/CVE-2023-45311</a></li>
<li><a href="https://github.com/atlassian/moo/blob/56ccbdd41b493332bc2cd7a4097a5802594cdb9c/package-lock.json#L1901-L1902">https://github.com/atlassian/moo/blob/56ccbdd41b493332bc2cd7a4097a5802594cdb9c/package-lock.json#L1901-L1902</a></li>
<li><a href="https://github.com/atlassian/react-immutable-proptypes/blob/ddb9fa5194b931bf7528eb4f2c0a8c3434f70edd/package-lock.json#L153">https://github.com/atlassian/react-immutable-proptypes/blob/ddb9fa5194b931bf7528eb4f2c0a8c3434f70edd/package-lock.json#L153</a></li>
<li><a href="https://github.com/cloudflare/authr/blob/3f6129d97d06e61033a7f237d84e35e678db490f/ts/package-lock.json#L1512">https://github.com/cloudflare/authr/blob/3f6129d97d06e61033a7f237d84e35e678db490f/ts/package-lock.json#L1512</a></li>
<li><a href="https://github.com/cloudflare/hugo-cloudflare-docs/blob/e0f7cfa195af8ef1bfa51a487be7d34ba298ed06/package-lock.json#L494">https://github.com/cloudflare/hugo-cloudflare-docs/blob/e0f7cfa195af8ef1bfa51a487be7d34ba298ed06/package-lock.json#L494</a></li>
<li><a href="https://github.com/cloudflare/redux-grim/blob/b652f99f95fb16812336073951adc5c5a93e2c23/package-lock.json#L266-L267">https://github.com/cloudflare/redux-grim/blob/b652f99f95fb16812336073951adc5c5a93e2c23/package-lock.json#L266-L267</a></li>
<li><a href="https://github.com/cloudflare/serverless-cloudflare-workers/blob/e95e1e9c9770ed9a3d9480c1fa73e64391268354/package-lock.json#L737">https://github.com/cloudflare/serverless-cloudflare-workers/blob/e95e1e9c9770ed9a3d9480c1fa73e64391268354/package-lock.json#L737</a></li>
<li><a href="https://github.com/fsevents/fsevents/compare/v1.2.10...v1.2.11">https://github.com/fsevents/fsevents/compare/v1.2.10...v1.2.11</a></li>
<li><a href="https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058">https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058</a></li>
<li><a href="https://github.com/advisories/GHSA-8r6j-v8pm-fqw3">https://github.com/advisories/GHSA-8r6j-v8pm-fqw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r6j-v8pm-fqw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-06T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[progressbar.js] progressbar.js vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-89qm-hm2x-mxm3</id>
        <link href="https://github.com/advisories/GHSA-89qm-hm2x-mxm3"/>
        <updated>2023-10-09T20:17:28.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package progressbar.js prior to 1.1.1 are vulnerable to Prototype Pollution via the function extend() in the file utils.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26133">https://nvd.nist.gov/vuln/detail/CVE-2023-26133</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PROGRESSBARJS-3184152">https://security.snyk.io/vuln/SNYK-JS-PROGRESSBARJS-3184152</a></li>
<li><a href="https://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L18">https://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L18</a></li>
<li><a href="https://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L20">https://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L20</a></li>
<li><a href="https://github.com/kimmobrunfeldt/progressbar.js/commit/97fe68ef4beccfe84b7cba08ea1fc695e38cc04b">https://github.com/kimmobrunfeldt/progressbar.js/commit/97fe68ef4beccfe84b7cba08ea1fc695e38cc04b</a></li>
<li><a href="https://github.com/advisories/GHSA-89qm-hm2x-mxm3">https://github.com/advisories/GHSA-89qm-hm2x-mxm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-89qm-hm2x-mxm3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-12T06:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openmct] Prototype Pollution in NASA Open MCT]]></title>
        <id>https://github.com/advisories/GHSA-4xcx-cwrq-w792</id>
        <link href="https://github.com/advisories/GHSA-4xcx-cwrq-w792"/>
        <updated>2023-10-09T00:48:29.000Z</updated>
        <content type="html"><![CDATA[<p>In NASA Open MCT (aka openmct) before commit 545a177 is subject to a prototype pollution which can occur via an import action.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45282">https://nvd.nist.gov/vuln/detail/CVE-2023-45282</a></li>
<li><a href="https://github.com/nasa/openmct/pull/7094/commits/545a1770c523ecc3410dca884c6809d5ff0f9d52">https://github.com/nasa/openmct/pull/7094/commits/545a1770c523ecc3410dca884c6809d5ff0f9d52</a></li>
<li><a href="https://nasa.github.io/openmct/">https://nasa.github.io/openmct/</a></li>
<li><a href="https://github.com/nasa/openmct/commit/2243381d527c0d84cc48e9ace78be7cda5363612">https://github.com/nasa/openmct/commit/2243381d527c0d84cc48e9ace78be7cda5363612</a></li>
<li><a href="https://github.com/advisories/GHSA-4xcx-cwrq-w792">https://github.com/advisories/GHSA-4xcx-cwrq-w792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xcx-cwrq-w792</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-06T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-inspector] Withdrawn Advisory: Node.js Inspector RCE via DNS Rebinding]]></title>
        <id>https://github.com/advisories/GHSA-wq4c-wm6x-jw44</id>
        <link href="https://github.com/advisories/GHSA-wq4c-wm6x-jw44"/>
        <updated>2023-10-09T00:42:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn-advisory">Withdrawn Advisory</h2>
<p>This advisory has been withdrawn because this vulnerability affects inspector code in <a href="https://github.com/nodejs/node">https://github.com/nodejs/node</a>, not the <a href="https://nodejs.org/en/docs/inspector#legacy-debugger">legacy debugger</a> at <a href="https://github.com/node-inspector/node-inspector">https://github.com/node-inspector/node-inspector</a>. <a href="https://github.com/nodejs/node">https://github.com/nodejs/node</a> is not in a <a href="https://github.com/github/advisory-database/blob/main/README.md#supported-ecosystems">supported ecosystem</a>.</p>
<h2 id="original-description">Original Description</h2>
<p>The Node.js inspector, in 6.x and later is vulnerable to a DNS rebinding attack which could be exploited to perform remote code execution. An attack is possible from malicious websites open in a web browser on the same computer, or another computer with network access to the computer running the Node.js process. A malicious website could use a DNS rebinding attack to trick the web browser to bypass same-origin-policy checks and to allow HTTP connections to localhost or to hosts on the local network. If a Node.js process with the debug port active is running on localhost or on a host on the local network, the malicious website could connect to it as a debugger, and get full code execution access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7160">https://nvd.nist.gov/vuln/detail/CVE-2018-7160</a></li>
<li><a href="https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/">https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/</a></li>
<li><a href="https://support.f5.com/csp/article/K63025104?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K63025104?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://github.com/nodejs/node/commit/e3950d1a402b80e4098a40aacddd6a104da0cfa9">https://github.com/nodejs/node/commit/e3950d1a402b80e4098a40aacddd6a104da0cfa9</a></li>
<li><a href="https://github.com/advisories/GHSA-wq4c-wm6x-jw44">https://github.com/advisories/GHSA-wq4c-wm6x-jw44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq4c-wm6x-jw44</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:08:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-rules] Command Injection in node-rules]]></title>
        <id>https://github.com/advisories/GHSA-8whr-v3gm-w8h9</id>
        <link href="https://github.com/advisories/GHSA-8whr-v3gm-w8h9"/>
        <updated>2023-10-06T20:58:24.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>node-rules</code> prior to 5.0.0 are vulnerable to Command Injection. The package fails to sanitize input rules and passes it directly to an <code>eval</code> call when using the <code>fromJSON</code> function. This may allow attackers to execute arbitrary code in the system if the rules are user-controlled.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 5.0.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mithunsatheesh/node-rules/issues/84">https://github.com/mithunsatheesh/node-rules/issues/84</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-NODERULES-560426">https://snyk.io/vuln/SNYK-JS-NODERULES-560426</a></li>
<li><a href="https://github.com/mithunsatheesh/node-rules/commit/100862223904bb6478fcc33b701c7dee11f7b832">https://github.com/mithunsatheesh/node-rules/commit/100862223904bb6478fcc33b701c7dee11f7b832</a></li>
<li><a href="https://github.com/advisories/GHSA-8whr-v3gm-w8h9">https://github.com/advisories/GHSA-8whr-v3gm-w8h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8whr-v3gm-w8h9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-09-03T15:51:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simditor] Simditor XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p9wj-wrrm-84m5</id>
        <link href="https://github.com/advisories/GHSA-p9wj-wrrm-84m5"/>
        <updated>2023-10-06T17:39:18.000Z</updated>
        <content type="html"><![CDATA[<p>Simditor v2.3.11 allows XSS via crafted use of <code>svg/onload=alert</code> in a TEXTAREA element, as demonstrated by Firefox 54.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6464">https://nvd.nist.gov/vuln/detail/CVE-2018-6464</a></li>
<li><a href="https://github.com/Heartway/simditor/blob/master/simditor.docx">https://github.com/Heartway/simditor/blob/master/simditor.docx</a></li>
<li><a href="https://github.com/advisories/GHSA-p9wj-wrrm-84m5">https://github.com/advisories/GHSA-p9wj-wrrm-84m5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9wj-wrrm-84m5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:28:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[converse.js] Converse.js Exposure of Sensitive Information]]></title>
        <id>https://github.com/advisories/GHSA-mv4h-qm24-x4gh</id>
        <link href="https://github.com/advisories/GHSA-mv4h-qm24-x4gh"/>
        <updated>2023-10-06T17:38:07.000Z</updated>
        <content type="html"><![CDATA[<p>Converse.js and Inverse.js through 3.3 allow remote attackers to obtain sensitive information because it is too difficult to determine whether safe publication of private data was configured or even intended. For example, users might have an expectation that chatroom bookmarks are private, but the various interacting software components do not necessarily make that happen.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6591">https://nvd.nist.gov/vuln/detail/CVE-2018-6591</a></li>
<li><a href="https://gultsch.de/converse_bookmarks.html">https://gultsch.de/converse_bookmarks.html</a></li>
<li><a href="https://github.com/conversejs/converse.js/commit/ba09996998df38a5eb76903457fbb1077caabe25">https://github.com/conversejs/converse.js/commit/ba09996998df38a5eb76903457fbb1077caabe25</a></li>
<li><a href="https://github.com/advisories/GHSA-mv4h-qm24-x4gh">https://github.com/advisories/GHSA-mv4h-qm24-x4gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mv4h-qm24-x4gh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:12:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[angular-redactor] Angular Redactor XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-88fh-8979-q2rr</id>
        <link href="https://github.com/advisories/GHSA-88fh-8979-q2rr"/>
        <updated>2023-10-06T17:33:21.000Z</updated>
        <content type="html"><![CDATA[<p>Imperavi Redactor 3 in Angular Redactor 1.1.6, when HTML content mode is used, allows stored XSS, as demonstrated by an onerror attribute of an IMG element, a related issue to CVE-2018-7035.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-13339">https://nvd.nist.gov/vuln/detail/CVE-2018-13339</a></li>
<li><a href="https://github.com/TylerGarlick/angular-redactor/issues/77">https://github.com/TylerGarlick/angular-redactor/issues/77</a></li>
<li><a href="https://github.com/gleez/cms/issues/796">https://github.com/gleez/cms/issues/796</a></li>
<li><a href="https://github.com/advisories/GHSA-88fh-8979-q2rr">https://github.com/advisories/GHSA-88fh-8979-q2rr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-88fh-8979-q2rr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:04:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[traceroute] Node-Traceroute RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8j9v-qhp4-wv55</id>
        <link href="https://github.com/advisories/GHSA-8j9v-qhp4-wv55"/>
        <updated>2023-10-06T16:58:55.000Z</updated>
        <content type="html"><![CDATA[<p>The traceroute (aka node-traceroute) package through 1.0.0 for Node.js allows remote command injection via the host parameter. This occurs because the <code>Child.exec()</code> method, which is considered to be not entirely safe, is used. In particular, an OS command can be placed after a newline character.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-21268">https://nvd.nist.gov/vuln/detail/CVE-2018-21268</a></li>
<li><a href="https://github.com/jaw187/node-traceroute/commit/b99ee024a01a40d3d20a92ad3769cc78a3f6386f">https://github.com/jaw187/node-traceroute/commit/b99ee024a01a40d3d20a92ad3769cc78a3f6386f</a></li>
<li><a href="https://github.com/jaw187/node-traceroute/tags">https://github.com/jaw187/node-traceroute/tags</a></li>
<li><a href="https://medium.com/@shay_62828/shell-command-injection-through-traceroute-npm-package-a4cf7b6553e3">https://medium.com/@shay_62828/shell-command-injection-through-traceroute-npm-package-a4cf7b6553e3</a></li>
<li><a href="https://snyk.io/vuln/npm:traceroute:20160311">https://snyk.io/vuln/npm:traceroute:20160311</a></li>
<li><a href="https://www.linkedin.com/posts/op-innovate_shell-command-injection-through-traceroute-activity-6678956453086191616-Rcpy">https://www.linkedin.com/posts/op-innovate_shell-command-injection-through-traceroute-activity-6678956453086191616-Rcpy</a></li>
<li><a href="https://www.npmjs.com/advisories/1465">https://www.npmjs.com/advisories/1465</a></li>
<li><a href="https://www.op-c.net/2020/06/17/shell-command-injection-through-traceroute-npm-package/">https://www.op-c.net/2020/06/17/shell-command-injection-through-traceroute-npm-package/</a></li>
<li><a href="https://github.com/advisories/GHSA-8j9v-qhp4-wv55">https://github.com/advisories/GHSA-8j9v-qhp4-wv55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j9v-qhp4-wv55</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:21:39.000Z</published>
    </entry>
</feed>