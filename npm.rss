<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-12-22T09:01:17.238Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[dustjs-linkedin] dustjs-linkedin vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-c6rp-wrp9-qr4q</id>
        <link href="https://github.com/advisories/GHSA-c6rp-wrp9-qr4q"/>
        <updated>2022-12-22T03:35:38.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in LinkedIn dustjs prior to version 3.0.0 and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.0.0 can address this issue. The name of the patch is ddb6523832465d38c9d80189e9de60519ac307c3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216464.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4264">https://nvd.nist.gov/vuln/detail/CVE-2021-4264</a></li>
<li><a href="https://github.com/linkedin/dustjs/issues/804">https://github.com/linkedin/dustjs/issues/804</a></li>
<li><a href="https://github.com/linkedin/dustjs/pull/805">https://github.com/linkedin/dustjs/pull/805</a></li>
<li><a href="https://github.com/linkedin/dustjs/commit/ddb6523832465d38c9d80189e9de60519ac307c3">https://github.com/linkedin/dustjs/commit/ddb6523832465d38c9d80189e9de60519ac307c3</a></li>
<li><a href="https://vuldb.com/?id.216464">https://vuldb.com/?id.216464</a></li>
<li><a href="https://github.com/linkedin/dustjs/releases/tag/v3.0.0">https://github.com/linkedin/dustjs/releases/tag/v3.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-c6rp-wrp9-qr4q">https://github.com/advisories/GHSA-c6rp-wrp9-qr4q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6rp-wrp9-qr4q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-21T21:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 vulnerable to Arbitrary Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-4w2j-2rg4-5mjw</id>
        <link href="https://github.com/advisories/GHSA-4w2j-2rg4-5mjw"/>
        <updated>2022-12-22T03:33:45.000Z</updated>
        <content type="html"><![CDATA[<p>The package vm2 before 3.9.10 is vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25893">https://nvd.nist.gov/vuln/detail/CVE-2022-25893</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/444">https://github.com/patriksimek/vm2/issues/444</a></li>
<li><a href="https://github.com/patriksimek/vm2/pull/445">https://github.com/patriksimek/vm2/pull/445</a></li>
<li><a href="https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69">https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-VM2-2990237">https://security.snyk.io/vuln/SNYK-JS-VM2-2990237</a></li>
<li><a href="https://github.com/advisories/GHSA-4w2j-2rg4-5mjw">https://github.com/advisories/GHSA-4w2j-2rg4-5mjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4w2j-2rg4-5mjw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-21T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonwebtoken] jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC]]></title>
        <id>https://github.com/advisories/GHSA-hjrf-2m68-5959</id>
        <link href="https://github.com/advisories/GHSA-hjrf-2m68-5959"/>
        <updated>2022-12-22T03:33:20.000Z</updated>
        <content type="html"><![CDATA[<h1 id="overview">Overview</h1>
<p>Versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the <code>secretOrPublicKey</code> argument from the <a href="https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback">readme link</a>) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification  than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. </p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. </p>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>Update to version 9.0.0</p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>There is no impact for end users</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959</a></li>
<li><a href="https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>
<li><a href="https://github.com/advisories/GHSA-hjrf-2m68-5959">https://github.com/advisories/GHSA-hjrf-2m68-5959</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjrf-2m68-5959</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-22T03:33:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonwebtoken] jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()]]></title>
        <id>https://github.com/advisories/GHSA-qwph-4952-7xr6</id>
        <link href="https://github.com/advisories/GHSA-qwph-4952-7xr6"/>
        <updated>2022-12-22T03:33:00.000Z</updated>
        <content type="html"><![CDATA[<h1 id="overview">Overview</h1>
<p>In versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library, lack of algorithm definition in the <code>jwt.verify()</code> function can lead to signature validation bypass due to defaulting to the <code>none</code> algorithm for signature verification. </p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You will be affected if you do not specify algorithms in the <code>jwt.verify()</code> function</p>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>Update to version 9.0.0 which removes the default support for the none algorithm in the <code>jwt.verify()</code> method. </p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>There will be no impact, if you update to version 9.0.0 and you donâ€™t need to allow for the <code>none</code> algorithm. If you need 'none' algorithm, you have to explicitly specify that in <code>jwt.verify()</code> options.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6</a></li>
<li><a href="https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>
<li><a href="https://github.com/advisories/GHSA-qwph-4952-7xr6">https://github.com/advisories/GHSA-qwph-4952-7xr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwph-4952-7xr6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-22T03:32:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonwebtoken] jsonwebtoken unrestricted key type could lead to legacy keys usage ]]></title>
        <id>https://github.com/advisories/GHSA-8cf7-32gw-wr33</id>
        <link href="https://github.com/advisories/GHSA-8cf7-32gw-wr33"/>
        <updated>2022-12-22T03:32:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="overview">Overview</h1>
<p>Versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. </p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You are affected if you are using an algorithm and a key type other than the combinations mentioned below</p>
<table>
<thead>
<tr>
<th>Key type</th>
<th>algorithm</th>
</tr>
</thead>
<tbody><tr>
<td>ec</td>
<td>ES256, ES384, ES512</td>
</tr>
<tr>
<td>rsa</td>
<td>RS256, RS384, RS512, PS256, PS384, PS512</td>
</tr>
<tr>
<td>rsa-pss</td>
<td>PS256, PS384, PS512</td>
</tr>
</tbody></table>
<p>And for Elliptic Curve algorithms:</p>
<table>
<thead>
<tr>
<th><code>alg</code></th>
<th>Curve</th>
</tr>
</thead>
<tbody><tr>
<td>ES256</td>
<td>prime256v1</td>
</tr>
<tr>
<td>ES384</td>
<td>secp384r1</td>
</tr>
<tr>
<td>ES512</td>
<td>secp521r1</td>
</tr>
</tbody></table>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>Update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, youâ€™ll need to set the <code>allowInvalidAsymmetricKeyTypes</code> option  to <code>true</code> in the <code>sign()</code> and/or <code>verify()</code> functions.</p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>There will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,  use the  <code>allowInvalidAsymmetricKeyTypes</code> option  to <code>true</code> in the <code>sign()</code> and <code>verify()</code> functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33</a></li>
<li><a href="https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>
<li><a href="https://github.com/advisories/GHSA-8cf7-32gw-wr33">https://github.com/advisories/GHSA-8cf7-32gw-wr33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8cf7-32gw-wr33</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-22T03:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonwebtoken] jsonwebtoken has insecure input validation in jwt.verify function]]></title>
        <id>https://github.com/advisories/GHSA-27h2-hvpr-p74q</id>
        <link href="https://github.com/advisories/GHSA-27h2-hvpr-p74q"/>
        <updated>2022-12-22T03:31:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="overview">Overview</h1>
<p>For versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library, if a malicious actor has the ability to modify the key retrieval parameter (referring to the <code>secretOrPublicKey</code> argument from the <a href="https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback">readme link</a>) of the <code>jwt.verify()</code> function, they can gain remote code execution (RCE).</p>
<h1 id="am-i-affected">Am I affected?</h1>
<p>You are affected only if you allow untrusted entities to modify the key retrieval parameter of the <code>jwt.verify()</code>  on a host that you control. </p>
<h1 id="how-do-i-fix-it">How do I fix it?</h1>
<p>Update to version 9.0.0</p>
<h1 id="will-the-fix-impact-my-users">Will the fix impact my users?</h1>
<p>The fix has no impact on end users.</p>
<h1 id="credits">Credits</h1>
<p><a href="https://www.paloaltonetworks.com/">Palo Alto Networks</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-27h2-hvpr-p74q">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-27h2-hvpr-p74q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23529">https://nvd.nist.gov/vuln/detail/CVE-2022-23529</a></li>
<li><a href="https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>
<li><a href="https://github.com/advisories/GHSA-27h2-hvpr-p74q">https://github.com/advisories/GHSA-27h2-hvpr-p74q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27h2-hvpr-p74q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-22T03:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smoothie] Smoothie vulnerable to Cross-site Scripting when tooltipLabel or strokeStyle are controlled by users]]></title>
        <id>https://github.com/advisories/GHSA-g662-qq45-ppwm</id>
        <link href="https://github.com/advisories/GHSA-g662-qq45-ppwm"/>
        <updated>2022-12-21T18:53:54.000Z</updated>
        <content type="html"><![CDATA[<p>The package smoothie from 1.31.0 and before 1.36.1 are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization in strokeStyle and tooltipLabel properties. Exploiting this vulnerability is possible when the user can control these properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25929">https://nvd.nist.gov/vuln/detail/CVE-2022-25929</a></li>
<li><a href="https://github.com/joewalnes/smoothie/pull/147">https://github.com/joewalnes/smoothie/pull/147</a></li>
<li><a href="https://github.com/joewalnes/smoothie/commit/8e0920d50da82f4b6e605d56f41b69fbb9606a98">https://github.com/joewalnes/smoothie/commit/8e0920d50da82f4b6e605d56f41b69fbb9606a98</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-3177369">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-3177369</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-3177368">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-3177368</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SMOOTHIE-3177364">https://security.snyk.io/vuln/SNYK-JS-SMOOTHIE-3177364</a></li>
<li><a href="https://github.com/advisories/GHSA-g662-qq45-ppwm">https://github.com/advisories/GHSA-g662-qq45-ppwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g662-qq45-ppwm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-21T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[abacus-ext-cmdline] abacus-ext-cmdline vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-m5v8-wpw4-rj3x</id>
        <link href="https://github.com/advisories/GHSA-m5v8-wpw4-rj3x"/>
        <updated>2022-12-21T17:22:44.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package abacus-ext-cmdline are vulnerable to Command Injection via the execute function due to improper user-input sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24431">https://nvd.nist.gov/vuln/detail/CVE-2022-24431</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ABACUSEXTCMDLINE-3157950">https://security.snyk.io/vuln/SNYK-JS-ABACUSEXTCMDLINE-3157950</a></li>
<li><a href="https://github.com/advisories/GHSA-m5v8-wpw4-rj3x">https://github.com/advisories/GHSA-m5v8-wpw4-rj3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5v8-wpw4-rj3x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-21T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lite-dev-server] lite-dev-server vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-pppv-ch8p-rp2w</id>
        <link href="https://github.com/advisories/GHSA-pppv-ch8p-rp2w"/>
        <updated>2022-12-21T17:22:18.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lite-dev-server are vulnerable to Directory Traversal due to missing input sanitization and sandboxes being employed to the req.url user input that is passed to the server code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25895">https://nvd.nist.gov/vuln/detail/CVE-2022-25895</a></li>
<li><a href="https://gist.github.com/lirantal/0f8a48c3f5ac581ce73123abe9f7f120">https://gist.github.com/lirantal/0f8a48c3f5ac581ce73123abe9f7f120</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-LITEDEVSERVER-3153718">https://security.snyk.io/vuln/SNYK-JS-LITEDEVSERVER-3153718</a></li>
<li><a href="https://github.com/shadowwzw/lite-dev-server/blob/master/src/server.js#23L134">https://github.com/shadowwzw/lite-dev-server/blob/master/src/server.js#23L134</a></li>
<li><a href="https://github.com/advisories/GHSA-pppv-ch8p-rp2w">https://github.com/advisories/GHSA-pppv-ch8p-rp2w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pppv-ch8p-rp2w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-21T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] safe-eval vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-33vh-7x8q-mg35</id>
        <link href="https://github.com/advisories/GHSA-33vh-7x8q-mg35"/>
        <updated>2022-12-20T17:38:42.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package safe-eval are vulnerable to Prototype Pollution which allows an attacker to add or modify properties of the Object.prototype.Consolidate when using the function safeEval. This is because the function uses vm variable, leading an attacker to modify properties of the Object.prototype.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25904">https://nvd.nist.gov/vuln/detail/CVE-2022-25904</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/26">https://github.com/hacksparrow/safe-eval/issues/26</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3175701">https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3175701</a></li>
<li><a href="https://github.com/advisories/GHSA-33vh-7x8q-mg35">https://github.com/advisories/GHSA-33vh-7x8q-mg35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-33vh-7x8q-mg35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T06:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[p4] p4 vulnerable to Command Injection due to improper input sanitization]]></title>
        <id>https://github.com/advisories/GHSA-jfm8-hwhg-r6gg</id>
        <link href="https://github.com/advisories/GHSA-jfm8-hwhg-r6gg"/>
        <updated>2022-12-20T17:38:22.000Z</updated>
        <content type="html"><![CDATA[<p>The package p4 before 0.0.7 is vulnerable to Command Injection via the run() function due to improper input sanitization</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25171">https://nvd.nist.gov/vuln/detail/CVE-2022-25171</a></li>
<li><a href="https://github.com/natelong/p4/commit/ae42e251beabf67c00539ec0e1d7aa149ca445fb">https://github.com/natelong/p4/commit/ae42e251beabf67c00539ec0e1d7aa149ca445fb</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-P4-3167330">https://security.snyk.io/vuln/SNYK-JS-P4-3167330</a></li>
<li><a href="https://github.com/natelong/p4/blob/master/p4.js#23L12">https://github.com/natelong/p4/blob/master/p4.js#23L12</a></li>
<li><a href="https://github.com/advisories/GHSA-jfm8-hwhg-r6gg">https://github.com/advisories/GHSA-jfm8-hwhg-r6gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfm8-hwhg-r6gg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T06:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[easy-static-server] easy-static-server vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-wcwm-c3mr-pxcr</id>
        <link href="https://github.com/advisories/GHSA-wcwm-c3mr-pxcr"/>
        <updated>2022-12-20T17:38:02.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package easy-static-server are vulnerable to Directory Traversal due to missing input sanitization and sandboxes being employed to the req.url user input that is passed to the server code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25931">https://nvd.nist.gov/vuln/detail/CVE-2022-25931</a></li>
<li><a href="https://gist.github.com/lirantal/fdfbe26561788c8194a54bf6d31772c9">https://gist.github.com/lirantal/fdfbe26561788c8194a54bf6d31772c9</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-EASYSTATICSERVER-3153539">https://security.snyk.io/vuln/SNYK-JS-EASYSTATICSERVER-3153539</a></li>
<li><a href="https://github.com/cunjieliu/easyServer/blob/master/index.js#23L27">https://github.com/cunjieliu/easyServer/blob/master/index.js#23L27</a></li>
<li><a href="https://github.com/advisories/GHSA-wcwm-c3mr-pxcr">https://github.com/advisories/GHSA-wcwm-c3mr-pxcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wcwm-c3mr-pxcr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T06:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lite-server] lite-server vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-89w7-5q45-r53w</id>
        <link href="https://github.com/advisories/GHSA-89w7-5q45-r53w"/>
        <updated>2022-12-20T17:37:49.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package lite-server are vulnerable to Denial of Service (DoS) when an attacker sends an HTTP request and includes control characters that the decodeURI() function is unable to parse.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25940">https://nvd.nist.gov/vuln/detail/CVE-2022-25940</a></li>
<li><a href="https://gist.github.com/lirantal/832382155e00da92bfd8bb3adea474eb">https://gist.github.com/lirantal/832382155e00da92bfd8bb3adea474eb</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3175617">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3175617</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-LITESERVER-3153540">https://security.snyk.io/vuln/SNYK-JS-LITESERVER-3153540</a></li>
<li><a href="https://github.com/advisories/GHSA-89w7-5q45-r53w">https://github.com/advisories/GHSA-89w7-5q45-r53w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-89w7-5q45-r53w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T06:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[knex] Knex.js has a limited SQL injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4jv9-3563-23j3</id>
        <link href="https://github.com/advisories/GHSA-4jv9-3563-23j3"/>
        <updated>2022-12-20T17:19:50.000Z</updated>
        <content type="html"><![CDATA[<p>Knex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-20018">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>
<li><a href="https://github.com/knex/knex/issues/1227">https://github.com/knex/knex/issues/1227</a></li>
<li><a href="https://www.ghostccamm.com/blog/knex_sqli/">https://www.ghostccamm.com/blog/knex_sqli/</a></li>
<li><a href="https://github.com/advisories/GHSA-4jv9-3563-23j3">https://github.com/advisories/GHSA-4jv9-3563-23j3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jv9-3563-23j3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-19T09:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2022-12-20T05:02:05.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oils] Oils JS vulnerable to Open Redirect]]></title>
        <id>https://github.com/advisories/GHSA-v279-v2xm-whq9</id>
        <link href="https://github.com/advisories/GHSA-v279-v2xm-whq9"/>
        <updated>2022-12-19T21:05:13.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in oils-js. This vulnerability affects unknown code of the file core/Web.js. The manipulation leads to open redirect. The attack can be initiated remotely. The name of the patch is fad8fbae824a7d367dacb90d56cb02c5cb999d42. It is recommended to apply a patch to fix this issue. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4260">https://nvd.nist.gov/vuln/detail/CVE-2021-4260</a></li>
<li><a href="https://github.com/mannyvergel/oils-js/commit/fad8fbae824a7d367dacb90d56cb02c5cb999d42">https://github.com/mannyvergel/oils-js/commit/fad8fbae824a7d367dacb90d56cb02c5cb999d42</a></li>
<li><a href="https://vuldb.com/?id.216268">https://vuldb.com/?id.216268</a></li>
<li><a href="https://web.archive.org/web/20211204010604/https://www.npmjs.com/package/oils">https://web.archive.org/web/20211204010604/https://www.npmjs.com/package/oils</a></li>
<li><a href="https://github.com/advisories/GHSA-v279-v2xm-whq9">https://github.com/advisories/GHSA-v279-v2xm-whq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v279-v2xm-whq9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-19T15:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whois] FurqanSoftware/node-whois vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-97jv-c342-5xhc</id>
        <link href="https://github.com/advisories/GHSA-97jv-c342-5xhc"/>
        <updated>2022-12-19T18:24:05.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as critical has been found in Furqan node-whois. Affected is an unknown function of the file index.coffee. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to launch the attack remotely. The name of the patch is 46ccc2aee8d063c7b6b4dee2c2834113b7286076. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216252.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36618">https://nvd.nist.gov/vuln/detail/CVE-2020-36618</a></li>
<li><a href="https://github.com/FurqanSoftware/node-whois/pull/105">https://github.com/FurqanSoftware/node-whois/pull/105</a></li>
<li><a href="https://github.com/FurqanSoftware/node-whois/commit/46ccc2aee8d063c7b6b4dee2c2834113b7286076">https://github.com/FurqanSoftware/node-whois/commit/46ccc2aee8d063c7b6b4dee2c2834113b7286076</a></li>
<li><a href="https://vuldb.com/?id.216252">https://vuldb.com/?id.216252</a></li>
<li><a href="https://web.archive.org/web/20220403104013/https://www.npmjs.com/package/whois">https://web.archive.org/web/20220403104013/https://www.npmjs.com/package/whois</a></li>
<li><a href="https://github.com/advisories/GHSA-97jv-c342-5xhc">https://github.com/advisories/GHSA-97jv-c342-5xhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jv-c342-5xhc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-19T15:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[replicator] replicator vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-hw46-vg6w-88fj</id>
        <link href="https://github.com/advisories/GHSA-hw46-vg6w-88fj"/>
        <updated>2022-12-20T19:06:16.000Z</updated>
        <content type="html"><![CDATA[<p>A deserialization issue discovered in inikulin replicator before 1.0.4 allows remote attackers to run arbitrary code via the fromSerializable function in TypedArray object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33420">https://nvd.nist.gov/vuln/detail/CVE-2021-33420</a></li>
<li><a href="https://github.com/inikulin/replicator/issues/16">https://github.com/inikulin/replicator/issues/16</a></li>
<li><a href="https://github.com/inikulin/replicator/pull/17">https://github.com/inikulin/replicator/pull/17</a></li>
<li><a href="https://github.com/inikulin/replicator/commit/2c626242fb4a118855262c64b5731b2ce98e521b">https://github.com/inikulin/replicator/commit/2c626242fb4a118855262c64b5731b2ce98e521b</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2021-4787">https://advisory.checkmarx.net/advisory/CX-2021-4787</a></li>
<li><a href="https://github.com/advisories/GHSA-hw46-vg6w-88fj">https://github.com/advisories/GHSA-hw46-vg6w-88fj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw46-vg6w-88fj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-15T21:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@easy-team/easywebpack-cli] easywebpack-cli Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-252h-2cmq-pmr6</id>
        <link href="https://github.com/advisories/GHSA-252h-2cmq-pmr6"/>
        <updated>2022-12-20T15:46:30.000Z</updated>
        <content type="html"><![CDATA[<p>Directory Traversal vulnerability in easywebpack-cli before 4.5.2 allows attackers to obtain sensitive information via crafted GET request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-24855">https://nvd.nist.gov/vuln/detail/CVE-2020-24855</a></li>
<li><a href="https://github.com/easy-team/easywebpack-cli/issues/25">https://github.com/easy-team/easywebpack-cli/issues/25</a></li>
<li><a href="https://github.com/easy-team/easywebpack-cli/commit/eb3f54603f58ea706d0c03fd6eb76c94176eae52">https://github.com/easy-team/easywebpack-cli/commit/eb3f54603f58ea706d0c03fd6eb76c94176eae52</a></li>
<li><a href="https://github.com/advisories/GHSA-252h-2cmq-pmr6">https://github.com/advisories/GHSA-252h-2cmq-pmr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-252h-2cmq-pmr6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-15T21:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rfc6902] npm package rfc6902 vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-p495-jxh2-wrfg</id>
        <link href="https://github.com/advisories/GHSA-p495-jxh2-wrfg"/>
        <updated>2022-12-20T18:53:52.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4245">https://nvd.nist.gov/vuln/detail/CVE-2021-4245</a></li>
<li><a href="https://github.com/chbrown/rfc6902/pull/76">https://github.com/chbrown/rfc6902/pull/76</a></li>
<li><a href="https://github.com/chbrown/rfc6902/commit/c006ce9faa43d31edb34924f1df7b79c137096cf">https://github.com/chbrown/rfc6902/commit/c006ce9faa43d31edb34924f1df7b79c137096cf</a></li>
<li><a href="https://vuldb.com/?id.215883">https://vuldb.com/?id.215883</a></li>
<li><a href="https://github.com/chbrown/rfc6902/issues/84">https://github.com/chbrown/rfc6902/issues/84</a></li>
<li><a href="https://github.com/advisories/GHSA-p495-jxh2-wrfg">https://github.com/advisories/GHSA-p495-jxh2-wrfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p495-jxh2-wrfg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-15T21:30:28.000Z</published>
    </entry>
</feed>