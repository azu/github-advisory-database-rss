<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-07-22T11:01:09.885Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[lunary] lunary-ai/lunary XSS in SAML metadata endpoint]]></title>
        <id>https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</id>
        <link href="https://github.com/advisories/GHSA-rpx8-fg6w-rm6x"/>
        <updated>2024-07-19T19:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-site Scripting (XSS) vulnerability exists in the SAML metadata endpoint <code>/auth/saml/${org?.id}/metadata</code> of lunary-ai/lunary version 1.2.7. The vulnerability arises due to the application's failure to escape or validate the <code>orgId</code> parameter supplied by the user before incorporating it into the generated response. Specifically, the endpoint generates XML responses for SAML metadata, where the <code>orgId</code> parameter is directly embedded into the XML structure without proper sanitization or validation. This flaw allows an attacker to inject arbitrary JavaScript code into the generated SAML metadata page, leading to potential theft of user cookies or authentication tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5478">https://nvd.nist.gov/vuln/detail/CVE-2024-5478</a></li>
<li><a href="https://huntr.com/bounties/e899f496-d493-4c06-b596-cb0a88ad451b">https://huntr.com/bounties/e899f496-d493-4c06-b596-cb0a88ad451b</a></li>
<li><a href="https://github.com/lunary-ai/lunary/blob/main/packages/backend/src/api/v1/auth/saml.ts#L34">https://github.com/lunary-ai/lunary/blob/main/packages/backend/src/api/v1/auth/saml.ts#L34</a></li>
<li><a href="https://github.com/advisories/GHSA-rpx8-fg6w-rm6x">https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rpx8-fg6w-rm6x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@zowe/cli] Zowe CLI allows storage of previously entered secure credentials in a plaintext file]]></title>
        <id>https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</id>
        <link href="https://github.com/advisories/GHSA-ghgq-x6wc-6jr5"/>
        <updated>2024-07-17T19:30:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Zowe CLI allows local, privileged actors to store previously entered secure credentials in a plaintext file as part of an auto-init operation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6833">https://nvd.nist.gov/vuln/detail/CVE-2024-6833</a></li>
<li><a href="https://github.com/zowe/zowe-cli">https://github.com/zowe/zowe-cli</a></li>
<li><a href="https://github.com/zowe/zowe-cli/commit/6778da5e03c65dfcd3e6e4b4097b94d9fbd5d01b">https://github.com/zowe/zowe-cli/commit/6778da5e03c65dfcd3e6e4b4097b94d9fbd5d01b</a></li>
<li><a href="https://github.com/advisories/GHSA-ghgq-x6wc-6jr5">https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghgq-x6wc-6jr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T15:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsdom] Withdrawn Advisory: Insufficient Granularity of Access Control in JSDom]]></title>
        <id>https://github.com/advisories/GHSA-f4c9-cqv8-9v98</id>
        <link href="https://github.com/advisories/GHSA-f4c9-cqv8-9v98"/>
        <updated>2024-07-19T18:34:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="withdrawn-advisory">Withdrawn Advisory</h1>
<p>This advisory has been withdrawn because the user must configure jsdom to allow access to local files.</p>
<h1 id="original-description">Original Description</h1>
<p>JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-20066">https://nvd.nist.gov/vuln/detail/CVE-2021-20066</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2021-05">https://www.tenable.com/security/research/tra-2021-05</a></li>
<li><a href="https://github.com/jsdom/jsdom/issues/3124">https://github.com/jsdom/jsdom/issues/3124</a></li>
<li><a href="https://github.com/jsdom/jsdom/issues/3124#issuecomment-783502951">https://github.com/jsdom/jsdom/issues/3124#issuecomment-783502951</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-JSDOM-1075447">https://security.snyk.io/vuln/SNYK-JS-JSDOM-1075447</a></li>
<li><a href="https://github.com/advisories/GHSA-f4c9-cqv8-9v98">https://github.com/advisories/GHSA-f4c9-cqv8-9v98</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4c9-cqv8-9v98</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:42:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-fetch] The `size` option isn't honored after following a redirect in node-fetch]]></title>
        <id>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</id>
        <link href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r"/>
        <updated>2024-07-15T19:46:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Node Fetch did not honor the <code>size</code> option after following a redirect, which means that when a content size was over the limit, a <code>FetchError</code> would never get thrown and the process would end without failure.</p>
<p>For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after <code>fetch()</code> has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.</p>
<h3 id="patches">Patches</h3>
<p>We released patched versions for both stable and beta channels:</p>
<ul>
<li>For <code>v2</code>: 2.6.1</li>
<li>For <code>v3</code>: 3.0.0-beta.9</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly recommended to update as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/node-fetch/node-fetch/issues/new?assignees=&amp;labels=question&amp;template=support-or-usage.md&amp;title=Question%3A+">node-fetch</a></li>
<li>Contact one of the core maintainers.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15168">https://nvd.nist.gov/vuln/detail/CVE-2020-15168</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334">https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072">https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072</a></li>
<li><a href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2020-09-10T17:46:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-fetch] The `size` option isn't honored after following a redirect in node-fetch]]></title>
        <id>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</id>
        <link href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r"/>
        <updated>2024-07-15T19:46:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Node Fetch did not honor the <code>size</code> option after following a redirect, which means that when a content size was over the limit, a <code>FetchError</code> would never get thrown and the process would end without failure.</p>
<p>For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after <code>fetch()</code> has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.</p>
<h3 id="patches">Patches</h3>
<p>We released patched versions for both stable and beta channels:</p>
<ul>
<li>For <code>v2</code>: 2.6.1</li>
<li>For <code>v3</code>: 3.0.0-beta.9</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None, it is strongly recommended to update as soon as possible.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/node-fetch/node-fetch/issues/new?assignees=&amp;labels=question&amp;template=support-or-usage.md&amp;title=Question%3A+">node-fetch</a></li>
<li>Contact one of the core maintainers.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15168">https://nvd.nist.gov/vuln/detail/CVE-2020-15168</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334">https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334</a></li>
<li><a href="https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072">https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072</a></li>
<li><a href="https://github.com/advisories/GHSA-w7rc-rwvf-8q5r">https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7rc-rwvf-8q5r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2020-09-10T17:46:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@udecode/plate-media] Plate media plugins has a XSS in media embed element when using custom URL parsers]]></title>
        <id>https://github.com/advisories/GHSA-h3pq-667x-r789</id>
        <link href="https://github.com/advisories/GHSA-h3pq-667x-r789"/>
        <updated>2024-07-15T21:38:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Editors that use <code>MediaEmbedElement</code> and pass custom <code>urlParsers</code> to the <code>useMediaState</code> hook may be vulnerable to XSS if a custom parser allows <code>javascript:</code>, <code>data:</code> or <code>vbscript:</code> URLs to be embedded. Editors that do not use <code>urlParsers</code> and instead consume the <code>url</code> property directly may also be vulnerable if the URL is not sanitised.</p>
<p>The default parsers <code>parseTwitterUrl</code> and <code>parseVideoUrl</code> are not affected.</p>
<p>Examples of vulnerable code:</p>
<pre><code class="language-tsx">const { embed } = useMediaState({
  urlParsers: [
    // Custom parser that does not use an allowlist or validate the URL protocol
    (url) =&gt; ({ url }),
  ],
});

return (
  &lt;iframe
    src={embed!.url}
    // ...
  /&gt;
);
</code></pre>
<pre><code class="language-tsx">const { url } = useMediaState();

return (
  &lt;iframe
    // url property used directly from useMediaState() with no sanitisation
    src={url}
    // ...
  /&gt;
);
</code></pre>
<pre><code class="language-tsx">const { url } = element;

return (
  &lt;iframe
    // url property used directly from element with no sanitisation
    src={url}
    // ...
  /&gt;
);
</code></pre>
<h3 id="patches">Patches</h3>
<p><code>@udecode/plate-media</code> 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the <code>embed</code> property returned from <code>useMediaState</code>.</p>
<p>In addition, the <code>url</code> property returned from <code>useMediaState</code> has been renamed to <code>unsafeUrl</code> to indicate that it has not been sanitised. The <code>url</code> property on <code>element</code> is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that any custom <code>urlParsers</code> do not allow <code>javascript:</code>, <code>data:</code> or <code>vbscript:</code> URLs to be returned in the <code>url</code> property of their return values.</p>
<p>If <code>url</code> is consumed directly, validate the URL protocol before passing it to the <code>iframe</code> element.</p>
<h3 id="references">References</h3>
<p>How to verify the protocol of a URL: <a href="https://stackoverflow.com/a/43467144">https://stackoverflow.com/a/43467144</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789">https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789</a></li>
<li><a href="https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0">https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40631">https://nvd.nist.gov/vuln/detail/CVE-2024-40631</a></li>
<li><a href="https://stackoverflow.com/a/43467144">https://stackoverflow.com/a/43467144</a></li>
<li><a href="https://github.com/advisories/GHSA-h3pq-667x-r789">https://github.com/advisories/GHSA-h3pq-667x-r789</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3pq-667x-r789</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-15T18:33:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@jmondi/url-to-png] @jmondi/url-to-png enables capture screenshot of localhost web services (unauthenticated pages)]]></title>
        <id>https://github.com/advisories/GHSA-342q-2mc2-5gmp</id>
        <link href="https://github.com/advisories/GHSA-342q-2mc2-5gmp"/>
        <updated>2024-07-15T21:38:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The maintainer been contemplating whether FTP or other protocols could serve as useful functionalities, but there may not be a practical reason for it since we are utilizing headless Chrome to capture screenshots. The argument is based on the assumption that this package can function as a service.</p>
<p>The package includes an <code>ALLOW_LIST</code> where the host can specify which services the user is permitted to capture screenshots of. By default, capturing screenshots of web services running on localhost, 127.0.0.1, or the [::] is allowed.</p>
<p>The maintainer is of the opinion that the package should also have a blacklist due to a potential vulnerability (or rather design oversight). If someone hosts this on a server, users could then capture screenshots of other web services running locally.</p>
<p>Unless this is strictly for web pages. Something similar here: <a href="https://github.com/follow-redirects/follow-redirects/issues/235">https://github.com/follow-redirects/follow-redirects/issues/235</a> (localhost is intended for end users or hosts to deny, and the package is for HTTP/HTTPS.)</p>
<p>This is marked as a <code>LOW</code> since the maintainer is not sure if this is a vulnerability, but it's still best to highlight it. :) </p>
<h3 id="poc">PoC</h3>
<p>Have a service like so running locally:</p>
<pre><code class="language-js">const http = require("http")

const server = http.createServer((req, res) =&gt; {
  console.log("Received headers:", req.headers)
  res.writeHead(200, { "Content-Type": "text/plain" })
  res.end("Something private! But Hello from Server 2 :)")
})

server.listen(3001, () =&gt; {
  console.log("Server two running on http://localhost:3001")
})
</code></pre>
<p>Run the package in dev mode, <code>pnpm dev</code>. Feed these URLs:</p>
<pre><code>http://localhost:3089/?url=http://[::]:3001&amp;width=4000
http://localhost:3089/?url=http://localhost:3001&amp;width=4000
http://localhost:3089/?url=http://127.0.01:3001&amp;width=4000
</code></pre>
<img src="https://github.com/jasonraimondi/url-to-png/assets/42532003/21f1c883-ba00-4a15-83b8-922484fa4c2b" alt="image" width="622">



<h3 id="impact">Impact</h3>
<p>Disclose internal web services?</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-342q-2mc2-5gmp">https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-342q-2mc2-5gmp</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/commit/f62ff40403ffa1781459d6be8d97b8035888c00c">https://github.com/jasonraimondi/url-to-png/commit/f62ff40403ffa1781459d6be8d97b8035888c00c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39919">https://nvd.nist.gov/vuln/detail/CVE-2024-39919</a></li>
<li><a href="https://github.com/advisories/GHSA-342q-2mc2-5gmp">https://github.com/advisories/GHSA-342q-2mc2-5gmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-342q-2mc2-5gmp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-15T17:47:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@jmondi/url-to-png] @jmondi/url-to-png contains a Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</id>
        <link href="https://github.com/advisories/GHSA-vvmv-wrvp-9gjr"/>
        <updated>2024-07-15T21:38:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When trying to add a <code>BLOCK_LIST</code> feature when the maintainer noticed they didn't sanitize the <code>ImageId</code> in the code, which leads to path traversal vulnerability. Now, this is different from a traditional path traversal issue, because as of NOW you can store the image in any place arbitrarily, and given enough time they might be able to come up with a working exploit BUT for the time being they am reporting this.  </p>
<h3 id="details">Details</h3>
<p>@jmondi/url-to-png does not sanitizing the <code>ImageID</code> as in not removing special chars from the params <a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">(extract_query_params.ts#l75)</a></p>
<pre><code class="language-js">const imageId = dateString + "." + slugify(validData.url) +configToString(params);
</code></pre>
<p>This when fed to other parts of the code such as (<a href="https://github.com/jasonraimondi/url-to-png/blob/8afc00247c1d7e6c7b37356a5f6282b486e596fa/src/lib/storage/filesystem.ts#L34">filesystem.ts#L34</a>)</p>
<pre><code class="language-js">return path.join(this.storagePath, imageId) + ".png";
</code></pre>
<p>Would result in path traversal issue. </p>
<h3 id="poc">PoC</h3>
<pre><code># Configuration for filesystem storage provider (optional)
STORAGE_PROVIDER=filesystem
IMAGE_STORAGE_PATH=poc
</code></pre>
<p>Set this in your <code>.env</code> file and use this as your payload. </p>
<pre><code>http://localhost:3089/?url=http://example.com&amp;width=400&amp;isDarkMode=../../../../../../../../../../../../tmp/hack
</code></pre>
<p>This will create a <code>.png</code> file in the <code>/tmp</code> section of the system.</p>
<p>Loom POC: <a href="https://www.loom.com/share/bd7b306cdae7445c97e68f0626e743a6">https://www.loom.com/share/bd7b306cdae7445c97e68f0626e743a6</a> </p>
<p>This is valid for pretty much all the arguments (except for numeric values)</p>
<p>A simple fix would be to use the <code>slugify</code> for the params as well like so (<a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">#L75</a>)</p>
<pre><code class="language-diff">- const imageId = dateString + "." + slugify(validData.url) + configToString(params);
+ const imageId = dateString + "." + slugify(validData.url) + slugify(configToString(params));
</code></pre>
<h3 id="impact">Impact</h3>
<p>This would be path traversal vulnerability which allows arbitrary write as of now. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-vvmv-wrvp-9gjr">https://github.com/jasonraimondi/url-to-png/security/advisories/GHSA-vvmv-wrvp-9gjr</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/commit/e4eaeca6493b21cd515b582fd6c0af09ede54507">https://github.com/jasonraimondi/url-to-png/commit/e4eaeca6493b21cd515b582fd6c0af09ede54507</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/releases/tag/v2.1.2">https://github.com/jasonraimondi/url-to-png/releases/tag/v2.1.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39918">https://nvd.nist.gov/vuln/detail/CVE-2024-39918</a></li>
<li><a href="https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75">https://github.com/jasonraimondi/url-to-png/blob/e43098e0af3a380ebc044e7f303a83933b94b434/src/middlewares/extract_query_params.ts#L75</a></li>
<li><a href="https://github.com/advisories/GHSA-vvmv-wrvp-9gjr">https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvmv-wrvp-9gjr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-15T17:46:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-enterprise] ag-grid packages vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-328p-362g-r48j</id>
        <link href="https://github.com/advisories/GHSA-328p-362g-r48j"/>
        <updated>2024-07-12T14:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-enterprise v31.3.2 was discovered to contain a prototype pollution via the component _ModuleSupport.jsonApply. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39001">https://nvd.nist.gov/vuln/detail/CVE-2024-39001</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/issues/8261">https://github.com/ag-grid/ag-grid/issues/8261</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522">https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522</a></li>
<li><a href="https://www.ag-grid.com/changelog/?fixVersion=32.0.1">https://www.ag-grid.com/changelog/?fixVersion=32.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-328p-362g-r48j">https://github.com/advisories/GHSA-328p-362g-r48j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-328p-362g-r48j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-community] ag-grid packages vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-328p-362g-r48j</id>
        <link href="https://github.com/advisories/GHSA-328p-362g-r48j"/>
        <updated>2024-07-12T14:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-enterprise v31.3.2 was discovered to contain a prototype pollution via the component _ModuleSupport.jsonApply. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39001">https://nvd.nist.gov/vuln/detail/CVE-2024-39001</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/issues/8261">https://github.com/ag-grid/ag-grid/issues/8261</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522">https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522</a></li>
<li><a href="https://www.ag-grid.com/changelog/?fixVersion=32.0.1">https://www.ag-grid.com/changelog/?fixVersion=32.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-328p-362g-r48j">https://github.com/advisories/GHSA-328p-362g-r48j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-328p-362g-r48j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@ag-grid-enterprise/charts] ag-grid packages vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-328p-362g-r48j</id>
        <link href="https://github.com/advisories/GHSA-328p-362g-r48j"/>
        <updated>2024-07-12T14:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-enterprise v31.3.2 was discovered to contain a prototype pollution via the component _ModuleSupport.jsonApply. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39001">https://nvd.nist.gov/vuln/detail/CVE-2024-39001</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/issues/8261">https://github.com/ag-grid/ag-grid/issues/8261</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522">https://github.com/ag-grid/ag-grid/commit/78fb47f6c996f22c0b7184afb29620ab8c240522</a></li>
<li><a href="https://www.ag-grid.com/changelog/?fixVersion=32.0.1">https://www.ag-grid.com/changelog/?fixVersion=32.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-328p-362g-r48j">https://github.com/advisories/GHSA-328p-362g-r48j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-328p-362g-r48j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-community] Prototype pollution in ag-grid-community via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-11T21:31:40.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/pull/8290">https://github.com/ag-grid/ag-grid/pull/8290</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ag-grid-enterprise] Prototype pollution in ag-grid-community via the _.mergeDeep function]]></title>
        <id>https://github.com/advisories/GHSA-876p-c77m-x2hc</id>
        <link href="https://github.com/advisories/GHSA-876p-c77m-x2hc"/>
        <updated>2024-07-11T21:31:40.000Z</updated>
        <content type="html"><![CDATA[<p>ag-grid-community v31.3.2 and ag-grid-enterprise v31.3.2 were discovered to contain a prototype pollution via the _.mergeDeep function. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38996">https://nvd.nist.gov/vuln/detail/CVE-2024-38996</a></li>
<li><a href="https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa">https://gist.github.com/mestrtee/18e8c27f3a6376e7cf082cfe1ca766fa</a></li>
<li><a href="https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b">https://gist.github.com/mestrtee/c1590660750744f25e86ba1bf240844b</a></li>
<li><a href="https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b">https://gist.github.com/mestrtee/f8037d492dab0d77bca719e05d31c08b</a></li>
<li><a href="https://github.com/ag-grid/ag-grid/pull/8290">https://github.com/ag-grid/ag-grid/pull/8290</a></li>
<li><a href="https://github.com/advisories/GHSA-876p-c77m-x2hc">https://github.com/advisories/GHSA-876p-c77m-x2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-876p-c77m-x2hc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T15:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@aofl/cli-lib] @aofl/cli-lib Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</id>
        <link href="https://github.com/advisories/GHSA-vg6v-jcg3-5mp7"/>
        <updated>2024-07-11T17:43:36.000Z</updated>
        <content type="html"><![CDATA[<p>aofl cli-lib v3.14.0 was discovered to contain a prototype pollution via the component defaultsDeep. This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38987">https://nvd.nist.gov/vuln/detail/CVE-2024-38987</a></li>
<li><a href="https://github.com/AgeOfLearning/aofl/issues/35">https://github.com/AgeOfLearning/aofl/issues/35</a></li>
<li><a href="https://gist.github.com/mestrtee/29636943e6989e67f38251580cbcea73">https://gist.github.com/mestrtee/29636943e6989e67f38251580cbcea73</a></li>
<li><a href="https://github.com/advisories/GHSA-vg6v-jcg3-5mp7">https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg6v-jcg3-5mp7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@cat5th/key-serializer] @cat5th/key-serializer Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-whpx-g542-7c7v</id>
        <link href="https://github.com/advisories/GHSA-whpx-g542-7c7v"/>
        <updated>2024-07-11T17:35:47.000Z</updated>
        <content type="html"><![CDATA[<p>harvey-woo cat5th/key-serializer v0.2.5 was discovered to contain a prototype pollution via the function "query". This vulnerability allows attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39018">https://nvd.nist.gov/vuln/detail/CVE-2024-39018</a></li>
<li><a href="https://gist.github.com/mestrtee/be75c60307b2292884cc03cebd361f3f">https://gist.github.com/mestrtee/be75c60307b2292884cc03cebd361f3f</a></li>
<li><a href="https://github.com/advisories/GHSA-whpx-g542-7c7v">https://github.com/advisories/GHSA-whpx-g542-7c7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whpx-g542-7c7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T15:32:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[speaker] speaker vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-w5fc-gj3h-26rx</id>
        <link href="https://github.com/advisories/GHSA-w5fc-gj3h-26rx"/>
        <updated>2024-07-11T17:25:31.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package speaker are vulnerable to Denial of Service (DoS) when providing unexpected input types to the channels property of the Speaker object makes it possible to reach an assert macro. Exploiting this vulnerability can lead to a process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21526">https://nvd.nist.gov/vuln/detail/CVE-2024-21526</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SPEAKER-6370676">https://security.snyk.io/vuln/SNYK-JS-SPEAKER-6370676</a></li>
<li><a href="https://github.com/TooTallNate/node-speaker/blob/316afff5a393fce438cf7296011fcfc6e12aa9dc/src/binding.c#L48">https://github.com/TooTallNate/node-speaker/blob/316afff5a393fce438cf7296011fcfc6e12aa9dc/src/binding.c#L48</a></li>
<li><a href="https://github.com/advisories/GHSA-w5fc-gj3h-26rx">https://github.com/advisories/GHSA-w5fc-gj3h-26rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5fc-gj3h-26rx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-twain] node-twain vulnerable to Improper Check or Handling of Exceptional Conditions]]></title>
        <id>https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</id>
        <link href="https://github.com/advisories/GHSA-wxr3-2hgv-qm8f"/>
        <updated>2024-07-10T21:29:31.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-twain are vulnerable to Improper Check or Handling of Exceptional Conditions due to the length of the source data not being checked. Creating a new twain.TwainSDK with a productName or productFamily, manufacturer, version.info property of length &gt;= 34 chars leads to a buffer overflow vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21525">https://nvd.nist.gov/vuln/detail/CVE-2024-21525</a></li>
<li><a href="https://gist.github.com/dellalibera/55b87634a6c360e5be22a715f0566c99">https://gist.github.com/dellalibera/55b87634a6c360e5be22a715f0566c99</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODETWAIN-6421153">https://security.snyk.io/vuln/SNYK-JS-NODETWAIN-6421153</a></li>
<li><a href="https://github.com/advisories/GHSA-wxr3-2hgv-qm8f">https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxr3-2hgv-qm8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[images] images vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-vjpv-x8p9-7p85</id>
        <link href="https://github.com/advisories/GHSA-vjpv-x8p9-7p85"/>
        <updated>2024-07-10T21:28:43.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package images are vulnerable to Denial of Service (DoS) due to providing unexpected input types to several different functions. This makes it possible to reach an assert macro, leading to a process crash.</p>
<p><strong>Note:</strong>
By providing some specific integer values (like 0) to the size function, it is possible to obtain a Segmentation fault error, leading to the process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21523">https://nvd.nist.gov/vuln/detail/CVE-2024-21523</a></li>
<li><a href="https://gist.github.com/dellalibera/8b4ea6b4db84cba212e6e6e39a6933d1">https://gist.github.com/dellalibera/8b4ea6b4db84cba212e6e6e39a6933d1</a></li>
<li><a href="https://github.com/zhangyuanwei/node-images/blob/691d49f4e620b4eec9f1c47b1735841d9d8b55f6/src/Image.cc">https://github.com/zhangyuanwei/node-images/blob/691d49f4e620b4eec9f1c47b1735841d9d8b55f6/src/Image.cc</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-IMAGES-6421826">https://security.snyk.io/vuln/SNYK-JS-IMAGES-6421826</a></li>
<li><a href="https://github.com/advisories/GHSA-vjpv-x8p9-7p85">https://github.com/advisories/GHSA-vjpv-x8p9-7p85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vjpv-x8p9-7p85</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-stringbuilder] node-stringbuilder vulnerable to Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-g533-xq5w-jmf3</id>
        <link href="https://github.com/advisories/GHSA-g533-xq5w-jmf3"/>
        <updated>2024-07-10T20:43:35.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package node-stringbuilder are vulnerable to Out-of-bounds Read due to incorrect memory length calculation, by calling ToBuffer, ToString, or CharAt on a StringBuilder object with a non-empty string value input. It's possible to return previously allocated memory, for example, by providing negative indexes, leading to an Information Disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21524">https://nvd.nist.gov/vuln/detail/CVE-2024-21524</a></li>
<li><a href="https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67">https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617">https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617</a></li>
<li><a href="https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c#L1281">https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c#L1281</a></li>
<li><a href="https://github.com/advisories/GHSA-g533-xq5w-jmf3">https://github.com/advisories/GHSA-g533-xq5w-jmf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g533-xq5w-jmf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[audify] audify vulnerable to Improper Validation of Array Index]]></title>
        <id>https://github.com/advisories/GHSA-7vhm-fmph-7wxw</id>
        <link href="https://github.com/advisories/GHSA-7vhm-fmph-7wxw"/>
        <updated>2024-07-10T20:43:22.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package audify are vulnerable to Improper Validation of Array Index when frameSize is provided to the new OpusDecoder().decode or new OpusDecoder().decodeFloat functions it is not checked for negative values. This can lead to a process crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21522">https://nvd.nist.gov/vuln/detail/CVE-2024-21522</a></li>
<li><a href="https://gist.github.com/dellalibera/6bb866ae5d1cc2adaabe27bbd6d2d21e">https://gist.github.com/dellalibera/6bb866ae5d1cc2adaabe27bbd6d2d21e</a></li>
<li><a href="https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp%23L79">https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp%23L79</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-AUDIFY-6370700">https://security.snyk.io/vuln/SNYK-JS-AUDIFY-6370700</a></li>
<li><a href="https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp#L53">https://github.com/almoghamdani/audify/blob/94b2fe79dc528fda2c7d59c7a0fd0e9de07dc3dc/src/opus_decoder.cpp#L53</a></li>
<li><a href="https://github.com/advisories/GHSA-7vhm-fmph-7wxw">https://github.com/advisories/GHSA-7vhm-fmph-7wxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vhm-fmph-7wxw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-10T06:33:51.000Z</published>
    </entry>
</feed>