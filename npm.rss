<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-04-12T15:01:17.303Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[mysql2] mysql2 Remote Code Execution (RCE) via the readCodeFor function]]></title>
        <id>https://github.com/advisories/GHSA-fpw7-j2hg-69v5</id>
        <link href="https://github.com/advisories/GHSA-fpw7-j2hg-69v5"/>
        <updated>2024-04-12T13:50:59.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package mysql2 before 3.9.4 are vulnerable to Remote Code Execution (RCE) via the <code>readCodeFor</code> function due to improper validation of the <code>supportBigNumbers</code> and <code>bigNumberStrings</code> values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21508">https://nvd.nist.gov/vuln/detail/CVE-2024-21508</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/pull/2572">https://github.com/sidorares/node-mysql2/pull/2572</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/commit/74abf9ef94d76114d9a09415e28b496522a94805">https://github.com/sidorares/node-mysql2/commit/74abf9ef94d76114d9a09415e28b496522a94805</a></li>
<li><a href="https://blog.slonser.info/posts/mysql2-attacker-configuration">https://blog.slonser.info/posts/mysql2-attacker-configuration</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/blob/1609b5393516d72a4ae47196837317fbe75e0c13/lib/parsers/text_parser.js%23L14C10-L14C21">https://github.com/sidorares/node-mysql2/blob/1609b5393516d72a4ae47196837317fbe75e0c13/lib/parsers/text_parser.js%23L14C10-L14C21</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/releases/tag/v3.9.4">https://github.com/sidorares/node-mysql2/releases/tag/v3.9.4</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591085">https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591085</a></li>
<li><a href="https://github.com/advisories/GHSA-fpw7-j2hg-69v5">https://github.com/advisories/GHSA-fpw7-j2hg-69v5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpw7-j2hg-69v5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-11T06:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mysql2] mysql2 vulnerable to Prototype Poisoning]]></title>
        <id>https://github.com/advisories/GHSA-49j4-86m8-q2jw</id>
        <link href="https://github.com/advisories/GHSA-49j4-86m8-q2jw"/>
        <updated>2024-04-12T13:50:13.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package mysql2 before 3.9.4 are vulnerable to Prototype Poisoning due to insecure results object creation and improper user input sanitization passed through <code>parserFn</code> in <code>text_parser.js</code> and <code>binary_parser.js</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21509">https://nvd.nist.gov/vuln/detail/CVE-2024-21509</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/pull/2574">https://github.com/sidorares/node-mysql2/pull/2574</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/commit/4a964a3910a4b8de008696c554ab1b492e9b4691">https://github.com/sidorares/node-mysql2/commit/4a964a3910a4b8de008696c554ab1b492e9b4691</a></li>
<li><a href="https://blog.slonser.info/posts/mysql2-attacker-configuration">https://blog.slonser.info/posts/mysql2-attacker-configuration</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/blob/fd3d117da82cc5c5fa5a3701d7b33ca77691bc61/lib/parsers/text_parser.js%23L134">https://github.com/sidorares/node-mysql2/blob/fd3d117da82cc5c5fa5a3701d7b33ca77691bc61/lib/parsers/text_parser.js%23L134</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/releases/tag/v3.9.4">https://github.com/sidorares/node-mysql2/releases/tag/v3.9.4</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591084">https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591084</a></li>
<li><a href="https://github.com/advisories/GHSA-49j4-86m8-q2jw">https://github.com/advisories/GHSA-49j4-86m8-q2jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49j4-86m8-q2jw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-10T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mysql2] mysql2 cache poisoning vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mqr2-w7wj-jjgr</id>
        <link href="https://github.com/advisories/GHSA-mqr2-w7wj-jjgr"/>
        <updated>2024-04-12T13:49:53.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package mysql2 before 3.9.3 are vulnerable to Improper Input Validation through the <code>keyFromFields</code> function, resulting in cache poisoning. An attacker can inject a colon <code>:</code> character within a value of the attacker-crafted key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21507">https://nvd.nist.gov/vuln/detail/CVE-2024-21507</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/pull/2424">https://github.com/sidorares/node-mysql2/pull/2424</a></li>
<li><a href="https://github.com/sidorares/node-mysql2/commit/0d54b0ca6498c823098426038162ef10df02c818">https://github.com/sidorares/node-mysql2/commit/0d54b0ca6498c823098426038162ef10df02c818</a></li>
<li><a href="https://blog.slonser.info/posts/mysql2-attacker-configuration">https://blog.slonser.info/posts/mysql2-attacker-configuration</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591300">https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6591300</a></li>
<li><a href="https://github.com/advisories/GHSA-mqr2-w7wj-jjgr">https://github.com/advisories/GHSA-mqr2-w7wj-jjgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mqr2-w7wj-jjgr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-10T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phin] phin may include sensitive headers in subsequent requests after redirect]]></title>
        <id>https://github.com/advisories/GHSA-x565-32qp-m3vf</id>
        <link href="https://github.com/advisories/GHSA-x565-32qp-m3vf"/>
        <updated>2024-04-11T21:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users may be impacted if sending requests including sensitive data in specific headers with <code>followRedirects</code> enabled.</p>
<h3 id="patches">Patches</h3>
<p>The <a href="https://github.com/follow-redirects/follow-redirects">follow-redirects</a> library is now being used for redirects and removes some headers that may contain sensitive information in some situations.</p>
<h3 id="workarounds">Workarounds</h3>
<p>N/A. Please update to resolve the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethanent/phin/security/advisories/GHSA-x565-32qp-m3vf">https://github.com/ethanent/phin/security/advisories/GHSA-x565-32qp-m3vf</a></li>
<li><a href="https://github.com/ethanent/phin/commit/c071f95336a987dad9332fd388adeb249925cc57">https://github.com/ethanent/phin/commit/c071f95336a987dad9332fd388adeb249925cc57</a></li>
<li><a href="https://github.com/advisories/GHSA-x565-32qp-m3vf">https://github.com/advisories/GHSA-x565-32qp-m3vf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x565-32qp-m3vf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-11T21:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-appservice-irc] Matrix IRC Bridge truncated content of messages can be leaked]]></title>
        <id>https://github.com/advisories/GHSA-wm4w-7h2q-3pf7</id>
        <link href="https://github.com/advisories/GHSA-wm4w-7h2q-3pf7"/>
        <updated>2024-04-11T20:17:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The matrix-appservice-irc before version 2.0.0 can be exploited to leak the truncated body of a message if a malicious user sends a Matrix reply to an event ID they don't have access to. As a precondition to the attack, the malicious user needs to know the event ID of the message they want to leak, as well as to be joined to both the Matrix room and the IRC channel it is bridged to.</p>
<p>The message reply containing the leaked message content is visible to IRC channel members when this happens.</p>
<h3 id="patches">Patches</h3>
<p>matrix-appservice-irc 2.0.0 checks whether the user has permission to view an event before constructing a reply. Administrators should upgrade to this version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It's possible to limit the amount of information leaked by setting a reply template that doesn't contain the original message. See <a href="https://github.com/matrix-org/matrix-appservice-irc/blob/d5d67d1d3ea3f0f6962a0af2cc57b56af3ad2129/config.sample.yaml#L601-L604">these lines</a> in the configuration file.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/matrix-org/matrix-appservice-irc/pull/1799">https://github.com/matrix-org/matrix-appservice-irc/pull/1799</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@matrix.org">security at matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-wm4w-7h2q-3pf7">https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-wm4w-7h2q-3pf7</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/pull/1799">https://github.com/matrix-org/matrix-appservice-irc/pull/1799</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/commit/4af7d3009f10b1f2fb810784c1e491d9d3bee82b">https://github.com/matrix-org/matrix-appservice-irc/commit/4af7d3009f10b1f2fb810784c1e491d9d3bee82b</a></li>
<li><a href="https://github.com/advisories/GHSA-wm4w-7h2q-3pf7">https://github.com/advisories/GHSA-wm4w-7h2q-3pf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wm4w-7h2q-3pf7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-11T20:17:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[protobufjs] protobufjs Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h755-8qp9-cq85</id>
        <link href="https://github.com/advisories/GHSA-h755-8qp9-cq85"/>
        <updated>2024-04-10T19:54:41.000Z</updated>
        <content type="html"><![CDATA[<p>protobuf.js (aka protobufjs) 6.10.0 until 6.11.4 and 7.0.0 until 7.2.4 allows Prototype Pollution, a different vulnerability than CVE-2022-25878. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: (1) using the function parse to parse protobuf messages on the fly, (2) loading .proto files by using load/loadSync functions, or (3) providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty. NOTE: this CVE Record is about <code>Object.constructor.prototype.&lt;new-property&gt; = ...;</code> whereas CVE-2022-25878 was about <code>Object.__proto__.&lt;new-property&gt; = ...;</code> instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36665">https://nvd.nist.gov/vuln/detail/CVE-2023-36665</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/pull/1899">https://github.com/protobufjs/protobuf.js/pull/1899</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d">https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4">https://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4">https://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4</a></li>
<li><a href="https://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665">https://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/commits/release-6.11.4">https://github.com/protobufjs/protobuf.js/commits/release-6.11.4</a></li>
<li><a href="https://github.com/protobufjs/protobuf.js/issues/1918#issuecomment-1723500294">https://github.com/protobufjs/protobuf.js/issues/1918#issuecomment-1723500294</a></li>
<li><a href="https://github.com/advisories/GHSA-h755-8qp9-cq85">https://github.com/advisories/GHSA-h755-8qp9-cq85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h755-8qp9-cq85</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-07-05T15:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[maildev] MailDev Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-vc6q-ccj9-9r89</id>
        <link href="https://github.com/advisories/GHSA-vc6q-ccj9-9r89"/>
        <updated>2024-04-10T18:19:12.000Z</updated>
        <content type="html"><![CDATA[<p>MailDev 2 through 2.1.0 allows Remote Code Execution via a crafted Content-ID header for an e-mail attachment, leading to <code>lib/mailserver.js</code> writing arbitrary code into the <code>routes.js</code> file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27448">https://nvd.nist.gov/vuln/detail/CVE-2024-27448</a></li>
<li><a href="https://github.com/Tim-Hoekstra/MailDev-2.1.0-Exploit-RCE">https://github.com/Tim-Hoekstra/MailDev-2.1.0-Exploit-RCE</a></li>
<li><a href="https://github.com/maildev/maildev/releases">https://github.com/maildev/maildev/releases</a></li>
<li><a href="https://intrix.com.au/articles/exposing-major-security-flaw-in-maildev">https://intrix.com.au/articles/exposing-major-security-flaw-in-maildev</a></li>
<li><a href="https://github.com/advisories/GHSA-vc6q-ccj9-9r89">https://github.com/advisories/GHSA-vc6q-ccj9-9r89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc6q-ccj9-9r89</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-05T06:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flattenizer] flattenizer vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-vq33-26pr-r4h6</id>
        <link href="https://github.com/advisories/GHSA-vq33-26pr-r4h6"/>
        <updated>2024-04-10T18:19:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Prototype pollution vulnerability in ‘flattenizer’ versions 0.0.5 through 1.0.5 allows an attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>The NPM module 'flattenizer' can be abused by Prototype Pollution vulnerability since the function 'unflatten()' did not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>
<h3 id="poc-details">PoC Details</h3>
<p>There is no validation before assigning the property to check whether the assigned argument is the Object's own property or not, the property <code>polluted</code> will be directly be assigned thereby polluting the Object prototype. Later in the code, if there is a check to validate <code>polluted</code> the valued would be substituted as "true" as it had been polluted.</p>
<pre><code class="language-js">var flattenizer = require("flattenizer")
flattenizer.unflatten({'__proto__.polluted': true});
console.log(polluted);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28279">https://nvd.nist.gov/vuln/detail/CVE-2020-28279</a></li>
<li><a href="https://github.com/sahellebusch/flattenizer/pull/13">https://github.com/sahellebusch/flattenizer/pull/13</a></li>
<li><a href="https://github.com/sahellebusch/flattenizer/commit/3c6a6353df7c8879e931973b81a49a47f6c2b399">https://github.com/sahellebusch/flattenizer/commit/3c6a6353df7c8879e931973b81a49a47f6c2b399</a></li>
<li><a href="https://web.archive.org/web/20210104205035/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28279">https://web.archive.org/web/20210104205035/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28279</a></li>
<li><a href="https://github.com/advisories/GHSA-vq33-26pr-r4h6">https://github.com/advisories/GHSA-vq33-26pr-r4h6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq33-26pr-r4h6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:37:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@digitalbazaar/zcap] zcap has incomplete expiration checks in capability chains.]]></title>
        <id>https://github.com/advisories/GHSA-hp8h-7x69-4wmv</id>
        <link href="https://github.com/advisories/GHSA-hp8h-7x69-4wmv"/>
        <updated>2024-04-10T17:16:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When invoking a capability with a chain depth of 2, i.e., it is delegated directly from the root capability, the <code>expires</code> property is not properly checked against the current date or other <code>date</code> param.  This can allow invocations outside of the original intended time period.  A zcap still cannot be invoked without being able to use the associated private key material.</p>
<h3 id="patches">Patches</h3>
<p><code>@digitalbazaar/zcap</code> v9.0.1 fixes expiration checking.</p>
<h3 id="workarounds">Workarounds</h3>
<p>A zcap could be revoked at any time.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/digitalbazaar/zcap/pull/82">https://github.com/digitalbazaar/zcap/pull/82</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/digitalbazaar/zcap/security/advisories/GHSA-hp8h-7x69-4wmv">https://github.com/digitalbazaar/zcap/security/advisories/GHSA-hp8h-7x69-4wmv</a></li>
<li><a href="https://github.com/digitalbazaar/zcap/pull/82">https://github.com/digitalbazaar/zcap/pull/82</a></li>
<li><a href="https://github.com/digitalbazaar/zcap/commit/261eea040109b6e25159c88d8ed49d3c37f8fcfe">https://github.com/digitalbazaar/zcap/commit/261eea040109b6e25159c88d8ed49d3c37f8fcfe</a></li>
<li><a href="https://github.com/digitalbazaar/zcap/commit/55f8549c80124b85dfb0f3dcf83f2c63f42532e5">https://github.com/digitalbazaar/zcap/commit/55f8549c80124b85dfb0f3dcf83f2c63f42532e5</a></li>
<li><a href="https://github.com/advisories/GHSA-hp8h-7x69-4wmv">https://github.com/advisories/GHSA-hp8h-7x69-4wmv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hp8h-7x69-4wmv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-10T17:16:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@fastify/secure-session] @fastify/secure-session: Reuse of destroyed secure session cookie]]></title>
        <id>https://github.com/advisories/GHSA-9wwp-q7wq-jx35</id>
        <link href="https://github.com/advisories/GHSA-9wwp-q7wq-jx35"/>
        <updated>2024-04-10T17:15:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>At the end of the request handling, it will encrypt all data in the session with a secret key and attach the ciphertext as a cookie value with the defined cookie name. After that, the session on the server side is destroyed. When an encrypted cookie with matching session name is provided with subsequent requests, it will decrypt the ciphertext to get the data. The plugin then creates a new session with the data in the ciphertext. Thus theoretically the web instance is still accessing the data from a server-side session, but technically that session is generated solely from a user provided cookie (which is assumed to be non-craftable because it is encrypted with a secret key not known to the user).</p>
<p>The issue exists in the session removal process. In the delete function of the code, when the session is deleted, it is marked for deletion. However, if an attacker could gain access to the cookie, they could keep using it forever.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in 56d66642ecc633cff0606927601e81cdac361370.
Update to v7.3.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Include a "last update" field in the session, and treat "old sessions" as expired. 
Make sure to configure your cookie as "http only".</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://hackerone.com/reports/2374253">https://hackerone.com/reports/2374253</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fastify/fastify-secure-session/security/advisories/GHSA-9wwp-q7wq-jx35">https://github.com/fastify/fastify-secure-session/security/advisories/GHSA-9wwp-q7wq-jx35</a></li>
<li><a href="https://github.com/fastify/fastify-secure-session/commit/56d66642ecc633cff0606927601e81cdac361370">https://github.com/fastify/fastify-secure-session/commit/56d66642ecc633cff0606927601e81cdac361370</a></li>
<li><a href="https://github.com/advisories/GHSA-9wwp-q7wq-jx35">https://github.com/advisories/GHSA-9wwp-q7wq-jx35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wwp-q7wq-jx35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-10T17:15:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tar] Denial of service while parsing a tar file due to lack of folders count validation]]></title>
        <id>https://github.com/advisories/GHSA-f5x3-32g6-xq36</id>
        <link href="https://github.com/advisories/GHSA-f5x3-32g6-xq36"/>
        <updated>2024-04-09T19:02:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description:</h2>
<p>During some analysis today on npm's <code>node-tar</code> package I came across the folder creation process, Basicly if you provide node-tar with a path like this <code>./a/b/c/foo.txt</code> it would create every folder and sub-folder here a, b and c until it reaches the last folder to create <code>foo.txt</code>, In-this case I noticed that there's no validation at all on the amount of folders being created, that said we're actually able to CPU and memory consume the system running node-tar and even crash the nodejs client within few seconds of running it using a path with too many sub-folders inside</p>
<h2 id="steps-to-reproduce">Steps To Reproduce:</h2>
<p>You can reproduce this issue by downloading the tar file I provided in the resources and using node-tar to extract it, you should get the same behavior as the video</p>
<h2 id="proof-of-concept">Proof Of Concept:</h2>
<p>Here's a <a href="https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3i7uojw8s52psar6pg8zkdo4h9io?response-content-disposition=attachment%3B%20filename%3D%22tar-dos-poc.webm%22%3B%20filename%2A%3DUTF-8%27%27tar-dos-poc.webm&amp;response-content-type=video%2Fwebm&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20240312T080103Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=1e8235d885f1d61529b7d6b23ea3a0780c300c91d86e925dd8310d5b661ddbe2">video</a> show-casing the exploit: </p>
<h2 id="impact">Impact</h2>
<p>Denial of service by crashing the nodejs client when attempting to parse a tar archive, make it run out of heap memory and consuming server CPU and memory resources</p>
<h2 id="report-resources">Report resources</h2>
<p><a href="https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1e83ayb5dd3350fvj3gst0mqixwk?response-content-disposition=attachment%3B%20filename%3D%22payload.txt%22%3B%20filename%2A%3DUTF-8%27%27payload.txt&amp;response-content-type=text%2Fplain&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20240312T080103Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=bad9fe731f05a63a950f99828125653a8c1254750fe0ca7be882e89ecdd449ae">payload.txt</a>
<a href="https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ymkuh4xnfdcf1soeyi7jc2x4yt2i?response-content-disposition=attachment%3B%20filename%3D%22archive.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27archive.tar.gz&amp;response-content-type=application%2Fx-tar&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20240312T080103Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=5e2c0d4b4de40373ac0fe91908c2659141a6dd4ab850271cc26042a3885c82ea">archeive.tar.gz</a></p>
<h2 id="note">Note</h2>
<p>This report was originally reported to GitHub bug bounty program, they asked me to report it to you a month ago</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/isaacs/node-tar/security/advisories/GHSA-f5x3-32g6-xq36">https://github.com/isaacs/node-tar/security/advisories/GHSA-f5x3-32g6-xq36</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28863">https://nvd.nist.gov/vuln/detail/CVE-2024-28863</a></li>
<li><a href="https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7">https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7</a></li>
<li><a href="https://github.com/advisories/GHSA-f5x3-32g6-xq36">https://github.com/advisories/GHSA-f5x3-32g6-xq36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5x3-32g6-xq36</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-22T16:57:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@kyivstarteam/react-native-sms-user-consent] React Native Sms User Consent Intent Redirection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r956-2553-vvhr</id>
        <link href="https://github.com/advisories/GHSA-r956-2553-vvhr"/>
        <updated>2024-04-08T15:45:38.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, has been found in kyivstarteam react-native-sms-user-consent up to 1.1.4 on Android. Affected by this issue is the function <code>registerReceiver</code> of the file <code>android/src/main/java/ua/kyivstar/reactnativesmsuserconsent/SmsUserConsentModule.kt</code>. The manipulation leads to improper export of android application components. Attacking locally is a requirement. Upgrading to version 1.1.5 is able to address this issue. The name of the patch is 5423dcb0cd3e4d573b5520a71fa08aa279e4c3c7. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-259508.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4438">https://nvd.nist.gov/vuln/detail/CVE-2021-4438</a></li>
<li><a href="https://github.com/kyivstarteam/react-native-sms-user-consent/pull/4">https://github.com/kyivstarteam/react-native-sms-user-consent/pull/4</a></li>
<li><a href="https://github.com/kyivstarteam/react-native-sms-user-consent/commit/5423dcb0cd3e4d573b5520a71fa08aa279e4c3c7">https://github.com/kyivstarteam/react-native-sms-user-consent/commit/5423dcb0cd3e4d573b5520a71fa08aa279e4c3c7</a></li>
<li><a href="https://github.com/kyivstarteam/react-native-sms-user-consent/releases/tag/1.1.5">https://github.com/kyivstarteam/react-native-sms-user-consent/releases/tag/1.1.5</a></li>
<li><a href="https://vuldb.com/?ctiid.259508">https://vuldb.com/?ctiid.259508</a></li>
<li><a href="https://vuldb.com/?id.259508">https://vuldb.com/?id.259508</a></li>
<li><a href="https://github.com/advisories/GHSA-r956-2553-vvhr">https://github.com/advisories/GHSA-r956-2553-vvhr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r956-2553-vvhr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-07T09:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xlsx] SheetJS Regular Expression Denial of Service (ReDoS)]]></title>
        <id>https://github.com/advisories/GHSA-5pgg-2g8v-p4x9</id>
        <link href="https://github.com/advisories/GHSA-5pgg-2g8v-p4x9"/>
        <updated>2024-04-08T13:47:06.000Z</updated>
        <content type="html"><![CDATA[<p>SheetJS Community Edition before 0.20.2 is vulnerable.to Regular Expression Denial of Service (ReDoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22363">https://nvd.nist.gov/vuln/detail/CVE-2024-22363</a></li>
<li><a href="https://cdn.sheetjs.com/advisories/CVE-2024-22363">https://cdn.sheetjs.com/advisories/CVE-2024-22363</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/1333.html">https://cwe.mitre.org/data/definitions/1333.html</a></li>
<li><a href="https://git.sheetjs.com/sheetjs/sheetjs/src/tag/v0.20.2">https://git.sheetjs.com/sheetjs/sheetjs/src/tag/v0.20.2</a></li>
<li><a href="https://github.com/advisories/GHSA-5pgg-2g8v-p4x9">https://github.com/advisories/GHSA-5pgg-2g8v-p4x9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5pgg-2g8v-p4x9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-05T06:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[psitransfer] PsiTransfer: Violation of the integrity of file distribution]]></title>
        <id>https://github.com/advisories/GHSA-xg8v-m2mh-45m6</id>
        <link href="https://github.com/advisories/GHSA-xg8v-m2mh-45m6"/>
        <updated>2024-04-09T18:46:55.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Summary</strong>
The absence of restrictions on the endpoint, which allows you to create a path for uploading a file in a file distribution, allows an attacker to add arbitrary files to the distribution.</p>
<p><strong>Details</strong>
Vulnerable endpoint: POST /files</p>
<p><strong>PoC</strong></p>
<ol>
<li><p>Create a file distribution.</p>
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/4634a6f7-6e7d-486e-9929-76156aaa1340" alt="Снимок экрана 2024-03-17 в 21 27 30" width="1434">
</li>
<li><p>Go to the link address (id of the file distribution is needed by an attacker to upload files there).</p>
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/a57c910c-69e2-4b07-985d-b0a46c69891a" alt="Снимок экрана 2024-03-17 в 21 27 35" width="1426">
</li>
<li><p>Send a POST /files. As the value of the Upload-Metadata header we specify the sid parameter with the id of the file distribution obtained in the second step. In the response from the server in the Location header we get the path for uploading a new file to the file distribution.</p>
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/8b839fb8-2c0b-432f-8503-e4c42a840056" alt="Снимок экрана 2024-03-17 в 21 28 09" width="1403">
</li>
<li><p>Send a PATCH /files/{{id}} request with arbitrary content in the request body. Id is taken from the previous step.</p>
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/c5b2acf3-fdf1-4780-8c63-61a7f19338df" alt="Снимок экрана 2024-03-17 в 21 28 51" width="1067"></li>
</ol>
<p>Result:
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/c49b17c8-e1d2-4894-b6e2-f50b9663fca7" alt="Снимок экрана 2024-03-17 в 21 29 05" width="1432">
<img src="https://github.com/psi-4ward/psitransfer/assets/163760990/e4a1e07d-3e77-4f61-a4e7-ceee4a5a7b8e" alt="Снимок экрана 2024-03-17 в 21 29 15" width="1424"></p>
<p><strong>Impact</strong>
The vulnerability allows an attacker to influence those users who come to the file distribution after him and slip the victim files with a malicious or phishing signature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/psi-4ward/psitransfer/security/advisories/GHSA-xg8v-m2mh-45m6">https://github.com/psi-4ward/psitransfer/security/advisories/GHSA-xg8v-m2mh-45m6</a></li>
<li><a href="https://github.com/psi-4ward/psitransfer/commit/b9853c97e6911e1c1c5341245ca1eb363fda5269">https://github.com/psi-4ward/psitransfer/commit/b9853c97e6911e1c1c5341245ca1eb363fda5269</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31453">https://nvd.nist.gov/vuln/detail/CVE-2024-31453</a></li>
<li><a href="https://github.com/advisories/GHSA-xg8v-m2mh-45m6">https://github.com/advisories/GHSA-xg8v-m2mh-45m6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xg8v-m2mh-45m6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-05T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[psitransfer] PsiTransfer: File integrity violation]]></title>
        <id>https://github.com/advisories/GHSA-2p2x-p7wj-j5h2</id>
        <link href="https://github.com/advisories/GHSA-2p2x-p7wj-j5h2"/>
        <updated>2024-04-09T18:47:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The absence of restrictions on the endpoint, which is designed for uploading files, allows an attacker who received the id of a file distribution to change the files that are in this distribution.</p>
<h3 id="details">Details</h3>
<p>Vulnerable endpoint: PATCH /files/{{id}}</p>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Create a file distribution.</p>
</li>
<li><p>Go to the link address for downloading files and download the file (in this case, the attacker receives the file id from the download request).</p>
</li>
<li><p>Send a PATCH /files/{{id}} request with arbitrary content in the request body.</p>
</li>
</ol>
<p>Thus, the file with the specified id will be changed. What the attacker specifies in the body of the request will be added to the end of the original content. In the future, users will download the modified file.</p>
<h3 id="impact">Impact</h3>
<p>The vulnerability allows an attacker to influence those users who come to the file distribution after him and slip the victim files with a malicious or phishing signature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/psi-4ward/psitransfer/security/advisories/GHSA-2p2x-p7wj-j5h2">https://github.com/psi-4ward/psitransfer/security/advisories/GHSA-2p2x-p7wj-j5h2</a></li>
<li><a href="https://github.com/psi-4ward/psitransfer/commit/0014d81141e0f1664ccb6841970ef1ea0237cca3">https://github.com/psi-4ward/psitransfer/commit/0014d81141e0f1664ccb6841970ef1ea0237cca3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31454">https://nvd.nist.gov/vuln/detail/CVE-2024-31454</a></li>
<li><a href="https://github.com/advisories/GHSA-2p2x-p7wj-j5h2">https://github.com/advisories/GHSA-2p2x-p7wj-j5h2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2p2x-p7wj-j5h2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-05T17:15:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[babel-traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code]]></title>
        <id>https://github.com/advisories/GHSA-67hx-6x53-jw92</id>
        <link href="https://github.com/advisories/GHSA-67hx-6x53-jw92"/>
        <updated>2024-04-04T14:26:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>
<p>Known affected plugins are:</p>
<ul>
<li><code>@babel/plugin-transform-runtime</code></li>
<li><code>@babel/preset-env</code> when using its <a href="https://babeljs.io/docs/babel-preset-env#usebuiltins"><code>useBuiltIns</code></a> option</li>
<li>Any "polyfill provider" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>
</ul>
<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>
<p><strong>Users that only compile trusted code are not impacted.</strong></p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>
<p>Babel 6 does not receive security fixes anymore (see <a href="https://github.com/babel/babel/security/policy">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>
<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>
<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>
<li><code>@babel/preset-env</code> v7.23.2</li>
<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>
<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>
<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>
<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>
<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>
</ul>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45133">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>
<li><a href="https://github.com/babel/babel/pull/16033">https://github.com/babel/babel/pull/16033</a></li>
<li><a href="https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v7.23.2">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>
<li><a href="https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5528">https://www.debian.org/security/2023/dsa-5528</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html">https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</a></li>
<li><a href="https://babeljs.io/blog/2023/10/16/cve-2023-45133">https://babeljs.io/blog/2023/10/16/cve-2023-45133</a></li>
<li><a href="https://github.com/advisories/GHSA-67hx-6x53-jw92">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67hx-6x53-jw92</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-16T13:55:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dectalk-tts] dectalk-tts Uses Unencrypted HTTP Request]]></title>
        <id>https://github.com/advisories/GHSA-6cf6-8hvr-r68w</id>
        <link href="https://github.com/advisories/GHSA-6cf6-8hvr-r68w"/>
        <updated>2024-04-05T15:44:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In <code>dectalk-tts@1.0.0</code>, network requests to the third-party API are sent over HTTP, which is unencrypted. Unencrypted traffic can be easily intercepted and modified by attackers. Anyone who uses the package could be the victim of a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">man-in-the-middle (MITM)</a> attack.</p>
<p><ins>Theft</ins></p>
<p>Because <code>dectalk-tts</code> is a text-to-speech package, user requests are expected to only contain natural language. The package <a href="https://github.com/JstnMcBrd/dectalk-tts/blob/main/README.md">README</a> warns that user input is sent to a third-party API, so users should not send sensitive information regardless.</p>
<p>But if users ignore the warnings and send sensitive information anyway, that information could be stolen by attackers.</p>
<p><ins>Modification</ins></p>
<p>Attackers could manipulate requests to the API. However, the worst a modified request could do is return an incorrect audio file or bad request rejection.</p>
<p>Attackers could also manipulate responses from the API, returning malicious output to the user. Output is expected to be a wav-encoded buffer, which users will likely save to a file. This could be a dangerous entrypoint to the user's filesystem.</p>
<h3 id="patches">Patches</h3>
<p>The network request was upgraded to HTTPS in version <code>1.0.1</code>. No other changes were made, so updating is risk-free.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds, but here are some precautions:</p>
<ul>
<li><p>Do not send any sensitive information.</p>
</li>
<li><p>Carefully verify the API response before saving it.</p>
</li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18">Vulnerable code</a>
<a href="https://github.com/JstnMcBrd/dectalk-tts/issues/3">Original report</a>
<a href="https://github.com/JstnMcBrd/dectalk-tts/pull/4">Patch pull request</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/security/advisories/GHSA-6cf6-8hvr-r68w">https://github.com/JstnMcBrd/dectalk-tts/security/advisories/GHSA-6cf6-8hvr-r68w</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/issues/3">https://github.com/JstnMcBrd/dectalk-tts/issues/3</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/pull/4">https://github.com/JstnMcBrd/dectalk-tts/pull/4</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/commit/3600d8ac156f27da553ac4ead46d16989a350105">https://github.com/JstnMcBrd/dectalk-tts/commit/3600d8ac156f27da553ac4ead46d16989a350105</a></li>
<li><a href="https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18">https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31206">https://nvd.nist.gov/vuln/detail/CVE-2024-31206</a></li>
<li><a href="https://github.com/advisories/GHSA-6cf6-8hvr-r68w">https://github.com/advisories/GHSA-6cf6-8hvr-r68w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cf6-8hvr-r68w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-04T14:21:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's fetch with integrity option is too lax when algorithm is specified but hash value is in incorrect]]></title>
        <id>https://github.com/advisories/GHSA-9qxr-qj54-h672</id>
        <link href="https://github.com/advisories/GHSA-9qxr-qj54-h672"/>
        <updated>2024-04-12T03:30:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If an attacker can alter the <code>integrity</code> option passed to <code>fetch()</code>, they can let <code>fetch()</code> accept requests as valid even if they have been tampered.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that <code>integrity</code> cannot be tampered with.</p>
<h3 id="references">References</h3>
<p><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672">https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672</a></li>
<li><a href="https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055">https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055</a></li>
<li><a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a></li>
<li><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30261">https://nvd.nist.gov/vuln/detail/CVE-2024-30261</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HQVHWAS6WDXXIU7F72XI55VZ2LTZUB33">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HQVHWAS6WDXXIU7F72XI55VZ2LTZUB33</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P6Q4RGETHVYVHDIQGTJGU5AV6NJEI67E">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P6Q4RGETHVYVHDIQGTJGU5AV6NJEI67E</a></li>
<li><a href="https://github.com/advisories/GHSA-9qxr-qj54-h672">https://github.com/advisories/GHSA-9qxr-qj54-h672</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qxr-qj54-h672</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's fetch with integrity option is too lax when algorithm is specified but hash value is in incorrect]]></title>
        <id>https://github.com/advisories/GHSA-9qxr-qj54-h672</id>
        <link href="https://github.com/advisories/GHSA-9qxr-qj54-h672"/>
        <updated>2024-04-12T03:30:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If an attacker can alter the <code>integrity</code> option passed to <code>fetch()</code>, they can let <code>fetch()</code> accept requests as valid even if they have been tampered.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that <code>integrity</code> cannot be tampered with.</p>
<h3 id="references">References</h3>
<p><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672">https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672</a></li>
<li><a href="https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055">https://github.com/nodejs/undici/commit/2b39440bd9ded841c93dd72138f3b1763ae26055</a></li>
<li><a href="https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3">https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3</a></li>
<li><a href="https://hackerone.com/reports/2377760">https://hackerone.com/reports/2377760</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30261">https://nvd.nist.gov/vuln/detail/CVE-2024-30261</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HQVHWAS6WDXXIU7F72XI55VZ2LTZUB33">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HQVHWAS6WDXXIU7F72XI55VZ2LTZUB33</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P6Q4RGETHVYVHDIQGTJGU5AV6NJEI67E">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P6Q4RGETHVYVHDIQGTJGU5AV6NJEI67E</a></li>
<li><a href="https://github.com/advisories/GHSA-9qxr-qj54-h672">https://github.com/advisories/GHSA-9qxr-qj54-h672</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qxr-qj54-h672</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[undici] Undici's Proxy-Authorization header not cleared on cross-origin redirect for dispatch, request, stream, pipeline]]></title>
        <id>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</id>
        <link href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7"/>
        <updated>2024-04-04T20:24:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Undici cleared Authorization and Proxy-Authorization headers for <code>fetch()</code>, but did not clear them for <code>undici.request()</code>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in <a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a>.
Fixes has been released in v5.28.4 and v6.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>use <code>fetch()</code> or disable <code>maxRedirections</code>.</p>
<h3 id="references">References</h3>
<p>Linzi Shang reported this.</p>
<ul>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3">https://github.com/nodejs/undici/security/advisories/GHSA-3787-6prv-h9w3</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
<li><a href="https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f">https://github.com/nodejs/undici/commit/64e3402da4e032e68de46acb52800c9a06aaea3f</a></li>
<li><a href="https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75">https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75</a></li>
<li><a href="https://hackerone.com/reports/2408074">https://hackerone.com/reports/2408074</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30260">https://nvd.nist.gov/vuln/detail/CVE-2024-30260</a></li>
<li><a href="https://github.com/advisories/GHSA-m4v8-wqvr-p9f7">https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4v8-wqvr-p9f7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-04T14:20:39.000Z</published>
    </entry>
</feed>