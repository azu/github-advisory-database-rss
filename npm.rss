<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-04-20T18:01:47.743Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 Sandbox Escape vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</id>
        <link href="https://github.com/advisories/GHSA-ch3r-j5x3-6q2m"/>
        <updated>2023-04-20T14:37:53.000Z</updated>
        <content type="html"><![CDATA[<p>There exists a vulnerability in exception sanitization of vm2 for versions up to 3.9.16, allowing attackers to raise an unsanitized host exception inside <code>handleException()</code> which can be used to escape the sandbox and run arbitrary code in host context.</p>
<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.17</code> of <code>vm2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>PoC - <a href="https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244">https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/patriksimek/vm2">VM2</a></li>
</ul>
<p>Thanks to <a href="https://twitter.com/0x10n">Xion</a> (SeungHyun Lee) of <a href="https://kaist-hacking.github.io/">KAIST Hacking Lab</a> for disclosing this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m">https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30547">https://nvd.nist.gov/vuln/detail/CVE-2023-30547</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049">https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5">https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5</a></li>
<li><a href="https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244">https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244</a></li>
<li><a href="https://github.com/patriksimek/vm2/releases/tag/3.9.17">https://github.com/patriksimek/vm2/releases/tag/3.9.17</a></li>
<li><a href="https://github.com/advisories/GHSA-ch3r-j5x3-6q2m">https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ch3r-j5x3-6q2m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-20T14:37:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] GovernorCompatibilityBravo may trim proposal calldata]]></title>
        <id>https://github.com/advisories/GHSA-93hq-5wgc-jc82</id>
        <link href="https://github.com/advisories/GHSA-93hq-5wgc-jc82"/>
        <updated>2023-04-20T14:11:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The proposal creation entrypoint (<code>propose</code>) in <code>GovernorCompatibilityBravo</code> allows the creation of proposals with a <code>signatures</code> array shorter than the <code>calldatas</code> array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The <code>ProposalCreated</code> event correctly represents what will eventually execute, but the proposal parameters as queried through <code>getActions</code> appear to respect the original intended calldata.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that all proposals that pass through governance have equal length <code>signatures</code> and <code>calldatas</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30542">https://nvd.nist.gov/vuln/detail/CVE-2023-30542</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-93hq-5wgc-jc82">https://github.com/advisories/GHSA-93hq-5wgc-jc82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93hq-5wgc-jc82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T14:11:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts] GovernorCompatibilityBravo may trim proposal calldata]]></title>
        <id>https://github.com/advisories/GHSA-93hq-5wgc-jc82</id>
        <link href="https://github.com/advisories/GHSA-93hq-5wgc-jc82"/>
        <updated>2023-04-20T14:11:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The proposal creation entrypoint (<code>propose</code>) in <code>GovernorCompatibilityBravo</code> allows the creation of proposals with a <code>signatures</code> array shorter than the <code>calldatas</code> array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The <code>ProposalCreated</code> event correctly represents what will eventually execute, but the proposal parameters as queried through <code>getActions</code> appear to respect the original intended calldata.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that all proposals that pass through governance have equal length <code>signatures</code> and <code>calldatas</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30542">https://nvd.nist.gov/vuln/detail/CVE-2023-30542</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe">https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-93hq-5wgc-jc82">https://github.com/advisories/GHSA-93hq-5wgc-jc82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93hq-5wgc-jc82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T14:11:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-email] Strapi plugins vulnerable to Server-Side Template Injection and Remote Code Execution in the Users-Permissions Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</id>
        <link href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf"/>
        <updated>2023-04-19T21:41:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.</p>
<h3 id="ioc">IoC</h3>
<p>Using just the request log files, the only IoC to search for is a <code>PUT</code> request to URL path <code>/users-permissions/email-templates</code>. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a <code>lodash</code> template delimiter (eg. <code>&lt;%STUFF HERE%&gt;</code>) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.</p>
<p>Reset Password Template:</p>
<pre><code class="language-html">&lt;p&gt;We heard that you lost your password. Sorry about that!&lt;/p&gt;

&lt;p&gt;But don’t worry! You can use the following link to reset your password:&lt;/p&gt;
&lt;p&gt;&lt;%= URL %&gt;?code=&lt;%= TOKEN %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Email Confirmation Template:</p>
<pre><code class="language-html">&lt;p&gt;Thank you for registering!&lt;/p&gt;

&lt;p&gt;You have to confirm your email address. Please click on the link below.&lt;/p&gt;

&lt;p&gt;&lt;%= URL %&gt;?confirmation=&lt;%= CODE %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Specifically you should look for odd code contained within the <code>&lt;%STUFF HERE%&gt;</code> blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.</p>
<h3 id="impact">Impact</h3>
<p>All users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22621">https://nvd.nist.gov/vuln/detail/CVE-2023-22621</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15385">https://github.com/strapi/strapi/pull/15385</a></li>
<li><a href="https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd">https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.5.6">https://github.com/strapi/strapi/releases/tag/v4.5.6</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/advisories/GHSA-2h87-4q2w-v4hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-19T21:41:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-users-permissions] Strapi plugins vulnerable to Server-Side Template Injection and Remote Code Execution in the Users-Permissions Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</id>
        <link href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf"/>
        <updated>2023-04-19T21:41:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.</p>
<h3 id="ioc">IoC</h3>
<p>Using just the request log files, the only IoC to search for is a <code>PUT</code> request to URL path <code>/users-permissions/email-templates</code>. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a <code>lodash</code> template delimiter (eg. <code>&lt;%STUFF HERE%&gt;</code>) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.</p>
<p>Reset Password Template:</p>
<pre><code class="language-html">&lt;p&gt;We heard that you lost your password. Sorry about that!&lt;/p&gt;

&lt;p&gt;But don’t worry! You can use the following link to reset your password:&lt;/p&gt;
&lt;p&gt;&lt;%= URL %&gt;?code=&lt;%= TOKEN %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Email Confirmation Template:</p>
<pre><code class="language-html">&lt;p&gt;Thank you for registering!&lt;/p&gt;

&lt;p&gt;You have to confirm your email address. Please click on the link below.&lt;/p&gt;

&lt;p&gt;&lt;%= URL %&gt;?confirmation=&lt;%= CODE %&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</code></pre>
<p>Specifically you should look for odd code contained within the <code>&lt;%STUFF HERE%&gt;</code> blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.</p>
<h3 id="impact">Impact</h3>
<p>All users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22621">https://nvd.nist.gov/vuln/detail/CVE-2023-22621</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15385">https://github.com/strapi/strapi/pull/15385</a></li>
<li><a href="https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd">https://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.5.6">https://github.com/strapi/strapi/releases/tag/v4.5.6</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-2h87-4q2w-v4hf">https://github.com/advisories/GHSA-2h87-4q2w-v4hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h87-4q2w-v4hf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-19T21:41:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Strapi leaking sensitive user information by filtering on private fields]]></title>
        <id>https://github.com/advisories/GHSA-jjqf-j4w7-92w8</id>
        <link href="https://github.com/advisories/GHSA-jjqf-j4w7-92w8"/>
        <updated>2023-04-20T08:12:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users. The unauthenticated attacker can filter users by columns that contain sensitive information and infer the values by the changes in the API responses. An unauthenticated attacker can exploit this vulnerability to hijack Strapi administrator accounts and gain unauthorized Strapi Super Administrator access by leaking the password reset token and changing the admin password. This can be exploited on all Strapi versions &lt;=4.7.1.</p>
<h3 id="ioc">IoC</h3>
<p>The exploitation of CVE-2023-22894 is easily detectable, since the payload is within the GET parameters and are normally included in request logs. The following regex pattern will extract requests that are exploiting this vulnerability to leak user's email, password and password reset token columns.</p>
<p><code>/(\[|%5B)\s*(email|password|reset_password_token|resetPasswordToken)\s*(\]|%5D)/</code></p>
<p>You can search log files for this IoC by using the following grep command.</p>
<p><code>grep -iE '(\[|%5B)\s*(email|password|reset_password_token|resetPasswordToken)\s*(\]|%5D)' $PATH_TO_LOG_FILE</code></p>
<p>If the above regex pattern matches any lines in your log files, take extra precaution to look out for multiple requests that include password, reset_password_token or resetPasswordToken. This would indicate that an attacker has leaked the password hashes and reset tokens on your Strapi server and you need to immediately start an incident response!</p>
<h3 id="impact">Impact</h3>
<p>All Strapi users below 4.8.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-jjqf-j4w7-92w8">https://github.com/strapi/strapi/security/advisories/GHSA-jjqf-j4w7-92w8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22894">https://nvd.nist.gov/vuln/detail/CVE-2023-22894</a></li>
<li><a href="https://github.com/strapi/strapi/releases">https://github.com/strapi/strapi/releases</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.8.0">https://github.com/strapi/strapi/releases/tag/v4.8.0</a></li>
<li><a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve</a></li>
<li><a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/">https://www.ghostccamm.com/blog/multi_strapi_vulns/</a></li>
<li><a href="https://github.com/advisories/GHSA-jjqf-j4w7-92w8">https://github.com/advisories/GHSA-jjqf-j4w7-92w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjqf-j4w7-92w8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-19T21:41:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/walletconnect] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/metamask] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/eip1193] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@web3-react/coinbase-wallet] `chainId` may be outdated if user changes chains as part of connection in @web3-react]]></title>
        <id>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</id>
        <link href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g"/>
        <updated>2023-04-18T22:29:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>chainId</code> may be outdated if the user changes chains as part of the connection flow. This means that the value of <code>chainId</code> returned by <code>useWeb3React()</code> may be incorrect. In an application, this means that any data derived from <code>chainId</code> could be incorrect.</p>
<p>For example, if a swapping application derives a wrapped token contract address from the <code>chainId</code> <em>and</em> a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like <a href="https://github.com/ethers-io/ethers.js"><code>ethers</code></a>, and most users of v8 will want to upgrade past the affected versions.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a>.
Users of <a href="mailto:web3-react@8.0.x-beta.0">web3-react@8.0.x-beta.0</a> should upgrade to at least:</p>
<ul>
<li>@web3-react/coinbase-wallet@^8.0.35-beta.0</li>
<li>@web3-react/eip1193@^8.0.27-beta.0</li>
<li>@web3-react/metamask@^8.0.30-beta.0</li>
<li>@web3-react/walletconnect@^8.0.37-beta.0</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>N/A</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30543">https://nvd.nist.gov/vuln/detail/CVE-2023-30543</a></li>
<li><a href="https://github.com/Uniswap/web3-react/pull/749">https://github.com/Uniswap/web3-react/pull/749</a></li>
<li><a href="https://github.com/advisories/GHSA-8pf3-6fgr-3g3g">https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pf3-6fgr-3g3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-18T22:29:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/plugin-users-permissions] Authentication Bypass in @strapi/plugin-users-permissions]]></title>
        <id>https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</id>
        <link href="https://github.com/advisories/GHSA-xv3q-jrmm-4fxv"/>
        <updated>2023-04-19T12:11:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Strapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication.</p>
<h3 id="details">Details</h3>
<p>Strapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication. A remote attacker could forge an ID token that is signed using the 'None' type algorithm to bypass authentication and impersonate any user that use AWS Cognito for authentication.</p>
<h3 id="ioc">IoC</h3>
<p>Reviewing of application logs is recommended to detect any suspicious activity. Running the following regex pattern will extract all ID tokens sent to <code>/api/auth/cognito/callback</code>.</p>
<p><code>/\/api\/auth\/cognito\/callback\?[\s\S]*id_token=\s*([\S]*)/</code></p>
<p>Once you have a list of the ID tokens, you will need to verify each token using the public key file for your AWS Cognito user pool that you can download from <code>https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/jwks.json</code>. If there are any JWT tokens that cannot be verified using the correct public key, then you need to inspect the JWT body and see if it contains the <code>email</code> and <code>cognito:username</code> claims (example below).</p>
<pre><code class="language-json">{
  "cognito:username": "auth-bypass-example",
  "email": "user@example.com"
}
</code></pre>
<p>If there are any JWTs that have this body, verify when the account with the email address was created. If the account was created earlier than the request to <code>/api/auth/cognito/callback</code> with the invalid JWT token, then you need to contact the user to inform them their account has been breached!</p>
<p>After upgrading to Strapi v4.6.0 or greater you will need to reconfigure your AWS Cognito provider to include the JWKS URL for it to work properly. If you do not reconfigure your provider you will receive an error message when attempting to login.</p>
<h3 id="impact">Impact</h3>
<p>Any Strapi user using the users-permissions AWS Cognito provider before 4.6.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-xv3q-jrmm-4fxv">https://github.com/strapi/strapi/security/advisories/GHSA-xv3q-jrmm-4fxv</a></li>
<li><a href="https://github.com/strapi/strapi/pull/15382">https://github.com/strapi/strapi/pull/15382</a></li>
<li><a href="https://github.com/strapi/strapi/commit/d0edd25ceb49d275d710bf8d59999a2c07072893">https://github.com/strapi/strapi/commit/d0edd25ceb49d275d710bf8d59999a2c07072893</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.6.0">https://github.com/strapi/strapi/releases/tag/v4.6.0</a></li>
<li><a href="https://github.com/advisories/GHSA-xv3q-jrmm-4fxv">https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv3q-jrmm-4fxv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-18T22:28:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] OpenZeppelin Contracts TransparentUpgradeableProxy clashing selector calls may not be delegated]]></title>
        <id>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</id>
        <link href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh"/>
        <updated>2023-04-18T16:14:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.</p>
<p>The probability of an accidental clash is negligible, but one could be caused deliberately.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30541">https://nvd.nist.gov/vuln/detail/CVE-2023-30541</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/advisories/GHSA-mx2q-35m2-x2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-17T16:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts] OpenZeppelin Contracts TransparentUpgradeableProxy clashing selector calls may not be delegated]]></title>
        <id>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</id>
        <link href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh"/>
        <updated>2023-04-18T16:14:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.</p>
<p>The probability of an accidental clash is negligible, but one could be caused deliberately.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v4.8.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30541">https://nvd.nist.gov/vuln/detail/CVE-2023-30541</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2q-35m2-x2rh">https://github.com/advisories/GHSA-mx2q-35m2-x2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2q-35m2-x2rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-17T16:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk vulnerable to invisible eavesdropping in group calls]]></title>
        <id>https://github.com/advisories/GHSA-6g67-q39g-r79q</id>
        <link href="https://github.com/advisories/GHSA-6g67-q39g-r79q"/>
        <updated>2023-04-14T21:35:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker present in a room where an <a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3401">MSC3401</a> group call is taking place can eavesdrop on the video and audio of participants using matrix-js-sdk, without their knowledge. To affected matrix-js-sdk users, the attacker will not appear to be participating in the call.</p>
<p>This attack is possible because matrix-js-sdk's group call implementation accepts incoming direct calls from other users, even if they have not yet declared intent to participate in the group call, as a means of resolving a race condition in call setup. Affected versions do not restrict access to the user's outbound media in this case.</p>
<p>Legacy 1:1 calls are unaffected.</p>
<h3 id="patches">Patches</h3>
<p>This is fixed in matrix-js-sdk 24.1.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may hold group calls in private rooms where only the exact users who are expected to participate in the call are present.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6g67-q39g-r79q">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6g67-q39g-r79q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29529">https://nvd.nist.gov/vuln/detail/CVE-2023-29529</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3401">https://github.com/matrix-org/matrix-spec-proposals/pull/3401</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/releases/tag/v24.1.0">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v24.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6g67-q39g-r79q">https://github.com/advisories/GHSA-6g67-q39g-r79q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6g67-q39g-r79q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-14T16:14:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serialize-to-js] Code Execution Through IIFE in serialize-to-js]]></title>
        <id>https://github.com/advisories/GHSA-mm62-wxc8-cf7m</id>
        <link href="https://github.com/advisories/GHSA-mm62-wxc8-cf7m"/>
        <updated>2023-04-13T22:32:52.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>serialize-to-js</code> may be vulnerable to arbitrary code execution through an Immediately Invoked Function Expression (IIFE). </p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<pre><code>var payload = "{e: (function(){ eval('console.log(`exploited`)') })() }"
var serialize = require('serialize-to-js');
serialize.deserialize(payload);
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 1.0.0, or later, and review <a href="https://www.npmjs.com/package/serialize-to-js#deserialize">this disclaimer</a> from the author.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-5954">https://nvd.nist.gov/vuln/detail/CVE-2017-5954</a></li>
<li><a href="https://github.com/advisories/GHSA-mm62-wxc8-cf7m">https://github.com/advisories/GHSA-mm62-wxc8-cf7m</a></li>
<li><a href="https://www.npmjs.com/advisories/313">https://www.npmjs.com/advisories/313</a></li>
<li><a href="https://www.npmjs.com/package/serialize-to-js#deserialize">https://www.npmjs.com/package/serialize-to-js#deserialize</a></li>
<li><a href="https://github.com/commenthol/serialize-to-js/issues/1">https://github.com/commenthol/serialize-to-js/issues/1</a></li>
<li><a href="https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/">https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/</a></li>
<li><a href="http://www.securityfocus.com/bid/96223">http://www.securityfocus.com/bid/96223</a></li>
<li><a href="https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429">https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mm62-wxc8-cf7m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-07-18T18:27:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm2] vm2 Sandbox Escape vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xj72-wvfv-8985</id>
        <link href="https://github.com/advisories/GHSA-xj72-wvfv-8985"/>
        <updated>2023-04-14T21:35:02.000Z</updated>
        <content type="html"><![CDATA[<p>There exists a vulnerability in source code transformer (exception sanitization logic) of vm2 for versions up to 3.9.15, allowing attackers to bypass <code>handleException()</code> and leak unsanitized host exceptions which can be used to escape the sandbox and run arbitrary code in host context.</p>
<h3 id="impact">Impact</h3>
<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability was patched in the release of version <code>3.9.16</code> of <code>vm2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>Github Issue - <a href="https://github.com/patriksimek/vm2/issues/516">https://github.com/patriksimek/vm2/issues/516</a>
PoC - <a href="https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c">https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/patriksimek/vm2">VM2</a></li>
</ul>
<p>Thanks to <a href="https://twitter.com/0x10n">Xion</a> (SeungHyun Lee) of <a href="https://kaist-hacking.github.io/">KAIST Hacking Lab</a> for disclosing this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/patriksimek/vm2/security/advisories/GHSA-xj72-wvfv-8985">https://github.com/patriksimek/vm2/security/advisories/GHSA-xj72-wvfv-8985</a></li>
<li><a href="https://github.com/patriksimek/vm2/issues/516">https://github.com/patriksimek/vm2/issues/516</a></li>
<li><a href="https://github.com/patriksimek/vm2/commit/24c724daa7c09f003e556d7cd1c7a8381cb985d7">https://github.com/patriksimek/vm2/commit/24c724daa7c09f003e556d7cd1c7a8381cb985d7</a></li>
<li><a href="https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c">https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c</a></li>
<li><a href="https://github.com/patriksimek/vm2/releases/tag/3.9.16">https://github.com/patriksimek/vm2/releases/tag/3.9.16</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29199">https://nvd.nist.gov/vuln/detail/CVE-2023-29199</a></li>
<li><a href="https://github.com/advisories/GHSA-xj72-wvfv-8985">https://github.com/advisories/GHSA-xj72-wvfv-8985</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj72-wvfv-8985</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-12T20:42:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] safe-eval vulnerable to Prototype Pollution via the safeEval function]]></title>
        <id>https://github.com/advisories/GHSA-hcg3-56jf-x4vh</id>
        <link href="https://github.com/advisories/GHSA-hcg3-56jf-x4vh"/>
        <updated>2023-04-14T21:35:38.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package safe-eval are vulnerable to Prototype Pollution via the safeEval function, due to improper sanitization of its parameter content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26121">https://nvd.nist.gov/vuln/detail/CVE-2023-26121</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/28">https://github.com/hacksparrow/safe-eval/issues/28</a></li>
<li><a href="https://gist.github.com/seongil-wi/9d9fc0cc5b7b130419cd45827e59c4f9">https://gist.github.com/seongil-wi/9d9fc0cc5b7b130419cd45827e59c4f9</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373062">https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373062</a></li>
<li><a href="https://github.com/advisories/GHSA-hcg3-56jf-x4vh">https://github.com/advisories/GHSA-hcg3-56jf-x4vh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcg3-56jf-x4vh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-11T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe-eval] safe-eval vulnerable to Sandbox Bypass due to improper input sanitization]]></title>
        <id>https://github.com/advisories/GHSA-79xf-67r4-q2jj</id>
        <link href="https://github.com/advisories/GHSA-79xf-67r4-q2jj"/>
        <updated>2023-04-19T17:10:21.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package safe-eval are vulnerable to Sandbox Bypass due to improper input sanitization. The vulnerability is derived from prototype pollution exploitation. Exploiting this vulnerability might result in remote code execution (RCE).</p>
<p><strong>Vulnerable functions:</strong></p>
<p><strong>defineGetter</strong>, stack(), toLocaleString(), propertyIsEnumerable.call(),  valueOf().</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26122">https://nvd.nist.gov/vuln/detail/CVE-2023-26122</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/27">https://github.com/hacksparrow/safe-eval/issues/27</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/31">https://github.com/hacksparrow/safe-eval/issues/31</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/32">https://github.com/hacksparrow/safe-eval/issues/32</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/33">https://github.com/hacksparrow/safe-eval/issues/33</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/34">https://github.com/hacksparrow/safe-eval/issues/34</a></li>
<li><a href="https://github.com/hacksparrow/safe-eval/issues/35">https://github.com/hacksparrow/safe-eval/issues/35</a></li>
<li><a href="https://gist.github.com/seongil-wi/2db6cb884e10137a93132b7f74879cce">https://gist.github.com/seongil-wi/2db6cb884e10137a93132b7f74879cce</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373064">https://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373064</a></li>
<li><a href="https://github.com/advisories/GHSA-79xf-67r4-q2jj">https://github.com/advisories/GHSA-79xf-67r4-q2jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79xf-67r4-q2jj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-11T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[element-plus] element-plus vulnerable to cross-site scripting (XSS) via el-table-column]]></title>
        <id>https://github.com/advisories/GHSA-rjvg-8v36-xv9r</id>
        <link href="https://github.com/advisories/GHSA-rjvg-8v36-xv9r"/>
        <updated>2023-04-11T14:26:35.000Z</updated>
        <content type="html"><![CDATA[<p>element-plus below 2.0.5 is vulnerable to Cross Site Scripting (XSS) when attribute <code>show-tooltips-overflow</code> of <code>el-table-column</code> is true. The mouseover action will make the text of this column render as html.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27103">https://nvd.nist.gov/vuln/detail/CVE-2022-27103</a></li>
<li><a href="https://github.com/asjdf/element-table-xss-test/issues/1">https://github.com/asjdf/element-table-xss-test/issues/1</a></li>
<li><a href="https://github.com/element-plus/element-plus/issues/6514">https://github.com/element-plus/element-plus/issues/6514</a></li>
<li><a href="https://github.com/asjdf/element-table-xss-test/">https://github.com/asjdf/element-table-xss-test/</a></li>
<li><a href="https://github.com/element-plus/element-plus/pull/6520">https://github.com/element-plus/element-plus/pull/6520</a></li>
<li><a href="https://github.com/element-plus/element-plus/commit/063c56446135176971f532bd0eb2e88a0b137d43">https://github.com/element-plus/element-plus/commit/063c56446135176971f532bd0eb2e88a0b137d43</a></li>
<li><a href="https://github.com/advisories/GHSA-rjvg-8v36-xv9r">https://github.com/advisories/GHSA-rjvg-8v36-xv9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjvg-8v36-xv9r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-26T00:00:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xml2js] xml2js is vulnerable to prototype pollution ]]></title>
        <id>https://github.com/advisories/GHSA-776f-qx25-q3cc</id>
        <link href="https://github.com/advisories/GHSA-776f-qx25-q3cc"/>
        <updated>2023-04-10T19:01:30.000Z</updated>
        <content type="html"><![CDATA[<p>xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the <code>__proto__</code> property to be edited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0842">https://nvd.nist.gov/vuln/detail/CVE-2023-0842</a></li>
<li><a href="https://fluidattacks.com/advisories/myers/">https://fluidattacks.com/advisories/myers/</a></li>
<li><a href="https://github.com/Leonidas-from-XIV/node-xml2js/issues/663">https://github.com/Leonidas-from-XIV/node-xml2js/issues/663</a></li>
<li><a href="https://github.com/Leonidas-from-XIV/node-xml2js/pull/603/commits/581b19a62d88f8a3c068b5a45f4542c2d6a495a5">https://github.com/Leonidas-from-XIV/node-xml2js/pull/603/commits/581b19a62d88f8a3c068b5a45f4542c2d6a495a5</a></li>
<li><a href="https://github.com/advisories/GHSA-776f-qx25-q3cc">https://github.com/advisories/GHSA-776f-qx25-q3cc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-776f-qx25-q3cc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-05T21:30:24.000Z</published>
    </entry>
</feed>