<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-01-27T00:03:32.907Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@asyncapi/modelina] Improper Control of Generation of Code ('Code Injection') in @asyncapi/modelina]]></title>
        <id>https://github.com/advisories/GHSA-4jg2-84c2-pj95</id>
        <link href="https://github.com/advisories/GHSA-4jg2-84c2-pj95"/>
        <updated>2023-01-26T21:57:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Anyone who is using the default presets and/or does not handle the functionality themself.</p>
<h3 id="patches">Patches</h3>
<p>It is impossible to fully guard against this, because users have access to the original raw information. However, as of version 1, if you only access the constrained models, you will not encounter this issue.</p>
<p>Further similar situations are NOT seen as a security issue, but intended behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Fully custom presets that change the entire rendering process which can then escape the user input.</p>
<h3 id="for-more-information">For more information</h3>
<p>Even though that I changed all the presets here, the vulnerability is still present throughout. I am using a JSON Schema here for simplicity.</p>
<pre><code class="language-ts">const jsonSchemaDoc = {
  $id: 'CustomClass',
  type: 'object',
  properties: {
      'property: any; \n constructor(){console.log("injected")} \n private _temp': { type: 'string' },
  }
};
generator = new TypeScriptGenerator(
  { 
    presets: [
      {
        class: {
            property({ propertyName, content }) {
              return `private ${propertyName}: any;`;
            },
            ctor() {
              return '';
            },
            getter() {
              return '';
            },
            setter() {
              return '';
            }
        }
      }
    ]
  }
);
const inputModel = await generator.process(jsonSchemaDoc);
</code></pre>
<p>This would render</p>
<pre><code class="language-ts">export class CustomClass {
  private property: any; 
   constructor(){console.log("injected")} 
   private _temp: any;
  private additionalProperties: any;
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95">https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-23619">https://nvd.nist.gov/vuln/detail/CVE-2023-23619</a></li>
<li><a href="https://github.com/advisories/GHSA-4jg2-84c2-pj95">https://github.com/advisories/GHSA-4jg2-84c2-pj95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jg2-84c2-pj95</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-09-21T18:41:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ua-parser-js] ReDoS Vulnerability in ua-parser-js version ]]></title>
        <id>https://github.com/advisories/GHSA-fhg7-m89q-25r3</id>
        <link href="https://github.com/advisories/GHSA-fhg7-m89q-25r3"/>
        <updated>2023-01-26T21:57:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>A regular expression denial of service (ReDoS) vulnerability has been discovered in <code>ua-parser-js</code>.</p>
<h3 id="impact">Impact:</h3>
<p>This vulnerability bypass the library's <code>MAX_LENGTH</code> input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.</p>
<h3 id="affected-versions">Affected Versions:</h3>
<p>All versions of the library prior to version <code>0.7.33</code> / <code>1.0.33</code>.</p>
<h3 id="patches">Patches:</h3>
<p>A patch has been released to remove the vulnerable regular expression, update to version <code>0.7.33</code> / <code>1.0.33</code> or later.</p>
<h3 id="references">References:</h3>
<p><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">Regular expression Denial of Service - ReDoS</a></p>
<h3 id="credits">Credits:</h3>
<p>Thanks to @Snyk who first reported the issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3">https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3</a></li>
<li><a href="https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411">https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25927">https://nvd.nist.gov/vuln/detail/CVE-2022-25927</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450">https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg7-m89q-25r3">https://github.com/advisories/GHSA-fhg7-m89q-25r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg7-m89q-25r3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-24T15:36:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ua-parser-js] ReDoS Vulnerability in ua-parser-js version ]]></title>
        <id>https://github.com/advisories/GHSA-fhg7-m89q-25r3</id>
        <link href="https://github.com/advisories/GHSA-fhg7-m89q-25r3"/>
        <updated>2023-01-26T21:57:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>A regular expression denial of service (ReDoS) vulnerability has been discovered in <code>ua-parser-js</code>.</p>
<h3 id="impact">Impact:</h3>
<p>This vulnerability bypass the library's <code>MAX_LENGTH</code> input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.</p>
<h3 id="affected-versions">Affected Versions:</h3>
<p>All versions of the library prior to version <code>0.7.33</code> / <code>1.0.33</code>.</p>
<h3 id="patches">Patches:</h3>
<p>A patch has been released to remove the vulnerable regular expression, update to version <code>0.7.33</code> / <code>1.0.33</code> or later.</p>
<h3 id="references">References:</h3>
<p><a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS">Regular expression Denial of Service - ReDoS</a></p>
<h3 id="credits">Credits:</h3>
<p>Thanks to @Snyk who first reported the issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3">https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3</a></li>
<li><a href="https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411">https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25927">https://nvd.nist.gov/vuln/detail/CVE-2022-25927</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450">https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg7-m89q-25r3">https://github.com/advisories/GHSA-fhg7-m89q-25r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg7-m89q-25r3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-24T15:36:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cookiejar] cookiejar Regular Expression Denial of Service via Cookie.parse function]]></title>
        <id>https://github.com/advisories/GHSA-h452-7996-h45h</id>
        <link href="https://github.com/advisories/GHSA-h452-7996-h45h"/>
        <updated>2023-01-23T16:59:53.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <code>Cookie.parse</code> function and other aspects of the API, which use an insecure regular expression for parsing cookie values. Applications could be stalled for extended periods of time if untrusted input is passed to cookie values or attempted to parse from request headers.</p>
<p>Proof of concept:</p>
<pre><code>ts\nconst { CookieJar } = require("cookiejar");

const jar = new CookieJar();

const start = performance.now();

const attack = "a" + "t".repeat(50_000);
jar.setCookie(attack);

console.log(`CookieJar.setCookie(): ${performance.now() - start}ms`);
</code></pre>
<pre><code>CookieJar.setCookie(): 2963.214399999939ms
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25901">https://nvd.nist.gov/vuln/detail/CVE-2022-25901</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/pull/39">https://github.com/bmeck/node-cookiejar/pull/39</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5">https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984">https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984</a></li>
<li><a href="https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73">https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73</a></li>
<li><a href="https://github.com/advisories/GHSA-h452-7996-h45h">https://github.com/advisories/GHSA-h452-7996-h45h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h452-7996-h45h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-18T06:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mel-spintax] mel-spintax has Inefficient Regular Expression Complexity]]></title>
        <id>https://github.com/advisories/GHSA-qjm7-55vv-3c5f</id>
        <link href="https://github.com/advisories/GHSA-qjm7-55vv-3c5f"/>
        <updated>2023-01-20T23:35:16.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in melnaron mel-spintax. It has been rated as problematic. Affected by this issue is some unknown functionality of the file <code>lib/spintax.js</code>. The manipulation of the argument text leads to inefficient regular expression complexity. The name of the patch is 37767617846e27b87b63004e30216e8f919637d3. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-218456.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25077">https://nvd.nist.gov/vuln/detail/CVE-2018-25077</a></li>
<li><a href="https://github.com/melnaron/mel-spintax/commit/37767617846e27b87b63004e30216e8f919637d3">https://github.com/melnaron/mel-spintax/commit/37767617846e27b87b63004e30216e8f919637d3</a></li>
<li><a href="https://vuldb.com/?id.218456">https://vuldb.com/?id.218456</a></li>
<li><a href="https://github.com/advisories/GHSA-qjm7-55vv-3c5f">https://github.com/advisories/GHSA-qjm7-55vv-3c5f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjm7-55vv-3c5f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-18T03:31:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@builder.io/qwik] @builder.io/qwik vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</id>
        <link href="https://github.com/advisories/GHSA-hm7f-rq7q-j9xp"/>
        <updated>2023-01-26T17:04:28.000Z</updated>
        <content type="html"><![CDATA[<p>@builder.io/qwik prior to version 0.16.2 is vulnerable to cross-site scripting due to attribute names and the class attribute values not being properly handled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0410">https://nvd.nist.gov/vuln/detail/CVE-2023-0410</a></li>
<li><a href="https://github.com/builderio/qwik/commit/4b2f89dbbd2bc0a2c92eae1a49bdd186e589151a">https://github.com/builderio/qwik/commit/4b2f89dbbd2bc0a2c92eae1a49bdd186e589151a</a></li>
<li><a href="https://huntr.dev/bounties/2da583f0-7f66-4ba7-9bed-8e7229aa578e">https://huntr.dev/bounties/2da583f0-7f66-4ba7-9bed-8e7229aa578e</a></li>
<li><a href="https://github.com/advisories/GHSA-hm7f-rq7q-j9xp">https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hm7f-rq7q-j9xp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-20T03:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2023-01-20T05:05:18.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@curveball/a12n-server] a12nserver vulnerable to potential SQL Injections via Knex dependency]]></title>
        <id>https://github.com/advisories/GHSA-crhg-xgrg-vvcc</id>
        <link href="https://github.com/advisories/GHSA-crhg-xgrg-vvcc"/>
        <updated>2023-01-13T21:34:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of a12nserver that use MySQL might be vulnerable to SQL injection bugs. </p>
<p>If you use a12nserver and MySQL, update as soon as possible. This SQL injection bug might let an attacker obtain OAuth2 Access Tokens for users unrelated to those that permitted OAuth2 clients.</p>
<h3 id="patches">Patches</h3>
<p>The knex dependency has been updated to 2.4.0 in a12nserver 0.23.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>No further workarounds</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/knex/knex/issues/1227">https://github.com/knex/knex/issues/1227</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-20018">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>
<li><a href="https://www.ghostccamm.com/blog/knex_sqli/">https://www.ghostccamm.com/blog/knex_sqli/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/curveball/a12n-server/security/advisories/GHSA-crhg-xgrg-vvcc">https://github.com/curveball/a12n-server/security/advisories/GHSA-crhg-xgrg-vvcc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-20018">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>
<li><a href="https://github.com/knex/knex/issues/1227">https://github.com/knex/knex/issues/1227</a></li>
<li><a href="https://github.com/curveball/a12n-server/commit/f4acd7549043e6e2b8917b77a50dce0756a922cc">https://github.com/curveball/a12n-server/commit/f4acd7549043e6e2b8917b77a50dce0756a922cc</a></li>
<li><a href="https://github.com/curveball/a12n-server/releases/tag/v0.23.0">https://github.com/curveball/a12n-server/releases/tag/v0.23.0</a></li>
<li><a href="https://www.ghostccamm.com/blog/knex_sqli/">https://www.ghostccamm.com/blog/knex_sqli/</a></li>
<li><a href="https://github.com/advisories/GHSA-crhg-xgrg-vvcc">https://github.com/advisories/GHSA-crhg-xgrg-vvcc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crhg-xgrg-vvcc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-13T21:34:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[global-modules-path] global-modules-path Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vvj3-85vf-fgmw</id>
        <link href="https://github.com/advisories/GHSA-vvj3-85vf-fgmw"/>
        <updated>2023-01-20T16:55:15.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21191">https://nvd.nist.gov/vuln/detail/CVE-2022-21191</a></li>
<li><a href="https://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180">https://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180</a></li>
<li><a href="https://github.com/lorenzomigliorero/npm-node-utils/blob/b55dd81c597db657c9751332bb2242403fd3e26b/index.js%23L186">https://github.com/lorenzomigliorero/npm-node-utils/blob/b55dd81c597db657c9751332bb2242403fd3e26b/index.js%23L186</a></li>
<li><a href="https://github.com/rosen-vladimirov/global-modules-path/releases/tag/v3.0.0">https://github.com/rosen-vladimirov/global-modules-path/releases/tag/v3.0.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973">https://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973</a></li>
<li><a href="https://github.com/advisories/GHSA-vvj3-85vf-fgmw">https://github.com/advisories/GHSA-vvj3-85vf-fgmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvj3-85vf-fgmw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-01-13T06:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[terminal-kit] terminal-kit Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</id>
        <link href="https://github.com/advisories/GHSA-wxgh-8gmr-3qh3"/>
        <updated>2023-01-12T23:43:03.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in cronvel terminal-kit up to 2.1.7. Affected is an unknown function. The manipulation leads to inefficient regular expression complexity. Upgrading to version 2.1.8 can address this issue. The name of the patch is a2e446cc3927b559d0281683feb9b821e83b758c. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217620.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4306">https://nvd.nist.gov/vuln/detail/CVE-2021-4306</a></li>
<li><a href="https://github.com/cronvel/terminal-kit/commit/a2e446cc3927b559d0281683feb9b821e83b758c">https://github.com/cronvel/terminal-kit/commit/a2e446cc3927b559d0281683feb9b821e83b758c</a></li>
<li><a href="https://github.com/cronvel/terminal-kit/releases/tag/v2.1.8">https://github.com/cronvel/terminal-kit/releases/tag/v2.1.8</a></li>
<li><a href="https://vuldb.com/?ctiid.217620">https://vuldb.com/?ctiid.217620</a></li>
<li><a href="https://vuldb.com/?id.217620">https://vuldb.com/?id.217620</a></li>
<li><a href="https://github.com/advisories/GHSA-wxgh-8gmr-3qh3">https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxgh-8gmr-3qh3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-07T18:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodebatis] nodebatis SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8ph8-9q2j-c3rq</id>
        <link href="https://github.com/advisories/GHSA-8ph8-9q2j-c3rq"/>
        <updated>2023-01-12T23:41:47.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in PeterMu nodebatis up to 2.1.x. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. Upgrading to version 2.2.0 can address this issue. The name of the patch is 6629ff5b7e3d62ad8319007a54589ec1f62c7c35. It is recommended to upgrade the affected component. VDB-217554 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25066">https://nvd.nist.gov/vuln/detail/CVE-2018-25066</a></li>
<li><a href="https://github.com/PeterMu/nodebatis/commit/6629ff5b7e3d62ad8319007a54589ec1f62c7c35">https://github.com/PeterMu/nodebatis/commit/6629ff5b7e3d62ad8319007a54589ec1f62c7c35</a></li>
<li><a href="https://github.com/PeterMu/nodebatis/releases/tag/v2.2.0">https://github.com/PeterMu/nodebatis/releases/tag/v2.2.0</a></li>
<li><a href="https://vuldb.com/?ctiid.217554">https://vuldb.com/?ctiid.217554</a></li>
<li><a href="https://vuldb.com/?id.217554">https://vuldb.com/?id.217554</a></li>
<li><a href="https://github.com/advisories/GHSA-8ph8-9q2j-c3rq">https://github.com/advisories/GHSA-8ph8-9q2j-c3rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8ph8-9q2j-c3rq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-01-06T12:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[debug] debug Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</id>
        <link href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h"/>
        <updated>2023-01-13T17:19:11.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-20165">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>
<li><a href="https://github.com/debug-js/debug/pull/504">https://github.com/debug-js/debug/pull/504</a></li>
<li><a href="https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/3.1.0">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>
<li><a href="https://vuldb.com/?id.217665">https://vuldb.com/?id.217665</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/2.6.9">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>
<li><a href="https://vuldb.com/?ctiid.217665">https://vuldb.com/?ctiid.217665</a></li>
<li><a href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-09T12:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[papaparse] PapaParse Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-798h-g4j5-5537</id>
        <link href="https://github.com/advisories/GHSA-798h-g4j5-5537"/>
        <updated>2023-01-19T16:38:31.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in mholt PapaParse up to 5.1.x. It has been classified as problematic. Affected is an unknown function of the file papaparse.js. The manipulation leads to inefficient regular expression complexity. Upgrading to version 5.2.0 is able to address this issue. The name of the patch is 235a12758cd77266d2e98fd715f53536b34ad621. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218004.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36649">https://nvd.nist.gov/vuln/detail/CVE-2020-36649</a></li>
<li><a href="https://github.com/mholt/PapaParse/issues/777">https://github.com/mholt/PapaParse/issues/777</a></li>
<li><a href="https://github.com/mholt/PapaParse/pull/779">https://github.com/mholt/PapaParse/pull/779</a></li>
<li><a href="https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621">https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621</a></li>
<li><a href="https://github.com/mholt/PapaParse/releases/tag/5.2.0">https://github.com/mholt/PapaParse/releases/tag/5.2.0</a></li>
<li><a href="https://vuldb.com/?ctiid.218004">https://vuldb.com/?ctiid.218004</a></li>
<li><a href="https://vuldb.com/?id.218004">https://vuldb.com/?id.218004</a></li>
<li><a href="https://github.com/advisories/GHSA-798h-g4j5-5537">https://github.com/advisories/GHSA-798h-g4j5-5537</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-798h-g4j5-5537</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@uniswap/universal-router] Uniswap Universal Router Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7m37-cx35-qgmr</id>
        <link href="https://github.com/advisories/GHSA-7m37-cx35-qgmr"/>
        <updated>2023-01-11T23:47:54.000Z</updated>
        <content type="html"><![CDATA[<p>Uniswap Universal Router before 1.1.0 mishandles reentrancy. This would have allowed theft of funds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-48216">https://nvd.nist.gov/vuln/detail/CVE-2022-48216</a></li>
<li><a href="https://github.com/Uniswap/universal-router/pull/189">https://github.com/Uniswap/universal-router/pull/189</a></li>
<li><a href="https://github.com/Uniswap/universal-router/commit/d82c6685ef566d9b280651c99f4b93a8454c08a8">https://github.com/Uniswap/universal-router/commit/d82c6685ef566d9b280651c99f4b93a8454c08a8</a></li>
<li><a href="https://github.com/Uniswap/universal-router/compare/v1.0.1...v1.1.0">https://github.com/Uniswap/universal-router/compare/v1.0.1...v1.1.0</a></li>
<li><a href="https://media.dedaub.com/uniswap-bug-bounty-1625d8ff04ae">https://media.dedaub.com/uniswap-bug-bounty-1625d8ff04ae</a></li>
<li><a href="https://twitter.com/dedaub/status/1610058814094450694">https://twitter.com/dedaub/status/1610058814094450694</a></li>
<li><a href="https://github.com/advisories/GHSA-7m37-cx35-qgmr">https://github.com/advisories/GHSA-7m37-cx35-qgmr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m37-cx35-qgmr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-04T18:31:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rsshub] RSSHub SSRF vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-64wp-jh9p-5cg2</id>
        <link href="https://github.com/advisories/GHSA-64wp-jh9p-5cg2"/>
        <updated>2023-01-23T22:17:34.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>RSSHub is vulnerable to Server-Side Request Forgery (SSRF) attacks. This vulnerability allows an attacker to send arbitrary HTTP requests from the server to other servers or resources on the network.</p>
<h2 id="description">Description</h2>
<p>An attacker can exploit this vulnerability by sending a request to the affected routes with a malicious URL. For example, if an attacker controls the <code>ATTACKER.HOST</code> domain, they can send a request to affected routes with the value set to <code>ATTACKER.HOST%2F%23</code>.
The <code>%2F</code> and <code>%23</code> characters are URL-encoded versions of the forward-slash (<code>/</code>) and pound (<code>#</code>) characters, respectively. In this context, an attacker could use those characters to append the base URL (i.e. <code>https://${input}.defined.host</code>) to be modified to <code>https://ATTACKER.HOST/#.defined.host</code>. This will cause the server to send a request to the attacker-controlled domain, allowing the attacker to potentially gain access to sensitive information or perform further attacks on the server. </p>
<h2 id="impact">Impact</h2>
<p>An attacker could use this vulnerability to send requests to internal or any other servers or resources on the network, potentially gain access to sensitive information that would not normally be accessible and amplifying the impact of the attack.</p>
<h2 id="reference">Reference</h2>
<p>Fixing PR: <a href="https://github.com/DIYgod/RSSHub/pull/11588">https://github.com/DIYgod/RSSHub/pull/11588</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DIYgod/RSSHub/security/advisories/GHSA-64wp-jh9p-5cg2">https://github.com/DIYgod/RSSHub/security/advisories/GHSA-64wp-jh9p-5cg2</a></li>
<li><a href="https://github.com/DIYgod/RSSHub/pull/11588">https://github.com/DIYgod/RSSHub/pull/11588</a></li>
<li><a href="https://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a">https://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22493">https://nvd.nist.gov/vuln/detail/CVE-2023-22493</a></li>
<li><a href="https://advisory.dw1.io/56">https://advisory.dw1.io/56</a></li>
<li><a href="https://github.com/advisories/GHSA-64wp-jh9p-5cg2">https://github.com/advisories/GHSA-64wp-jh9p-5cg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64wp-jh9p-5cg2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T22:04:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gry] gry vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-w5mw-f2hq-5fw8</id>
        <link href="https://github.com/advisories/GHSA-w5mw-f2hq-5fw8"/>
        <updated>2023-01-19T01:00:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, was found in IonicaBizau node-gry up to 5.x. This affects an unknown part. The manipulation leads to command injection. Upgrading to version 6.0.0 is able to address this issue. The name of the patch is 5108446c1e23960d65e8b973f1d9486f9f9dbd6c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-218019.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36650">https://nvd.nist.gov/vuln/detail/CVE-2020-36650</a></li>
<li><a href="https://github.com/IonicaBizau/node-gry/pull/22">https://github.com/IonicaBizau/node-gry/pull/22</a></li>
<li><a href="https://github.com/IonicaBizau/node-gry/commit/5108446c1e23960d65e8b973f1d9486f9f9dbd6c">https://github.com/IonicaBizau/node-gry/commit/5108446c1e23960d65e8b973f1d9486f9f9dbd6c</a></li>
<li><a href="https://github.com/IonicaBizau/node-gry/releases/tag/6.0.0">https://github.com/IonicaBizau/node-gry/releases/tag/6.0.0</a></li>
<li><a href="https://vuldb.com/?ctiid.218019">https://vuldb.com/?ctiid.218019</a></li>
<li><a href="https://vuldb.com/?id.218019">https://vuldb.com/?id.218019</a></li>
<li><a href="https://github.com/advisories/GHSA-w5mw-f2hq-5fw8">https://github.com/advisories/GHSA-w5mw-f2hq-5fw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5mw-f2hq-5fw8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T18:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[class-validator] SQL Injection and Cross-site Scripting in class-validator]]></title>
        <id>https://github.com/advisories/GHSA-fj58-h2fr-3pp2</id>
        <link href="https://github.com/advisories/GHSA-fj58-h2fr-3pp2"/>
        <updated>2023-01-11T21:59:21.000Z</updated>
        <content type="html"><![CDATA[<p>In TypeStack class-validator, <code>validate()</code> input validation can be bypassed because certain internal attributes can be overwritten via a conflicting name. Even though there is an optional <code>forbidUnknownValues</code> parameter that can be used to reduce the risk of this bypass, this option is not documented and thus most developers configure input validation in the vulnerable default manner. With this vulnerability, attackers can launch SQL Injection or XSS attacks by injecting arbitrary malicious input.</p>
<p>The default settings for <code>forbidUnknownValues</code> has been changed to <code>true</code> in 0.14.0.</p>
<p>NOTE: a software maintainer agrees with the "is not documented" finding but suggests that much of the responsibility for the risk lies in a different product.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-18413">https://nvd.nist.gov/vuln/detail/CVE-2019-18413</a></li>
<li><a href="https://github.com/typestack/class-validator/issues/438">https://github.com/typestack/class-validator/issues/438</a></li>
<li><a href="https://github.com/typestack/class-validator#passing-options">https://github.com/typestack/class-validator#passing-options</a></li>
<li><a href="https://github.com/typestack/class-validator/issues/438#issuecomment-964728471">https://github.com/typestack/class-validator/issues/438#issuecomment-964728471</a></li>
<li><a href="https://github.com/typestack/class-validator/issues/1422#issuecomment-1344635415">https://github.com/typestack/class-validator/issues/1422#issuecomment-1344635415</a></li>
<li><a href="https://github.com/typestack/class-validator/pull/1798">https://github.com/typestack/class-validator/pull/1798</a></li>
<li><a href="https://github.com/advisories/GHSA-fj58-h2fr-3pp2">https://github.com/advisories/GHSA-fj58-h2fr-3pp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fj58-h2fr-3pp2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-10-12T16:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[skeemas] skeemas Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qv66-f876-vjvr</id>
        <link href="https://github.com/advisories/GHSA-qv66-f876-vjvr"/>
        <updated>2023-01-19T16:35:20.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Prestaul skeemas and classified as problematic. This issue affects some unknown processing of the file validators/base.js. The manipulation of the argument uri leads to inefficient regular expression complexity. The name of the patch is 65e94eda62dc8dc148ab3e59aa2ccc086ac448fd. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218003.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25074">https://nvd.nist.gov/vuln/detail/CVE-2018-25074</a></li>
<li><a href="https://github.com/Prestaul/skeemas/commit/65e94eda62dc8dc148ab3e59aa2ccc086ac448fd">https://github.com/Prestaul/skeemas/commit/65e94eda62dc8dc148ab3e59aa2ccc086ac448fd</a></li>
<li><a href="https://vuldb.com/?ctiid.218003">https://vuldb.com/?ctiid.218003</a></li>
<li><a href="https://vuldb.com/?id.218003">https://vuldb.com/?id.218003</a></li>
<li><a href="https://github.com/advisories/GHSA-qv66-f876-vjvr">https://github.com/advisories/GHSA-qv66-f876-vjvr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv66-f876-vjvr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[debug] debug Inefficient Regular Expression Complexity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</id>
        <link href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h"/>
        <updated>2023-01-13T17:19:11.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-20165">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>
<li><a href="https://github.com/debug-js/debug/pull/504">https://github.com/debug-js/debug/pull/504</a></li>
<li><a href="https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/3.1.0">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>
<li><a href="https://vuldb.com/?id.217665">https://vuldb.com/?id.217665</a></li>
<li><a href="https://github.com/debug-js/debug/releases/tag/2.6.9">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>
<li><a href="https://vuldb.com/?ctiid.217665">https://vuldb.com/?ctiid.217665</a></li>
<li><a href="https://github.com/advisories/GHSA-9vvw-cc9w-f27h">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vvw-cc9w-f27h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-09T12:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gatsby-transformer-remark] gatsby-transformer-remark has possible unsanitized JavaScript code injection]]></title>
        <id>https://github.com/advisories/GHSA-7ch4-rr99-cqcw</id>
        <link href="https://github.com/advisories/GHSA-7ch4-rr99-cqcw"/>
        <updated>2023-01-23T18:42:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the <code>gray-matter</code> npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL).  Injected JavaScript executes in the context of the build server.</p>
<p>To exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark.  The following payload demonstrates a vulnerable configuration:</p>
<pre><code>---js
((require("child_process")).execSync("id &gt;&gt; /tmp/rce"))
--- 
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch has been introduced in <code>gatsby-transformer-remark@5.25.1</code> and <code>gatsby-transformer-remark@6.3.2</code> which mitigates the issue by disabling the <code>gray-matter</code> JavaScript Frontmatter engine.  The patch introduces a new option, <code>JSFrontmatterEngine</code> which is set to <code>false</code> by default.  When setting <code>JSFrontmatterEngine</code> to <code>true</code>, input passed to <code>gatsby-plugin-mdx</code> must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling <code>JSFrontmatterEngine</code> to <code>true</code> or if it appears that the MarkdownRemark input is attempting to use the Frontmatter engine.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If an older version of <code>gatsby-transformer-remark</code> must be used, input passed into the plugin should be sanitized ahead of processing.</p>
<p><strong>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</strong></p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@gatsbyjs.com">security@gatsbyjs.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22491">https://nvd.nist.gov/vuln/detail/CVE-2023-22491</a></li>
<li><a href="https://github.com/advisories/GHSA-7ch4-rr99-cqcw">https://github.com/advisories/GHSA-7ch4-rr99-cqcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7ch4-rr99-cqcw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T18:27:15.000Z</published>
    </entry>
</feed>