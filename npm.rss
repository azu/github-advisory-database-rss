<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2023-07-25T18:01:42.633Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@strapi/utils] Leaking sensitive user information still possible by filtering on private with prefix fields]]></title>
        <id>https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</id>
        <link href="https://github.com/advisories/GHSA-9xg4-3qfm-9w8f"/>
        <updated>2023-07-25T17:17:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Still able to leak private fields if using the t(number) prefix </p>
<h3 id="details">Details</h3>
<p>Knex query allows you to change there default prefix 
<code>SqliteError: select distinct `t0`.* from `pages` as `t0` left join `admin_users` as `t1` on `t0`.`updated_by_id` = `t1`.`id` where (`t1`.`password` = 1)</code>
so if you change the prefix to the same as it was before or to an other table you want to query you query changes from password to t1.password password is protected by filtering protections but t1.password is not protected</p>
<h3 id="poc">PoC</h3>
<p>1 Create a contentType
2 add to its options "populateCreatorFields"
3 create 1 entity in your new content type
4 in settings enable the find route in settings for the content type you created for public
5 /api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24
And now the api returns noting if you were to do
/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 it would return your entity</p>
<h3 id="impact">Impact</h3>
<p>You can do filtering attacks on everything related to the object again including admin passwords and reset-tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f">https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f</a></li>
<li><a href="https://github.com/advisories/GHSA-9xg4-3qfm-9w8f">https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-25T17:17:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/database] Leaking sensitive user information still possible by filtering on private with prefix fields]]></title>
        <id>https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</id>
        <link href="https://github.com/advisories/GHSA-9xg4-3qfm-9w8f"/>
        <updated>2023-07-25T17:17:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Still able to leak private fields if using the t(number) prefix </p>
<h3 id="details">Details</h3>
<p>Knex query allows you to change there default prefix 
<code>SqliteError: select distinct `t0`.* from `pages` as `t0` left join `admin_users` as `t1` on `t0`.`updated_by_id` = `t1`.`id` where (`t1`.`password` = 1)</code>
so if you change the prefix to the same as it was before or to an other table you want to query you query changes from password to t1.password password is protected by filtering protections but t1.password is not protected</p>
<h3 id="poc">PoC</h3>
<p>1 Create a contentType
2 add to its options "populateCreatorFields"
3 create 1 entity in your new content type
4 in settings enable the find route in settings for the content type you created for public
5 /api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24
And now the api returns noting if you were to do
/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 it would return your entity</p>
<h3 id="impact">Impact</h3>
<p>You can do filtering attacks on everything related to the object again including admin passwords and reset-tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f">https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f</a></li>
<li><a href="https://github.com/advisories/GHSA-9xg4-3qfm-9w8f">https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xg4-3qfm-9w8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-25T17:17:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/database] Making all attributes on a content-type public without noticing it]]></title>
        <id>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</id>
        <link href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf"/>
        <updated>2023-07-25T17:17:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Anyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.</p>
<h3 id="details">Details</h3>
<p>When dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; newContentType);
</code></pre>
<p>The vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the <code>privateAttributes</code> getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).</p>
<h3 id="poc">PoC</h3>
<p>Extend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; {
  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };
  return newCT;
});
</code></pre>
<p>This will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.</p>
<h3 id="impact">Impact</h3>
<p>Everyone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34093">https://nvd.nist.gov/vuln/detail/CVE-2023-34093</a></li>
<li><a href="https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de">https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.10.8">https://github.com/strapi/strapi/releases/tag/v4.10.8</a></li>
<li><a href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/advisories/GHSA-chmr-rg2f-9jmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:17:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/utils] Making all attributes on a content-type public without noticing it]]></title>
        <id>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</id>
        <link href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf"/>
        <updated>2023-07-25T17:17:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Anyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.</p>
<h3 id="details">Details</h3>
<p>When dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; newContentType);
</code></pre>
<p>The vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the <code>privateAttributes</code> getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).</p>
<h3 id="poc">PoC</h3>
<p>Extend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; {
  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };
  return newCT;
});
</code></pre>
<p>This will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.</p>
<h3 id="impact">Impact</h3>
<p>Everyone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34093">https://nvd.nist.gov/vuln/detail/CVE-2023-34093</a></li>
<li><a href="https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de">https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.10.8">https://github.com/strapi/strapi/releases/tag/v4.10.8</a></li>
<li><a href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/advisories/GHSA-chmr-rg2f-9jmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:17:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@strapi/strapi] Making all attributes on a content-type public without noticing it]]></title>
        <id>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</id>
        <link href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf"/>
        <updated>2023-07-25T17:17:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Anyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.</p>
<h3 id="details">Details</h3>
<p>When dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; newContentType);
</code></pre>
<p>The vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the <code>privateAttributes</code> getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).</p>
<h3 id="poc">PoC</h3>
<p>Extend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.</p>
<pre><code class="language-javascript">strapi.container.get('content-types').extend(contentTypeUID, (contentType) =&gt; {
  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };
  return newCT;
});
</code></pre>
<p>This will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.</p>
<h3 id="impact">Impact</h3>
<p>Everyone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34093">https://nvd.nist.gov/vuln/detail/CVE-2023-34093</a></li>
<li><a href="https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de">https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de</a></li>
<li><a href="https://github.com/strapi/strapi/releases/tag/v4.10.8">https://github.com/strapi/strapi/releases/tag/v4.10.8</a></li>
<li><a href="https://github.com/advisories/GHSA-chmr-rg2f-9jmf">https://github.com/advisories/GHSA-chmr-rg2f-9jmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chmr-rg2f-9jmf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:17:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodebb] Path traversal and code execution via prototype vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vh2g-6c4x-5hmp</id>
        <link href="https://github.com/advisories/GHSA-vh2g-6c4x-5hmp"/>
        <updated>2023-07-25T13:54:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to the use of the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">object destructuring assignment</a> syntax in the user export code path, combined with a path traversal vulnerability, a specially crafted payload could invoke the user export logic to arbitrarily execute javascript files on the local disk.</p>
<h3 id="patches">Patches</h3>
<p>Patched in v2.8.7</p>
<h3 id="workarounds">Workarounds</h3>
<p>Site maintainers can cherry pick ec58700f6dff8e5b4af1544f6205ec362b593092 into their codebase to patch the exploit.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NodeBB/NodeBB/security/advisories/GHSA-vh2g-6c4x-5hmp">https://github.com/NodeBB/NodeBB/security/advisories/GHSA-vh2g-6c4x-5hmp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26045">https://nvd.nist.gov/vuln/detail/CVE-2023-26045</a></li>
<li><a href="https://github.com/NodeBB/NodeBB/commit/ec58700f6dff8e5b4af1544f6205ec362b593092">https://github.com/NodeBB/NodeBB/commit/ec58700f6dff8e5b4af1544f6205ec362b593092</a></li>
<li><a href="https://github.com/advisories/GHSA-vh2g-6c4x-5hmp">https://github.com/advisories/GHSA-vh2g-6c4x-5hmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vh2g-6c4x-5hmp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-07-25T13:54:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ep_etherpad-lite] Etherpad Lite Access Restriction Bypass]]></title>
        <id>https://github.com/advisories/GHSA-mvmv-rq2j-97p2</id>
        <link href="https://github.com/advisories/GHSA-mvmv-rq2j-97p2"/>
        <updated>2023-07-24T19:55:01.000Z</updated>
        <content type="html"><![CDATA[<p><code>node/hooks/express/apicalls.js</code> in Etherpad Lite before v1.6.3 mishandles JSONP, which allows remote attackers to bypass intended access restrictions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6835">https://nvd.nist.gov/vuln/detail/CVE-2018-6835</a></li>
<li><a href="https://github.com/ether/etherpad-lite/commit/626e58cc5af1db3691b41fca7b06c28ea43141b1">https://github.com/ether/etherpad-lite/commit/626e58cc5af1db3691b41fca7b06c28ea43141b1</a></li>
<li><a href="https://github.com/ether/etherpad-lite/releases/tag/1.6.3">https://github.com/ether/etherpad-lite/releases/tag/1.6.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mvmv-rq2j-97p2">https://github.com/advisories/GHSA-mvmv-rq2j-97p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mvmv-rq2j-97p2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:53:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nuclide] Nuclide Improper Input Validation]]></title>
        <id>https://github.com/advisories/GHSA-r83x-wj75-v89r</id>
        <link href="https://github.com/advisories/GHSA-r83x-wj75-v89r"/>
        <updated>2023-07-21T23:24:46.000Z</updated>
        <content type="html"><![CDATA[<p>The hhvm-attach deep link handler in Nuclide did not properly sanitize the provided hostname parameter when rendering. As a result, a malicious URL could be used to render HTML and other content inside of the editor's context, which could potentially be chained to lead to code execution. This issue affected Nuclide prior to v0.290.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6333">https://nvd.nist.gov/vuln/detail/CVE-2018-6333</a></li>
<li><a href="https://github.com/facebook/nuclide/commit/65f6bbd683404be1bb569b8d1be84b5d4c74a324">https://github.com/facebook/nuclide/commit/65f6bbd683404be1bb569b8d1be84b5d4c74a324</a></li>
<li><a href="https://github.com/advisories/GHSA-r83x-wj75-v89r">https://github.com/advisories/GHSA-r83x-wj75-v89r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r83x-wj75-v89r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:32:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simditor] Simditor XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p9wj-wrrm-84m5</id>
        <link href="https://github.com/advisories/GHSA-p9wj-wrrm-84m5"/>
        <updated>2023-07-21T23:22:08.000Z</updated>
        <content type="html"><![CDATA[<p>Simditor v2.3.11 allows XSS via crafted use of <code>svg/onload=alert</code> in a TEXTAREA element, as demonstrated by Firefox 54.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6464">https://nvd.nist.gov/vuln/detail/CVE-2018-6464</a></li>
<li><a href="https://github.com/Heartway/simditor/blob/master/simditor.docx">https://github.com/Heartway/simditor/blob/master/simditor.docx</a></li>
<li><a href="https://github.com/advisories/GHSA-p9wj-wrrm-84m5">https://github.com/advisories/GHSA-p9wj-wrrm-84m5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9wj-wrrm-84m5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:28:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-inspector] Node.js Inspector RCE via DNS Rebinding]]></title>
        <id>https://github.com/advisories/GHSA-wq4c-wm6x-jw44</id>
        <link href="https://github.com/advisories/GHSA-wq4c-wm6x-jw44"/>
        <updated>2023-07-20T22:39:07.000Z</updated>
        <content type="html"><![CDATA[<p>The Node.js inspector, in 6.x and later is vulnerable to a DNS rebinding attack which could be exploited to perform remote code execution. An attack is possible from malicious websites open in a web browser on the same computer, or another computer with network access to the computer running the Node.js process. A malicious website could use a DNS rebinding attack to trick the web browser to bypass same-origin-policy checks and to allow HTTP connections to localhost or to hosts on the local network. If a Node.js process with the debug port active is running on localhost or on a host on the local network, the malicious website could connect to it as a debugger, and get full code execution access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7160">https://nvd.nist.gov/vuln/detail/CVE-2018-7160</a></li>
<li><a href="https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/">https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/</a></li>
<li><a href="https://support.f5.com/csp/article/K63025104?utm_source=f5support&amp;utm_medium=RSS">https://support.f5.com/csp/article/K63025104?utm_source=f5support&amp;utm_medium=RSS</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://github.com/advisories/GHSA-wq4c-wm6x-jw44">https://github.com/advisories/GHSA-wq4c-wm6x-jw44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq4c-wm6x-jw44</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:08:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-jose] Cisco node-jose improper validation of JWT signature]]></title>
        <id>https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</id>
        <link href="https://github.com/advisories/GHSA-jfxm-w8g2-4rcv"/>
        <updated>2023-07-20T18:45:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the Cisco node-jose open source library before 0.11.0 could allow an unauthenticated, remote attacker to re-sign tokens using a key that is embedded within the token. The vulnerability is due to node-jose following the JSON Web Signature (JWS) standard for JSON Web Tokens (JWTs). This standard specifies that a JSON Web Key (JWK) representing a public key can be embedded within the header of a JWS. This public key is then trusted for verification. An attacker could exploit this by forging valid JWS objects by removing the original signature, adding a new public key to the header, and then signing the object using the (attacker-owned) private key associated with the public key embedded in that JWS header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-0114">https://nvd.nist.gov/vuln/detail/CVE-2018-0114</a></li>
<li><a href="https://github.com/cisco/node-jose/blob/master/CHANGELOG.md">https://github.com/cisco/node-jose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/zi0Black/POC-CVE-2018-0114">https://github.com/zi0Black/POC-CVE-2018-0114</a></li>
<li><a href="https://tools.cisco.com/security/center/viewAlert.x?alertId=56326">https://tools.cisco.com/security/center/viewAlert.x?alertId=56326</a></li>
<li><a href="https://www.exploit-db.com/exploits/44324/">https://www.exploit-db.com/exploits/44324/</a></li>
<li><a href="https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445">https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445</a></li>
<li><a href="https://github.com/advisories/GHSA-jfxm-w8g2-4rcv">https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:17:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@feathersjs/transport-commons] Feathers socket handler allows abusing implicit toString]]></title>
        <id>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</id>
        <link href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9"/>
        <updated>2023-07-20T14:54:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Feathers socket handler did not catch invalid string conversion errors like:</p>
<pre><code class="language-ts">const message = `${{ toString: '' }}`
</code></pre>
<p>Causing the NodeJS process to crash when sending an unexpected Socket.io message like</p>
<pre><code class="language-ts">socket.emit('find', { toString: '' })
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released in</p>
<ul>
<li><code>v5.0.8</code> via #3241</li>
<li><code>v4.5.18</code> via #3242</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Since it is in the core Socket handling code upgrading to the latest version is necessary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">v5.0.8 Changelog</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">v4.5.18 Changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37899">https://nvd.nist.gov/vuln/detail/CVE-2023-37899</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3241">https://github.com/feathersjs/feathers/pull/3241</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3242">https://github.com/feathersjs/feathers/pull/3242</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8">https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c">https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19</a></li>
<li><a href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/advisories/GHSA-hhr9-rh25-hvf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-20T14:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@feathersjs/transport-commons] Feathers socket handler allows abusing implicit toString]]></title>
        <id>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</id>
        <link href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9"/>
        <updated>2023-07-20T14:54:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Feathers socket handler did not catch invalid string conversion errors like:</p>
<pre><code class="language-ts">const message = `${{ toString: '' }}`
</code></pre>
<p>Causing the NodeJS process to crash when sending an unexpected Socket.io message like</p>
<pre><code class="language-ts">socket.emit('find', { toString: '' })
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released in</p>
<ul>
<li><code>v5.0.8</code> via #3241</li>
<li><code>v4.5.18</code> via #3242</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Since it is in the core Socket handling code upgrading to the latest version is necessary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">v5.0.8 Changelog</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">v4.5.18 Changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37899">https://nvd.nist.gov/vuln/detail/CVE-2023-37899</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3241">https://github.com/feathersjs/feathers/pull/3241</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3242">https://github.com/feathersjs/feathers/pull/3242</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8">https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c">https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19</a></li>
<li><a href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/advisories/GHSA-hhr9-rh25-hvf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-20T14:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@feathersjs/socketio] Feathers socket handler allows abusing implicit toString]]></title>
        <id>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</id>
        <link href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9"/>
        <updated>2023-07-20T14:54:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Feathers socket handler did not catch invalid string conversion errors like:</p>
<pre><code class="language-ts">const message = `${{ toString: '' }}`
</code></pre>
<p>Causing the NodeJS process to crash when sending an unexpected Socket.io message like</p>
<pre><code class="language-ts">socket.emit('find', { toString: '' })
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released in</p>
<ul>
<li><code>v5.0.8</code> via #3241</li>
<li><code>v4.5.18</code> via #3242</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Since it is in the core Socket handling code upgrading to the latest version is necessary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">v5.0.8 Changelog</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">v4.5.18 Changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37899">https://nvd.nist.gov/vuln/detail/CVE-2023-37899</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3241">https://github.com/feathersjs/feathers/pull/3241</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3242">https://github.com/feathersjs/feathers/pull/3242</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8">https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c">https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19</a></li>
<li><a href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/advisories/GHSA-hhr9-rh25-hvf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-20T14:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@feathersjs/socketio] Feathers socket handler allows abusing implicit toString]]></title>
        <id>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</id>
        <link href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9"/>
        <updated>2023-07-20T14:54:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Feathers socket handler did not catch invalid string conversion errors like:</p>
<pre><code class="language-ts">const message = `${{ toString: '' }}`
</code></pre>
<p>Causing the NodeJS process to crash when sending an unexpected Socket.io message like</p>
<pre><code class="language-ts">socket.emit('find', { toString: '' })
</code></pre>
<h3 id="patches">Patches</h3>
<p>A fix has been released in</p>
<ul>
<li><code>v5.0.8</code> via #3241</li>
<li><code>v4.5.18</code> via #3242</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Since it is in the core Socket handling code upgrading to the latest version is necessary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">v5.0.8 Changelog</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">v4.5.18 Changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37899">https://nvd.nist.gov/vuln/detail/CVE-2023-37899</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3241">https://github.com/feathersjs/feathers/pull/3241</a></li>
<li><a href="https://github.com/feathersjs/feathers/pull/3242">https://github.com/feathersjs/feathers/pull/3242</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8">https://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8</a></li>
<li><a href="https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c">https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19">https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19</a></li>
<li><a href="https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19">https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19</a></li>
<li><a href="https://github.com/advisories/GHSA-hhr9-rh25-hvf9">https://github.com/advisories/GHSA-hhr9-rh25-hvf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhr9-rh25-hvf9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-20T14:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[traceroute] Node-Traceroute RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8j9v-qhp4-wv55</id>
        <link href="https://github.com/advisories/GHSA-8j9v-qhp4-wv55"/>
        <updated>2023-07-19T23:28:30.000Z</updated>
        <content type="html"><![CDATA[<p>The traceroute (aka node-traceroute) package through 1.0.0 for Node.js allows remote command injection via the host parameter. This occurs because the <code>Child.exec()</code> method, which is considered to be not entirely safe, is used. In particular, an OS command can be placed after a newline character.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-21268">https://nvd.nist.gov/vuln/detail/CVE-2018-21268</a></li>
<li><a href="https://github.com/jaw187/node-traceroute/commit/b99ee024a01a40d3d20a92ad3769cc78a3f6386f">https://github.com/jaw187/node-traceroute/commit/b99ee024a01a40d3d20a92ad3769cc78a3f6386f</a></li>
<li><a href="https://github.com/jaw187/node-traceroute/tags">https://github.com/jaw187/node-traceroute/tags</a></li>
<li><a href="https://medium.com/@shay_62828/shell-command-injection-through-traceroute-npm-package-a4cf7b6553e3">https://medium.com/@shay_62828/shell-command-injection-through-traceroute-npm-package-a4cf7b6553e3</a></li>
<li><a href="https://snyk.io/vuln/npm:traceroute:20160311">https://snyk.io/vuln/npm:traceroute:20160311</a></li>
<li><a href="https://www.linkedin.com/posts/op-innovate_shell-command-injection-through-traceroute-activity-6678956453086191616-Rcpy">https://www.linkedin.com/posts/op-innovate_shell-command-injection-through-traceroute-activity-6678956453086191616-Rcpy</a></li>
<li><a href="https://www.npmjs.com/advisories/1465">https://www.npmjs.com/advisories/1465</a></li>
<li><a href="https://www.op-c.net/2020/06/17/shell-command-injection-through-traceroute-npm-package/">https://www.op-c.net/2020/06/17/shell-command-injection-through-traceroute-npm-package/</a></li>
<li><a href="https://github.com/advisories/GHSA-8j9v-qhp4-wv55">https://github.com/advisories/GHSA-8j9v-qhp4-wv55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j9v-qhp4-wv55</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:21:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[irisnet-crypto] irisnet-crypto RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5fh8-x9xc-hxmc</id>
        <link href="https://github.com/advisories/GHSA-5fh8-x9xc-hxmc"/>
        <updated>2023-07-19T20:05:43.000Z</updated>
        <content type="html"><![CDATA[<p>In irisnet-crypto before 1.1.7 for IRISnet, the util/utils.js file allows code execution because of unsafe eval usage.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-9115">https://nvd.nist.gov/vuln/detail/CVE-2019-9115</a></li>
<li><a href="https://github.com/irisnet/irisnet-crypto/issues/60">https://github.com/irisnet/irisnet-crypto/issues/60</a></li>
<li><a href="https://github.com/dreamer-zq/irisnet-crypto/commit/7ea0e65ece9c059ad8cb1ccec8e4c849af58c48d">https://github.com/dreamer-zq/irisnet-crypto/commit/7ea0e65ece9c059ad8cb1ccec8e4c849af58c48d</a></li>
<li><a href="https://github.com/advisories/GHSA-5fh8-x9xc-hxmc">https://github.com/advisories/GHSA-5fh8-x9xc-hxmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5fh8-x9xc-hxmc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:08:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[joomla] Joomla! Object Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5m3w-rvvh-8fx6</id>
        <link href="https://github.com/advisories/GHSA-5m3w-rvvh-8fx6"/>
        <updated>2023-07-19T18:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Joomla! before 3.9.3. The phar:// stream wrapper can be used for object injection attacks because there is no protection mechanism (such as the TYPO3 PHAR stream wrapper) to prevent use of the phar:// handler for non .phar-files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-7743">https://nvd.nist.gov/vuln/detail/CVE-2019-7743</a></li>
<li><a href="https://developer.joomla.org/security-centre/770-20190206-core-implement-the-typo3-phar-stream-wrapper">https://developer.joomla.org/security-centre/770-20190206-core-implement-the-typo3-phar-stream-wrapper</a></li>
<li><a href="https://github.com/joomla/joomla-cms/issues/23907">https://github.com/joomla/joomla-cms/issues/23907</a></li>
<li><a href="https://web.archive.org/web/20210730211655/https://www.securityfocus.com/bid/107050">https://web.archive.org/web/20210730211655/https://www.securityfocus.com/bid/107050</a></li>
<li><a href="https://github.com/advisories/GHSA-5m3w-rvvh-8fx6">https://github.com/advisories/GHSA-5m3w-rvvh-8fx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m3w-rvvh-8fx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[component-flatten] component-flatten vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-g6r3-hhg9-qf58</id>
        <link href="https://github.com/advisories/GHSA-g6r3-hhg9-qf58"/>
        <updated>2023-07-18T23:54:18.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of component-flatten are vulnerable to Prototype Pollution. The a function could be tricked into adding or modifying properties of Object.prototype using a <code>__proto__</code> payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10794">https://nvd.nist.gov/vuln/detail/CVE-2019-10794</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-COMPONENTFLATTEN-548907">https://snyk.io/vuln/SNYK-JS-COMPONENTFLATTEN-548907</a></li>
<li><a href="https://github.com/advisories/GHSA-g6r3-hhg9-qf58">https://github.com/advisories/GHSA-g6r3-hhg9-qf58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6r3-hhg9-qf58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:09:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] Mongoose Prototype Pollution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9m93-w8w6-76hh</id>
        <link href="https://github.com/advisories/GHSA-9m93-w8w6-76hh"/>
        <updated>2023-07-18T22:46:18.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype Pollution in GitHub repository automattic/mongoose prior to 7.3.3, 6.11.3, and 5.13.20.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3696">https://nvd.nist.gov/vuln/detail/CVE-2023-3696</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d">https://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d</a></li>
<li><a href="https://huntr.dev/bounties/1eef5a72-f6ab-4f61-b31d-fc66f5b4b467">https://huntr.dev/bounties/1eef5a72-f6ab-4f61-b31d-fc66f5b4b467</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/e29578d2ec18a68aeb4717d66dd5eb66bae53de1">https://github.com/Automattic/mongoose/commit/e29578d2ec18a68aeb4717d66dd5eb66bae53de1</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2">https://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2</a></li>
<li><a href="https://github.com/Automattic/mongoose/releases/tag/7.3.3">https://github.com/Automattic/mongoose/releases/tag/7.3.3</a></li>
<li><a href="https://github.com/advisories/GHSA-9m93-w8w6-76hh">https://github.com/advisories/GHSA-9m93-w8w6-76hh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m93-w8w6-76hh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-07-17T03:30:20.000Z</published>
    </entry>
</feed>