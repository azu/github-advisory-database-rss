<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-10-23T17:08:22.464Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path]]></title>
        <id>https://github.com/advisories/GHSA-f825-f98c-gj3g</id>
        <link href="https://github.com/advisories/GHSA-f825-f98c-gj3g"/>
        <updated>2022-10-23T03:06:43.000Z</updated>
        <content type="html"><![CDATA[<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2564">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>
<li><a href="https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>
<li><a href="https://github.com/advisories/GHSA-f825-f98c-gj3g">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f825-f98c-gj3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-29T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ses] Hardening of TypedArrays with non-canonical numeric property names in SES]]></title>
        <id>https://github.com/advisories/GHSA-whpx-q3rq-w8jc</id>
        <link href="https://github.com/advisories/GHSA-whpx-q3rq-w8jc"/>
        <updated>2022-10-20T18:38:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>In Hardened JavaScript, programs can <code>harden</code> objects to safely share objects with co-tenant programs without risk of these other programs tampering with their API surface. Hardening does not guarantee that objects are pure or immutable, so a hardened <code>Map</code>, for example is superficially tamper-proof, but any party holding a reference to the object can both read and write its contents. Based on this precedent, and because <code>TypedArray</code> instances cannot be frozen with <code>Object.isFrozen</code>, <code>harden</code> does not <code>freeze</code> <code>TypedArrays</code> and instead makes them non-extensible and makes all non-indexed properties non-writable and non-configurable. This is consistent with the treatment of <code>Map</code> because the indexed properties represent mutable content and non-indexed properties represent the API.</p>
<p>Due to a defect in <code>harden</code>, properties that have names that parse as numbers but are not the same as the canonical representation of those numbers, as in <code>"+0"</code> and <code>""</code> which are both equivalent to their canonical number <code>"0"</code>,  remain writable after hardening.</p>
<p>Any program treating one of these properties as part of its API and relying on <code>harden</code> to prevent modifications would be vulnerable to an API pollution attack, affecting only instances shared by mutually suspicious parties.</p>
<p>Unlike a <code>Map</code>, a hardened <code>TypedArray</code> can only have numbers for content. Any program that is sharing hardened <code>TypedArrays</code> between co-tentant programs and relying on harden to only allow these programs to communicate exclusively by changing numbers within the bounds of the TypedArray, may inadvertently have arranged for a mechanism for a pair of third-parties to communicate arbitrary objects on these other properties.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>SES version 0.16.0 patches this issue, causing <code>harden</code> to recognize properties with non-canonical numeric representations and ensuring that these properties are non-configurable.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Users should avoid sharing <code>TypedArrays</code> between co-tenant programs and instead create wrapper objects that produce a read-only view of the underlying data. We allow <code>harden</code> to succeed for <code>TypedArrays</code> because the treatment is in fact consistent with the behavior of collections like <code>Map</code>, but all collections shared between co-tentant programs should probably be attenuated to either read- or write-only facets and probably close over only part of the content of the collection. However, the motivation for allowing <code>TypedArrays</code> to be hardened in practice is to allow certain legacy modules to function under Hardened JavaScript with LavaMoat, since they export <code>TypedArrays</code>, even though they would ideally export read-only facets of these.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Not at this time.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@agoric.com">security@agoric.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc">https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc</a></li>
<li><a href="https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5">https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5</a></li>
<li><a href="https://github.com/advisories/GHSA-whpx-q3rq-w8jc">https://github.com/advisories/GHSA-whpx-q3rq-w8jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whpx-q3rq-w8jc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-20T18:38:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[react-native-reanimated] react-native-reanimated vulnerable to ReDoS]]></title>
        <id>https://github.com/advisories/GHSA-2j79-8pqc-r7x6</id>
        <link href="https://github.com/advisories/GHSA-2j79-8pqc-r7x6"/>
        <updated>2022-10-20T18:28:20.000Z</updated>
        <content type="html"><![CDATA[<p>The package react-native-reanimated before 3.0.0-rc.1 is vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24373">https://nvd.nist.gov/vuln/detail/CVE-2022-24373</a></li>
<li><a href="https://github.com/software-mansion/react-native-reanimated/pull/3382">https://github.com/software-mansion/react-native-reanimated/pull/3382</a></li>
<li><a href="https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa">https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa</a></li>
<li><a href="https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1">https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507">https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507</a></li>
<li><a href="https://github.com/software-mansion/react-native-reanimated/commit/8a927904366fa2d02df7a11553f8b0aa93471279">https://github.com/software-mansion/react-native-reanimated/commit/8a927904366fa2d02df7a11553f8b0aa93471279</a></li>
<li><a href="https://github.com/software-mansion/react-native-reanimated/compare/2.9.1...2.10.0">https://github.com/software-mansion/react-native-reanimated/compare/2.9.1...2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-2j79-8pqc-r7x6">https://github.com/advisories/GHSA-2j79-8pqc-r7x6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j79-8pqc-r7x6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-01T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[minimatch] minimatch ReDoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f8q6-p94x-37v3</id>
        <link href="https://github.com/advisories/GHSA-f8q6-p94x-37v3"/>
        <updated>2022-10-20T18:21:04.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3517">https://nvd.nist.gov/vuln/detail/CVE-2022-3517</a></li>
<li><a href="https://github.com/grafana/grafana-image-renderer/issues/329">https://github.com/grafana/grafana-image-renderer/issues/329</a></li>
<li><a href="https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6">https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6</a></li>
<li><a href="https://github.com/nodejs/node/issues/42510">https://github.com/nodejs/node/issues/42510</a></li>
<li><a href="https://github.com/advisories/GHSA-f8q6-p94x-37v3">https://github.com/advisories/GHSA-f8q6-p94x-37v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f8q6-p94x-37v3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-18T12:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] Improper Input Validation in Automattic Mongoose]]></title>
        <id>https://github.com/advisories/GHSA-8687-vv9j-hgph</id>
        <link href="https://github.com/advisories/GHSA-8687-vv9j-hgph"/>
        <updated>2022-10-20T16:13:51.000Z</updated>
        <content type="html"><![CDATA[<p>Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding "_bsontype":"a" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-17426">https://nvd.nist.gov/vuln/detail/CVE-2019-17426</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c">https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c</a></li>
<li><a href="https://github.com/Automattic/mongoose/issues/8222">https://github.com/Automattic/mongoose/issues/8222</a></li>
<li><a href="https://github.com/Automattic/mongoose/commits/4.13.21">https://github.com/Automattic/mongoose/commits/4.13.21</a></li>
<li><a href="https://github.com/Automattic/mongoose/releases/tag/4.13.21">https://github.com/Automattic/mongoose/releases/tag/4.13.21</a></li>
<li><a href="https://github.com/advisories/GHSA-8687-vv9j-hgph">https://github.com/advisories/GHSA-8687-vv9j-hgph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8687-vv9j-hgph</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-22T20:19:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] Improper Input Validation in Automattic Mongoose]]></title>
        <id>https://github.com/advisories/GHSA-8687-vv9j-hgph</id>
        <link href="https://github.com/advisories/GHSA-8687-vv9j-hgph"/>
        <updated>2022-10-20T16:13:51.000Z</updated>
        <content type="html"><![CDATA[<p>Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding "_bsontype":"a" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-17426">https://nvd.nist.gov/vuln/detail/CVE-2019-17426</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c">https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c</a></li>
<li><a href="https://github.com/Automattic/mongoose/issues/8222">https://github.com/Automattic/mongoose/issues/8222</a></li>
<li><a href="https://github.com/Automattic/mongoose/commits/4.13.21">https://github.com/Automattic/mongoose/commits/4.13.21</a></li>
<li><a href="https://github.com/Automattic/mongoose/releases/tag/4.13.21">https://github.com/Automattic/mongoose/releases/tag/4.13.21</a></li>
<li><a href="https://github.com/advisories/GHSA-8687-vv9j-hgph">https://github.com/advisories/GHSA-8687-vv9j-hgph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8687-vv9j-hgph</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-22T20:19:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@keystone-6/core] Field-level access-control bypass for multiselect field]]></title>
        <id>https://github.com/advisories/GHSA-6mhr-52mv-6v6f</id>
        <link href="https://github.com/advisories/GHSA-6mhr-52mv-6v6f"/>
        <updated>2022-10-18T17:12:47.000Z</updated>
        <content type="html"><![CDATA[<h4 id="impact">Impact</h4>
<p><code>@keystone-6/core@2.2.0 || 2.3.0</code> users who are using the <code>multiselect</code> field, and provided field-level access control - are vulnerable to their field-level access control not being used.</p>
<p>List-level access control is <strong>NOT</strong> affected.</p>
<p>Field-level access control for fields other than <code>multiselect</code> are <strong>NOT</strong> affected.</p>
<p>Example, <strong>you are vulnerable if</strong> you are using field-level access control on a <code>multiselect</code> like the following:</p>
<pre><code class="language-ts">const yourList = list({
  access: {
    // this is list-level access control, this is NOT impacted
  },
  fields: {
    yourFieldName: multiselect({
      // this is field-level access control, for multiselect fields
      //   this is vulnerable
      access: {
        create: ({ session }) =&gt; session?.data.isAdmin,
        update: ({ session }) =&gt; session?.data.isAdmin,
      },
      options: [
        { value: 'apples', label: 'Apples' },
        { value: 'oranges', label: 'Oranges' },
      ],
      // ...
    }),
    // ...
  },
  // ...
});
</code></pre>
<h4 id="mitigation">Mitigation</h4>
<p>Please upgrade to <code>@keystone-6/core &gt;= 2.3.1</code>, where this vulnerability has been closed.</p>
<h4 id="workarounds">Workarounds</h4>
<p>If for some reason you cannot upgrade your dependencies, you should stop using the <code>multiselect</code> field.</p>
<h4 id="credits">Credits</h4>
<p>Thanks to <a href="https://github.com/marekryb">Marek R</a> for reporting and submitting the pull request to fix this problem.</p>
<p>If you have any questions around this security advisory, please don't hesitate to contact us at <a href="mailto:security@keystonejs.com">security@keystonejs.com</a>, or <a href="https://github.com/keystonejs/keystone/issues/new/choose">open an issue on GitHub</a>.</p>
<p>If you have a security flaw to report for any software in this repository, please see our <a href="https://github.com/keystonejs/keystone/blob/main/SECURITY.md">SECURITY policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/keystonejs/keystone/security/advisories/GHSA-6mhr-52mv-6v6f">https://github.com/keystonejs/keystone/security/advisories/GHSA-6mhr-52mv-6v6f</a></li>
<li><a href="https://github.com/advisories/GHSA-6mhr-52mv-6v6f">https://github.com/advisories/GHSA-6mhr-52mv-6v6f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mhr-52mv-6v6f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-18T17:12:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] parse-server crashes when receiving file download request with invalid byte range]]></title>
        <id>https://github.com/advisories/GHSA-h423-w6qv-2wj3</id>
        <link href="https://github.com/advisories/GHSA-h423-w6qv-2wj3"/>
        <updated>2022-10-18T16:08:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Parse Server crashes when a file download request is received with an invalid byte range.</p>
<h3 id="patches">Patches</h3>
<p>Improved parsing of the range parameter to properly handle invalid range requests.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3">GHSA-h423-w6qv-2wj3</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3">https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.17">https://github.com/parse-community/parse-server/releases/tag/4.10.17</a></li>
<li><a href="https://github.com/advisories/GHSA-h423-w6qv-2wj3">https://github.com/advisories/GHSA-h423-w6qv-2wj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h423-w6qv-2wj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-18T16:08:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[parse-server] parse-server crashes when receiving file download request with invalid byte range]]></title>
        <id>https://github.com/advisories/GHSA-h423-w6qv-2wj3</id>
        <link href="https://github.com/advisories/GHSA-h423-w6qv-2wj3"/>
        <updated>2022-10-18T16:08:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Parse Server crashes when a file download request is received with an invalid byte range.</p>
<h3 id="patches">Patches</h3>
<p>Improved parsing of the range parameter to properly handle invalid range requests.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3">GHSA-h423-w6qv-2wj3</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3">https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3</a></li>
<li><a href="https://github.com/parse-community/parse-server/releases/tag/4.10.17">https://github.com/parse-community/parse-server/releases/tag/4.10.17</a></li>
<li><a href="https://github.com/advisories/GHSA-h423-w6qv-2wj3">https://github.com/advisories/GHSA-h423-w6qv-2wj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h423-w6qv-2wj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-18T16:08:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom]]></title>
        <id>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</id>
        <link href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"/>
        <updated>2022-10-18T21:46:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="impact-1">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches-1">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds-1">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
<li>Add information to <a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37616">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>
<li><a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
<li><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-11T20:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom]]></title>
        <id>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</id>
        <link href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"/>
        <updated>2022-10-18T21:46:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="impact-1">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches-1">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds-1">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
<li>Add information to <a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37616">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>
<li><a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
<li><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-11T20:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-saml] Signature bypass via multiple root elements]]></title>
        <id>https://github.com/advisories/GHSA-5p8w-2mvw-38pv</id>
        <link href="https://github.com/advisories/GHSA-5p8w-2mvw-38pv"/>
        <updated>2022-10-14T19:48:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to node-saml v4.0.0-beta5 or newer. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable SAML authentication.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in the <a href="https://github.com/node-saml/node-saml/discussions">node-saml repo</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Felix Wilhelm of Google Project Zero</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/node-saml/security/advisories/GHSA-5p8w-2mvw-38pv">https://github.com/node-saml/node-saml/security/advisories/GHSA-5p8w-2mvw-38pv</a></li>
<li><a href="https://github.com/node-saml/node-saml/commit/c1f275c289c01921e58f5c70ce0fdbc5287e5fbe">https://github.com/node-saml/node-saml/commit/c1f275c289c01921e58f5c70ce0fdbc5287e5fbe</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39300">https://nvd.nist.gov/vuln/detail/CVE-2022-39300</a></li>
<li><a href="https://github.com/advisories/GHSA-5p8w-2mvw-38pv">https://github.com/advisories/GHSA-5p8w-2mvw-38pv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5p8w-2mvw-38pv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T22:05:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@node-saml/passport-saml] Signature bypass via multiple root elements]]></title>
        <id>https://github.com/advisories/GHSA-m974-647v-whv7</id>
        <link href="https://github.com/advisories/GHSA-m974-647v-whv7"/>
        <updated>2022-10-18T03:11:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable SAML authentication.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in the <a href="https://github.com/node-saml/node-saml/discussions">node-saml repo</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Felix Wilhelm of Google Project Zero</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>
<li><a href="https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>
<li><a href="https://github.com/node-saml/passport-saml/releases/tag/v3.2.2">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/advisories/GHSA-m974-647v-whv7">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m974-647v-whv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T22:05:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@node-saml/node-saml] Signature bypass via multiple root elements]]></title>
        <id>https://github.com/advisories/GHSA-m974-647v-whv7</id>
        <link href="https://github.com/advisories/GHSA-m974-647v-whv7"/>
        <updated>2022-10-18T03:11:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable SAML authentication.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in the <a href="https://github.com/node-saml/node-saml/discussions">node-saml repo</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Felix Wilhelm of Google Project Zero</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>
<li><a href="https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>
<li><a href="https://github.com/node-saml/passport-saml/releases/tag/v3.2.2">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/advisories/GHSA-m974-647v-whv7">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m974-647v-whv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T22:05:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-saml] Signature bypass via multiple root elements]]></title>
        <id>https://github.com/advisories/GHSA-m974-647v-whv7</id>
        <link href="https://github.com/advisories/GHSA-m974-647v-whv7"/>
        <updated>2022-10-18T03:11:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable SAML authentication.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in the <a href="https://github.com/node-saml/node-saml/discussions">node-saml repo</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Felix Wilhelm of Google Project Zero</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>
<li><a href="https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>
<li><a href="https://github.com/node-saml/passport-saml/releases/tag/v3.2.2">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/advisories/GHSA-m974-647v-whv7">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m974-647v-whv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T22:05:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[passport-saml] Signature bypass via multiple root elements]]></title>
        <id>https://github.com/advisories/GHSA-m974-647v-whv7</id>
        <link href="https://github.com/advisories/GHSA-m974-647v-whv7"/>
        <updated>2022-10-18T03:11:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable SAML authentication.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in the <a href="https://github.com/node-saml/node-saml/discussions">node-saml repo</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Felix Wilhelm of Google Project Zero</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>
<li><a href="https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>
<li><a href="https://github.com/node-saml/passport-saml/releases/tag/v3.2.2">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39299">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>
<li><a href="https://github.com/advisories/GHSA-m974-647v-whv7">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m974-647v-whv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T22:05:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[metro4] Cross site scripting in Metro UI]]></title>
        <id>https://github.com/advisories/GHSA-633r-r4p8-pw3w</id>
        <link href="https://github.com/advisories/GHSA-633r-r4p8-pw3w"/>
        <updated>2022-10-12T20:11:42.000Z</updated>
        <content type="html"><![CDATA[<p>Metro UI v4.4.0 to v4.5.1 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the Javascript function. User input is not properly sanitized before rendering in the <code>textarea</code> component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41376">https://nvd.nist.gov/vuln/detail/CVE-2022-41376</a></li>
<li><a href="https://alicangonullu.org/konu/138">https://alicangonullu.org/konu/138</a></li>
<li><a href="https://youtu.be/_wzGVpX54Rc">https://youtu.be/_wzGVpX54Rc</a></li>
<li><a href="https://github.com/advisories/GHSA-633r-r4p8-pw3w">https://github.com/advisories/GHSA-633r-r4p8-pw3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-633r-r4p8-pw3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-11T19:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apollo-server] The graphql-upload library included in Apollo Server 2 is vulnerable to CSRF mutations]]></title>
        <id>https://github.com/advisories/GHSA-2p3c-p3qw-69r4</id>
        <link href="https://github.com/advisories/GHSA-2p3c-p3qw-69r4"/>
        <updated>2022-10-12T14:15:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://www.npmjs.com/package/graphql-upload">graphql-upload</a> npm package can execute GraphQL operations contained in <code>content-type: multipart/form-data</code> POST requests. Because they are POST requests, they can contain GraphQL mutations. Because they use <code>content-type: multipart/form-data</code>, they can be "simple requests" which are not preflighted by browsers.</p>
<p>If your GraphQL server uses <code>graphql-upload</code> and uses <code>SameSite=None</code> cookies for authentication, then JS on any origin can cause browsers to send cookie-authenticated mutations to your GraphQL server, which will be executed without checking your CORS policy first. (The attack won't be able to see the response to the mutation if your CORS policy is set up properly, but the side effects of the mutation will still happen.)</p>
<p>Additionally, if your GraphQL server uses <code>graphql-upload</code> relies on network properties for security (whether by explicitly looking at the client's IP address or by only being available on a private network), then JS on any origin can cause browsers (which may be on a private network or have an allowed IP address) to send mutations to your GraphQL server, which will be executed without checking your CORS policy first. (This attack does not require your server to use cookies. It is in some cases prevented by some browsers such as Chrome.)</p>
<p>Apollo Server 2 bundled <code>graphql-upload</code> and enabled it by default, so by default, Apollo Server 2 servers are vulnerable to these CSRF attacks.  (Apollo Server 1 did not bundle <code>graphql-upload</code>. Apollo Server 3 no longer bundles <code>graphql-upload</code>, although AS3's docs do document how to manually integrate with <code>graphql-upload</code>.) It is enabled even if your server makes no use of the upload functionality.</p>
<p>If you are running Apollo Server 2 (older than v2.25.4) and do not specify <code>uploads: false</code> to <code>new ApolloServer</code>, then you are vulnerable to this CSRF mutation attack.</p>
<p>We recently introduced an opt-in CSRF prevention feature in Apollo Server 3.7.  This feature successfully protects against CSRF even if you have manually integrated your AS3.7 server with <code>graphql-upload</code>. However, this feature is not available for Apollo Server 2.</p>
<h3 id="patches">Patches</h3>
<p>If you are using Apollo Server 2 and do <em>not</em> actually use uploads in your schema (ie, the <code>Upload</code> scalar is not used as the argument to any field or in any input object definition, and you do not specify <code>uploads</code> to <code>new ApolloServer</code>), then upgrading to Apollo Server 2.25.4 will automatically disable <code>graphql-upload</code> in your server.  This will fix the CSRF mutation vulnerability.</p>
<p>Upgrading to v2.25.4 does still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations. To protect yourself against these potentially lower impact CSRF attack, we encourage upgrading to Apollo Server v3.7 and enabling CSRF prevention. See <a href="https://www.apollographql.com/docs/apollo-server/migration/">the Apollo Server 3 migration guide</a> and the <a href="https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf">CSRF prevention docs</a> for details.</p>
<p>If you are actively using the uploads feature with Apollo Server 2, then upgrading to v2.25.4 will not disable the feature and you will still be vulnerable. You should instead upgrade to v3.7 and enable the CSRF prevention feature.</p>
<p>If you are manually integrating the <code>graphql-upload</code> package with any version of Apollo Server (or any Node GraphQL server) and need to continue using the feature, then you must enable some sort of CSRF prevention feature to fix this vulnerability. We recommend the CSRF prevention feature in Apollo Server 3.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Instead of upgrading your Apollo Server 2 server, you can specify <code>uploads: false</code> to <code>new ApolloServer</code> to disable the <code>graphql-upload</code> integration and protect against CSRF mutations. (Only do this if you do not actually use the uploads feature in your server!) This will still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations; you need to upgrade to v3.7 and enable CSRF prevention to protect against these attacks.</p>
<h3 id="related-work">Related work</h3>
<ul>
<li><a href="https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64">PR adding a Security section to the GraphQL multipart request spec</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/apollographql/apollo-server/security/advisories/GHSA-2p3c-p3qw-69r4">https://github.com/apollographql/apollo-server/security/advisories/GHSA-2p3c-p3qw-69r4</a></li>
<li><a href="https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64">https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64</a></li>
<li><a href="https://github.com/apollographql/apollo-server/commit/82d44985ddca8e61557957d67f41e9c1a705a5ca">https://github.com/apollographql/apollo-server/commit/82d44985ddca8e61557957d67f41e9c1a705a5ca</a></li>
<li><a href="https://github.com/advisories/GHSA-2p3c-p3qw-69r4">https://github.com/advisories/GHSA-2p3c-p3qw-69r4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2p3c-p3qw-69r4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-12T14:15:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom]]></title>
        <id>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</id>
        <link href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"/>
        <updated>2022-10-18T21:46:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="impact-1">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches-1">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds-1">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
<li>Add information to <a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37616">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>
<li><a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
<li><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-11T20:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom]]></title>
        <id>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</id>
        <link href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"/>
        <updated>2022-10-18T21:46:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="impact-1">Impact</h3>
<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>
<h3 id="patches-1">Patches</h3>
<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>
<h3 id="workarounds-1">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@xmldom.org">security@xmldom.org</a></li>
<li>Add information to <a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37616">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>
<li><a href="https://github.com/xmldom/xmldom/issues/436">https://github.com/xmldom/xmldom/issues/436</a></li>
<li><a href="https://github.com/xmldom/xmldom/pull/437">https://github.com/xmldom/xmldom/pull/437</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>
<li><a href="https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9pgh-qqpf-7wqj">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-11T20:42:57.000Z</published>
    </entry>
</feed>