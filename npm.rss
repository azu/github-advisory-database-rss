<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2022-08-04T04:14:13.317Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[datatables] DataTable Vulnerable to Cross-Site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-4mv4-gmmf-q382</id>
        <link href="https://github.com/advisories/GHSA-4mv4-gmmf-q382"/>
        <updated>2022-08-03T22:59:16.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media/unit_testing/templates/6776.php.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Update to a version greater than 1.10.8. A <a href="https://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d">fix</a> appears in <a href="https://github.com/DataTables/DataTablesSrc/commits/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&amp;branch=1.10.10&amp;qualified_name=refs%2Ftags%2F1.10.10">version 1.10.10</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DataTables/DataTables/issues/602">https://github.com/DataTables/DataTables/issues/602</a></li>
<li><a href="https://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d">https://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d</a></li>
<li><a href="https://www.netsparker.com/cve-2015-6384-xss-vulnerability-identified-in-datatables/">https://www.netsparker.com/cve-2015-6384-xss-vulnerability-identified-in-datatables/</a></li>
<li><a href="https://www.npmjs.com/advisories/5">https://www.npmjs.com/advisories/5</a></li>
<li><a href="http://www.securityfocus.com/archive/1/archive/1/536437/100/0/threaded">http://www.securityfocus.com/archive/1/archive/1/536437/100/0/threaded</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6584">https://nvd.nist.gov/vuln/detail/CVE-2015-6584</a></li>
<li><a href="http://packetstormsecurity.com/files/133555/DataTables-1.10.8-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/133555/DataTables-1.10.8-Cross-Site-Scripting.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2015/Sep/37">http://seclists.org/fulldisclosure/2015/Sep/37</a></li>
<li><a href="http://www.securityfocus.com/archive/1/536437/100/0/threaded">http://www.securityfocus.com/archive/1/536437/100/0/threaded</a></li>
<li><a href="https://github.com/DataTables/DataTablesSrc/commits/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&amp;branch=1.10.10&amp;qualified_name=refs%2Ftags%2F1.10.10">https://github.com/DataTables/DataTablesSrc/commits/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&amp;branch=1.10.10&amp;qualified_name=refs%2Ftags%2F1.10.10</a></li>
<li><a href="https://github.com/advisories/GHSA-4mv4-gmmf-q382">https://github.com/advisories/GHSA-4mv4-gmmf-q382</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mv4-gmmf-q382</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2020-08-31T22:42:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[selenium-binaries] selenium-binaries downloads resources over HTTP]]></title>
        <id>https://github.com/advisories/GHSA-h4mc-r4f4-hcf4</id>
        <link href="https://github.com/advisories/GHSA-h4mc-r4f4-hcf4"/>
        <updated>2022-08-03T21:15:03.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>selenium-binaries</code> prior to 0.15.0 insecurely download an executable over an unencrypted HTTP connection. </p>
<p>In scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running <code>selenium-binaries</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>A fix for this vulnerability is available on the <code>master</code> branch of the repository as part of version 0.15.0.</p>
<p>Another mitigation currently available is to use an alternate package, such as <a href="https://www.npmjs.com/package/selenium-webdriver">selenium-webdriver</a>, the official selenium bindings for node.js. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10589">https://nvd.nist.gov/vuln/detail/CVE-2016-10589</a></li>
<li><a href="https://www.npmjs.com/advisories/175">https://www.npmjs.com/advisories/175</a></li>
<li><a href="https://github.com/spunjs/selenium-binaries/pull/33">https://github.com/spunjs/selenium-binaries/pull/33</a></li>
<li><a href="https://github.com/spunjs/selenium-binaries/commit/be37e82a3c43a4f1679d66cf9467085ec9994c47">https://github.com/spunjs/selenium-binaries/commit/be37e82a3c43a4f1679d66cf9467085ec9994c47</a></li>
<li><a href="https://www.huntr.dev/bounties/1-npm-selenium-binaries/">https://www.huntr.dev/bounties/1-npm-selenium-binaries/</a></li>
<li><a href="https://github.com/advisories/GHSA-h4mc-r4f4-hcf4">https://github.com/advisories/GHSA-h4mc-r4f4-hcf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4mc-r4f4-hcf4</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2019-02-18T23:34:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mysql] mysql Node.JS Module Vulnerable to Remote Memory Exposure]]></title>
        <id>https://github.com/advisories/GHSA-5f7m-mmpc-qhh4</id>
        <link href="https://github.com/advisories/GHSA-5f7m-mmpc-qhh4"/>
        <updated>2022-08-03T20:30:07.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>mysql</code> before 2.14.0 are vulnerable to remove memory exposure.</p>
<p>Affected versions of <code>mysql</code> package allocate and send an uninitialized memory over the network when a number is provided as a password.</p>
<p>Only <code>mysql</code> running on Node.js versions below 6.0.0 are affected due to a throw added in newer node.js versions.</p>
<p>Proof of Concept:</p>
<pre><code>require('mysql').createConnection({
  host: 'localhost',
  user: 'user',
  password : USERPROVIDEDINPUT,  // number
  database : 'my_db'
}).connect();
</code></pre>
<h2 id="recommendation">Recommendation</h2>
<p>Update to version 2.14.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mysqljs/mysql/commit/310c6a7d1b2e14b63b572dbfbfa10128f20c6d52">https://github.com/mysqljs/mysql/commit/310c6a7d1b2e14b63b572dbfbfa10128f20c6d52</a></li>
<li><a href="https://www.npmjs.com/advisories/602">https://www.npmjs.com/advisories/602</a></li>
<li><a href="https://github.com/mysqljs/mysql/commit/192fe45593ba5768534afb6f2154432ca67a5002">https://github.com/mysqljs/mysql/commit/192fe45593ba5768534afb6f2154432ca67a5002</a></li>
<li><a href="https://github.com/advisories/GHSA-5f7m-mmpc-qhh4">https://github.com/advisories/GHSA-5f7m-mmpc-qhh4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5f7m-mmpc-qhh4</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2019-05-23T09:27:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[metascraper] metascraper before v5.2.0 vulnerable to stored cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-8f64-q7jc-ccgp</id>
        <link href="https://github.com/advisories/GHSA-8f64-q7jc-ccgp"/>
        <updated>2022-08-03T20:09:44.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>metascraper</code> prior to 5.2.0 are vulnerable to stored cross-site scripting (XSS).</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 5.2.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-3773">https://nvd.nist.gov/vuln/detail/CVE-2018-3773</a></li>
<li><a href="https://hackerone.com/reports/309367">https://hackerone.com/reports/309367</a></li>
<li><a href="https://www.npmjs.com/advisories/603">https://www.npmjs.com/advisories/603</a></li>
<li><a href="https://github.com/microlinkhq/metascraper/pull/169">https://github.com/microlinkhq/metascraper/pull/169</a></li>
<li><a href="https://github.com/advisories/GHSA-8f64-q7jc-ccgp">https://github.com/advisories/GHSA-8f64-q7jc-ccgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8f64-q7jc-ccgp</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2018-08-08T22:25:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ircdkit] ircdkit vulnerable to Denial of Service due to unhandled connection end event]]></title>
        <id>https://github.com/advisories/GHSA-f7r3-p866-q9qr</id>
        <link href="https://github.com/advisories/GHSA-f7r3-p866-q9qr"/>
        <updated>2022-08-03T16:34:42.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>ircdkit</code> 1.0.3 and prior are vulnerable to a remote denial of service.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 1.0.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Twipped/ircdkit/issues/1">https://github.com/Twipped/ircdkit/issues/1</a></li>
<li><a href="https://github.com/Twipped/ircdkit/commit/f0cc6dc913ec17b499fa33a676bb72c624456f2c">https://github.com/Twipped/ircdkit/commit/f0cc6dc913ec17b499fa33a676bb72c624456f2c</a></li>
<li><a href="https://www.npmjs.com/advisories/735">https://www.npmjs.com/advisories/735</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-IRCDKIT-173688">https://snyk.io/vuln/SNYK-JS-IRCDKIT-173688</a></li>
<li><a href="https://github.com/Twipped/ircdkit/pull/2/commits/595ed02cde517fad57854d2ac2855a09a626e665">https://github.com/Twipped/ircdkit/pull/2/commits/595ed02cde517fad57854d2ac2855a09a626e665</a></li>
<li><a href="https://github.com/advisories/GHSA-f7r3-p866-q9qr">https://github.com/advisories/GHSA-f7r3-p866-q9qr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f7r3-p866-q9qr</uri>
        </author>
        <category label="LOW" term="severity"/>
        <published>2019-06-03T17:27:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ntesseract] ntesseract vulnerable to Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-w868-4576-rv24</id>
        <link href="https://github.com/advisories/GHSA-w868-4576-rv24"/>
        <updated>2022-08-03T03:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>The package ntesseract before 0.2.9 is vulnerable to Command Injection via lib/tesseract.js.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28446">https://nvd.nist.gov/vuln/detail/CVE-2020-28446</a></li>
<li><a href="https://github.com/taoyuan/ntesseract/commit/fcbc36f381798b4362179c0cdf9961b437c7b619">https://github.com/taoyuan/ntesseract/commit/fcbc36f381798b4362179c0cdf9961b437c7b619</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-NTESSERACT-1050982">https://security.snyk.io/vuln/SNYK-JS-NTESSERACT-1050982</a></li>
<li><a href="https://github.com/advisories/GHSA-w868-4576-rv24">https://github.com/advisories/GHSA-w868-4576-rv24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w868-4576-rv24</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-07-26T00:01:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yargs-parser] yargs-parser Vulnerable to Prototype Pollution]]></title>
        <id>https://github.com/advisories/GHSA-p9pc-299p-vxgp</id>
        <link href="https://github.com/advisories/GHSA-p9pc-299p-vxgp"/>
        <updated>2022-08-02T21:44:05.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of <code>yargs-parser</code> are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of <code>Object</code>, causing the addition or modification of an existing property that will exist on all objects.<br>Parsing the argument <code>--foo.__proto__.bar baz'</code> adds a <code>bar</code> property with value <code>baz</code> to all objects. This is only exploitable if attackers have control over the arguments being passed to <code>yargs-parser</code>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381">https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381</a></li>
<li><a href="https://www.npmjs.com/advisories/1500">https://www.npmjs.com/advisories/1500</a></li>
<li><a href="https://github.com/yargs/yargs-parser/commit/63810ca1ae1a24b08293a4d971e70e058c7a41e2">https://github.com/yargs/yargs-parser/commit/63810ca1ae1a24b08293a4d971e70e058c7a41e2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7608">https://nvd.nist.gov/vuln/detail/CVE-2020-7608</a></li>
<li><a href="https://github.com/yargs/yargs-parser/commit/1c417bd0b42b09c475ee881e36d292af4fa2cc36">https://github.com/yargs/yargs-parser/commit/1c417bd0b42b09c475ee881e36d292af4fa2cc36</a></li>
<li><a href="https://github.com/advisories/GHSA-p9pc-299p-vxgp">https://github.com/advisories/GHSA-p9pc-299p-vxgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9pc-299p-vxgp</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2020-09-04T18:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Electron Vulnerable to Code Execution by Re-Enabling Node.js Integration]]></title>
        <id>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</id>
        <link href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp"/>
        <updated>2022-08-02T18:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of electron 
A vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.</p>
<p>For the application to be impacted by this vulnerability it must meet all of these conditions</p>
<ul>
<li>Runs on Electron 1.7, 1.8, or a 2.0.0-beta</li>
<li>Allows execution of arbitrary remote code</li>
<li>Disables Node.js integration</li>
<li>Does not explicitly declare webviewTag: false in its webPreferences</li>
<li>Does not enable the nativeWindowOption option</li>
<li>Does not intercept new-window events and manually override event.newGuest without using the supplied options tag</li>
</ul>
<h2 id="recommendation">Recommendation</h2>
<p>Update to <code>electron</code> version 1.7.13, 1.8.4, or 2.0.0.beta.5 or later</p>
<p>If you are unable to update your Electron version can mitigate the vulnerability with the following code.</p>
<pre><code>app.on('web-contents-created', (event, win) =&gt; {
  win.on('new-window', (event, newURL, frameName, disposition,
                        options, additionalFeatures) =&gt; {
    if (!options.webPreferences) options.webPreferences = {};
    options.webPreferences.nodeIntegration = false;
    options.webPreferences.nodeIntegrationInWorker = false;
    options.webPreferences.webviewTag = false;
    delete options.webPreferences.preload;
  })
})

// and *IF* you don't use WebViews at all,
// you might also want
app.on('web-contents-created', (event, win) =&gt; {
  win.on('will-attach-webview', (event, webPreferences, params) =&gt; {
    event.preventDefault();
  })
})
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000136">https://nvd.nist.gov/vuln/detail/CVE-2018-1000136</a></li>
<li><a href="https://electronjs.org/blog/webview-fix">https://electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.npmjs.com/advisories/574">https://www.npmjs.com/advisories/574</a></li>
<li><a href="https://www.electronjs.org/blog/webview-fix">https://www.electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/">https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/</a></li>
<li><a href="https://github.com/electron/electron/pull/12271">https://github.com/electron/electron/pull/12271</a></li>
<li><a href="https://github.com/electron/electron/pull/12292">https://github.com/electron/electron/pull/12292</a></li>
<li><a href="https://github.com/electron/electron/pull/12294">https://github.com/electron/electron/pull/12294</a></li>
<li><a href="https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043">https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043</a></li>
<li><a href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp">https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2018-03-26T16:41:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Electron Vulnerable to Code Execution by Re-Enabling Node.js Integration]]></title>
        <id>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</id>
        <link href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp"/>
        <updated>2022-08-02T18:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of electron 
A vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.</p>
<p>For the application to be impacted by this vulnerability it must meet all of these conditions</p>
<ul>
<li>Runs on Electron 1.7, 1.8, or a 2.0.0-beta</li>
<li>Allows execution of arbitrary remote code</li>
<li>Disables Node.js integration</li>
<li>Does not explicitly declare webviewTag: false in its webPreferences</li>
<li>Does not enable the nativeWindowOption option</li>
<li>Does not intercept new-window events and manually override event.newGuest without using the supplied options tag</li>
</ul>
<h2 id="recommendation">Recommendation</h2>
<p>Update to <code>electron</code> version 1.7.13, 1.8.4, or 2.0.0.beta.5 or later</p>
<p>If you are unable to update your Electron version can mitigate the vulnerability with the following code.</p>
<pre><code>app.on('web-contents-created', (event, win) =&gt; {
  win.on('new-window', (event, newURL, frameName, disposition,
                        options, additionalFeatures) =&gt; {
    if (!options.webPreferences) options.webPreferences = {};
    options.webPreferences.nodeIntegration = false;
    options.webPreferences.nodeIntegrationInWorker = false;
    options.webPreferences.webviewTag = false;
    delete options.webPreferences.preload;
  })
})

// and *IF* you don't use WebViews at all,
// you might also want
app.on('web-contents-created', (event, win) =&gt; {
  win.on('will-attach-webview', (event, webPreferences, params) =&gt; {
    event.preventDefault();
  })
})
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000136">https://nvd.nist.gov/vuln/detail/CVE-2018-1000136</a></li>
<li><a href="https://electronjs.org/blog/webview-fix">https://electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.npmjs.com/advisories/574">https://www.npmjs.com/advisories/574</a></li>
<li><a href="https://www.electronjs.org/blog/webview-fix">https://www.electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/">https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/</a></li>
<li><a href="https://github.com/electron/electron/pull/12271">https://github.com/electron/electron/pull/12271</a></li>
<li><a href="https://github.com/electron/electron/pull/12292">https://github.com/electron/electron/pull/12292</a></li>
<li><a href="https://github.com/electron/electron/pull/12294">https://github.com/electron/electron/pull/12294</a></li>
<li><a href="https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043">https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043</a></li>
<li><a href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp">https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2018-03-26T16:41:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Electron Vulnerable to Code Execution by Re-Enabling Node.js Integration]]></title>
        <id>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</id>
        <link href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp"/>
        <updated>2022-08-02T18:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of electron 
A vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.</p>
<p>For the application to be impacted by this vulnerability it must meet all of these conditions</p>
<ul>
<li>Runs on Electron 1.7, 1.8, or a 2.0.0-beta</li>
<li>Allows execution of arbitrary remote code</li>
<li>Disables Node.js integration</li>
<li>Does not explicitly declare webviewTag: false in its webPreferences</li>
<li>Does not enable the nativeWindowOption option</li>
<li>Does not intercept new-window events and manually override event.newGuest without using the supplied options tag</li>
</ul>
<h2 id="recommendation">Recommendation</h2>
<p>Update to <code>electron</code> version 1.7.13, 1.8.4, or 2.0.0.beta.5 or later</p>
<p>If you are unable to update your Electron version can mitigate the vulnerability with the following code.</p>
<pre><code>app.on('web-contents-created', (event, win) =&gt; {
  win.on('new-window', (event, newURL, frameName, disposition,
                        options, additionalFeatures) =&gt; {
    if (!options.webPreferences) options.webPreferences = {};
    options.webPreferences.nodeIntegration = false;
    options.webPreferences.nodeIntegrationInWorker = false;
    options.webPreferences.webviewTag = false;
    delete options.webPreferences.preload;
  })
})

// and *IF* you don't use WebViews at all,
// you might also want
app.on('web-contents-created', (event, win) =&gt; {
  win.on('will-attach-webview', (event, webPreferences, params) =&gt; {
    event.preventDefault();
  })
})
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000136">https://nvd.nist.gov/vuln/detail/CVE-2018-1000136</a></li>
<li><a href="https://electronjs.org/blog/webview-fix">https://electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.npmjs.com/advisories/574">https://www.npmjs.com/advisories/574</a></li>
<li><a href="https://www.electronjs.org/blog/webview-fix">https://www.electronjs.org/blog/webview-fix</a></li>
<li><a href="https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/">https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/</a></li>
<li><a href="https://github.com/electron/electron/pull/12271">https://github.com/electron/electron/pull/12271</a></li>
<li><a href="https://github.com/electron/electron/pull/12292">https://github.com/electron/electron/pull/12292</a></li>
<li><a href="https://github.com/electron/electron/pull/12294">https://github.com/electron/electron/pull/12294</a></li>
<li><a href="https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043">https://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043</a></li>
<li><a href="https://github.com/advisories/GHSA-8xwg-wv7v-4vqp">https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xwg-wv7v-4vqp</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2018-03-26T16:41:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[electron] Electron webPreferences vulnerability can be used to perform remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-hv9c-qwqg-qj3v</id>
        <link href="https://github.com/advisories/GHSA-hv9c-qwqg-qj3v"/>
        <updated>2022-08-02T18:03:10.000Z</updated>
        <content type="html"><![CDATA[<p>GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and "nativeWindowOpen: true" or "sandbox: true" options, is affected by a webPreferences vulnerability that can be leveraged to perform remote code execution.</p>
<p>More information to determine if you are impacted can be found on the <a href="https://electronjs.org/blog/web-preferences-fix">electron blog</a>.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade Electron to &gt;=3.0.0-beta.7, &gt;=2.0.8, &gt;=1.8.8, or &gt;=1.7.16.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15685">https://nvd.nist.gov/vuln/detail/CVE-2018-15685</a></li>
<li><a href="https://electronjs.org/blog/web-preferences-fix">https://electronjs.org/blog/web-preferences-fix</a></li>
<li><a href="https://www.contrastsecurity.com/security-influencers/cve-2018-15685">https://www.contrastsecurity.com/security-influencers/cve-2018-15685</a></li>
<li><a href="https://www.npmjs.com/advisories/732">https://www.npmjs.com/advisories/732</a></li>
<li><a href="https://www.exploit-db.com/exploits/45272/">https://www.exploit-db.com/exploits/45272/</a></li>
<li><a href="https://github.com/electron/electron/commit/519a02d8d4d28e8a467acb40fb26172a80c9454f">https://github.com/electron/electron/commit/519a02d8d4d28e8a467acb40fb26172a80c9454f</a></li>
<li><a href="https://github.com/electron/electron/commit/80221e52d93a96ea704cb6748ead669c55cff504">https://github.com/electron/electron/commit/80221e52d93a96ea704cb6748ead669c55cff504</a></li>
<li><a href="https://github.com/electron/electron/commit/bab968ca776be28791e4dddfd50c86bd5fae62fa">https://github.com/electron/electron/commit/bab968ca776be28791e4dddfd50c86bd5fae62fa</a></li>
<li><a href="https://github.com/electron/electron/commit/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b">https://github.com/electron/electron/commit/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b</a></li>
<li><a href="https://github.com/advisories/GHSA-hv9c-qwqg-qj3v">https://github.com/advisories/GHSA-hv9c-qwqg-qj3v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hv9c-qwqg-qj3v</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2018-08-23T19:12:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] NextAuth.js before 4.10.3 and 3.29.10 sending verification requests (magic link) to unwanted emails]]></title>
        <id>https://github.com/advisories/GHSA-xv97-c62v-4587</id>
        <link href="https://github.com/advisories/GHSA-xv97-c62v-4587"/>
        <updated>2022-08-02T18:00:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>next-auth</code> users who are using the <code>EmailProvider</code> either in versions before <code>4.10.3</code> or <code>3.29.10</code> are affected.</p>
<p>If an attacker could forge a request that sent a comma-separated list of emails (eg.: <code>attacker@attacker.com,victim@victim.com</code>) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being <code>attacker@attacker.com,victim@victim.com</code>. This means that basic authorization like <code>email.endsWith("@victim.com")</code> in the <code>signIn</code> callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an <code>@attacker.com</code> address.</p>
<h3 id="patches">Patches</h3>
<p>We patched this vulnerability in <code>v4.10.3</code> and <code>v3.29.10</code> by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a <code>normalizeIdentifier</code> callback on the <code>EmailProvider</code> configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance)</p>
<p>To upgrade, run one of the following:</p>
<pre><code class="language-sh">npm i next-auth@latest
</code></pre>
<pre><code class="language-sh">yarn add next-auth@latest
</code></pre>
<pre><code class="language-sh">pnpm add next-auth@latest
</code></pre>
<p>(This will update to the latest v4 version, but you can change <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended. v3 is unmaintained.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>If for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:</p>
<pre><code class="language-ts">// pages/api/auth/[...nextauth].ts

function normalize(identifier) {
  // Get the first two elements only,
  // separated by `@` from user input.
  let [local, domain] = identifier.toLowerCase().trim().split("@")
  // The part before "@" can contain a ","
  // but we remove it on the domain part
  domain = domain.split(",")[0]
  return `${local}@${domain}`
}

export default async function handler(req, res) {
  if (req.body.email) req.body.email = normalize(req.body.email)
  return await NextAuth(req, res, {/* your options */ })
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>EmailProvider: <a href="https://next-auth.js.org/providers/email">https://next-auth.js.org/providers/email</a></li>
<li>Normalize the email address: <a href="https://next-auth.js.org/providers/email#normalizing-the-e-mail-address">https://next-auth.js.org/providers/email#normalizing-the-e-mail-address</a></li>
<li>Email syntax: <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">https://en.wikipedia.org/wiki/Email_address#Local-part</a></li>
<li><code>signIn</code> callback: <a href="https://next-auth.js.org/configuration/callbacks#sign-in-callback">https://next-auth.js.org/configuration/callbacks#sign-in-callback</a></li>
<li>Advanced Initialization: <a href="https://next-auth.js.org/configuration/initialization#advanced-initialization">https://next-auth.js.org/configuration/initialization#advanced-initialization</a></li>
<li><code>nodemailer</code> address: <a href="https://nodemailer.com/message/addresses">https://nodemailer.com/message/addresses</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any concerns, we request responsible disclosure, outlined here: <a href="https://next-auth.js.org/security#reporting-a-vulnerability">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>
<h3 id="timeline">Timeline</h3>
<p>The issue was reported 26th of July, a response was sent out in less than 1 hour and after identifying the issue a patch was published within 5 working days.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003">https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003</a></li>
<li><a href="https://github.com/advisories/GHSA-xv97-c62v-4587">https://github.com/advisories/GHSA-xv97-c62v-4587</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv97-c62v-4587</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-08-02T18:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next-auth] NextAuth.js before 4.10.3 and 3.29.10 sending verification requests (magic link) to unwanted emails]]></title>
        <id>https://github.com/advisories/GHSA-xv97-c62v-4587</id>
        <link href="https://github.com/advisories/GHSA-xv97-c62v-4587"/>
        <updated>2022-08-02T18:00:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>next-auth</code> users who are using the <code>EmailProvider</code> either in versions before <code>4.10.3</code> or <code>3.29.10</code> are affected.</p>
<p>If an attacker could forge a request that sent a comma-separated list of emails (eg.: <code>attacker@attacker.com,victim@victim.com</code>) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being <code>attacker@attacker.com,victim@victim.com</code>. This means that basic authorization like <code>email.endsWith("@victim.com")</code> in the <code>signIn</code> callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an <code>@attacker.com</code> address.</p>
<h3 id="patches">Patches</h3>
<p>We patched this vulnerability in <code>v4.10.3</code> and <code>v3.29.10</code> by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a <code>normalizeIdentifier</code> callback on the <code>EmailProvider</code> configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance)</p>
<p>To upgrade, run one of the following:</p>
<pre><code class="language-sh">npm i next-auth@latest
</code></pre>
<pre><code class="language-sh">yarn add next-auth@latest
</code></pre>
<pre><code class="language-sh">pnpm add next-auth@latest
</code></pre>
<p>(This will update to the latest v4 version, but you can change <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended. v3 is unmaintained.)</p>
<h3 id="workarounds">Workarounds</h3>
<p>If for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:</p>
<pre><code class="language-ts">// pages/api/auth/[...nextauth].ts

function normalize(identifier) {
  // Get the first two elements only,
  // separated by `@` from user input.
  let [local, domain] = identifier.toLowerCase().trim().split("@")
  // The part before "@" can contain a ","
  // but we remove it on the domain part
  domain = domain.split(",")[0]
  return `${local}@${domain}`
}

export default async function handler(req, res) {
  if (req.body.email) req.body.email = normalize(req.body.email)
  return await NextAuth(req, res, {/* your options */ })
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>EmailProvider: <a href="https://next-auth.js.org/providers/email">https://next-auth.js.org/providers/email</a></li>
<li>Normalize the email address: <a href="https://next-auth.js.org/providers/email#normalizing-the-e-mail-address">https://next-auth.js.org/providers/email#normalizing-the-e-mail-address</a></li>
<li>Email syntax: <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">https://en.wikipedia.org/wiki/Email_address#Local-part</a></li>
<li><code>signIn</code> callback: <a href="https://next-auth.js.org/configuration/callbacks#sign-in-callback">https://next-auth.js.org/configuration/callbacks#sign-in-callback</a></li>
<li>Advanced Initialization: <a href="https://next-auth.js.org/configuration/initialization#advanced-initialization">https://next-auth.js.org/configuration/initialization#advanced-initialization</a></li>
<li><code>nodemailer</code> address: <a href="https://nodemailer.com/message/addresses">https://nodemailer.com/message/addresses</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any concerns, we request responsible disclosure, outlined here: <a href="https://next-auth.js.org/security#reporting-a-vulnerability">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>
<h3 id="timeline">Timeline</h3>
<p>The issue was reported 26th of July, a response was sent out in less than 1 hour and after identifying the issue a patch was published within 5 working days.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587</a></li>
<li><a href="https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003">https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003</a></li>
<li><a href="https://github.com/advisories/GHSA-xv97-c62v-4587">https://github.com/advisories/GHSA-xv97-c62v-4587</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv97-c62v-4587</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-08-02T18:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[marked] Marked ReDoS due to email addresses being evaluated in quadratic time]]></title>
        <id>https://github.com/advisories/GHSA-xf5p-87ch-gxw2</id>
        <link href="https://github.com/advisories/GHSA-xf5p-87ch-gxw2"/>
        <updated>2022-08-02T17:43:58.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>marked</code> from 0.3.14 until 0.6.2 are vulnerable to Regular Expression Denial of Service. Email addresses may be evaluated in quadratic time, allowing attackers to potentially crash the node process due to resource exhaustion.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 0.6.2 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/markedjs/marked/commit/b15e42b67cec9ded8505e9d68bb8741ad7a9590d">https://github.com/markedjs/marked/commit/b15e42b67cec9ded8505e9d68bb8741ad7a9590d</a></li>
<li><a href="https://github.com/markedjs/marked/pull/1460">https://github.com/markedjs/marked/pull/1460</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-MARKED-174116">https://snyk.io/vuln/SNYK-JS-MARKED-174116</a></li>
<li><a href="https://www.npmjs.com/advisories/812">https://www.npmjs.com/advisories/812</a></li>
<li><a href="https://github.com/markedjs/marked/releases/tag/v0.6.2">https://github.com/markedjs/marked/releases/tag/v0.6.2</a></li>
<li><a href="https://github.com/advisories/GHSA-xf5p-87ch-gxw2">https://github.com/advisories/GHSA-xf5p-87ch-gxw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xf5p-87ch-gxw2</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2019-06-05T14:10:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[angular] AngularJS Cross-site Scripting due to failure to sanitize `xlink.href` attributes]]></title>
        <id>https://github.com/advisories/GHSA-r5fx-8r73-v86c</id>
        <link href="https://github.com/advisories/GHSA-r5fx-8r73-v86c"/>
        <updated>2022-08-02T16:22:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>angular</code> prior to 1.5.0-beta.1 are vulnerable to Cross-Site Scripting. The package fails to sanitize <code>xlink:href</code> attributes, which may allow attackers to execute arbitrary JavaScript in a victim's browser if the value is user-controlled.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 1.5.0-beta.1 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14863">https://nvd.nist.gov/vuln/detail/CVE-2019-14863</a></li>
<li><a href="https://github.com/angular/angular.js/pull/12524">https://github.com/angular/angular.js/pull/12524</a></li>
<li><a href="https://github.com/angular/angular.js/commit/35a21532b73d5bd84b4325211c563e6a3e2dde82">https://github.com/angular/angular.js/commit/35a21532b73d5bd84b4325211c563e6a3e2dde82</a></li>
<li><a href="https://github.com/angular/angular.js/commit/f33ce173c90736e349cf594df717ae3ee41e0f7a">https://github.com/angular/angular.js/commit/f33ce173c90736e349cf594df717ae3ee41e0f7a</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14863">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14863</a></li>
<li><a href="https://snyk.io/vuln/npm:angular:20150807">https://snyk.io/vuln/npm:angular:20150807</a></li>
<li><a href="https://www.npmjs.com/advisories/1453">https://www.npmjs.com/advisories/1453</a></li>
<li><a href="https://github.com/advisories/GHSA-r5fx-8r73-v86c">https://github.com/advisories/GHSA-r5fx-8r73-v86c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5fx-8r73-v86c</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2020-02-14T23:08:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[joplin] Joplin is vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-ww2v-frv5-pj5x</id>
        <link href="https://github.com/advisories/GHSA-ww2v-frv5-pj5x"/>
        <updated>2022-07-29T22:29:53.000Z</updated>
        <content type="html"><![CDATA[<p>Joplin v2.8.8 allows attackers to execute arbitrary commands via a crafted payload injected into the Node titles.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35131">https://nvd.nist.gov/vuln/detail/CVE-2022-35131</a></li>
<li><a href="https://github.com/laurent22/joplin/releases/tag/v2.9.1">https://github.com/laurent22/joplin/releases/tag/v2.9.1</a></li>
<li><a href="https://github.com/ly1g3/Joplin-CVE-2022-35131">https://github.com/ly1g3/Joplin-CVE-2022-35131</a></li>
<li><a href="https://github.com/laurent22/joplin/commit/e797ebb864fbf429a49b6d20e5779d0c9aa6c4d5">https://github.com/laurent22/joplin/commit/e797ebb864fbf429a49b6d20e5779d0c9aa6c4d5</a></li>
<li><a href="https://github.com/advisories/GHSA-ww2v-frv5-pj5x">https://github.com/advisories/GHSA-ww2v-frv5-pj5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ww2v-frv5-pj5x</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2022-07-26T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@ianwalter/merge] Prototype pollution in @ianwalter/merge]]></title>
        <id>https://github.com/advisories/GHSA-42m6-g935-5vmq</id>
        <link href="https://github.com/advisories/GHSA-42m6-g935-5vmq"/>
        <updated>2022-07-26T19:37:37.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package @ianwalter/merge are vulnerable to Prototype Pollution via the main (merge) function. @ianwalter/merge is <a href="https://github.com/ianwalter/merge/blob/master/README.md">deprecated</a> and the maintainer suggests using <a href="https://github.com/generates/generates/tree/main/packages/merger">@generates/merger</a> instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23397">https://nvd.nist.gov/vuln/detail/CVE-2021-23397</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-IANWALTERMERGE-1311022">https://security.snyk.io/vuln/SNYK-JS-IANWALTERMERGE-1311022</a></li>
<li><a href="https://github.com/advisories/GHSA-42m6-g935-5vmq">https://github.com/advisories/GHSA-42m6-g935-5vmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-42m6-g935-5vmq</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-26T00:01:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[file-type] file-type vulnerable to Infinite Loop via malformed MKV file]]></title>
        <id>https://github.com/advisories/GHSA-mhxj-85r3-2x55</id>
        <link href="https://github.com/advisories/GHSA-mhxj-85r3-2x55"/>
        <updated>2022-07-26T15:43:30.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the file-type package from 13.0.0 until 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36313">https://nvd.nist.gov/vuln/detail/CVE-2022-36313</a></li>
<li><a href="https://github.com/sindresorhus/file-type/releases/tag/v16.5.4">https://github.com/sindresorhus/file-type/releases/tag/v16.5.4</a></li>
<li><a href="https://github.com/sindresorhus/file-type/releases/tag/v17.1.3">https://github.com/sindresorhus/file-type/releases/tag/v17.1.3</a></li>
<li><a href="https://www.npmjs.com/package/file-type">https://www.npmjs.com/package/file-type</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47">https://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254">https://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12">https://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12</a></li>
<li><a href="https://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613">https://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613</a></li>
<li><a href="https://github.com/advisories/GHSA-mhxj-85r3-2x55">https://github.com/advisories/GHSA-mhxj-85r3-2x55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhxj-85r3-2x55</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-22T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[file-type] file-type vulnerable to Infinite Loop via malformed MKV file]]></title>
        <id>https://github.com/advisories/GHSA-mhxj-85r3-2x55</id>
        <link href="https://github.com/advisories/GHSA-mhxj-85r3-2x55"/>
        <updated>2022-07-26T15:43:30.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the file-type package from 13.0.0 until 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36313">https://nvd.nist.gov/vuln/detail/CVE-2022-36313</a></li>
<li><a href="https://github.com/sindresorhus/file-type/releases/tag/v16.5.4">https://github.com/sindresorhus/file-type/releases/tag/v16.5.4</a></li>
<li><a href="https://github.com/sindresorhus/file-type/releases/tag/v17.1.3">https://github.com/sindresorhus/file-type/releases/tag/v17.1.3</a></li>
<li><a href="https://www.npmjs.com/package/file-type">https://www.npmjs.com/package/file-type</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47">https://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254">https://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254</a></li>
<li><a href="https://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12">https://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12</a></li>
<li><a href="https://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613">https://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613</a></li>
<li><a href="https://github.com/advisories/GHSA-mhxj-85r3-2x55">https://github.com/advisories/GHSA-mhxj-85r3-2x55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhxj-85r3-2x55</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-22T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@openzeppelin/contracts-upgradeable] OpenZeppelin Contracts's SignatureChecker may revert on invalid EIP-1271 signers]]></title>
        <id>https://github.com/advisories/GHSA-4g63-c64m-25w9</id>
        <link href="https://github.com/advisories/GHSA-4g63-c64m-25w9"/>
        <updated>2022-07-25T19:32:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>SignatureChecker.isValidSignatureNow</code> is not expected to revert. However, an incorrect assumption about Solidity 0.8's <code>abi.decode</code> allows some cases to revert, given a target contract that doesn't implement EIP-1271 as expected.</p>
<p>The contracts that may be affected are those that use <code>SignatureChecker</code> to check the validity of a signature and handle invalid signatures in a way other than reverting. We believe this to be unlikely.</p>
<h3 id="patches">Patches</h3>
<p>The issue was patched in 4.7.1.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, or need assistance deploying the fix, email us at <a href="mailto:security@openzeppelin.com">security@openzeppelin.com</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4g63-c64m-25w9">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4g63-c64m-25w9</a></li>
<li><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31172">https://nvd.nist.gov/vuln/detail/CVE-2022-31172</a></li>
<li><a href="https://github.com/advisories/GHSA-4g63-c64m-25w9">https://github.com/advisories/GHSA-4g63-c64m-25w9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g63-c64m-25w9</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2022-07-21T22:33:37.000Z</published>
    </entry>
</feed>