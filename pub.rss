<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pub.rss</id>
    <title>Security Advisory for Dart packages hosted at pub.dev</title>
    <updated>2024-06-11T19:01:26.850Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apub"/>
    <subtitle>Security Advisory for Dart packages hosted at pub.dev on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[serverpod_auth_server] Serverpod improved security for stored password hashes]]></title>
        <id>https://github.com/advisories/GHSA-r75m-26cq-mjxc</id>
        <link href="https://github.com/advisories/GHSA-r75m-26cq-mjxc"/>
        <updated>2024-03-28T17:53:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<h3 id="improved-security-for-stored-password-hashes">Improved security for stored password hashes</h3>
<p>Serverpod now uses the OWASP, <a href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#introduction">source</a>, recommended Argon2Id password hash algorithm to store password hashes for the email authentication module.</p>
<p>Starting from Serverpod <code>1.2.6</code> all users that either creates an account or authenticates with the server will have their password stored using the safer algorithm. No changes are required from the developer to start storing passwords using the safer algorithm.</p>
<h3 id="why-did-we-change-how-passwords-are-stored">Why did we change how passwords are stored?</h3>
<p>An issue was identified with the old password hash algorithm that made it susceptible to rainbow attacks if the database was compromised.</p>
<p>It is strongly recommended to migrate your existing password hashes.</p>
<h3 id="migrate-existing-password-hashes">Migrate existing password hashes</h3>
<p>The email authentication module provides a helper method to migrate all the existing legacy password hashes in the database. Simply call  <code>Emails.migrateLegacyPasswordHashes(...)</code> with a session instance as an argument to migrate the password hashes.</p>
<p>The method is implemented as an idempotent operation and will yield the same result regardless of how many times it is called.</p>
<p>We recommend either implementing a web server route that can be called remotely or by calling the method as part of starting the server.</p>
<p>Following is example code for implementing a web server route.</p>
<details><summary><h4>Web server route code</h4></summary>

<pre><code class="language-dart">import 'dart:io';

import 'package:serverpod/serverpod.dart';
import 'package:serverpod_auth_server/module.dart' as auth;

class MigratePasswordsRoute extends Route {
  @override
  Future&lt;bool&gt; handleCall(Session session, HttpRequest request) async {
    request.response.writeln(
      'Migrating legacy passwords, check the server logs for progress updates.',
    );
    _migratePasswords(session);
    return true;
  }
}

Future&lt;void&gt; _migratePasswords(Session session) async {
  session.log('Starting to migrate passwords.');

  var totalMigratedPasswords = 0;
  while (true) {
    try {
      var entriesMigrated = await auth.Emails.migrateLegacyPasswordHashes(
        session,
        // Process 100 database entries at a time
        batchSize: 100,
        // Stop after 500 entries have been migrated
        maxMigratedEntries: 500,
      );

      totalMigratedPasswords += entriesMigrated;
      session.log(
        'Migrated $entriesMigrated password entries, total $totalMigratedPasswords.',
      );

      if (entriesMigrated == 0) break;

      // Delay to avoid overloading the database
      await Future.delayed(Duration(seconds: 1));
    } catch (e) {
      session.log('Error migrating passwords: $e');
    }
  }

  session.log('Finished migrating passwords.');
}
</code></pre>
</details>

<h3 id="how-we-migrate-existing-password-hashes">How we migrate existing password hashes</h3>
<p>Since password hashes canâ€™t be recalculated without knowledge of the plain text password, the method in the email authentication module applies the new algorithm to the already stored password hashes.</p>
<p>When the affected users later authenticate, their password hash will be calculated using both algorithms in tandem. If the authentication is accepted, the stored password hash will be updated to only use the new algorithm so that further authentication only needs to run the new algorithm.</p>
<h3 id="impact">Impact</h3>
<p>All versions of <code>serverpod_auth_server</code> pre <code>1.2.6</code></p>
<h3 id="patches">Patches</h3>
<p>Upgrading to version <code>1.2.6</code> resolves this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/serverpod/serverpod/security/advisories/GHSA-r75m-26cq-mjxc">https://github.com/serverpod/serverpod/security/advisories/GHSA-r75m-26cq-mjxc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29886">https://nvd.nist.gov/vuln/detail/CVE-2024-29886</a></li>
<li><a href="https://github.com/serverpod/serverpod/commit/a78b9e9f1de74d1300633a122b6cc0f064139ad6">https://github.com/serverpod/serverpod/commit/a78b9e9f1de74d1300633a122b6cc0f064139ad6</a></li>
<li><a href="https://github.com/advisories/GHSA-r75m-26cq-mjxc">https://github.com/advisories/GHSA-r75m-26cq-mjxc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r75m-26cq-mjxc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-28T17:53:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serverpod_client] Serverpod client accepts any certificate]]></title>
        <id>https://github.com/advisories/GHSA-h6x7-r5rg-x5fw</id>
        <link href="https://github.com/advisories/GHSA-h6x7-r5rg-x5fw"/>
        <updated>2024-03-28T17:53:27.000Z</updated>
        <content type="html"><![CDATA[<p>This bug bypassed the validation of TSL certificates on all none web HTTP clients in the <code>serverpod_client</code> package. Making them susceptible to a man in the middle attack against encrypted traffic between the client device and the server. </p>
<p>An attacker would need to be able to intercept the traffic and highjack the connection to the server for this vulnerability to be used. </p>
<h3 id="impact">Impact</h3>
<p>All versions of <code>serverpod_client</code> pre <code>1.2.6</code></p>
<h3 id="patches">Patches</h3>
<p>Upgrading to version <code>1.2.6</code> resolves this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/serverpod/serverpod/security/advisories/GHSA-h6x7-r5rg-x5fw">https://github.com/serverpod/serverpod/security/advisories/GHSA-h6x7-r5rg-x5fw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29887">https://nvd.nist.gov/vuln/detail/CVE-2024-29887</a></li>
<li><a href="https://github.com/serverpod/serverpod/commit/d55bf8d12967fc7955a875cb3e0f9693bd6d2c71">https://github.com/serverpod/serverpod/commit/d55bf8d12967fc7955a875cb3e0f9693bd6d2c71</a></li>
<li><a href="https://github.com/advisories/GHSA-h6x7-r5rg-x5fw">https://github.com/advisories/GHSA-h6x7-r5rg-x5fw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6x7-r5rg-x5fw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-28T17:53:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pubnub] pubnub Insufficient Entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5844-q3fc-56rh</id>
        <link href="https://github.com/advisories/GHSA-5844-q3fc-56rh"/>
        <updated>2024-05-20T22:01:30.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>
<p><strong>Note:</strong></p>
<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26154">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>
<li><a href="https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>
<li><a href="https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>
<li><a href="https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>
<li><a href="https://github.com/advisories/GHSA-5844-q3fc-56rh">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml</a></li>
<li><a href="https://github.com/pubnub/go/commit/428517fef5b901db7275d9f5a75eda89a4c28e08">https://github.com/pubnub/go/commit/428517fef5b901db7275d9f5a75eda89a4c28e08</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5844-q3fc-56rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dio] Duplicate Advisory: Improper Neutralization of CRLF Sequences in dio]]></title>
        <id>https://github.com/advisories/GHSA-jwpw-q68h-r678</id>
        <link href="https://github.com/advisories/GHSA-jwpw-q68h-r678"/>
        <updated>2023-10-05T17:32:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-9324-jv53-9cc8. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>The dio package prior to 5.0.0 for Dart allows CRLF injection if the attacker controls the HTTP method string, a different vulnerability than CVE-2020-35669.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31402">https://nvd.nist.gov/vuln/detail/CVE-2021-31402</a></li>
<li><a href="https://github.com/cfug/dio/issues/1130">https://github.com/cfug/dio/issues/1130</a></li>
<li><a href="https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984">https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984</a></li>
<li><a href="https://osv.dev/GHSA-jwpw-q68h-r678">https://osv.dev/GHSA-jwpw-q68h-r678</a></li>
<li><a href="https://github.com/advisories/GHSA-jwpw-q68h-r678">https://github.com/advisories/GHSA-jwpw-q68h-r678</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jwpw-q68h-r678</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:47:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dio] dio vulnerable to CRLF injection with HTTP method string]]></title>
        <id>https://github.com/advisories/GHSA-9324-jv53-9cc8</id>
        <link href="https://github.com/advisories/GHSA-9324-jv53-9cc8"/>
        <updated>2023-10-05T14:01:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The dio package 4.0.0 for Dart allows CRLF injection if the attacker controls the HTTP method string, a different vulnerability than CVE-2020-35669.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been resolved by <a href="https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984">https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984</a>, and included since v5.0.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Cherry-pick the commit to your own fork can resolves the vulberability too.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31402">https://nvd.nist.gov/vuln/detail/CVE-2021-31402</a></li>
<li><a href="https://osv.dev/GHSA-jwpw-q68h-r678">https://osv.dev/GHSA-jwpw-q68h-r678</a></li>
<li><a href="https://github.com/cfug/dio/issues/1130">https://github.com/cfug/dio/issues/1130</a></li>
<li><a href="https://github.com/cfug/dio/issues/1752">https://github.com/cfug/dio/issues/1752</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cfug/dio/security/advisories/GHSA-9324-jv53-9cc8">https://github.com/cfug/dio/security/advisories/GHSA-9324-jv53-9cc8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31402">https://nvd.nist.gov/vuln/detail/CVE-2021-31402</a></li>
<li><a href="https://github.com/cfug/dio/issues/1752">https://github.com/cfug/dio/issues/1752</a></li>
<li><a href="https://github.com/flutterchina/dio/issues/1130">https://github.com/flutterchina/dio/issues/1130</a></li>
<li><a href="https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984">https://github.com/cfug/dio/commit/927f79e93ba39f3c3a12c190624a55653d577984</a></li>
<li><a href="https://osv.dev/GHSA-jwpw-q68h-r678">https://osv.dev/GHSA-jwpw-q68h-r678</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-DIO-5891148">https://security.snyk.io/vuln/SNYK-PUB-DIO-5891148</a></li>
<li><a href="https://github.com/advisories/GHSA-9324-jv53-9cc8">https://github.com/advisories/GHSA-9324-jv53-9cc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9324-jv53-9cc8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-21T22:41:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[archive] Filename spoofing in archive]]></title>
        <id>https://github.com/advisories/GHSA-r285-q736-9v95</id>
        <link href="https://github.com/advisories/GHSA-r285-q736-9v95"/>
        <updated>2023-11-06T05:04:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Archive v3.3.7 allows attackers to spoof zip filenames which can lead to inconsistent filename parsing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39137">https://nvd.nist.gov/vuln/detail/CVE-2023-39137</a></li>
<li><a href="https://github.com/brendan-duncan/archive/issues/266">https://github.com/brendan-duncan/archive/issues/266</a></li>
<li><a href="https://blog.ostorlab.co/zip-packages-exploitation.html">https://blog.ostorlab.co/zip-packages-exploitation.html</a></li>
<li><a href="https://ostorlab.co/vulndb/advisory/OVE-2023-3">https://ostorlab.co/vulndb/advisory/OVE-2023-3</a></li>
<li><a href="https://www.rapid7.com/db/modules/exploit/windows/fileformat/winrar_name_spoofing/">https://www.rapid7.com/db/modules/exploit/windows/fileformat/winrar_name_spoofing/</a></li>
<li><a href="https://github.com/brendan-duncan/archive/commit/0d17b270a3c33d3bed56cadd9a43da7717ab11f4">https://github.com/brendan-duncan/archive/commit/0d17b270a3c33d3bed56cadd9a43da7717ab11f4</a></li>
<li><a href="https://github.com/advisories/GHSA-r285-q736-9v95">https://github.com/advisories/GHSA-r285-q736-9v95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r285-q736-9v95</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-31T00:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[archive] Path traversal in Archive]]></title>
        <id>https://github.com/advisories/GHSA-9v85-q87q-g4vg</id>
        <link href="https://github.com/advisories/GHSA-9v85-q87q-g4vg"/>
        <updated>2023-11-06T05:04:31.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Archive v3.3.7 allows attackers to execute a path traversal via extracting a crafted zip file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39139">https://nvd.nist.gov/vuln/detail/CVE-2023-39139</a></li>
<li><a href="https://github.com/brendan-duncan/archive/issues/265">https://github.com/brendan-duncan/archive/issues/265</a></li>
<li><a href="https://blog.ostorlab.co/zip-packages-exploitation.html">https://blog.ostorlab.co/zip-packages-exploitation.html</a></li>
<li><a href="https://ostorlab.co/vulndb/advisory/OVE-2023-5">https://ostorlab.co/vulndb/advisory/OVE-2023-5</a></li>
<li><a href="https://github.com/brendan-duncan/archive/commit/6de492385d72af044231c4163dff13a43d991c83">https://github.com/brendan-duncan/archive/commit/6de492385d72af044231c4163dff13a43d991c83</a></li>
<li><a href="https://github.com/brendan-duncan/archive/commit/edb0d480733a44d28ff3d5e4e2779153ba645ce7">https://github.com/brendan-duncan/archive/commit/edb0d480733a44d28ff3d5e4e2779153ba645ce7</a></li>
<li><a href="https://github.com/advisories/GHSA-9v85-q87q-g4vg">https://github.com/advisories/GHSA-9v85-q87q-g4vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v85-q87q-g4vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-31T00:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[personnummer] Duplicate of GHSA-4xh4-v2pq-jvhm]]></title>
        <id>https://github.com/advisories/GHSA-9f2c-xxfm-32mj</id>
        <link href="https://github.com/advisories/GHSA-9f2c-xxfm-32mj"/>
        <updated>2023-01-27T05:03:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of <a href="https://github.com/advisories/GHSA-4xh4-v2pq-jvhm">GHSA-4xh4-v2pq-jvhm</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>The personnummer implementation before 3.0.3 for Dart mishandles numbers in which the last four digits match the ^000[0-9]$ regular expression.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/personnummer/dart/security/advisories/GHSA-4xh4-v2pq-jvhm">https://github.com/personnummer/dart/security/advisories/GHSA-4xh4-v2pq-jvhm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22963">https://nvd.nist.gov/vuln/detail/CVE-2023-22963</a></li>
<li><a href="https://github.com/advisories/GHSA-4xh4-v2pq-jvhm">https://github.com/advisories/GHSA-4xh4-v2pq-jvhm</a></li>
<li><a href="https://github.com/advisories/GHSA-9f2c-xxfm-32mj">https://github.com/advisories/GHSA-9f2c-xxfm-32mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9f2c-xxfm-32mj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-01-11T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[personnummer] personnummer/dart vulnerable to Improper Input Validation]]></title>
        <id>https://github.com/advisories/GHSA-4xh4-v2pq-jvhm</id>
        <link href="https://github.com/advisories/GHSA-4xh4-v2pq-jvhm"/>
        <updated>2023-01-11T18:59:11.000Z</updated>
        <content type="html"><![CDATA[<p>This vulnerability was reported to the personnummer team in June 2020. The slow response was due to locked ownership of some of the affected packages, which caused delays to update packages prior to disclosure.</p>
<p>The vulnerability is determined to be low severity.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability impacts users who rely on the for last digits of personnummer to be a <em>real</em> personnummer.  </p>
<h3 id="patches">Patches</h3>
<p>The issue have been patched in all repositories. The following versions should be updated to as soon as possible:</p>
<p><a href="https://github.com/advisories/GHSA-qv8q-v995-72gr">C#</a> 3.0.2<br>D 3.0.1<br><a href="https://github.com/advisories/GHSA-4xh4-v2pq-jvhm">Dart</a> 3.0.3<br>Elixir 3.0.0<br><a href="https://github.com/advisories/GHSA-hv53-vf5m-8q94">Go</a> 3.0.1<br><a href="https://github.com/advisories/GHSA-q3vw-4jx3-rrr2">Java</a> 3.3.0<br><a href="https://github.com/advisories/GHSA-vpgc-7h78-gx8f">JavaScript</a> 3.1.0<br>Kotlin 1.1.0<br>Lua 3.0.1<br><a href="https://github.com/advisories/GHSA-2p6g-gjp8-ggg9">PHP</a> 3.0.2<br>Perl 3.0.0<br><a href="https://github.com/advisories/GHSA-rxq3-5249-8hgg">Python</a> 3.0.2<br><a href="https://github.com/advisories/GHSA-vp9c-fpxx-744v">Ruby</a> 3.0.1<br><a href="https://github.com/advisories/GHSA-28r9-pq4c-wp3c">Rust</a> 3.0.0<br>Scala 3.0.1<br>Swift 1.0.1  </p>
<p>If you are using any of the earlier packages, please update to latest.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The issue arrieses from the regular expression allowing the first three digits in the last four digits of the personnummer to be
000, which is invalid. To mitigate this without upgrading, a check on the last four digits can be made to make sure it's not
000x.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/personnummer/meta/issues">Personnummer Meta</a></li>
<li>Email us at <a href="mailto:security@personnummer.dev">Personnummer Email</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/personnummer/dart/security/advisories/GHSA-4xh4-v2pq-jvhm">https://github.com/personnummer/dart/security/advisories/GHSA-4xh4-v2pq-jvhm</a></li>
<li><a href="https://pub.dev/packages/personnummer">https://pub.dev/packages/personnummer</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22963">https://nvd.nist.gov/vuln/detail/CVE-2023-22963</a></li>
<li><a href="https://github.com/advisories/GHSA-4xh4-v2pq-jvhm">https://github.com/advisories/GHSA-4xh4-v2pq-jvhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xh4-v2pq-jvhm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-19T22:47:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[http] http before 0.13.3 vulnerable to header injection]]></title>
        <id>https://github.com/advisories/GHSA-4rgh-jx4f-qfcq</id>
        <link href="https://github.com/advisories/GHSA-4rgh-jx4f-qfcq"/>
        <updated>2023-01-27T05:03:00.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the http package before 0.13.3 for Dart. If the attacker controls the HTTP method and the app is using Request directly, it's possible to achieve CRLF injection in an HTTP request via HTTP header injection. This issue has been addressed in commit abb2bb182 by validating request methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35669">https://nvd.nist.gov/vuln/detail/CVE-2020-35669</a></li>
<li><a href="https://github.com/dart-lang/http/issues/511">https://github.com/dart-lang/http/issues/511</a></li>
<li><a href="https://github.com/dart-lang/http/blob/master/CHANGELOG.md#0133">https://github.com/dart-lang/http/blob/master/CHANGELOG.md#0133</a></li>
<li><a href="https://github.com/dart-lang/http/pull/512">https://github.com/dart-lang/http/pull/512</a></li>
<li><a href="https://github.com/dart-lang/http/commit/abb2bb182fbd7f03aafd1f889b902d7b3bdb8769">https://github.com/dart-lang/http/commit/abb2bb182fbd7f03aafd1f889b902d7b3bdb8769</a></li>
<li><a href="https://pub.dev/packages/http/changelog#0133">https://pub.dev/packages/http/changelog#0133</a></li>
<li><a href="https://github.com/advisories/GHSA-4rgh-jx4f-qfcq">https://github.com/advisories/GHSA-4rgh-jx4f-qfcq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rgh-jx4f-qfcq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:37:16.000Z</published>
    </entry>
</feed>