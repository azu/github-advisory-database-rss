<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-05-23T20:01:13.950Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.skyscreamer:nevado-jms] Command injection in nevado-jms]]></title>
        <id>https://github.com/advisories/GHSA-7gm3-mwjw-j53w</id>
        <link href="https://github.com/advisories/GHSA-7gm3-mwjw-j53w"/>
        <updated>2023-05-23T19:56:44.000Z</updated>
        <content type="html"><![CDATA[<p>Skyscreamer Open Source Nevado JMS v1.3.2 does not perform security checks when receiving messages. This allows attackers to execute arbitrary commands via supplying crafted data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31826">https://nvd.nist.gov/vuln/detail/CVE-2023-31826</a></li>
<li><a href="https://github.com/skyscreamer/nevado/issues/121">https://github.com/skyscreamer/nevado/issues/121</a></li>
<li><a href="https://github.com/skyscreamer/nevado/releases">https://github.com/skyscreamer/nevado/releases</a></li>
<li><a href="https://novysodope.github.io/2023/04/01/95/">https://novysodope.github.io/2023/04/01/95/</a></li>
<li><a href="http://nevado.skyscreamer.org/">http://nevado.skyscreamer.org/</a></li>
<li><a href="https://github.com/advisories/GHSA-7gm3-mwjw-j53w">https://github.com/advisories/GHSA-7gm3-mwjw-j53w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gm3-mwjw-j53w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T03:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.igniterealtime.openfire:xmppserver] Administration Console authentication bypass in openfire xmppserver]]></title>
        <id>https://github.com/advisories/GHSA-gw42-f939-fhvm</id>
        <link href="https://github.com/advisories/GHSA-gw42-f939-fhvm"/>
        <updated>2023-05-23T19:54:32.000Z</updated>
        <content type="html"><![CDATA[<p>An important security issue affects a range of versions of Openfire, the cross-platform real-time collaboration server based on the XMPP protocol that is created by the Ignite Realtime community. </p>
<h3 id="impact">Impact</h3>
<p>Openfire's administrative console (the Admin Console), a web-based application, was found to be vulnerable to a path traversal attack via the setup environment. This permitted an unauthenticated user to use the unauthenticated Openfire Setup Environment in an already configured Openfire environment to access restricted pages in the Openfire Admin Console reserved for administrative users.</p>
<h3 id="cause">Cause</h3>
<p>Path traversal protections were already in place to protect against exactly this kind of attack, but didn’t defend against certain non-standard URL encoding for UTF-16 characters, that were not supported by the embedded webserver that was in use at the time.</p>
<p>A later upgrade of the embedded webserver included support for non-standard URL encoding of UTF-16 characters. The path traversal protections in place in Openfire were not updated to include protection against this new encoding. </p>
<p>Openfire's API defines a mechanism for certain URLs to be excluded from web authentication (this, for example, is used for the login page). This mechanism allows for wildcards to be used, to allow for flexible URL pattern matching.</p>
<p>The combination of the wildcard pattern matching and path traversal vulnerability allows a malicious user to bypass authentication requirements for Admin Console pages.</p>
<h3 id="affected-versions">Affected versions</h3>
<p>This vulnerability affects all versions of Openfire that have been released since April 2015, starting with version 3.10.0. The problem has been patched in Openfire release 4.7.5 and 4.6.8, and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).</p>
<h3 id="problem-reproduction">Problem Reproduction</h3>
<p>To test if an instance of Openfire is affected, follow these steps. Open a browser in incognito mode, or otherwise ensure that there is no authenticated session with the Openfire admin console. Open the following URL (possibly modified for the hostname of the server that is running Openfire):</p>
<p><code>http://localhost:9090/setup/setup-s/%u002e%u002e/%u002e%u002e/log.jsp</code></p>
<p>If this shows part of the openfire logfiles, then the instance of Openfire is affected by this vulnerability. Note that different versions of Openfire will show a different layout. Newer versions of Openfire can be expected to show log files on a dark background, while older versions will show a largely white page. (Depending on the content of the log file, this page might be empty, apart from a header!)</p>
<p>If there's a redirect to the login page, the instance is likely unaffected.</p>
<h3 id="problem-resolution">Problem Resolution</h3>
<p>The problem has been patched in <a href="https://www.igniterealtime.org/downloads/#openfire">Openfire release 4.7.5 and 4.6.8</a>, and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).</p>
<ul>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, Path Traversal pattern detection has been improved to include detection of non-standard URL encodings, preventing any non UTF-8 characters.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, a new configuration property (<code>adminConsole.access.allow-wildcards-in-excludes</code>) is introduced that controls the permissibility of using wildcards in URL-patterns that define exclusions to authentication.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, the existing value that uses a wildcard in URL-patterns that define exclusions to authentication has been replaced by values that do not depend on a wildcard.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, Setup-specific URL-patterns that define exclusions to authentication are no longer active after the setup process has finished.</li>
<li>In Openfire 4.8.0, the embedded webserver will be updated to a version that no longer supports the non-standard URL encoding of UTF-16 characters.</li>
<li>In Openfire 4.8.0, the embedded webserver that serves the Openfire administrative console will bind to the loopback network interface by default.</li>
</ul>
<p>Be aware that the new configuration properties can interfere with the functionality of certain Openfire plugins. This is especially true for plugins that bind a (web)endpoint to the embedded webserver that serves the Openfire administrative console, like current versions of the REST API plugin do. For these plugins to remain functional and/or reachable, it might be required to toggle the property <code>adminConsole.access.allow-wildcards-in-excludes</code> to <code>true</code>, and to avoid binding the embedded webserver to the loopback network interface only.</p>
<p>When your server uses older versions of the following plugins, make sure to upgrade them:</p>
<ul>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar">Random Avatar plugin</a>, update to version 1.1.0 or later.</li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring">Monitoring Service plugin</a>, update to version 2.5.0 or later.</li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload">HTTP File Upload plugin</a>, update to version 1.3.0 or later.</li>
</ul>
<h3 id="mitigation">Mitigation</h3>
<p>If an Openfire upgrade isn’t available for your release, or isn’t quickly actionable, you can take any of the following steps to mitigate the risk for your Openfire environment.</p>
<p>Be aware: through Openfire plugins, the effectiveness of some mitigations listed below can be reduced, while other mitigations might affect the functionality of plugins. Particular care should be taken when using the Monitoring Service plugin, REST API plugin, User Service plugin and/or Random Avatar plugin.</p>
<h4 id="restrict-network-access">Restrict network access</h4>
<p>Use network security measures (network ACLs and/or firewalls, VPNs) to ensure only trusted members of your community have access to the Openfire Admin Console. As a general rule, never expose the Openfire Admin Console to the general internet.</p>
<p>Examples:</p>
<ul>
<li>On a linux machine running <code>ufw</code>, deny ports 9090 and 9091 on non-loopback interfaces</li>
<li>On a Windows machine, restrict the rules that open ports 9090 and 9091 to only allow traffic from the IPv4 and/or IPv6 loopback addresses</li>
<li>On AWS cloud infrastructure, use EC2 Security Groups to restrict ports 9090 and 9091 to trusted IP addresses. If the trusted range is necessarily too broad, consider opening and closing the ports only as necessary</li>
<li>If using Docker, instead of <code>docker run ... -p 5222:5222 -p 9090:9090 -p 9091:9091 openfire</code> prevent remote access to the Admin Console with <code>docker run ... -p 5222:5222 -p 127.0.0.1:9090:9090 -p 127.0.0.1:9091:9091 openfire</code></li>
</ul>
<h4 id="modify-runtime-configuration-file">Modify runtime configuration file</h4>
<p>To close the avenue of potential attack, a runtime configuration file of Openfire can be modified.</p>
<p>In Openfire's installation directory, find the file <code>plugins/admin/webapp/WEB-INF/web.xml</code>. After creating a backup of this file, edit the original file.</p>
<p>The content of this file is XML. Find a <code>&lt;filter&gt;</code> element, that contains the <code>&lt;filter-name&gt;AuthCheck&lt;/filter-name&gt;</code> child element. Depending on your version of Openfire, it will look similar to this:</p>
<pre><code class="language-xml">&lt;filter&gt;
    &lt;filter-name&gt;AuthCheck&lt;/filter-name&gt;
    &lt;filter-class&gt;org.jivesoftware.admin.AuthCheckFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;excludes&lt;/param-name&gt;
        &lt;param-value&gt;
            login.jsp,index.jsp?logout=true,setup/index.jsp,setup/setup-*,.gif,.png,error-serverdown.jsp,loginToken.jsp
        &lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
</code></pre>
<p>The value inside of the <code>param-value</code> element is a comma-separated list of values. From this list, remove all <code>*</code> (asterisk) characters.</p>
<p>Save the file, and restart Openfire for the change to take effect.</p>
<p>Note that no guarantees can be given that this runtime configuration change persists over time. Ensure to monitor the presence of the fix. It is recommended to upgrade to a safe version of Openfire as soon as possible.</p>
<p>A side-effect of this change is that the Openfire web-based setup wizard will not function properly (functionality can be restored by reverting the change). This wizard is typically used only when initially installing Openfire.</p>
<h4 id="bind-admin-console-to-loopback-interface">Bind admin console to loopback interface</h4>
<p>The Openfire admin console is a web-based application. By default, the corresponding webserver (that is embedded in Openfire) binds to all network interfaces of the host that it is running on.</p>
<p>The admin console can be configured to bind to a specific network interface. This will prevent it from being accessed through other network interfaces. By configuring the admin console to bind to the local loopback interface, it is accessible only to users on the server itself. This reduces the avenue of attack.</p>
<p>Note that several Openfire plugins expose part or all of their functionality through the admin console webserver. The REST API plugin, for example, serves its endpoints via this webserver. Availability of this functionality will be affected by binding the webserver to a specific network interface.</p>
<p>To bind the webserver of the Openfire admin console to a specific network interface, the 'openfire.xml' configuration file can be used.</p>
<p>In Openfire's installation directory, locate the file <code>conf/openfire.xml</code>. After creating a backup of this file, edit the original file.</p>
<p>The content of this file is XML. Find the <code>&lt;adminConsole&gt;</code> element that is a direct child element of the root <code>&lt;jive&gt;</code> element. Add a new element, named <code>&lt;interface&gt;</code> as a child element of <code>&lt;adminConsole&gt;</code>. The value of the <code>&lt;interface&gt;</code> element should be the name of the loopback interface or interface address. Setting value to <code>127.0.0.1</code> works on all tested environments (using values like  <code>lo</code> on most Linux systems or <code>lo0</code> on macOS will have the same effect).</p>
<p>The resulting fragment of the <code>openfire.xml</code> file will look similar to this:</p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jive&gt;
  &lt;adminConsole&gt;
      &lt;interface&gt;127.0.0.1&lt;/interface&gt;
      &lt;port&gt;9090&lt;/port&gt;
      &lt;securePort&gt;9091&lt;/securePort&gt;
  &lt;/adminConsole&gt;

  ...
</code></pre>
<p>Save the file, and restart Openfire for the change to take effect.</p>
<h4 id="use-authfiltersanitizer-plugin">Use AuthFilterSanitizer plugin</h4>
<p>The Ignite Realtime community has made available a new plugin, called the AuthFilterSanitizer plugin. The plugin can be installed from the Openfire admin console, or can be downloaded from <a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer">the plugin's archive page</a> on the IgniteRealtime.org community website.</p>
<p>This plugin periodically removes entries for Openfire's authentication filter that are susceptible to abuse, closing the avenue of potential attack.</p>
<p>Note that this plugin might interfere with functionality that depends on the abuse-susceptible entries in the authentication filter that might be provided by plugins.</p>
<h3 id="credit">Credit</h3>
<p>This issue was originally reported by Siebene@ who has our gratitude for the responsible and detailed disclosure of the issue! </p>
<p>We are grateful for the resources made available by Surevine ltd. They were instrumental in addressing the issue listed in this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.igniterealtime.org/">Ignite Realtime community site</a></li>
<li><a href="https://www.igniterealtime.org/downloads/#openfire">Openfire releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer">Openfire AuthFilter Sanitizer plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload">Openfire HTTP File Upload plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring">Openfire Monitoring Service plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar">Openfire Random Avatar plugin releases download page</a></li>
<li><a href="https://owasp.org/www-community/attacks/Path_Traversal">OWASP: Path Traversal</a></li>
<li><a href="https://en.wikipedia.org/wiki/URL_encoding#Non-standard_implementations">Wikipedia: URL encoding, section 'Non-standard implementations'</a></li>
<li><a href="https://igniterealtime.atlassian.net/browse/OF-2595">Issue OF-2595 in Openfire's issue tracker</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34429">Jetty CVE-2021-34429</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm">https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/2ac00a1ff42f5d3547ef58e21f8cdec992bfcf97">https://github.com/igniterealtime/Openfire/commit/2ac00a1ff42f5d3547ef58e21f8cdec992bfcf97</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/71f3def2adeaac62729cf544b645c6819c3d9868">https://github.com/igniterealtime/Openfire/commit/71f3def2adeaac62729cf544b645c6819c3d9868</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/a3b5ebd5032ff7be9d3ada5bf52bea2df96ec881">https://github.com/igniterealtime/Openfire/commit/a3b5ebd5032ff7be9d3ada5bf52bea2df96ec881</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/releases/tag/v4.6.8">https://github.com/igniterealtime/Openfire/releases/tag/v4.6.8</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/releases/tag/v4.7.5">https://github.com/igniterealtime/Openfire/releases/tag/v4.7.5</a></li>
<li><a href="https://igniterealtime.atlassian.net/browse/OF-2595">https://igniterealtime.atlassian.net/browse/OF-2595</a></li>
<li><a href="https://github.com/advisories/GHSA-gw42-f939-fhvm">https://github.com/advisories/GHSA-gw42-f939-fhvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw42-f939-fhvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.igniterealtime.openfire:xmppserver] Administration Console authentication bypass in openfire xmppserver]]></title>
        <id>https://github.com/advisories/GHSA-gw42-f939-fhvm</id>
        <link href="https://github.com/advisories/GHSA-gw42-f939-fhvm"/>
        <updated>2023-05-23T19:54:32.000Z</updated>
        <content type="html"><![CDATA[<p>An important security issue affects a range of versions of Openfire, the cross-platform real-time collaboration server based on the XMPP protocol that is created by the Ignite Realtime community. </p>
<h3 id="impact">Impact</h3>
<p>Openfire's administrative console (the Admin Console), a web-based application, was found to be vulnerable to a path traversal attack via the setup environment. This permitted an unauthenticated user to use the unauthenticated Openfire Setup Environment in an already configured Openfire environment to access restricted pages in the Openfire Admin Console reserved for administrative users.</p>
<h3 id="cause">Cause</h3>
<p>Path traversal protections were already in place to protect against exactly this kind of attack, but didn’t defend against certain non-standard URL encoding for UTF-16 characters, that were not supported by the embedded webserver that was in use at the time.</p>
<p>A later upgrade of the embedded webserver included support for non-standard URL encoding of UTF-16 characters. The path traversal protections in place in Openfire were not updated to include protection against this new encoding. </p>
<p>Openfire's API defines a mechanism for certain URLs to be excluded from web authentication (this, for example, is used for the login page). This mechanism allows for wildcards to be used, to allow for flexible URL pattern matching.</p>
<p>The combination of the wildcard pattern matching and path traversal vulnerability allows a malicious user to bypass authentication requirements for Admin Console pages.</p>
<h3 id="affected-versions">Affected versions</h3>
<p>This vulnerability affects all versions of Openfire that have been released since April 2015, starting with version 3.10.0. The problem has been patched in Openfire release 4.7.5 and 4.6.8, and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).</p>
<h3 id="problem-reproduction">Problem Reproduction</h3>
<p>To test if an instance of Openfire is affected, follow these steps. Open a browser in incognito mode, or otherwise ensure that there is no authenticated session with the Openfire admin console. Open the following URL (possibly modified for the hostname of the server that is running Openfire):</p>
<p><code>http://localhost:9090/setup/setup-s/%u002e%u002e/%u002e%u002e/log.jsp</code></p>
<p>If this shows part of the openfire logfiles, then the instance of Openfire is affected by this vulnerability. Note that different versions of Openfire will show a different layout. Newer versions of Openfire can be expected to show log files on a dark background, while older versions will show a largely white page. (Depending on the content of the log file, this page might be empty, apart from a header!)</p>
<p>If there's a redirect to the login page, the instance is likely unaffected.</p>
<h3 id="problem-resolution">Problem Resolution</h3>
<p>The problem has been patched in <a href="https://www.igniterealtime.org/downloads/#openfire">Openfire release 4.7.5 and 4.6.8</a>, and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).</p>
<ul>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, Path Traversal pattern detection has been improved to include detection of non-standard URL encodings, preventing any non UTF-8 characters.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, a new configuration property (<code>adminConsole.access.allow-wildcards-in-excludes</code>) is introduced that controls the permissibility of using wildcards in URL-patterns that define exclusions to authentication.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, the existing value that uses a wildcard in URL-patterns that define exclusions to authentication has been replaced by values that do not depend on a wildcard.</li>
<li>In Openfire 4.6.8, 4.7.5 and 4.8.0, Setup-specific URL-patterns that define exclusions to authentication are no longer active after the setup process has finished.</li>
<li>In Openfire 4.8.0, the embedded webserver will be updated to a version that no longer supports the non-standard URL encoding of UTF-16 characters.</li>
<li>In Openfire 4.8.0, the embedded webserver that serves the Openfire administrative console will bind to the loopback network interface by default.</li>
</ul>
<p>Be aware that the new configuration properties can interfere with the functionality of certain Openfire plugins. This is especially true for plugins that bind a (web)endpoint to the embedded webserver that serves the Openfire administrative console, like current versions of the REST API plugin do. For these plugins to remain functional and/or reachable, it might be required to toggle the property <code>adminConsole.access.allow-wildcards-in-excludes</code> to <code>true</code>, and to avoid binding the embedded webserver to the loopback network interface only.</p>
<p>When your server uses older versions of the following plugins, make sure to upgrade them:</p>
<ul>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar">Random Avatar plugin</a>, update to version 1.1.0 or later.</li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring">Monitoring Service plugin</a>, update to version 2.5.0 or later.</li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload">HTTP File Upload plugin</a>, update to version 1.3.0 or later.</li>
</ul>
<h3 id="mitigation">Mitigation</h3>
<p>If an Openfire upgrade isn’t available for your release, or isn’t quickly actionable, you can take any of the following steps to mitigate the risk for your Openfire environment.</p>
<p>Be aware: through Openfire plugins, the effectiveness of some mitigations listed below can be reduced, while other mitigations might affect the functionality of plugins. Particular care should be taken when using the Monitoring Service plugin, REST API plugin, User Service plugin and/or Random Avatar plugin.</p>
<h4 id="restrict-network-access">Restrict network access</h4>
<p>Use network security measures (network ACLs and/or firewalls, VPNs) to ensure only trusted members of your community have access to the Openfire Admin Console. As a general rule, never expose the Openfire Admin Console to the general internet.</p>
<p>Examples:</p>
<ul>
<li>On a linux machine running <code>ufw</code>, deny ports 9090 and 9091 on non-loopback interfaces</li>
<li>On a Windows machine, restrict the rules that open ports 9090 and 9091 to only allow traffic from the IPv4 and/or IPv6 loopback addresses</li>
<li>On AWS cloud infrastructure, use EC2 Security Groups to restrict ports 9090 and 9091 to trusted IP addresses. If the trusted range is necessarily too broad, consider opening and closing the ports only as necessary</li>
<li>If using Docker, instead of <code>docker run ... -p 5222:5222 -p 9090:9090 -p 9091:9091 openfire</code> prevent remote access to the Admin Console with <code>docker run ... -p 5222:5222 -p 127.0.0.1:9090:9090 -p 127.0.0.1:9091:9091 openfire</code></li>
</ul>
<h4 id="modify-runtime-configuration-file">Modify runtime configuration file</h4>
<p>To close the avenue of potential attack, a runtime configuration file of Openfire can be modified.</p>
<p>In Openfire's installation directory, find the file <code>plugins/admin/webapp/WEB-INF/web.xml</code>. After creating a backup of this file, edit the original file.</p>
<p>The content of this file is XML. Find a <code>&lt;filter&gt;</code> element, that contains the <code>&lt;filter-name&gt;AuthCheck&lt;/filter-name&gt;</code> child element. Depending on your version of Openfire, it will look similar to this:</p>
<pre><code class="language-xml">&lt;filter&gt;
    &lt;filter-name&gt;AuthCheck&lt;/filter-name&gt;
    &lt;filter-class&gt;org.jivesoftware.admin.AuthCheckFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;excludes&lt;/param-name&gt;
        &lt;param-value&gt;
            login.jsp,index.jsp?logout=true,setup/index.jsp,setup/setup-*,.gif,.png,error-serverdown.jsp,loginToken.jsp
        &lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
</code></pre>
<p>The value inside of the <code>param-value</code> element is a comma-separated list of values. From this list, remove all <code>*</code> (asterisk) characters.</p>
<p>Save the file, and restart Openfire for the change to take effect.</p>
<p>Note that no guarantees can be given that this runtime configuration change persists over time. Ensure to monitor the presence of the fix. It is recommended to upgrade to a safe version of Openfire as soon as possible.</p>
<p>A side-effect of this change is that the Openfire web-based setup wizard will not function properly (functionality can be restored by reverting the change). This wizard is typically used only when initially installing Openfire.</p>
<h4 id="bind-admin-console-to-loopback-interface">Bind admin console to loopback interface</h4>
<p>The Openfire admin console is a web-based application. By default, the corresponding webserver (that is embedded in Openfire) binds to all network interfaces of the host that it is running on.</p>
<p>The admin console can be configured to bind to a specific network interface. This will prevent it from being accessed through other network interfaces. By configuring the admin console to bind to the local loopback interface, it is accessible only to users on the server itself. This reduces the avenue of attack.</p>
<p>Note that several Openfire plugins expose part or all of their functionality through the admin console webserver. The REST API plugin, for example, serves its endpoints via this webserver. Availability of this functionality will be affected by binding the webserver to a specific network interface.</p>
<p>To bind the webserver of the Openfire admin console to a specific network interface, the 'openfire.xml' configuration file can be used.</p>
<p>In Openfire's installation directory, locate the file <code>conf/openfire.xml</code>. After creating a backup of this file, edit the original file.</p>
<p>The content of this file is XML. Find the <code>&lt;adminConsole&gt;</code> element that is a direct child element of the root <code>&lt;jive&gt;</code> element. Add a new element, named <code>&lt;interface&gt;</code> as a child element of <code>&lt;adminConsole&gt;</code>. The value of the <code>&lt;interface&gt;</code> element should be the name of the loopback interface or interface address. Setting value to <code>127.0.0.1</code> works on all tested environments (using values like  <code>lo</code> on most Linux systems or <code>lo0</code> on macOS will have the same effect).</p>
<p>The resulting fragment of the <code>openfire.xml</code> file will look similar to this:</p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jive&gt;
  &lt;adminConsole&gt;
      &lt;interface&gt;127.0.0.1&lt;/interface&gt;
      &lt;port&gt;9090&lt;/port&gt;
      &lt;securePort&gt;9091&lt;/securePort&gt;
  &lt;/adminConsole&gt;

  ...
</code></pre>
<p>Save the file, and restart Openfire for the change to take effect.</p>
<h4 id="use-authfiltersanitizer-plugin">Use AuthFilterSanitizer plugin</h4>
<p>The Ignite Realtime community has made available a new plugin, called the AuthFilterSanitizer plugin. The plugin can be installed from the Openfire admin console, or can be downloaded from <a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer">the plugin's archive page</a> on the IgniteRealtime.org community website.</p>
<p>This plugin periodically removes entries for Openfire's authentication filter that are susceptible to abuse, closing the avenue of potential attack.</p>
<p>Note that this plugin might interfere with functionality that depends on the abuse-susceptible entries in the authentication filter that might be provided by plugins.</p>
<h3 id="credit">Credit</h3>
<p>This issue was originally reported by Siebene@ who has our gratitude for the responsible and detailed disclosure of the issue! </p>
<p>We are grateful for the resources made available by Surevine ltd. They were instrumental in addressing the issue listed in this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.igniterealtime.org/">Ignite Realtime community site</a></li>
<li><a href="https://www.igniterealtime.org/downloads/#openfire">Openfire releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer">Openfire AuthFilter Sanitizer plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload">Openfire HTTP File Upload plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring">Openfire Monitoring Service plugin releases download page</a></li>
<li><a href="https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar">Openfire Random Avatar plugin releases download page</a></li>
<li><a href="https://owasp.org/www-community/attacks/Path_Traversal">OWASP: Path Traversal</a></li>
<li><a href="https://en.wikipedia.org/wiki/URL_encoding#Non-standard_implementations">Wikipedia: URL encoding, section 'Non-standard implementations'</a></li>
<li><a href="https://igniterealtime.atlassian.net/browse/OF-2595">Issue OF-2595 in Openfire's issue tracker</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34429">Jetty CVE-2021-34429</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm">https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/2ac00a1ff42f5d3547ef58e21f8cdec992bfcf97">https://github.com/igniterealtime/Openfire/commit/2ac00a1ff42f5d3547ef58e21f8cdec992bfcf97</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/71f3def2adeaac62729cf544b645c6819c3d9868">https://github.com/igniterealtime/Openfire/commit/71f3def2adeaac62729cf544b645c6819c3d9868</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/commit/a3b5ebd5032ff7be9d3ada5bf52bea2df96ec881">https://github.com/igniterealtime/Openfire/commit/a3b5ebd5032ff7be9d3ada5bf52bea2df96ec881</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/releases/tag/v4.6.8">https://github.com/igniterealtime/Openfire/releases/tag/v4.6.8</a></li>
<li><a href="https://github.com/igniterealtime/Openfire/releases/tag/v4.7.5">https://github.com/igniterealtime/Openfire/releases/tag/v4.7.5</a></li>
<li><a href="https://igniterealtime.atlassian.net/browse/OF-2595">https://igniterealtime.atlassian.net/browse/OF-2595</a></li>
<li><a href="https://github.com/advisories/GHSA-gw42-f939-fhvm">https://github.com/advisories/GHSA-gw42-f939-fhvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw42-f939-fhvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-23T19:54:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailer] Cross-Site Request Forgery in Jenkins Mailer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-85rq-hp8x-ghjq</id>
        <link href="https://github.com/advisories/GHSA-85rq-hp8x-ghjq"/>
        <updated>2023-05-23T18:40:48.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mailer Plugin prior to 408.vd726a_1130320 and 1.34.2 does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read access to use the DNS used by the Jenkins instance to resolve an attacker-specified hostname.</p>
<p>Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Mailer Plugin 408.vd726a_1130320 and 1.34.2 require POST requests and Overall/Administer permission for the affected form validation method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-20613">https://nvd.nist.gov/vuln/detail/CVE-2022-20613</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2163">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2163</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/01/12/6">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-85rq-hp8x-ghjq">https://github.com/advisories/GHSA-85rq-hp8x-ghjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85rq-hp8x-ghjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-13T00:01:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailer] Cross-Site Request Forgery in Jenkins Mailer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-85rq-hp8x-ghjq</id>
        <link href="https://github.com/advisories/GHSA-85rq-hp8x-ghjq"/>
        <updated>2023-05-23T18:40:48.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mailer Plugin prior to 408.vd726a_1130320 and 1.34.2 does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read access to use the DNS used by the Jenkins instance to resolve an attacker-specified hostname.</p>
<p>Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Mailer Plugin 408.vd726a_1130320 and 1.34.2 require POST requests and Overall/Administer permission for the affected form validation method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-20613">https://nvd.nist.gov/vuln/detail/CVE-2022-20613</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2163">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2163</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/01/12/6">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-85rq-hp8x-ghjq">https://github.com/advisories/GHSA-85rq-hp8x-ghjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85rq-hp8x-ghjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-13T00:01:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:manager-web] User data exposure in Apache InLong]]></title>
        <id>https://github.com/advisories/GHSA-h79m-5cm2-278c</id>
        <link href="https://github.com/advisories/GHSA-h79m-5cm2-278c"/>
        <updated>2023-05-22T20:01:37.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Default Initialization of Resource Vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.5.0 through 1.6.0.  Users registered in InLong who joined later can see deleted users' data. Users are advised to upgrade to Apache InLong's 1.7.0 or cherry-pick  <a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a> to solve it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31101">https://nvd.nist.gov/vuln/detail/CVE-2023-31101</a></li>
<li><a href="https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr">https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr</a></li>
<li><a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a></li>
<li><a href="https://github.com/advisories/GHSA-h79m-5cm2-278c">https://github.com/advisories/GHSA-h79m-5cm2-278c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h79m-5cm2-278c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T18:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:manager-service] User data exposure in Apache InLong]]></title>
        <id>https://github.com/advisories/GHSA-h79m-5cm2-278c</id>
        <link href="https://github.com/advisories/GHSA-h79m-5cm2-278c"/>
        <updated>2023-05-22T20:01:37.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Default Initialization of Resource Vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.5.0 through 1.6.0.  Users registered in InLong who joined later can see deleted users' data. Users are advised to upgrade to Apache InLong's 1.7.0 or cherry-pick  <a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a> to solve it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31101">https://nvd.nist.gov/vuln/detail/CVE-2023-31101</a></li>
<li><a href="https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr">https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr</a></li>
<li><a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a></li>
<li><a href="https://github.com/advisories/GHSA-h79m-5cm2-278c">https://github.com/advisories/GHSA-h79m-5cm2-278c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h79m-5cm2-278c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T18:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:manager-pojo] User data exposure in Apache InLong]]></title>
        <id>https://github.com/advisories/GHSA-h79m-5cm2-278c</id>
        <link href="https://github.com/advisories/GHSA-h79m-5cm2-278c"/>
        <updated>2023-05-22T20:01:37.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Default Initialization of Resource Vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.5.0 through 1.6.0.  Users registered in InLong who joined later can see deleted users' data. Users are advised to upgrade to Apache InLong's 1.7.0 or cherry-pick  <a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a> to solve it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31101">https://nvd.nist.gov/vuln/detail/CVE-2023-31101</a></li>
<li><a href="https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr">https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr</a></li>
<li><a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a></li>
<li><a href="https://github.com/advisories/GHSA-h79m-5cm2-278c">https://github.com/advisories/GHSA-h79m-5cm2-278c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h79m-5cm2-278c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T18:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:manager-dao] User data exposure in Apache InLong]]></title>
        <id>https://github.com/advisories/GHSA-h79m-5cm2-278c</id>
        <link href="https://github.com/advisories/GHSA-h79m-5cm2-278c"/>
        <updated>2023-05-22T20:01:37.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Default Initialization of Resource Vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.5.0 through 1.6.0.  Users registered in InLong who joined later can see deleted users' data. Users are advised to upgrade to Apache InLong's 1.7.0 or cherry-pick  <a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a> to solve it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31101">https://nvd.nist.gov/vuln/detail/CVE-2023-31101</a></li>
<li><a href="https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr">https://lists.apache.org/thread/shvwwr6toqz5rr39rwh4k03z08sh9jmr</a></li>
<li><a href="https://github.com/apache/inlong/pull/7836">https://github.com/apache/inlong/pull/7836</a></li>
<li><a href="https://github.com/advisories/GHSA-h79m-5cm2-278c">https://github.com/advisories/GHSA-h79m-5cm2-278c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h79m-5cm2-278c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T18:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.hazelcast:hazelcast] Hazelcast vulnerable to unmasked password exposure]]></title>
        <id>https://github.com/advisories/GHSA-5gj6-62g7-vmgf</id>
        <link href="https://github.com/advisories/GHSA-5gj6-62g7-vmgf"/>
        <updated>2023-05-22T19:55:40.000Z</updated>
        <content type="html"><![CDATA[<p>In Hazelcast before 5.3.0, configuration routines don't mask passwords in the member configuration properly. This allows Hazelcast Management Center users to view some of the secrets.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33264">https://nvd.nist.gov/vuln/detail/CVE-2023-33264</a></li>
<li><a href="https://github.com/hazelcast/hazelcast/pull/24266">https://github.com/hazelcast/hazelcast/pull/24266</a></li>
<li><a href="https://github.com/hazelcast/hazelcast/pull/24266/commits/80a502d53cc48bf895711ab55f95e3a51e344ac1">https://github.com/hazelcast/hazelcast/pull/24266/commits/80a502d53cc48bf895711ab55f95e3a51e344ac1</a></li>
<li><a href="https://github.com/hazelcast/hazelcast/commit/74eed86c2b2b727148c442e98a01d0ca6941a49e">https://github.com/hazelcast/hazelcast/commit/74eed86c2b2b727148c442e98a01d0ca6941a49e</a></li>
<li><a href="https://github.com/advisories/GHSA-5gj6-62g7-vmgf">https://github.com/advisories/GHSA-5gj6-62g7-vmgf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gj6-62g7-vmgf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T03:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds] Promotion names in Jenkins promoted builds Plugin are not validated when using Job DSL]]></title>
        <id>https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</id>
        <link href="https://github.com/advisories/GHSA-jmxr-w2jc-qp7w"/>
        <updated>2023-05-22T19:33:00.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins promoted builds Plugin provides dedicated support for defining promotions using <a href="https://plugins.jenkins.io/job-dsl">Job DSL Plugin</a>.</p>
<p>promoted builds Plugin 873.v6149db_d64130 and earlier does not validate the names of promotions defined in Job DSL. This allows attackers with Job/Configure permission to create a promotion with an unsafe name. As a result, the promotion name could be used for cross-site scripting (XSS) or to replace other <code>config.xml</code> files.</p>
<p>promoted builds Plugin 876.v99d29788b_36b_ and 3.10.1 validates the name of promotions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29049">https://nvd.nist.gov/vuln/detail/CVE-2022-29049</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2655">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2655</a></li>
<li><a href="https://github.com/jenkinsci/promoted-builds-plugin/commit/d6fd95688ae2052bf9ac7158bc2579c755167fe0">https://github.com/jenkinsci/promoted-builds-plugin/commit/d6fd95688ae2052bf9ac7158bc2579c755167fe0</a></li>
<li><a href="https://github.com/advisories/GHSA-jmxr-w2jc-qp7w">https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jira-ext] Jenkins jira-ext Plugin stores credentials unencrypted]]></title>
        <id>https://github.com/advisories/GHSA-chm8-wp3h-f4m3</id>
        <link href="https://github.com/advisories/GHSA-chm8-wp3h-f4m3"/>
        <updated>2023-05-19T23:46:19.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins jira-ext Plugin 0.8 and earlier stored credentials unencrypted in its global configuration file <code>hudson.plugins.jira.JiraProjectProperty.xml</code> on the Jenkins controller. These credentials could be viewed by users with access to the Jenkins controller file system.</p>
<p>jira-ext Plugin version 0.9 stores credentials encrypted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10302">https://nvd.nist.gov/vuln/detail/CVE-2019-10302</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-04-17/#SECURITY-836">https://jenkins.io/security/advisory/2019-04-17/#SECURITY-836</a></li>
<li><a href="http://www.securityfocus.com/bid/108045">http://www.securityfocus.com/bid/108045</a></li>
<li><a href="https://github.com/advisories/GHSA-chm8-wp3h-f4m3">https://github.com/advisories/GHSA-chm8-wp3h-f4m3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chm8-wp3h-f4m3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T16:43:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:codedx] Jenkins Code Dx Plugin missing permission checks]]></title>
        <id>https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</id>
        <link href="https://github.com/advisories/GHSA-mjmf-7wjw-f5xx"/>
        <updated>2023-05-17T17:07:24.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Code Dx Plugin 3.1.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Code Dx Plugin 4.0.0 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2631">https://nvd.nist.gov/vuln/detail/CVE-2023-2631</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmf-7wjw-f5xx">https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-16T21:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:codedx] Jenkins Code Dx Plugin cross-site request forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gx2j-5vc3-3794</id>
        <link href="https://github.com/advisories/GHSA-gx2j-5vc3-3794"/>
        <updated>2023-05-17T17:07:10.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Code Dx Plugin 3.1.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Code Dx Plugin 4.0.0 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2195">https://nvd.nist.gov/vuln/detail/CVE-2023-2195</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118</a></li>
<li><a href="https://github.com/advisories/GHSA-gx2j-5vc3-3794">https://github.com/advisories/GHSA-gx2j-5vc3-3794</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gx2j-5vc3-3794</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-16T21:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opencms:opencms-core] alkacon-OpenCMS vulnerable to stored Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-m44f-9jhg-59cr</id>
        <link href="https://github.com/advisories/GHSA-m44f-9jhg-59cr"/>
        <updated>2023-05-17T17:05:30.000Z</updated>
        <content type="html"><![CDATA[<p>A stored cross-site scripting (XSS) vulnerability in alkacon-OpenCMS v11.0.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Title field under the Upload Image module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31544">https://nvd.nist.gov/vuln/detail/CVE-2023-31544</a></li>
<li><a href="https://github.com/alkacon/opencms-core/issues/652">https://github.com/alkacon/opencms-core/issues/652</a></li>
<li><a href="https://github.com/alkacon/opencms-core/commit/21bfbeaf6b038e2c03bb421ce7f0933dd7a7633e">https://github.com/alkacon/opencms-core/commit/21bfbeaf6b038e2c03bb421ce7f0933dd7a7633e</a></li>
<li><a href="https://github.com/advisories/GHSA-m44f-9jhg-59cr">https://github.com/advisories/GHSA-m44f-9jhg-59cr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44f-9jhg-59cr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-16T21:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-h76p-mc68-jv3p</id>
        <link href="https://github.com/advisories/GHSA-h76p-mc68-jv3p"/>
        <updated>2023-05-17T14:25:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier uses the Apache Commons FileUpload library without specifying limits for the number of request parts introduced in version 1.5 for CVE-2023-24998 in org.kohsuke.stapler.RequestImpl, allowing attackers to trigger a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27901">https://nvd.nist.gov/vuln/detail/CVE-2023-27901</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json</a></li>
<li><a href="https://github.com/advisories/GHSA-h76p-mc68-jv3p">https://github.com/advisories/GHSA-h76p-mc68-jv3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h76p-mc68-jv3p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-h76p-mc68-jv3p</id>
        <link href="https://github.com/advisories/GHSA-h76p-mc68-jv3p"/>
        <updated>2023-05-17T14:25:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier uses the Apache Commons FileUpload library without specifying limits for the number of request parts introduced in version 1.5 for CVE-2023-24998 in org.kohsuke.stapler.RequestImpl, allowing attackers to trigger a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27901">https://nvd.nist.gov/vuln/detail/CVE-2023-27901</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json</a></li>
<li><a href="https://github.com/advisories/GHSA-h76p-mc68-jv3p">https://github.com/advisories/GHSA-h76p-mc68-jv3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h76p-mc68-jv3p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-h76p-mc68-jv3p</id>
        <link href="https://github.com/advisories/GHSA-h76p-mc68-jv3p"/>
        <updated>2023-05-17T14:25:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier uses the Apache Commons FileUpload library without specifying limits for the number of request parts introduced in version 1.5 for CVE-2023-24998 in org.kohsuke.stapler.RequestImpl, allowing attackers to trigger a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27901">https://nvd.nist.gov/vuln/detail/CVE-2023-27901</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27901.json</a></li>
<li><a href="https://github.com/advisories/GHSA-h76p-mc68-jv3p">https://github.com/advisories/GHSA-h76p-mc68-jv3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h76p-mc68-jv3p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.glazedlists:glazedlists] glazedlists XML Deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p6m6-9j36-vfjx</id>
        <link href="https://github.com/advisories/GHSA-p6m6-9j36-vfjx"/>
        <updated>2023-05-17T03:48:55.000Z</updated>
        <content type="html"><![CDATA[<p>An XML Deserialization vulnerability in glazedlists v1.11.0 allows an attacker to execute arbitrary code via the BeanXMLByteCoder.decode() parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31890">https://nvd.nist.gov/vuln/detail/CVE-2023-31890</a></li>
<li><a href="https://github.com/glazedlists/glazedlists/issues/709">https://github.com/glazedlists/glazedlists/issues/709</a></li>
<li><a href="https://github.com/glazedlists/glazedlists/blob/e0593e338246945dab4e83356ef44a59db172a80/extensions/io/src/main/java/ca/odell/glazedlists/impl/io/BeanXMLByteCoder.java">https://github.com/glazedlists/glazedlists/blob/e0593e338246945dab4e83356ef44a59db172a80/extensions/io/src/main/java/ca/odell/glazedlists/impl/io/BeanXMLByteCoder.java</a></li>
<li><a href="https://github.com/advisories/GHSA-p6m6-9j36-vfjx">https://github.com/advisories/GHSA-p6m6-9j36-vfjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6m6-9j36-vfjx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-16T18:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:TestComplete] TestComplete support Plugin vulnerable to stored Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-5wpg-qcmj-48wh</id>
        <link href="https://github.com/advisories/GHSA-5wpg-qcmj-48wh"/>
        <updated>2023-05-17T03:48:25.000Z</updated>
        <content type="html"><![CDATA[<p>TestComplete support Plugin 2.8.1 and earlier does not escape the TestComplete project name in its test result page.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33002">https://nvd.nist.gov/vuln/detail/CVE-2023-33002</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-2892">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-2892</a></li>
<li><a href="https://github.com/advisories/GHSA-5wpg-qcmj-48wh">https://github.com/advisories/GHSA-5wpg-qcmj-48wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5wpg-qcmj-48wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-16T18:30:16.000Z</published>
    </entry>
</feed>