<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-06-13T07:01:11.876Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-server] OutOfMemoryError for large multipart without filename in Eclipse Jetty]]></title>
        <id>https://github.com/advisories/GHSA-qw69-rqj8-6qw8</id>
        <link href="https://github.com/advisories/GHSA-qw69-rqj8-6qw8"/>
        <updated>2023-06-12T23:54:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Servlets with multipart support (e.g. annotated with <code>@MultipartConfig</code>) that call <code>HttpServletRequest.getParameter()</code> or <code>HttpServletRequest.getParts()</code> may cause <code>OutOfMemoryError</code> when the client sends a multipart request with a part that has a name but no filename and a very large content.</p>
<p>This happens even with the default settings of <code>fileSizeThreshold=0</code> which should stream the whole part content to disk.</p>
<p>An attacker client may send a large multipart request and cause the server to throw <code>OutOfMemoryError</code>.
However, the server may be able to recover after the <code>OutOfMemoryError</code> and continue its service -- although it may take some time.</p>
<p>A very large number of parts may cause the same problem.</p>
<h3 id="patches">Patches</h3>
<p>Patched in Jetty versions</p>
<ul>
<li>9.4.51.v20230217 - via PR #9345</li>
<li>10.0.14 - via PR #9344</li>
<li>11.0.14 - via PR #9344</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Multipart parameter <code>maxRequestSize</code> must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).
Limiting multipart parameter <code>maxFileSize</code> won't be enough because an attacker can send a large number of parts that summed up will cause memory issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/issues/9076">https://github.com/eclipse/jetty.project/issues/9076</a></li>
<li><a href="https://github.com/jakartaee/servlet/blob/6.0.0/spec/src/main/asciidoc/servlet-spec-body.adoc#32-file-upload">https://github.com/jakartaee/servlet/blob/6.0.0/spec/src/main/asciidoc/servlet-spec-body.adoc#32-file-upload</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-qw69-rqj8-6qw8">https://github.com/eclipse/jetty.project/security/advisories/GHSA-qw69-rqj8-6qw8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26048">https://nvd.nist.gov/vuln/detail/CVE-2023-26048</a></li>
<li><a href="https://github.com/eclipse/jetty.project/issues/9076">https://github.com/eclipse/jetty.project/issues/9076</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9344">https://github.com/eclipse/jetty.project/pull/9344</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9345">https://github.com/eclipse/jetty.project/pull/9345</a></li>
<li><a href="https://github.com/jakartaee/servlet/blob/6.0.0/spec/src/main/asciidoc/servlet-spec-body.adoc#32-file-upload">https://github.com/jakartaee/servlet/blob/6.0.0/spec/src/main/asciidoc/servlet-spec-body.adoc#32-file-upload</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230526-0001/">https://security.netapp.com/advisory/ntap-20230526-0001/</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217</a></li>
<li><a href="https://github.com/advisories/GHSA-qw69-rqj8-6qw8">https://github.com/advisories/GHSA-qw69-rqj8-6qw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw69-rqj8-6qw8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-19T18:15:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.guicedee.services:commons-text] Arbitrary code execution in Apache Commons Text]]></title>
        <id>https://github.com/advisories/GHSA-599f-7c49-w659</id>
        <link href="https://github.com/advisories/GHSA-599f-7c49-w659"/>
        <updated>2023-06-12T22:02:11.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Commons Text performs variable interpolation, allowing properties to be dynamically evaluated and expanded. The standard format for interpolation is "${prefix:name}", where "prefix" is used to locate an instance of org.apache.commons.text.lookup.StringLookup that performs the interpolation. Starting with version 1.5 and continuing through 1.9, the set of default Lookup instances included interpolators that could result in arbitrary code execution or contact with remote servers. These lookups are: - "script" - execute expressions using the JVM script execution engine (javax.script) - "dns" - resolve dns records - "url" - load values from urls, including from remote servers Applications using the interpolation defaults in the affected versions may be vulnerable to remote code execution or unintentional contact with remote servers if untrusted configuration values are used. Users are recommended to upgrade to Apache Commons Text 1.10.0, which disables the problematic interpolators by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42889">https://nvd.nist.gov/vuln/detail/CVE-2022-42889</a></li>
<li><a href="https://lists.apache.org/thread/n2bd4vdsgkqh2tm14l1wyc3jyol7s1om">https://lists.apache.org/thread/n2bd4vdsgkqh2tm14l1wyc3jyol7s1om</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/13/4">http://www.openwall.com/lists/oss-security/2022/10/13/4</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-018_Apache_Commons_Text">https://securitylab.github.com/advisories/GHSL-2022-018_Apache_Commons_Text</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/18/1">http://www.openwall.com/lists/oss-security/2022/10/18/1</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20221020-0004/">https://security.netapp.com/advisory/ntap-20221020-0004/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0022">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0022</a></li>
<li><a href="https://security.gentoo.org/glsa/202301-05">https://security.gentoo.org/glsa/202301-05</a></li>
<li><a href="http://seclists.org/fulldisclosure/2023/Feb/3">http://seclists.org/fulldisclosure/2023/Feb/3</a></li>
<li><a href="http://packetstormsecurity.com/files/171003/OX-App-Suite-Cross-Site-Scripting-Server-Side-Request-Forgery.html">http://packetstormsecurity.com/files/171003/OX-App-Suite-Cross-Site-Scripting-Server-Side-Request-Forgery.html</a></li>
<li><a href="https://arxiv.org/pdf/2306.05534">https://arxiv.org/pdf/2306.05534</a></li>
<li><a href="https://github.com/advisories/GHSA-599f-7c49-w659">https://github.com/advisories/GHSA-599f-7c49-w659</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-599f-7c49-w659</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-13T19:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.servicemix.bundles:org.apache.servicemix.bundles.commons-collections] Insecure Deserialization in Apache Commons Collection]]></title>
        <id>https://github.com/advisories/GHSA-6hgm-866r-3cjv</id>
        <link href="https://github.com/advisories/GHSA-6hgm-866r-3cjv"/>
        <updated>2023-06-12T21:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Serialized-object interfaces in Java applications using the Apache Commons Collections (ACC) library may allow remote attackers to execute arbitrary commands via a crafted serialized Java object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6420">https://nvd.nist.gov/vuln/detail/CVE-2015-6420</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/581311">https://www.kb.cert.org/vuls/id/581311</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-14">https://www.tenable.com/security/research/tra-2017-14</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-23">https://www.tenable.com/security/research/tra-2017-23</a></li>
<li><a href="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization">http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>
<li><a href="http://www.securityfocus.com/bid/78872">http://www.securityfocus.com/bid/78872</a></li>
<li><a href="https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E">https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E</a></li>
<li><a href="https://arxiv.org/pdf/2306.05534">https://arxiv.org/pdf/2306.05534</a></li>
<li><a href="https://github.com/advisories/GHSA-6hgm-866r-3cjv">https://github.com/advisories/GHSA-6hgm-866r-3cjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hgm-866r-3cjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-06-15T20:36:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.servicemix.bundles:org.apache.servicemix.bundles.collections-generic] Insecure Deserialization in Apache Commons Collection]]></title>
        <id>https://github.com/advisories/GHSA-6hgm-866r-3cjv</id>
        <link href="https://github.com/advisories/GHSA-6hgm-866r-3cjv"/>
        <updated>2023-06-12T21:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Serialized-object interfaces in Java applications using the Apache Commons Collections (ACC) library may allow remote attackers to execute arbitrary commands via a crafted serialized Java object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6420">https://nvd.nist.gov/vuln/detail/CVE-2015-6420</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/581311">https://www.kb.cert.org/vuls/id/581311</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-14">https://www.tenable.com/security/research/tra-2017-14</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-23">https://www.tenable.com/security/research/tra-2017-23</a></li>
<li><a href="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization">http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>
<li><a href="http://www.securityfocus.com/bid/78872">http://www.securityfocus.com/bid/78872</a></li>
<li><a href="https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E">https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E</a></li>
<li><a href="https://arxiv.org/pdf/2306.05534">https://arxiv.org/pdf/2306.05534</a></li>
<li><a href="https://github.com/advisories/GHSA-6hgm-866r-3cjv">https://github.com/advisories/GHSA-6hgm-866r-3cjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hgm-866r-3cjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-06-15T20:36:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.sourceforge.collections:collections-generic] Insecure Deserialization in Apache Commons Collection]]></title>
        <id>https://github.com/advisories/GHSA-6hgm-866r-3cjv</id>
        <link href="https://github.com/advisories/GHSA-6hgm-866r-3cjv"/>
        <updated>2023-06-12T21:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Serialized-object interfaces in Java applications using the Apache Commons Collections (ACC) library may allow remote attackers to execute arbitrary commands via a crafted serialized Java object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6420">https://nvd.nist.gov/vuln/detail/CVE-2015-6420</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05376917</a></li>
<li><a href="https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722">https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/581311">https://www.kb.cert.org/vuls/id/581311</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-14">https://www.tenable.com/security/research/tra-2017-14</a></li>
<li><a href="https://www.tenable.com/security/research/tra-2017-23">https://www.tenable.com/security/research/tra-2017-23</a></li>
<li><a href="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization">http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20151209-java-deserialization</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>
<li><a href="http://www.securityfocus.com/bid/78872">http://www.securityfocus.com/bid/78872</a></li>
<li><a href="https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E">https://lists.apache.org/thread.html/r352e40ca9874d1beb4ad95403792adca7eb295e6bc3bd7b65fabcc21@%3Ccommits.samza.apache.org%3E</a></li>
<li><a href="https://arxiv.org/pdf/2306.05534">https://arxiv.org/pdf/2306.05534</a></li>
<li><a href="https://github.com/advisories/GHSA-6hgm-866r-3cjv">https://github.com/advisories/GHSA-6hgm-866r-3cjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hgm-866r-3cjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-06-15T20:36:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-jms-bundle] Apache NiFi vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-65wh-g8x8-gm2h</id>
        <link href="https://github.com/advisories/GHSA-65wh-g8x8-gm2h"/>
        <updated>2023-06-13T00:10:44.000Z</updated>
        <content type="html"><![CDATA[<p>The JndiJmsConnectionFactoryProvider Controller Service, along with the ConsumeJMS and PublishJMS Processors, in Apache NiFi 1.8.0 through 1.21.0 allow an authenticated and authorized user to configure URL and library properties that enable deserialization of untrusted data from a remote location.</p>
<p>The resolution validates the JNDI URL and restricts locations to a set of allowed schemes.</p>
<p>You are recommended to upgrade to version 1.22.0 or later which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34212">https://nvd.nist.gov/vuln/detail/CVE-2023-34212</a></li>
<li><a href="https://lists.apache.org/thread/w5rm46fxmvxy216tglf0dv83wo6gnzr5">https://lists.apache.org/thread/w5rm46fxmvxy216tglf0dv83wo6gnzr5</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-34212">https://nifi.apache.org/security.html#CVE-2023-34212</a></li>
<li><a href="https://github.com/apache/nifi/pull/7313">https://github.com/apache/nifi/pull/7313</a></li>
<li><a href="https://github.com/apache/nifi/commit/3fcb82ee4509d1ad73893d8dca003be6d086c5d6">https://github.com/apache/nifi/commit/3fcb82ee4509d1ad73893d8dca003be6d086c5d6</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11614">https://issues.apache.org/jira/browse/NIFI-11614</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/12/2">http://www.openwall.com/lists/oss-security/2023/06/12/2</a></li>
<li><a href="https://github.com/advisories/GHSA-65wh-g8x8-gm2h">https://github.com/advisories/GHSA-65wh-g8x8-gm2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-65wh-g8x8-gm2h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-12T18:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-hikari-dbcp-service] Apache NiFi vulnerable to Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-xm2m-2q6h-22jw</id>
        <link href="https://github.com/advisories/GHSA-xm2m-2q6h-22jw"/>
        <updated>2023-06-13T00:10:42.000Z</updated>
        <content type="html"><![CDATA[<p>The DBCPConnectionPool and HikariCPConnectionPool Controller Services in Apache NiFi 0.0.2 through 1.21.0 allow an authenticated and authorized user to configure a Database URL with the H2 driver that enables custom code execution.</p>
<p>The resolution validates the Database URL and rejects H2 JDBC locations.</p>
<p>You are recommended to upgrade to version 1.22.0 or later which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34468">https://nvd.nist.gov/vuln/detail/CVE-2023-34468</a></li>
<li><a href="https://lists.apache.org/thread/7b82l4f5blmpkfcynf3y6z4x1vqo59h8">https://lists.apache.org/thread/7b82l4f5blmpkfcynf3y6z4x1vqo59h8</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-34468">https://nifi.apache.org/security.html#CVE-2023-34468</a></li>
<li><a href="https://github.com/apache/nifi/pull/7349">https://github.com/apache/nifi/pull/7349</a></li>
<li><a href="https://github.com/apache/nifi/commit/4faf3ea59895e7e153db3f8f61147ff70a254361">https://github.com/apache/nifi/commit/4faf3ea59895e7e153db3f8f61147ff70a254361</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11653">https://issues.apache.org/jira/browse/NIFI-11653</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/12/3">http://www.openwall.com/lists/oss-security/2023/06/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-xm2m-2q6h-22jw">https://github.com/advisories/GHSA-xm2m-2q6h-22jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xm2m-2q6h-22jw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-12T18:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-dbcp-base] Apache NiFi vulnerable to Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-xm2m-2q6h-22jw</id>
        <link href="https://github.com/advisories/GHSA-xm2m-2q6h-22jw"/>
        <updated>2023-06-13T00:10:42.000Z</updated>
        <content type="html"><![CDATA[<p>The DBCPConnectionPool and HikariCPConnectionPool Controller Services in Apache NiFi 0.0.2 through 1.21.0 allow an authenticated and authorized user to configure a Database URL with the H2 driver that enables custom code execution.</p>
<p>The resolution validates the Database URL and rejects H2 JDBC locations.</p>
<p>You are recommended to upgrade to version 1.22.0 or later which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34468">https://nvd.nist.gov/vuln/detail/CVE-2023-34468</a></li>
<li><a href="https://lists.apache.org/thread/7b82l4f5blmpkfcynf3y6z4x1vqo59h8">https://lists.apache.org/thread/7b82l4f5blmpkfcynf3y6z4x1vqo59h8</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-34468">https://nifi.apache.org/security.html#CVE-2023-34468</a></li>
<li><a href="https://github.com/apache/nifi/pull/7349">https://github.com/apache/nifi/pull/7349</a></li>
<li><a href="https://github.com/apache/nifi/commit/4faf3ea59895e7e153db3f8f61147ff70a254361">https://github.com/apache/nifi/commit/4faf3ea59895e7e153db3f8f61147ff70a254361</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11653">https://issues.apache.org/jira/browse/NIFI-11653</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/12/3">http://www.openwall.com/lists/oss-security/2023/06/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-xm2m-2q6h-22jw">https://github.com/advisories/GHSA-xm2m-2q6h-22jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xm2m-2q6h-22jw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-12T18:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.arangamani.jenkins:gem-publisher] Jenkins Gem Publisher Plugin stores credentials unencrypted]]></title>
        <id>https://github.com/advisories/GHSA-6pqm-pp65-mc26</id>
        <link href="https://github.com/advisories/GHSA-6pqm-pp65-mc26"/>
        <updated>2023-06-09T23:08:01.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Gem Publisher Plugin stores credentials unencrypted in its global configuration file on the Jenkins master where they can be viewed by users with access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10426">https://nvd.nist.gov/vuln/detail/CVE-2019-10426</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1573">https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1573</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/09/25/3">http://www.openwall.com/lists/oss-security/2019/09/25/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6pqm-pp65-mc26">https://github.com/advisories/GHSA-6pqm-pp65-mc26</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pqm-pp65-mc26</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jeecgframework.p3:jeecg-p3-biz-chat] Jeecg P3 Biz Chat allows remote attackers to read arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-v3v9-3jf4-5pxx</id>
        <link href="https://github.com/advisories/GHSA-v3v9-3jf4-5pxx"/>
        <updated>2023-06-09T22:54:04.000Z</updated>
        <content type="html"><![CDATA[<p>Jeecg P3 Biz Chat 1.0.5 allows remote attackers to read arbitrary files through specific parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33510">https://nvd.nist.gov/vuln/detail/CVE-2023-33510</a></li>
<li><a href="https://carl1l.github.io/2023/05/08/jeecg-p3-biz-chat-1-0-5-jar-has-arbitrary-file-read-vulnerability/">https://carl1l.github.io/2023/05/08/jeecg-p3-biz-chat-1-0-5-jar-has-arbitrary-file-read-vulnerability/</a></li>
<li><a href="https://github.com/advisories/GHSA-v3v9-3jf4-5pxx">https://github.com/advisories/GHSA-v3v9-3jf4-5pxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3v9-3jf4-5pxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-07T21:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.xuxueli:xxl-rpc-core] xxl-rpc deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c29g-q3h3-mwcf</id>
        <link href="https://github.com/advisories/GHSA-c29g-q3h3-mwcf"/>
        <updated>2023-06-09T22:52:49.000Z</updated>
        <content type="html"><![CDATA[<p>xxl-rpc v1.7.0 was discovered to contain a deserialization vulnerability via the component <code>com.xxl.rpc.core.remoting.net.impl.netty.codec.NettyDecode#decode</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33496">https://nvd.nist.gov/vuln/detail/CVE-2023-33496</a></li>
<li><a href="https://github.com/edirc-wong/record/blob/main/deserialization_vulnerability_report.md">https://github.com/edirc-wong/record/blob/main/deserialization_vulnerability_report.md</a></li>
<li><a href="https://github.com/advisories/GHSA-c29g-q3h3-mwcf">https://github.com/advisories/GHSA-c29g-q3h3-mwcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c29g-q3h3-mwcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-07T21:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.ruoyi:ruoyi] RuoYi Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g3hh-q55f-9g3w</id>
        <link href="https://github.com/advisories/GHSA-g3hh-q55f-9g3w"/>
        <updated>2023-06-09T22:42:23.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in y_project RuoYi up to 4.7.7. It has been classified as problematic. Affected is the function filterKeyword. The manipulation of the argument value leads to resource consumption. VDB-231090 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3163">https://nvd.nist.gov/vuln/detail/CVE-2023-3163</a></li>
<li><a href="https://gitee.com/y_project/RuoYi/issues/I78DOR">https://gitee.com/y_project/RuoYi/issues/I78DOR</a></li>
<li><a href="https://vuldb.com/?ctiid.231090">https://vuldb.com/?ctiid.231090</a></li>
<li><a href="https://vuldb.com/?id.231090">https://vuldb.com/?id.231090</a></li>
<li><a href="https://github.com/advisories/GHSA-g3hh-q55f-9g3w">https://github.com/advisories/GHSA-g3hh-q55f-9g3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3hh-q55f-9g3w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-08T15:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-58xm-mxjf-254g</id>
        <link href="https://github.com/advisories/GHSA-58xm-mxjf-254g"/>
        <updated>2023-06-07T14:13:30.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> does not check permission to create parent directories.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> checks permission to create parent directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21685">https://nvd.nist.gov/vuln/detail/CVE-2021-21685</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/11/04/3">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>
<li><a href="https://github.com/advisories/GHSA-58xm-mxjf-254g">https://github.com/advisories/GHSA-58xm-mxjf-254g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-58xm-mxjf-254g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4g38-hrm4-rg94</id>
        <link href="https://github.com/advisories/GHSA-4g38-hrm4-rg94"/>
        <updated>2023-06-07T14:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters do not canonicalize paths, allowing operations to follow symbolic links to outside allowed directories.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters canonicalize paths, preventing operations from following symbolic links to outside allowed directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21686">https://nvd.nist.gov/vuln/detail/CVE-2021-21686</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-4g38-hrm4-rg94">https://github.com/advisories/GHSA-4g38-hrm4-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g38-hrm4-rg94</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.hawt:project] hawtio vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-p223-c4w6-q454</id>
        <link href="https://github.com/advisories/GHSA-p223-c4w6-q454"/>
        <updated>2023-06-08T14:02:03.000Z</updated>
        <content type="html"><![CDATA[<p>hawtio 2.17.2 is vulnerable to Path Traversal. it is possible to input malicious zip files, which can result in the high-risk files after decompression being stored in any location, even leading to file overwrite.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33544">https://nvd.nist.gov/vuln/detail/CVE-2023-33544</a></li>
<li><a href="https://github.com/hawtio/hawtio/issues/2832">https://github.com/hawtio/hawtio/issues/2832</a></li>
<li><a href="https://github.com/advisories/GHSA-p223-c4w6-q454">https://github.com/advisories/GHSA-p223-c4w6-q454</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p223-c4w6-q454</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-01T15:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.codehaus.janino:janino-parent] janino vulnerable to denial of service due to stack overflow]]></title>
        <id>https://github.com/advisories/GHSA-gcg6-xv4f-f749</id>
        <link href="https://github.com/advisories/GHSA-gcg6-xv4f-f749"/>
        <updated>2023-06-09T15:02:19.000Z</updated>
        <content type="html"><![CDATA[<p>janino 3.1.9 and earlier is subject to denial of service (DOS) attacks when using the expression <code>evaluator.guess</code> parameter name method. If the parser runs on user-supplied input, an attacker could supply content that causes the parser to crash due to a stack overflow.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33546">https://nvd.nist.gov/vuln/detail/CVE-2023-33546</a></li>
<li><a href="https://github.com/janino-compiler/janino/issues/201">https://github.com/janino-compiler/janino/issues/201</a></li>
<li><a href="https://github.com/advisories/GHSA-gcg6-xv4f-f749">https://github.com/advisories/GHSA-gcg6-xv4f-f749</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcg6-xv4f-f749</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-01T15:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jstach:jstachio] JStachio XSS vulnerability: Unescaped single quotes]]></title>
        <id>https://github.com/advisories/GHSA-gwxv-jv83-6qjr</id>
        <link href="https://github.com/advisories/GHSA-gwxv-jv83-6qjr"/>
        <updated>2023-06-06T00:45:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="description">Description:</h4>
<p>JStachio fails to escape single quotes <code>'</code> in HTML, allowing an attacker to inject malicious code.</p>
<h4 id="reproduction-steps">Reproduction Steps:</h4>
<p>Use the following template code:</p>
<pre><code class="language-html">&lt;div attr='{{value}}'&gt;&lt;/div&gt;
</code></pre>
<p>Set the value variable to <code>' onblur='alert(1)</code>.</p>
<pre><code class="language-java">public class Escaping {

    public static void main(String[] args) {
        Model model = new Model("' onblur='alert(1)");
        String result = AttributeTemplate.of().execute(model);
        System.out.println(result);
    }

    @JStache(template = "&lt;div attr='{{value}}'&gt;&lt;/div&gt;",
            name="AttributeTemplate")
    @JStacheConfig(contentType= Html.class)
    public static class Model {

        public final String value;

        public Model(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }
    }
}
</code></pre>
<p>Expected Result:
The resulting output should have properly escaped the single quotes and not execute the injected JavaScript code.</p>
<p>Actual Result:
The resulting output is vulnerable and renders as follows:</p>
<pre><code class="language-html">&lt;div attr='' onblur='alert(1)'&gt;&lt;/div&gt;
</code></pre>
<h4 id="impact-and-risk">Impact and Risk:</h4>
<p>This vulnerability can be exploited by an attacker to execute arbitrary JavaScript code in the context of other users visiting pages that use this template engine. This can lead to various consequences, including session hijacking, defacement of web pages, theft of sensitive information, or even the propagation of malware.</p>
<h4 id="proposed-solution">Proposed Solution:</h4>
<p>To mitigate this vulnerability, the template engine should properly escape special characters, including single quotes. Common practice is to escape <code>'</code> as <code>&amp;#39</code>.</p>
<h3 id="patches">Patches</h3>
<ul>
<li></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>As long as users stick with double quotes <code>"</code> for HTML attributes, they should not be affected.</p>
<h3 id="references">References</h3>
<p>For instance, <a href="https://github.com/fizzed/rocker/blob/d749fbf68179b31a64d541f5e18e0e25bc5c2d1b/rocker-runtime/src/main/java/com/fizzed/rocker/runtime/DefaultHtmlStringify.java#L64">Rocker's general purpose HTML escaping</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jstachio/jstachio/security/advisories/GHSA-gwxv-jv83-6qjr">https://github.com/jstachio/jstachio/security/advisories/GHSA-gwxv-jv83-6qjr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33962">https://nvd.nist.gov/vuln/detail/CVE-2023-33962</a></li>
<li><a href="https://github.com/jstachio/jstachio/issues/157">https://github.com/jstachio/jstachio/issues/157</a></li>
<li><a href="https://github.com/jstachio/jstachio/pull/158">https://github.com/jstachio/jstachio/pull/158</a></li>
<li><a href="https://github.com/jstachio/jstachio/commit/7b2f78377d1284df14c580be762a25af5f8dcd66">https://github.com/jstachio/jstachio/commit/7b2f78377d1284df14c580be762a25af5f8dcd66</a></li>
<li><a href="https://github.com/jstachio/jstachio/releases/tag/v1.0.1">https://github.com/jstachio/jstachio/releases/tag/v1.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-gwxv-jv83-6qjr">https://github.com/advisories/GHSA-gwxv-jv83-6qjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwxv-jv83-6qjr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-06T00:45:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.dataease:dataease-plugin-common] DataEase API interface has IDOR vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7hv6-gv38-78wj</id>
        <link href="https://github.com/advisories/GHSA-7hv6-gv38-78wj"/>
        <updated>2023-06-02T17:09:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The api interface for DataEase delete dashboard and delete system messages is vulnerable to IDOR.</p>
<p>The interface to delete the dashboard:</p>
<ol>
<li>Create two users: user1 and user2</li>
<li>User1 creates a dashboard named pan1</li>
<li>User2 creates a dashboard named pan2</li>
<li>Both user1 and user2 share their dashboards with the demo user</li>
<li>User1 wants to delete his dashboard. We hijack the request with burpsuite. The request will probably look like this: POST /api/share/removePanelShares/440efa7f-efd8-11ed-bec7-1144724bc08c HTTP/1.1. 440efa7f-efd8-11ed-bec7-1144724bc08c is the ID of pan1</li>
<li>We replace this ID with the ID of pan2 and continue the execution (i.e. we delete the shares of others)</li>
<li>Successfully remove the shared link
<img alt="image" src="https://user-images.githubusercontent.com/985347/238271028-d23a9ca3-cd77-42a2-9199-a28ef03f5bf0.png"></li>
</ol>
<p>The interface to delete system messages:</p>
<ol>
<li>Our request to delete a message is shown below
<img alt="image" src="https://user-images.githubusercontent.com/985347/238271474-1bf6be85-7a39-436d-b209-ac88bf52b591.png"></li>
<li>We can delete all messages by simply enumerating the message ID, regardless of whether the message belongs to the requester or not.</li>
<li>The interface for marking read messages is also affected</li>
</ol>
<p>Affected versions: &lt;= 1.18.6</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in v1.18.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade the version to v1.18.7.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/dataease/dataease">https://github.com/dataease/dataease</a>
Email us at <a href="mailto:wei@fit2cloud.com">wei@fit2cloud.com</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dataease/dataease/security/advisories/GHSA-7hv6-gv38-78wj">https://github.com/dataease/dataease/security/advisories/GHSA-7hv6-gv38-78wj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32310">https://nvd.nist.gov/vuln/detail/CVE-2023-32310</a></li>
<li><a href="https://github.com/dataease/dataease/pull/5342">https://github.com/dataease/dataease/pull/5342</a></li>
<li><a href="https://github.com/dataease/dataease/commit/72f428e87b5395c03d2f94ef6185fc247ddbc8dc">https://github.com/dataease/dataease/commit/72f428e87b5395c03d2f94ef6185fc247ddbc8dc</a></li>
<li><a href="https://github.com/dataease/dataease/releases/tag/v1.18.7">https://github.com/dataease/dataease/releases/tag/v1.18.7</a></li>
<li><a href="https://github.com/advisories/GHSA-7hv6-gv38-78wj">https://github.com/advisories/GHSA-7hv6-gv38-78wj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hv6-gv38-78wj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-02T17:09:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.liferay.portal:release.portal.bom] Liferay Portal has Inefficient Regular Expression]]></title>
        <id>https://github.com/advisories/GHSA-chrc-q6v3-jfv8</id>
        <link href="https://github.com/advisories/GHSA-chrc-q6v3-jfv8"/>
        <updated>2023-06-02T05:01:06.000Z</updated>
        <content type="html"><![CDATA[<p>Pattern Redirects in Liferay Portal 7.4.3.48 through 7.4.3.76, and Liferay DXP 7.4 update 48 through 76 allows regular expressions that are vulnerable to ReDoS attacks to be used as patterns, which allows remote attackers to consume an excessive amount of server resources via crafted request URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33950">https://nvd.nist.gov/vuln/detail/CVE-2023-33950</a></li>
<li><a href="https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2023-33950">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2023-33950</a></li>
<li><a href="https://github.com/advisories/GHSA-chrc-q6v3-jfv8">https://github.com/advisories/GHSA-chrc-q6v3-jfv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chrc-q6v3-jfv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-24T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials] Cross-Site Request Forgery in Jenkins Credentials Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gchq-9r68-6jwv</id>
        <link href="https://github.com/advisories/GHSA-gchq-9r68-6jwv"/>
        <updated>2023-06-02T05:00:38.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Credentials Plugin prior to 2.3.19, 2.3.15.1, 2.3.14.1, 2.3.13.1, 2.3.7.1, and 2.3.0.1 does not escape user-controlled information on a view it provides, resulting in a reflected cross-site scripting (XSS) vulnerability.</p>
<p>Credentials Plugin 2.3.19, 2.3.15.1, 2.3.14.1, 2.3.13.1, 2.3.7.1, and 2.3.0.1 restricts the user-controlled information it provides to a safe subset.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21648">https://nvd.nist.gov/vuln/detail/CVE-2021-21648</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2349">https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2349</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2021/21xxx/CVE-2021-21648.json">https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2021/21xxx/CVE-2021-21648.json</a></li>
<li><a href="https://github.com/advisories/GHSA-gchq-9r68-6jwv">https://github.com/advisories/GHSA-gchq-9r68-6jwv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gchq-9r68-6jwv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-16T17:24:31.000Z</published>
    </entry>
</feed>