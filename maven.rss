<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-07-04T14:01:12.380Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.h2database:h2] Password exposure in H2 Database ]]></title>
        <id>https://github.com/advisories/GHSA-22wj-vf5f-wrvj</id>
        <link href="https://github.com/advisories/GHSA-22wj-vf5f-wrvj"/>
        <updated>2024-07-03T17:59:04.000Z</updated>
        <content type="html"><![CDATA[<p>The web-based admin console in H2 Database Engine through 2.1.214 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states "This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45868">https://nvd.nist.gov/vuln/detail/CVE-2022-45868</a></li>
<li><a href="https://github.com/h2database/h2database/blob/96832bf5a97cdc0adc1f2066ed61c54990d66ab5/h2/src/main/org/h2/server/web/WebServer.java#L346-L347">https://github.com/h2database/h2database/blob/96832bf5a97cdc0adc1f2066ed61c54990d66ab5/h2/src/main/org/h2/server/web/WebServer.java#L346-L347</a></li>
<li><a href="https://sites.google.com/sonatype.com/vulnerabilities/sonatype-2022-6243">https://sites.google.com/sonatype.com/vulnerabilities/sonatype-2022-6243</a></li>
<li><a href="https://github.com/h2database/h2database/pull/3833">https://github.com/h2database/h2database/pull/3833</a></li>
<li><a href="https://github.com/h2database/h2database/commit/581ed18ff9d6b3761d851620ed88a3994a351a0d">https://github.com/h2database/h2database/commit/581ed18ff9d6b3761d851620ed88a3994a351a0d</a></li>
<li><a href="https://github.com/h2database/h2database/issues/3686">https://github.com/h2database/h2database/issues/3686</a></li>
<li><a href="https://github.com/advisories/GHSA-22wj-vf5f-wrvj">https://github.com/advisories/GHSA-22wj-vf5f-wrvj</a></li>
<li><a href="https://github.com/h2database/h2database/releases/tag/version-2.2.220">https://github.com/h2database/h2database/releases/tag/version-2.2.220</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22wj-vf5f-wrvj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-23T21:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials-binding] Incorrect Permission Assignment for Critical Resource in Jenkins Credentials Binding Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gqm2-2gcx-p88w</id>
        <link href="https://github.com/advisories/GHSA-gqm2-2gcx-p88w"/>
        <updated>2024-07-03T14:13:07.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Credentials Binding Plugin prior to 1.27.1 and 1.24.1 does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read access to validate if a credential ID refers to a secret file credential and whether it’s a zip file.</p>
<p>Credentials Binding Plugin 1.27.1 and 1.24.1 performs permission checks when validating secret file credentials IDs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-20616">https://nvd.nist.gov/vuln/detail/CVE-2022-20616</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2342">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2342</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/01/12/6">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>
<li><a href="https://github.com/jenkinsci/credentials-binding-plugin/commit/2dd5eda721e52d9a5bf6748405adf965ba517d8a">https://github.com/jenkinsci/credentials-binding-plugin/commit/2dd5eda721e52d9a5bf6748405adf965ba517d8a</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2022/20xxx/CVE-2022-20616.json">https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2022/20xxx/CVE-2022-20616.json</a></li>
<li><a href="https://github.com/advisories/GHSA-gqm2-2gcx-p88w">https://github.com/advisories/GHSA-gqm2-2gcx-p88w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gqm2-2gcx-p88w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-13T00:01:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials-binding] Incorrect Permission Assignment for Critical Resource in Jenkins Credentials Binding Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gqm2-2gcx-p88w</id>
        <link href="https://github.com/advisories/GHSA-gqm2-2gcx-p88w"/>
        <updated>2024-07-03T14:13:07.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Credentials Binding Plugin prior to 1.27.1 and 1.24.1 does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read access to validate if a credential ID refers to a secret file credential and whether it’s a zip file.</p>
<p>Credentials Binding Plugin 1.27.1 and 1.24.1 performs permission checks when validating secret file credentials IDs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-20616">https://nvd.nist.gov/vuln/detail/CVE-2022-20616</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2342">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2342</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/01/12/6">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>
<li><a href="https://github.com/jenkinsci/credentials-binding-plugin/commit/2dd5eda721e52d9a5bf6748405adf965ba517d8a">https://github.com/jenkinsci/credentials-binding-plugin/commit/2dd5eda721e52d9a5bf6748405adf965ba517d8a</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2022/20xxx/CVE-2022-20616.json">https://github.com/CVEProject/cvelist/blob/2d78eb36f4d084db7fb35f1535d8d84fdcb7d859/2022/20xxx/CVE-2022-20616.json</a></li>
<li><a href="https://github.com/advisories/GHSA-gqm2-2gcx-p88w">https://github.com/advisories/GHSA-gqm2-2gcx-p88w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gqm2-2gcx-p88w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-13T00:01:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wms] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wfs] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wms] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wfs] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wms] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-wfs] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Remote Code Execution (RCE) vulnerability in geoserver]]></title>
        <id>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</id>
        <link href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv"/>
        <updated>2024-07-01T20:34:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple OGC request parameters allow Remote Code Execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions.</p>
<h3 id="details">Details</h3>
<p>The GeoTools library API that GeoServer calls evaluates property/attribute names for feature types in a way that unsafely passes them to the commons-jxpath library which can execute arbitrary code when evaluating XPath expressions. This XPath evaluation is intended to be used only by complex feature types (i.e., Application Schema data stores) but is incorrectly being applied to simple feature types as well which makes this vulnerability apply to <strong>ALL</strong> GeoServer instances.</p>
<h3 id="poc">PoC</h3>
<p>No public PoC is provided but this vulnerability has been confirmed to be exploitable through WFS GetFeature, WFS GetPropertyValue, WMS GetMap, WMS GetFeatureInfo, WMS GetLegendGraphic and WPS Execute requests.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.</p>
<h3 id="workaround">Workaround</h3>
<p>A workaround exists by removing the <code>gt-complex-x.y.jar</code> file from the GeoServer where <code>x.y</code> is the GeoTools version (e.g., <code>gt-complex-31.1.jar</code> if running GeoServer 2.25.1). This will remove the vulnerable code from GeoServer but may break some GeoServer functionality or prevent GeoServer from deploying if the gt-complex module is needed by an extension you are using:</p>
<p>Mitigation for <code>geoserver.war</code> deploy:</p>
<ol>
<li>Stop the application server</li>
<li>Unzip <code>geoserver.war</code> into a directory</li>
<li>Locate the file <code>WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Zip the directory into a new <code>geoserver.war</code></li>
<li>Restart the application server</li>
</ol>
<p>Mitigation for GeoServer binary:</p>
<ol>
<li>Stop Jetty</li>
<li>Locate the file <code>webapps/geoserver/WEB-INF/lib/gt-complex-x.y.jar</code> and remove</li>
<li>Restart Jetty</li>
</ol>
<p>The following extensions and community modules are known to have a direct dependency on <code>gt-complex</code> jar and are not expected function properly without it. This is not comprehensive list and additional GeoServer functionality may be dependent on the availability of <code>gt-complex</code> jar:</p>
<ul>
<li>Extensions: Application Schema, Catalog Services for the Web, MongoDB Data Store</li>
<li>Community Modules: Features-Templating, OGC API Modules, Smart Data Loader, SOLR Data Store</li>
</ul>
<p>Patch available for prior releases:</p>
<ol>
<li>Patched <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars may be downloaded from the release page for GeoServer: 2.25.1, 2.24.3, 2.24.2, 2.23.2, 2.21.5, 2.20.7, 2.20.4, 2.19.2, 2.18.0.</li>
<li>To use follow the instructions above to locate <code>WEB-INF/lib</code> folder</li>
<li>Replace <code>gt-app-schema</code>, <code>gt-complex</code> and <code>gt-xsd-core</code> jars with those supplied by the patch</li>
</ol>
<h3 id="references">References</h3>
<p><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a>
<a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a>
<a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a>
<a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/geoserver/geoserver/security/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
<li><a href="https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w">https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36401">https://nvd.nist.gov/vuln/detail/CVE-2024-36401</a></li>
<li><a href="https://github.com/geotools/geotools/pull/4797">https://github.com/geotools/geotools/pull/4797</a></li>
<li><a href="https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852">https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOT-7587">https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li>
<li><a href="https://github.com/advisories/GHSA-6jj6-gm7p-fcvv">https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jj6-gm7p-fcvv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:34:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-gwc] Classpath resource disclosure in GWC Web Resource API on Windows / Tomcat]]></title>
        <id>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</id>
        <link href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3"/>
        <updated>2024-07-01T19:24:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If GeoServer is deployed in the Windows operating system using an Apache Tomcat web application server, it is possible to bypass existing input validation in the GeoWebCache ByteStreamController class and read arbitrary classpath resources with specific file name extensions.</p>
<p>If GeoServer is also deployed as a web archive using the data directory embedded in the geoserver.war file (rather than an external data directory), it will likely be possible to read specific resources to gain administrator privileges.  However, it is very unlikely that production environments will be using the embedded data directory since, depending on how GeoServer is deployed, it will be erased and re-installed (which would also reset to the default password) either every time the server restarts or every time a new GeoServer WAR is installed and is therefore difficult to maintain. An external data directory will always be used if GeoServer is running in standalone mode (via an installer or a binary).</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Change environment:</p>
<ul>
<li>Change from Windows operating system. This vulnerability depends on Windows file paths so Linux and Mac OS are not vulnerable.</li>
<li>Change from Apache Tomcat application server. Jetty and WildFly are confirmed to not be vulnerable. Other application servers have not been tested and may be vulnerable.</li>
</ul>
<p>Disable anonymous access to the embeded GeoWebCache administration and status pages:</p>
<ol>
<li>Navigate to <strong>Security &gt; Authentication</strong> Page</li>
<li>Locate <strong>Filter Chains</strong> heading</li>
<li>Select the <code>web</code> filter filter chain (ant pattern <code>/web/**,/gwc/rest/web/**,/</code>)</li>
<li>Remove <code>,/gwc/rest/web/**</code> from the pattern (so that <code>/web/**,/</code> is left).</li>
<li>Save the changes</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li>CVE-Pending</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24749">https://nvd.nist.gov/vuln/detail/CVE-2024-24749</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef">https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef</a></li>
<li><a href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-gwc] Classpath resource disclosure in GWC Web Resource API on Windows / Tomcat]]></title>
        <id>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</id>
        <link href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3"/>
        <updated>2024-07-01T19:24:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If GeoServer is deployed in the Windows operating system using an Apache Tomcat web application server, it is possible to bypass existing input validation in the GeoWebCache ByteStreamController class and read arbitrary classpath resources with specific file name extensions.</p>
<p>If GeoServer is also deployed as a web archive using the data directory embedded in the geoserver.war file (rather than an external data directory), it will likely be possible to read specific resources to gain administrator privileges.  However, it is very unlikely that production environments will be using the embedded data directory since, depending on how GeoServer is deployed, it will be erased and re-installed (which would also reset to the default password) either every time the server restarts or every time a new GeoServer WAR is installed and is therefore difficult to maintain. An external data directory will always be used if GeoServer is running in standalone mode (via an installer or a binary).</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Change environment:</p>
<ul>
<li>Change from Windows operating system. This vulnerability depends on Windows file paths so Linux and Mac OS are not vulnerable.</li>
<li>Change from Apache Tomcat application server. Jetty and WildFly are confirmed to not be vulnerable. Other application servers have not been tested and may be vulnerable.</li>
</ul>
<p>Disable anonymous access to the embeded GeoWebCache administration and status pages:</p>
<ol>
<li>Navigate to <strong>Security &gt; Authentication</strong> Page</li>
<li>Locate <strong>Filter Chains</strong> heading</li>
<li>Select the <code>web</code> filter filter chain (ant pattern <code>/web/**,/gwc/rest/web/**,/</code>)</li>
<li>Remove <code>,/gwc/rest/web/**</code> from the pattern (so that <code>/web/**,/</code> is left).</li>
<li>Save the changes</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li>CVE-Pending</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24749">https://nvd.nist.gov/vuln/detail/CVE-2024-24749</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef">https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef</a></li>
<li><a href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Classpath resource disclosure in GWC Web Resource API on Windows / Tomcat]]></title>
        <id>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</id>
        <link href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3"/>
        <updated>2024-07-01T19:24:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If GeoServer is deployed in the Windows operating system using an Apache Tomcat web application server, it is possible to bypass existing input validation in the GeoWebCache ByteStreamController class and read arbitrary classpath resources with specific file name extensions.</p>
<p>If GeoServer is also deployed as a web archive using the data directory embedded in the geoserver.war file (rather than an external data directory), it will likely be possible to read specific resources to gain administrator privileges.  However, it is very unlikely that production environments will be using the embedded data directory since, depending on how GeoServer is deployed, it will be erased and re-installed (which would also reset to the default password) either every time the server restarts or every time a new GeoServer WAR is installed and is therefore difficult to maintain. An external data directory will always be used if GeoServer is running in standalone mode (via an installer or a binary).</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Change environment:</p>
<ul>
<li>Change from Windows operating system. This vulnerability depends on Windows file paths so Linux and Mac OS are not vulnerable.</li>
<li>Change from Apache Tomcat application server. Jetty and WildFly are confirmed to not be vulnerable. Other application servers have not been tested and may be vulnerable.</li>
</ul>
<p>Disable anonymous access to the embeded GeoWebCache administration and status pages:</p>
<ol>
<li>Navigate to <strong>Security &gt; Authentication</strong> Page</li>
<li>Locate <strong>Filter Chains</strong> heading</li>
<li>Select the <code>web</code> filter filter chain (ant pattern <code>/web/**,/gwc/rest/web/**,/</code>)</li>
<li>Remove <code>,/gwc/rest/web/**</code> from the pattern (so that <code>/web/**,/</code> is left).</li>
<li>Save the changes</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li>CVE-Pending</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24749">https://nvd.nist.gov/vuln/detail/CVE-2024-24749</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef">https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef</a></li>
<li><a href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Classpath resource disclosure in GWC Web Resource API on Windows / Tomcat]]></title>
        <id>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</id>
        <link href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3"/>
        <updated>2024-07-01T19:24:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If GeoServer is deployed in the Windows operating system using an Apache Tomcat web application server, it is possible to bypass existing input validation in the GeoWebCache ByteStreamController class and read arbitrary classpath resources with specific file name extensions.</p>
<p>If GeoServer is also deployed as a web archive using the data directory embedded in the geoserver.war file (rather than an external data directory), it will likely be possible to read specific resources to gain administrator privileges.  However, it is very unlikely that production environments will be using the embedded data directory since, depending on how GeoServer is deployed, it will be erased and re-installed (which would also reset to the default password) either every time the server restarts or every time a new GeoServer WAR is installed and is therefore difficult to maintain. An external data directory will always be used if GeoServer is running in standalone mode (via an installer or a binary).</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Change environment:</p>
<ul>
<li>Change from Windows operating system. This vulnerability depends on Windows file paths so Linux and Mac OS are not vulnerable.</li>
<li>Change from Apache Tomcat application server. Jetty and WildFly are confirmed to not be vulnerable. Other application servers have not been tested and may be vulnerable.</li>
</ul>
<p>Disable anonymous access to the embeded GeoWebCache administration and status pages:</p>
<ol>
<li>Navigate to <strong>Security &gt; Authentication</strong> Page</li>
<li>Locate <strong>Filter Chains</strong> heading</li>
<li>Select the <code>web</code> filter filter chain (ant pattern <code>/web/**,/gwc/rest/web/**,/</code>)</li>
<li>Remove <code>,/gwc/rest/web/**</code> from the pattern (so that <code>/web/**,/</code> is left).</li>
<li>Save the changes</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li>CVE-Pending</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/geoserver/geoserver/security/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24749">https://nvd.nist.gov/vuln/detail/CVE-2024-24749</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/pull/1211">https://github.com/GeoWebCache/geowebcache/pull/1211</a></li>
<li><a href="https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef">https://github.com/GeoWebCache/geowebcache/commit/c7f76bd8a1d67c3b986146e7a5e0b14dd64a8fef</a></li>
<li><a href="https://github.com/advisories/GHSA-jhqx-5v5g-mpf3">https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhqx-5v5g-mpf3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T19:24:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-main]  GeoServer's Server Status shows sensitive environmental variables and Java properties]]></title>
        <id>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</id>
        <link href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf"/>
        <updated>2024-07-01T19:20:59.000Z</updated>
        <content type="html"><![CDATA[<p>GeoServer's Server Status page and REST API (at <code>/geoserver/rest/about/status</code>) lists <em>all</em> environment variables and Java properties to <em>any</em> GeoServer user with administrative rights as part of those modules' status message.</p>
<p>These variables/properties can also contain sensitive information, such as database passwords or API keys/tokens, for example:</p>
<ul>
<li><p>Data stores defined with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>) which need a password or access key.</p>
</li>
<li><p>GeoServer's official Docker image <a href="https://github.com/geoserver/docker/blob/master/README.md#how-to-enable-a-postgresql-jndi-resource">uses environment variables to configure PostgreSQL JNDI resources, including credentials</a> (<code>POSTGRES_HOST</code>, <code>POSTGRES_USERNAME</code>, <code>POSTGRES_PASSWORD</code>)</p>
</li>
</ul>
<p>Additionally, many community-developed GeoServer container images <code>export</code> other credentials from their start-up scripts as environment variables to the GeoServer (<code>java</code>) process, such as:</p>
<ul>
<li><p>GeoServer <code>admin</code> and master (<code>root</code>) passwords</p>
</li>
<li><p>Tomcat management application password</p>
</li>
<li><p>HTTPS/TLS certificate key store password</p>
</li>
<li><p>AWS S3 bucket access keys</p>
</li>
</ul>
<p>The precise scope of the issue depends on which container image is used and how it is configured.</p>
<blockquote>
<p>[!NOTE]
Some container images allow passing secrets as files (eg: <code>POSTGRES_PASSWORD_FILE</code>), or randomly generating passwords on start-up. While this is promoted as best-practice[^secret-files], if its start-up script <a href="https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-export"><code>export</code>s these as environment variables</a> to GeoServer, they are <strong>also</strong> impacted by this issue.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>The “about status” API endpoint (at <code>/geoserver/rest/about/status</code>) which powers the Server Status page is only available to administrators.</p>
<p>Depending on the operating environment, administrators might have legitimate access to credentials in other ways, but this issue defeats more sophisticated controls (like break-glass access to secrets or role accounts).</p>
<p>By default, GeoServer only allows same-origin authenticated API access. This limits the scope for a third-party attacker to use an administrator’s credentials to gain access to credentials (ie: requires XSS).</p>
<p>We were unable to determine any other conditions under which the GeoServer REST API may be available more broadly.</p>
<h3 id="fixes--remediation">Fixes / remediation</h3>
<p>GeoServer 2.24.4 and 2.25.1 hide <strong>all</strong> environment variables and Java system properties <em>by default</em>, with <em>no further action required by GeoServer administrators</em>.</p>
<p><a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">There are new settings to allow an administrator to display these again</a> – effectively <strong>reverting</strong> this security fix. We strongly recommend administrators leave these settings as-is, and use alternative mechanisms to access environment variables (instructions below).</p>
<p>If you're using GeoServer in a container runtime (such as Docker or Kubernetes) or from some other distributor's packages, you'll need to wait for the maintainer to update the version of GeoServer used in their image.</p>
<blockquote>
<p>[!WARNING]
If you run GeoServer with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>), a GeoServer administrator could use this to access any environment variable or Java property by including it in some field which is rendered by the UI (such as the description field), <strong>even with this fix</strong>.</p>
</blockquote>
<h3 id="advice-for-container--docker-image-maintainers">Advice for container / Docker image maintainers</h3>
<p>Update container images to use GeoServer 2.24.4 or 2.25.1 to get the bug fix.</p>
<p>Please leave environment variables and Java system properties hidden by default. If you provide the option to re-enable it, <a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">communicate the impact and risks</a> so that users can make an informed choice.</p>
<p>Container images should practice "defence in depth", to limit the impact when it is configured to show environment variables and/or properties:</p>
<ul>
<li><p>Pass secrets to the container as either:</p>
<ul>
<li>files which are only readable by the GeoServer process/UID, or,</li>
<li>references (identifiers) to a secret stored in a cloud provider's metadata or secret management service</li>
</ul>
</li>
<li><p>Pass secrets to GeoServer by generating configuration files as part of your start-up scripts, rather than passing variables/properties or relying on <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a>.</p>
</li>
<li><p>Ensure any configuration files with secrets are not readable by other users.</p>
</li>
<li><p>Clear all environment variables which contain secrets <em>before</em> starting GeoServer.</p>
<p><em>Alternatively:</em> start up GeoServer with <em>only</em> the environment variables it needs, and no secrets.</p>
</li>
<li><p><strong>Don't</strong> pass secrets as command-line flags – these are shown in <code>ps</code> to all users!</p>
</li>
</ul>
<h3 id="alternatives-for-displaying-geoservers-environment-variables">Alternatives for displaying GeoServer's environment variables</h3>
<ul>
<li><p><strong>On Linux,</strong> you can get all environment variables <a href="https://unix.stackexchange.com/a/70636">set at <em>start-up time</em></a> for a running process with:</p>
<pre><code class="language-sh">tr '\0' '\n' &lt; /proc/${GEOSERVER_PID}/environ
</code></pre>
</li>
<li><p><strong>On Windows,</strong> <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer">SysInternals' Process Explorer</a> can show running processes' environment variables.</p>
</li>
<li><p>Current versions of <strong>macOS</strong> do not allow arbitrary access to other running processes' environment variables. Disabling these restrictions (on a macOS level) would significantly reduce the overall security of the system.</p>
</li>
</ul>
<p>[^secret-files]: <a href="https://docs.docker.com/compose/use-secrets/">Docker Compose: How to use secrets in Docker Compose</a>, <a href="https://docs.docker.com/engine/swarm/secrets/#build-support-for-docker-secrets-into-your-images">Docker Swarm: Build support for Docker Secrets into your images</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34696">https://nvd.nist.gov/vuln/detail/CVE-2024-34696</a></li>
<li><a href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/advisories/GHSA-j59v-vgcr-hxvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T19:20:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-main]  GeoServer's Server Status shows sensitive environmental variables and Java properties]]></title>
        <id>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</id>
        <link href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf"/>
        <updated>2024-07-01T19:20:59.000Z</updated>
        <content type="html"><![CDATA[<p>GeoServer's Server Status page and REST API (at <code>/geoserver/rest/about/status</code>) lists <em>all</em> environment variables and Java properties to <em>any</em> GeoServer user with administrative rights as part of those modules' status message.</p>
<p>These variables/properties can also contain sensitive information, such as database passwords or API keys/tokens, for example:</p>
<ul>
<li><p>Data stores defined with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>) which need a password or access key.</p>
</li>
<li><p>GeoServer's official Docker image <a href="https://github.com/geoserver/docker/blob/master/README.md#how-to-enable-a-postgresql-jndi-resource">uses environment variables to configure PostgreSQL JNDI resources, including credentials</a> (<code>POSTGRES_HOST</code>, <code>POSTGRES_USERNAME</code>, <code>POSTGRES_PASSWORD</code>)</p>
</li>
</ul>
<p>Additionally, many community-developed GeoServer container images <code>export</code> other credentials from their start-up scripts as environment variables to the GeoServer (<code>java</code>) process, such as:</p>
<ul>
<li><p>GeoServer <code>admin</code> and master (<code>root</code>) passwords</p>
</li>
<li><p>Tomcat management application password</p>
</li>
<li><p>HTTPS/TLS certificate key store password</p>
</li>
<li><p>AWS S3 bucket access keys</p>
</li>
</ul>
<p>The precise scope of the issue depends on which container image is used and how it is configured.</p>
<blockquote>
<p>[!NOTE]
Some container images allow passing secrets as files (eg: <code>POSTGRES_PASSWORD_FILE</code>), or randomly generating passwords on start-up. While this is promoted as best-practice[^secret-files], if its start-up script <a href="https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-export"><code>export</code>s these as environment variables</a> to GeoServer, they are <strong>also</strong> impacted by this issue.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>The “about status” API endpoint (at <code>/geoserver/rest/about/status</code>) which powers the Server Status page is only available to administrators.</p>
<p>Depending on the operating environment, administrators might have legitimate access to credentials in other ways, but this issue defeats more sophisticated controls (like break-glass access to secrets or role accounts).</p>
<p>By default, GeoServer only allows same-origin authenticated API access. This limits the scope for a third-party attacker to use an administrator’s credentials to gain access to credentials (ie: requires XSS).</p>
<p>We were unable to determine any other conditions under which the GeoServer REST API may be available more broadly.</p>
<h3 id="fixes--remediation">Fixes / remediation</h3>
<p>GeoServer 2.24.4 and 2.25.1 hide <strong>all</strong> environment variables and Java system properties <em>by default</em>, with <em>no further action required by GeoServer administrators</em>.</p>
<p><a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">There are new settings to allow an administrator to display these again</a> – effectively <strong>reverting</strong> this security fix. We strongly recommend administrators leave these settings as-is, and use alternative mechanisms to access environment variables (instructions below).</p>
<p>If you're using GeoServer in a container runtime (such as Docker or Kubernetes) or from some other distributor's packages, you'll need to wait for the maintainer to update the version of GeoServer used in their image.</p>
<blockquote>
<p>[!WARNING]
If you run GeoServer with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>), a GeoServer administrator could use this to access any environment variable or Java property by including it in some field which is rendered by the UI (such as the description field), <strong>even with this fix</strong>.</p>
</blockquote>
<h3 id="advice-for-container--docker-image-maintainers">Advice for container / Docker image maintainers</h3>
<p>Update container images to use GeoServer 2.24.4 or 2.25.1 to get the bug fix.</p>
<p>Please leave environment variables and Java system properties hidden by default. If you provide the option to re-enable it, <a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">communicate the impact and risks</a> so that users can make an informed choice.</p>
<p>Container images should practice "defence in depth", to limit the impact when it is configured to show environment variables and/or properties:</p>
<ul>
<li><p>Pass secrets to the container as either:</p>
<ul>
<li>files which are only readable by the GeoServer process/UID, or,</li>
<li>references (identifiers) to a secret stored in a cloud provider's metadata or secret management service</li>
</ul>
</li>
<li><p>Pass secrets to GeoServer by generating configuration files as part of your start-up scripts, rather than passing variables/properties or relying on <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a>.</p>
</li>
<li><p>Ensure any configuration files with secrets are not readable by other users.</p>
</li>
<li><p>Clear all environment variables which contain secrets <em>before</em> starting GeoServer.</p>
<p><em>Alternatively:</em> start up GeoServer with <em>only</em> the environment variables it needs, and no secrets.</p>
</li>
<li><p><strong>Don't</strong> pass secrets as command-line flags – these are shown in <code>ps</code> to all users!</p>
</li>
</ul>
<h3 id="alternatives-for-displaying-geoservers-environment-variables">Alternatives for displaying GeoServer's environment variables</h3>
<ul>
<li><p><strong>On Linux,</strong> you can get all environment variables <a href="https://unix.stackexchange.com/a/70636">set at <em>start-up time</em></a> for a running process with:</p>
<pre><code class="language-sh">tr '\0' '\n' &lt; /proc/${GEOSERVER_PID}/environ
</code></pre>
</li>
<li><p><strong>On Windows,</strong> <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer">SysInternals' Process Explorer</a> can show running processes' environment variables.</p>
</li>
<li><p>Current versions of <strong>macOS</strong> do not allow arbitrary access to other running processes' environment variables. Disabling these restrictions (on a macOS level) would significantly reduce the overall security of the system.</p>
</li>
</ul>
<p>[^secret-files]: <a href="https://docs.docker.com/compose/use-secrets/">Docker Compose: How to use secrets in Docker Compose</a>, <a href="https://docs.docker.com/engine/swarm/secrets/#build-support-for-docker-secrets-into-your-images">Docker Swarm: Build support for Docker Secrets into your images</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34696">https://nvd.nist.gov/vuln/detail/CVE-2024-34696</a></li>
<li><a href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/advisories/GHSA-j59v-vgcr-hxvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T19:20:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app]  GeoServer's Server Status shows sensitive environmental variables and Java properties]]></title>
        <id>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</id>
        <link href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf"/>
        <updated>2024-07-01T19:20:59.000Z</updated>
        <content type="html"><![CDATA[<p>GeoServer's Server Status page and REST API (at <code>/geoserver/rest/about/status</code>) lists <em>all</em> environment variables and Java properties to <em>any</em> GeoServer user with administrative rights as part of those modules' status message.</p>
<p>These variables/properties can also contain sensitive information, such as database passwords or API keys/tokens, for example:</p>
<ul>
<li><p>Data stores defined with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>) which need a password or access key.</p>
</li>
<li><p>GeoServer's official Docker image <a href="https://github.com/geoserver/docker/blob/master/README.md#how-to-enable-a-postgresql-jndi-resource">uses environment variables to configure PostgreSQL JNDI resources, including credentials</a> (<code>POSTGRES_HOST</code>, <code>POSTGRES_USERNAME</code>, <code>POSTGRES_PASSWORD</code>)</p>
</li>
</ul>
<p>Additionally, many community-developed GeoServer container images <code>export</code> other credentials from their start-up scripts as environment variables to the GeoServer (<code>java</code>) process, such as:</p>
<ul>
<li><p>GeoServer <code>admin</code> and master (<code>root</code>) passwords</p>
</li>
<li><p>Tomcat management application password</p>
</li>
<li><p>HTTPS/TLS certificate key store password</p>
</li>
<li><p>AWS S3 bucket access keys</p>
</li>
</ul>
<p>The precise scope of the issue depends on which container image is used and how it is configured.</p>
<blockquote>
<p>[!NOTE]
Some container images allow passing secrets as files (eg: <code>POSTGRES_PASSWORD_FILE</code>), or randomly generating passwords on start-up. While this is promoted as best-practice[^secret-files], if its start-up script <a href="https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-export"><code>export</code>s these as environment variables</a> to GeoServer, they are <strong>also</strong> impacted by this issue.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>The “about status” API endpoint (at <code>/geoserver/rest/about/status</code>) which powers the Server Status page is only available to administrators.</p>
<p>Depending on the operating environment, administrators might have legitimate access to credentials in other ways, but this issue defeats more sophisticated controls (like break-glass access to secrets or role accounts).</p>
<p>By default, GeoServer only allows same-origin authenticated API access. This limits the scope for a third-party attacker to use an administrator’s credentials to gain access to credentials (ie: requires XSS).</p>
<p>We were unable to determine any other conditions under which the GeoServer REST API may be available more broadly.</p>
<h3 id="fixes--remediation">Fixes / remediation</h3>
<p>GeoServer 2.24.4 and 2.25.1 hide <strong>all</strong> environment variables and Java system properties <em>by default</em>, with <em>no further action required by GeoServer administrators</em>.</p>
<p><a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">There are new settings to allow an administrator to display these again</a> – effectively <strong>reverting</strong> this security fix. We strongly recommend administrators leave these settings as-is, and use alternative mechanisms to access environment variables (instructions below).</p>
<p>If you're using GeoServer in a container runtime (such as Docker or Kubernetes) or from some other distributor's packages, you'll need to wait for the maintainer to update the version of GeoServer used in their image.</p>
<blockquote>
<p>[!WARNING]
If you run GeoServer with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>), a GeoServer administrator could use this to access any environment variable or Java property by including it in some field which is rendered by the UI (such as the description field), <strong>even with this fix</strong>.</p>
</blockquote>
<h3 id="advice-for-container--docker-image-maintainers">Advice for container / Docker image maintainers</h3>
<p>Update container images to use GeoServer 2.24.4 or 2.25.1 to get the bug fix.</p>
<p>Please leave environment variables and Java system properties hidden by default. If you provide the option to re-enable it, <a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">communicate the impact and risks</a> so that users can make an informed choice.</p>
<p>Container images should practice "defence in depth", to limit the impact when it is configured to show environment variables and/or properties:</p>
<ul>
<li><p>Pass secrets to the container as either:</p>
<ul>
<li>files which are only readable by the GeoServer process/UID, or,</li>
<li>references (identifiers) to a secret stored in a cloud provider's metadata or secret management service</li>
</ul>
</li>
<li><p>Pass secrets to GeoServer by generating configuration files as part of your start-up scripts, rather than passing variables/properties or relying on <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a>.</p>
</li>
<li><p>Ensure any configuration files with secrets are not readable by other users.</p>
</li>
<li><p>Clear all environment variables which contain secrets <em>before</em> starting GeoServer.</p>
<p><em>Alternatively:</em> start up GeoServer with <em>only</em> the environment variables it needs, and no secrets.</p>
</li>
<li><p><strong>Don't</strong> pass secrets as command-line flags – these are shown in <code>ps</code> to all users!</p>
</li>
</ul>
<h3 id="alternatives-for-displaying-geoservers-environment-variables">Alternatives for displaying GeoServer's environment variables</h3>
<ul>
<li><p><strong>On Linux,</strong> you can get all environment variables <a href="https://unix.stackexchange.com/a/70636">set at <em>start-up time</em></a> for a running process with:</p>
<pre><code class="language-sh">tr '\0' '\n' &lt; /proc/${GEOSERVER_PID}/environ
</code></pre>
</li>
<li><p><strong>On Windows,</strong> <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer">SysInternals' Process Explorer</a> can show running processes' environment variables.</p>
</li>
<li><p>Current versions of <strong>macOS</strong> do not allow arbitrary access to other running processes' environment variables. Disabling these restrictions (on a macOS level) would significantly reduce the overall security of the system.</p>
</li>
</ul>
<p>[^secret-files]: <a href="https://docs.docker.com/compose/use-secrets/">Docker Compose: How to use secrets in Docker Compose</a>, <a href="https://docs.docker.com/engine/swarm/secrets/#build-support-for-docker-secrets-into-your-images">Docker Swarm: Build support for Docker Secrets into your images</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34696">https://nvd.nist.gov/vuln/detail/CVE-2024-34696</a></li>
<li><a href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/advisories/GHSA-j59v-vgcr-hxvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T19:20:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app]  GeoServer's Server Status shows sensitive environmental variables and Java properties]]></title>
        <id>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</id>
        <link href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf"/>
        <updated>2024-07-01T19:20:59.000Z</updated>
        <content type="html"><![CDATA[<p>GeoServer's Server Status page and REST API (at <code>/geoserver/rest/about/status</code>) lists <em>all</em> environment variables and Java properties to <em>any</em> GeoServer user with administrative rights as part of those modules' status message.</p>
<p>These variables/properties can also contain sensitive information, such as database passwords or API keys/tokens, for example:</p>
<ul>
<li><p>Data stores defined with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>) which need a password or access key.</p>
</li>
<li><p>GeoServer's official Docker image <a href="https://github.com/geoserver/docker/blob/master/README.md#how-to-enable-a-postgresql-jndi-resource">uses environment variables to configure PostgreSQL JNDI resources, including credentials</a> (<code>POSTGRES_HOST</code>, <code>POSTGRES_USERNAME</code>, <code>POSTGRES_PASSWORD</code>)</p>
</li>
</ul>
<p>Additionally, many community-developed GeoServer container images <code>export</code> other credentials from their start-up scripts as environment variables to the GeoServer (<code>java</code>) process, such as:</p>
<ul>
<li><p>GeoServer <code>admin</code> and master (<code>root</code>) passwords</p>
</li>
<li><p>Tomcat management application password</p>
</li>
<li><p>HTTPS/TLS certificate key store password</p>
</li>
<li><p>AWS S3 bucket access keys</p>
</li>
</ul>
<p>The precise scope of the issue depends on which container image is used and how it is configured.</p>
<blockquote>
<p>[!NOTE]
Some container images allow passing secrets as files (eg: <code>POSTGRES_PASSWORD_FILE</code>), or randomly generating passwords on start-up. While this is promoted as best-practice[^secret-files], if its start-up script <a href="https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-export"><code>export</code>s these as environment variables</a> to GeoServer, they are <strong>also</strong> impacted by this issue.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>The “about status” API endpoint (at <code>/geoserver/rest/about/status</code>) which powers the Server Status page is only available to administrators.</p>
<p>Depending on the operating environment, administrators might have legitimate access to credentials in other ways, but this issue defeats more sophisticated controls (like break-glass access to secrets or role accounts).</p>
<p>By default, GeoServer only allows same-origin authenticated API access. This limits the scope for a third-party attacker to use an administrator’s credentials to gain access to credentials (ie: requires XSS).</p>
<p>We were unable to determine any other conditions under which the GeoServer REST API may be available more broadly.</p>
<h3 id="fixes--remediation">Fixes / remediation</h3>
<p>GeoServer 2.24.4 and 2.25.1 hide <strong>all</strong> environment variables and Java system properties <em>by default</em>, with <em>no further action required by GeoServer administrators</em>.</p>
<p><a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">There are new settings to allow an administrator to display these again</a> – effectively <strong>reverting</strong> this security fix. We strongly recommend administrators leave these settings as-is, and use alternative mechanisms to access environment variables (instructions below).</p>
<p>If you're using GeoServer in a container runtime (such as Docker or Kubernetes) or from some other distributor's packages, you'll need to wait for the maintainer to update the version of GeoServer used in their image.</p>
<blockquote>
<p>[!WARNING]
If you run GeoServer with <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a> (<code>-DALLOW_ENV_PARAMETRIZATION=true</code>), a GeoServer administrator could use this to access any environment variable or Java property by including it in some field which is rendered by the UI (such as the description field), <strong>even with this fix</strong>.</p>
</blockquote>
<h3 id="advice-for-container--docker-image-maintainers">Advice for container / Docker image maintainers</h3>
<p>Update container images to use GeoServer 2.24.4 or 2.25.1 to get the bug fix.</p>
<p>Please leave environment variables and Java system properties hidden by default. If you provide the option to re-enable it, <a href="https://docs.geoserver.org/latest/en/user/production/config.html#showing-environment-variables-and-java-system-properties">communicate the impact and risks</a> so that users can make an informed choice.</p>
<p>Container images should practice "defence in depth", to limit the impact when it is configured to show environment variables and/or properties:</p>
<ul>
<li><p>Pass secrets to the container as either:</p>
<ul>
<li>files which are only readable by the GeoServer process/UID, or,</li>
<li>references (identifiers) to a secret stored in a cloud provider's metadata or secret management service</li>
</ul>
</li>
<li><p>Pass secrets to GeoServer by generating configuration files as part of your start-up scripts, rather than passing variables/properties or relying on <a href="https://docs.geoserver.org/latest/en/user/datadirectory/configtemplate.html">parameterized catalog settings</a>.</p>
</li>
<li><p>Ensure any configuration files with secrets are not readable by other users.</p>
</li>
<li><p>Clear all environment variables which contain secrets <em>before</em> starting GeoServer.</p>
<p><em>Alternatively:</em> start up GeoServer with <em>only</em> the environment variables it needs, and no secrets.</p>
</li>
<li><p><strong>Don't</strong> pass secrets as command-line flags – these are shown in <code>ps</code> to all users!</p>
</li>
</ul>
<h3 id="alternatives-for-displaying-geoservers-environment-variables">Alternatives for displaying GeoServer's environment variables</h3>
<ul>
<li><p><strong>On Linux,</strong> you can get all environment variables <a href="https://unix.stackexchange.com/a/70636">set at <em>start-up time</em></a> for a running process with:</p>
<pre><code class="language-sh">tr '\0' '\n' &lt; /proc/${GEOSERVER_PID}/environ
</code></pre>
</li>
<li><p><strong>On Windows,</strong> <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer">SysInternals' Process Explorer</a> can show running processes' environment variables.</p>
</li>
<li><p>Current versions of <strong>macOS</strong> do not allow arbitrary access to other running processes' environment variables. Disabling these restrictions (on a macOS level) would significantly reduce the overall security of the system.</p>
</li>
</ul>
<p>[^secret-files]: <a href="https://docs.docker.com/compose/use-secrets/">Docker Compose: How to use secrets in Docker Compose</a>, <a href="https://docs.docker.com/engine/swarm/secrets/#build-support-for-docker-secrets-into-your-images">Docker Swarm: Build support for Docker Secrets into your images</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/geoserver/geoserver/security/advisories/GHSA-j59v-vgcr-hxvf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34696">https://nvd.nist.gov/vuln/detail/CVE-2024-34696</a></li>
<li><a href="https://github.com/advisories/GHSA-j59v-vgcr-hxvf">https://github.com/advisories/GHSA-j59v-vgcr-hxvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j59v-vgcr-hxvf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T19:20:57.000Z</published>
    </entry>
</feed>