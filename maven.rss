<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-13T17:01:24.659Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper Input Validation in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-pvwx-3jx5-24r2</id>
        <link href="https://github.com/advisories/GHSA-pvwx-3jx5-24r2"/>
        <updated>2022-12-13T16:41:12.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not validate the type of object created after loading the data submitted to the <code>config.xml</code> REST API endpoint of a node, allowing attackers with Computer/Configure permission to replace a node with one of a different type.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21639">https://nvd.nist.gov/vuln/detail/CVE-2021-21639</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1721">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1721</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-pvwx-3jx5-24r2">https://github.com/advisories/GHSA-pvwx-3jx5-24r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvwx-3jx5-24r2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper Input Validation in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-pvwx-3jx5-24r2</id>
        <link href="https://github.com/advisories/GHSA-pvwx-3jx5-24r2"/>
        <updated>2022-12-13T16:41:12.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not validate the type of object created after loading the data submitted to the <code>config.xml</code> REST API endpoint of a node, allowing attackers with Computer/Configure permission to replace a node with one of a different type.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21639">https://nvd.nist.gov/vuln/detail/CVE-2021-21639</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1721">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1721</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-pvwx-3jx5-24r2">https://github.com/advisories/GHSA-pvwx-3jx5-24r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvwx-3jx5-24r2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Time-of-check Time-of-use (TOCTOU) Race Condition in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qxp6-27gw-99cj</id>
        <link href="https://github.com/advisories/GHSA-qxp6-27gw-99cj"/>
        <updated>2022-12-13T15:58:51.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a time-of-check to time-of-use (TOCTOU) race condition, the file browser for workspaces, archived artifacts, and <code>$JENKINS_HOME/userContent/</code> follows symbolic links to locations outside the directory being browsed in Jenkins 2.275 and LTS 2.263.2.</p>
<p>This allows attackers with Job/Workspace permission and the ability to control workspace contents, e.g., with Job/Configure permission or the ability to change SCM contents, to create symbolic links that allow them to access files outside workspaces using the workspace browser.</p>
<p>This issue is caused by an incorrectly applied fix for SECURITY-1452 / CVE-2021-21602 in the <a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452">2021-01-13 security advisory</a>.</p>
<p>Jenkins 2.276, LTS 2.263.3 no longer differentiates the check and the use of symlinks in workspace browsers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21615">https://nvd.nist.gov/vuln/detail/CVE-2021-21615</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-26/#SECURITY-2197">https://www.jenkins.io/security/advisory/2021-01-26/#SECURITY-2197</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/01/26/2">http://www.openwall.com/lists/oss-security/2021/01/26/2</a></li>
<li><a href="https://github.com/advisories/GHSA-qxp6-27gw-99cj">https://github.com/advisories/GHSA-qxp6-27gw-99cj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxp6-27gw-99cj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Time-of-check Time-of-use (TOCTOU) Race Condition in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qxp6-27gw-99cj</id>
        <link href="https://github.com/advisories/GHSA-qxp6-27gw-99cj"/>
        <updated>2022-12-13T15:58:51.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a time-of-check to time-of-use (TOCTOU) race condition, the file browser for workspaces, archived artifacts, and <code>$JENKINS_HOME/userContent/</code> follows symbolic links to locations outside the directory being browsed in Jenkins 2.275 and LTS 2.263.2.</p>
<p>This allows attackers with Job/Workspace permission and the ability to control workspace contents, e.g., with Job/Configure permission or the ability to change SCM contents, to create symbolic links that allow them to access files outside workspaces using the workspace browser.</p>
<p>This issue is caused by an incorrectly applied fix for SECURITY-1452 / CVE-2021-21602 in the <a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452">2021-01-13 security advisory</a>.</p>
<p>Jenkins 2.276, LTS 2.263.3 no longer differentiates the check and the use of symlinks in workspace browsers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21615">https://nvd.nist.gov/vuln/detail/CVE-2021-21615</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-26/#SECURITY-2197">https://www.jenkins.io/security/advisory/2021-01-26/#SECURITY-2197</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/01/26/2">http://www.openwall.com/lists/oss-security/2021/01/26/2</a></li>
<li><a href="https://github.com/advisories/GHSA-qxp6-27gw-99cj">https://github.com/advisories/GHSA-qxp6-27gw-99cj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxp6-27gw-99cj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Missing permission check for paths with specific prefix in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4625-q52w-39cx</id>
        <link href="https://github.com/advisories/GHSA-4625-q52w-39cx"/>
        <updated>2022-12-13T15:31:00.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins includes a static list of URLs that are always accessible even without Overall/Read permission, such as the login form. These URLs are excluded from an otherwise universal permission check.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not correctly compare requested URLs with that list.</p>
<p>This allows attackers without Overall/Read permission to access plugin-provided URLs with any of the following prefixes if no other permissions are required:</p>
<ul>
<li><code>accessDenied</code></li>
<li><code>error</code></li>
<li><code>instance-identity</code></li>
<li><code>login</code></li>
<li><code>logout</code></li>
<li><code>oops</code></li>
<li><code>securityRealm</code></li>
<li><code>signup</code></li>
<li><code>tcpSlaveAgentListener</code></li>
</ul>
<p>For example, a plugin contributing the path <code>loginFoo/</code> would have URLs in that space accessible without the default Overall/Read permission check.</p>
<p>The Jenkins security team is not aware of any affected plugins as of the publication of this advisory.</p>
<p>The comparison of requested URLs with the list of always accessible URLs has been fixed to only allow access to the specific listed URLs in Jenkins 2.275, LTS 2.263.2.</p>
<p>In case this change causes problems, additional paths can be made accessible without Overall/Read permissions: The <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system property</a> <code>jenkins.model.Jenkins.additionalReadablePaths</code> is a comma-separated list of additional path prefixes to allow access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21609">https://nvd.nist.gov/vuln/detail/CVE-2021-21609</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2047">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2047</a></li>
<li><a href="https://github.com/advisories/GHSA-4625-q52w-39cx">https://github.com/advisories/GHSA-4625-q52w-39cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4625-q52w-39cx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Missing permission check for paths with specific prefix in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4625-q52w-39cx</id>
        <link href="https://github.com/advisories/GHSA-4625-q52w-39cx"/>
        <updated>2022-12-13T15:31:00.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins includes a static list of URLs that are always accessible even without Overall/Read permission, such as the login form. These URLs are excluded from an otherwise universal permission check.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not correctly compare requested URLs with that list.</p>
<p>This allows attackers without Overall/Read permission to access plugin-provided URLs with any of the following prefixes if no other permissions are required:</p>
<ul>
<li><code>accessDenied</code></li>
<li><code>error</code></li>
<li><code>instance-identity</code></li>
<li><code>login</code></li>
<li><code>logout</code></li>
<li><code>oops</code></li>
<li><code>securityRealm</code></li>
<li><code>signup</code></li>
<li><code>tcpSlaveAgentListener</code></li>
</ul>
<p>For example, a plugin contributing the path <code>loginFoo/</code> would have URLs in that space accessible without the default Overall/Read permission check.</p>
<p>The Jenkins security team is not aware of any affected plugins as of the publication of this advisory.</p>
<p>The comparison of requested URLs with the list of always accessible URLs has been fixed to only allow access to the specific listed URLs in Jenkins 2.275, LTS 2.263.2.</p>
<p>In case this change causes problems, additional paths can be made accessible without Overall/Read permissions: The <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system property</a> <code>jenkins.model.Jenkins.additionalReadablePaths</code> is a comma-separated list of additional path prefixes to allow access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21609">https://nvd.nist.gov/vuln/detail/CVE-2021-21609</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2047">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2047</a></li>
<li><a href="https://github.com/advisories/GHSA-4625-q52w-39cx">https://github.com/advisories/GHSA-4625-q52w-39cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4625-q52w-39cx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Excessive memory allocation in graph URLs leads to denial of service in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</id>
        <link href="https://github.com/advisories/GHSA-cxqw-vjcr-gp5g"/>
        <updated>2022-12-13T15:24:35.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins renders several different graphs for features like agent and label usage statistics, memory usage, or various plugin-provided statistics.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not limit the graph size provided as query parameters.</p>
<p>This allows attackers to request or to have legitimate Jenkins users request crafted URLs that rapidly use all available memory in Jenkins, potentially leading to out of memory errors.</p>
<p>Jenkins 2.275, LTS 2.263.2 limits the maximum size of graphs to an area of 10 million pixels. If a larger size is requested, the default size for the graph will be rendered instead.</p>
<p>This threshold can be configured by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system property</a> <code>hudson.util.Graph.maxArea</code> to a different number on startup.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21607">https://nvd.nist.gov/vuln/detail/CVE-2021-21607</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2025">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2025</a></li>
<li><a href="https://github.com/advisories/GHSA-cxqw-vjcr-gp5g">https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Excessive memory allocation in graph URLs leads to denial of service in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</id>
        <link href="https://github.com/advisories/GHSA-cxqw-vjcr-gp5g"/>
        <updated>2022-12-13T15:24:35.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins renders several different graphs for features like agent and label usage statistics, memory usage, or various plugin-provided statistics.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not limit the graph size provided as query parameters.</p>
<p>This allows attackers to request or to have legitimate Jenkins users request crafted URLs that rapidly use all available memory in Jenkins, potentially leading to out of memory errors.</p>
<p>Jenkins 2.275, LTS 2.263.2 limits the maximum size of graphs to an area of 10 million pixels. If a larger size is requested, the default size for the graph will be rendered instead.</p>
<p>This threshold can be configured by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system property</a> <code>hudson.util.Graph.maxArea</code> to a different number on startup.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21607">https://nvd.nist.gov/vuln/detail/CVE-2021-21607</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2025">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2025</a></li>
<li><a href="https://github.com/advisories/GHSA-cxqw-vjcr-gp5g">https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxqw-vjcr-gp5g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Arbitrary file existence check in file fingerprints in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-f585-9fw3-rj2m</id>
        <link href="https://github.com/advisories/GHSA-f585-9fw3-rj2m"/>
        <updated>2022-12-13T15:20:04.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides a feature for jobs to store and track fingerprints of files used during a build. Jenkins 2.274 and earlier, LTS 2.263.1 and earlier provides a REST API to check where a given fingerprint was used by which builds. This endpoint does not fully validate that the provided fingerprint ID is properly formatted before checking for the XML metadata for that fingerprint on the controller file system.</p>
<p>This allows attackers with Overall/Read permission to check for the existence of XML files on the controller file system where the relative path can be constructed as 32 characters.</p>
<p>Jenkins 2.275, LTS 2.263.2 validates that a fingerprint ID is properly formatted before checking for its existence.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21606">https://nvd.nist.gov/vuln/detail/CVE-2021-21606</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2023">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2023</a></li>
<li><a href="https://github.com/advisories/GHSA-f585-9fw3-rj2m">https://github.com/advisories/GHSA-f585-9fw3-rj2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f585-9fw3-rj2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Arbitrary file existence check in file fingerprints in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-f585-9fw3-rj2m</id>
        <link href="https://github.com/advisories/GHSA-f585-9fw3-rj2m"/>
        <updated>2022-12-13T15:20:04.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides a feature for jobs to store and track fingerprints of files used during a build. Jenkins 2.274 and earlier, LTS 2.263.1 and earlier provides a REST API to check where a given fingerprint was used by which builds. This endpoint does not fully validate that the provided fingerprint ID is properly formatted before checking for the XML metadata for that fingerprint on the controller file system.</p>
<p>This allows attackers with Overall/Read permission to check for the existence of XML files on the controller file system where the relative path can be constructed as 32 characters.</p>
<p>Jenkins 2.275, LTS 2.263.2 validates that a fingerprint ID is properly formatted before checking for its existence.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21606">https://nvd.nist.gov/vuln/detail/CVE-2021-21606</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2023">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2023</a></li>
<li><a href="https://github.com/advisories/GHSA-f585-9fw3-rj2m">https://github.com/advisories/GHSA-f585-9fw3-rj2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f585-9fw3-rj2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Arbitrary file read vulnerability in workspace browsers in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-vpjm-58cw-r8q5</id>
        <link href="https://github.com/advisories/GHSA-vpjm-58cw-r8q5"/>
        <updated>2022-12-13T15:17:04.000Z</updated>
        <content type="html"><![CDATA[<p>The file browser for workspaces, archived artifacts, and <code>$JENKINS_HOME/userContent/</code> follows symbolic links to locations outside the directory being browsed in Jenkins 2.274 and earlier, LTS 2.263.1 and earlier.</p>
<p>This allows attackers with Job/Workspace permission and the ability to control workspace contents (e.g., with Job/Configure permission or the ability to change SCM contents) to create symbolic links that allow them to access files outside workspaces using the workspace browser.</p>
<p>This issue is caused by an incomplete fix for SECURITY-904 / CVE-2018-1000862 in the <a href="https://www.jenkins.io/security/advisory/2018-12-05/#SECURITY-904">2018-12-08 security advisory</a>.</p>
<p>Jenkins 2.275, LTS 2.263.2 no longer supports symlinks in workspace browsers. While they may still exist on the file system, they are no longer shown on the UI, accessible via URLs, or included in directory content downloads.</p>
<p>This fix only changes the behavior of the Jenkins UI. Archiving artifacts still behaves as before.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21602">https://nvd.nist.gov/vuln/detail/CVE-2021-21602</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452</a></li>
<li><a href="https://github.com/advisories/GHSA-vpjm-58cw-r8q5">https://github.com/advisories/GHSA-vpjm-58cw-r8q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpjm-58cw-r8q5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Arbitrary file read vulnerability in workspace browsers in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-vpjm-58cw-r8q5</id>
        <link href="https://github.com/advisories/GHSA-vpjm-58cw-r8q5"/>
        <updated>2022-12-13T15:17:04.000Z</updated>
        <content type="html"><![CDATA[<p>The file browser for workspaces, archived artifacts, and <code>$JENKINS_HOME/userContent/</code> follows symbolic links to locations outside the directory being browsed in Jenkins 2.274 and earlier, LTS 2.263.1 and earlier.</p>
<p>This allows attackers with Job/Workspace permission and the ability to control workspace contents (e.g., with Job/Configure permission or the ability to change SCM contents) to create symbolic links that allow them to access files outside workspaces using the workspace browser.</p>
<p>This issue is caused by an incomplete fix for SECURITY-904 / CVE-2018-1000862 in the <a href="https://www.jenkins.io/security/advisory/2018-12-05/#SECURITY-904">2018-12-08 security advisory</a>.</p>
<p>Jenkins 2.275, LTS 2.263.2 no longer supports symlinks in workspace browsers. While they may still exist on the file system, they are no longer shown on the UI, accessible via URLs, or included in directory content downloads.</p>
<p>This fix only changes the behavior of the Jenkins UI. Archiving artifacts still behaves as before.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21602">https://nvd.nist.gov/vuln/detail/CVE-2021-21602</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1452</a></li>
<li><a href="https://github.com/advisories/GHSA-vpjm-58cw-r8q5">https://github.com/advisories/GHSA-vpjm-58cw-r8q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpjm-58cw-r8q5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper handling of REST API XML deserialization errors in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</id>
        <link href="https://github.com/advisories/GHSA-qv6f-rcv6-6q3x"/>
        <updated>2022-12-13T15:03:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides XML REST APIs to configure views, jobs, and other items. When deserialization fails because of invalid data, Jenkins 2.274 and earlier, LTS 2.263.1 and earlier stores invalid object references created through these endpoints in the Old Data Monitor. If an administrator discards the old data, some erroneous data submitted to these endpoints may be persisted.</p>
<p>This allows attackers with View/Create, Job/Create, Agent/Create, or their respective */Configure permissions to inject crafted content into Old Data Monitor that results in the instantiation of potentially unsafe objects when discarded by an administrator.\n\nJenkins 2.275, LTS 2.263.2 does not record submissions from users in Old Data Monitor anymore.</p>
<p>In case of problems, the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system properties</a> <code>hudson.util.RobustReflectionConverter.recordFailuresForAdmins</code> and <code>hudson.util.RobustReflectionConverter.recordFailuresForAllAuthentications</code> can be set to true to record configuration data submissions from administrators or all users, partially or completely disabling this fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21604">https://nvd.nist.gov/vuln/detail/CVE-2021-21604</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1923">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1923</a></li>
<li><a href="https://github.com/advisories/GHSA-qv6f-rcv6-6q3x">https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper handling of REST API XML deserialization errors in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</id>
        <link href="https://github.com/advisories/GHSA-qv6f-rcv6-6q3x"/>
        <updated>2022-12-13T15:03:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides XML REST APIs to configure views, jobs, and other items. When deserialization fails because of invalid data, Jenkins 2.274 and earlier, LTS 2.263.1 and earlier stores invalid object references created through these endpoints in the Old Data Monitor. If an administrator discards the old data, some erroneous data submitted to these endpoints may be persisted.</p>
<p>This allows attackers with View/Create, Job/Create, Agent/Create, or their respective */Configure permissions to inject crafted content into Old Data Monitor that results in the instantiation of potentially unsafe objects when discarded by an administrator.\n\nJenkins 2.275, LTS 2.263.2 does not record submissions from users in Old Data Monitor anymore.</p>
<p>In case of problems, the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system properties</a> <code>hudson.util.RobustReflectionConverter.recordFailuresForAdmins</code> and <code>hudson.util.RobustReflectionConverter.recordFailuresForAllAuthentications</code> can be set to true to record configuration data submissions from administrators or all users, partially or completely disabling this fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21604">https://nvd.nist.gov/vuln/detail/CVE-2021-21604</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1923">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-1923</a></li>
<li><a href="https://github.com/advisories/GHSA-qv6f-rcv6-6q3x">https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv6f-rcv6-6q3x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Stored XSS vulnerability in Jenkins on new item page]]></title>
        <id>https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</id>
        <link href="https://github.com/advisories/GHSA-mj7q-cmf3-mg7h"/>
        <updated>2022-12-13T14:58:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not escape display names and IDs of item types shown on the New Item page.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to specify display names or IDs of item types.</p>
<p>As of the publication of this advisory, the Jenkins security team is not aware of any plugins published via the Jenkins project update center that allow doing this.\n\nJenkins 2.275, LTS 2.263.2 escapes display names and IDs of item types shown on the New Item page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21611">https://nvd.nist.gov/vuln/detail/CVE-2021-21611</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2171">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2171</a></li>
<li><a href="https://github.com/advisories/GHSA-mj7q-cmf3-mg7h">https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Stored XSS vulnerability in Jenkins on new item page]]></title>
        <id>https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</id>
        <link href="https://github.com/advisories/GHSA-mj7q-cmf3-mg7h"/>
        <updated>2022-12-13T14:58:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not escape display names and IDs of item types shown on the New Item page.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to specify display names or IDs of item types.</p>
<p>As of the publication of this advisory, the Jenkins security team is not aware of any plugins published via the Jenkins project update center that allow doing this.\n\nJenkins 2.275, LTS 2.263.2 escapes display names and IDs of item types shown on the New Item page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21611">https://nvd.nist.gov/vuln/detail/CVE-2021-21611</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2171">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2171</a></li>
<li><a href="https://github.com/advisories/GHSA-mj7q-cmf3-mg7h">https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj7q-cmf3-mg7h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Reflected XSS vulnerability in Jenkins markup formatter preview]]></title>
        <id>https://github.com/advisories/GHSA-7qf3-c2q8-69m3</id>
        <link href="https://github.com/advisories/GHSA-7qf3-c2q8-69m3"/>
        <updated>2022-12-13T14:56:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins allows administrators to choose the markup formatter to use for descriptions of jobs, builds, views, etc. displayed in Jenkins. When editing such a description, users can choose to have Jenkins render a formatted preview of the description they entered.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not implement any restrictions for the URL rendering the formatted preview of markup passed as a query parameter. This results in a reflected cross-site scripting (XSS) vulnerability if the configured markup formatter does not prohibit unsafe elements (JavaScript) in markup, like <a href="https://plugins.jenkins.io/anything-goes-formatter/">Anything Goes Formatter Plugin</a>.</p>
<p>Jenkins 2.275, LTS 2.263.2 requires that preview URLs are accessed using POST and sets Content-Security-Policy headers that prevent execution of unsafe elements when the URL is accessed directly.\n\nIn case of problems with this change, these protections can be disabled by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system properties</a> <code>hudson.markup.MarkupFormatter.previewsAllowGET</code> to <code>true</code> and/or <code>hudson.markup.MarkupFormatter.previewsSetCSP</code> to <code>false</code>. Doing either is discouraged.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21610">https://nvd.nist.gov/vuln/detail/CVE-2021-21610</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2153">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2153</a></li>
<li><a href="https://github.com/advisories/GHSA-7qf3-c2q8-69m3">https://github.com/advisories/GHSA-7qf3-c2q8-69m3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qf3-c2q8-69m3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Reflected XSS vulnerability in Jenkins markup formatter preview]]></title>
        <id>https://github.com/advisories/GHSA-7qf3-c2q8-69m3</id>
        <link href="https://github.com/advisories/GHSA-7qf3-c2q8-69m3"/>
        <updated>2022-12-13T14:56:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins allows administrators to choose the markup formatter to use for descriptions of jobs, builds, views, etc. displayed in Jenkins. When editing such a description, users can choose to have Jenkins render a formatted preview of the description they entered.</p>
<p>Jenkins 2.274 and earlier, LTS 2.263.1 and earlier does not implement any restrictions for the URL rendering the formatted preview of markup passed as a query parameter. This results in a reflected cross-site scripting (XSS) vulnerability if the configured markup formatter does not prohibit unsafe elements (JavaScript) in markup, like <a href="https://plugins.jenkins.io/anything-goes-formatter/">Anything Goes Formatter Plugin</a>.</p>
<p>Jenkins 2.275, LTS 2.263.2 requires that preview URLs are accessed using POST and sets Content-Security-Policy headers that prevent execution of unsafe elements when the URL is accessed directly.\n\nIn case of problems with this change, these protections can be disabled by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/">Java system properties</a> <code>hudson.markup.MarkupFormatter.previewsAllowGET</code> to <code>true</code> and/or <code>hudson.markup.MarkupFormatter.previewsSetCSP</code> to <code>false</code>. Doing either is discouraged.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21610">https://nvd.nist.gov/vuln/detail/CVE-2021-21610</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2153">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2153</a></li>
<li><a href="https://github.com/advisories/GHSA-7qf3-c2q8-69m3">https://github.com/advisories/GHSA-7qf3-c2q8-69m3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qf3-c2q8-69m3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.google.protobuf:protobuf-javalite] Protobuf Java vulnerable to Uncontrolled Resource Consumption]]></title>
        <id>https://github.com/advisories/GHSA-g5ww-5jh7-63cx</id>
        <link href="https://github.com/advisories/GHSA-g5ww-5jh7-63cx"/>
        <updated>2022-12-12T22:33:54.000Z</updated>
        <content type="html"><![CDATA[<p>A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3509">https://nvd.nist.gov/vuln/detail/CVE-2022-3509</a></li>
<li><a href="https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9">https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9</a></li>
<li><a href="https://github.com/advisories/GHSA-g5ww-5jh7-63cx">https://github.com/advisories/GHSA-g5ww-5jh7-63cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5ww-5jh7-63cx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-12T15:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.google.protobuf:protobuf-javalite] Protobuf Java vulnerable to Uncontrolled Resource Consumption]]></title>
        <id>https://github.com/advisories/GHSA-g5ww-5jh7-63cx</id>
        <link href="https://github.com/advisories/GHSA-g5ww-5jh7-63cx"/>
        <updated>2022-12-12T22:33:54.000Z</updated>
        <content type="html"><![CDATA[<p>A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3509">https://nvd.nist.gov/vuln/detail/CVE-2022-3509</a></li>
<li><a href="https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9">https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9</a></li>
<li><a href="https://github.com/advisories/GHSA-g5ww-5jh7-63cx">https://github.com/advisories/GHSA-g5ww-5jh7-63cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5ww-5jh7-63cx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-12T15:30:33.000Z</published>
    </entry>
</feed>