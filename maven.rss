<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-10-12T23:01:35.634Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.pac4j:pac4j-core] pac4j-core affected by a Java deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-76mw-6p95-x9x5</id>
        <link href="https://github.com/advisories/GHSA-76mw-6p95-x9x5"/>
        <updated>2024-10-11T22:16:59.000Z</updated>
        <content type="html"><![CDATA[<p>pac4j is a security framework for Java. <code>pac4j-core</code> prior to version 4.0.0 is affected by a Java deserialization vulnerability. The vulnerability affects systems that store externally controlled values in attributes of the <code>UserProfile</code> class from pac4j-core. It can be exploited by providing an attribute that contains a serialized Java object with a special prefix <code>{#sb64}</code> and Base64 encoding. This issue may lead to Remote Code Execution (RCE) in the worst case. Although a <code>RestrictedObjectInputStream</code> is in place, that puts some restriction on what classes can be deserialized, it still allows a broad range of java packages and potentially exploitable with different gadget chains. pac4j versions 4.0.0 and greater are not affected by this issue. Users are advised to upgrade. There are no known workarounds for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25581">https://nvd.nist.gov/vuln/detail/CVE-2023-25581</a></li>
<li><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></li>
<li><a href="https://github.com/pac4j/pac4j/blob/5834aeb22ad3a4369dfa572be60d7b20f5784a8f/pac4j-core/src/main/java/org/pac4j/core/profile/InternalAttributeHandler.java#L95">https://github.com/pac4j/pac4j/blob/5834aeb22ad3a4369dfa572be60d7b20f5784a8f/pac4j-core/src/main/java/org/pac4j/core/profile/InternalAttributeHandler.java#L95</a></li>
<li><a href="https://portswigger.net/web-security/deserialization">https://portswigger.net/web-security/deserialization</a></li>
<li><a href="https://securitylab.github.com/advisories">https://securitylab.github.com/advisories</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-085_pac4j">https://securitylab.github.com/advisories/GHSL-2022-085_pac4j</a></li>
<li><a href="https://github.com/advisories/GHSA-76mw-6p95-x9x5">https://github.com/advisories/GHSA-76mw-6p95-x9x5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76mw-6p95-x9x5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-11T22:16:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.xmlgraphics:fop-core] Apache XML Graphics FOP XML External Entity Reference ('XXE') vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jqfv-jrvq-95jm</id>
        <link href="https://github.com/advisories/GHSA-jqfv-jrvq-95jm"/>
        <updated>2024-10-11T14:07:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Restriction of XML External Entity Reference ('XXE') vulnerability in Apache XML Graphics FOP.</p>
<p>This issue affects Apache XML Graphics FOP: 2.9.</p>
<p>Users are recommended to upgrade to version 2.10, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28168">https://nvd.nist.gov/vuln/detail/CVE-2024-28168</a></li>
<li><a href="https://xmlgraphics.apache.org/security.html">https://xmlgraphics.apache.org/security.html</a></li>
<li><a href="https://github.com/apache/xmlgraphics-fop/commit/d96ba9a11710d02716b6f4f6107ebfa9ccec7134">https://github.com/apache/xmlgraphics-fop/commit/d96ba9a11710d02716b6f4f6107ebfa9ccec7134</a></li>
<li><a href="https://issues.apache.org/jira/browse/FOP-3168">https://issues.apache.org/jira/browse/FOP-3168</a></li>
<li><a href="https://github.com/advisories/GHSA-jqfv-jrvq-95jm">https://github.com/advisories/GHSA-jqfv-jrvq-95jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jqfv-jrvq-95jm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-09T12:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars.npm:jquery] Cross-Site Scripting in jquery]]></title>
        <id>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</id>
        <link href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw"/>
        <updated>2024-10-10T16:17:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>jquery</code> prior to 1.9.0 are vulnerable to Cross-Site Scripting. The load method fails to recognize and remove <code>&lt;script&gt;</code> HTML tags that contain a whitespace character, i.e: <code>&lt;/script &gt;</code>, which results in the enclosed script logic to be executed. This allows attackers to execute arbitrary JavaScript in a victim's browser.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 1.9.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7656">https://nvd.nist.gov/vuln/detail/CVE-2020-7656</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JQUERY-569619">https://snyk.io/vuln/SNYK-JS-JQUERY-569619</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203">https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481">https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481</a></li>
<li><a href="https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US">https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml</a></li>
<li><a href="https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d">https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d</a></li>
<li><a href="https://github.com/jquery/jquery/commit/606b863edaff29035960e4d813b45d63b8d92876">https://github.com/jquery/jquery/commit/606b863edaff29035960e4d813b45d63b8d92876</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200528-0001">https://security.netapp.com/advisory/ntap-20200528-0001</a></li>
<li><a href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw">https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-20T16:18:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkiverse.cxf:quarkus-cxf] Quarkus CXF logs passwords and other secrets]]></title>
        <id>https://github.com/advisories/GHSA-jqh2-ch7p-xwxh</id>
        <link href="https://github.com/advisories/GHSA-jqh2-ch7p-xwxh"/>
        <updated>2024-10-08T22:23:12.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Quarkus CXF. Passwords and other secrets may appear in the  application log in spite of the user configuring them to be hidden. This issue requires some special configuration to be vulnerable, such as SOAP logging enabled, application set client, and endpoint logging properties, and the attacker must have access to the application log.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9621">https://nvd.nist.gov/vuln/detail/CVE-2024-9621</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9621">https://access.redhat.com/security/cve/CVE-2024-9621</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2317130">https://bugzilla.redhat.com/show_bug.cgi?id=2317130</a></li>
<li><a href="https://github.com/quarkiverse/quarkus-cxf/issues/1533">https://github.com/quarkiverse/quarkus-cxf/issues/1533</a></li>
<li><a href="https://github.com/quarkiverse/quarkus-cxf/commit/8ed72cab8db8e5659e294b05529d2b45557859bd">https://github.com/quarkiverse/quarkus-cxf/commit/8ed72cab8db8e5659e294b05529d2b45557859bd</a></li>
<li><a href="https://docs.quarkiverse.io/quarkus-cxf/dev/release-notes/3.15.2.html">https://docs.quarkiverse.io/quarkus-cxf/dev/release-notes/3.15.2.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jqh2-ch7p-xwxh">https://github.com/advisories/GHSA-jqh2-ch7p-xwxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jqh2-ch7p-xwxh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-08T18:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.resteasy:resteasy-netty4-cdi] HTTP Request Smuggling Leading to Client Timeouts in resteasy-netty4]]></title>
        <id>https://github.com/advisories/GHSA-5wpr-cj9p-959r</id>
        <link href="https://github.com/advisories/GHSA-5wpr-cj9p-959r"/>
        <updated>2024-10-08T22:23:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the resteasy-netty4 library arising from improper handling of HTTP requests using smuggling techniques. When an HTTP smuggling request with an ASCII control character is sent, it causes the Netty HttpObjectDecoder to transition into a BAD_MESSAGE state. As a result, any subsequent legitimate requests on the same connection are ignored, leading to client timeouts, which may impact systems using load balancers and expose them to risk.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9622">https://nvd.nist.gov/vuln/detail/CVE-2024-9622</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9622">https://access.redhat.com/security/cve/CVE-2024-9622</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2317179">https://bugzilla.redhat.com/show_bug.cgi?id=2317179</a></li>
<li><a href="https://github.com/orgs/resteasy/discussions/4351">https://github.com/orgs/resteasy/discussions/4351</a></li>
<li><a href="https://github.com/resteasy/resteasy">https://github.com/resteasy/resteasy</a></li>
<li><a href="https://github.com/advisories/GHSA-5wpr-cj9p-959r">https://github.com/advisories/GHSA-5wpr-cj9p-959r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5wpr-cj9p-959r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-08T18:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials] Jenkins Credentials plugin reveals encrypted values of credentials to users with Extended Read permission]]></title>
        <id>https://github.com/advisories/GHSA-62jv-j4w7-5hh8</id>
        <link href="https://github.com/advisories/GHSA-62jv-j4w7-5hh8"/>
        <updated>2024-10-08T15:13:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Credentials Plugin 1380.va_435002fa_924 and earlier, except 1371.1373.v4eb_fa_b_7161e9, does not redact encrypted values of credentials using the <code>SecretBytes</code> type (e.g., Certificate credentials, or Secret file credentials from Plain Credentials Plugin) when accessing item <code>config.xml</code> via REST API or CLI.</p>
<p>This allows attackers with Item/Extended Read permission to view encrypted <code>SecretBytes</code> values in credentials.</p>
<p>This issue is similar to SECURITY-266 in the 2016-05-11 security advisory, which applied to the <code>Secret</code> type used for inline secrets and some credentials types.</p>
<p>Credentials Plugin 1381.v2c3a_12074da_b_ redacts the encrypted values of credentials using the <code>SecretBytes</code> type in item <code>config.xml</code> files.</p>
<p>This fix is only effective on Jenkins 2.479 and newer, LTS 2.462.3 and newer. While Credentials Plugin 1381.v2c3a_12074da_b_ can be installed on Jenkins 2.463 through 2.478 (both inclusive), encrypted values of credentials using the <code>SecretBytes</code> type will not be redacted when accessing item <code>config.xml</code> via REST API or CLI. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47805">https://nvd.nist.gov/vuln/detail/CVE-2024-47805</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3373">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3373</a></li>
<li><a href="https://github.com/advisories/GHSA-62jv-j4w7-5hh8">https://github.com/advisories/GHSA-62jv-j4w7-5hh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62jv-j4w7-5hh8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.avro:avro] Apache Avro Java SDK: Arbitrary Code Execution when reading Avro Data (Java SDK)]]></title>
        <id>https://github.com/advisories/GHSA-r7pg-v2c8-mfg3</id>
        <link href="https://github.com/advisories/GHSA-r7pg-v2c8-mfg3"/>
        <updated>2024-10-08T14:51:59.000Z</updated>
        <content type="html"><![CDATA[<p>Schema parsing in the Java SDK of Apache Avro 1.11.3 and previous versions allows bad actors to execute arbitrary code.
Users are recommended to upgrade to version 1.11.4&nbsp;or 1.12.0, which fix this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47561">https://nvd.nist.gov/vuln/detail/CVE-2024-47561</a></li>
<li><a href="https://lists.apache.org/thread/c2v7mhqnmq0jmbwxqq3r5jbj1xg43h5x">https://lists.apache.org/thread/c2v7mhqnmq0jmbwxqq3r5jbj1xg43h5x</a></li>
<li><a href="https://github.com/apache/avro/pull/2934">https://github.com/apache/avro/pull/2934</a></li>
<li><a href="https://github.com/apache/avro/pull/2980">https://github.com/apache/avro/pull/2980</a></li>
<li><a href="https://github.com/apache/avro/commit/8f89868d29272e3afea2ff8de8c85cb81a57d900">https://github.com/apache/avro/commit/8f89868d29272e3afea2ff8de8c85cb81a57d900</a></li>
<li><a href="https://github.com/apache/avro/commit/f6b3bd7e50e6e09fedddb98c61558c022ba31285">https://github.com/apache/avro/commit/f6b3bd7e50e6e09fedddb98c61558c022ba31285</a></li>
<li><a href="https://issues.apache.org/jira/browse/AVRO-3985">https://issues.apache.org/jira/browse/AVRO-3985</a></li>
<li><a href="https://thehackernews.com/2024/10/critical-apache-avro-sdk-flaw-allows.html">https://thehackernews.com/2024/10/critical-apache-avro-sdk-flaw-allows.html</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/10/03/1">https://www.openwall.com/lists/oss-security/2024/10/03/1</a></li>
<li><a href="https://github.com/advisories/GHSA-r7pg-v2c8-mfg3">https://github.com/advisories/GHSA-r7pg-v2c8-mfg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7pg-v2c8-mfg3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-03T12:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-web] Authorization bypass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-hh32-7344-cg2f</id>
        <link href="https://github.com/advisories/GHSA-hh32-7344-cg2f"/>
        <updated>2024-10-04T20:22:03.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security versions 5.5.6 and 5.5.7 and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with <code>.</code> in the regular expression are possibly vulnerable to an authorization bypass.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22978">https://nvd.nist.gov/vuln/detail/CVE-2022-22978</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22978">https://tanzu.vmware.com/security/cve-2022-22978</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://spring.io/security/cve-2022-22978">https://spring.io/security/cve-2022-22978</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220707-0003">https://security.netapp.com/advisory/ntap-20220707-0003</a></li>
<li><a href="https://github.com/anchore/grype/issues/2158">https://github.com/anchore/grype/issues/2158</a></li>
<li><a href="https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java">https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java</a></li>
<li><a href="https://github.com/advisories/GHSA-hh32-7344-cg2f">https://github.com/advisories/GHSA-hh32-7344-cg2f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh32-7344-cg2f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-20T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-web] Authorization bypass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-hh32-7344-cg2f</id>
        <link href="https://github.com/advisories/GHSA-hh32-7344-cg2f"/>
        <updated>2024-10-04T20:22:03.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security versions 5.5.6 and 5.5.7 and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with <code>.</code> in the regular expression are possibly vulnerable to an authorization bypass.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22978">https://nvd.nist.gov/vuln/detail/CVE-2022-22978</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22978">https://tanzu.vmware.com/security/cve-2022-22978</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://spring.io/security/cve-2022-22978">https://spring.io/security/cve-2022-22978</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220707-0003">https://security.netapp.com/advisory/ntap-20220707-0003</a></li>
<li><a href="https://github.com/anchore/grype/issues/2158">https://github.com/anchore/grype/issues/2158</a></li>
<li><a href="https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java">https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java</a></li>
<li><a href="https://github.com/advisories/GHSA-hh32-7344-cg2f">https://github.com/advisories/GHSA-hh32-7344-cg2f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh32-7344-cg2f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-20T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-web] Authorization bypass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-hh32-7344-cg2f</id>
        <link href="https://github.com/advisories/GHSA-hh32-7344-cg2f"/>
        <updated>2024-10-04T20:22:03.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security versions 5.5.6 and 5.5.7 and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with <code>.</code> in the regular expression are possibly vulnerable to an authorization bypass.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22978">https://nvd.nist.gov/vuln/detail/CVE-2022-22978</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22978">https://tanzu.vmware.com/security/cve-2022-22978</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://spring.io/security/cve-2022-22978">https://spring.io/security/cve-2022-22978</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220707-0003">https://security.netapp.com/advisory/ntap-20220707-0003</a></li>
<li><a href="https://github.com/anchore/grype/issues/2158">https://github.com/anchore/grype/issues/2158</a></li>
<li><a href="https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java">https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/util/matcher/RegexRequestMatcher.java</a></li>
<li><a href="https://github.com/advisories/GHSA-hh32-7344-cg2f">https://github.com/advisories/GHSA-hh32-7344-cg2f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh32-7344-cg2f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-20T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.kordamp.json:json-lib-core] JSON-lib mishandles an unbalanced comment string]]></title>
        <id>https://github.com/advisories/GHSA-wwcp-26wc-3fxm</id>
        <link href="https://github.com/advisories/GHSA-wwcp-26wc-3fxm"/>
        <updated>2024-10-04T18:51:46.000Z</updated>
        <content type="html"><![CDATA[<p>util/JSONTokener.java in JSON-lib before 3.1.0 mishandles an unbalanced comment string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47855">https://nvd.nist.gov/vuln/detail/CVE-2024-47855</a></li>
<li><a href="https://github.com/kordamp/json-lib/commit/a0c4a0eae277130e22979cf307c95dec4005a78e">https://github.com/kordamp/json-lib/commit/a0c4a0eae277130e22979cf307c95dec4005a78e</a></li>
<li><a href="https://github.com/kordamp/json-lib/compare/v3.0.3...v3.1.0">https://github.com/kordamp/json-lib/compare/v3.0.3...v3.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-wwcp-26wc-3fxm">https://github.com/advisories/GHSA-wwcp-26wc-3fxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wwcp-26wc-3fxm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-04T06:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[commons-io:commons-io] Apache Commons IO: Possible denial of service attack on untrusted input to XmlStreamReader]]></title>
        <id>https://github.com/advisories/GHSA-78wr-2p64-hpwj</id>
        <link href="https://github.com/advisories/GHSA-78wr-2p64-hpwj"/>
        <updated>2024-10-03T16:52:26.000Z</updated>
        <content type="html"><![CDATA[<p>Uncontrolled Resource Consumption vulnerability in Apache Commons IO.</p>
<p>The <code>org.apache.commons.io.input.XmlStreamReader</code> class may excessively consume CPU resources when processing maliciously crafted input.</p>
<p>This issue affects Apache Commons IO: from 2.0 before 2.14.0.</p>
<p>Users are recommended to upgrade to version 2.14.0 or later, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47554">https://nvd.nist.gov/vuln/detail/CVE-2024-47554</a></li>
<li><a href="https://lists.apache.org/thread/6ozr91rr9cj5lm0zyhv30bsp317hk5z1">https://lists.apache.org/thread/6ozr91rr9cj5lm0zyhv30bsp317hk5z1</a></li>
<li><a href="https://github.com/advisories/GHSA-78wr-2p64-hpwj">https://github.com/advisories/GHSA-78wr-2p64-hpwj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78wr-2p64-hpwj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-03T12:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:oic-auth] Jenkins OpenId Connect Authentication Plugin lacks issuer claim validation]]></title>
        <id>https://github.com/advisories/GHSA-8pjw-fff6-3mjv</id>
        <link href="https://github.com/advisories/GHSA-8pjw-fff6-3mjv"/>
        <updated>2024-10-02T21:51:03.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins OpenId Connect Authentication Plugin 4.354.v321ce67a_1de8 and earlier does not check the <code>iss</code> (Issuer) claim of an ID Token during its authentication flow, a value that identifies the Originating Party (IdP).</p>
<p>This vulnerability may allow attackers to subvert the authentication flow, potentially gaining administrator access to Jenkins.</p>
<p>OpenId Connect Authentication Plugin 4.355.v3a_fb_fca_b_96d4 checks the <code>iss</code> (Issuer) claim of an ID Token during its authentication flow when the Issuer is known.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47807">https://nvd.nist.gov/vuln/detail/CVE-2024-47807</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3441%20(2)">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3441%20(2)</a></li>
<li><a href="https://github.com/advisories/GHSA-8pjw-fff6-3mjv">https://github.com/advisories/GHSA-8pjw-fff6-3mjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8pjw-fff6-3mjv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:oic-auth] Jenkins OpenId Connect Authentication Plugin lacks audience claim validation]]></title>
        <id>https://github.com/advisories/GHSA-49hx-9mm2-7675</id>
        <link href="https://github.com/advisories/GHSA-49hx-9mm2-7675"/>
        <updated>2024-10-02T21:50:54.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins OpenId Connect Authentication Plugin 4.354.v321ce67a_1de8 and earlier does not check the <code>aud</code> (Audience) claim of an ID Token during its authentication flow, a value to verify the token is issued for the correct client.</p>
<p>This vulnerability may allow attackers to subvert the authentication flow, potentially gaining administrator access to Jenkins.</p>
<p>OpenId Connect Authentication Plugin 4.355.v3a_fb_fca_b_96d4 checks the <code>aud</code> (Audience) claim of an ID Token during its authentication flow.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47806">https://nvd.nist.gov/vuln/detail/CVE-2024-47806</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3441%20(1)">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3441%20(1)</a></li>
<li><a href="https://github.com/advisories/GHSA-49hx-9mm2-7675">https://github.com/advisories/GHSA-49hx-9mm2-7675</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49hx-9mm2-7675</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials] Jenkins Credentials plugin reveals encrypted values of credentials to users with Extended Read permission]]></title>
        <id>https://github.com/advisories/GHSA-62jv-j4w7-5hh8</id>
        <link href="https://github.com/advisories/GHSA-62jv-j4w7-5hh8"/>
        <updated>2024-10-08T15:13:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Credentials Plugin 1380.va_435002fa_924 and earlier, except 1371.1373.v4eb_fa_b_7161e9, does not redact encrypted values of credentials using the <code>SecretBytes</code> type (e.g., Certificate credentials, or Secret file credentials from Plain Credentials Plugin) when accessing item <code>config.xml</code> via REST API or CLI.</p>
<p>This allows attackers with Item/Extended Read permission to view encrypted <code>SecretBytes</code> values in credentials.</p>
<p>This issue is similar to SECURITY-266 in the 2016-05-11 security advisory, which applied to the <code>Secret</code> type used for inline secrets and some credentials types.</p>
<p>Credentials Plugin 1381.v2c3a_12074da_b_ redacts the encrypted values of credentials using the <code>SecretBytes</code> type in item <code>config.xml</code> files.</p>
<p>This fix is only effective on Jenkins 2.479 and newer, LTS 2.462.3 and newer. While Credentials Plugin 1381.v2c3a_12074da_b_ can be installed on Jenkins 2.463 through 2.478 (both inclusive), encrypted values of credentials using the <code>SecretBytes</code> type will not be redacted when accessing item <code>config.xml</code> via REST API or CLI. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47805">https://nvd.nist.gov/vuln/detail/CVE-2024-47805</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3373">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3373</a></li>
<li><a href="https://github.com/advisories/GHSA-62jv-j4w7-5hh8">https://github.com/advisories/GHSA-62jv-j4w7-5hh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62jv-j4w7-5hh8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins item creation restriction bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f9qj-77q2-h5c5</id>
        <link href="https://github.com/advisories/GHSA-f9qj-77q2-h5c5"/>
        <updated>2024-10-02T21:50:44.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides APIs for fine-grained control of item creation:</p>
<ul>
<li><p>Authorization strategies can prohibit the creation of items of a given type in a given item group (<code>ACL#hasCreatePermission2</code>).</p>
</li>
<li><p>Item types can prohibit creation of new instances in a given item group (<code>TopLevelItemDescriptor#isApplicableIn(ItemGroup)</code>).</p>
</li>
</ul>
<p>If an attempt is made to create an item of a prohibited type through the Jenkins CLI or the REST API and either of the above checks fail, Jenkins 2.478 and earlier, LTS 2.462.2 and earlier creates the item in memory, only deleting it from disk.</p>
<p>This allows attackers with Item/Create permission to bypass these restrictions, creating a temporary item. With Item/Configure permission, they can also save the item to persist it.</p>
<p>If an attempt is made to create an item of a prohibited type through the Jenkins CLI or the REST API and either of the above checks fail, Jenkins 2.479, LTS 2.462.3 does not retain the item in memory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47804">https://nvd.nist.gov/vuln/detail/CVE-2024-47804</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3448">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3448</a></li>
<li><a href="https://github.com/advisories/GHSA-f9qj-77q2-h5c5">https://github.com/advisories/GHSA-f9qj-77q2-h5c5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9qj-77q2-h5c5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins item creation restriction bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f9qj-77q2-h5c5</id>
        <link href="https://github.com/advisories/GHSA-f9qj-77q2-h5c5"/>
        <updated>2024-10-02T21:50:44.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides APIs for fine-grained control of item creation:</p>
<ul>
<li><p>Authorization strategies can prohibit the creation of items of a given type in a given item group (<code>ACL#hasCreatePermission2</code>).</p>
</li>
<li><p>Item types can prohibit creation of new instances in a given item group (<code>TopLevelItemDescriptor#isApplicableIn(ItemGroup)</code>).</p>
</li>
</ul>
<p>If an attempt is made to create an item of a prohibited type through the Jenkins CLI or the REST API and either of the above checks fail, Jenkins 2.478 and earlier, LTS 2.462.2 and earlier creates the item in memory, only deleting it from disk.</p>
<p>This allows attackers with Item/Create permission to bypass these restrictions, creating a temporary item. With Item/Configure permission, they can also save the item to persist it.</p>
<p>If an attempt is made to create an item of a prohibited type through the Jenkins CLI or the REST API and either of the above checks fail, Jenkins 2.479, LTS 2.462.3 does not retain the item in memory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47804">https://nvd.nist.gov/vuln/detail/CVE-2024-47804</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3448">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3448</a></li>
<li><a href="https://github.com/advisories/GHSA-f9qj-77q2-h5c5">https://github.com/advisories/GHSA-f9qj-77q2-h5c5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9qj-77q2-h5c5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins exposes multi-line secrets through error messages]]></title>
        <id>https://github.com/advisories/GHSA-pj95-ph4q-4qm4</id>
        <link href="https://github.com/advisories/GHSA-pj95-ph4q-4qm4"/>
        <updated>2024-10-02T21:50:29.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins </p>
<p>Jenkins provides the <code>secretTextarea</code> form field for multi-line secrets.</p>
<p>Jenkins 2.478 and earlier, LTS 2.462.2 and earlier does not redact multi-line secret values in error messages generated for form submissions involving the <code>secretTextarea</code> form field.</p>
<p>This can result in exposure of multi-line secrets through those error messages, e.g., in the system log.</p>
<p>Jenkins 2.479, LTS 2.462.3 redacts multi-line secret values in error messages generated for form submissions involving the <code>secretTextarea</code> form field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47803">https://nvd.nist.gov/vuln/detail/CVE-2024-47803</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3451">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3451</a></li>
<li><a href="https://github.com/advisories/GHSA-pj95-ph4q-4qm4">https://github.com/advisories/GHSA-pj95-ph4q-4qm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pj95-ph4q-4qm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins exposes multi-line secrets through error messages]]></title>
        <id>https://github.com/advisories/GHSA-pj95-ph4q-4qm4</id>
        <link href="https://github.com/advisories/GHSA-pj95-ph4q-4qm4"/>
        <updated>2024-10-02T21:50:29.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins </p>
<p>Jenkins provides the <code>secretTextarea</code> form field for multi-line secrets.</p>
<p>Jenkins 2.478 and earlier, LTS 2.462.2 and earlier does not redact multi-line secret values in error messages generated for form submissions involving the <code>secretTextarea</code> form field.</p>
<p>This can result in exposure of multi-line secrets through those error messages, e.g., in the system log.</p>
<p>Jenkins 2.479, LTS 2.462.3 redacts multi-line secret values in error messages generated for form submissions involving the <code>secretTextarea</code> form field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47803">https://nvd.nist.gov/vuln/detail/CVE-2024-47803</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3451">https://www.jenkins.io/security/advisory/2024-10-02/#SECURITY-3451</a></li>
<li><a href="https://github.com/advisories/GHSA-pj95-ph4q-4qm4">https://github.com/advisories/GHSA-pj95-ph4q-4qm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pj95-ph4q-4qm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.liferay.portal:release.portal.bom] Liferay Portal vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-29xx-fhff-36m7</id>
        <link href="https://github.com/advisories/GHSA-29xx-fhff-36m7"/>
        <updated>2024-10-02T21:50:21.000Z</updated>
        <content type="html"><![CDATA[<p>The Image Uploader module in Liferay Portal 7.2.0 through 7.4.3.15, and older unsupported versions, and Liferay DXP 7.4 before update 16, 7.3 before update 4, 7.2 before fix pack 19, and older unsupported versions relies on a request parameter to limit the size of files that can be uploaded, which allows remote authenticated users to upload arbitrarily large files to the system's temp folder by modifying the <code>maxFileSize</code> parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26265">https://nvd.nist.gov/vuln/detail/CVE-2024-26265</a></li>
<li><a href="https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26265">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26265</a></li>
<li><a href="https://github.com/advisories/GHSA-29xx-fhff-36m7">https://github.com/advisories/GHSA-29xx-fhff-36m7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29xx-fhff-36m7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T15:31:03.000Z</published>
    </entry>
</feed>