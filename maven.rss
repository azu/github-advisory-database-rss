<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-05-24T10:01:42.595Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:active-directory] Improper Authentication in Jenkins Active Directory Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rf92-3vjr-w628</id>
        <link href="https://github.com/advisories/GHSA-rf92-3vjr-w628"/>
        <updated>2023-05-23T21:27:26.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Active Directory Plugin implements two separate modes: Integration with ADSI on Windows, and an OS agnostic LDAP-based mode.</p>
<p>The LDAP-based mode in Active Directory Plugin starting in version 1.44 and prior to versions 2.16.1 and 2.20 shares code between user lookup and user authentication and distinguishes these behaviors through the use of a magic constant used in place of a real password. This allows attackers to log in as any user if the magic constant is used as the password in Active Directory Plugin prior to 2.16.1 and 220.</p>
<p>Active Directory Plugin 2.16.1 and 2.20 no longer uses a magic constant to distinguish between user lookup and user authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2299">https://nvd.nist.gov/vuln/detail/CVE-2020-2299</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2117">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2117</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/11/04/6">http://www.openwall.com/lists/oss-security/2020/11/04/6</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2299.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2299.json</a></li>
<li><a href="https://github.com/advisories/GHSA-rf92-3vjr-w628">https://github.com/advisories/GHSA-rf92-3vjr-w628</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf92-3vjr-w628</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:33:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:active-directory] Improper Authentication in Jenkins Active Directory Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rf92-3vjr-w628</id>
        <link href="https://github.com/advisories/GHSA-rf92-3vjr-w628"/>
        <updated>2023-05-23T21:27:26.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Active Directory Plugin implements two separate modes: Integration with ADSI on Windows, and an OS agnostic LDAP-based mode.</p>
<p>The LDAP-based mode in Active Directory Plugin starting in version 1.44 and prior to versions 2.16.1 and 2.20 shares code between user lookup and user authentication and distinguishes these behaviors through the use of a magic constant used in place of a real password. This allows attackers to log in as any user if the magic constant is used as the password in Active Directory Plugin prior to 2.16.1 and 220.</p>
<p>Active Directory Plugin 2.16.1 and 2.20 no longer uses a magic constant to distinguish between user lookup and user authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2299">https://nvd.nist.gov/vuln/detail/CVE-2020-2299</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2117">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2117</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/11/04/6">http://www.openwall.com/lists/oss-security/2020/11/04/6</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2299.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2299.json</a></li>
<li><a href="https://github.com/advisories/GHSA-rf92-3vjr-w628">https://github.com/advisories/GHSA-rf92-3vjr-w628</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf92-3vjr-w628</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:33:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Sandbox bypass vulnerability in Jenkins Script Security Plugin]]></title>
        <id>https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</id>
        <link href="https://github.com/advisories/GHSA-ccr8-4xr7-cgj3"/>
        <updated>2023-05-23T21:00:21.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>In Script Security Plugin 1.75 and 1.66.5, any calls from outside a sandboxed script to code defined inside a sandboxed script were always allowed. As sandboxed scripts can communicate their results through script return values and similar mechanisms, this could result in code defined inside of a sandboxed script to be called without sandbox protection.</p>
<p>This vulnerability allows attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Script Security Plugin 1.75 and 1.66.5 will prevent code defined inside a sandbox from being invoked outside a sandboxed script.</p>
<p>In rare cases, invocations of sandboxed scripts may begin failing if the script return value or script binding include code defined in the sandbox and is further processed by the calling code. To resolve this issue, the affected values need to be converted inside the sandboxed script to a known safe type, such as <code>String</code>.</p>
<p>For compatibility with this change, the following plugins should be upgraded to the versions specified:</p>
<ul>
<li><a href="https://plugins.jenkins.io/email-ext">Email Extension Plugin</a> should be updated to version 2.77 or newer.</li>
<li><a href="https://plugins.jenkins.io/warnings-ng">Warnings Next Generation Plugin</a> should be updated to version 8.4.3 or newer.</li>
<li><a href="https://plugins.jenkins.io/warnings">Warnings Plugin</a> should be updated to version 5.0.2 or newer.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2279">https://nvd.nist.gov/vuln/detail/CVE-2020-2279</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2020">https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2020</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/23/1">http://www.openwall.com/lists/oss-security/2020/09/23/1</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2279.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2279.json</a></li>
<li><a href="https://github.com/advisories/GHSA-ccr8-4xr7-cgj3">https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Sandbox bypass vulnerability in Jenkins Script Security Plugin]]></title>
        <id>https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</id>
        <link href="https://github.com/advisories/GHSA-ccr8-4xr7-cgj3"/>
        <updated>2023-05-23T21:00:21.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>In Script Security Plugin 1.75 and 1.66.5, any calls from outside a sandboxed script to code defined inside a sandboxed script were always allowed. As sandboxed scripts can communicate their results through script return values and similar mechanisms, this could result in code defined inside of a sandboxed script to be called without sandbox protection.</p>
<p>This vulnerability allows attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Script Security Plugin 1.75 and 1.66.5 will prevent code defined inside a sandbox from being invoked outside a sandboxed script.</p>
<p>In rare cases, invocations of sandboxed scripts may begin failing if the script return value or script binding include code defined in the sandbox and is further processed by the calling code. To resolve this issue, the affected values need to be converted inside the sandboxed script to a known safe type, such as <code>String</code>.</p>
<p>For compatibility with this change, the following plugins should be upgraded to the versions specified:</p>
<ul>
<li><a href="https://plugins.jenkins.io/email-ext">Email Extension Plugin</a> should be updated to version 2.77 or newer.</li>
<li><a href="https://plugins.jenkins.io/warnings-ng">Warnings Next Generation Plugin</a> should be updated to version 8.4.3 or newer.</li>
<li><a href="https://plugins.jenkins.io/warnings">Warnings Plugin</a> should be updated to version 5.0.2 or newer.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2279">https://nvd.nist.gov/vuln/detail/CVE-2020-2279</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2020">https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2020</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/23/1">http://www.openwall.com/lists/oss-security/2020/09/23/1</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2279.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2279.json</a></li>
<li><a href="https://github.com/advisories/GHSA-ccr8-4xr7-cgj3">https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccr8-4xr7-cgj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailer] Improper Validation of Certificate with Host Mismatch in Jenkins Mailer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6fr3-286q-q3cr</id>
        <link href="https://github.com/advisories/GHSA-6fr3-286q-q3cr"/>
        <updated>2023-05-23T20:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mailer Plugin prior to 1.32.1, 1.31.1, and 1.29.1 does not perform hostname validation when connecting to the configured SMTP server. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections.</p>
<p>Mailer Plugin 1.32.1, 1.31.1, and 1.29.1 validates the SMTP hostname when connecting via TLS by default. In Mailer Plugin 1.32 and earlier, administrators can set the Java system property mail.smtp.ssl.checkserveridentity to true on startup to enable this protection.</p>
<p>In case of problems, this protection can be disabled again by setting the Java system property mail.smtp.ssl.checkserveridentity to false on startup.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2252">https://nvd.nist.gov/vuln/detail/CVE-2020-2252</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813">https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/16/3">http://www.openwall.com/lists/oss-security/2020/09/16/3</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json</a></li>
<li><a href="https://github.com/advisories/GHSA-6fr3-286q-q3cr">https://github.com/advisories/GHSA-6fr3-286q-q3cr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fr3-286q-q3cr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailer] Improper Validation of Certificate with Host Mismatch in Jenkins Mailer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6fr3-286q-q3cr</id>
        <link href="https://github.com/advisories/GHSA-6fr3-286q-q3cr"/>
        <updated>2023-05-23T20:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mailer Plugin prior to 1.32.1, 1.31.1, and 1.29.1 does not perform hostname validation when connecting to the configured SMTP server. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections.</p>
<p>Mailer Plugin 1.32.1, 1.31.1, and 1.29.1 validates the SMTP hostname when connecting via TLS by default. In Mailer Plugin 1.32 and earlier, administrators can set the Java system property mail.smtp.ssl.checkserveridentity to true on startup to enable this protection.</p>
<p>In case of problems, this protection can be disabled again by setting the Java system property mail.smtp.ssl.checkserveridentity to false on startup.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2252">https://nvd.nist.gov/vuln/detail/CVE-2020-2252</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813">https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/16/3">http://www.openwall.com/lists/oss-security/2020/09/16/3</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json</a></li>
<li><a href="https://github.com/advisories/GHSA-6fr3-286q-q3cr">https://github.com/advisories/GHSA-6fr3-286q-q3cr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fr3-286q-q3cr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailer] Improper Validation of Certificate with Host Mismatch in Jenkins Mailer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6fr3-286q-q3cr</id>
        <link href="https://github.com/advisories/GHSA-6fr3-286q-q3cr"/>
        <updated>2023-05-23T20:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mailer Plugin prior to 1.32.1, 1.31.1, and 1.29.1 does not perform hostname validation when connecting to the configured SMTP server. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections.</p>
<p>Mailer Plugin 1.32.1, 1.31.1, and 1.29.1 validates the SMTP hostname when connecting via TLS by default. In Mailer Plugin 1.32 and earlier, administrators can set the Java system property mail.smtp.ssl.checkserveridentity to true on startup to enable this protection.</p>
<p>In case of problems, this protection can be disabled again by setting the Java system property mail.smtp.ssl.checkserveridentity to false on startup.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2252">https://nvd.nist.gov/vuln/detail/CVE-2020-2252</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813">https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1813</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/16/3">http://www.openwall.com/lists/oss-security/2020/09/16/3</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json">https://github.com/CVEProject/cvelist/blob/16860a328d970faa6e4350b0fa446f64a52e52ca/2020/2xxx/CVE-2020-2252.json</a></li>
<li><a href="https://github.com/advisories/GHSA-6fr3-286q-q3cr">https://github.com/advisories/GHSA-6fr3-286q-q3cr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fr3-286q-q3cr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Permission Preservation in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</id>
        <link href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6"/>
        <updated>2023-05-23T20:49:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins uses temporary directories adjacent to workspace directories, usually with the @tmp name suffix, to store temporary files related to the build. In pipelines, these temporary directories are adjacent to the current working directory when operating in a subdirectory of the automatically allocated workspace. Jenkins-controlled processes, like SCMs, may store credentials in these directories.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 shows these temporary directories when viewing job workspaces, which allows attackers with Item/Workspace permission to access their contents.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 does not list these temporary directories in job workspaces.</p>
<p>As a workaround, do not grant Item/Workspace permission to users who lack Item/Configure permission, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27902">https://nvd.nist.gov/vuln/detail/CVE-2023-27902</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json</a></li>
<li><a href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6">https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Permission Preservation in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</id>
        <link href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6"/>
        <updated>2023-05-23T20:49:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins uses temporary directories adjacent to workspace directories, usually with the @tmp name suffix, to store temporary files related to the build. In pipelines, these temporary directories are adjacent to the current working directory when operating in a subdirectory of the automatically allocated workspace. Jenkins-controlled processes, like SCMs, may store credentials in these directories.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 shows these temporary directories when viewing job workspaces, which allows attackers with Item/Workspace permission to access their contents.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 does not list these temporary directories in job workspaces.</p>
<p>As a workaround, do not grant Item/Workspace permission to users who lack Item/Configure permission, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27902">https://nvd.nist.gov/vuln/detail/CVE-2023-27902</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json</a></li>
<li><a href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6">https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Permission Preservation in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</id>
        <link href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6"/>
        <updated>2023-05-23T20:49:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins uses temporary directories adjacent to workspace directories, usually with the @tmp name suffix, to store temporary files related to the build. In pipelines, these temporary directories are adjacent to the current working directory when operating in a subdirectory of the automatically allocated workspace. Jenkins-controlled processes, like SCMs, may store credentials in these directories.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 shows these temporary directories when viewing job workspaces, which allows attackers with Item/Workspace permission to access their contents.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 does not list these temporary directories in job workspaces.</p>
<p>As a workaround, do not grant Item/Workspace permission to users who lack Item/Configure permission, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27902">https://nvd.nist.gov/vuln/detail/CVE-2023-27902</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-1807</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27902.json</a></li>
<li><a href="https://github.com/advisories/GHSA-cj6r-8pxj-5jv6">https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj6r-8pxj-5jv6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</id>
        <link href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh"/>
        <updated>2023-05-23T20:46:25.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 is affected by the Apache Commons FileUpload library’s vulnerability CVE-2023-24998. This library is used to process uploaded files via the Stapler web framework (usually through StaplerRequest#getFile) and MultipartFormDataParser in Jenkins.</p>
<p>This allows attackers to cause a denial of service (DoS) by sending crafted requests to HTTP endpoints processing file uploads.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 limits the number of request parts to be processed to 1000. Specific endpoints receiving only simple form submissions have a lower limit.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27900">https://nvd.nist.gov/vuln/detail/CVE-2023-27900</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json</a></li>
<li><a href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh">https://github.com/advisories/GHSA-frgr-c5f2-8qhh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</id>
        <link href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh"/>
        <updated>2023-05-23T20:46:25.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 is affected by the Apache Commons FileUpload library’s vulnerability CVE-2023-24998. This library is used to process uploaded files via the Stapler web framework (usually through StaplerRequest#getFile) and MultipartFormDataParser in Jenkins.</p>
<p>This allows attackers to cause a denial of service (DoS) by sending crafted requests to HTTP endpoints processing file uploads.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 limits the number of request parts to be processed to 1000. Specific endpoints receiving only simple form submissions have a lower limit.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27900">https://nvd.nist.gov/vuln/detail/CVE-2023-27900</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json</a></li>
<li><a href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh">https://github.com/advisories/GHSA-frgr-c5f2-8qhh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Denial of service in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</id>
        <link href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh"/>
        <updated>2023-05-23T20:46:25.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 is affected by the Apache Commons FileUpload library’s vulnerability CVE-2023-24998. This library is used to process uploaded files via the Stapler web framework (usually through StaplerRequest#getFile) and MultipartFormDataParser in Jenkins.</p>
<p>This allows attackers to cause a denial of service (DoS) by sending crafted requests to HTTP endpoints processing file uploads.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 limits the number of request parts to be processed to 1000. Specific endpoints receiving only simple form submissions have a lower limit.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27900">https://nvd.nist.gov/vuln/detail/CVE-2023-27900</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3030</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27900.json</a></li>
<li><a href="https://github.com/advisories/GHSA-frgr-c5f2-8qhh">https://github.com/advisories/GHSA-frgr-c5f2-8qhh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-frgr-c5f2-8qhh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2023-05-23T20:37:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier creates a temporary file in the default temporary directory with the default permissions for newly created files when uploading a plugin for installation, potentially allowing attackers with access to the Jenkins controller file system to read and write the file before it is used, potentially resulting in arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2023-05-23T20:37:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier creates a temporary file in the default temporary directory with the default permissions for newly created files when uploading a plugin for installation, potentially allowing attackers with access to the Jenkins controller file system to read and write the file before it is used, potentially resulting in arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2023-05-23T20:37:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier creates a temporary file in the default temporary directory with the default permissions for newly created files when uploading a plugin for installation, potentially allowing attackers with access to the Jenkins controller file system to read and write the file before it is used, potentially resulting in arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core]  Information disclosure through error stack traces related to agents ]]></title>
        <id>https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</id>
        <link href="https://github.com/advisories/GHSA-rrgp-c2w8-6vg6"/>
        <updated>2023-05-23T20:28:38.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 prints an error stack trace on agent-related pages when agent connections are broken, potentially revealing information about Jenkins configuration that is otherwise inaccessible to attackers.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 does not display error stack traces when agent connections are broken.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27904">https://nvd.nist.gov/vuln/detail/CVE-2023-27904</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2120">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2120</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27904.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27904.json</a></li>
<li><a href="https://github.com/advisories/GHSA-rrgp-c2w8-6vg6">https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core]  Information disclosure through error stack traces related to agents ]]></title>
        <id>https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</id>
        <link href="https://github.com/advisories/GHSA-rrgp-c2w8-6vg6"/>
        <updated>2023-05-23T20:28:38.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 prints an error stack trace on agent-related pages when agent connections are broken, potentially revealing information about Jenkins configuration that is otherwise inaccessible to attackers.</p>
<p>Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 does not display error stack traces when agent connections are broken.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27904">https://nvd.nist.gov/vuln/detail/CVE-2023-27904</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2120">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2120</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27904.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27904.json</a></li>
<li><a href="https://github.com/advisories/GHSA-rrgp-c2w8-6vg6">https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrgp-c2w8-6vg6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-584m-7r4m-8j6v</id>
        <link href="https://github.com/advisories/GHSA-584m-7r4m-8j6v"/>
        <updated>2023-05-23T20:15:00.000Z</updated>
        <content type="html"><![CDATA[<p>When triggering a build from the Jenkins CLI, Jenkins creates a temporary file on the controller if a file parameter is provided through the CLI’s standard input.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and , and LTS prior to 2.387.1 creates this temporary file in the default temporary directory with the default permissions for newly created files.</p>
<p>If these permissions are overly permissive, they may allow attackers with access to the Jenkins controller file system to read and write the file before it is used in the build.</p>
<p>This vulnerability only affects operating systems using a shared temporary directory for all users (typically Linux). Additionally, the default permissions for newly created files generally only allows attackers to read the temporary file.
Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 creates the temporary file with more restrictive permissions.</p>
<p>As a workaround, you can set a different path as your default temporary directory using the Java system property java.io.tmpdir, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27903">https://nvd.nist.gov/vuln/detail/CVE-2023-27903</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3058">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3058</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27903.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27903.json</a></li>
<li><a href="https://github.com/advisories/GHSA-584m-7r4m-8j6v">https://github.com/advisories/GHSA-584m-7r4m-8j6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-584m-7r4m-8j6v</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-584m-7r4m-8j6v</id>
        <link href="https://github.com/advisories/GHSA-584m-7r4m-8j6v"/>
        <updated>2023-05-23T20:15:00.000Z</updated>
        <content type="html"><![CDATA[<p>When triggering a build from the Jenkins CLI, Jenkins creates a temporary file on the controller if a file parameter is provided through the CLI’s standard input.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and , and LTS prior to 2.387.1 creates this temporary file in the default temporary directory with the default permissions for newly created files.</p>
<p>If these permissions are overly permissive, they may allow attackers with access to the Jenkins controller file system to read and write the file before it is used in the build.</p>
<p>This vulnerability only affects operating systems using a shared temporary directory for all users (typically Linux). Additionally, the default permissions for newly created files generally only allows attackers to read the temporary file.
Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 creates the temporary file with more restrictive permissions.</p>
<p>As a workaround, you can set a different path as your default temporary directory using the Java system property java.io.tmpdir, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27903">https://nvd.nist.gov/vuln/detail/CVE-2023-27903</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3058">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3058</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27903.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27903.json</a></li>
<li><a href="https://github.com/advisories/GHSA-584m-7r4m-8j6v">https://github.com/advisories/GHSA-584m-7r4m-8j6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-584m-7r4m-8j6v</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
</feed>