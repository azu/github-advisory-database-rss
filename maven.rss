<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-03-11T05:01:30.884Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.logging.log4j:log4j-core] Apache Log4j 1.x (EOL) allows Denial of Service (DoS)]]></title>
        <id>https://github.com/advisories/GHSA-vp98-w2p3-mv35</id>
        <link href="https://github.com/advisories/GHSA-vp98-w2p3-mv35"/>
        <updated>2023-03-10T23:48:33.000Z</updated>
        <content type="html"><![CDATA[<p>** UNSUPPORTED WHEN ASSIGNED ** When using the Chainsaw or SocketAppender components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted (ie, deeply nested) hashmap or hashtable (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve Denial of Service when the object is deserialized. This issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26464">https://nvd.nist.gov/vuln/detail/CVE-2023-26464</a></li>
<li><a href="https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t">https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t</a></li>
<li><a href="https://github.com/advisories/GHSA-vp98-w2p3-mv35">https://github.com/advisories/GHSA-vp98-w2p3-mv35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp98-w2p3-mv35</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-10T15:30:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.geode:geode-core] Apache Geode vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</id>
        <link href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg"/>
        <updated>2023-03-10T23:21:39.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Geode versions up to 1.12.5, 1.13.4 and 1.14.0 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 8. Any user still on Java 8 who wishes to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15 and Java 11. If upgrading to Java 11 is not possible, then upgrade to Apache Geode 1.15 and specify "--J=-Dgeode.enableGlobalSerialFilter=true" when starting any Locators or Servers. Follow the documentation for details on specifying any user classes that may be serialized/deserialized with the "serializable-object-filter" configuration option. Using a global serial filter will impact performance.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37021">https://nvd.nist.gov/vuln/detail/CVE-2022-37021</a></li>
<li><a href="https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr">https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr</a></li>
<li><a href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg">https://github.com/advisories/GHSA-q4q3-r45f-7gwg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-01T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.geode:geode-core] Apache Geode vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</id>
        <link href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg"/>
        <updated>2023-03-10T23:21:39.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Geode versions up to 1.12.5, 1.13.4 and 1.14.0 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 8. Any user still on Java 8 who wishes to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15 and Java 11. If upgrading to Java 11 is not possible, then upgrade to Apache Geode 1.15 and specify "--J=-Dgeode.enableGlobalSerialFilter=true" when starting any Locators or Servers. Follow the documentation for details on specifying any user classes that may be serialized/deserialized with the "serializable-object-filter" configuration option. Using a global serial filter will impact performance.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37021">https://nvd.nist.gov/vuln/detail/CVE-2022-37021</a></li>
<li><a href="https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr">https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr</a></li>
<li><a href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg">https://github.com/advisories/GHSA-q4q3-r45f-7gwg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-01T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.geode:geode-core] Apache Geode vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</id>
        <link href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg"/>
        <updated>2023-03-10T23:21:39.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Geode versions up to 1.12.5, 1.13.4 and 1.14.0 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 8. Any user still on Java 8 who wishes to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15 and Java 11. If upgrading to Java 11 is not possible, then upgrade to Apache Geode 1.15 and specify "--J=-Dgeode.enableGlobalSerialFilter=true" when starting any Locators or Servers. Follow the documentation for details on specifying any user classes that may be serialized/deserialized with the "serializable-object-filter" configuration option. Using a global serial filter will impact performance.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37021">https://nvd.nist.gov/vuln/detail/CVE-2022-37021</a></li>
<li><a href="https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr">https://lists.apache.org/thread/qrvhmytsshsk5xcb68pwccw3y6m8o8nr</a></li>
<li><a href="https://github.com/advisories/GHSA-q4q3-r45f-7gwg">https://github.com/advisories/GHSA-q4q3-r45f-7gwg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4q3-r45f-7gwg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-01T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.validation] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.utilities] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.r5] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.r4b] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.convertors] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.core] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-03-10T22:15:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qj2w-mw2r-pv39</id>
        <link href="https://github.com/advisories/GHSA-qj2w-mw2r-pv39"/>
        <updated>2023-03-10T02:36:47.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Deserialization of Untrusted Data vulnerability in owner command that can result in code execution. This attack requires the victim to run the <code>gem owner</code> command on a gem with a specially crafted YAML file. This vulnerability is fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000074">https://nvd.nist.gov/vuln/detail/CVE-2018-1000074</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/254e3d0ee873c008c0b74e8b8abcbdab4caa0a6d">https://github.com/rubygems/rubygems/commit/254e3d0ee873c008c0b74e8b8abcbdab4caa0a6d</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00017.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00017.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/08/msg00028.html">https://lists.debian.org/debian-lts-announce/2018/08/msg00028.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html">https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://usn.ubuntu.com/3621-2/">https://usn.ubuntu.com/3621-2/</a></li>
<li><a href="https://usn.ubuntu.com/3685-1/">https://usn.ubuntu.com/3685-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183">https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183</a></li>
<li><a href="https://github.com/advisories/GHSA-qj2w-mw2r-pv39">https://github.com/advisories/GHSA-qj2w-mw2r-pv39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj2w-mw2r-pv39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-87qx-g5wg-mwmj</id>
        <link href="https://github.com/advisories/GHSA-87qx-g5wg-mwmj"/>
        <updated>2023-03-10T02:34:51.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Cross Site Scripting (XSS) vulnerability in gem server display of homepage attribute that can result in XSS. This attack requires the victim to browse to a malicious gem on a vulnerable gem server. This vulnerability is fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000078">https://nvd.nist.gov/vuln/detail/CVE-2018-1000078</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/66a28b9275551384fdab45f3591a82d6b59952cb">https://github.com/rubygems/rubygems/commit/66a28b9275551384fdab45f3591a82d6b59952cb</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html">https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183">https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183</a></li>
<li><a href="https://github.com/advisories/GHSA-87qx-g5wg-mwmj">https://github.com/advisories/GHSA-87qx-g5wg-mwmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87qx-g5wg-mwmj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:01:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gv86-43rv-79m2</id>
        <link href="https://github.com/advisories/GHSA-gv86-43rv-79m2"/>
        <updated>2023-03-10T02:33:27.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Improper Input Validation vulnerability in ruby gems specification homepage attribute that can result in a malicious gem setting an invalid homepage URL. This vulnerability is fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000077">https://nvd.nist.gov/vuln/detail/CVE-2018-1000077</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/feadefc2d351dcb95d6492f5ad17ebca546eb964">https://github.com/rubygems/rubygems/commit/feadefc2d351dcb95d6492f5ad17ebca546eb964</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html">https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183">https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183</a></li>
<li><a href="https://github.com/advisories/GHSA-gv86-43rv-79m2">https://github.com/advisories/GHSA-gv86-43rv-79m2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gv86-43rv-79m2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:01:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8qxg-mff5-j3wc</id>
        <link href="https://github.com/advisories/GHSA-8qxg-mff5-j3wc"/>
        <updated>2023-03-10T02:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Directory Traversal vulnerability in gem installation that can result in the gem writing to arbitrary filesystem locations during installation. This attack appears to be exploitable via installation of a malicious gem. This vulnerability is fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000079">https://nvd.nist.gov/vuln/detail/CVE-2018-1000079</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/666ef793cad42eed96f7aee1cdf77865db921099">https://github.com/rubygems/rubygems/commit/666ef793cad42eed96f7aee1cdf77865db921099</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/f83f911e19e27cbac1ccce7471d96642241dd759">https://github.com/rubygems/rubygems/commit/f83f911e19e27cbac1ccce7471d96642241dd759</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183">https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=895778">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=895778</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2018-1000079">https://security-tracker.debian.org/tracker/CVE-2018-1000079</a></li>
<li><a href="https://github.com/advisories/GHSA-8qxg-mff5-j3wc">https://github.com/advisories/GHSA-8qxg-mff5-j3wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qxg-mff5-j3wc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:54:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Infinite Loop vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-74pv-v9gh-h25p</id>
        <link href="https://github.com/advisories/GHSA-74pv-v9gh-h25p"/>
        <updated>2023-03-10T00:44:38.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a infinite loop caused by negative size vulnerability in ruby gem package tar header that can result in a negative size could cause an infinite loop.. This vulnerability appears to have been fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000075">https://nvd.nist.gov/vuln/detail/CVE-2018-1000075</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/92e98bf8f810bd812f919120d4832df51bc25d83">https://github.com/rubygems/rubygems/commit/92e98bf8f810bd812f919120d4832df51bc25d83</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html">https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183">https://github.com/rubygems/rubygems/commit/5971b486d4dbb2bad5d3445b3801c456eb0ce183</a></li>
<li><a href="https://github.com/advisories/GHSA-74pv-v9gh-h25p">https://github.com/advisories/GHSA-74pv-v9gh-h25p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74pv-v9gh-h25p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:48:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-server] Jetty vulnerable to authorization bypass due to inconsistent HTTP request handling (HTTP Request Smuggling)]]></title>
        <id>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</id>
        <link href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6"/>
        <updated>2023-03-09T20:35:04.000Z</updated>
        <content type="html"><![CDATA[<p>Eclipse Jetty Server versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), are vulnerable to HTTP Request Smuggling when presented with two content-lengths headers, allowing authorization bypass. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decides on the shorter length, but still passes on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary is imposing authorization, the fake pipelined request bypasses that authorization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7658">https://nvd.nist.gov/vuln/detail/CVE-2017-7658</a></li>
<li><a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669">https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669</a></li>
<li><a href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6">https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</a></li>
<li><a href="https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E">https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E">https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20181014-0001/">https://security.netapp.com/advisory/ntap-20181014-0001/</a></li>
<li><a href="https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4278">https://www.debian.org/security/2018/dsa-4278</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>
<li><a href="http://www.securityfocus.com/bid/106566">http://www.securityfocus.com/bid/106566</a></li>
<li><a href="http://www.securitytracker.com/id/1041194">http://www.securitytracker.com/id/1041194</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-10-19T16:16:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-server] Jetty vulnerable to authorization bypass due to inconsistent HTTP request handling (HTTP Request Smuggling)]]></title>
        <id>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</id>
        <link href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6"/>
        <updated>2023-03-09T20:35:04.000Z</updated>
        <content type="html"><![CDATA[<p>Eclipse Jetty Server versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), are vulnerable to HTTP Request Smuggling when presented with two content-lengths headers, allowing authorization bypass. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decides on the shorter length, but still passes on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary is imposing authorization, the fake pipelined request bypasses that authorization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7658">https://nvd.nist.gov/vuln/detail/CVE-2017-7658</a></li>
<li><a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669">https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669</a></li>
<li><a href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6">https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</a></li>
<li><a href="https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E">https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E">https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20181014-0001/">https://security.netapp.com/advisory/ntap-20181014-0001/</a></li>
<li><a href="https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4278">https://www.debian.org/security/2018/dsa-4278</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>
<li><a href="http://www.securityfocus.com/bid/106566">http://www.securityfocus.com/bid/106566</a></li>
<li><a href="http://www.securitytracker.com/id/1041194">http://www.securitytracker.com/id/1041194</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-10-19T16:16:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-server] Jetty vulnerable to authorization bypass due to inconsistent HTTP request handling (HTTP Request Smuggling)]]></title>
        <id>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</id>
        <link href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6"/>
        <updated>2023-03-09T20:35:04.000Z</updated>
        <content type="html"><![CDATA[<p>Eclipse Jetty Server versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), are vulnerable to HTTP Request Smuggling when presented with two content-lengths headers, allowing authorization bypass. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decides on the shorter length, but still passes on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary is imposing authorization, the fake pipelined request bypasses that authorization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7658">https://nvd.nist.gov/vuln/detail/CVE-2017-7658</a></li>
<li><a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669">https://bugs.eclipse.org/bugs/show_bug.cgi?id=535669</a></li>
<li><a href="https://github.com/advisories/GHSA-6x9x-8qw9-9pp6">https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</a></li>
<li><a href="https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E">https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451@%3Csolr-user.lucene.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E">https://lists.apache.org/thread.html/r1b103833cb5bc8466e24ff0ecc5e75b45a705334ab6a444e64e840a0@%3Cissues.bookkeeper.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r41af10c4adec8d34a969abeb07fd0d6ad0c86768b751464f1cdd23e8@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/r9159c9e7ec9eac1613da2dbaddbc15691a13d4dbb2c8be974f42e6ae@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E">https://lists.apache.org/thread.html/ra6f956ed4ec2855583b2d0c8b4802b450f593d37b77509b48cd5d574@%3Ccommits.druid.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20181014-0001/">https://security.netapp.com/advisory/ntap-20181014-0001/</a></li>
<li><a href="https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbst03953en_us</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4278">https://www.debian.org/security/2018/dsa-4278</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>
<li><a href="http://www.securityfocus.com/bid/106566">http://www.securityfocus.com/bid/106566</a></li>
<li><a href="http://www.securitytracker.com/id/1041194">http://www.securitytracker.com/id/1041194</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x9x-8qw9-9pp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-10-19T16:16:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Link Following vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gx69-6cp4-hxrj</id>
        <link href="https://github.com/advisories/GHSA-gx69-6cp4-hxrj"/>
        <updated>2023-03-09T19:37:45.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Directory Traversal vulnerability in <code>install_location</code> function of <code>package.rb</code> that can result in path traversal when writing to a symlinked basedir outside of the root. This vulnerability appears to have been fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000073">https://nvd.nist.gov/vuln/detail/CVE-2018-1000073</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/1b931fc03b819b9a0214be3eaca844ef534175e2">https://github.com/rubygems/rubygems/commit/1b931fc03b819b9a0214be3eaca844ef534175e2</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/08/msg00028.html">https://lists.debian.org/debian-lts-announce/2018/08/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=925986">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=925986</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rubygems-update/CVE-2018-1000073.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rubygems-update/CVE-2018-1000073.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-gx69-6cp4-hxrj">https://github.com/advisories/GHSA-gx69-6cp4-hxrj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gx69-6cp4-hxrj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:18:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby-stdlib] RubyGems Improper Verification of Cryptographic Signature vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mc6j-h948-v2p6</id>
        <link href="https://github.com/advisories/GHSA-mc6j-h948-v2p6"/>
        <updated>2023-03-08T19:49:22.000Z</updated>
        <content type="html"><![CDATA[<p>RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, and Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contain an Improper Verification of Cryptographic Signature vulnerability in package.rb. This can result in a mis-signed gem being installed, as the tarball would contain multiple gem signatures. This vulnerability has been fixed in 2.7.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000076">https://nvd.nist.gov/vuln/detail/CVE-2018-1000076</a></li>
<li><a href="https://github.com/rubygems/rubygems/commit/f5042b879259b1f1ce95a0c5082622c646376693">https://github.com/rubygems/rubygems/commit/f5042b879259b1f1ce95a0c5082622c646376693</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3729">https://access.redhat.com/errata/RHSA-2018:3729</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3730">https://access.redhat.com/errata/RHSA-2018:3730</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3731">https://access.redhat.com/errata/RHSA-2018:3731</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2028">https://access.redhat.com/errata/RHSA-2019:2028</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0542">https://access.redhat.com/errata/RHSA-2020:0542</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0591">https://access.redhat.com/errata/RHSA-2020:0591</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0663">https://access.redhat.com/errata/RHSA-2020:0663</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00000.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00001.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html">https://lists.debian.org/debian-lts-announce/2018/04/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2018/07/msg00012.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html">https://lists.debian.org/debian-lts-announce/2019/05/msg00028.html</a></li>
<li><a href="https://usn.ubuntu.com/3621-1/">https://usn.ubuntu.com/3621-1/</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4219">https://www.debian.org/security/2018/dsa-4219</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4259">https://www.debian.org/security/2018/dsa-4259</a></li>
<li><a href="http://blog.rubygems.org/2018/02/15/2.7.6-released.html">http://blog.rubygems.org/2018/02/15/2.7.6-released.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html">http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00036.html</a></li>
<li><a href="https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7">https://github.com/jruby/jruby/commit/0b06b48ab4432237ce5fc1bef47f2c6bcf7843f7</a></li>
<li><a href="https://github.com/advisories/GHSA-mc6j-h948-v2p6">https://github.com/advisories/GHSA-mc6j-h948-v2p6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mc6j-h948-v2p6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-14T01:01:12.000Z</published>
    </entry>
</feed>