<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-06T15:01:29.568Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:build-publisher] Path traversal in Jenkins build-publisher Plugin]]></title>
        <id>https://github.com/advisories/GHSA-jrqh-c9v8-ccx9</id>
        <link href="https://github.com/advisories/GHSA-jrqh-c9v8-ccx9"/>
        <updated>2022-12-06T14:28:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Build-Publisher Plugin 1.22 and earlier allows attackers with Item/Configure permission to create or replace any <code>config.xml</code> file on the Jenkins controller file system by providing a crafted file name to an API endpoint. Additionally, this endpoint does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability that allows attackers to replace any <code>config.xml</code> file on the Jenkins controller file system with an empty file.</p>
<p>There is currently no known workaround or fix, and this plugin has been suspended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41231">https://nvd.nist.gov/vuln/detail/CVE-2022-41231</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2139">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2139</a></li>
<li><a href="https://github.com/jenkins-infra/update-center2/pull/644">https://github.com/jenkins-infra/update-center2/pull/644</a></li>
<li><a href="https://github.com/advisories/GHSA-jrqh-c9v8-ccx9">https://github.com/advisories/GHSA-jrqh-c9v8-ccx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrqh-c9v8-ccx9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:build-publisher] Missing permission check in Jenkins build-publisher Plugin]]></title>
        <id>https://github.com/advisories/GHSA-3jp6-q9cg-rvgj</id>
        <link href="https://github.com/advisories/GHSA-3jp6-q9cg-rvgj"/>
        <updated>2022-12-06T14:26:48.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Build-Publisher Plugin 1.22 and earlier does not perform a permission check in an HTTP endpoint, allowing attackers with Overall/Read permission to obtain names and URLs of Jenkins servers that the plugin is configured to publish builds to, as well as builds pending for publication to those Jenkins servers. At this time there is no known workaround or fix. The Build-Publisher plugin distribution has been suspended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41230">https://nvd.nist.gov/vuln/detail/CVE-2022-41230</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-1994">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-1994</a></li>
<li><a href="https://github.com/jenkins-infra/update-center2/pull/644">https://github.com/jenkins-infra/update-center2/pull/644</a></li>
<li><a href="https://plugins.jenkins.io/build-publisher/">https://plugins.jenkins.io/build-publisher/</a></li>
<li><a href="https://github.com/advisories/GHSA-3jp6-q9cg-rvgj">https://github.com/advisories/GHSA-3jp6-q9cg-rvgj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3jp6-q9cg-rvgj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:cavisson-ns-nd-integration] Jenkins NS-ND Integration Performance Publisher Plugin vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-fq2h-r2h9-pj8r</id>
        <link href="https://github.com/advisories/GHSA-fq2h-r2h9-pj8r"/>
        <updated>2022-12-06T13:56:58.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins NS-ND Integration Performance Publisher Plugin 4.8.0.134 and earlier does not escape configuration options of the Execute NetStorm/NetCloud Test build step, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41229">https://nvd.nist.gov/vuln/detail/CVE-2022-41229</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2858">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2858</a></li>
<li><a href="https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/d77c6c7a279da002178f8244f37093773dd6aee5">https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/d77c6c7a279da002178f8244f37093773dd6aee5</a></li>
<li><a href="https://github.com/advisories/GHSA-fq2h-r2h9-pj8r">https://github.com/advisories/GHSA-fq2h-r2h9-pj8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq2h-r2h9-pj8r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] Missing permission checks in Jenkins CONS3RT Plugin allow enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-p37p-wg92-2fc4</id>
        <link href="https://github.com/advisories/GHSA-p37p-wg92-2fc4"/>
        <updated>2022-12-06T00:51:25.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41252">https://nvd.nist.gov/vuln/detail/CVE-2022-41252</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2752">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2752</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-p37p-wg92-2fc4">https://github.com/advisories/GHSA-p37p-wg92-2fc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p37p-wg92-2fc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] CSRF vulnerability in Jenkins CONS3RT Plugin allow capturing credentials]]></title>
        <id>https://github.com/advisories/GHSA-48q3-5297-wmmx</id>
        <link href="https://github.com/advisories/GHSA-48q3-5297-wmmx"/>
        <updated>2022-12-06T00:50:18.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41253">https://nvd.nist.gov/vuln/detail/CVE-2022-41253</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-48q3-5297-wmmx">https://github.com/advisories/GHSA-48q3-5297-wmmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-48q3-5297-wmmx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] Missing permission checks in Jenkins CONS3RT Plugin allow capturing credentials]]></title>
        <id>https://github.com/advisories/GHSA-74x9-fhc2-p79f</id>
        <link href="https://github.com/advisories/GHSA-74x9-fhc2-p79f"/>
        <updated>2022-12-06T00:41:57.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41254">https://nvd.nist.gov/vuln/detail/CVE-2022-41254</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-74x9-fhc2-p79f">https://github.com/advisories/GHSA-74x9-fhc2-p79f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74x9-fhc2-p79f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-mhp7-3393-pfqr</id>
        <link href="https://github.com/advisories/GHSA-mhp7-3393-pfqr"/>
        <updated>2022-12-06T00:02:20.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34172">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-mhp7-3393-pfqr">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhp7-3393-pfqr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-mhp7-3393-pfqr</id>
        <link href="https://github.com/advisories/GHSA-mhp7-3393-pfqr"/>
        <updated>2022-12-06T00:02:20.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34172">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-mhp7-3393-pfqr">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhp7-3393-pfqr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</id>
        <link href="https://github.com/advisories/GHSA-6g4r-q7qg-6qx6"/>
        <updated>2022-12-05T23:52:00.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, the tooltip of the build button in list views supports HTML without escaping the job display name.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356 addresses this vulnerability. The tooltip of the build button in list views is now escaped.</p>
<p>No Jenkins LTS release is affected by SECURITY-2776 or SECURITY-2780, as these were not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34173">https://nvd.nist.gov/vuln/detail/CVE-2022-34173</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-6g4r-q7qg-6qx6">https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-9grj-j43m-mjqr</id>
        <link href="https://github.com/advisories/GHSA-9grj-j43m-mjqr"/>
        <updated>2022-12-05T23:37:16.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>
<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34174">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>
<li><a href="https://github.com/advisories/GHSA-9grj-j43m-mjqr">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9grj-j43m-mjqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-9grj-j43m-mjqr</id>
        <link href="https://github.com/advisories/GHSA-9grj-j43m-mjqr"/>
        <updated>2022-12-05T23:37:16.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>
<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34174">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>
<li><a href="https://github.com/advisories/GHSA-9grj-j43m-mjqr">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9grj-j43m-mjqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option]]></title>
        <id>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</id>
        <link href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv"/>
        <updated>2022-12-05T23:33:29.000Z</updated>
        <content type="html"><![CDATA[<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45046">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>
<li><a href="https://camel.apache.org/security/CVE-2022-45046.html">https://camel.apache.org/security/CVE-2022-45046.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/12/05/2">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-05T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option]]></title>
        <id>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</id>
        <link href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv"/>
        <updated>2022-12-05T23:33:29.000Z</updated>
        <content type="html"><![CDATA[<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45046">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>
<li><a href="https://camel.apache.org/security/CVE-2022-45046.html">https://camel.apache.org/security/CVE-2022-45046.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/12/05/2">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-05T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Unauthorized view fragment access in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-p3rc-946h-8cf5</id>
        <link href="https://github.com/advisories/GHSA-p3rc-946h-8cf5"/>
        <updated>2022-12-05T23:33:28.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins uses the Stapler web framework to render its UI views. These views are frequently composed of several view fragments, enabling plugins to extend existing views with more content.</p>
<p>Before <a href="https://www.jenkins.io/security/advisory/2019-07-17/#SECURITY-534">SECURITY-534</a> was fixed in Jenkins 2.186 and LTS 2.176.2, attackers could in some cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>
<p>In Jenkins 2.335 through 2.355 (both inclusive), the protection added for SECURITY-534 is disabled for some views. As a result, attackers could in very limited cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>
<p>As of publication, the Jenkins security team is unaware of any vulnerable view fragment across the Jenkins plugin ecosystem.</p>
<p>Jenkins 2.356 restores the protection for affected views.</p>
<p>No Jenkins LTS release is affected by this issue, as it was not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34175">https://nvd.nist.gov/vuln/detail/CVE-2022-34175</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777</a></li>
<li><a href="https://github.com/advisories/GHSA-p3rc-946h-8cf5">https://github.com/advisories/GHSA-p3rc-946h-8cf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p3rc-946h-8cf5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
</feed>