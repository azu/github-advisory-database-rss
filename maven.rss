<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-05-05T21:01:09.805Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk12] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk13] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk14] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk15to18] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk18on] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Jenkins Script Security Plugin sandbox bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</id>
        <link href="https://github.com/advisories/GHSA-2g4q-9vm9-9fw4"/>
        <updated>2024-05-03T20:17:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin 1335.vf07d9ce377a_e and earlier:</p>
<ul>
<li><p>Crafted constructor bodies that invoke other constructors can be used to construct any subclassable type via implicit casts.</p>
</li>
<li><p>Sandbox-defined Groovy classes that shadow specific non-sandbox-defined classes can be used to construct any subclassable type.</p>
</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34145">https://nvd.nist.gov/vuln/detail/CVE-2024-34145</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-2g4q-9vm9-9fw4">https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Jenkins Script Security Plugin has sandbox bypass vulnerability involving crafted constructor bodies]]></title>
        <id>https://github.com/advisories/GHSA-v63g-v339-2673</id>
        <link href="https://github.com/advisories/GHSA-v63g-v339-2673"/>
        <updated>2024-05-03T20:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin 1335.vf07d9ce377a_e and earlier:</p>
<ul>
<li><p>Crafted constructor bodies that invoke other constructors can be used to construct any subclassable type via implicit casts.</p>
</li>
<li><p>Sandbox-defined Groovy classes that shadow specific non-sandbox-defined classes can be used to construct any subclassable type.</p>
</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<ul>
<li>These issues are caused by an incomplete fix of <a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">SECURITY-2824</a>.</li>
</ul>
<p>Script Security Plugin 1336.vf33a_a_9863911 has additional restrictions and sanity checks to ensure that super constructors cannot be constructed without being intercepted by the sandbox:</p>
<ul>
<li><p>Calls to to other constructors using this are now intercepted by the sandbox.</p>
</li>
<li><p>Classes in packages that can be shadowed by Groovy-defined classes are no longer ignored by the sandbox when intercepting super constructor calls.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34144">https://nvd.nist.gov/vuln/detail/CVE-2024-34144</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/jenkinsci/script-security-plugin/releases/tag/1336.vf33a_a_9863911">https://github.com/jenkinsci/script-security-plugin/releases/tag/1336.vf33a_a_9863911</a></li>
<li><a href="https://github.com/advisories/GHSA-v63g-v339-2673">https://github.com/advisories/GHSA-v63g-v339-2673</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v63g-v339-2673</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly:wildfly-domain-http] Wildfly vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</id>
        <link href="https://github.com/advisories/GHSA-x7g6-rwhc-g7mj"/>
        <updated>2024-05-03T20:12:01.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Wildfly’s management interface. Due to the lack of limitation of sockets for the management interface, it may be possible to cause a denial of service hitting the nofile limit as there is no possibility to configure or set a maximum number of connections.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4029">https://nvd.nist.gov/vuln/detail/CVE-2024-4029</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-4029">https://access.redhat.com/security/cve/CVE-2024-4029</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2278615">https://bugzilla.redhat.com/show_bug.cgi?id=2278615</a></li>
<li><a href="https://github.com/advisories/GHSA-x7g6-rwhc-g7mj">https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:partial-release-manager] Jenkins Subversion Partial Release Manager Plugin programmatically disables the fix for CVE-2016-3721 ]]></title>
        <id>https://github.com/advisories/GHSA-phh3-2p9m-w6j5</id>
        <link href="https://github.com/advisories/GHSA-phh3-2p9m-w6j5"/>
        <updated>2024-05-03T19:37:36.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Subversion Partial Release Manager Plugin 1.0.1 and earlier programmatically sets the Java system property <code>hudson.model.ParametersAction.keepUndefinedParameters</code> whenever a build is triggered from a release tag with the 'Svn-Partial Release Manager' SCM. Doing so disables the fix for <a href="https://www.jenkins.io/security/advisory/2016-05-11/#arbitrary-build-parameters-are-passed-to-build-scripts-as-environment-variables">SECURITY-170</a> / CVE-2016-3721.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34148">https://nvd.nist.gov/vuln/detail/CVE-2024-34148</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3331">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3331</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-phh3-2p9m-w6j5">https://github.com/advisories/GHSA-phh3-2p9m-w6j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phh3-2p9m-w6j5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:telegrambot] Jenkins Telegram Bot Plugin stores the Telegram Bot token in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-94pr-w968-h923</id>
        <link href="https://github.com/advisories/GHSA-94pr-w968-h923"/>
        <updated>2024-05-03T19:35:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Telegram Bot Plugin 1.4.0 and earlier stores the Telegram Bot token unencrypted in its global configuration file <code>jenkinsci.plugins.telegrambot.TelegramBotGlobalConfiguration.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>This token can be viewed by users with access to the Jenkins controller file system.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34147">https://nvd.nist.gov/vuln/detail/CVE-2024-34147</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3294">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3294</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-94pr-w968-h923">https://github.com/advisories/GHSA-94pr-w968-h923</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94pr-w968-h923</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:apache-activemq] Apache ActiveMQ's default configuration doesn't secure the API web context]]></title>
        <id>https://github.com/advisories/GHSA-gj5m-m88j-v7c3</id>
        <link href="https://github.com/advisories/GHSA-gj5m-m88j-v7c3"/>
        <updated>2024-05-03T17:47:08.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache ActiveMQ 6.x, the default configuration doesn't secure the API web context (where the Jolokia JMX REST API and the Message REST API are located). It means that anyone can use these layers without any required authentication. Potentially, anyone can interact with the broker (using Jolokia JMX REST API) and/or produce/consume messages or purge/delete destinations (using the Message REST API).</p>
<p>To mitigate, users can update the default conf/jetty.xml configuration file to add authentication requirement:

&nbsp; 
&nbsp; 
</p>
<p>Or we encourage users to upgrade to Apache ActiveMQ 6.1.2 where the default configuration has been updated with authentication by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32114">https://nvd.nist.gov/vuln/detail/CVE-2024-32114</a></li>
<li><a href="https://activemq.apache.org/security-advisories.data/CVE-2024-32114-announcement.txt">https://activemq.apache.org/security-advisories.data/CVE-2024-32114-announcement.txt</a></li>
<li><a href="https://github.com/apache/activemq/pull/1201">https://github.com/apache/activemq/pull/1201</a></li>
<li><a href="https://github.com/apache/activemq/commit/43cc596219b6a8c8b5a54fbda3fb68cb4424f2d0">https://github.com/apache/activemq/commit/43cc596219b6a8c8b5a54fbda3fb68cb4424f2d0</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-9477">https://issues.apache.org/jira/browse/AMQ-9477</a></li>
<li><a href="https://github.com/advisories/GHSA-gj5m-m88j-v7c3">https://github.com/advisories/GHSA-gj5m-m88j-v7c3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gj5m-m88j-v7c3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-02T09:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.xnio:xnio-api] XNIO denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7f88-5hhx-67m2</id>
        <link href="https://github.com/advisories/GHSA-7f88-5hhx-67m2"/>
        <updated>2024-05-03T06:52:47.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in XNIO. The XNIO NotifierState that can cause a Stack Overflow Exception when the chain of notifier states becomes problematically large can lead to uncontrolled resource management and a possible denial of service (DoS). Version 3.8.14.Final is expected to contain a fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5685">https://nvd.nist.gov/vuln/detail/CVE-2023-5685</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-5685">https://access.redhat.com/security/cve/CVE-2023-5685</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2241822">https://bugzilla.redhat.com/show_bug.cgi?id=2241822</a></li>
<li><a href="https://github.com/xnio/xnio/blob/3.8.13.Final/api/src/main/java/org/xnio/AbstractIoFuture.java#L249">https://github.com/xnio/xnio/blob/3.8.13.Final/api/src/main/java/org/xnio/AbstractIoFuture.java#L249</a></li>
<li><a href="https://issues.redhat.com/browse/XNIO-423">https://issues.redhat.com/browse/XNIO-423</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:7637">https://access.redhat.com/errata/RHSA-2023:7637</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:7638">https://access.redhat.com/errata/RHSA-2023:7638</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:7639">https://access.redhat.com/errata/RHSA-2023:7639</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:7641">https://access.redhat.com/errata/RHSA-2023:7641</a></li>
<li><a href="https://github.com/xnio/xnio/commit/ffabdcdda508ef87aeadad5ca3f854e274d60ec1">https://github.com/xnio/xnio/commit/ffabdcdda508ef87aeadad5ca3f854e274d60ec1</a></li>
<li><a href="https://github.com/advisories/GHSA-7f88-5hhx-67m2">https://github.com/advisories/GHSA-7f88-5hhx-67m2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f88-5hhx-67m2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-22T21:30:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xmlunit:xmlunit-core] XMLUnit for Java has Insecure Defaults when Processing XSLT Stylesheets]]></title>
        <id>https://github.com/advisories/GHSA-chfm-68vv-pvw5</id>
        <link href="https://github.com/advisories/GHSA-chfm-68vv-pvw5"/>
        <updated>2024-05-01T16:40:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When performing XSLT transformations XMLUnit for Java did not disable XSLT extension functions by default. Depending on the XSLT processor being used this could allow arbitrary code to be executed when XMLUnit is used to transform data with a stylesheet who's source can not be trusted. If the stylesheet can be provided externally this may even lead to a remote code execution.</p>
<h2 id="patches">Patches</h2>
<p>Users are advised to upgrade to XMLUnit for Java 2.10.0 where the default has been changed by means of <a href="https://github.com/xmlunit/xmlunit/commit/b81d48b71dfd2868bdfc30a3e17ff973f32bc15b">https://github.com/xmlunit/xmlunit/commit/b81d48b71dfd2868bdfc30a3e17ff973f32bc15b</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>XMLUnit's main use-case is performing tests on code that generates or processes XML. Most users will not use it to perform arbitrary XSLT transformations.</p>
<p>Users running XSLT transformations with untrusted stylesheets should explicitly use XMLUnit's APIs to pass in a pre-configured TraX <code>TransformerFactory</code> with extension functions disabled via features and attributes. The required <code>setFactory</code> or <code>setTransformerFactory</code> methods have been available since XMLUnit for Java 2.0.0.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/xmlunit/xmlunit/issues/264">Bug Report</a>
<a href="https://docs.oracle.com/en/java/javase/22/security/java-api-xml-processing-jaxp-security-guide.html#GUID-E345AA09-801E-4B95-B83D-7F0C452538AA">JAXP Security Guide</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xmlunit/xmlunit/security/advisories/GHSA-chfm-68vv-pvw5">https://github.com/xmlunit/xmlunit/security/advisories/GHSA-chfm-68vv-pvw5</a></li>
<li><a href="https://github.com/xmlunit/xmlunit/issues/264">https://github.com/xmlunit/xmlunit/issues/264</a></li>
<li><a href="https://github.com/xmlunit/xmlunit/commit/b81d48b71dfd2868bdfc30a3e17ff973f32bc15b">https://github.com/xmlunit/xmlunit/commit/b81d48b71dfd2868bdfc30a3e17ff973f32bc15b</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/22/security/java-api-xml-processing-jaxp-security-guide.html#GUID-E345AA09-801E-4B95-B83D-7F0C452538AA">https://docs.oracle.com/en/java/javase/22/security/java-api-xml-processing-jaxp-security-guide.html#GUID-E345AA09-801E-4B95-B83D-7F0C452538AA</a></li>
<li><a href="https://github.com/advisories/GHSA-chfm-68vv-pvw5">https://github.com/advisories/GHSA-chfm-68vv-pvw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chfm-68vv-pvw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-01T16:40:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[struts:struts] Apache Struts XSS]]></title>
        <id>https://github.com/advisories/GHSA-9848-v244-962p</id>
        <link href="https://github.com/advisories/GHSA-9848-v244-962p"/>
        <updated>2024-04-30T08:46:51.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Apache Struts 1.3.10 allow remote attackers to inject arbitrary web script or HTML via (1) the name parameter to struts-examples/upload/upload-submit.do, or the message parameter to (2) <code>struts-cookbook/processSimple.do</code> or (3) <code>struts-cookbook/processDyna.do</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1007">https://nvd.nist.gov/vuln/detail/CVE-2012-1007</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73052">https://exchange.xforce.ibmcloud.com/vulnerabilities/73052</a></li>
<li><a href="https://github.com/advisories/GHSA-9848-v244-962p">https://github.com/advisories/GHSA-9848-v244-962p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9848-v244-962p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:21:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts-core] Apache Struts XSS]]></title>
        <id>https://github.com/advisories/GHSA-9848-v244-962p</id>
        <link href="https://github.com/advisories/GHSA-9848-v244-962p"/>
        <updated>2024-04-30T08:46:51.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Apache Struts 1.3.10 allow remote attackers to inject arbitrary web script or HTML via (1) the name parameter to struts-examples/upload/upload-submit.do, or the message parameter to (2) <code>struts-cookbook/processSimple.do</code> or (3) <code>struts-cookbook/processDyna.do</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1007">https://nvd.nist.gov/vuln/detail/CVE-2012-1007</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73052">https://exchange.xforce.ibmcloud.com/vulnerabilities/73052</a></li>
<li><a href="https://github.com/advisories/GHSA-9848-v244-962p">https://github.com/advisories/GHSA-9848-v244-962p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9848-v244-962p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:21:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus.resteasy.reactive:resteasy-reactive] Quarkus: security checks in resteasy reactive may trigger a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-mv64-86g8-cqq7</id>
        <link href="https://github.com/advisories/GHSA-mv64-86g8-cqq7"/>
        <updated>2024-04-25T23:34:45.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1726">https://nvd.nist.gov/vuln/detail/CVE-2024-1726</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:1662">https://access.redhat.com/errata/RHSA-2024:1662</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1726">https://access.redhat.com/security/cve/CVE-2024-1726</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2265158">https://bugzilla.redhat.com/show_bug.cgi?id=2265158</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b">https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c">https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c</a></li>
<li><a href="https://github.com/advisories/GHSA-mv64-86g8-cqq7">https://github.com/advisories/GHSA-mv64-86g8-cqq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mv64-86g8-cqq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-25T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus.resteasy.reactive:resteasy-reactive] Quarkus: security checks in resteasy reactive may trigger a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-mv64-86g8-cqq7</id>
        <link href="https://github.com/advisories/GHSA-mv64-86g8-cqq7"/>
        <updated>2024-04-25T23:34:45.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1726">https://nvd.nist.gov/vuln/detail/CVE-2024-1726</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:1662">https://access.redhat.com/errata/RHSA-2024:1662</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1726">https://access.redhat.com/security/cve/CVE-2024-1726</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2265158">https://bugzilla.redhat.com/show_bug.cgi?id=2265158</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b">https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c">https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c</a></li>
<li><a href="https://github.com/advisories/GHSA-mv64-86g8-cqq7">https://github.com/advisories/GHSA-mv64-86g8-cqq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mv64-86g8-cqq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-25T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus.resteasy.reactive:resteasy-reactive] Quarkus: security checks in resteasy reactive may trigger a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-mv64-86g8-cqq7</id>
        <link href="https://github.com/advisories/GHSA-mv64-86g8-cqq7"/>
        <updated>2024-04-25T23:34:45.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1726">https://nvd.nist.gov/vuln/detail/CVE-2024-1726</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:1662">https://access.redhat.com/errata/RHSA-2024:1662</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1726">https://access.redhat.com/security/cve/CVE-2024-1726</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2265158">https://bugzilla.redhat.com/show_bug.cgi?id=2265158</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b">https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c">https://github.com/quarkusio/quarkus/commit/96d93427f3b4a7d3cff34d8b7b883e13cecd359c</a></li>
<li><a href="https://github.com/advisories/GHSA-mv64-86g8-cqq7">https://github.com/advisories/GHSA-mv64-86g8-cqq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mv64-86g8-cqq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-25T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jberet:jberet-core] Jberet: jberet-core logging database credentials]]></title>
        <id>https://github.com/advisories/GHSA-9wmf-xf3h-r8pr</id>
        <link href="https://github.com/advisories/GHSA-9wmf-xf3h-r8pr"/>
        <updated>2024-04-25T19:57:36.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in jberet-core logging. An exception in 'dbProperties' might display user credentials such as the username and password for the database-connection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1102">https://nvd.nist.gov/vuln/detail/CVE-2024-1102</a></li>
<li><a href="https://github.com/jberet/jsr352/issues/452">https://github.com/jberet/jsr352/issues/452</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1102">https://access.redhat.com/security/cve/CVE-2024-1102</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2262060">https://bugzilla.redhat.com/show_bug.cgi?id=2262060</a></li>
<li><a href="https://github.com/jberet/jsr352/commit/eeef999663d7da0e372aeeeac26ecf7201a3121d">https://github.com/jberet/jsr352/commit/eeef999663d7da0e372aeeeac26ecf7201a3121d</a></li>
<li><a href="https://github.com/advisories/GHSA-9wmf-xf3h-r8pr">https://github.com/advisories/GHSA-9wmf-xf3h-r8pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wmf-xf3h-r8pr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-25T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-resteasy-reactive-common] Quarkus: authorization flaw in quarkus resteasy reactive and classic]]></title>
        <id>https://github.com/advisories/GHSA-25w4-hfqg-4r52</id>
        <link href="https://github.com/advisories/GHSA-25w4-hfqg-4r52"/>
        <updated>2024-04-25T19:54:41.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Quarkus. When a Quarkus RestEasy Classic or Reactive JAX-RS endpoint has its methods declared in the abstract Java class or customized by Quarkus extensions using the annotation processor, the authorization of these methods will not be enforced if it is enabled by either 'quarkus.security.jaxrs.deny-unannotated-endpoints' or 'quarkus.security.jaxrs.default-roles-allowed' properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5675">https://nvd.nist.gov/vuln/detail/CVE-2023-5675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:0494">https://access.redhat.com/errata/RHSA-2024:0494</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:0495">https://access.redhat.com/errata/RHSA-2024:0495</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-5675">https://access.redhat.com/security/cve/CVE-2023-5675</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2245197">https://bugzilla.redhat.com/show_bug.cgi?id=2245197</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/d802748128cd1932279b7c334f3792d481814ef5">https://github.com/quarkusio/quarkus/commit/d802748128cd1932279b7c334f3792d481814ef5</a></li>
<li><a href="https://github.com/advisories/GHSA-25w4-hfqg-4r52">https://github.com/advisories/GHSA-25w4-hfqg-4r52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25w4-hfqg-4r52</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-25T18:30:39.000Z</published>
    </entry>
</feed>