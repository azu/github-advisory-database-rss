<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-06T12:01:45.354Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] Missing permission checks in Jenkins CONS3RT Plugin allow enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-p37p-wg92-2fc4</id>
        <link href="https://github.com/advisories/GHSA-p37p-wg92-2fc4"/>
        <updated>2022-12-06T00:51:25.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41252">https://nvd.nist.gov/vuln/detail/CVE-2022-41252</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2752">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2752</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-p37p-wg92-2fc4">https://github.com/advisories/GHSA-p37p-wg92-2fc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p37p-wg92-2fc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] CSRF vulnerability in Jenkins CONS3RT Plugin allow capturing credentials]]></title>
        <id>https://github.com/advisories/GHSA-48q3-5297-wmmx</id>
        <link href="https://github.com/advisories/GHSA-48q3-5297-wmmx"/>
        <updated>2022-12-06T00:50:18.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41253">https://nvd.nist.gov/vuln/detail/CVE-2022-41253</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-48q3-5297-wmmx">https://github.com/advisories/GHSA-48q3-5297-wmmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-48q3-5297-wmmx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cons3rt] Missing permission checks in Jenkins CONS3RT Plugin allow capturing credentials]]></title>
        <id>https://github.com/advisories/GHSA-74x9-fhc2-p79f</id>
        <link href="https://github.com/advisories/GHSA-74x9-fhc2-p79f"/>
        <updated>2022-12-06T00:41:57.000Z</updated>
        <content type="html"><![CDATA[<p>CONS3RT Plugin 1.0.0 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41254">https://nvd.nist.gov/vuln/detail/CVE-2022-41254</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751">https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-2751</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/21/5">http://www.openwall.com/lists/oss-security/2022/09/21/5</a></li>
<li><a href="https://github.com/advisories/GHSA-74x9-fhc2-p79f">https://github.com/advisories/GHSA-74x9-fhc2-p79f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74x9-fhc2-p79f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-22T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-62wf-24c4-8r76</id>
        <link href="https://github.com/advisories/GHSA-62wf-24c4-8r76"/>
        <updated>2022-12-06T00:12:33.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.320 and LTS 2.332.1, help icon tooltips no longer escape the feature name, effectively undoing the fix for <a href="https://www.jenkins.io/security/advisory/2020-08-12/#SECURITY-1955">SECURITY-1955</a>.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the feature name in help icon tooltips is now escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34170">https://nvd.nist.gov/vuln/detail/CVE-2022-34170</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-62wf-24c4-8r76">https://github.com/advisories/GHSA-62wf-24c4-8r76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62wf-24c4-8r76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</id>
        <link href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q"/>
        <updated>2022-12-06T00:05:47.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.321 and LTS 2.332.1, the HTML output generated for new symbol-based SVG icons includes the <code>title</code> attribute of <code>l:ionicon</code> until Jenkins 2.334 and <code>alt</code> attribute of <code>l:icon</code> since Jenkins 2.335 without further escaping.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability, the <code>title</code> attribute of <code>l:ionicon</code> (Jenkins LTS 2.332.4) and <code>alt</code> attribute of <code>l:icon</code> (Jenkins 2.356 and LTS 2.346.1) are escaped in the generated HTML output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34171">https://nvd.nist.gov/vuln/detail/CVE-2022-34171</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-7f84-p6r5-jr6q">https://github.com/advisories/GHSA-7f84-p6r5-jr6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f84-p6r5-jr6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-mhp7-3393-pfqr</id>
        <link href="https://github.com/advisories/GHSA-mhp7-3393-pfqr"/>
        <updated>2022-12-06T00:02:20.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34172">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-mhp7-3393-pfqr">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhp7-3393-pfqr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-mhp7-3393-pfqr</id>
        <link href="https://github.com/advisories/GHSA-mhp7-3393-pfqr"/>
        <updated>2022-12-06T00:02:20.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34172">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-mhp7-3393-pfqr">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhp7-3393-pfqr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</id>
        <link href="https://github.com/advisories/GHSA-6g4r-q7qg-6qx6"/>
        <updated>2022-12-05T23:52:00.000Z</updated>
        <content type="html"><![CDATA[<p>Since Jenkins 2.340, the tooltip of the build button in list views supports HTML without escaping the job display name.</p>
<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>
<p>Jenkins 2.356 addresses this vulnerability. The tooltip of the build button in list views is now escaped.</p>
<p>No Jenkins LTS release is affected by SECURITY-2776 or SECURITY-2780, as these were not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34173">https://nvd.nist.gov/vuln/detail/CVE-2022-34173</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>
<li><a href="https://github.com/advisories/GHSA-6g4r-q7qg-6qx6">https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-9grj-j43m-mjqr</id>
        <link href="https://github.com/advisories/GHSA-9grj-j43m-mjqr"/>
        <updated>2022-12-05T23:37:16.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>
<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34174">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>
<li><a href="https://github.com/advisories/GHSA-9grj-j43m-mjqr">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9grj-j43m-mjqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-9grj-j43m-mjqr</id>
        <link href="https://github.com/advisories/GHSA-9grj-j43m-mjqr"/>
        <updated>2022-12-05T23:37:16.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>
<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34174">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>
<li><a href="https://github.com/advisories/GHSA-9grj-j43m-mjqr">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9grj-j43m-mjqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option]]></title>
        <id>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</id>
        <link href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv"/>
        <updated>2022-12-05T23:33:29.000Z</updated>
        <content type="html"><![CDATA[<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45046">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>
<li><a href="https://camel.apache.org/security/CVE-2022-45046.html">https://camel.apache.org/security/CVE-2022-45046.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/12/05/2">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-05T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option]]></title>
        <id>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</id>
        <link href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv"/>
        <updated>2022-12-05T23:33:29.000Z</updated>
        <content type="html"><![CDATA[<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45046">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>
<li><a href="https://camel.apache.org/security/CVE-2022-45046.html">https://camel.apache.org/security/CVE-2022-45046.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/12/05/2">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w66j-xc7r-m2jv">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w66j-xc7r-m2jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-05T15:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Unauthorized view fragment access in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-p3rc-946h-8cf5</id>
        <link href="https://github.com/advisories/GHSA-p3rc-946h-8cf5"/>
        <updated>2022-12-05T23:33:28.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins uses the Stapler web framework to render its UI views. These views are frequently composed of several view fragments, enabling plugins to extend existing views with more content.</p>
<p>Before <a href="https://www.jenkins.io/security/advisory/2019-07-17/#SECURITY-534">SECURITY-534</a> was fixed in Jenkins 2.186 and LTS 2.176.2, attackers could in some cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>
<p>In Jenkins 2.335 through 2.355 (both inclusive), the protection added for SECURITY-534 is disabled for some views. As a result, attackers could in very limited cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>
<p>As of publication, the Jenkins security team is unaware of any vulnerable view fragment across the Jenkins plugin ecosystem.</p>
<p>Jenkins 2.356 restores the protection for affected views.</p>
<p>No Jenkins LTS release is affected by this issue, as it was not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34175">https://nvd.nist.gov/vuln/detail/CVE-2022-34175</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777</a></li>
<li><a href="https://github.com/advisories/GHSA-p3rc-946h-8cf5">https://github.com/advisories/GHSA-p3rc-946h-8cf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p3rc-946h-8cf5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:pipeline-input-step] Arbitrary file write vulnerability in Jenkins Pipeline: Input Step Plugin]]></title>
        <id>https://github.com/advisories/GHSA-29q6-p2cg-4v23</id>
        <link href="https://github.com/advisories/GHSA-29q6-p2cg-4v23"/>
        <updated>2022-12-05T23:27:46.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Input Step Plugin 448.v37cea_9a_10a_70 and earlier allows Pipeline authors to specify <code>file</code> parameters for Pipeline <code>input</code> steps even though they are unsupported. Although the uploaded file is not copied to the workspace, Jenkins archives the file on the controller as part of build metadata using the parameter name without sanitization as a relative path inside a build-related directory.</p>
<p>This allows attackers able to configure Pipelines to create or replace arbitrary files on the Jenkins controller file system with attacker-specified content.</p>
<p>Pipeline: Input Step Plugin 449.v77f0e8b_845c4 prohibits use of <code>file</code> parameters for Pipeline <code>input</code> steps. Attempts to use them will fail Pipeline execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34177">https://nvd.nist.gov/vuln/detail/CVE-2022-34177</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2705">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2705</a></li>
<li><a href="https://github.com/jenkinsci/pipeline-input-step-plugin/commit/77f0e8b845c4ad429f6c717eab21cf4e7a69168e">https://github.com/jenkinsci/pipeline-input-step-plugin/commit/77f0e8b845c4ad429f6c717eab21cf4e7a69168e</a></li>
<li><a href="https://github.com/advisories/GHSA-29q6-p2cg-4v23">https://github.com/advisories/GHSA-29q6-p2cg-4v23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29q6-p2cg-4v23</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-24T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.terasoluna.gfw:terasoluna-gfw-common] TERASOLUNA Server Framework vulnerable to ClassLoader manipulation]]></title>
        <id>https://github.com/advisories/GHSA-q5j9-f95w-f4pr</id>
        <link href="https://github.com/advisories/GHSA-q5j9-f95w-f4pr"/>
        <updated>2022-12-05T23:23:08.000Z</updated>
        <content type="html"><![CDATA[<p>TERASOLUNA Global Framework 1.0.0 (Public review version) and TERASOLUNA Server Framework for Java (Rich) 2.0.0.2 to 2.0.5.1 are vulnerable to ClassLoader manipulation due to using the old version of Spring Framework which contains the vulnerability. The vulnerability is caused by an improper input validation issue in the binding mechanism of Spring MVC. By the application processing a specially crafted file, arbitrary code may be executed with the privileges of the application. </p>
<p>When using TERASOLUNA Global Framework 1.0.0 (Public review version), update to TERASOLUNA Server Framework for Java 5.7.1.SP1 (using Spring Framework 5.3.18). This vulnerability alone can be addressed by updating to TERASOLUNA Global Framework 1.0.1 (using Spring Framework 3.2.10) or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43484">https://nvd.nist.gov/vuln/detail/CVE-2022-43484</a></li>
<li><a href="https://jvn.jp/en/jp/JVN54728399/index.html">https://jvn.jp/en/jp/JVN54728399/index.html</a></li>
<li><a href="https://osdn.net/projects/terasoluna/wiki/cve-2022-43484">https://osdn.net/projects/terasoluna/wiki/cve-2022-43484</a></li>
<li><a href="http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html">http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html</a></li>
<li><a href="https://github.com/advisories/GHSA-q5j9-f95w-f4pr">https://github.com/advisories/GHSA-q5j9-f95w-f4pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q5j9-f95w-f4pr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-05T06:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[commons-net:commons-net] Apache Commons Net vulnerable to information leakage via malicious server]]></title>
        <id>https://github.com/advisories/GHSA-cgp8-4m63-fhh5</id>
        <link href="https://github.com/advisories/GHSA-cgp8-4m63-fhh5"/>
        <updated>2022-12-05T23:21:10.000Z</updated>
        <content type="html"><![CDATA[<p>Prior to Apache Commons Net 3.9.0, Net's FTP client trusts the host from PASV response by default. A malicious server can redirect the Commons Net code to use a different host, but the user has to connect to the malicious server in the first place. This may lead to leakage of information about services running on the private network of the client.
The default in version 3.9.0 is now false to ignore such hosts, as cURL does. See <a href="https://issues.apache.org/jira/browse/NET-711">https://issues.apache.org/jira/browse/NET-711</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37533">https://nvd.nist.gov/vuln/detail/CVE-2021-37533</a></li>
<li><a href="https://lists.apache.org/thread/o6yn9r9x6s94v97264hmgol1sf48mvx7">https://lists.apache.org/thread/o6yn9r9x6s94v97264hmgol1sf48mvx7</a></li>
<li><a href="https://github.com/apache/commons-net/commit/4fe1bae56e53f32756b1ca3296f3dd2c45e3e060">https://github.com/apache/commons-net/commit/4fe1bae56e53f32756b1ca3296f3dd2c45e3e060</a></li>
<li><a href="https://issues.apache.org/jira/browse/NET-711">https://issues.apache.org/jira/browse/NET-711</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/12/03/1">http://www.openwall.com/lists/oss-security/2022/12/03/1</a></li>
<li><a href="https://github.com/advisories/GHSA-cgp8-4m63-fhh5">https://github.com/advisories/GHSA-cgp8-4m63-fhh5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cgp8-4m63-fhh5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-03T15:30:26.000Z</published>
    </entry>
</feed>