<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-16T18:01:32.746Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:pipeline-input-step] CSRF protection for any URL can be bypassed in Jenkins Pipeline: Input Step Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g66m-fqxf-3w35</id>
        <link href="https://github.com/advisories/GHSA-g66m-fqxf-3w35"/>
        <updated>2022-12-16T17:10:18.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Input Step Plugin 451.vf1a_a_4f405289 and earlier does not restrict or sanitize the optionally specified ID of the <code>input</code> step. This ID is used for the URLs that process user interactions for the given <code>input</code> step (proceed or abort) and is not correctly encoded.</p>
<p>This allows attackers able to configure Pipelines to have Jenkins build URLs from <code>input</code> step IDs that would bypass the CSRF protection of any target URL in Jenkins when the <code>input</code> step is interacted with.</p>
<p>Pipeline: Input Step Plugin 456.vd8a_957db_5b_e9 limits the characters that can be used for the ID of <code>input</code> steps in Pipelines to alphanumeric characters and URL-safe punctuation. Pipelines with <code>input</code> steps having IDs with prohibited characters will fail with an error.</p>
<p>This includes Pipelines that have already been started but not finished before Jenkins is restarted to apply this update.</p>
<p><a href="https://plugins.jenkins.io/pipeline-model-definition/">Pipeline: Declarative Plugin</a> provides an <code>input</code> directive that is internally using the <code>input</code> step, and specifies a non-default ID if not user-defined. Pipeline: Declarative Plugin 2.2114.v2654ca_721309 and earlier may specify values incompatible with this new restriction on legal values: <code>input</code> directives in a <code>stage</code> use the stage name (which may include prohibited characters) and <code>input</code> directives in a <code>matrix</code> will use a value generated from the matrix axis values (which always includes prohibited characters). Administrators are advised to update Pipeline: Input Step Plugin and Pipeline: Declarative Plugin at the same time, ideally while no Pipelines are running.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43407">https://nvd.nist.gov/vuln/detail/CVE-2022-43407</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2880">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2880</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-g66m-fqxf-3w35">https://github.com/advisories/GHSA-g66m-fqxf-3w35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g66m-fqxf-3w35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:pipeline-groovy-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</id>
        <link href="https://github.com/advisories/GHSA-7qw2-h9gj-hcvh"/>
        <updated>2022-12-16T17:08:22.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43406">https://nvd.nist.gov/vuln/detail/CVE-2022-43406</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7qw2-h9gj-hcvh">https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps-global-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Groovy Libraries Plugin and Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</id>
        <link href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg"/>
        <updated>2022-12-16T16:35:56.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43405">https://nvd.nist.gov/vuln/detail/CVE-2022-43405</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg">https://github.com/advisories/GHSA-4hjj-9gp7-4frg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:pipeline-groovy-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Groovy Libraries Plugin and Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</id>
        <link href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg"/>
        <updated>2022-12-16T16:35:56.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43405">https://nvd.nist.gov/vuln/detail/CVE-2022-43405</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg">https://github.com/advisories/GHSA-4hjj-9gp7-4frg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps] Sandbox bypass vulnerabilities in Jenkins Script Security Plugin and in Pipeline: Groovy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-27rf-8mjp-r363</id>
        <link href="https://github.com/advisories/GHSA-27rf-8mjp-r363"/>
        <updated>2022-12-16T16:31:10.000Z</updated>
        <content type="html"><![CDATA[<p>Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin and Pipeline: Groovy Plugin:</p>
<ul>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier and in Pipeline: Groovy Plugin 2802.v5ea_628154b_c2 and earlier, various casts performed implicitly by the Groovy language runtime were not intercepted by the sandbox. This includes casts performed when returning values from methods, when assigning local variables, fields, properties, and when defining default arguments for closure, constructor, and method parameters (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, when casting an array-like value to an array type, per-element casts to the component type of the array are not intercepted by the sandbox (CVE-2022-43403).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, crafted constructor bodies and calls to sandbox-generated synthetic constructors can be used to construct any subclassable type (due to an incomplete fix for SECURITY-1754 in the <a href="https://www.jenkins.io/security/advisory/2020-03-09/#SECURITY-1754">2020-03-09 security advisory</a>) (CVE-2022-43404).</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>These vulnerabilities have been fixed:</p>
<ul>
<li>Script Security Plugin 1184.v85d16b_d851b_3 and Pipeline: Groovy Plugin 2803.v1a_f77ffcc773 intercept Groovy casts performed implicitly by the Groovy language runtime (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 intercepts per-element casts when casting array-like values to array types (CVE-2022-43403).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 rejects improper calls to sandbox-generated synthetic constructors (CVE-2022-43404).</li>
</ul>
<p>Both plugins, Script Security Plugin and Pipeline: Groovy Plugin must be updated simultaneously. While Script Security Plugin could be updated independently, doing so would cause errors in Pipeline: Groovy Plugin due to an incompatible API change.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43404">https://nvd.nist.gov/vuln/detail/CVE-2022-43404</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-27rf-8mjp-r363">https://github.com/advisories/GHSA-27rf-8mjp-r363</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27rf-8mjp-r363</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps] Sandbox bypass vulnerabilities in Jenkins Script Security Plugin and in Pipeline: Groovy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7vr5-72w7-q6jc</id>
        <link href="https://github.com/advisories/GHSA-7vr5-72w7-q6jc"/>
        <updated>2022-12-16T16:21:39.000Z</updated>
        <content type="html"><![CDATA[<p>Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin and Pipeline: Groovy Plugin:</p>
<ul>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier and in Pipeline: Groovy Plugin 2802.v5ea_628154b_c2 and earlier, various casts performed implicitly by the Groovy language runtime were not intercepted by the sandbox. This includes casts performed when returning values from methods, when assigning local variables, fields, properties, and when defining default arguments for closure, constructor, and method parameters (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, when casting an array-like value to an array type, per-element casts to the component type of the array are not intercepted by the sandbox (CVE-2022-43403).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, crafted constructor bodies and calls to sandbox-generated synthetic constructors can be used to construct any subclassable type (due to an incomplete fix for SECURITY-1754 in the <a href="https://www.jenkins.io/security/advisory/2020-03-09/#SECURITY-1754">2020-03-09 security advisory</a>) (CVE-2022-43404).</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.\n\nThese vulnerabilities have been fixed:</p>
<ul>
<li>Script Security Plugin 1184.v85d16b_d851b_3 and Pipeline: Groovy Plugin 2803.v1a_f77ffcc773 intercept Groovy casts performed implicitly by the Groovy language runtime (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 intercepts per-element casts when casting array-like values to array types (CVE-2022-43403).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 rejects improper calls to sandbox-generated synthetic constructors (CVE-2022-43404).</li>
</ul>
<p>Both plugins, Script Security Plugin and Pipeline: Groovy Plugin must be updated simultaneously. While Script Security Plugin could be updated independently, doing so would cause errors in Pipeline: Groovy Plugin due to an incompatible API change.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43401">https://nvd.nist.gov/vuln/detail/CVE-2022-43401</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7vr5-72w7-q6jc">https://github.com/advisories/GHSA-7vr5-72w7-q6jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vr5-72w7-q6jc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:nomad] Password stored in plain text by Jenkins Nomad Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</id>
        <link href="https://github.com/advisories/GHSA-5c2c-cvg6-ghjm"/>
        <updated>2022-12-16T15:47:12.000Z</updated>
        <content type="html"><![CDATA[<p>Nomad Plugin 0.7.4 and earlier stores the passwords to authenticate against the Docker registry unencrypted in the global <code>config.xml</code> file on the Jenkins controller as part of its worker templates configuration.</p>
<p>These passwords can be viewed by users with access to the Jenkins controller file system.</p>
<p>Nomad Plugin 0.7.5 stores the Docker passwords encrypted. This change is effective after Jenkins restarts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21681">https://nvd.nist.gov/vuln/detail/CVE-2021-21681</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-08-31/#SECURITY-2396">https://www.jenkins.io/security/advisory/2021-08-31/#SECURITY-2396</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/08/31/1">http://www.openwall.com/lists/oss-security/2021/08/31/1</a></li>
<li><a href="https://github.com/advisories/GHSA-5c2c-cvg6-ghjm">https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T19:12:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper permission checks allow canceling queue items and aborting builds in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q4wp-8c99-69pw</id>
        <link href="https://github.com/advisories/GHSA-q4wp-8c99-69pw"/>
        <updated>2022-12-16T15:22:17.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier allows users to cancel queue items and abort builds of jobs for which they have Item/Cancel permission even when they do not have Item/Read permission.</p>
<p>Jenkins 2.300, LTS 2.289.2 requires that users have Item/Read permission for applicable types in addition to Item/Cancel permission.</p>
<p>As a workaround on earlier versions of Jenkins, do not grant Item/Cancel permission to users who do not have Item/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21670">https://nvd.nist.gov/vuln/detail/CVE-2021-21670</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-q4wp-8c99-69pw">https://github.com/advisories/GHSA-q4wp-8c99-69pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4wp-8c99-69pw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper permission checks allow canceling queue items and aborting builds in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q4wp-8c99-69pw</id>
        <link href="https://github.com/advisories/GHSA-q4wp-8c99-69pw"/>
        <updated>2022-12-16T15:22:17.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier allows users to cancel queue items and abort builds of jobs for which they have Item/Cancel permission even when they do not have Item/Read permission.</p>
<p>Jenkins 2.300, LTS 2.289.2 requires that users have Item/Read permission for applicable types in addition to Item/Cancel permission.</p>
<p>As a workaround on earlier versions of Jenkins, do not grant Item/Cancel permission to users who do not have Item/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21670">https://nvd.nist.gov/vuln/detail/CVE-2021-21670</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-q4wp-8c99-69pw">https://github.com/advisories/GHSA-q4wp-8c99-69pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4wp-8c99-69pw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cas-plugin] Open redirect vulnerability in Jenkins CAS Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2vvr-5757-qp87</id>
        <link href="https://github.com/advisories/GHSA-2vvr-5757-qp87"/>
        <updated>2022-12-16T15:19:48.000Z</updated>
        <content type="html"><![CDATA[<p>CAS Plugin 1.6.0 and earlier improperly determines that a redirect URL after login is legitimately pointing to Jenkins.</p>
<p>This allows attackers to perform phishing attacks by having users go to a Jenkins URL that will forward them to a different site after successful authentication.</p>
<p>CAS Plugin 1.6.1 only redirects to relative (Jenkins) URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21673">https://nvd.nist.gov/vuln/detail/CVE-2021-21673</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2387">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2387</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-2vvr-5757-qp87">https://github.com/advisories/GHSA-2vvr-5757-qp87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2vvr-5757-qp87</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:requests] CSRF vulnerabilities in Jenkins requests-plugin Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5frh-wx6v-8m2r</id>
        <link href="https://github.com/advisories/GHSA-5frh-wx6v-8m2r"/>
        <updated>2022-12-16T15:17:26.000Z</updated>
        <content type="html"><![CDATA[<p>requests-plugin Plugin 2.2.12 and earlier does not require POST requests to request and apply changes, resulting in cross-site request forgery (CSRF) vulnerabilities.</p>
<p>These vulnerabilities allow attackers to create requests and/or have administrators apply pending requests, like renaming or deleting jobs, deleting builds, etc.</p>
<p>requests-plugin Plugin 2.2.13 requires POST requests for the affected HTTP endpoints. This was partially fixed in requests-plugin Plugin 2.2.8 to require POST requests for some of the affected HTTP endpoints, but the endpoint allowing administrators to apply pending requests remained unprotected until 2.2.13.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21675">https://nvd.nist.gov/vuln/detail/CVE-2021-21675</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2136%20(1)">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2136%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-5frh-wx6v-8m2r">https://github.com/advisories/GHSA-5frh-wx6v-8m2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5frh-wx6v-8m2r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:requests] Missing permission check in Jenkins requests-plugin Plugin allows sending emails]]></title>
        <id>https://github.com/advisories/GHSA-w3gm-vv58-wr55</id>
        <link href="https://github.com/advisories/GHSA-w3gm-vv58-wr55"/>
        <updated>2022-12-16T15:13:31.000Z</updated>
        <content type="html"><![CDATA[<p>requests-plugin Plugin 2.2.7 and earlier does not perform a permission check in an HTTP endpoint.</p>
<p>This allows attackers with Overall/Read permission to send test emails to an attacker-specified email address.</p>
<p>requests-plugin Plugin 2.2.8 requires Overall/Administer permission to send test emails.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21676">https://nvd.nist.gov/vuln/detail/CVE-2021-21676</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2136%20(2)">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2136%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-w3gm-vv58-wr55">https://github.com/advisories/GHSA-w3gm-vv58-wr55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3gm-vv58-wr55</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.loader:loaderio-jenkins-plugin] Missing permission check in Jenkins loader.io Plugin allows enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-wg2f-9rf7-48gm</id>
        <link href="https://github.com/advisories/GHSA-wg2f-9rf7-48gm"/>
        <updated>2022-12-16T14:39:49.000Z</updated>
        <content type="html"><![CDATA[<p>loader.io Plugin 1.0.1 and earlier does not perform a permission check in an HTTP endpoint.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45390">https://nvd.nist.gov/vuln/detail/CVE-2022-45390</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2857">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2857</a></li>
<li><a href="https://github.com/advisories/GHSA-wg2f-9rf7-48gm">https://github.com/advisories/GHSA-wg2f-9rf7-48gm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wg2f-9rf7-48gm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-16T12:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:delete-log-plugin] Missing permission check in Jenkins Delete log Plugin]]></title>
        <id>https://github.com/advisories/GHSA-j874-47xx-9xfg</id>
        <link href="https://github.com/advisories/GHSA-j874-47xx-9xfg"/>
        <updated>2022-12-16T14:35:51.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins Delete log Plugin 1.0 and earlier allows attackers with Item/Read permission to delete build logs. As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45394">https://nvd.nist.gov/vuln/detail/CVE-2022-45394</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2920">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2920</a></li>
<li><a href="https://github.com/advisories/GHSA-j874-47xx-9xfg">https://github.com/advisories/GHSA-j874-47xx-9xfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j874-47xx-9xfg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-16T12:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.bookkeeper:bookkeeper-common] Apache Bookkeeper vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-gxq5-79m2-gvvq</id>
        <link href="https://github.com/advisories/GHSA-gxq5-79m2-gvvq"/>
        <updated>2022-12-15T23:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Bookkeeper Java Client (before 4.14.6 and also 4.15.0) does not close the connection to the bookkeeper server when TLS hostname verification fails. This leaves the bookkeeper client vulnerable to a man in the middle attack. The problem affects BookKeeper client prior to versions 4.14.6 and 4.15.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32531">https://nvd.nist.gov/vuln/detail/CVE-2022-32531</a></li>
<li><a href="https://lists.apache.org/thread/xyk2lfc7lzof8mksmwyympbqxts1b5s9">https://lists.apache.org/thread/xyk2lfc7lzof8mksmwyympbqxts1b5s9</a></li>
<li><a href="https://github.com/advisories/GHSA-gxq5-79m2-gvvq">https://github.com/advisories/GHSA-gxq5-79m2-gvvq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gxq5-79m2-gvvq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-15T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.bookkeeper:bookkeeper-common] Apache Bookkeeper vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-gxq5-79m2-gvvq</id>
        <link href="https://github.com/advisories/GHSA-gxq5-79m2-gvvq"/>
        <updated>2022-12-15T23:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Bookkeeper Java Client (before 4.14.6 and also 4.15.0) does not close the connection to the bookkeeper server when TLS hostname verification fails. This leaves the bookkeeper client vulnerable to a man in the middle attack. The problem affects BookKeeper client prior to versions 4.14.6 and 4.15.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32531">https://nvd.nist.gov/vuln/detail/CVE-2022-32531</a></li>
<li><a href="https://lists.apache.org/thread/xyk2lfc7lzof8mksmwyympbqxts1b5s9">https://lists.apache.org/thread/xyk2lfc7lzof8mksmwyympbqxts1b5s9</a></li>
<li><a href="https://github.com/advisories/GHSA-gxq5-79m2-gvvq">https://github.com/advisories/GHSA-gxq5-79m2-gvvq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gxq5-79m2-gvvq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-15T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.carbon.registry:carbon-registry] WSO2 carbon-registry vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-gp5f-gqgq-7254</id>
        <link href="https://github.com/advisories/GHSA-gp5f-gqgq-7254"/>
        <updated>2022-12-15T23:28:38.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in WSO2 carbon-registry before 4.8.7. This affects an unknown part of the component Request Parameter Handler. The manipulation of the argument parentPath/path/username/path/profile_menu leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 4.8.7 or later will address this issue. The name of the patch is 9f967abfde9317bee2cda469dbc09b57d539f2cc. It is recommended to upgrade the affected component. The identifier VDB-215901 was assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4521">https://nvd.nist.gov/vuln/detail/CVE-2022-4521</a></li>
<li><a href="https://github.com/wso2/carbon-registry/pull/399">https://github.com/wso2/carbon-registry/pull/399</a></li>
<li><a href="https://github.com/wso2/carbon-registry/commit/9f967abfde9317bee2cda469dbc09b57d539f2cc">https://github.com/wso2/carbon-registry/commit/9f967abfde9317bee2cda469dbc09b57d539f2cc</a></li>
<li><a href="https://github.com/wso2/carbon-registry/releases/tag/v4.8.12">https://github.com/wso2/carbon-registry/releases/tag/v4.8.12</a></li>
<li><a href="https://vuldb.com/?id.215901">https://vuldb.com/?id.215901</a></li>
<li><a href="https://github.com/advisories/GHSA-gp5f-gqgq-7254">https://github.com/advisories/GHSA-gp5f-gqgq-7254</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gp5f-gqgq-7254</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-15T21:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webflux] Remote Code Execution in Spring Framework]]></title>
        <id>https://github.com/advisories/GHSA-36p3-wjmg-h94x</id>
        <link href="https://github.com/advisories/GHSA-36p3-wjmg-h94x"/>
        <updated>2022-12-15T23:22:43.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>
<h2 id="impact">Impact</h2>
<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>
<p>These are the prerequisites for the exploit:</p>
<ul>
<li>JDK 9 or higher</li>
<li>Apache Tomcat as the Servlet container</li>
<li>Packaged as WAR</li>
<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>
</ul>
<h2 id="patches">Patches</h2>
<ul>
<li>Spring Framework <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">5.3.18</a> and <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">5.2.20</a></li>
<li>Spring Boot <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">2.6.6</a> and <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">2.5.12</a></li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>
<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22965">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>
<li><a href="https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22965">https://tanzu.vmware.com/security/cve-2022-22965</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html">http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html">http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-36p3-wjmg-h94x">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36p3-wjmg-h94x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-03-31T18:30:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webmvc] Remote Code Execution in Spring Framework]]></title>
        <id>https://github.com/advisories/GHSA-36p3-wjmg-h94x</id>
        <link href="https://github.com/advisories/GHSA-36p3-wjmg-h94x"/>
        <updated>2022-12-15T23:22:43.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>
<h2 id="impact">Impact</h2>
<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>
<p>These are the prerequisites for the exploit:</p>
<ul>
<li>JDK 9 or higher</li>
<li>Apache Tomcat as the Servlet container</li>
<li>Packaged as WAR</li>
<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>
</ul>
<h2 id="patches">Patches</h2>
<ul>
<li>Spring Framework <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">5.3.18</a> and <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">5.2.20</a></li>
<li>Spring Boot <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">2.6.6</a> and <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">2.5.12</a></li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>
<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22965">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>
<li><a href="https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22965">https://tanzu.vmware.com/security/cve-2022-22965</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html">http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html">http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-36p3-wjmg-h94x">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36p3-wjmg-h94x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-03-31T18:30:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-beans] Remote Code Execution in Spring Framework]]></title>
        <id>https://github.com/advisories/GHSA-36p3-wjmg-h94x</id>
        <link href="https://github.com/advisories/GHSA-36p3-wjmg-h94x"/>
        <updated>2022-12-15T23:22:43.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>
<h2 id="impact">Impact</h2>
<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>
<p>These are the prerequisites for the exploit:</p>
<ul>
<li>JDK 9 or higher</li>
<li>Apache Tomcat as the Servlet container</li>
<li>Packaged as WAR</li>
<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>
</ul>
<h2 id="patches">Patches</h2>
<ul>
<li>Spring Framework <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">5.3.18</a> and <a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">5.2.20</a></li>
<li>Spring Boot <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">2.6.6</a> and <a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">2.5.12</a></li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>
<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22965">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>
<li><a href="https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-22965">https://tanzu.vmware.com/security/cve-2022-22965</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-254054.pdf</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0005</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-java-spring-rce-Zx9GUc67</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html">http://packetstormsecurity.com/files/166713/Spring4Shell-Code-Execution.html</a></li>
<li><a href="http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html">http://packetstormsecurity.com/files/167011/Spring4Shell-Spring-Framework-Class-Property-Remote-Code-Execution.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-36p3-wjmg-h94x">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36p3-wjmg-h94x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-03-31T18:30:50.000Z</published>
    </entry>
</feed>