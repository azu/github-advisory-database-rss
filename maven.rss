<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-12-13T05:01:14.953Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-site Scripting in JFinalCMS]]></title>
        <id>https://github.com/advisories/GHSA-f2w8-4m48-5qrq</id>
        <link href="https://github.com/advisories/GHSA-f2w8-4m48-5qrq"/>
        <updated>2023-12-12T20:55:45.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a cross-site scripting (XSS) vulnerability in the column management department.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49485">https://nvd.nist.gov/vuln/detail/CVE-2023-49485</a></li>
<li><a href="https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20storage%20type%20XSS%20in%20the%20column%20management%20department.md">https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20storage%20type%20XSS%20in%20the%20column%20management%20department.md</a></li>
<li><a href="https://github.com/advisories/GHSA-f2w8-4m48-5qrq">https://github.com/advisories/GHSA-f2w8-4m48-5qrq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f2w8-4m48-5qrq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-08T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-site Scripting in JFinalCMS]]></title>
        <id>https://github.com/advisories/GHSA-hjfp-2j7q-xmx4</id>
        <link href="https://github.com/advisories/GHSA-hjfp-2j7q-xmx4"/>
        <updated>2023-12-12T20:54:50.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a cross-site scripting (XSS) vulnerability in the model management department.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49486">https://nvd.nist.gov/vuln/detail/CVE-2023-49486</a></li>
<li><a href="https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20stored%20XSS%20in%20the%20model%20management%20department.md">https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20stored%20XSS%20in%20the%20model%20management%20department.md</a></li>
<li><a href="https://github.com/advisories/GHSA-hjfp-2j7q-xmx4">https://github.com/advisories/GHSA-hjfp-2j7q-xmx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjfp-2j7q-xmx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-08T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-site Scripting in JFinalCMS]]></title>
        <id>https://github.com/advisories/GHSA-m42v-qv3c-h6j7</id>
        <link href="https://github.com/advisories/GHSA-m42v-qv3c-h6j7"/>
        <updated>2023-12-12T20:53:58.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a cross-site scripting (XSS) vulnerability in the navigation management department.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49487">https://nvd.nist.gov/vuln/detail/CVE-2023-49487</a></li>
<li><a href="https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20stored%20XSS%20in%20the%20navigation%20management%20office.md">https://github.com/Rabb1ter/cms/blob/main/There%20is%20a%20stored%20XSS%20in%20the%20navigation%20management%20office.md</a></li>
<li><a href="https://github.com/advisories/GHSA-m42v-qv3c-h6j7">https://github.com/advisories/GHSA-m42v-qv3c-h6j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m42v-qv3c-h6j7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-08T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.validation] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.utilities] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.r5] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.r4b] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.convertors] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ca.uhn.hapi.fhir:org.hl7.fhir.core] HL7 FHIR Partial Path Zip Slip due to bypass of CVE-2023-24057]]></title>
        <id>https://github.com/advisories/GHSA-9654-pr4f-gh6m</id>
        <link href="https://github.com/advisories/GHSA-9654-pr4f-gh6m"/>
        <updated>2023-12-12T19:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Zip Slip protections implemented in CVE-2023-24057 (GHSA-jqh6-9574-5x22) can be bypassed due a partial path traversal vulnerability.</p>
<p>This issue allows a malicious actor to potentially break out of the <code>TerminologyCacheManager</code> cache directory. The impact is limited to sibling directories.</p>
<p>To demonstrate the vulnerability, consider <code>userControlled.getCanonicalPath().startsWith("/usr/out")</code> will allow an attacker to access a directory with a name like <code>/usr/outnot</code>. </p>
<h3 id="why">Why?</h3>
<p>To demonstrate this vulnerability, consider <code>"/usr/outnot".startsWith("/usr/out")</code>.
The check is bypassed although <code>/outnot</code> is not under the <code>/out</code> directory.
It's important to understand that the terminating slash may be removed when using various <code>String</code> representations of the <code>File</code> object.
For example, on Linux, <code>println(new File("/var"))</code> will print <code>/var</code>, but <code>println(new File("/var", "/")</code> will print <code>/var/</code>;
however, <code>println(new File("/var", "/").getCanonicalPath())</code> will print <code>/var</code>.</p>
<h3 id="the-fix">The Fix</h3>
<p>Comparing paths with the <code>java.nio.files.Path#startsWith</code> will adequately protect againts this vulnerability.</p>
<p>For example: <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY)</code> or <code>file.getCanonicalFile().toPath().startsWith(BASE_DIRECTORY_FILE.getCanonicalFile().toPath())</code></p>
<h3 id="other-examples">Other Examples</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3">CVE-2022-31159</a> - aws/aws-sdk-java</li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/">CVE-2022-23457</a> - ESAPI/esapi-java-legacy</li>
</ul>
<h3 id="vulnerability">Vulnerability</h3>
<p><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></p>
<p>While <code>getAbsolutePath</code> will return a normalized path, because the string <code>path</code> is not slash terminated, the guard can be bypassed to write the contents of the Zip file to a sibling directory of the cache directory.</p>
<h3 id="patches">Patches</h3>
<p>All org.hl7.fhir.core libraries should be updated to 5.6.106.</p>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Unknown</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105">https://github.com/hapifhir/org.hl7.fhir.core/blob/b0daf666725fa14476d147522155af1e81922aac/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java#L99-L105</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106">https://github.com/hapifhir/org.hl7.fhir.core/releases/tag/5.6.106</a></li>
<li><a href="https://github.com/hapifhir/org.hl7.fhir.core/pull/1162">https://github.com/hapifhir/org.hl7.fhir.core/pull/1162</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28465">https://nvd.nist.gov/vuln/detail/CVE-2023-28465</a></li>
<li><a href="https://github.com/advisories/GHSA-9654-pr4f-gh6m">https://github.com/advisories/GHSA-9654-pr4f-gh6m</a></li>
<li><a href="https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health">https://www.smilecdr.com/our-blog/statement-on-cve-2023-24057-smile-digital-health</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9654-pr4f-gh6m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-10T22:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opencastproject:opencast-common] Opencast publishes global system account credentials]]></title>
        <id>https://github.com/advisories/GHSA-hcxx-mp6g-6gr9</id>
        <link href="https://github.com/advisories/GHSA-hcxx-mp6g-6gr9"/>
        <updated>2023-12-12T19:41:43.000Z</updated>
        <content type="html"><![CDATA[<p>The issue was mostly mitigated before, drastically reducing the risk. See references below for more information.</p>
<h3 id="impact">Impact</h3>
<p>Opencast before version 10.6 will try to authenticate against any external services listed in a media package when it is trying to access the files, sending the global system user's credentials, regardless of the target being part of the Opencast cluster or not.</p>
<p>Previous mitigations already prevented clear text authentications for such requests (e.g. HTTP Basic authentication), but with enough malicious intent, even hashed credentials can be broken.</p>
<h3 id="patches">Patches</h3>
<p>Opencast 10.6 will now send authentication requests only against servers which are part of the Opencast cluster, preventing external services from getting any form of authentication attempt in the first place.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/opencast/opencast/commit/776d5588f39c61eb04c03bb955416c4f77629d51">Patch fixing the issue</a></li>
<li><a href="https://groups.google.com/a/opencast.org/g/security-notices/c/XRZzRiqp-NE">Original security notice</a></li>
<li><a href="https://github.com/opencast/opencast/commit/fe8c3d3a60dc5869b468957270dbad5f8c30ead6">Original security mitigation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/opencast/opencast/issues">our issue tracker</a></li>
<li>Email us at <a href="mailto:security@opencast.org">security@opencast.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/opencast/opencast/security/advisories/GHSA-hcxx-mp6g-6gr9">https://github.com/opencast/opencast/security/advisories/GHSA-hcxx-mp6g-6gr9</a></li>
<li><a href="https://github.com/opencast/opencast/commit/776d5588f39c61eb04c03bb955416c4f77629d51">https://github.com/opencast/opencast/commit/776d5588f39c61eb04c03bb955416c4f77629d51</a></li>
<li><a href="https://docs.opencast.org/r/10.x/admin/#changelog/#opencast-106">https://docs.opencast.org/r/10.x/admin/#changelog/#opencast-106</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16153">https://nvd.nist.gov/vuln/detail/CVE-2018-16153</a></li>
<li><a href="https://www.apereo.org/projects/opencast/news">https://www.apereo.org/projects/opencast/news</a></li>
<li><a href="https://github.com/advisories/GHSA-hcxx-mp6g-6gr9">https://github.com/advisories/GHSA-hcxx-mp6g-6gr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcxx-mp6g-6gr9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-12-14T21:43:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via admin/nav/delete]]></title>
        <id>https://github.com/advisories/GHSA-pv3g-vc3q-8c9g</id>
        <link href="https://github.com/advisories/GHSA-pv3g-vc3q-8c9g"/>
        <updated>2023-12-12T00:57:31.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via admin/nav/delete.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49448">https://nvd.nist.gov/vuln/detail/CVE-2023-49448</a></li>
<li><a href="https://github.com/ysuzhangbin/cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20navigation%20management.md">https://github.com/ysuzhangbin/cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20navigation%20management.md</a></li>
<li><a href="https://github.com/advisories/GHSA-pv3g-vc3q-8c9g">https://github.com/advisories/GHSA-pv3g-vc3q-8c9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pv3g-vc3q-8c9g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/nav/update]]></title>
        <id>https://github.com/advisories/GHSA-32j2-c7mx-v4jj</id>
        <link href="https://github.com/advisories/GHSA-32j2-c7mx-v4jj"/>
        <updated>2023-12-12T00:57:13.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/nav/update.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49447">https://nvd.nist.gov/vuln/detail/CVE-2023-49447</a></li>
<li><a href="https://github.com/ysuzhangbin/cms/blob/main/CSRF%20exists%20at%20the%20navigation%20management%20modification%20location.md">https://github.com/ysuzhangbin/cms/blob/main/CSRF%20exists%20at%20the%20navigation%20management%20modification%20location.md</a></li>
<li><a href="https://github.com/advisories/GHSA-32j2-c7mx-v4jj">https://github.com/advisories/GHSA-32j2-c7mx-v4jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32j2-c7mx-v4jj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/nav/save]]></title>
        <id>https://github.com/advisories/GHSA-hv4c-v8j8-54cw</id>
        <link href="https://github.com/advisories/GHSA-hv4c-v8j8-54cw"/>
        <updated>2023-12-12T00:56:46.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/nav/save.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49446">https://nvd.nist.gov/vuln/detail/CVE-2023-49446</a></li>
<li><a href="https://github.com/ysuzhangbin/cms/blob/main/There%20is%20a%20CSRF%20in%20the%20newly%20added%20navigation%20management%20area.md">https://github.com/ysuzhangbin/cms/blob/main/There%20is%20a%20CSRF%20in%20the%20newly%20added%20navigation%20management%20area.md</a></li>
<li><a href="https://github.com/advisories/GHSA-hv4c-v8j8-54cw">https://github.com/advisories/GHSA-hv4c-v8j8-54cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hv4c-v8j8-54cw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/category/delete]]></title>
        <id>https://github.com/advisories/GHSA-mwvq-gc5w-m78f</id>
        <link href="https://github.com/advisories/GHSA-mwvq-gc5w-m78f"/>
        <updated>2023-12-12T00:56:25.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/category/delete.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49398">https://nvd.nist.gov/vuln/detail/CVE-2023-49398</a></li>
<li><a href="https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20column%20management.md">https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20column%20management.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mwvq-gc5w-m78f">https://github.com/advisories/GHSA-mwvq-gc5w-m78f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mwvq-gc5w-m78f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/category/updateStatus]]></title>
        <id>https://github.com/advisories/GHSA-5f56-h6fg-rcrh</id>
        <link href="https://github.com/advisories/GHSA-5f56-h6fg-rcrh"/>
        <updated>2023-12-12T00:56:05.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/category/updateStatus.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49397">https://nvd.nist.gov/vuln/detail/CVE-2023-49397</a></li>
<li><a href="https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20change%20of%20column%20management%20status.md">https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20change%20of%20column%20management%20status.md</a></li>
<li><a href="https://github.com/advisories/GHSA-5f56-h6fg-rcrh">https://github.com/advisories/GHSA-5f56-h6fg-rcrh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5f56-h6fg-rcrh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/category/save]]></title>
        <id>https://github.com/advisories/GHSA-882g-gjqp-9vjp</id>
        <link href="https://github.com/advisories/GHSA-882g-gjqp-9vjp"/>
        <updated>2023-12-12T00:55:47.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/category/save.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49396">https://nvd.nist.gov/vuln/detail/CVE-2023-49396</a></li>
<li><a href="https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20newly%20added%20section%20of%20column%20management.md">https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20at%20the%20newly%20added%20section%20of%20column%20management.md</a></li>
<li><a href="https://github.com/advisories/GHSA-882g-gjqp-9vjp">https://github.com/advisories/GHSA-882g-gjqp-9vjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-882g-gjqp-9vjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/div/delete]]></title>
        <id>https://github.com/advisories/GHSA-6v55-h6m5-2352</id>
        <link href="https://github.com/advisories/GHSA-6v55-h6m5-2352"/>
        <updated>2023-12-12T00:55:24.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/div/delete.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49382">https://nvd.nist.gov/vuln/detail/CVE-2023-49382</a></li>
<li><a href="https://github.com/cui2shark/cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20the%20custom%20table.md">https://github.com/cui2shark/cms/blob/main/CSRF%20exists%20at%20the%20deletion%20point%20of%20the%20custom%20table.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6v55-h6m5-2352">https://github.com/advisories/GHSA-6v55-h6m5-2352</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6v55-h6m5-2352</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/tag/save]]></title>
        <id>https://github.com/advisories/GHSA-rq2q-hc6h-2px2</id>
        <link href="https://github.com/advisories/GHSA-rq2q-hc6h-2px2"/>
        <updated>2023-12-12T00:55:02.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/tag/save.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49383">https://nvd.nist.gov/vuln/detail/CVE-2023-49383</a></li>
<li><a href="https://github.com/cui2shark/cms/blob/main/Added%20CSRF%20in%20Label%20Management.md">https://github.com/cui2shark/cms/blob/main/Added%20CSRF%20in%20Label%20Management.md</a></li>
<li><a href="https://github.com/advisories/GHSA-rq2q-hc6h-2px2">https://github.com/advisories/GHSA-rq2q-hc6h-2px2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rq2q-hc6h-2px2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/category/update]]></title>
        <id>https://github.com/advisories/GHSA-8hch-q86g-j38w</id>
        <link href="https://github.com/advisories/GHSA-8hch-q86g-j38w"/>
        <updated>2023-12-12T00:54:42.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/category/update.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49395">https://nvd.nist.gov/vuln/detail/CVE-2023-49395</a></li>
<li><a href="https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20in%20the%20column%20management%20modification%20section.md">https://github.com/nightcloudos/new_cms/blob/main/CSRF%20exists%20in%20the%20column%20management%20modification%20section.md</a></li>
<li><a href="https://github.com/advisories/GHSA-8hch-q86g-j38w">https://github.com/advisories/GHSA-8hch-q86g-j38w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8hch-q86g-j38w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.jfinal:jfinal] Cross-Site Request Forgery in JFinalCMS via /admin/div/update]]></title>
        <id>https://github.com/advisories/GHSA-r222-mcff-27ff</id>
        <link href="https://github.com/advisories/GHSA-r222-mcff-27ff"/>
        <updated>2023-12-12T00:54:23.000Z</updated>
        <content type="html"><![CDATA[<p>JFinalCMS v5.0.0 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/div/update.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49381">https://nvd.nist.gov/vuln/detail/CVE-2023-49381</a></li>
<li><a href="https://github.com/cui2shark/cms/blob/main/CSRF%20exists%20at%20the%20modification%20point%20of%20the%20custom%20table.md">https://github.com/cui2shark/cms/blob/main/CSRF%20exists%20at%20the%20modification%20point%20of%20the%20custom%20table.md</a></li>
<li><a href="https://github.com/advisories/GHSA-r222-mcff-27ff">https://github.com/advisories/GHSA-r222-mcff-27ff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r222-mcff-27ff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T15:30:38.000Z</published>
    </entry>
</feed>