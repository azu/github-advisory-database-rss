<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-09-16T18:01:23.416Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m4mm-pg93-fv78</id>
        <link href="https://github.com/advisories/GHSA-m4mm-pg93-fv78"/>
        <updated>2023-09-15T13:37:04.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in undertow. This issue makes achieving a denial of service possible due to an unexpected handshake status updated in SslConduit, where the loop never terminates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1108">https://nvd.nist.gov/vuln/detail/CVE-2023-1108</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1184">https://access.redhat.com/errata/RHSA-2023:1184</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1185">https://access.redhat.com/errata/RHSA-2023:1185</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1512">https://access.redhat.com/errata/RHSA-2023:1512</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1513">https://access.redhat.com/errata/RHSA-2023:1513</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1514">https://access.redhat.com/errata/RHSA-2023:1514</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1516">https://access.redhat.com/errata/RHSA-2023:1516</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3883">https://access.redhat.com/errata/RHSA-2023:3883</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3884">https://access.redhat.com/errata/RHSA-2023:3884</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3885">https://access.redhat.com/errata/RHSA-2023:3885</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3888">https://access.redhat.com/errata/RHSA-2023:3888</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3892">https://access.redhat.com/errata/RHSA-2023:3892</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3954">https://access.redhat.com/errata/RHSA-2023:3954</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:4612">https://access.redhat.com/errata/RHSA-2023:4612</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1108">https://access.redhat.com/security/cve/CVE-2023-1108</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2174246">https://bugzilla.redhat.com/show_bug.cgi?id=2174246</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/1b763064a41a30583b5df9a118898513007a70be">https://github.com/undertow-io/undertow/commit/1b763064a41a30583b5df9a118898513007a70be</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/ccc053b55f5de9872bc1a4999fd6aa85fc5e146d">https://github.com/undertow-io/undertow/commit/ccc053b55f5de9872bc1a4999fd6aa85fc5e146d</a></li>
<li><a href="https://github.com/advisories/GHSA-m4mm-pg93-fv78">https://github.com/advisories/GHSA-m4mm-pg93-fv78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4mm-pg93-fv78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-14T15:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.commons:commons-compress] Apache Commons Compress denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cgwf-w82q-5jrr</id>
        <link href="https://github.com/advisories/GHSA-cgwf-w82q-5jrr"/>
        <updated>2023-09-14T19:35:27.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation, Uncontrolled Resource Consumption vulnerability in Apache Commons Compress in TAR parsing.This issue affects Apache Commons Compress:&nbsp;from 1.22 before 1.24.0.</p>
<p>Users are recommended to upgrade to version 1.24.0, which fixes the issue.</p>
<p>A third party can create a malformed TAR file by manipulating file modification times headers, which when parsed with Apache Commons Compress, will cause a denial of service issue via CPU consumption.</p>
<p>In version 1.22 of Apache Commons Compress, support was added for file modification times with higher precision (issue # COMPRESS-612 <a href="https://issues.apache.org/jira/browse/COMPRESS-612">1</a>). The format for the PAX extended headers carrying this data consists of two numbers separated by a period <a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html#tag_20_92_13_05">2</a>, indicating seconds and subsecond precision (for example “1647221103.5998539”). The impacted fields are “atime”, “ctime”, “mtime” and “LIBARCHIVE.creationtime”. No input validation is performed prior to the parsing of header values.</p>
<p>Parsing of these numbers uses the BigDecimal <a href="https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html">3</a> class from the JDK which has a publicly known algorithmic complexity issue when doing operations on large numbers, causing denial of service (see issue # JDK-6560193 <a href="https://bugs.openjdk.org/browse/JDK-6560193">4</a>). A third party can manipulate file time headers in a TAR file by placing a number with a very long fraction (300,000 digits) or a number with exponent notation (such as “9e9999999”) within a file modification time header, and the parsing of files with these headers will take hours instead of seconds, leading to a denial of service via exhaustion of CPU resources. This issue is similar to CVE-2012-2098 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2098">5</a>.</p>
<p>Only applications using CompressorStreamFactory class (with auto-detection of file types), TarArchiveInputStream and TarFile classes to parse TAR files are impacted. Since this code was introduced in v1.22, only that version and later versions are impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42503">https://nvd.nist.gov/vuln/detail/CVE-2023-42503</a></li>
<li><a href="https://lists.apache.org/thread/5xwcyr600mn074vgxq92tjssrchmc93c">https://lists.apache.org/thread/5xwcyr600mn074vgxq92tjssrchmc93c</a></li>
<li><a href="https://github.com/apache/commons-compress/commit/aae38bfb820159ae7a0b792e779571f6a46b3889">https://github.com/apache/commons-compress/commit/aae38bfb820159ae7a0b792e779571f6a46b3889</a></li>
<li><a href="https://github.com/advisories/GHSA-cgwf-w82q-5jrr">https://github.com/advisories/GHSA-cgwf-w82q-5jrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cgwf-w82q-5jrr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T09:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.commons:commons-compress] Uncontrolled Resource Consumption in Apache Commons Compress]]></title>
        <id>https://github.com/advisories/GHSA-6fxm-66hq-fc96</id>
        <link href="https://github.com/advisories/GHSA-6fxm-66hq-fc96"/>
        <updated>2023-09-14T16:29:21.000Z</updated>
        <content type="html"><![CDATA[<p>Algorithmic complexity vulnerability in the sorting algorithms in bzip2 compressing stream (BZip2CompressorOutputStream) in Apache Commons Compress before 1.4.1 allows remote attackers to cause a denial of service (CPU consumption) via a file with many repeating inputs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2098">https://nvd.nist.gov/vuln/detail/CVE-2012-2098</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/75857">https://exchange.xforce.ibmcloud.com/vulnerabilities/75857</a></li>
<li><a href="https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E">https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="http://ant.apache.org/security.html">http://ant.apache.org/security.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081697.html">http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081697.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081746.html">http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081746.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105049.html">http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105049.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105060.html">http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105060.html</a></li>
<li><a href="http://packetstormsecurity.org/files/113014/Apache-Commons-Compress-Apache-Ant-Denial-Of-Service.html">http://packetstormsecurity.org/files/113014/Apache-Commons-Compress-Apache-Ant-Denial-Of-Service.html</a></li>
<li><a href="http://www-01.ibm.com/support/docview.wss?uid=swg21644047">http://www-01.ibm.com/support/docview.wss?uid=swg21644047</a></li>
<li><a href="https://web.archive.org/web/20130525085523/http://www.securityfocus.com/bid/53676">https://web.archive.org/web/20130525085523/http://www.securityfocus.com/bid/53676</a></li>
<li><a href="https://web.archive.org/web/20140724002926/http://secunia.com/advisories/49286">https://web.archive.org/web/20140724002926/http://secunia.com/advisories/49286</a></li>
<li><a href="https://web.archive.org/web/20140724023114/http://secunia.com/advisories/49255">https://web.archive.org/web/20140724023114/http://secunia.com/advisories/49255</a></li>
<li><a href="https://web.archive.org/web/20200517014414/http://www.securitytracker.com/id?1027096">https://web.archive.org/web/20200517014414/http://www.securitytracker.com/id?1027096</a></li>
<li><a href="http://archives.neohapsis.com/archives/bugtraq/2012-05/0130.html">http://archives.neohapsis.com/archives/bugtraq/2012-05/0130.html</a></li>
<li><a href="http://commons.apache.org/compress/security.html">http://commons.apache.org/compress/security.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/13/3">http://www.openwall.com/lists/oss-security/2023/09/13/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6fxm-66hq-fc96">https://github.com/advisories/GHSA-6fxm-66hq-fc96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fxm-66hq-fc96</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:07:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty.ee8:jetty-ee8-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty.ee9:jetty-ee9-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty.ee10:jetty-ee10-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-servlets] Jetty vulnerable to errant command quoting in CGI Servlet]]></title>
        <id>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</id>
        <link href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j"/>
        <updated>2023-09-14T16:59:39.000Z</updated>
        <content type="html"><![CDATA[<p>If a user sends a request to a <code>org.eclipse.jetty.servlets.CGI</code> Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.</p>
<pre><code class="language-java">if (execCmd.length() &gt; 0 &amp;&amp; execCmd.charAt(0) != '"' &amp;&amp; execCmd.contains(" "))
execCmd = "\"" + execCmd + "\"";
</code></pre>
<h3 id="exploit-scenario">Exploit Scenario</h3>
<p>The cgi-bin directory contains a binary named exec and a subdirectory named exec” commands, which contains a file called bin1. The user sends to the CGI servlet a request for the filename exec” commands/bin1. This request will pass the file existence check on lines 194 through 205. The servlet will add quotation marks around this filename, resulting in the command line string “exec” commands/bin1”. When this string is passed to Runtime.exec, instead of executing the bin1 binary, the server will execute the exec
binary with the argument commands/file1”. In addition to being incorrect, this behavior may bypass alias checks, and it may cause other unintended behaviors if a command prefix is configured.</p>
<p>If the useFullPath configuration setting is off, the command need not pass the existence check. The attack would not rely on a binary and subdirectory having similar names, and the attack will succeed on a much wider variety of directory structures.</p>
<h3 id="impact">Impact</h3>
<p>Users of the <code>org.eclipse.jetty.servlets.CGI</code> Servlet with a very specific command structure may have the wrong command executed.</p>
<h3 id="patches">Patches</h3>
<p>No patch.
In Jetty 9.x, 10.x, and 11.x the <code>org.eclipse.jetty.servlets.CGI</code> has been deprecated.
In Jetty 12 (all environments) the <code>org.eclipse.jetty.servlets.CGI</code> has been entirely removed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>org.eclipse.jetty.servlets.CGI</code> Servlet should not be used. Fast CGI support is available instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/eclipse/jetty.project/security/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9516">https://github.com/eclipse/jetty.project/pull/9516</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9888">https://github.com/eclipse/jetty.project/pull/9888</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9889">https://github.com/eclipse/jetty.project/pull/9889</a></li>
<li><a href="https://github.com/advisories/GHSA-3gh6-v5v9-6v9j">https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gh6-v5v9-6v9j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T16:16:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.jackson.core:jackson-databind] Unsafe Deserialization in jackson-databind]]></title>
        <id>https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</id>
        <link href="https://github.com/advisories/GHSA-9m6f-7xcq-8vf8"/>
        <updated>2023-09-14T16:15:44.000Z</updated>
        <content type="html"><![CDATA[<p>FasterXML jackson-databind 2.x before 2.9.10.8 and 2.6.7.5 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36183">https://nvd.nist.gov/vuln/detail/CVE-2020-36183</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/issues/3003">https://github.com/FasterXML/jackson-databind/issues/3003</a></li>
<li><a href="https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062">https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210205-0005/">https://security.netapp.com/advisory/ntap-20210205-0005/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html">https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/commit/12e23c962ffb4cf1857c5461d72ae54cc8008f29">https://github.com/FasterXML/jackson-databind/commit/12e23c962ffb4cf1857c5461d72ae54cc8008f29</a></li>
<li><a href="https://github.com/advisories/GHSA-9m6f-7xcq-8vf8">https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-12-09T19:16:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.jackson.core:jackson-databind] Unsafe Deserialization in jackson-databind]]></title>
        <id>https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</id>
        <link href="https://github.com/advisories/GHSA-9m6f-7xcq-8vf8"/>
        <updated>2023-09-14T16:15:44.000Z</updated>
        <content type="html"><![CDATA[<p>FasterXML jackson-databind 2.x before 2.9.10.8 and 2.6.7.5 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36183">https://nvd.nist.gov/vuln/detail/CVE-2020-36183</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/issues/3003">https://github.com/FasterXML/jackson-databind/issues/3003</a></li>
<li><a href="https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062">https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210205-0005/">https://security.netapp.com/advisory/ntap-20210205-0005/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html">https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/commit/12e23c962ffb4cf1857c5461d72ae54cc8008f29">https://github.com/FasterXML/jackson-databind/commit/12e23c962ffb4cf1857c5461d72ae54cc8008f29</a></li>
<li><a href="https://github.com/advisories/GHSA-9m6f-7xcq-8vf8">https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m6f-7xcq-8vf8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-12-09T19:16:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.jackson.core:jackson-databind] Unsafe Deserialization in jackson-databind]]></title>
        <id>https://github.com/advisories/GHSA-8c4j-34r4-xr8g</id>
        <link href="https://github.com/advisories/GHSA-8c4j-34r4-xr8g"/>
        <updated>2023-09-14T16:13:01.000Z</updated>
        <content type="html"><![CDATA[<p>FasterXML jackson-databind 2.x before 2.9.10.8 and 2.6.7.5 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36180">https://nvd.nist.gov/vuln/detail/CVE-2020-36180</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/issues/3004">https://github.com/FasterXML/jackson-databind/issues/3004</a></li>
<li><a href="https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062">https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210205-0005/">https://security.netapp.com/advisory/ntap-20210205-0005/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html">https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/commit/3ded28aece694d0df39c9f0fa1ff385b14a8656b">https://github.com/FasterXML/jackson-databind/commit/3ded28aece694d0df39c9f0fa1ff385b14a8656b</a></li>
<li><a href="https://github.com/advisories/GHSA-8c4j-34r4-xr8g">https://github.com/advisories/GHSA-8c4j-34r4-xr8g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8c4j-34r4-xr8g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-12-09T19:16:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.jackson.core:jackson-databind] Unsafe Deserialization in jackson-databind]]></title>
        <id>https://github.com/advisories/GHSA-8c4j-34r4-xr8g</id>
        <link href="https://github.com/advisories/GHSA-8c4j-34r4-xr8g"/>
        <updated>2023-09-14T16:13:01.000Z</updated>
        <content type="html"><![CDATA[<p>FasterXML jackson-databind 2.x before 2.9.10.8 and 2.6.7.5 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36180">https://nvd.nist.gov/vuln/detail/CVE-2020-36180</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/issues/3004">https://github.com/FasterXML/jackson-databind/issues/3004</a></li>
<li><a href="https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062">https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210205-0005/">https://security.netapp.com/advisory/ntap-20210205-0005/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html">https://lists.debian.org/debian-lts-announce/2021/04/msg00025.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/FasterXML/jackson-databind/commit/3ded28aece694d0df39c9f0fa1ff385b14a8656b">https://github.com/FasterXML/jackson-databind/commit/3ded28aece694d0df39c9f0fa1ff385b14a8656b</a></li>
<li><a href="https://github.com/advisories/GHSA-8c4j-34r4-xr8g">https://github.com/advisories/GHSA-8c4j-34r4-xr8g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8c4j-34r4-xr8g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-12-09T19:16:18.000Z</published>
    </entry>
</feed>