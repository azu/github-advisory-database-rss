<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-21T10:01:26.440Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:templating-engine] Remote code execution vulnerability in Jenkins Templating Engine Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p6qc-37hq-wqr6</id>
        <link href="https://github.com/advisories/GHSA-p6qc-37hq-wqr6"/>
        <updated>2022-12-21T05:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Templating Engine Plugin 2.1 and earlier does not protect its pipeline configurations using Script Security Plugin.</p>
<p>This vulnerability allows attackers with Job/Configure permission to execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Templating Engine Plugin 2.2 integrates with Script Security Plugin to protect its pipeline configurations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21646">https://nvd.nist.gov/vuln/detail/CVE-2021-21646</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-21/#SECURITY-2311">https://www.jenkins.io/security/advisory/2021-04-21/#SECURITY-2311</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/21/2">http://www.openwall.com/lists/oss-security/2021/04/21/2</a></li>
<li><a href="https://github.com/advisories/GHSA-p6qc-37hq-wqr6">https://github.com/advisories/GHSA-p6qc-37hq-wqr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6qc-37hq-wqr6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:48:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:bumblebee] Credentials stored in plain text by Jenkins Bumblebee HP ALM Plugin]]></title>
        <id>https://github.com/advisories/GHSA-8v72-qr3h-c6rv</id>
        <link href="https://github.com/advisories/GHSA-8v72-qr3h-c6rv"/>
        <updated>2022-12-21T05:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>Bumblebee HP ALM Plugin 4.1.5 and earlier stores credentials unencrypted in its global configuration file <code>com.agiletestware.bumblebee.BumblebeeGlobalConfig.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>These credentials can be viewed by users with access to the Jenkins controller file system.</p>
<p>Bumblebee HP ALM Plugin 4.1.6 stores credentials encrypted once its configuration is saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21614">https://nvd.nist.gov/vuln/detail/CVE-2021-21614</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2156">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2156</a></li>
<li><a href="https://github.com/advisories/GHSA-8v72-qr3h-c6rv">https://github.com/advisories/GHSA-8v72-qr3h-c6rv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v72-qr3h-c6rv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:hp-application-automation-tools-plugin] Missing permission checks in Micro Focus Application Automation Tools Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</id>
        <link href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4"/>
        <updated>2022-12-21T05:04:44.000Z</updated>
        <content type="html"><![CDATA[<p>Micro Focus Application Automation Tools Plugin 6.7 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to attacker-specified URLs using attacker-specified username and password.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Micro Focus Application Automation Tools Plugin 6.8 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22513">https://nvd.nist.gov/vuln/detail/CVE-2021-22513</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132</a></li>
<li><a href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4">https://github.com/advisories/GHSA-7qp2-rgxr-29q4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:claim] XSS vulnerability in Jenkins Claim Plugin]]></title>
        <id>https://github.com/advisories/GHSA-48hr-jg4p-w4p4</id>
        <link href="https://github.com/advisories/GHSA-48hr-jg4p-w4p4"/>
        <updated>2022-12-21T05:04:30.000Z</updated>
        <content type="html"><![CDATA[<p>Claim Plugin 2.18.1 and earlier does not escape the user display name shown in claims.</p>
<p>This results in a cross-site scripting (XSS) vulnerability exploitable by attackers who are able to control the display names of Jenkins users, either via the security realm, or directly inside Jenkins.</p>
<p>Everyone with a Jenkins account can change their own display name.\n\nClaim Plugin 2.18.2 escapes the user display name shown in claims.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21619">https://nvd.nist.gov/vuln/detail/CVE-2021-21619</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-02-24/#SECURITY-2188%20(1)">https://www.jenkins.io/security/advisory/2021-02-24/#SECURITY-2188%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/02/24/3">http://www.openwall.com/lists/oss-security/2021/02/24/3</a></li>
<li><a href="https://github.com/advisories/GHSA-48hr-jg4p-w4p4">https://github.com/advisories/GHSA-48hr-jg4p-w4p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-48hr-jg4p-w4p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:43:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2022-12-21T05:04:23.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2022-12-21T05:04:23.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:role-strategy] Improper authorization due to caching in Jenkins Role-based Authorization Strategy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-25g4-p347-x748</id>
        <link href="https://github.com/advisories/GHSA-25g4-p347-x748"/>
        <updated>2022-12-21T02:15:50.000Z</updated>
        <content type="html"><![CDATA[<p>Role-based Authorization Strategy Plugin 2.12 and newer uses a cache to speed up permission lookups. Role-based Authorization Strategy Plugin 3.0 and earlier this cache is not invalidated properly when an administrator changes the permission configuration. This can result in permissions being granted long after the configuration was changed to no longer grant them. Role-based Authorization Strategy Plugin 3.1 properly invalidates the cache on configuration changes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2286">https://nvd.nist.gov/vuln/detail/CVE-2020-2286</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1767">https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1767</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/10/08/5">http://www.openwall.com/lists/oss-security/2020/10/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-25g4-p347-x748">https://github.com/advisories/GHSA-25g4-p347-x748</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25g4-p347-x748</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.tools:git-parameter] Stored XSS vulnerability in Jenkins Git Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</id>
        <link href="https://github.com/advisories/GHSA-j7q2-c6r4-x2jw"/>
        <updated>2022-12-21T00:22:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Git Parameter Plugin 0.9.12 and earlier does not escape the repository field on the 'Build with Parameters' page, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>
<p>Git Parameter Plugin 0.9.13 escapes the repository field on the 'Build with Parameters' page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2238">https://nvd.nist.gov/vuln/detail/CVE-2020-2238</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1884">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1884</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-j7q2-c6r4-x2jw">https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:Parameterized-Remote-Trigger] Secret stored in plain text by Jenkins Parameterized Remote Trigger Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wphq-j78p-fhgp</id>
        <link href="https://github.com/advisories/GHSA-wphq-j78p-fhgp"/>
        <updated>2022-12-21T00:21:31.000Z</updated>
        <content type="html"><![CDATA[<p>Parameterized Remote Trigger Plugin 3.1.3 and earlier stores a secret unencrypted in its global configuration file <code>org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration.xml</code> on the Jenkins controller as part of its configuration. This secret can be viewed by attackers with access to the Jenkins controller file system.</p>
<p>Parameterized Remote Trigger Plugin 3.1.4 stores the secret encrypted once its configuration is saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2239">https://nvd.nist.gov/vuln/detail/CVE-2020-2239</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1625">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1625</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-wphq-j78p-fhgp">https://github.com/advisories/GHSA-wphq-j78p-fhgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wphq-j78p-fhgp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:database] CSRF vulnerability in Jenkins Database Plugin]]></title>
        <id>https://github.com/advisories/GHSA-jf9j-hx2j-m9xh</id>
        <link href="https://github.com/advisories/GHSA-jf9j-hx2j-m9xh"/>
        <updated>2022-12-21T00:21:13.000Z</updated>
        <content type="html"><![CDATA[<p>Database Plugin 1.6 and earlier does not require POST requests for the database console, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>This vulnerability allows attackers to execute arbitrary SQL scripts.</p>
<p>Database Plugin 1.7 removes the database console.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2240">https://nvd.nist.gov/vuln/detail/CVE-2020-2240</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1023">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1023</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-jf9j-hx2j-m9xh">https://github.com/advisories/GHSA-jf9j-hx2j-m9xh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf9j-hx2j-m9xh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:database] CSRF vulnerability in Jenkins Database Plugin]]></title>
        <id>https://github.com/advisories/GHSA-9rvw-7mx7-h53x</id>
        <link href="https://github.com/advisories/GHSA-9rvw-7mx7-h53x"/>
        <updated>2022-12-21T00:20:45.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery (CSRF) vulnerability in Jenkins database Plugin 1.6 and earlier allows attackers to connect to an attacker-specified database server using attacker-specified credentials.</p>
<p>Database Plugin 1.7 requires POST requests for the affected form validation method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2241">https://nvd.nist.gov/vuln/detail/CVE-2020-2241</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1024">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1024</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-9rvw-7mx7-h53x">https://github.com/advisories/GHSA-9rvw-7mx7-h53x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9rvw-7mx7-h53x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.apiman:apiman-manager-api-rest-impl] Apiman has insufficient checks for read permissions]]></title>
        <id>https://github.com/advisories/GHSA-54r5-wr8x-x5v3</id>
        <link href="https://github.com/advisories/GHSA-54r5-wr8x-x5v3"/>
        <updated>2022-12-20T23:29:57.000Z</updated>
        <content type="html"><![CDATA[<p>Apiman 1.5.7 through 2.2.3.Final has insufficient checks for read permissions within the Apiman Manager REST API. A malicious user may be able to find and subscribe to private APIs they do not have permission for, thus accessing API Management-protected resources they should not be allowed to access. The root cause of the issue is the Apiman project's accidental acceptance of a large contribution that was not fully compatible with the security model of Apiman versions before 3.0.0.Final. Because of this, 3.0.0.Final is not affected by the vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-47551">https://nvd.nist.gov/vuln/detail/CVE-2022-47551</a></li>
<li><a href="https://www.apiman.io/blog/permissions-bypass-disclosure/">https://www.apiman.io/blog/permissions-bypass-disclosure/</a></li>
<li><a href="https://www.github.com/apiman/apiman">https://www.github.com/apiman/apiman</a></li>
<li><a href="https://github.com/apiman/apiman/discussions/2409">https://github.com/apiman/apiman/discussions/2409</a></li>
<li><a href="https://github.com/advisories/GHSA-54r5-wr8x-x5v3">https://github.com/advisories/GHSA-54r5-wr8x-x5v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54r5-wr8x-x5v3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T00:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:selenium] Complete lack of CSRF protection in Jenkins Selenium Plugin can lead to OS command injection]]></title>
        <id>https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</id>
        <link href="https://github.com/advisories/GHSA-rp4x-xpgf-4xv7"/>
        <updated>2022-12-20T23:03:59.000Z</updated>
        <content type="html"><![CDATA[<p>Selenium Plugin 3.141.59 and earlier has no CSRF protection for its HTTP endpoints.</p>
<p>This allows attackers to perform the following actions:</p>
<ul>
<li>Restart the Selenium Grid hub.</li>
<li>Delete or replace the plugin configuration.</li>
<li>Start, stop, or restart Selenium configurations on specific nodes.</li>
</ul>
<p>Through carefully chosen configuration parameters, these actions can result in OS command injection on the Jenkins controller.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2196">https://nvd.nist.gov/vuln/detail/CVE-2020-2196</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1766">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1766</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/2">http://www.openwall.com/lists/oss-security/2022/04/14/2</a></li>
<li><a href="https://github.com/advisories/GHSA-rp4x-xpgf-4xv7">https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:compact-columns] Stored XSS vulnerability in Jenkins Compact Columns Plugin]]></title>
        <id>https://github.com/advisories/GHSA-x68x-wvm2-hqc8</id>
        <link href="https://github.com/advisories/GHSA-x68x-wvm2-hqc8"/>
        <updated>2022-12-20T22:43:13.000Z</updated>
        <content type="html"><![CDATA[<p>Compact Columns Plugin 1.11 and earlier displays the unprocessed job description in tooltips.</p>
<p>This results in a stored cross-site scripting vulnerability that can be exploited by users with Job/Configure permission.</p>
<p>Compact Columns Plugin 1.12 applies the configured markup formatter to the job description shown in tooltips.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2195">https://nvd.nist.gov/vuln/detail/CVE-2020-2195</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1837">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1837</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-x68x-wvm2-hqc8">https://github.com/advisories/GHSA-x68x-wvm2-hqc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x68x-wvm2-hqc8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:echarts-api] Stored XSS vulnerability in Jenkins ECharts API Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q397-w28f-jx97</id>
        <link href="https://github.com/advisories/GHSA-q397-w28f-jx97"/>
        <updated>2022-12-20T22:41:35.000Z</updated>
        <content type="html"><![CDATA[<p>ECharts API Plugin 4.7.0-3 and earlier does not escape the display name of the builds in the trend chart.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability that can be exploited by users with Run/Update permission.</p>
<p>ECharts API Plugin 4.7.0-4 escapes the display name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2194">https://nvd.nist.gov/vuln/detail/CVE-2020-2194</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1842">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1842</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-q397-w28f-jx97">https://github.com/advisories/GHSA-q397-w28f-jx97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q397-w28f-jx97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:echarts-api] Stored XSS vulnerability in Jenkins ECharts API Plugin]]></title>
        <id>https://github.com/advisories/GHSA-x9rq-9h44-f84v</id>
        <link href="https://github.com/advisories/GHSA-x9rq-9h44-f84v"/>
        <updated>2022-12-20T22:40:57.000Z</updated>
        <content type="html"><![CDATA[<p>ECharts API Plugin 4.7.0-3 and earlier does not escape the parser identifier when rendering charts.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability that can be exploited by users with Job/Configure permission.</p>
<p>ECharts API Plugin 4.7.0-4 escapes the parser identifier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2193">https://nvd.nist.gov/vuln/detail/CVE-2020-2193</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1841">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1841</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-x9rq-9h44-f84v">https://github.com/advisories/GHSA-x9rq-9h44-f84v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9rq-9h44-f84v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:tfs] Credentials stored in plain text by Jenkins tfs Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</id>
        <link href="https://github.com/advisories/GHSA-w6c2-jrhh-jrxg"/>
        <updated>2022-12-20T22:39:50.000Z</updated>
        <content type="html"><![CDATA[<p>tfs Plugin 5.157.1 and earlier stores a webhook secret unencrypted in its global configuration file <code>hudson.plugins.tfs.TeamPluginGlobalConfig.xml</code> on the Jenkins controller as part of its configuration. This secret can be viewed by attackers with access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2249">https://nvd.nist.gov/vuln/detail/CVE-2020-2249</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1506">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1506</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-w6c2-jrhh-jrxg">https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jsgames] Reflected XSS vulnerability in Jenkins JSGames Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7hf3-h28p-q6gx</id>
        <link href="https://github.com/advisories/GHSA-7hf3-h28p-q6gx"/>
        <updated>2022-12-20T22:39:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins JSGames Plugin 0.2 and earlier evaluates part of a URL as code, resulting in a reflected cross-site scripting (XSS) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2248">https://nvd.nist.gov/vuln/detail/CVE-2020-2248</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1905">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1905</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7hf3-h28p-q6gx">https://github.com/advisories/GHSA-7hf3-h28p-q6gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hf3-h28p-q6gx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:klocwork] XXE vulnerability in Jenkins Klocwork Analysis Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p6c5-737r-2r93</id>
        <link href="https://github.com/advisories/GHSA-p6c5-737r-2r93"/>
        <updated>2022-12-20T22:39:07.000Z</updated>
        <content type="html"><![CDATA[<p>Klocwork Analysis Plugin 2020.2.1 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the Klocwork plugin parser to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2247">https://nvd.nist.gov/vuln/detail/CVE-2020-2247</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1831">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1831</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-p6c5-737r-2r93">https://github.com/advisories/GHSA-p6c5-737r-2r93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6c5-737r-2r93</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:valgrind] XXE vulnerability in Jenkins Valgrind Plugin]]></title>
        <id>https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</id>
        <link href="https://github.com/advisories/GHSA-xq2q-8hxc-7jr2"/>
        <updated>2022-12-20T22:38:26.000Z</updated>
        <content type="html"><![CDATA[<p>Valgrind Plugin 0.28 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the Valgrind plugin parser to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2245">https://nvd.nist.gov/vuln/detail/CVE-2020-2245</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1829">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1829</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-xq2q-8hxc-7jr2">https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
</feed>