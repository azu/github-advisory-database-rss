<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-27T10:01:30.125Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Memory usage graphs accessible to anyone with Overall/Read]]></title>
        <id>https://github.com/advisories/GHSA-r78q-qgx6-64pp</id>
        <link href="https://github.com/advisories/GHSA-r78q-qgx6-64pp"/>
        <updated>2022-12-27T05:05:51.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins includes a feature that shows a JVM memory usage chart for the Jenkins controller.</p>
<p>Access to the chart in Jenkins 2.218 and earlier, LTS 2.204.1 and earlier requires no permissions beyond the general Overall/Read, allowing users who are not administrators to view JVM memory usage data.</p>
<p>Jenkins 2.219, LTS 2.204.2 now requires Overall/Administer permissions to view the JVM memory usage chart.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2104">https://nvd.nist.gov/vuln/detail/CVE-2020-2104</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1650">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1650</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-r78q-qgx6-64pp">https://github.com/advisories/GHSA-r78q-qgx6-64pp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r78q-qgx6-64pp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Memory usage graphs accessible to anyone with Overall/Read]]></title>
        <id>https://github.com/advisories/GHSA-r78q-qgx6-64pp</id>
        <link href="https://github.com/advisories/GHSA-r78q-qgx6-64pp"/>
        <updated>2022-12-27T05:05:51.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins includes a feature that shows a JVM memory usage chart for the Jenkins controller.</p>
<p>Access to the chart in Jenkins 2.218 and earlier, LTS 2.204.1 and earlier requires no permissions beyond the general Overall/Read, allowing users who are not administrators to view JVM memory usage data.</p>
<p>Jenkins 2.219, LTS 2.204.2 now requires Overall/Administer permissions to view the JVM memory usage chart.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2104">https://nvd.nist.gov/vuln/detail/CVE-2020-2104</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1650">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1650</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-r78q-qgx6-64pp">https://github.com/advisories/GHSA-r78q-qgx6-64pp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r78q-qgx6-64pp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:implied-labels] Missing permission check in Jenkins Implied Labels Plugin allows reconfiguring the plugin]]></title>
        <id>https://github.com/advisories/GHSA-5hw2-327v-vvr6</id>
        <link href="https://github.com/advisories/GHSA-5hw2-327v-vvr6"/>
        <updated>2022-12-27T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Implied Labels Plugin 0.6 and earlier does not perform a permission check in an HTTP endpoint.</p>
<p>This allows attackers with Overall/Read permission to configure the plugin.</p>
<p>Implied Labels Plugin 0.7 requires Overall/Administer permission to configure the plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2282">https://nvd.nist.gov/vuln/detail/CVE-2020-2282</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2004">https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2004</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/23/1">http://www.openwall.com/lists/oss-security/2020/09/23/1</a></li>
<li><a href="https://github.com/advisories/GHSA-5hw2-327v-vvr6">https://github.com/advisories/GHSA-5hw2-327v-vvr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5hw2-327v-vvr6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:29:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-8xg4-xq2v-v6j7</id>
        <link href="https://github.com/advisories/GHSA-8xg4-xq2v-v6j7"/>
        <updated>2022-12-24T05:05:17.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2538 / CVE-2021-21692: The operations <code>FilePath#renameTo</code> and <code>FilePath#moveAllChildrenTo</code> only check read permission on the source path.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2538 / CVE-2021-21692: The operations <code>FilePath#renameTo</code> and <code>FilePath#moveAllChildrenTo</code> check both read and delete permissions on the source path.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21692">https://nvd.nist.gov/vuln/detail/CVE-2021-21692</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-8xg4-xq2v-v6j7">https://github.com/advisories/GHSA-8xg4-xq2v-v6j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xg4-xq2v-v6j7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Session fixation vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</id>
        <link href="https://github.com/advisories/GHSA-4wr9-2xc6-jmg5"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier does not invalidate the existing session on login. This allows attackers to use social engineering techniques to gain administrator access to Jenkins.</p>
<p>This vulnerability was introduced in Jenkins 2.266 and LTS 2.277.1.</p>
<p>Jenkins 2.300, LTS 2.289.2 invalidates the existing session on login.</p>
<p>In case of problems, administrators can choose a different implementation by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/#hudson-security-securityrealm-sessionfixationprotectionmode">Java system property <code>hudson.security.SecurityRealm.sessionFixationProtectionMode</code></a> to <code>2</code>, or disable the fix entirely by setting that system property to <code>0</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21671">https://nvd.nist.gov/vuln/detail/CVE-2021-21671</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2371">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2371</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-4wr9-2xc6-jmg5">https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Session fixation vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</id>
        <link href="https://github.com/advisories/GHSA-4wr9-2xc6-jmg5"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier does not invalidate the existing session on login. This allows attackers to use social engineering techniques to gain administrator access to Jenkins.</p>
<p>This vulnerability was introduced in Jenkins 2.266 and LTS 2.277.1.</p>
<p>Jenkins 2.300, LTS 2.289.2 invalidates the existing session on login.</p>
<p>In case of problems, administrators can choose a different implementation by setting the <a href="https://www.jenkins.io/doc/book/managing/system-properties/#hudson-security-securityrealm-sessionfixationprotectionmode">Java system property <code>hudson.security.SecurityRealm.sessionFixationProtectionMode</code></a> to <code>2</code>, or disable the fix entirely by setting that system property to <code>0</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21671">https://nvd.nist.gov/vuln/detail/CVE-2021-21671</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2371">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2371</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-4wr9-2xc6-jmg5">https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wr9-2xc6-jmg5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:chaos-monkey] Missing permission checks in Jenkins Chaos Monkey Plugin]]></title>
        <id>https://github.com/advisories/GHSA-mr75-899x-qcxq</id>
        <link href="https://github.com/advisories/GHSA-mr75-899x-qcxq"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Chaos Monkey Plugin 0.3 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to generate load and to generate memory leaks.</p>
<p>Chaos Monkey Plugin 0.4 requires Overall/Administer permission to generate load and to generate memory leaks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2322">https://nvd.nist.gov/vuln/detail/CVE-2020-2322</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2109%20(1)">https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2109%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/12/03/2">http://www.openwall.com/lists/oss-security/2020/12/03/2</a></li>
<li><a href="https://github.com/advisories/GHSA-mr75-899x-qcxq">https://github.com/advisories/GHSA-mr75-899x-qcxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mr75-899x-qcxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:35:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ec2] Missing SSH host key validation in Amazon EC2 Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q8qq-2p5p-rg44</id>
        <link href="https://github.com/advisories/GHSA-q8qq-2p5p-rg44"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Amazon EC2 Plugin 1.50.1 and earlier does not use SSH host key validation when connecting to agents. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections to build agents.</p>
<p>Amazon EC2 Plugin 1.50.2 provides strategies for performing host key validation for administrators to select the one that meets their security needs. It includes assistance for administrators to migrate to a new, more secure strategy. For more information see <a href="https://github.com/jenkinsci/ec2-plugin/#securing-the-connection-to-unix-amis">the plugin documentation</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2185">https://nvd.nist.gov/vuln/detail/CVE-2020-2185</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-381">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-381</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-q8qq-2p5p-rg44">https://github.com/advisories/GHSA-q8qq-2p5p-rg44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q8qq-2p5p-rg44</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Inbound TCP Agent Protocol/3 authentication bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qp4f-2w67-c8hw</id>
        <link href="https://github.com/advisories/GHSA-qp4f-2w67-c8hw"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.213 and earlier, LTS 2.204.1 and earlier includes support for the Inbound TCP Agent Protocol/3 for communication between controller and agents. While <a href="https://www.jenkins.io/changelog-old/#v2.128">this protocol has been deprecated in 2018</a> and was recently removed from Jenkins in 2.214, it could still easily be enabled in Jenkins LTS 2.204.1, 2.213, and older.</p>
<p>This protocol incorrectly reuses encryption parameters which allow an unauthenticated remote attacker to determine the connection secret. This secret can then be used to connect attacker-controlled Jenkins agents to the Jenkins controller.</p>
<p>Jenkins 2.204.2 no longer allows for the use of Inbound TCP Agent Protocol/3 by default. The system property <code>jenkins.slaves.JnlpSlaveAgentProtocol3.ALLOW_UNSAFE</code> can be set to <code>true</code> to allow enabling the Inbound TCP Agent Protocol/3 in Jenkins 2.204.2, but doing so is strongly discouraged.</p>
<p>Inbound TCP Agent Protocol/3 was removed completely from Jenkins 2.214 and will not be part of Jenkins LTS after the end of the 2.204.x line.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2099">https://nvd.nist.gov/vuln/detail/CVE-2020-2099</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1682">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1682</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-qp4f-2w67-c8hw">https://github.com/advisories/GHSA-qp4f-2w67-c8hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qp4f-2w67-c8hw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Inbound TCP Agent Protocol/3 authentication bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-qp4f-2w67-c8hw</id>
        <link href="https://github.com/advisories/GHSA-qp4f-2w67-c8hw"/>
        <updated>2022-12-24T05:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.213 and earlier, LTS 2.204.1 and earlier includes support for the Inbound TCP Agent Protocol/3 for communication between controller and agents. While <a href="https://www.jenkins.io/changelog-old/#v2.128">this protocol has been deprecated in 2018</a> and was recently removed from Jenkins in 2.214, it could still easily be enabled in Jenkins LTS 2.204.1, 2.213, and older.</p>
<p>This protocol incorrectly reuses encryption parameters which allow an unauthenticated remote attacker to determine the connection secret. This secret can then be used to connect attacker-controlled Jenkins agents to the Jenkins controller.</p>
<p>Jenkins 2.204.2 no longer allows for the use of Inbound TCP Agent Protocol/3 by default. The system property <code>jenkins.slaves.JnlpSlaveAgentProtocol3.ALLOW_UNSAFE</code> can be set to <code>true</code> to allow enabling the Inbound TCP Agent Protocol/3 in Jenkins 2.204.2, but doing so is strongly discouraged.</p>
<p>Inbound TCP Agent Protocol/3 was removed completely from Jenkins 2.214 and will not be part of Jenkins LTS after the end of the 2.204.x line.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2099">https://nvd.nist.gov/vuln/detail/CVE-2020-2099</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1682">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1682</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-qp4f-2w67-c8hw">https://github.com/advisories/GHSA-qp4f-2w67-c8hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qp4f-2w67-c8hw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cvs] XXE vulnerability in Jenkins CVS Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g9hg-x9c9-7xgr</id>
        <link href="https://github.com/advisories/GHSA-g9hg-x9c9-7xgr"/>
        <updated>2022-12-24T05:05:00.000Z</updated>
        <content type="html"><![CDATA[<p>CVS Plugin 2.16 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows attackers able to control an agent process to have Jenkins parse a crafted changelog file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>CVS Plugin 2.17 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2324">https://nvd.nist.gov/vuln/detail/CVE-2020-2324</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2146">https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2146</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/12/03/2">http://www.openwall.com/lists/oss-security/2020/12/03/2</a></li>
<li><a href="https://github.com/advisories/GHSA-g9hg-x9c9-7xgr">https://github.com/advisories/GHSA-g9hg-x9c9-7xgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9hg-x9c9-7xgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:35:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:build-with-parameters] CSRF vulnerability in Jenkins Build With Parameters Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w24g-24qg-v4w2</id>
        <link href="https://github.com/advisories/GHSA-w24g-24qg-v4w2"/>
        <updated>2022-12-23T05:05:48.000Z</updated>
        <content type="html"><![CDATA[<p>Build With Parameters Plugin 1.5 and earlier does not require POST requests for its form submission endpoint, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>This vulnerability allows attackers to build a project with attacker-specified parameters. Build With Parameters Plugin 1.5.1 requires POST requests for the affected HTTP endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21629">https://nvd.nist.gov/vuln/detail/CVE-2021-21629</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2257">https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2257</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/30/1">http://www.openwall.com/lists/oss-security/2021/03/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-w24g-24qg-v4w2">https://github.com/advisories/GHSA-w24g-24qg-v4w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24g-24qg-v4w2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:45:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.shardingsphere:shardingsphere-proxy] Apache ShardingSphere-Proxy Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</id>
        <link href="https://github.com/advisories/GHSA-wmxm-6wxc-3xqf"/>
        <updated>2022-12-22T20:02:31.000Z</updated>
        <content type="html"><![CDATA[<p>Apache ShardingSphere-Proxy prior to 5.3.0 when using MySQL as database backend didn't cleanup the database session completely after client authentication failed, which allowed an attacker to execute normal commands by constructing a special MySQL client. This vulnerability has been fixed in Apache ShardingSphere 5.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45347">https://nvd.nist.gov/vuln/detail/CVE-2022-45347</a></li>
<li><a href="https://lists.apache.org/thread/l5rz7j4rg10o7ywtgknh2f5hxnv6yw3l">https://lists.apache.org/thread/l5rz7j4rg10o7ywtgknh2f5hxnv6yw3l</a></li>
<li><a href="https://github.com/advisories/GHSA-wmxm-6wxc-3xqf">https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-22T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.mingsoft:ms-mcms] Mingsoft MCMS Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6rvv-h8g7-728w</id>
        <link href="https://github.com/advisories/GHSA-6rvv-h8g7-728w"/>
        <updated>2022-12-22T19:58:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in Mingsoft MCMS 5.2.9 and classified as problematic. Affected by this vulnerability is the function save of the component Article Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216499.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4640">https://nvd.nist.gov/vuln/detail/CVE-2022-4640</a></li>
<li><a href="https://gitee.com/mingSoft/MCMS/issues/I65KI5">https://gitee.com/mingSoft/MCMS/issues/I65KI5</a></li>
<li><a href="https://vuldb.com/?id.216499">https://vuldb.com/?id.216499</a></li>
<li><a href="https://github.com/advisories/GHSA-6rvv-h8g7-728w">https://github.com/advisories/GHSA-6rvv-h8g7-728w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rvv-h8g7-728w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-22T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.yaml:snakeyaml] SnakeYaml Constructor Deserialization Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-mjmj-j48q-9wg2</id>
        <link href="https://github.com/advisories/GHSA-mjmj-j48q-9wg2"/>
        <updated>2022-12-22T19:16:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>SnakeYaml's <code>Constructor</code> class, which inherits from <code>SafeConstructor</code>, allows
any type be deserialized given the following line:</p>
<p>new Yaml(new Constructor(TestDataClass.class)).load(yamlContent);</p>
<p>Types do not have to match the types of properties in the
target class. A <code>ConstructorException</code> is thrown, but only after a malicious
payload is deserialized.</p>
<h3 id="severity">Severity</h3>
<p>High, lack of type checks during deserialization allows remote code execution.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<p>Execute <code>bash run.sh</code>. The PoC uses Constructor to deserialize a payload
for RCE. RCE is demonstrated by using a payload which performs a http request to
<a href="http://127.0.0.1:8000">http://127.0.0.1:8000</a>.</p>
<p>Example output of successful run of proof of concept:</p>
<pre><code>$ bash run.sh

[+] Downloading snakeyaml if needed
[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE
nc: no process found
[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.
[+] An exception is expected.
Exception:
Cannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0
 in 'string', line 1, column 1:
    payload: !!javax.script.ScriptEn ... 
    ^
Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager
 in 'string', line 1, column 10:
    payload: !!javax.script.ScriptEngineManag ... 
             ^

    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)
    at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)
    at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)
    at org.yaml.snakeyaml.Yaml.load(Yaml.java:416)
    at Main.main(Main.java:37)
Caused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager
    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
    at java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)
    at java.base/java.lang.reflect.Field.set(Field.java:780)
    at org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)
    ... 9 more
[+] Dumping Received HTTP Request. Will not be empty if PoC worked
GET /proof-of-concept HTTP/1.1
User-Agent: Java/11.0.14
Host: localhost:8000
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
</code></pre>
<h3 id="further-analysis">Further Analysis</h3>
<p>Potential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.</p>
<h3 id="timeline">Timeline</h3>
<p><strong>Date reported</strong>: 4/11/2022
<strong>Date fixed</strong>: 
<strong>Date disclosed</strong>: 10/13/2022</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2">https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1471">https://nvd.nist.gov/vuln/detail/CVE-2022-1471</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471">https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471</a></li>
<li><a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></li>
<li><a href="https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/">https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/</a></li>
<li><a href="https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true">https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmj-j48q-9wg2">https://github.com/advisories/GHSA-mjmj-j48q-9wg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmj-j48q-9wg2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-12T21:19:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:rapiddeploy-jenkins] XXE vulnerability in Jenkins RapidDeploy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</id>
        <link href="https://github.com/advisories/GHSA-g7w4-r4mg-gvhx"/>
        <updated>2022-12-22T14:05:20.000Z</updated>
        <content type="html"><![CDATA[<p>RapidDeploy Plugin 4.2 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the 'RapidDeploy deployment package build' build or post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>
<p>RapidDeploy Plugin 4.2.1 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2171">https://nvd.nist.gov/vuln/detail/CVE-2020-2171</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1677">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1677</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-g7w4-r4mg-gvhx">https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:rapiddeploy-jenkins] Stored XSS vulnerability in Jenkins RapidDeploy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</id>
        <link href="https://github.com/advisories/GHSA-f4gq-7hvf-fjm3"/>
        <updated>2022-12-22T14:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>RapidDeploy Plugin 4.2 and earlier does not escape package names in its displayed table of packages obtained from a remote server. This results in a stored cross-site scripting (XSS) vulnerability exploitable by users able to configure jobs.</p>
<p>RapidDeploy Plugin 4.2.1 escapes package names.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2170">https://nvd.nist.gov/vuln/detail/CVE-2020-2170</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1676">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1676</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-f4gq-7hvf-fjm3">https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:queue-cleanup] Reflected XSS vulnerability in Jenkins Queue cleanup Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m7pr-m4cx-6m22</id>
        <link href="https://github.com/advisories/GHSA-m7pr-m4cx-6m22"/>
        <updated>2022-12-22T14:03:18.000Z</updated>
        <content type="html"><![CDATA[<p>A form validation HTTP endpoint in Queue cleanup Plugin 1.3 and earlier does not escape a query parameter displayed in an error message. This results in a reflected cross-site scripting vulnerability (XSS).</p>
<p>Queue cleanup Plugin 1.4 correctly escapes the query parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2169">https://nvd.nist.gov/vuln/detail/CVE-2020-2169</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1724">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1724</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-m7pr-m4cx-6m22">https://github.com/advisories/GHSA-m7pr-m4cx-6m22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7pr-m4cx-6m22</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:azure-acs] RCE vulnerability in Jenkins Azure Container Service Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5qff-7944-vq4f</id>
        <link href="https://github.com/advisories/GHSA-5qff-7944-vq4f"/>
        <updated>2022-12-22T14:02:35.000Z</updated>
        <content type="html"><![CDATA[<p>Azure Container Service Plugin 1.0.1 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to provide YAML input files to Azure Container Service Plugin’s build step.</p>
<p>Azure Container Service Plugin 1.0.2 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2168">https://nvd.nist.gov/vuln/detail/CVE-2020-2168</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1732">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1732</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-5qff-7944-vq4f">https://github.com/advisories/GHSA-5qff-7944-vq4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qff-7944-vq4f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:artifactory] Passwords transmitted in plain text by Jenkins Artifactory Plugin]]></title>
        <id>https://github.com/advisories/GHSA-xqf6-5grh-6223</id>
        <link href="https://github.com/advisories/GHSA-xqf6-5grh-6223"/>
        <updated>2022-12-22T13:56:43.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Artifactory Plugin 3.6.0 and earlier stores Artifactory server passwords in its global configuration file <code>org.jfrog.hudson.ArtifactoryBuilder.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>While the password is stored encrypted on disk since Artifactory Plugin 3.6.0, it is transmitted in plain text as part of the configuration form by Artifactory Plugin 3.6.0 and earlier. This can result in exposure of the password through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<p>Artifactory Plugin 3.6.1 transmits the password in its global configuration encrypted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2165">https://nvd.nist.gov/vuln/detail/CVE-2020-2165</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(2)">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-xqf6-5grh-6223">https://github.com/advisories/GHSA-xqf6-5grh-6223</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xqf6-5grh-6223</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
</feed>