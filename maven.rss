<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-12-07T21:01:15.135Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.sshd:sshd-sftp] Apache MINA SSHD information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</id>
        <link href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm"/>
        <updated>2023-12-07T18:20:05.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache MINA.</p>
<p>In SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover "exists/does not exist" information about items outside the rooted tree via paths including parent navigation ("..") beyond the root, or involving symlinks.</p>
<p>This issue affects Apache MINA: from 1.0 before 2.9.3 Users are recommended to upgrade to 2.9.3</p>
<p>Until version 2.1.0, some of the code affected by this vulnerability appeared in org.apache.sshd:sshd-core. Version 2.1.0 contains a <a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">commit</a> where the code was moved to the package org.apache.sshd:sshd-common, which did not exist until version 2.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35887">https://nvd.nist.gov/vuln/detail/CVE-2023-35887</a></li>
<li><a href="https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2">https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2</a></li>
<li><a href="https://github.com/apache/mina-sshd/pull/362">https://github.com/apache/mina-sshd/pull/362</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0">https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0</a></li>
<li><a href="https://issues.apache.org/jira/browse/SSHD-1324">https://issues.apache.org/jira/browse/SSHD-1324</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b">https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm">https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-10T18:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sshd:sshd-common] Apache MINA SSHD information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</id>
        <link href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm"/>
        <updated>2023-12-07T18:20:05.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache MINA.</p>
<p>In SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover "exists/does not exist" information about items outside the rooted tree via paths including parent navigation ("..") beyond the root, or involving symlinks.</p>
<p>This issue affects Apache MINA: from 1.0 before 2.9.3 Users are recommended to upgrade to 2.9.3</p>
<p>Until version 2.1.0, some of the code affected by this vulnerability appeared in org.apache.sshd:sshd-core. Version 2.1.0 contains a <a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">commit</a> where the code was moved to the package org.apache.sshd:sshd-common, which did not exist until version 2.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35887">https://nvd.nist.gov/vuln/detail/CVE-2023-35887</a></li>
<li><a href="https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2">https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2</a></li>
<li><a href="https://github.com/apache/mina-sshd/pull/362">https://github.com/apache/mina-sshd/pull/362</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0">https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0</a></li>
<li><a href="https://issues.apache.org/jira/browse/SSHD-1324">https://issues.apache.org/jira/browse/SSHD-1324</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b">https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm">https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-10T18:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sshd:sshd-core] Apache MINA SSHD information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</id>
        <link href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm"/>
        <updated>2023-12-07T18:20:05.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache MINA.</p>
<p>In SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover "exists/does not exist" information about items outside the rooted tree via paths including parent navigation ("..") beyond the root, or involving symlinks.</p>
<p>This issue affects Apache MINA: from 1.0 before 2.9.3 Users are recommended to upgrade to 2.9.3</p>
<p>Until version 2.1.0, some of the code affected by this vulnerability appeared in org.apache.sshd:sshd-core. Version 2.1.0 contains a <a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">commit</a> where the code was moved to the package org.apache.sshd:sshd-common, which did not exist until version 2.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35887">https://nvd.nist.gov/vuln/detail/CVE-2023-35887</a></li>
<li><a href="https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2">https://lists.apache.org/thread/b9qgtqvhnvgfpn0w1gz918p21p53tqk2</a></li>
<li><a href="https://github.com/apache/mina-sshd/pull/362">https://github.com/apache/mina-sshd/pull/362</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0">https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0</a></li>
<li><a href="https://issues.apache.org/jira/browse/SSHD-1324">https://issues.apache.org/jira/browse/SSHD-1324</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0">https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0</a></li>
<li><a href="https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b">https://github.com/apache/mina-sshd/commit/c20739b43aab0f7bf2ccad982a6cb37b9d5a8a0b</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmq-gwgm-5qhm">https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmq-gwgm-5qhm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-10T18:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4g38-hrm4-rg94</id>
        <link href="https://github.com/advisories/GHSA-4g38-hrm4-rg94"/>
        <updated>2023-12-07T15:25:04.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters do not canonicalize paths, allowing operations to follow symbolic links to outside allowed directories.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters canonicalize paths, preventing operations from following symbolic links to outside allowed directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21686">https://nvd.nist.gov/vuln/detail/CVE-2021-21686</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-4g38-hrm4-rg94">https://github.com/advisories/GHSA-4g38-hrm4-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g38-hrm4-rg94</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-4g38-hrm4-rg94</id>
        <link href="https://github.com/advisories/GHSA-4g38-hrm4-rg94"/>
        <updated>2023-12-07T15:25:04.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters do not canonicalize paths, allowing operations to follow symbolic links to outside allowed directories.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2444 / CVE-2021-21686: File path filters canonicalize paths, preventing operations from following symbolic links to outside allowed directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21686">https://nvd.nist.gov/vuln/detail/CVE-2021-21686</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-4g38-hrm4-rg94">https://github.com/advisories/GHSA-4g38-hrm4-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g38-hrm4-rg94</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</id>
        <link href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2"/>
        <updated>2023-12-07T15:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2486 / CVE-2021-21690: Agent processes are able to completely bypass file path filtering by wrapping the file operation in an agent file path.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2486 / CVE-2021-21690: Agent processes are no longer able to completely bypass file path filtering by wrapping the file operation in an agent file path.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21690">https://nvd.nist.gov/vuln/detail/CVE-2021-21690</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2">https://github.com/advisories/GHSA-97c3-w9cr-6qc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</id>
        <link href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2"/>
        <updated>2023-12-07T15:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2486 / CVE-2021-21690: Agent processes are able to completely bypass file path filtering by wrapping the file operation in an agent file path.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2486 / CVE-2021-21690: Agent processes are no longer able to completely bypass file path filtering by wrapping the file operation in an agent file path.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21690">https://nvd.nist.gov/vuln/detail/CVE-2021-21690</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2">https://github.com/advisories/GHSA-97c3-w9cr-6qc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:hp-application-automation-tools-plugin] CSRF vulnerability in Jenkins Micro Focus Application Automation Tools Plugin]]></title>
        <id>https://github.com/advisories/GHSA-mwg2-3xpv-5v28</id>
        <link href="https://github.com/advisories/GHSA-mwg2-3xpv-5v28"/>
        <updated>2023-12-07T15:05:26.000Z</updated>
        <content type="html"><![CDATA[<p>Micro Focus Application Automation Tools Plugin 6.7 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to attacker-specified URLs using attacker-specified username and password.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Micro Focus Application Automation Tools Plugin 6.8 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22512">https://nvd.nist.gov/vuln/detail/CVE-2021-22512</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132</a></li>
<li><a href="https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/497a143d9a95e9c937501ca329fe0dae22a0d9cd">https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/497a143d9a95e9c937501ca329fe0dae22a0d9cd</a></li>
<li><a href="https://github.com/advisories/GHSA-mwg2-3xpv-5v28">https://github.com/advisories/GHSA-mwg2-3xpv-5v28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mwg2-3xpv-5v28</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-929w-q433-4h9x</id>
        <link href="https://github.com/advisories/GHSA-929w-q433-4h9x"/>
        <updated>2023-12-07T15:02:41.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2539 / CVE-2021-21693: When creating temporary files, permission to create files is only checked after they’ve been created.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2539 / CVE-2021-21693: When creating temporary files, permission to create files is checked before they are created based on an artificial path.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21693">https://nvd.nist.gov/vuln/detail/CVE-2021-21693</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-929w-q433-4h9x">https://github.com/advisories/GHSA-929w-q433-4h9x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-929w-q433-4h9x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-929w-q433-4h9x</id>
        <link href="https://github.com/advisories/GHSA-929w-q433-4h9x"/>
        <updated>2023-12-07T15:02:41.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2539 / CVE-2021-21693: When creating temporary files, permission to create files is only checked after they’ve been created.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2539 / CVE-2021-21693: When creating temporary files, permission to create files is checked before they are created based on an artificial path.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21693">https://nvd.nist.gov/vuln/detail/CVE-2021-21693</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-929w-q433-4h9x">https://github.com/advisories/GHSA-929w-q433-4h9x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-929w-q433-4h9x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:xcode-plugin] XML external entity (XXE) attacks in Jenkins Xcode integration Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wfxp-4qgw-qp3c</id>
        <link href="https://github.com/advisories/GHSA-wfxp-4qgw-qp3c"/>
        <updated>2023-12-07T14:59:24.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Xcode integration Plugin 2.0.14 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21656">https://nvd.nist.gov/vuln/detail/CVE-2021-21656</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2335">https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2335</a></li>
<li><a href="https://github.com/jenkinsci/xcode-plugin/commit/01335f1f4734e4a7eda69b28e182ecd4c34a1a4b">https://github.com/jenkinsci/xcode-plugin/commit/01335f1f4734e4a7eda69b28e182ecd4c34a1a4b</a></li>
<li><a href="https://github.com/advisories/GHSA-wfxp-4qgw-qp3c">https://github.com/advisories/GHSA-wfxp-4qgw-qp3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wfxp-4qgw-qp3c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-18T17:52:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</id>
        <link href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx"/>
        <updated>2023-12-07T13:49:08.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code>, and <code>FilePath#get*DiskSpace</code> do not check any permissions.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code> check stat permission. <code>FilePath#get*DiskSpace</code> methods are no longer allowed to be executed by an agent.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21694">https://nvd.nist.gov/vuln/detail/CVE-2021-21694</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx">https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</id>
        <link href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx"/>
        <updated>2023-12-07T13:49:08.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code>, and <code>FilePath#get*DiskSpace</code> do not check any permissions.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code> check stat permission. <code>FilePath#get*DiskSpace</code> methods are no longer allowed to be executed by an agent.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21694">https://nvd.nist.gov/vuln/detail/CVE-2021-21694</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b">https://github.com/jenkinsci/jenkins/commit/104c751d907919dd53f5090f84d53c671a66457b</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>
<li><a href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx">https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.blueocean:blueocean] Cross-site Scripting in Jenkins Blue Ocean Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7fjr-5hph-c2mh</id>
        <link href="https://github.com/advisories/GHSA-7fjr-5hph-c2mh"/>
        <updated>2023-12-07T13:43:32.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability exists in Jenkins Blue Ocean Plugins 1.10.1 and earlier that allows attackers with permission to edit a user's description in Jenkins to have Blue Ocean render arbitrary HTML when using it as that user.
This vulnerability is found in:</p>
<ul>
<li>blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/Export.java </li>
<li>blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/export/ExportConfig.java</li>
<li>blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/export/JSONDataWriter.java</li>
<li>blueocean-rest-impl/src/main/java/io/jenkins/blueocean/service/embedded/UserStatePreloader.java</li>
<li>blueocean-web/src/main/resources/io/jenkins/blueocean/PageStatePreloadDecorator/header.jelly</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1003013">https://nvd.nist.gov/vuln/detail/CVE-2019-1003013</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2019:0326">https://access.redhat.com/errata/RHBA-2019:0326</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2019:0327">https://access.redhat.com/errata/RHBA-2019:0327</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1204">https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1204</a></li>
<li><a href="https://github.com/jenkinsci/blueocean-plugin/commit/62775e78532b756826bb237775b64a5052624b57">https://github.com/jenkinsci/blueocean-plugin/commit/62775e78532b756826bb237775b64a5052624b57</a></li>
<li><a href="https://github.com/advisories/GHSA-7fjr-5hph-c2mh">https://github.com/advisories/GHSA-7fjr-5hph-c2mh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fjr-5hph-c2mh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ansible] Jenkins Ansible Plugin man in the middle vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-322x-jv5h-cvjh</id>
        <link href="https://github.com/advisories/GHSA-322x-jv5h-cvjh"/>
        <updated>2023-12-07T13:42:11.000Z</updated>
        <content type="html"><![CDATA[<p>A man in the middle vulnerability exists in Jenkins Ansible Plugin 0.8 and older in <code>AbstractAnsibleInvocation.java</code>, <code>AnsibleAdHocCommandBuilder.java</code>, <code>AnsibleAdHocCommandInvocationTest.java</code>, <code>AnsibleContext.java</code>, <code>AnsibleJobDslExtension.java</code>, <code>AnsiblePlaybookBuilder.java</code>, <code>AnsiblePlaybookStep.java</code> that disables host key verification by default. Ansible Plugin 1.0 now enables host key verification by default, adding options allowing users to opt out.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000149">https://nvd.nist.gov/vuln/detail/CVE-2018-1000149</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-03-26/#SECURITY-630">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-630</a></li>
<li><a href="https://github.com/jenkinsci/ansible-plugin/commit/06d30e5b626a978e258a7f4ab473cd7f53a7cba7">https://github.com/jenkinsci/ansible-plugin/commit/06d30e5b626a978e258a7f4ab473cd7f53a7cba7</a></li>
<li><a href="https://github.com/advisories/GHSA-322x-jv5h-cvjh">https://github.com/advisories/GHSA-322x-jv5h-cvjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-322x-jv5h-cvjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:18:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper permission checks allow canceling queue items and aborting builds in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q4wp-8c99-69pw</id>
        <link href="https://github.com/advisories/GHSA-q4wp-8c99-69pw"/>
        <updated>2023-12-07T13:41:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier allows users to cancel queue items and abort builds of jobs for which they have Item/Cancel permission even when they do not have Item/Read permission.</p>
<p>Jenkins 2.300, LTS 2.289.2 requires that users have Item/Read permission for applicable types in addition to Item/Cancel permission.</p>
<p>As a workaround on earlier versions of Jenkins, do not grant Item/Cancel permission to users who do not have Item/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21670">https://nvd.nist.gov/vuln/detail/CVE-2021-21670</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/86b7d7e789586575522650c60d591605facb1d70">https://github.com/jenkinsci/jenkins/commit/86b7d7e789586575522650c60d591605facb1d70</a></li>
<li><a href="https://github.com/advisories/GHSA-q4wp-8c99-69pw">https://github.com/advisories/GHSA-q4wp-8c99-69pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4wp-8c99-69pw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper permission checks allow canceling queue items and aborting builds in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q4wp-8c99-69pw</id>
        <link href="https://github.com/advisories/GHSA-q4wp-8c99-69pw"/>
        <updated>2023-12-07T13:41:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.299 and earlier, LTS 2.289.1 and earlier allows users to cancel queue items and abort builds of jobs for which they have Item/Cancel permission even when they do not have Item/Read permission.</p>
<p>Jenkins 2.300, LTS 2.289.2 requires that users have Item/Read permission for applicable types in addition to Item/Cancel permission.</p>
<p>As a workaround on earlier versions of Jenkins, do not grant Item/Cancel permission to users who do not have Item/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21670">https://nvd.nist.gov/vuln/detail/CVE-2021-21670</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278">https://www.jenkins.io/security/advisory/2021-06-30/#SECURITY-2278</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/06/30/1">http://www.openwall.com/lists/oss-security/2021/06/30/1</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/86b7d7e789586575522650c60d591605facb1d70">https://github.com/jenkinsci/jenkins/commit/86b7d7e789586575522650c60d591605facb1d70</a></li>
<li><a href="https://github.com/advisories/GHSA-q4wp-8c99-69pw">https://github.com/advisories/GHSA-q4wp-8c99-69pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4wp-8c99-69pw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:06:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:hp-application-automation-tools-plugin] SSL/TLS certificate validation unconditionally disabled by Jenkins Micro Focus Application Automation Tools Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q296-9j5x-fxf4</id>
        <link href="https://github.com/advisories/GHSA-q296-9j5x-fxf4"/>
        <updated>2023-12-07T13:38:14.000Z</updated>
        <content type="html"><![CDATA[<p>Micro Focus Application Automation Tools Plugin 6.7 and earlier unconditionally disables SSL/TLS certificate validation for connections to Service Virtualization servers.</p>
<p>Micro Focus Application Automation Tools Plugin 6.8 no longer disables SSL/TLS certificate validation unconditionally by default. It provides an option to disable SSL/TLS certification validation for connections to Service Virtualization servers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22511">https://nvd.nist.gov/vuln/detail/CVE-2021-22511</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2176">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2176</a></li>
<li><a href="https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/b286378aa22bc48ed77d259200cb6863a532c2df">https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/b286378aa22bc48ed77d259200cb6863a532c2df</a></li>
<li><a href="https://github.com/advisories/GHSA-q296-9j5x-fxf4">https://github.com/advisories/GHSA-q296-9j5x-fxf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q296-9j5x-fxf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2023-12-07T12:52:15.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/42e2c74049ddf5e0aca1fe6aadc7b24fdabb5494">https://github.com/jenkinsci/jenkins/commit/42e2c74049ddf5e0aca1fe6aadc7b24fdabb5494</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2023-12-07T12:52:15.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/42e2c74049ddf5e0aca1fe6aadc7b24fdabb5494">https://github.com/jenkinsci/jenkins/commit/42e2c74049ddf5e0aca1fe6aadc7b24fdabb5494</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
</feed>