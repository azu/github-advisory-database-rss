<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-19T09:01:17.945Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.checkmarx.jenkins:checkmarx] Stored XSS vulnerability in Jenkins Checkmarx Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p86x-75j8-w4xh</id>
        <link href="https://github.com/advisories/GHSA-p86x-75j8-w4xh"/>
        <updated>2022-12-16T23:00:52.000Z</updated>
        <content type="html"><![CDATA[<p>heckmarx Plugin processes Checkmarx service API responses and generates HTML reports from them for rendering on the Jenkins UI.</p>
<p>Checkmarx Plugin 2022.3.3 and earlier does not escape values returned from the Checkmarx service API before inserting them into HTML reports. This results in a stored cross-site scripting (XSS) vulnerability.</p>
<p>While Jenkins users without Overall/Administer permission are not allowed to configure the URL to the Checkmarx service, this could still be exploited via man-in-the-middle attacks.</p>
<p>Checkmarx Plugin 2022.4.3 escapes values returned from the Checkmarx service API before inserting them into HTML reports.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46684">https://nvd.nist.gov/vuln/detail/CVE-2022-46684</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-12-07/#SECURITY-2869">https://www.jenkins.io/security/advisory/2022-12-07/#SECURITY-2869</a></li>
<li><a href="https://github.com/advisories/GHSA-p86x-75j8-w4xh">https://github.com/advisories/GHSA-p86x-75j8-w4xh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p86x-75j8-w4xh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-12T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.fedoraproject.jenkins.plugins:copr] Credentials stored in plain text by Jenkins Copr Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4wx5-c723-xvwv</id>
        <link href="https://github.com/advisories/GHSA-4wx5-c723-xvwv"/>
        <updated>2022-12-16T23:00:34.000Z</updated>
        <content type="html"><![CDATA[<p>Copr Plugin 0.3 and earlier stores credentials unencrypted in job <code>config.xml</code> files as part of its configuration. These credentials can be viewed by users with Extended Read permission or access to the Jenkins controller file system.</p>
<p>Copr Plugin 0.6.1 stores these credentials encrypted. This change is effective once the job configuration is saved the next time.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2177">https://nvd.nist.gov/vuln/detail/CVE-2020-2177</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1556">https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1556</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/04/16/4">http://www.openwall.com/lists/oss-security/2020/04/16/4</a></li>
<li><a href="https://github.com/advisories/GHSA-4wx5-c723-xvwv">https://github.com/advisories/GHSA-4wx5-c723-xvwv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wx5-c723-xvwv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:15:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.parasoft:parasoft-findings] XXE vulnerability in Jenkins Parasoft Findings Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2rh4-xgmq-63jp</id>
        <link href="https://github.com/advisories/GHSA-2rh4-xgmq-63jp"/>
        <updated>2022-12-16T23:00:24.000Z</updated>
        <content type="html"><![CDATA[<p>Parasoft Findings Plugin implements a static analysis parser for various Parasoft products and integrates with <a href="https://plugins.jenkins.io/warnings">Warnings Plugin</a> (10.4.1 and earlier) and <a href="https://plugins.jenkins.io/warnings-ng">Warnings NG Plugin</a> (10.4.2 and newer).</p>
<p>Parasoft Findings Plugin 10.4.3 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks. This allows a user able to control the input files for the Parasoft Findings parser to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Parasoft Findings Plugin 10.4.4 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2178">https://nvd.nist.gov/vuln/detail/CVE-2020-2178</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1753">https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1753</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/04/16/4">http://www.openwall.com/lists/oss-security/2020/04/16/4</a></li>
<li><a href="https://github.com/advisories/GHSA-2rh4-xgmq-63jp">https://github.com/advisories/GHSA-2rh4-xgmq-63jp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rh4-xgmq-63jp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:15:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:yaml-axis] RCE vulnerability in Jenkins Yaml Axis Plugin]]></title>
        <id>https://github.com/advisories/GHSA-324h-2v7h-q3xx</id>
        <link href="https://github.com/advisories/GHSA-324h-2v7h-q3xx"/>
        <updated>2022-12-16T23:00:17.000Z</updated>
        <content type="html"><![CDATA[<p>Yaml Axis Plugin 0.2.0 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to configure a multi-configuration (Matrix) job, or control the contents of a previously configured job’s SCM repository.</p>
<p>Yaml Axis Plugin 0.2.1 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2179">https://nvd.nist.gov/vuln/detail/CVE-2020-2179</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1825">https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1825</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/04/16/4">http://www.openwall.com/lists/oss-security/2020/04/16/4</a></li>
<li><a href="https://github.com/advisories/GHSA-324h-2v7h-q3xx">https://github.com/advisories/GHSA-324h-2v7h-q3xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-324h-2v7h-q3xx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:15:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:aws-sam] RCE vulnerability in Jenkins AWS SAM Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qrm8-cw73-r9w8</id>
        <link href="https://github.com/advisories/GHSA-qrm8-cw73-r9w8"/>
        <updated>2022-12-16T22:59:59.000Z</updated>
        <content type="html"><![CDATA[<p>AWS SAM Plugin 1.2.2 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to configure a job or control the contents of a previously configured "AWS SAM deploy application" build step’s YAML SAM template file (<code>template.yaml</code> or equivalent) file.</p>
<p>AWS SAM Plugin 1.2.3 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2180">https://nvd.nist.gov/vuln/detail/CVE-2020-2180</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1736">https://jenkins.io/security/advisory/2020-04-16/#SECURITY-1736</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/04/16/4">http://www.openwall.com/lists/oss-security/2020/04/16/4</a></li>
<li><a href="https://github.com/advisories/GHSA-qrm8-cw73-r9w8">https://github.com/advisories/GHSA-qrm8-cw73-r9w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qrm8-cw73-r9w8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:15:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] Path traversal vulnerability in Jenkins Subversion Plugin allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-q58j-fhj7-j6fg</id>
        <link href="https://github.com/advisories/GHSA-q58j-fhj7-j6fg"/>
        <updated>2022-12-16T22:58:23.000Z</updated>
        <content type="html"><![CDATA[<p>Subversion Plugin 2.15.0 and earlier does not restrict the name of a file when looking up a subversion key file on the controller from an agent.</p>
<p>This allows attackers able to control agent processes to read arbitrary files on the Jenkins controller file system.</p>
<p>Subversion Plugin 2.15.1 checks for the presence of and prohibits directory separator characters as part of the file name, restricting it to the intended directory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21698">https://nvd.nist.gov/vuln/detail/CVE-2021-21698</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2506">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2506</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/11/04/3">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>
<li><a href="https://github.com/advisories/GHSA-q58j-fhj7-j6fg">https://github.com/advisories/GHSA-q58j-fhj7-j6fg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q58j-fhj7-j6fg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:copyartifact] Improper permission checks in Jenkins Copy Artifact Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vv89-xggx-qqh2</id>
        <link href="https://github.com/advisories/GHSA-vv89-xggx-qqh2"/>
        <updated>2022-12-16T22:58:08.000Z</updated>
        <content type="html"><![CDATA[<p>Copy Artifact Plugin 1.43.1 and earlier performs improper permission checks when determining whether a build can copy artifacts from another project build. This allows attackers, usually with Job/Configure permission, to configure jobs to copy artifacts from jobs they have no permission to access.</p>
<p>Copy Artifact Plugin 1.44 now properly performs permission checks when copying artifacts. When updating the plugin from a previous version, the previous behavior is retained ("Migration mode"). To enable the additional protections, switch to the new "Production mode". Doing so may cause existing jobs to fail to copy artifacts. For more information see the <a href="https://github.com/jenkinsci/copyartifact-plugin">plugin documentation</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2183">https://nvd.nist.gov/vuln/detail/CVE-2020-2183</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-988">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-988</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-vv89-xggx-qqh2">https://github.com/advisories/GHSA-vv89-xggx-qqh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv89-xggx-qqh2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins vulnerable to UDP amplification reflection attack]]></title>
        <id>https://github.com/advisories/GHSA-gpxv-776p-7gc7</id>
        <link href="https://github.com/advisories/GHSA-gpxv-776p-7gc7"/>
        <updated>2022-12-16T22:56:43.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.218 and earlier, LTS 2.204.1 and earlier supports two network discovery services (UDP multicast/broadcast and DNS multicast) by default.</p>
<p>The UDP multicast/broadcast service can be used in an amplification reflection attack, as very few bytes sent to the respective endpoint result in much larger responses: A single byte request to this service would respond with more than 100 bytes of Jenkins metadata which could be used in a DDoS attack on a Jenkins controller. Within the same network, spoofed UDP packets could also be sent to make two Jenkins controllers go into an infinite loop of replies to one another, thus causing a denial of service.</p>
<p>Jenkins 2.219, LTS 2.204.2 now disables both UDP multicast/broadcast and DNS multicast by default.</p>
<p>Administrators that need these features can re-enable them again by setting the system property <code>hudson.DNSMultiCast.disabled</code> to <code>false</code> (for DNS multicast) or the system property <code>hudson.udp</code> to <code>33848</code>, or another port (for UDP broadcast/multicast). These are the same system properties that controlled whether these features were enabled in the past, so any instances explicitly enabling these features by setting these system properties will continue to have them enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2100">https://nvd.nist.gov/vuln/detail/CVE-2020-2100</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1641">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1641</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-gpxv-776p-7gc7">https://github.com/advisories/GHSA-gpxv-776p-7gc7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gpxv-776p-7gc7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins vulnerable to UDP amplification reflection attack]]></title>
        <id>https://github.com/advisories/GHSA-gpxv-776p-7gc7</id>
        <link href="https://github.com/advisories/GHSA-gpxv-776p-7gc7"/>
        <updated>2022-12-16T22:56:43.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.218 and earlier, LTS 2.204.1 and earlier supports two network discovery services (UDP multicast/broadcast and DNS multicast) by default.</p>
<p>The UDP multicast/broadcast service can be used in an amplification reflection attack, as very few bytes sent to the respective endpoint result in much larger responses: A single byte request to this service would respond with more than 100 bytes of Jenkins metadata which could be used in a DDoS attack on a Jenkins controller. Within the same network, spoofed UDP packets could also be sent to make two Jenkins controllers go into an infinite loop of replies to one another, thus causing a denial of service.</p>
<p>Jenkins 2.219, LTS 2.204.2 now disables both UDP multicast/broadcast and DNS multicast by default.</p>
<p>Administrators that need these features can re-enable them again by setting the system property <code>hudson.DNSMultiCast.disabled</code> to <code>false</code> (for DNS multicast) or the system property <code>hudson.udp</code> to <code>33848</code>, or another port (for UDP broadcast/multicast). These are the same system properties that controlled whether these features were enabled in the past, so any instances explicitly enabling these features by setting these system properties will continue to have them enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2100">https://nvd.nist.gov/vuln/detail/CVE-2020-2100</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0402">https://access.redhat.com/errata/RHBA-2020:0402</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2020:0675">https://access.redhat.com/errata/RHBA-2020:0675</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0681">https://access.redhat.com/errata/RHSA-2020:0681</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0683">https://access.redhat.com/errata/RHSA-2020:0683</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1641">https://jenkins.io/security/advisory/2020-01-29/#SECURITY-1641</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/29/1">http://www.openwall.com/lists/oss-security/2020/01/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-gpxv-776p-7gc7">https://github.com/advisories/GHSA-gpxv-776p-7gc7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gpxv-776p-7gc7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cvs] CSRF vulnerability in Jenkins CVS Plugin]]></title>
        <id>https://github.com/advisories/GHSA-63mw-hp3h-gc77</id>
        <link href="https://github.com/advisories/GHSA-63mw-hp3h-gc77"/>
        <updated>2022-12-16T22:56:28.000Z</updated>
        <content type="html"><![CDATA[<p>CVS Plugin 2.15 and earlier does not require POST requests in several HTTP endpoints, resulting in cross-site request forgery (CSRF) vulnerabilities. This allows attackers to create and manipulate tags, and to connect to an attacker-specified URL.</p>
<p>CVS Plugin 2.16 now requires POST requests for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2184">https://nvd.nist.gov/vuln/detail/CVE-2020-2184</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1094">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1094</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-63mw-hp3h-gc77">https://github.com/advisories/GHSA-63mw-hp3h-gc77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-63mw-hp3h-gc77</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ec2] CSRF vulnerability in Amazon EC2 Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w6hw-57jq-h7f5</id>
        <link href="https://github.com/advisories/GHSA-w6hw-57jq-h7f5"/>
        <updated>2022-12-16T22:55:35.000Z</updated>
        <content type="html"><![CDATA[<p>Amazon EC2 Plugin 1.50.1 and earlier does not require POST requests in several HTTP endpoints, resulting in cross-site request forgery (CSRF) vulnerabilities. This allows an attacker to provision instances with an attacker-specified template ID.</p>
<p>Amazon EC2 Plugin 1.50.2 now requires POST requests for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2186">https://nvd.nist.gov/vuln/detail/CVE-2020-2186</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1408">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1408</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-w6hw-57jq-h7f5">https://github.com/advisories/GHSA-w6hw-57jq-h7f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6hw-57jq-h7f5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ec2] Lack of SSL/TLS certificate and hostname validation in Amazon EC2 Plugin]]></title>
        <id>https://github.com/advisories/GHSA-c89c-pvm7-33wj</id>
        <link href="https://github.com/advisories/GHSA-c89c-pvm7-33wj"/>
        <updated>2022-12-16T22:48:50.000Z</updated>
        <content type="html"><![CDATA[<p>Amazon EC2 Plugin connects to Windows agents via HTTPS.</p>
<p>Amazon EC2 Plugin 1.50.1 and earlier unconditionally accepts self-signed HTTPS certificates and does not perform hostname validation when connecting to Windows agents. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections to build agents.</p>
<p>Amazon EC2 Plugin 1.50.2 by default no longer accepts self-signed HTTPS certificates and performs hostname validation. A new configuration option allows restoring the previous, unsafe behavior. For more information see <a href="https://github.com/jenkinsci/ec2-plugin/#securing-the-connection-to-windows-amis">the plugin documentation</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2187">https://nvd.nist.gov/vuln/detail/CVE-2020-2187</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1528">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1528</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-c89c-pvm7-33wj">https://github.com/advisories/GHSA-c89c-pvm7-33wj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c89c-pvm7-33wj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ec2] Users with Overall/Read access can enumerate credentials IDs in Amazon EC2 Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rmp9-mc8w-mqf3</id>
        <link href="https://github.com/advisories/GHSA-rmp9-mc8w-mqf3"/>
        <updated>2022-12-16T22:48:39.000Z</updated>
        <content type="html"><![CDATA[<p>Amazon EC2 Plugin provides a list of applicable credentials IDs to allow users configuring the plugin to select the one to use.</p>
<p>This functionality does not correctly check permissions in Amazon EC2 Plugin 1.50.1 and earlier, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>An enumeration of credentials IDs in Amazon EC2 Plugin 1.50.2 now requires Overall/Administer permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2188">https://nvd.nist.gov/vuln/detail/CVE-2020-2188</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1844">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1844</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-rmp9-mc8w-mqf3">https://github.com/advisories/GHSA-rmp9-mc8w-mqf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmp9-mc8w-mqf3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:scm-filter-jervis] RCE vulnerability in SCM Filter Jervis Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4hhq-j3xw-wj89</id>
        <link href="https://github.com/advisories/GHSA-4hhq-j3xw-wj89"/>
        <updated>2022-12-16T22:48:19.000Z</updated>
        <content type="html"><![CDATA[<p>SCM Filter Jervis Plugin 0.2.1 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to configure jobs with the filter, or control the contents of a previously configured job’s SCM repository.</p>
<p>SCM Filter Jervis Plugin 0.3 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2189">https://nvd.nist.gov/vuln/detail/CVE-2020-2189</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1826">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1826</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4hhq-j3xw-wj89">https://github.com/advisories/GHSA-4hhq-j3xw-wj89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hhq-j3xw-wj89</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:shelve-project-plugin] CSRF vulnerability in Jenkins Shelve Project Plugin]]></title>
        <id>https://github.com/advisories/GHSA-9f37-ggxm-h6wx</id>
        <link href="https://github.com/advisories/GHSA-9f37-ggxm-h6wx"/>
        <updated>2022-12-16T22:26:39.000Z</updated>
        <content type="html"><![CDATA[<p>Shelve Project Plugin 3.0 and earlier does not require POST requests for HTTP endpoints, resulting in cross-site request forgery (CSRF) vulnerabilities.</p>
<p>These vulnerabilities allow attackers to shelve, unshelve, or delete a project.</p>
<p>Shelve Project Plugin 3.1 requires POST requests for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2321">https://nvd.nist.gov/vuln/detail/CVE-2020-2321</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2108">https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2108</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/12/03/2">http://www.openwall.com/lists/oss-security/2020/12/03/2</a></li>
<li><a href="https://github.com/advisories/GHSA-9f37-ggxm-h6wx">https://github.com/advisories/GHSA-9f37-ggxm-h6wx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9f37-ggxm-h6wx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:35:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials-binding] Improper masking of some secrets in Jenkins Credentials Binding Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7ff8-qfwx-8gx5</id>
        <link href="https://github.com/advisories/GHSA-7ff8-qfwx-8gx5"/>
        <updated>2022-12-16T22:25:34.000Z</updated>
        <content type="html"><![CDATA[<p>Credentials Binding Plugin allows specifying passwords and other secrets as environment variables, and will hide them from console output in builds. As a side effect of the fix for <a href="https://www.jenkins.io/security/advisory/2018-02-05/#credentials-binding">SECURITY-698</a>, <code>$</code> characters in secrets are escaped to <code>$$</code>. This will then be expanded to $ again once the secret is passed to (post) build steps.</p>
<p>Credentials Binding Plugin 1.22 and earlier does not mask the escaped form of the secret (containing <code>$$</code>). This occurs for example in the "Execute Maven top-level targets" build step included in Jenkins.\n\nCredentials Binding Plugin 1.23 now masks secrets both in their original form and with escaped <code>$</code> characters, so they will be masked even if printed before value expansion.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2182">https://nvd.nist.gov/vuln/detail/CVE-2020-2182</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1835">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1835</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7ff8-qfwx-8gx5">https://github.com/advisories/GHSA-7ff8-qfwx-8gx5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7ff8-qfwx-8gx5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:credentials-binding] Secrets are not masked by Jenkins Credentials Binding Plugin in builds without build steps]]></title>
        <id>https://github.com/advisories/GHSA-43j2-r4v3-m8jp</id>
        <link href="https://github.com/advisories/GHSA-43j2-r4v3-m8jp"/>
        <updated>2022-12-16T22:22:16.000Z</updated>
        <content type="html"><![CDATA[<p>Credentials Binding Plugin 1.22 and earlier does not mask (i.e., replace with asterisks) secrets in the build log when the build contains no build steps.</p>
<p>Credentials Binding Plugin 1.23 now masks secrets when the build contains no build steps.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2181">https://nvd.nist.gov/vuln/detail/CVE-2020-2181</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1374">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1374</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/advisories/GHSA-43j2-r4v3-m8jp">https://github.com/advisories/GHSA-43j2-r4v3-m8jp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43j2-r4v3-m8jp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:chaos-monkey] Missing permission checks in Jenkins Chaos Monkey Plugin]]></title>
        <id>https://github.com/advisories/GHSA-hx53-635r-vmv8</id>
        <link href="https://github.com/advisories/GHSA-hx53-635r-vmv8"/>
        <updated>2022-12-16T22:20:55.000Z</updated>
        <content type="html"><![CDATA[<p>Chaos Monkey Plugin 0.4 and earlier does not perform permission checks in an HTTP endpoint.</p>
<p>This allows attackers with Overall/Read permission to access the Chaos Monkey page and to see the history of actions.</p>
<p>Chaos Monkey Plugin 0.4.1 requires Overall/Administer permission to access the Chaos Monkey page and to see the history of actions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2323">https://nvd.nist.gov/vuln/detail/CVE-2020-2323</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2109%20(2)">https://www.jenkins.io/security/advisory/2020-12-03/#SECURITY-2109%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/12/03/2">http://www.openwall.com/lists/oss-security/2020/12/03/2</a></li>
<li><a href="https://github.com/advisories/GHSA-hx53-635r-vmv8">https://github.com/advisories/GHSA-hx53-635r-vmv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hx53-635r-vmv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:35:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.scif:scifio] SCIFIO vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-cmwm-45mj-mpg3</id>
        <link href="https://github.com/advisories/GHSA-cmwm-45mj-mpg3"/>
        <updated>2022-12-16T21:57:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as critical was found in scifio. Affected by this vulnerability is the function downloadAndUnpackResource of the file src/test/java/io/scif/util/DefaultSampleFilesService.java of the component ZIP File Handler. The manipulation leads to path traversal. The attack can be launched remotely. The patch is at commit fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215803.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4493">https://nvd.nist.gov/vuln/detail/CVE-2022-4493</a></li>
<li><a href="https://github.com/scifio/scifio/commit/fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31">https://github.com/scifio/scifio/commit/fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31</a></li>
<li><a href="https://vuldb.com/?id.215803">https://vuldb.com/?id.215803</a></li>
<li><a href="https://github.com/advisories/GHSA-cmwm-45mj-mpg3">https://github.com/advisories/GHSA-cmwm-45mj-mpg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmwm-45mj-mpg3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-14T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cn.hutool:hutool-core] HuTool vulnerable to Uncontrolled Resource Consumption]]></title>
        <id>https://github.com/advisories/GHSA-47vx-fqr5-j2gw</id>
        <link href="https://github.com/advisories/GHSA-47vx-fqr5-j2gw"/>
        <updated>2022-12-16T21:56:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic was found in Dromara HuTool up to 5.8.10. This vulnerability affects unknown code of the file cn.hutool.core.util.ZipUtil.java. The manipulation leads to resource consumption. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 5.8.11 is able to address this issue. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4565">https://nvd.nist.gov/vuln/detail/CVE-2022-4565</a></li>
<li><a href="https://github.com/dromara/hutool/issues/2797">https://github.com/dromara/hutool/issues/2797</a></li>
<li><a href="https://vuldb.com/?id.215974">https://vuldb.com/?id.215974</a></li>
<li><a href="https://github.com/advisories/GHSA-47vx-fqr5-j2gw">https://github.com/advisories/GHSA-47vx-fqr5-j2gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47vx-fqr5-j2gw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-16T21:30:44.000Z</published>
    </entry>
</feed>