<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-01-05T15:01:26.925Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:email-ext] Cross-site Scripting in Jenkins Email Extension Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p2fr-mq9m-6w6p</id>
        <link href="https://github.com/advisories/GHSA-p2fr-mq9m-6w6p"/>
        <updated>2024-01-05T13:45:05.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Email Extension Plugin 2.93 and earlier does not escape, sanitize, or sandbox rendered email template output or log output generated during template rendering, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to create or change custom email templates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25764">https://nvd.nist.gov/vuln/detail/CVE-2023-25764</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-02-15/#SECURITY-2934">https://www.jenkins.io/security/advisory/2023-02-15/#SECURITY-2934</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/02/15/4">http://www.openwall.com/lists/oss-security/2023/02/15/4</a></li>
<li><a href="https://github.com/jenkinsci/email-ext-plugin/commit/7b2bd251aa0193d009d85b713362d965dab262d0">https://github.com/jenkinsci/email-ext-plugin/commit/7b2bd251aa0193d009d85b713362d965dab262d0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2fr-mq9m-6w6p">https://github.com/advisories/GHSA-p2fr-mq9m-6w6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2fr-mq9m-6w6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-15T15:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.coravy.hudson.plugins.github:github] Jenkins GitHub plugin uses weak webhook signature function]]></title>
        <id>https://github.com/advisories/GHSA-mxcc-7h5m-x57r</id>
        <link href="https://github.com/advisories/GHSA-mxcc-7h5m-x57r"/>
        <updated>2024-01-05T13:44:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins GitHub Plugin 1.34.4 and earlier uses a non-constant time comparison function when checking whether the provided and computed webhook signatures are equal, allowing attackers to use statistical methods to obtain a valid webhook signature. GitHub Plugin 1.34.5 uses a constant-time comparison when validating the webhook signature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36885">https://nvd.nist.gov/vuln/detail/CVE-2022-36885</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1849">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1849</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/27/1">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>
<li><a href="https://github.com/jenkinsci/github-plugin/releases/tag/v1.34.5">https://github.com/jenkinsci/github-plugin/releases/tag/v1.34.5</a></li>
<li><a href="https://plugins.jenkins.io/github-issues/">https://plugins.jenkins.io/github-issues/</a></li>
<li><a href="https://github.com/jenkinsci/github-plugin/commit/11d1d79ebf85248dc43432389746c1ecc3452b6a">https://github.com/jenkinsci/github-plugin/commit/11d1d79ebf85248dc43432389746c1ecc3452b6a</a></li>
<li><a href="https://github.com/advisories/GHSA-mxcc-7h5m-x57r">https://github.com/advisories/GHSA-mxcc-7h5m-x57r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxcc-7h5m-x57r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-07-28T00:00:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:codedx] Jenkins Code Dx Plugin missing permission checks]]></title>
        <id>https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</id>
        <link href="https://github.com/advisories/GHSA-mjmf-7wjw-f5xx"/>
        <updated>2024-01-05T13:44:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Code Dx Plugin 3.1.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Code Dx Plugin 4.0.0 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2631">https://nvd.nist.gov/vuln/detail/CVE-2023-2631</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3118</a></li>
<li><a href="https://github.com/jenkinsci/codedx-plugin/commit/0214f30488ea8481f01e4b14a861e13d75bebb8b">https://github.com/jenkinsci/codedx-plugin/commit/0214f30488ea8481f01e4b14a861e13d75bebb8b</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmf-7wjw-f5xx">https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmf-7wjw-f5xx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-16T21:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.compuware.jenkins:compuware-xpediter-code-coverage] Agent-to-controller security bypass vulnerability in Jenkins Compuware Xpediter Code Coverage Plugin]]></title>
        <id>https://github.com/advisories/GHSA-mfcw-83qg-4vw3</id>
        <link href="https://github.com/advisories/GHSA-mfcw-83qg-4vw3"/>
        <updated>2024-01-05T13:43:59.000Z</updated>
        <content type="html"><![CDATA[<p>Compuware Xpediter Code Coverage Plugin 1.0.7 and earlier implements an agent/controller message that does not limit where it can be executed.</p>
<p>It allows attackers able to control agent processes to obtain the values of Java system properties from the Jenkins controller process.</p>
<p>This vulnerability is only exploitable in Jenkins 2.318 and earlier, LTS 2.303.2 and earlier. See the <a href="https://www.jenkins.io/doc/upgrade-guide/2.303/#upgrading-to-jenkins-lts-2-303-3">LTS upgrade guide</a>.</p>
<p>Compuware Xpediter Code Coverage Plugin 1.0.8 restricts execution of the agent/controller message to agents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43424">https://nvd.nist.gov/vuln/detail/CVE-2022-43424</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2627">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2627</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/jenkinsci/compuware-xpediter-code-coverage-plugin/commit/e506fc9e77a2609f6a5aa331e052d35be652071c">https://github.com/jenkinsci/compuware-xpediter-code-coverage-plugin/commit/e506fc9e77a2609f6a5aa331e052d35be652071c</a></li>
<li><a href="https://github.com/advisories/GHSA-mfcw-83qg-4vw3">https://github.com/advisories/GHSA-mfcw-83qg-4vw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfcw-83qg-4vw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T19:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.mabl.integration.jenkins:mabl-integration] Jenkins mabl Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-p947-m8xv</id>
        <link href="https://github.com/advisories/GHSA-m9jj-p947-m8xv"/>
        <updated>2024-01-05T13:40:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins mabl Plugin 0.0.46 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>mabl Plugin 0.0.47 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37953">https://nvd.nist.gov/vuln/detail/CVE-2023-37953</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-07-12/#SECURITY-3127">https://www.jenkins.io/security/advisory/2023-07-12/#SECURITY-3127</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/07/12/2">http://www.openwall.com/lists/oss-security/2023/07/12/2</a></li>
<li><a href="https://github.com/jenkinsci/mabl-integration-plugin/commit/4e21f498b0704d62f5a6114fcd8c274a5f440b18">https://github.com/jenkinsci/mabl-integration-plugin/commit/4e21f498b0704d62f5a6114fcd8c274a5f440b18</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-p947-m8xv">https://github.com/advisories/GHSA-m9jj-p947-m8xv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-p947-m8xv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-12T18:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sonar-gerrit] Jenkins Sonar Gerrit Plugin vulnerable to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-m82g-fv7v-h64m</id>
        <link href="https://github.com/advisories/GHSA-m82g-fv7v-h64m"/>
        <updated>2024-01-05T13:39:35.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery (CSRF) vulnerability in Jenkins Sonar Gerrit Plugin 377.v8f3808963dc5 and earlier allows attackers to have Jenkins connect to Gerrit servers (previously configured by Jenkins administrators) using attacker-specified credentials IDs obtained through another method, potentially capturing credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46688">https://nvd.nist.gov/vuln/detail/CVE-2022-46688</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-12-07/#SECURITY-1002">https://www.jenkins.io/security/advisory/2022-12-07/#SECURITY-1002</a></li>
<li><a href="https://github.com/jenkinsci/sonar-gerrit-plugin/commit/f4646d4df0870bd06b76de86309bb38fbd929d54">https://github.com/jenkinsci/sonar-gerrit-plugin/commit/f4646d4df0870bd06b76de86309bb38fbd929d54</a></li>
<li><a href="https://github.com/advisories/GHSA-m82g-fv7v-h64m">https://github.com/advisories/GHSA-m82g-fv7v-h64m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m82g-fv7v-h64m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-12T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:git] Improper masking of credentials Jenkins in Git Plugin]]></title>
        <id>https://github.com/advisories/GHSA-jxmw-3gxf-fprh</id>
        <link href="https://github.com/advisories/GHSA-jxmw-3gxf-fprh"/>
        <updated>2024-01-05T13:38:35.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Git Plugin 4.11.4 and earlier does not properly mask (i.e., replace with asterisks) credentials in the build log provided by the Git Username and Password (<code>gitUsernamePassword</code>) credentials binding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38663">https://nvd.nist.gov/vuln/detail/CVE-2022-38663</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-08-23/#SECURITY-2796">https://www.jenkins.io/security/advisory/2022-08-23/#SECURITY-2796</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/08/23/2">http://www.openwall.com/lists/oss-security/2022/08/23/2</a></li>
<li><a href="https://github.com/jenkinsci/git-plugin/commit/3241db9cc696711c871d4e78b3c3c0daad0740c3">https://github.com/jenkinsci/git-plugin/commit/3241db9cc696711c871d4e78b3c3c0daad0740c3</a></li>
<li><a href="https://github.com/advisories/GHSA-jxmw-3gxf-fprh">https://github.com/advisories/GHSA-jxmw-3gxf-fprh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jxmw-3gxf-fprh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-24T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mercurial] Webhook endpoint discloses job names to unauthorized users in Jenkins Mercurial Plugin]]></title>
        <id>https://github.com/advisories/GHSA-j7pg-863g-22p6</id>
        <link href="https://github.com/advisories/GHSA-j7pg-863g-22p6"/>
        <updated>2024-01-05T13:25:01.000Z</updated>
        <content type="html"><![CDATA[<p>Mercurial Plugin provides a webhook endpoint at <code>/mercurial/notifyCommit</code> that can be used to notify Jenkins of changes to an SCM repository. This endpoint receives a repository URL, and Jenkins will schedule polling for all jobs configured with the specified repository. It can be accessed with GET requests and without authentication.</p>
<p>In Mercurial Plugin 1251.va_b_121f184902 and earlier, the output of the webhook endpoint will provide information about which jobs were triggered or scheduled for polling, including jobs the user has no permission to access. This allows attackers with knowledge of Mercurial repository URLs to obtain information about the existence of jobs configured with this Mercurial repository.</p>
<p>Mercurial Plugin 1260.vdfb_723cdcc81 does not provide the names of jobs for which polling is triggered unless the user has the appropriate Item/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43410">https://nvd.nist.gov/vuln/detail/CVE-2022-43410</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2831">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2831</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/jenkinsci/mercurial-plugin/commit/dfb723cdcc815875cdf63abd32e314ced5e95ac9">https://github.com/jenkinsci/mercurial-plugin/commit/dfb723cdcc815875cdf63abd32e314ced5e95ac9</a></li>
<li><a href="https://github.com/advisories/GHSA-j7pg-863g-22p6">https://github.com/advisories/GHSA-j7pg-863g-22p6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7pg-863g-22p6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T19:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-j664-qhh4-hpf8</id>
        <link href="https://github.com/advisories/GHSA-j664-qhh4-hpf8"/>
        <updated>2024-01-05T13:24:32.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.270 through 2.393 (both inclusive), LTS 2.277.1 through 2.375.3 (both inclusive) does not escape the Jenkins version a plugin depends on when rendering the error message stating its incompatibility with the current version of Jenkins, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to provide plugins to the configured update sites and have this message shown by Jenkins instances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27898">https://nvd.nist.gov/vuln/detail/CVE-2023-27898</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3037">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3037</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/59ac866d9946d7c296023da0ea78baafd4cf71eb">https://github.com/jenkinsci/jenkins/commit/59ac866d9946d7c296023da0ea78baafd4cf71eb</a></li>
<li><a href="https://github.com/advisories/GHSA-j664-qhh4-hpf8">https://github.com/advisories/GHSA-j664-qhh4-hpf8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j664-qhh4-hpf8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-j664-qhh4-hpf8</id>
        <link href="https://github.com/advisories/GHSA-j664-qhh4-hpf8"/>
        <updated>2024-01-05T13:24:32.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.270 through 2.393 (both inclusive), LTS 2.277.1 through 2.375.3 (both inclusive) does not escape the Jenkins version a plugin depends on when rendering the error message stating its incompatibility with the current version of Jenkins, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to provide plugins to the configured update sites and have this message shown by Jenkins instances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27898">https://nvd.nist.gov/vuln/detail/CVE-2023-27898</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3037">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-3037</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/59ac866d9946d7c296023da0ea78baafd4cf71eb">https://github.com/jenkinsci/jenkins/commit/59ac866d9946d7c296023da0ea78baafd4cf71eb</a></li>
<li><a href="https://github.com/advisories/GHSA-j664-qhh4-hpf8">https://github.com/advisories/GHSA-j664-qhh4-hpf8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j664-qhh4-hpf8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cas-plugin] Jenkins CAS Plugin Session Fixation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hjh8-9gxh-cx4x</id>
        <link href="https://github.com/advisories/GHSA-hjh8-9gxh-cx4x"/>
        <updated>2024-01-05T13:23:54.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins CAS Plugin 1.6.2 and earlier does not invalidate the existing session on login.</p>
<p>This allows attackers to use social engineering techniques to gain administrator access to Jenkins.</p>
<p>CAS Plugin 1.6.3 invalidates the existing session on login.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32997">https://nvd.nist.gov/vuln/detail/CVE-2023-32997</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3000">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3000</a></li>
<li><a href="https://github.com/jenkinsci/cas-plugin/commit/3a33cc0175bcc18801faf9125afb38d495b5995f">https://github.com/jenkinsci/cas-plugin/commit/3a33cc0175bcc18801faf9125afb38d495b5995f</a></li>
<li><a href="https://github.com/advisories/GHSA-hjh8-9gxh-cx4x">https://github.com/advisories/GHSA-hjh8-9gxh-cx4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjh8-9gxh-cx4x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-16T18:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2024-01-05T13:23:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins creates a temporary file when a plugin is uploaded from an administrator’s computer.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 creates this temporary file in the system temporary directory with the default permissions for newly created files.</p>
<p>If these permissions are overly permissive, they may allow attackers with access to the Jenkins controller file system to read and write the file before it is installed in Jenkins, potentially resulting in arbitrary code execution.</p>
<p>This vulnerability only affects operating systems using a shared temporary directory for all users (typically Linux). Additionally, the default permissions for newly created files generally only allows attackers to read the temporary file.
Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 creates the temporary file with more restrictive permissions.</p>
<p>As a workaround, you can set a different path as your default temporary directory using the Java system property java.io.tmpdir, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17">https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2024-01-05T13:23:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins creates a temporary file when a plugin is uploaded from an administrator’s computer.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 creates this temporary file in the system temporary directory with the default permissions for newly created files.</p>
<p>If these permissions are overly permissive, they may allow attackers with access to the Jenkins controller file system to read and write the file before it is installed in Jenkins, potentially resulting in arbitrary code execution.</p>
<p>This vulnerability only affects operating systems using a shared temporary directory for all users (typically Linux). Additionally, the default permissions for newly created files generally only allows attackers to read the temporary file.
Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 creates the temporary file with more restrictive permissions.</p>
<p>As a workaround, you can set a different path as your default temporary directory using the Java system property java.io.tmpdir, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17">https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Incorrect Authorization in Jenkins Core]]></title>
        <id>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</id>
        <link href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33"/>
        <updated>2024-01-05T13:23:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins creates a temporary file when a plugin is uploaded from an administrator’s computer.</p>
<p>Jenkins 2.393 and earlier, LTS 2.375.3 and earlier, and prior to LTS 2.387.1 creates this temporary file in the system temporary directory with the default permissions for newly created files.</p>
<p>If these permissions are overly permissive, they may allow attackers with access to the Jenkins controller file system to read and write the file before it is installed in Jenkins, potentially resulting in arbitrary code execution.</p>
<p>This vulnerability only affects operating systems using a shared temporary directory for all users (typically Linux). Additionally, the default permissions for newly created files generally only allows attackers to read the temporary file.
Jenkins 2.394, LTS 2.375.4, and LTS 2.387.1 creates the temporary file with more restrictive permissions.</p>
<p>As a workaround, you can set a different path as your default temporary directory using the Java system property java.io.tmpdir, if you’re concerned about this issue but unable to immediately update Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27899">https://nvd.nist.gov/vuln/detail/CVE-2023-27899</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823">https://www.jenkins.io/security/advisory/2023-03-08/#SECURITY-2823</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json">https://github.com/CVEProject/cvelist/blob/master/2023/27xxx/CVE-2023-27899.json</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17">https://github.com/jenkinsci/jenkins/commit/f39c11fa27b14923260c4c9b896f0f373e2a0a17</a></li>
<li><a href="https://github.com/advisories/GHSA-hf9h-vv4m-2f33">https://github.com/advisories/GHSA-hf9h-vv4m-2f33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf9h-vv4m-2f33</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-10T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:teamconcert] Jenkins Team Concert Plugin does not perform permission checks in methods implementing form validation]]></title>
        <id>https://github.com/advisories/GHSA-hcpw-v727-64qh</id>
        <link href="https://github.com/advisories/GHSA-hcpw-v727-64qh"/>
        <updated>2024-01-05T13:22:51.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Team Concert Plugin 2.4.1 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to check for the existence of an attacker-specified file path on the Jenkins controller file system.</p>
<p>Team Concert Plugin 2.4.2 requires Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3315">https://nvd.nist.gov/vuln/detail/CVE-2023-3315</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2932">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2932</a></li>
<li><a href="https://github.com/jenkinsci/teamconcert-plugin/commit/c77dc8406070edead2a697f26f629465fef72d16">https://github.com/jenkinsci/teamconcert-plugin/commit/c77dc8406070edead2a697f26f629465fef72d16</a></li>
<li><a href="https://github.com/advisories/GHSA-hcpw-v727-64qh">https://github.com/advisories/GHSA-hcpw-v727-64qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcpw-v727-64qh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-19T21:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:email-ext] Cross-site Scripting in Jenkins Email Extension Plugin]]></title>
        <id>https://github.com/advisories/GHSA-h97r-fchm-m23x</id>
        <link href="https://github.com/advisories/GHSA-h97r-fchm-m23x"/>
        <updated>2024-01-05T13:21:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Email Extension Plugin 2.93 and earlier does not escape various fields included in bundled email templates, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control affected fields.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25763">https://nvd.nist.gov/vuln/detail/CVE-2023-25763</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-02-15/#SECURITY-2931">https://www.jenkins.io/security/advisory/2023-02-15/#SECURITY-2931</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/02/15/4">http://www.openwall.com/lists/oss-security/2023/02/15/4</a></li>
<li><a href="https://github.com/jenkinsci/email-ext-plugin/commit/ebfb97475ec6491f28b88a8b5acbb99ff36f4d7f">https://github.com/jenkinsci/email-ext-plugin/commit/ebfb97475ec6491f28b88a8b5acbb99ff36f4d7f</a></li>
<li><a href="https://github.com/advisories/GHSA-h97r-fchm-m23x">https://github.com/advisories/GHSA-h97r-fchm-m23x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h97r-fchm-m23x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-15T15:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:naginator] Cross-site Scripting in Jenkins Naginator Plugin]]></title>
        <id>https://github.com/advisories/GHSA-h8hf-hxx6-5g6v</id>
        <link href="https://github.com/advisories/GHSA-h8hf-hxx6-5g6v"/>
        <updated>2024-01-05T13:21:06.000Z</updated>
        <content type="html"><![CDATA[<p>Naginator Plugin 1.18.1 and earlier does not escape display names of source builds in builds that were triggered via Retry action.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to edit build display names.</p>
<p>Naginator Plugin 1.18.2 escapes display names of source builds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45382">https://nvd.nist.gov/vuln/detail/CVE-2022-45382</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2946">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2946</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/15/4">http://www.openwall.com/lists/oss-security/2022/11/15/4</a></li>
<li><a href="https://github.com/jenkinsci/naginator-plugin/commit/c335cdd1562333898216bbe137bbe2991c6a225f">https://github.com/jenkinsci/naginator-plugin/commit/c335cdd1562333898216bbe137bbe2991c6a225f</a></li>
<li><a href="https://github.com/advisories/GHSA-h8hf-hxx6-5g6v">https://github.com/advisories/GHSA-h8hf-hxx6-5g6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8hf-hxx6-5g6v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-16T12:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:testng-plugin] Jenkins TestNG Results Plugin Stored Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h3hg-r97v-5r9w</id>
        <link href="https://github.com/advisories/GHSA-h3hg-r97v-5r9w"/>
        <updated>2024-01-05T13:20:05.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins TestNG Results Plugin 730.v4c5283037693 and earlier does not escape several values that are parsed from TestNG report files and displayed on the plugin’s test information pages.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to provide a crafted TestNG report file.</p>
<p>TestNG Results Plugin 730.732.v959a_3a_a_eb_a_72 escapes the affected values that are parsed from TestNG report files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32984">https://nvd.nist.gov/vuln/detail/CVE-2023-32984</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3047">https://www.jenkins.io/security/advisory/2023-05-16/#SECURITY-3047</a></li>
<li><a href="https://github.com/jenkinsci/testng-plugin-plugin/commit/5f3d83ca56c0657fc09af7ea70cfbdd691adeaab">https://github.com/jenkinsci/testng-plugin-plugin/commit/5f3d83ca56c0657fc09af7ea70cfbdd691adeaab</a></li>
<li><a href="https://github.com/advisories/GHSA-h3hg-r97v-5r9w">https://github.com/advisories/GHSA-h3hg-r97v-5r9w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3hg-r97v-5r9w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-16T18:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts2-core] Apache Struts allows entering a custom URL in a form field if built-in URLValidator is used]]></title>
        <id>https://github.com/advisories/GHSA-x5x7-3v85-wpc4</id>
        <link href="https://github.com/advisories/GHSA-x5x7-3v85-wpc4"/>
        <updated>2024-01-04T23:26:49.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Struts 2.3.7 through 2.3.33 and 2.5 through 2.5.12, if an application allows entering a URL in a form field and built-in URLValidator is used, it is possible to prepare a special URL which will be used to overload server process when performing validation of the URL.  NOTE: this vulnerability exists because of an incomplete fix for S2-047 / CVE-2017-7672.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-9804">https://nvd.nist.gov/vuln/detail/CVE-2017-9804</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20180629-0001/">https://security.netapp.com/advisory/ntap-20180629-0001/</a></li>
<li><a href="https://struts.apache.org/docs/s2-050.html">https://struts.apache.org/docs/s2-050.html</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170907-struts2">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170907-struts2</a></li>
<li><a href="http://www.arubanetworks.com/assets/alert/ARUBA-PSA-2017-003.txt">http://www.arubanetworks.com/assets/alert/ARUBA-PSA-2017-003.txt</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/alert-cve-2017-9805-3889403.html">http://www.oracle.com/technetwork/security-advisory/alert-cve-2017-9805-3889403.html</a></li>
<li><a href="https://github.com/apache/struts/commit/418a20c0594f23764fe29ced400c1219239899a">https://github.com/apache/struts/commit/418a20c0594f23764fe29ced400c1219239899a</a></li>
<li><a href="https://web.archive.org/web/20171113165852/http://www.securityfocus.com/bid/100612">https://web.archive.org/web/20171113165852/http://www.securityfocus.com/bid/100612</a></li>
<li><a href="https://web.archive.org/web/20201021075553/http://www.securitytracker.com/id/1039261">https://web.archive.org/web/20201021075553/http://www.securitytracker.com/id/1039261</a></li>
<li><a href="https://github.com/advisories/GHSA-x5x7-3v85-wpc4">https://github.com/advisories/GHSA-x5x7-3v85-wpc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5x7-3v85-wpc4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-10-16T19:37:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts2-core] Apache Struts allows entering a custom URL in a form field if built-in URLValidator is used]]></title>
        <id>https://github.com/advisories/GHSA-x5x7-3v85-wpc4</id>
        <link href="https://github.com/advisories/GHSA-x5x7-3v85-wpc4"/>
        <updated>2024-01-04T23:26:49.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Struts 2.3.7 through 2.3.33 and 2.5 through 2.5.12, if an application allows entering a URL in a form field and built-in URLValidator is used, it is possible to prepare a special URL which will be used to overload server process when performing validation of the URL.  NOTE: this vulnerability exists because of an incomplete fix for S2-047 / CVE-2017-7672.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-9804">https://nvd.nist.gov/vuln/detail/CVE-2017-9804</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20180629-0001/">https://security.netapp.com/advisory/ntap-20180629-0001/</a></li>
<li><a href="https://struts.apache.org/docs/s2-050.html">https://struts.apache.org/docs/s2-050.html</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170907-struts2">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170907-struts2</a></li>
<li><a href="http://www.arubanetworks.com/assets/alert/ARUBA-PSA-2017-003.txt">http://www.arubanetworks.com/assets/alert/ARUBA-PSA-2017-003.txt</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/alert-cve-2017-9805-3889403.html">http://www.oracle.com/technetwork/security-advisory/alert-cve-2017-9805-3889403.html</a></li>
<li><a href="https://github.com/apache/struts/commit/418a20c0594f23764fe29ced400c1219239899a">https://github.com/apache/struts/commit/418a20c0594f23764fe29ced400c1219239899a</a></li>
<li><a href="https://web.archive.org/web/20171113165852/http://www.securityfocus.com/bid/100612">https://web.archive.org/web/20171113165852/http://www.securityfocus.com/bid/100612</a></li>
<li><a href="https://web.archive.org/web/20201021075553/http://www.securitytracker.com/id/1039261">https://web.archive.org/web/20201021075553/http://www.securitytracker.com/id/1039261</a></li>
<li><a href="https://github.com/advisories/GHSA-x5x7-3v85-wpc4">https://github.com/advisories/GHSA-x5x7-3v85-wpc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5x7-3v85-wpc4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2018-10-16T19:37:33.000Z</published>
    </entry>
</feed>