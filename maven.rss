<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-08-27T12:01:55.004Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.drewnoakes:metadata-extractor] Allocation of Resources Without Limits or Throttling in metadata-extractor]]></title>
        <id>https://github.com/advisories/GHSA-4v6p-cxf9-98rf</id>
        <link href="https://github.com/advisories/GHSA-4v6p-cxf9-98rf"/>
        <updated>2024-08-26T16:31:46.000Z</updated>
        <content type="html"><![CDATA[<p>When reading a specially crafted JPEG file, metadata-extractor up to 2.16.0 can be made to allocate large amounts of memory that finally leads to an out-of-memory error even for very small inputs. This could be used to mount a denial of service attack against services that use metadata-extractor library.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24614">https://nvd.nist.gov/vuln/detail/CVE-2022-24614</a></li>
<li><a href="https://github.com/drewnoakes/metadata-extractor/issues/561">https://github.com/drewnoakes/metadata-extractor/issues/561</a></li>
<li><a href="https://github.com/drewnoakes/metadata-extractor/pull/570">https://github.com/drewnoakes/metadata-extractor/pull/570</a></li>
<li><a href="https://github.com/drewnoakes/metadata-extractor/commit/85ec243df54133a87f9d928d2278595f52b07519">https://github.com/drewnoakes/metadata-extractor/commit/85ec243df54133a87f9d928d2278595f52b07519</a></li>
<li><a href="https://github.com/drewnoakes/metadata-extractor/releases/tag/2.18.0">https://github.com/drewnoakes/metadata-extractor/releases/tag/2.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4v6p-cxf9-98rf">https://github.com/advisories/GHSA-4v6p-cxf9-98rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v6p-cxf9-98rf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-25T00:01:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.springfox:springfox-swagger-ui] Cross-site scripting in Swagger-UI]]></title>
        <id>https://github.com/advisories/GHSA-c427-hjc3-wrfw</id>
        <link href="https://github.com/advisories/GHSA-c427-hjc3-wrfw"/>
        <updated>2024-08-26T15:52:59.000Z</updated>
        <content type="html"><![CDATA[<p>A Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that </p>]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c427-hjc3-wrfw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-15T19:27:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars.npm:swagger-ui] Cross-site scripting in Swagger-UI]]></title>
        <id>https://github.com/advisories/GHSA-c427-hjc3-wrfw</id>
        <link href="https://github.com/advisories/GHSA-c427-hjc3-wrfw"/>
        <updated>2024-08-26T15:52:59.000Z</updated>
        <content type="html"><![CDATA[<p>A Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that </p>]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c427-hjc3-wrfw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-15T19:27:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars:swagger-ui] Cross-site scripting in Swagger-UI]]></title>
        <id>https://github.com/advisories/GHSA-c427-hjc3-wrfw</id>
        <link href="https://github.com/advisories/GHSA-c427-hjc3-wrfw"/>
        <updated>2024-08-26T15:52:59.000Z</updated>
        <content type="html"><![CDATA[<p>A Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that </p>]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c427-hjc3-wrfw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2019-10-15T19:27:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader-classic] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader-classic] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader-classic] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader-classic] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader-classic] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.boot:spring-boot-loader] Signature forgery in Spring Boot's Loader]]></title>
        <id>https://github.com/advisories/GHSA-7cj3-x93g-gj76</id>
        <link href="https://github.com/advisories/GHSA-7cj3-x93g-gj76"/>
        <updated>2024-08-23T18:52:48.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use spring-boot-loader&nbsp;or spring-boot-loader-classic&nbsp;and contain custom code that performs signature verification of nested jar files may be vulnerable to signature forgery where content that appears to have been signed by one signer has, in fact, been signed by another.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38807">https://nvd.nist.gov/vuln/detail/CVE-2024-38807</a></li>
<li><a href="https://spring.io/security/cve-2024-38807">https://spring.io/security/cve-2024-38807</a></li>
<li><a href="https://github.com/advisories/GHSA-7cj3-x93g-gj76">https://github.com/advisories/GHSA-7cj3-x93g-gj76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cj3-x93g-gj76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-23T09:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.helix:helix] Apache Helix Front (UI) component contained a hard-coded secret]]></title>
        <id>https://github.com/advisories/GHSA-6247-7862-q2pq</id>
        <link href="https://github.com/advisories/GHSA-6247-7862-q2pq"/>
        <updated>2024-08-21T20:10:20.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Helix Front (UI) component contained a hard-coded secret, allowing an attacker to spoof sessions by generating their own fake cookies.</p>
<p>This issue affects Apache Helix Front (UI): all versions.</p>
<p>As this project is retired, we do not plan to release a version that fixes this issue. Users are recommended to find an alternative or restrict access to the instance to trusted users.</p>
<p>NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22281">https://nvd.nist.gov/vuln/detail/CVE-2024-22281</a></li>
<li><a href="https://lists.apache.org/thread/zt26fpmrqx3fzcy8nv3b43kb3xllo5ny">https://lists.apache.org/thread/zt26fpmrqx3fzcy8nv3b43kb3xllo5ny</a></li>
<li><a href="https://github.com/advisories/GHSA-6247-7862-q2pq">https://github.com/advisories/GHSA-6247-7862-q2pq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6247-7862-q2pq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.seatunnel:seatunnel] Apache SeaTunnel SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8m84-h9hh-3cfh</id>
        <link href="https://github.com/advisories/GHSA-8m84-h9hh-3cfh"/>
        <updated>2024-08-21T20:10:15.000Z</updated>
        <content type="html"><![CDATA[<p>Mysql security vulnerability in Apache SeaTunnel.</p>
<p>Attackers can read files on the MySQL server by modifying the information in the MySQL URL</p>
<p> allowLoadLocalInfile=true&amp;allowUrlInLocalInfile=true&amp;allowLoadLocalInfileInPath=/&amp;maxAllowedPacket=655360
This issue affects Apache SeaTunnel: 1.0.0.</p>
<p>Users are recommended to upgrade to version [1.0.1], which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49198">https://nvd.nist.gov/vuln/detail/CVE-2023-49198</a></li>
<li><a href="https://lists.apache.org/thread/48j9f1nsn037mgzc4j9o51nwglb1s08h">https://lists.apache.org/thread/48j9f1nsn037mgzc4j9o51nwglb1s08h</a></li>
<li><a href="https://github.com/advisories/GHSA-8m84-h9hh-3cfh">https://github.com/advisories/GHSA-8m84-h9hh-3cfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8m84-h9hh-3cfh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T12:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow vulnerable to Race Condition]]></title>
        <id>https://github.com/advisories/GHSA-9623-mqmm-5rcf</id>
        <link href="https://github.com/advisories/GHSA-9623-mqmm-5rcf"/>
        <updated>2024-08-21T20:08:40.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Undertow where the ProxyProtocolReadListener reuses the same StringBuilder instance across multiple requests. This issue occurs when the parseProxyProtocolV1 method processes multiple requests on the same HTTP connection. As a result, different requests may share the same StringBuilder instance, potentially leading to information leakage between requests or responses. In some cases, a value from a previous request or response may be erroneously reused, which could lead to unintended data exposure. This issue primarily results in errors and connection termination but creates a risk of data leakage in multi-request environments.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7885">https://nvd.nist.gov/vuln/detail/CVE-2024-7885</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-7885">https://access.redhat.com/security/cve/CVE-2024-7885</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2305290">https://bugzilla.redhat.com/show_bug.cgi?id=2305290</a></li>
<li><a href="https://github.com/undertow-io/undertow/blob/182e4ca1543c52f438b0244c930dca3d8b6e68e3/core/src/main/java/io/undertow/server/protocol/proxy/ProxyProtocolReadListener.java">https://github.com/undertow-io/undertow/blob/182e4ca1543c52f438b0244c930dca3d8b6e68e3/core/src/main/java/io/undertow/server/protocol/proxy/ProxyProtocolReadListener.java</a></li>
<li><a href="https://github.com/advisories/GHSA-9623-mqmm-5rcf">https://github.com/advisories/GHSA-9623-mqmm-5rcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9623-mqmm-5rcf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T15:30:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler-task-api] Apache Dolphinscheduler Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2fm6-mv57-p2qh</id>
        <link href="https://github.com/advisories/GHSA-2fm6-mv57-p2qh"/>
        <updated>2024-08-20T20:04:20.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Remote Code Execution in Apache Dolphinscheduler.</p>
<p>This issue affects Apache DolphinScheduler: before 3.2.2. </p>
<p>We recommend users to upgrade Apache DolphinScheduler to version 3.2.2, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43202">https://nvd.nist.gov/vuln/detail/CVE-2024-43202</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/pull/15758">https://github.com/apache/dolphinscheduler/pull/15758</a></li>
<li><a href="https://lists.apache.org/thread/nlmdp7q7l7o3l27778vxc5px24ncr5r5">https://lists.apache.org/thread/nlmdp7q7l7o3l27778vxc5px24ncr5r5</a></li>
<li><a href="https://lists.apache.org/thread/qbhk9wqyxhrn4z7m4m343wqxpwg926nh">https://lists.apache.org/thread/qbhk9wqyxhrn4z7m4m343wqxpwg926nh</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-49109">https://www.cve.org/CVERecord?id=CVE-2023-49109</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/commit/dc306bfa1d3ed72eb7b72b177e33a46042d2a9c3">https://github.com/apache/dolphinscheduler/commit/dc306bfa1d3ed72eb7b72b177e33a46042d2a9c3</a></li>
<li><a href="https://github.com/advisories/GHSA-2fm6-mv57-p2qh">https://github.com/advisories/GHSA-2fm6-mv57-p2qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2fm6-mv57-p2qh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-20T09:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Spring Security Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hmqf-wpq9-jq83</id>
        <link href="https://github.com/advisories/GHSA-hmqf-wpq9-jq83"/>
        <updated>2024-08-20T20:03:35.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Authorization When Using @AuthorizeReturnObject in Spring Security 6.3.0 and 6.3.1 allows attacker to render security annotations inaffective.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38810">https://nvd.nist.gov/vuln/detail/CVE-2024-38810</a></li>
<li><a href="https://spring.io/security/cve-2024-38810">https://spring.io/security/cve-2024-38810</a></li>
<li><a href="https://github.com/advisories/GHSA-hmqf-wpq9-jq83">https://github.com/advisories/GHSA-hmqf-wpq9-jq83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmqf-wpq9-jq83</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T06:31:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-expression] Spring Framework vulnerable to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-9cmq-m9j5-mvww</id>
        <link href="https://github.com/advisories/GHSA-9cmq-m9j5-mvww"/>
        <updated>2024-08-20T20:03:27.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition. Older, unsupported versions are also affected.</p>
<p>Specifically, an application is vulnerable when the following is true:</p>
<ul>
<li>The application evaluates user-supplied SpEL expressions.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38808">https://nvd.nist.gov/vuln/detail/CVE-2024-38808</a></li>
<li><a href="https://spring.io/security/cve-2024-38808">https://spring.io/security/cve-2024-38808</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/26f2dad388499faecf99e75b8856788e95d8d658">https://github.com/spring-projects/spring-framework/commit/26f2dad388499faecf99e75b8856788e95d8d658</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/f44d13cb7816e586b86c02421af4f5498391111c">https://github.com/spring-projects/spring-framework/commit/f44d13cb7816e586b86c02421af4f5498391111c</a></li>
<li><a href="https://github.com/advisories/GHSA-9cmq-m9j5-mvww">https://github.com/advisories/GHSA-9cmq-m9j5-mvww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cmq-m9j5-mvww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T09:30:28.000Z</published>
    </entry>
</feed>