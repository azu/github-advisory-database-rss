<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-10-06T13:03:25.556Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ro.pippo:pippo-session] Pippo RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h892-x453-86wc</id>
        <link href="https://github.com/advisories/GHSA-h892-x453-86wc"/>
        <updated>2023-10-06T01:08:09.000Z</updated>
        <content type="html"><![CDATA[<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18240">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>
<li><a href="https://github.com/pippo-java/pippo/issues/454">https://github.com/pippo-java/pippo/issues/454</a></li>
<li><a href="https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>
<li><a href="https://github.com/advisories/GHSA-h892-x453-86wc">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h892-x453-86wc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:19:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ro.pippo:pippo-core] Pippo RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h892-x453-86wc</id>
        <link href="https://github.com/advisories/GHSA-h892-x453-86wc"/>
        <updated>2023-10-06T01:08:09.000Z</updated>
        <content type="html"><![CDATA[<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18240">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>
<li><a href="https://github.com/pippo-java/pippo/issues/454">https://github.com/pippo-java/pippo/issues/454</a></li>
<li><a href="https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>
<li><a href="https://github.com/advisories/GHSA-h892-x453-86wc">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h892-x453-86wc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:19:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.keycloak:keycloak-parent] Keycloak Improper Bruteforce Detection]]></title>
        <id>https://github.com/advisories/GHSA-85v8-vx4w-q684</id>
        <link href="https://github.com/advisories/GHSA-85v8-vx4w-q684"/>
        <updated>2023-10-05T21:50:40.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Keycloak 4.2.1.Final, 4.3.0.Final. When TOPT enabled, an improper implementation of the Brute Force detection algorithm will not enforce its protection measures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-14657">https://nvd.nist.gov/vuln/detail/CVE-2018-14657</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3592">https://access.redhat.com/errata/RHSA-2018:3592</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3593">https://access.redhat.com/errata/RHSA-2018:3593</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3595">https://access.redhat.com/errata/RHSA-2018:3595</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657</a></li>
<li><a href="https://github.com/advisories/GHSA-85v8-vx4w-q684">https://github.com/advisories/GHSA-85v8-vx4w-q684</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85v8-vx4w-q684</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:12:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.integration:spring-integration-zip] spring-integration-zip Arbitrary File Write]]></title>
        <id>https://github.com/advisories/GHSA-87vg-5pgx-pggh</id>
        <link href="https://github.com/advisories/GHSA-87vg-5pgx-pggh"/>
        <updated>2023-10-05T18:49:19.000Z</updated>
        <content type="html"><![CDATA[<p>Addresses partial fix in CVE-2018-1261. Pivotal spring-integration-zip, versions prior to 1.0.2, exposes an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive (affects other archives as well, bzip2, tar, xz, war, cpio, 7z), that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1263">https://nvd.nist.gov/vuln/detail/CVE-2018-1263</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1263">https://pivotal.io/security/cve-2018-1263</a></li>
<li><a href="https://web.archive.org/web/20210125210559/https://www.securityfocus.com/bid/104179/">https://web.archive.org/web/20210125210559/https://www.securityfocus.com/bid/104179/</a></li>
<li><a href="https://github.com/advisories/GHSA-87vg-5pgx-pggh">https://github.com/advisories/GHSA-87vg-5pgx-pggh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87vg-5pgx-pggh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:07:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars.npm:jquery] Cross-Site Scripting in jquery]]></title>
        <id>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</id>
        <link href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw"/>
        <updated>2023-10-05T05:03:32.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>jquery</code> prior to 1.9.0 are vulnerable to Cross-Site Scripting. The load method fails to recognize and remove <code>&lt;script&gt;</code> HTML tags that contain a whitespace character, i.e: <code>&lt;/script &gt;</code>, which results in the enclosed script logic to be executed. This allows attackers to execute arbitrary JavaScript in a victim's browser.</p>
<h2 id="recommendation">Recommendation</h2>
<p>Upgrade to version 1.9.0 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7656">https://nvd.nist.gov/vuln/detail/CVE-2020-7656</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JQUERY-569619">https://snyk.io/vuln/SNYK-JS-JQUERY-569619</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200528-0001/">https://security.netapp.com/advisory/ntap-20200528-0001/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203">https://github.com/jquery/jquery/blob/9e6393b0bcb52b15313f88141d0bd7dd54227426/src/ajax.js#L203</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#220-19-january-2013</a></li>
<li><a href="https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481">https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L7481</a></li>
<li><a href="https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US">https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1?language=en_US</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-7656.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-q4m3-2j7h-f7xw">https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4m3-2j7h-f7xw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-20T16:18:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.netty:netty-handler] Netty-handler does not validate host names by default]]></title>
        <id>https://github.com/advisories/GHSA-57m8-f3v5-hm5m</id>
        <link href="https://github.com/advisories/GHSA-57m8-f3v5-hm5m"/>
        <updated>2023-10-04T20:27:05.000Z</updated>
        <content type="html"><![CDATA[<p>Netty-handler has been found to no validate hostnames when using TLS in its default configuration. As a result netty-handler is vulnerable to man-in-the-middle attacks. Users would need to set the protocol to "HTTPS" in the SSLParameters of the SSLEngine to opt in to host name validation. A change in default behavior is expected in the <code>5.x</code> release branch with no backport planned.</p>
<p>In the interim users are advised to enable host name validation in their configurations.
See <a href="https://github.com/netty/netty/issues/8537">https://github.com/netty/netty/issues/8537</a> for details on the forthcoming change in default behavior.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4586">https://nvd.nist.gov/vuln/detail/CVE-2023-4586</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-4586">https://access.redhat.com/security/cve/CVE-2023-4586</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2235564">https://bugzilla.redhat.com/show_bug.cgi?id=2235564</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1042268">https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1042268</a></li>
<li><a href="https://github.com/netty/netty/issues/8537">https://github.com/netty/netty/issues/8537</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setEndpointIdentificationAlgorithm-java.lang.String-">https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setEndpointIdentificationAlgorithm-java.lang.String-</a></li>
<li><a href="https://github.com/advisories/GHSA-57m8-f3v5-hm5m">https://github.com/advisories/GHSA-57m8-f3v5-hm5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-57m8-f3v5-hm5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-04T12:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-oidc] Quarkus OIDC can leak both ID and access tokens]]></title>
        <id>https://github.com/advisories/GHSA-6hc9-cf8x-hf83</id>
        <link href="https://github.com/advisories/GHSA-6hc9-cf8x-hf83"/>
        <updated>2023-10-04T18:49:37.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Quarkus. Quarkus OIDC can leak both ID and access tokens in the authorization code flow when an insecure HTTP protocol is used, which can allow attackers to access sensitive user data directly from the ID token or by using the access token to access user data from OIDC provider services. Please note that passwords are not stored in access tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1584">https://nvd.nist.gov/vuln/detail/CVE-2023-1584</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/32192">https://github.com/quarkusio/quarkus/pull/32192</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/33414">https://github.com/quarkusio/quarkus/pull/33414</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3809">https://access.redhat.com/errata/RHSA-2023:3809</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1584">https://access.redhat.com/security/cve/CVE-2023-1584</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2180886">https://bugzilla.redhat.com/show_bug.cgi?id=2180886</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/32192/commits/5369d7ff233d3afe84ecd9160c541fba52b38e69">https://github.com/quarkusio/quarkus/pull/32192/commits/5369d7ff233d3afe84ecd9160c541fba52b38e69</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/33414/commits/df305ff12386cf28b33567b8d9a18db164f019dd">https://github.com/quarkusio/quarkus/pull/33414/commits/df305ff12386cf28b33567b8d9a18db164f019dd</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/5369d7ff233d3afe84ecd9160c541fba52b38e69">https://github.com/quarkusio/quarkus/commit/5369d7ff233d3afe84ecd9160c541fba52b38e69</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/df305ff12386cf28b33567b8d9a18db164f019dd">https://github.com/quarkusio/quarkus/commit/df305ff12386cf28b33567b8d9a18db164f019dd</a></li>
<li><a href="https://github.com/advisories/GHSA-6hc9-cf8x-hf83">https://github.com/advisories/GHSA-6hc9-cf8x-hf83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hc9-cf8x-hf83</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-04T12:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-oidc] Quarkus OIDC can leak both ID and access tokens]]></title>
        <id>https://github.com/advisories/GHSA-6hc9-cf8x-hf83</id>
        <link href="https://github.com/advisories/GHSA-6hc9-cf8x-hf83"/>
        <updated>2023-10-04T18:49:37.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Quarkus. Quarkus OIDC can leak both ID and access tokens in the authorization code flow when an insecure HTTP protocol is used, which can allow attackers to access sensitive user data directly from the ID token or by using the access token to access user data from OIDC provider services. Please note that passwords are not stored in access tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1584">https://nvd.nist.gov/vuln/detail/CVE-2023-1584</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/32192">https://github.com/quarkusio/quarkus/pull/32192</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/33414">https://github.com/quarkusio/quarkus/pull/33414</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3809">https://access.redhat.com/errata/RHSA-2023:3809</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1584">https://access.redhat.com/security/cve/CVE-2023-1584</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2180886">https://bugzilla.redhat.com/show_bug.cgi?id=2180886</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/32192/commits/5369d7ff233d3afe84ecd9160c541fba52b38e69">https://github.com/quarkusio/quarkus/pull/32192/commits/5369d7ff233d3afe84ecd9160c541fba52b38e69</a></li>
<li><a href="https://github.com/quarkusio/quarkus/pull/33414/commits/df305ff12386cf28b33567b8d9a18db164f019dd">https://github.com/quarkusio/quarkus/pull/33414/commits/df305ff12386cf28b33567b8d9a18db164f019dd</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/5369d7ff233d3afe84ecd9160c541fba52b38e69">https://github.com/quarkusio/quarkus/commit/5369d7ff233d3afe84ecd9160c541fba52b38e69</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/df305ff12386cf28b33567b8d9a18db164f019dd">https://github.com/quarkusio/quarkus/commit/df305ff12386cf28b33567b8d9a18db164f019dd</a></li>
<li><a href="https://github.com/advisories/GHSA-6hc9-cf8x-hf83">https://github.com/advisories/GHSA-6hc9-cf8x-hf83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hc9-cf8x-hf83</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-04T12:30:14.000Z</published>
    </entry>
</feed>