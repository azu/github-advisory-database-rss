<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-16T22:01:27.730Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[io.scif:scifio] SCIFIO vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-cmwm-45mj-mpg3</id>
        <link href="https://github.com/advisories/GHSA-cmwm-45mj-mpg3"/>
        <updated>2022-12-16T21:57:53.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as critical was found in scifio. Affected by this vulnerability is the function downloadAndUnpackResource of the file src/test/java/io/scif/util/DefaultSampleFilesService.java of the component ZIP File Handler. The manipulation leads to path traversal. The attack can be launched remotely. The patch is at commit fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215803.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4493">https://nvd.nist.gov/vuln/detail/CVE-2022-4493</a></li>
<li><a href="https://github.com/scifio/scifio/commit/fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31">https://github.com/scifio/scifio/commit/fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31</a></li>
<li><a href="https://vuldb.com/?id.215803">https://vuldb.com/?id.215803</a></li>
<li><a href="https://github.com/advisories/GHSA-cmwm-45mj-mpg3">https://github.com/advisories/GHSA-cmwm-45mj-mpg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmwm-45mj-mpg3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-14T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cn.hutool:hutool-core] HuTool vulnerable to Uncontrolled Resource Consumption]]></title>
        <id>https://github.com/advisories/GHSA-47vx-fqr5-j2gw</id>
        <link href="https://github.com/advisories/GHSA-47vx-fqr5-j2gw"/>
        <updated>2022-12-16T21:56:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic was found in Dromara HuTool up to 5.8.10. This vulnerability affects unknown code of the file cn.hutool.core.util.ZipUtil.java. The manipulation leads to resource consumption. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 5.8.11 is able to address this issue. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4565">https://nvd.nist.gov/vuln/detail/CVE-2022-4565</a></li>
<li><a href="https://github.com/dromara/hutool/issues/2797">https://github.com/dromara/hutool/issues/2797</a></li>
<li><a href="https://vuldb.com/?id.215974">https://vuldb.com/?id.215974</a></li>
<li><a href="https://github.com/advisories/GHSA-47vx-fqr5-j2gw">https://github.com/advisories/GHSA-47vx-fqr5-j2gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47vx-fqr5-j2gw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-16T21:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Agent-to-controller access control allows reading/writing most content of build directories in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-cv2w-q8c3-xjv7</id>
        <link href="https://github.com/advisories/GHSA-cv2w-q8c3-xjv7"/>
        <updated>2022-12-16T20:45:29.000Z</updated>
        <content type="html"><![CDATA[<p>Agents are allowed some limited access to files on the Jenkins controller file system. The directories agents are allowed to access in Jenkins 2.318 and earlier, LTS 2.303.2 and earlier include the directories storing build-related information, intended to allow agents to store build-related metadata during build execution. As a consequence, this allows any agent to read and write the contents of any build directory stored in Jenkins with very few restrictions (<code>build.xml</code> and some Pipeline-related metadata).</p>
<p>Jenkins 2.319, LTS 2.303.3 prevents agents from accessing contents of build directories unless it’s for builds currently running on the agent attempting to access the directory.</p>
<p>Update <a href="https://plugins.jenkins.io/workflow-durable-task-step/">Pipeline: Nodes and Processes</a> to version 2.40 or newer for Jenkins to associate Pipeline <code>node</code> blocks with the agent they’re running on for this fix.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21697">https://nvd.nist.gov/vuln/detail/CVE-2021-21697</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2428">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2428</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/11/04/3">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>
<li><a href="https://github.com/advisories/GHSA-cv2w-q8c3-xjv7">https://github.com/advisories/GHSA-cv2w-q8c3-xjv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cv2w-q8c3-xjv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Agent-to-controller access control allowed writing to sensitive directory used by Jenkins Pipeline: Shared Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-c5r9-rx53-q3gf</id>
        <link href="https://github.com/advisories/GHSA-c5r9-rx53-q3gf"/>
        <updated>2022-12-16T20:43:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.318 and earlier, LTS 2.303.2 and earlier does not limit agent read/write access to the <code>libs/</code> directory inside build directories when using the <code>FilePath</code> APIs. This directory is used by the Pipeline: Shared Groovy Libraries Plugin to store copies of shared libraries.</p>
<p>This allows attackers in control of agent processes to replace the code of a trusted library with a modified variant, resulting in unsandboxed code execution in the Jenkins controller process.</p>
<p>Jenkins 2.319, LTS 2.303.3 prohibits agent read/write access to the <code>libs/</code> directory inside build directories.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using FilePath APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<p>It is not easily possible to <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">customize the file access rules</a> to prohibit access to the <code>libs/</code> directory specifically, as built-in rules (granting access to <code>&lt;BUILDDIR&gt;</code> contents) would take precedence over a custom rule prohibiting access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21696">https://nvd.nist.gov/vuln/detail/CVE-2021-21696</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2423">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2423</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/11/04/3">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>
<li><a href="https://github.com/advisories/GHSA-c5r9-rx53-q3gf">https://github.com/advisories/GHSA-c5r9-rx53-q3gf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c5r9-rx53-q3gf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-cvvm-4cr9-r436</id>
        <link href="https://github.com/advisories/GHSA-cvvm-4cr9-r436"/>
        <updated>2022-12-16T20:42:28.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2542 / CVE-2021-21695: <code>FilePath#listFiles</code> lists files outside directories with agent read access when following symbolic links.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2542 / CVE-2021-21695: <code>FilePath#listFiles</code> checks <code>stat</code> permission on files it returns, preventing listing files outside allowed directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21695">https://nvd.nist.gov/vuln/detail/CVE-2021-21695</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/11/04/3">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>
<li><a href="https://github.com/advisories/GHSA-cvvm-4cr9-r436">https://github.com/advisories/GHSA-cvvm-4cr9-r436</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvvm-4cr9-r436</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</id>
        <link href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx"/>
        <updated>2022-12-16T20:40:25.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code>, and <code>FilePath#get*DiskSpace</code> do not check any permissions.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2541 / CVE-2021-21694: <code>FilePath#toURI</code>, <code>FilePath#hasSymlink</code>, <code>FilePath#absolutize</code>, <code>FilePath#isDescendant</code> check stat permission. <code>FilePath#get*DiskSpace</code> methods are no longer allowed to be executed by an agent.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21694">https://nvd.nist.gov/vuln/detail/CVE-2021-21694</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-pgj6-jmj5-wqfx">https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pgj6-jmj5-wqfx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-2c79-h2h5-g3fw</id>
        <link href="https://github.com/advisories/GHSA-2c79-h2h5-g3fw"/>
        <updated>2022-12-16T20:33:59.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links is possible without the <code>symlink</code> permission.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links now correctly checks the <code>symlink</code> permission.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21691">https://nvd.nist.gov/vuln/detail/CVE-2021-21691</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-2c79-h2h5-g3fw">https://github.com/advisories/GHSA-2c79-h2h5-g3fw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c79-h2h5-g3fw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Protection Mechanism Failure in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</id>
        <link href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2"/>
        <updated>2022-12-16T20:32:15.000Z</updated>
        <content type="html"><![CDATA[<p>Agent processes are able to completely bypass file path filtering by wrapping the file operation in an agent file path in Jenkins 2.318 and earlier, LTS 2.303.2 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21690">https://nvd.nist.gov/vuln/detail/CVE-2021-21690</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-97c3-w9cr-6qc2">https://github.com/advisories/GHSA-97c3-w9cr-6qc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97c3-w9cr-6qc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-m9hr-259f-2v23</id>
        <link href="https://github.com/advisories/GHSA-m9hr-259f-2v23"/>
        <updated>2022-12-16T20:28:13.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2484 / CVE-2021-21688: <code>FilePath#reading(FileVisitor)</code> does not reject any operations, allowing users to have unrestricted read access using certain operations (creating archives, <code>#copyRecursiveTo</code>).</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2484 / CVE-2021-21688: <code>FilePath#reading(FileVisitor)</code> correctly rejects operations if they operate on files outside allowed directories.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21688">https://nvd.nist.gov/vuln/detail/CVE-2021-21688</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-m9hr-259f-2v23">https://github.com/advisories/GHSA-m9hr-259f-2v23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9hr-259f-2v23</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-3q84-vrvx-rfvf</id>
        <link href="https://github.com/advisories/GHSA-3q84-vrvx-rfvf"/>
        <updated>2022-12-16T20:24:56.000Z</updated>
        <content type="html"><![CDATA[<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>
<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>
<p>SECURITY-2446 / CVE-2021-21687: <code>FilePath#untar</code> does not check permission to create symbolic links when unarchiving a symbolic link.</p>
<p>We expect that most of these vulnerabilities have been present since <a href="https://www.jenkins.io/security/advisory/2014-10-30/">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>
<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>
<p>SECURITY-2446 / CVE-2021-21687: <code>FilePath#untar</code> checks permission to create symbolic links when unarchiving a symbolic link.</p>
<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href="https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href="https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules">the documentation</a> for how to customize the configuration in case of problems.</p>
<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href="https://www.jenkins.io/redirect/remoting-security-workaround/">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21687">https://nvd.nist.gov/vuln/detail/CVE-2021-21687</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>
<li><a href="https://github.com/advisories/GHSA-3q84-vrvx-rfvf">https://github.com/advisories/GHSA-3q84-vrvx-rfvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q84-vrvx-rfvf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:19:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:markdown-formatter] XSS vulnerability in Jenkins Markdown Formatter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-xqpp-26pp-2365</id>
        <link href="https://github.com/advisories/GHSA-xqpp-26pp-2365"/>
        <updated>2022-12-16T20:17:48.000Z</updated>
        <content type="html"><![CDATA[<p>Markdown Formatter Plugin 0.1.0 and earlier uses a Markdown library to parse Markdown that does not escape crafted link target URLs.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with the ability to edit any description rendered using the configured markup formatter.</p>
<p>Markdown Formatter Plugin 0.2.0 uses a different Markdown library that is not affected by this problem.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21660">https://nvd.nist.gov/vuln/detail/CVE-2021-21660</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2198">https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2198</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-21660">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-21660</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/05/25/3">http://www.openwall.com/lists/oss-security/2021/05/25/3</a></li>
<li><a href="https://github.com/advisories/GHSA-xqpp-26pp-2365">https://github.com/advisories/GHSA-xqpp-26pp-2365</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xqpp-26pp-2365</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:03:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:neuvector-vulnerability-scanner] Content-Security-Policy protection for user content disabled by Jenkins NeuVector Vulnerability Scanner Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wmfh-h3vm-rcxm</id>
        <link href="https://github.com/advisories/GHSA-wmfh-h3vm-rcxm"/>
        <updated>2022-12-16T20:00:34.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins sets the Content-Security-Policy header to static files served by Jenkins (specifically <code>DirectoryBrowserSupport</code>), such as workspaces, <code>/userContent</code>, or archived artifacts, unless a Resource Root URL is specified.</p>
<p>NeuVector Vulnerability Scanner Plugin 1.20 and earlier globally disables the <code>Content-Security-Policy</code> header for static files served by Jenkins whenever the 'NeuVector Vulnerability Scanner' build step is executed. This allows cross-site scripting (XSS) attacks by users with the ability to control files in workspaces, archived artifacts, etc.</p>
<p>Jenkins instances with <a href="https://www.jenkins.io/doc/book/security/user-content/#resource-root-url">Resource Root URL</a> configured are unaffected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43434">https://nvd.nist.gov/vuln/detail/CVE-2022-43434</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2865">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2865</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-wmfh-h3vm-rcxm">https://github.com/advisories/GHSA-wmfh-h3vm-rcxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmfh-h3vm-rcxm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.terasoluna.gfw:terasoluna-gfw-common] TERASOLUNA Server Framework vulnerable to ClassLoader manipulation]]></title>
        <id>https://github.com/advisories/GHSA-q5j9-f95w-f4pr</id>
        <link href="https://github.com/advisories/GHSA-q5j9-f95w-f4pr"/>
        <updated>2022-12-16T19:06:17.000Z</updated>
        <content type="html"><![CDATA[<p>TERASOLUNA Global Framework 1.0.0 (Public review version) and TERASOLUNA Server Framework for Java (Rich) 2.0.0.2 to 2.0.5.1 are vulnerable to ClassLoader manipulation due to using the old version of Spring Framework which contains the vulnerability. The vulnerability is caused by an improper input validation issue in the binding mechanism of Spring MVC. By the application processing a specially crafted file, arbitrary code may be executed with the privileges of the application. </p>
<p>When using TERASOLUNA Global Framework 1.0.0 (Public review version), update to TERASOLUNA Server Framework for Java 5.7.1.SP1 (using Spring Framework 5.3.18). This vulnerability alone can be addressed by updating to TERASOLUNA Global Framework 1.0.1 (using Spring Framework 3.2.10) or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43484">https://nvd.nist.gov/vuln/detail/CVE-2022-43484</a></li>
<li><a href="https://jvn.jp/en/jp/JVN54728399/index.html">https://jvn.jp/en/jp/JVN54728399/index.html</a></li>
<li><a href="https://osdn.net/projects/terasoluna/wiki/cve-2022-43484">https://osdn.net/projects/terasoluna/wiki/cve-2022-43484</a></li>
<li><a href="http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html">http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/15724">https://github.com/spring-projects/spring-framework/issues/15724</a></li>
<li><a href="https://github.com/advisories/GHSA-q5j9-f95w-f4pr">https://github.com/advisories/GHSA-q5j9-f95w-f4pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q5j9-f95w-f4pr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T06:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:pipeline-input-step] CSRF protection for any URL can be bypassed in Jenkins Pipeline: Input Step Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g66m-fqxf-3w35</id>
        <link href="https://github.com/advisories/GHSA-g66m-fqxf-3w35"/>
        <updated>2022-12-16T17:10:18.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Input Step Plugin 451.vf1a_a_4f405289 and earlier does not restrict or sanitize the optionally specified ID of the <code>input</code> step. This ID is used for the URLs that process user interactions for the given <code>input</code> step (proceed or abort) and is not correctly encoded.</p>
<p>This allows attackers able to configure Pipelines to have Jenkins build URLs from <code>input</code> step IDs that would bypass the CSRF protection of any target URL in Jenkins when the <code>input</code> step is interacted with.</p>
<p>Pipeline: Input Step Plugin 456.vd8a_957db_5b_e9 limits the characters that can be used for the ID of <code>input</code> steps in Pipelines to alphanumeric characters and URL-safe punctuation. Pipelines with <code>input</code> steps having IDs with prohibited characters will fail with an error.</p>
<p>This includes Pipelines that have already been started but not finished before Jenkins is restarted to apply this update.</p>
<p><a href="https://plugins.jenkins.io/pipeline-model-definition/">Pipeline: Declarative Plugin</a> provides an <code>input</code> directive that is internally using the <code>input</code> step, and specifies a non-default ID if not user-defined. Pipeline: Declarative Plugin 2.2114.v2654ca_721309 and earlier may specify values incompatible with this new restriction on legal values: <code>input</code> directives in a <code>stage</code> use the stage name (which may include prohibited characters) and <code>input</code> directives in a <code>matrix</code> will use a value generated from the matrix axis values (which always includes prohibited characters). Administrators are advised to update Pipeline: Input Step Plugin and Pipeline: Declarative Plugin at the same time, ideally while no Pipelines are running.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43407">https://nvd.nist.gov/vuln/detail/CVE-2022-43407</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2880">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2880</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-g66m-fqxf-3w35">https://github.com/advisories/GHSA-g66m-fqxf-3w35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g66m-fqxf-3w35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:pipeline-groovy-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</id>
        <link href="https://github.com/advisories/GHSA-7qw2-h9gj-hcvh"/>
        <updated>2022-12-16T17:08:22.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43406">https://nvd.nist.gov/vuln/detail/CVE-2022-43406</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7qw2-h9gj-hcvh">https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qw2-h9gj-hcvh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps-global-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Groovy Libraries Plugin and Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</id>
        <link href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg"/>
        <updated>2022-12-16T16:35:56.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43405">https://nvd.nist.gov/vuln/detail/CVE-2022-43405</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg">https://github.com/advisories/GHSA-4hjj-9gp7-4frg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:pipeline-groovy-lib] Sandbox bypass vulnerability in Jenkins Pipeline: Groovy Libraries Plugin and Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</id>
        <link href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg"/>
        <updated>2022-12-16T16:35:56.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Libraries Plugin and older releases of the Pipeline: Deprecated Groovy Libraries Plugin (formerly Pipeline: Shared Groovy Libraries Plugin) define the l<code>ibrary</code> Pipeline step, which allows Pipeline authors to dynamically load Pipeline libraries. The return value of this step can be used to instantiate classes defined in the loaded library.</p>
<p>In Pipeline: Groovy Libraries Plugin 612.v84da_9c54906d and earlier and in Pipeline: Deprecated Groovy Libraries Plugin 583.vf3b_454e43966 and earlier, the <code>library</code> step can be used to invoke sandbox-generated synthetic constructors in crafted untrusted libraries and construct any subclassable type. This is similar to SECURITY-582 in the <a href="https://www.jenkins.io/security/advisory/2017-08-07/#multiple-groovy-language-features-allowed-script-security-plugin-sandbox-bypass">2017-08-07 security advisory</a>, but in a different plugin.</p>
<p>This vulnerability allows attackers with permission to define untrusted Pipeline libraries and to define and run sandboxed Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Pipeline: Groovy Libraries Plugin 613.v9c41a_160233f rejects improper calls to sandbox-generated synthetic constructors when using the <code>library</code> step.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 588.v576c103a_ff86 no longer contains the <code>library</code> step. It has been moved into the Pipeline: Groovy Libraries Plugin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43405">https://nvd.nist.gov/vuln/detail/CVE-2022-43405</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4hjj-9gp7-4frg">https://github.com/advisories/GHSA-4hjj-9gp7-4frg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hjj-9gp7-4frg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps] Sandbox bypass vulnerabilities in Jenkins Script Security Plugin and in Pipeline: Groovy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-27rf-8mjp-r363</id>
        <link href="https://github.com/advisories/GHSA-27rf-8mjp-r363"/>
        <updated>2022-12-16T16:31:10.000Z</updated>
        <content type="html"><![CDATA[<p>Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin and Pipeline: Groovy Plugin:</p>
<ul>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier and in Pipeline: Groovy Plugin 2802.v5ea_628154b_c2 and earlier, various casts performed implicitly by the Groovy language runtime were not intercepted by the sandbox. This includes casts performed when returning values from methods, when assigning local variables, fields, properties, and when defining default arguments for closure, constructor, and method parameters (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, when casting an array-like value to an array type, per-element casts to the component type of the array are not intercepted by the sandbox (CVE-2022-43403).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, crafted constructor bodies and calls to sandbox-generated synthetic constructors can be used to construct any subclassable type (due to an incomplete fix for SECURITY-1754 in the <a href="https://www.jenkins.io/security/advisory/2020-03-09/#SECURITY-1754">2020-03-09 security advisory</a>) (CVE-2022-43404).</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>These vulnerabilities have been fixed:</p>
<ul>
<li>Script Security Plugin 1184.v85d16b_d851b_3 and Pipeline: Groovy Plugin 2803.v1a_f77ffcc773 intercept Groovy casts performed implicitly by the Groovy language runtime (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 intercepts per-element casts when casting array-like values to array types (CVE-2022-43403).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 rejects improper calls to sandbox-generated synthetic constructors (CVE-2022-43404).</li>
</ul>
<p>Both plugins, Script Security Plugin and Pipeline: Groovy Plugin must be updated simultaneously. While Script Security Plugin could be updated independently, doing so would cause errors in Pipeline: Groovy Plugin due to an incompatible API change.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43404">https://nvd.nist.gov/vuln/detail/CVE-2022-43404</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-27rf-8mjp-r363">https://github.com/advisories/GHSA-27rf-8mjp-r363</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27rf-8mjp-r363</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps] Sandbox bypass vulnerabilities in Jenkins Script Security Plugin and in Pipeline: Groovy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7vr5-72w7-q6jc</id>
        <link href="https://github.com/advisories/GHSA-7vr5-72w7-q6jc"/>
        <updated>2022-12-16T16:21:39.000Z</updated>
        <content type="html"><![CDATA[<p>Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin and Pipeline: Groovy Plugin:</p>
<ul>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier and in Pipeline: Groovy Plugin 2802.v5ea_628154b_c2 and earlier, various casts performed implicitly by the Groovy language runtime were not intercepted by the sandbox. This includes casts performed when returning values from methods, when assigning local variables, fields, properties, and when defining default arguments for closure, constructor, and method parameters (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, when casting an array-like value to an array type, per-element casts to the component type of the array are not intercepted by the sandbox (CVE-2022-43403).</li>
<li>In Script Security Plugin 1183.v774b_0b_0a_a_451 and earlier, crafted constructor bodies and calls to sandbox-generated synthetic constructors can be used to construct any subclassable type (due to an incomplete fix for SECURITY-1754 in the <a href="https://www.jenkins.io/security/advisory/2020-03-09/#SECURITY-1754">2020-03-09 security advisory</a>) (CVE-2022-43404).</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.\n\nThese vulnerabilities have been fixed:</p>
<ul>
<li>Script Security Plugin 1184.v85d16b_d851b_3 and Pipeline: Groovy Plugin 2803.v1a_f77ffcc773 intercept Groovy casts performed implicitly by the Groovy language runtime (CVE-2022-43401 in Script Security Plugin and CVE-2022-43402 in Pipeline: Groovy Plugin).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 intercepts per-element casts when casting array-like values to array types (CVE-2022-43403).</li>
<li>Script Security Plugin 1184.v85d16b_d851b_3 rejects improper calls to sandbox-generated synthetic constructors (CVE-2022-43404).</li>
</ul>
<p>Both plugins, Script Security Plugin and Pipeline: Groovy Plugin must be updated simultaneously. While Script Security Plugin could be updated independently, doing so would cause errors in Pipeline: Groovy Plugin due to an incompatible API change.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43401">https://nvd.nist.gov/vuln/detail/CVE-2022-43401</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/19/3">http://www.openwall.com/lists/oss-security/2022/10/19/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7vr5-72w7-q6jc">https://github.com/advisories/GHSA-7vr5-72w7-q6jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vr5-72w7-q6jc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:nomad] Password stored in plain text by Jenkins Nomad Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</id>
        <link href="https://github.com/advisories/GHSA-5c2c-cvg6-ghjm"/>
        <updated>2022-12-16T15:47:12.000Z</updated>
        <content type="html"><![CDATA[<p>Nomad Plugin 0.7.4 and earlier stores the passwords to authenticate against the Docker registry unencrypted in the global <code>config.xml</code> file on the Jenkins controller as part of its worker templates configuration.</p>
<p>These passwords can be viewed by users with access to the Jenkins controller file system.</p>
<p>Nomad Plugin 0.7.5 stores the Docker passwords encrypted. This change is effective after Jenkins restarts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21681">https://nvd.nist.gov/vuln/detail/CVE-2021-21681</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-08-31/#SECURITY-2396">https://www.jenkins.io/security/advisory/2021-08-31/#SECURITY-2396</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/08/31/1">http://www.openwall.com/lists/oss-security/2021/08/31/1</a></li>
<li><a href="https://github.com/advisories/GHSA-5c2c-cvg6-ghjm">https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5c2c-cvg6-ghjm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T19:12:36.000Z</published>
    </entry>
</feed>