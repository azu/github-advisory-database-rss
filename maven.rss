<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-09-03T19:01:22.451Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[io.dataease:dataease-plugin-common] DataEase vulnerable to SQL injection]]></title>
        <id>https://github.com/advisories/GHSA-8rv7-g772-pp3j</id>
        <link href="https://github.com/advisories/GHSA-8rv7-g772-pp3j"/>
        <updated>2023-09-01T21:57:10.000Z</updated>
        <content type="html"><![CDATA[<p>SQL injection vulnerability in DataEase v.1.18.9 allows a remote attacker to obtain sensitive information via a crafted string outside of the blacklist function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40771">https://nvd.nist.gov/vuln/detail/CVE-2023-40771</a></li>
<li><a href="https://github.com/dataease/dataease/issues/5861">https://github.com/dataease/dataease/issues/5861</a></li>
<li><a href="https://github.com/advisories/GHSA-8rv7-g772-pp3j">https://github.com/advisories/GHSA-8rv7-g772-pp3j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rv7-g772-pp3j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-01T18:30:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.hjson:hjson] hson-java vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-94w5-rf69-2h6c</id>
        <link href="https://github.com/advisories/GHSA-94w5-rf69-2h6c"/>
        <updated>2023-09-01T21:54:17.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in hjson-java up to v3.0.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted JSON string to string a <code>StringIndexOutOfBoundsException</code>. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39685">https://nvd.nist.gov/vuln/detail/CVE-2023-39685</a></li>
<li><a href="https://github.com/hjson/hjson-java/issues/27">https://github.com/hjson/hjson-java/issues/27</a></li>
<li><a href="https://github.com/hjson/hjson-java/commit/aff0b607929b4397d93dc0d029a56aeefb242602">https://github.com/hjson/hjson-java/commit/aff0b607929b4397d93dc0d029a56aeefb242602</a></li>
<li><a href="https://github.com/advisories/GHSA-94w5-rf69-2h6c">https://github.com/advisories/GHSA-94w5-rf69-2h6c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94w5-rf69-2h6c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-01T12:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.leshan:leshan-core] DDFFileParser is vulnerable to XXE Attacks]]></title>
        <id>https://github.com/advisories/GHSA-wc9j-gc65-3cm7</id>
        <link href="https://github.com/advisories/GHSA-wc9j-gc65-3cm7"/>
        <updated>2023-08-31T21:47:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>DDFFileParser</code> and <code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) are vulnerable to <a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">XXE Attacks</a>.</p>
<p><a href="https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model">DDF file</a> is a LWM2M format used to store LWM2M object description.<br>Leshan users are impacted only if they parse untrusted DDF files (e.g. if they let external users provide their own model), in that case they MUST upgrade to fixed version.
If you parse only trusted DDF file and validate only with trusted xml schema, upgrading is not mandatory. </p>
<h3 id="patches">Patches</h3>
<p>This is fixed in <strong>v1.5.0</strong> and <strong>2.0.0-M13</strong>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No easy way. Eventually writing your own <code>DDFFileParser</code>/<code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) creating a <code>DocumentBuilderFactory</code> with : </p>
<pre><code class="language-java">// For DDFFileParser
DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true); // Disable DTDs
factory.setXIncludeAware(false); // Disable XML Inclusions
factory.setExpandEntityReferences(false); // disable expand entity reference nodes

// For DefaultDDFFileValidator
SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "");
factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "");
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://semgrep.dev/docs/cheat-sheets/java-xxe/">https://semgrep.dev/docs/cheat-sheets/java-xxe/</a></li>
<li><a href="https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE">https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7">https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41034">https://nvd.nist.gov/vuln/detail/CVE-2023-41034</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013">https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c">https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model">https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model</a></li>
<li><a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>
<li><a href="https://github.com/advisories/GHSA-wc9j-gc65-3cm7">https://github.com/advisories/GHSA-wc9j-gc65-3cm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc9j-gc65-3cm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-31T21:47:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.leshan:leshan-core] DDFFileParser is vulnerable to XXE Attacks]]></title>
        <id>https://github.com/advisories/GHSA-wc9j-gc65-3cm7</id>
        <link href="https://github.com/advisories/GHSA-wc9j-gc65-3cm7"/>
        <updated>2023-08-31T21:47:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>DDFFileParser</code> and <code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) are vulnerable to <a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">XXE Attacks</a>.</p>
<p><a href="https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model">DDF file</a> is a LWM2M format used to store LWM2M object description.<br>Leshan users are impacted only if they parse untrusted DDF files (e.g. if they let external users provide their own model), in that case they MUST upgrade to fixed version.
If you parse only trusted DDF file and validate only with trusted xml schema, upgrading is not mandatory. </p>
<h3 id="patches">Patches</h3>
<p>This is fixed in <strong>v1.5.0</strong> and <strong>2.0.0-M13</strong>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No easy way. Eventually writing your own <code>DDFFileParser</code>/<code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) creating a <code>DocumentBuilderFactory</code> with : </p>
<pre><code class="language-java">// For DDFFileParser
DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true); // Disable DTDs
factory.setXIncludeAware(false); // Disable XML Inclusions
factory.setExpandEntityReferences(false); // disable expand entity reference nodes

// For DefaultDDFFileValidator
SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "");
factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "");
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://semgrep.dev/docs/cheat-sheets/java-xxe/">https://semgrep.dev/docs/cheat-sheets/java-xxe/</a></li>
<li><a href="https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE">https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7">https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41034">https://nvd.nist.gov/vuln/detail/CVE-2023-41034</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013">https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c">https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c</a></li>
<li><a href="https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model">https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model</a></li>
<li><a href="https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>
<li><a href="https://github.com/advisories/GHSA-wc9j-gc65-3cm7">https://github.com/advisories/GHSA-wc9j-gc65-3cm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc9j-gc65-3cm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-31T21:47:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graylog2:graylog2-server] Graylog vulnerable to insecure source port usage for DNS queries]]></title>
        <id>https://github.com/advisories/GHSA-g96c-x7rh-99r3</id>
        <link href="https://github.com/advisories/GHSA-g96c-x7rh-99r3"/>
        <updated>2023-08-31T18:47:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Graylog utilises only one single source port for DNS queries.</p>
<h3 id="details">Details</h3>
<p>Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again. This goes against recommended practice since 2008, when Dan Kaminsky discovered how easy is to carry out DNS cache poisoning attacks. In order to prevent cache poisoning with spoofed DNS responses, it is necessary to maximise the uncertainty in the choice of a source port for a DNS query.</p>
<h3 id="poc">PoC</h3>
<p>The attached figure shows the source ports distribution difference between Graylog configured to use a data adapter based on DNS queries and ISC Bind.  The source port distribution of the DNS queries sent from Graylog to a recursive DNS name server running Bind (CLIENT_QUERY) are depicted in purple, while the queries sent from the recursive DNS server to the authoritatives (RESOLVER_QUERY) are plotted in green color. As it can be observed, in contrast to ISC Bind which presents a heterogeneous usage of source port, Graylog utilises a single source port.</p>
<p><img alt="image" src="https://user-images.githubusercontent.com/67056857/242301750-6a5a8d0d-fcd2-40d1-bbd4-73baa8279ed3.png"></p>
<h3 id="impact">Impact</h3>
<p>Although unlikely in many setups, an external attacker could inject forged DNS responses into a Graylog's lookup table cache. In order to prevent this, it is at least recommendable to distribute the DNS queries through a pool of distinct sockets, each of them with a random source port and renew them periodically.</p>
<p>(Credit to Iratxe Niño from Fundación Sarenet and Borja Marcos from Sarenet)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3</a></li>
<li><a href="https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e">https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e</a></li>
<li><a href="https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327">https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41045">https://nvd.nist.gov/vuln/detail/CVE-2023-41045</a></li>
<li><a href="https://github.com/advisories/GHSA-g96c-x7rh-99r3">https://github.com/advisories/GHSA-g96c-x7rh-99r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g96c-x7rh-99r3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-06T20:51:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graylog2:graylog2-server] Graylog vulnerable to insecure source port usage for DNS queries]]></title>
        <id>https://github.com/advisories/GHSA-g96c-x7rh-99r3</id>
        <link href="https://github.com/advisories/GHSA-g96c-x7rh-99r3"/>
        <updated>2023-08-31T18:47:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Graylog utilises only one single source port for DNS queries.</p>
<h3 id="details">Details</h3>
<p>Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again. This goes against recommended practice since 2008, when Dan Kaminsky discovered how easy is to carry out DNS cache poisoning attacks. In order to prevent cache poisoning with spoofed DNS responses, it is necessary to maximise the uncertainty in the choice of a source port for a DNS query.</p>
<h3 id="poc">PoC</h3>
<p>The attached figure shows the source ports distribution difference between Graylog configured to use a data adapter based on DNS queries and ISC Bind.  The source port distribution of the DNS queries sent from Graylog to a recursive DNS name server running Bind (CLIENT_QUERY) are depicted in purple, while the queries sent from the recursive DNS server to the authoritatives (RESOLVER_QUERY) are plotted in green color. As it can be observed, in contrast to ISC Bind which presents a heterogeneous usage of source port, Graylog utilises a single source port.</p>
<p><img alt="image" src="https://user-images.githubusercontent.com/67056857/242301750-6a5a8d0d-fcd2-40d1-bbd4-73baa8279ed3.png"></p>
<h3 id="impact">Impact</h3>
<p>Although unlikely in many setups, an external attacker could inject forged DNS responses into a Graylog's lookup table cache. In order to prevent this, it is at least recommendable to distribute the DNS queries through a pool of distinct sockets, each of them with a random source port and renew them periodically.</p>
<p>(Credit to Iratxe Niño from Fundación Sarenet and Borja Marcos from Sarenet)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3</a></li>
<li><a href="https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e">https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e</a></li>
<li><a href="https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327">https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41045">https://nvd.nist.gov/vuln/detail/CVE-2023-41045</a></li>
<li><a href="https://github.com/advisories/GHSA-g96c-x7rh-99r3">https://github.com/advisories/GHSA-g96c-x7rh-99r3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g96c-x7rh-99r3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-06T20:51:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.shiro:shiro-root] Apache Shiro Interpretation Conflict vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7cxr-h8wm-fg4c</id>
        <link href="https://github.com/advisories/GHSA-7cxr-h8wm-fg4c"/>
        <updated>2023-08-31T18:47:06.000Z</updated>
        <content type="html"><![CDATA[<p>When using Apache Shiro before 1.11.0 together with Spring Boot 2.6+, a specially crafted HTTP request may cause an authentication bypass. The authentication bypass occurs when Shiro and Spring Boot are using different pattern-matching techniques. Both Shiro and Spring Boot &lt; 2.6 default to Ant style pattern matching. Mitigation: Update to Apache Shiro 1.11.0, or set the following Spring Boot configuration value: <code>spring.mvc.pathmatch.matching-strategy = ant_path_matcher</code> </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22602">https://nvd.nist.gov/vuln/detail/CVE-2023-22602</a></li>
<li><a href="https://lists.apache.org/thread/dzj0k2smpzzgj6g666hrbrgsrlf9yhkl">https://lists.apache.org/thread/dzj0k2smpzzgj6g666hrbrgsrlf9yhkl</a></li>
<li><a href="https://github.com/advisories/GHSA-7cxr-h8wm-fg4c">https://github.com/advisories/GHSA-7cxr-h8wm-fg4c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cxr-h8wm-fg4c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-14T12:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springblade:blade-core-tool] SpringBlade vulnerable to SQL injection]]></title>
        <id>https://github.com/advisories/GHSA-62pr-54gv-vg5g</id>
        <link href="https://github.com/advisories/GHSA-62pr-54gv-vg5g"/>
        <updated>2023-08-31T18:33:40.000Z</updated>
        <content type="html"><![CDATA[<p>In SpringBlade V3.6.0 when executing SQL query, the parameters submitted by the user are not wrapped in quotation marks, which leads to SQL injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40787">https://nvd.nist.gov/vuln/detail/CVE-2023-40787</a></li>
<li><a href="https://gist.github.com/kaliwin/9d6cf58bb6ec06765cdf7b75e13ee460">https://gist.github.com/kaliwin/9d6cf58bb6ec06765cdf7b75e13ee460</a></li>
<li><a href="https://sword.bladex.cn/">https://sword.bladex.cn/</a></li>
<li><a href="https://github.com/advisories/GHSA-62pr-54gv-vg5g">https://github.com/advisories/GHSA-62pr-54gv-vg5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62pr-54gv-vg5g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-29T15:31:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-core] Apache Spark vulnerable to Log Injection]]></title>
        <id>https://github.com/advisories/GHSA-43xg-8wmj-cw8h</id>
        <link href="https://github.com/advisories/GHSA-43xg-8wmj-cw8h"/>
        <updated>2023-08-31T00:27:40.000Z</updated>
        <content type="html"><![CDATA[<p>A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31777">https://nvd.nist.gov/vuln/detail/CVE-2022-31777</a></li>
<li><a href="https://lists.apache.org/thread/60mgbswq2lsmrxykfxpqq13ztkm2ht6q">https://lists.apache.org/thread/60mgbswq2lsmrxykfxpqq13ztkm2ht6q</a></li>
<li><a href="https://github.com/apache/spark/commit/ad90195de56688ce0898691eb9d04297ab0871ad">https://github.com/apache/spark/commit/ad90195de56688ce0898691eb9d04297ab0871ad</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-42976.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-42976.yaml</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/14">http://www.openwall.com/lists/oss-security/2022/11/01/14</a></li>
<li><a href="https://web.archive.org/web/20220728105026/https://issues.apache.org/jira/browse/SPARK-39505">https://web.archive.org/web/20220728105026/https://issues.apache.org/jira/browse/SPARK-39505</a></li>
<li><a href="https://github.com/advisories/GHSA-43xg-8wmj-cw8h">https://github.com/advisories/GHSA-43xg-8wmj-cw8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43xg-8wmj-cw8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-core] Apache Spark vulnerable to Log Injection]]></title>
        <id>https://github.com/advisories/GHSA-43xg-8wmj-cw8h</id>
        <link href="https://github.com/advisories/GHSA-43xg-8wmj-cw8h"/>
        <updated>2023-08-31T00:27:40.000Z</updated>
        <content type="html"><![CDATA[<p>A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31777">https://nvd.nist.gov/vuln/detail/CVE-2022-31777</a></li>
<li><a href="https://lists.apache.org/thread/60mgbswq2lsmrxykfxpqq13ztkm2ht6q">https://lists.apache.org/thread/60mgbswq2lsmrxykfxpqq13ztkm2ht6q</a></li>
<li><a href="https://github.com/apache/spark/commit/ad90195de56688ce0898691eb9d04297ab0871ad">https://github.com/apache/spark/commit/ad90195de56688ce0898691eb9d04297ab0871ad</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-42976.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-42976.yaml</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/14">http://www.openwall.com/lists/oss-security/2022/11/01/14</a></li>
<li><a href="https://web.archive.org/web/20220728105026/https://issues.apache.org/jira/browse/SPARK-39505">https://web.archive.org/web/20220728105026/https://issues.apache.org/jira/browse/SPARK-39505</a></li>
<li><a href="https://github.com/advisories/GHSA-43xg-8wmj-cw8h">https://github.com/advisories/GHSA-43xg-8wmj-cw8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43xg-8wmj-cw8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-parent_2.12] Apache Spark UI can allow impersonation if ACLs enabled]]></title>
        <id>https://github.com/advisories/GHSA-4x9r-j582-cgr8</id>
        <link href="https://github.com/advisories/GHSA-4x9r-j582-cgr8"/>
        <updated>2023-08-31T00:22:30.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Spark UI offers the possibility to enable ACLs via the configuration option <code>spark.acls.enable</code>. With an authentication filter, this checks whether a user has access permissions to view or modify the application. If ACLs are enabled, a code path in HttpSecurityFilter can allow someone to perform impersonation by providing an arbitrary user name. A malicious user might then be able to reach a permission check function that will ultimately build a Unix shell command based on their input, and execute it. This will result in arbitrary shell command execution as the user Spark is currently running as. This affects Apache Spark versions 3.0.3 and earlier, versions 3.1.1 to 3.1.2, and versions 3.2.0 to 3.2.1.</p>
<p>A previous version of this advisory incorrectly stated that version 3.1.3 was not vulnerable. Per <a href="https://github.com/advisories/GHSA-59hw-j9g6-mfg3">GHSA-59hw-j9g6-mfg3</a>, version 3.1.3 is vulnerable and vulnerable version ranges in this advisory have been changed to reflect the correct information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33891">https://nvd.nist.gov/vuln/detail/CVE-2022-33891</a></li>
<li><a href="https://lists.apache.org/thread/p847l3kopoo5bjtmxrcwk21xp6tjxqlc">https://lists.apache.org/thread/p847l3kopoo5bjtmxrcwk21xp6tjxqlc</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-236.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-236.yaml</a></li>
<li><a href="http://packetstormsecurity.com/files/168309/Apache-Spark-Unauthenticated-Command-Injection.html">http://packetstormsecurity.com/files/168309/Apache-Spark-Unauthenticated-Command-Injection.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/05/02/1">http://www.openwall.com/lists/oss-security/2023/05/02/1</a></li>
<li><a href="https://github.com/advisories/GHSA-4x9r-j582-cgr8">https://github.com/advisories/GHSA-4x9r-j582-cgr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x9r-j582-cgr8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-19T00:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-parent_2.12] Apache Spark UI can allow impersonation if ACLs enabled]]></title>
        <id>https://github.com/advisories/GHSA-4x9r-j582-cgr8</id>
        <link href="https://github.com/advisories/GHSA-4x9r-j582-cgr8"/>
        <updated>2023-08-31T00:22:30.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Spark UI offers the possibility to enable ACLs via the configuration option <code>spark.acls.enable</code>. With an authentication filter, this checks whether a user has access permissions to view or modify the application. If ACLs are enabled, a code path in HttpSecurityFilter can allow someone to perform impersonation by providing an arbitrary user name. A malicious user might then be able to reach a permission check function that will ultimately build a Unix shell command based on their input, and execute it. This will result in arbitrary shell command execution as the user Spark is currently running as. This affects Apache Spark versions 3.0.3 and earlier, versions 3.1.1 to 3.1.2, and versions 3.2.0 to 3.2.1.</p>
<p>A previous version of this advisory incorrectly stated that version 3.1.3 was not vulnerable. Per <a href="https://github.com/advisories/GHSA-59hw-j9g6-mfg3">GHSA-59hw-j9g6-mfg3</a>, version 3.1.3 is vulnerable and vulnerable version ranges in this advisory have been changed to reflect the correct information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33891">https://nvd.nist.gov/vuln/detail/CVE-2022-33891</a></li>
<li><a href="https://lists.apache.org/thread/p847l3kopoo5bjtmxrcwk21xp6tjxqlc">https://lists.apache.org/thread/p847l3kopoo5bjtmxrcwk21xp6tjxqlc</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-236.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-236.yaml</a></li>
<li><a href="http://packetstormsecurity.com/files/168309/Apache-Spark-Unauthenticated-Command-Injection.html">http://packetstormsecurity.com/files/168309/Apache-Spark-Unauthenticated-Command-Injection.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/05/02/1">http://www.openwall.com/lists/oss-security/2023/05/02/1</a></li>
<li><a href="https://github.com/advisories/GHSA-4x9r-j582-cgr8">https://github.com/advisories/GHSA-4x9r-j582-cgr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x9r-j582-cgr8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-19T00:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.jcr.contentloader] Apache Sling JCR ContentLoader XmlReader Arbitrary File Load]]></title>
        <id>https://github.com/advisories/GHSA-wjp3-4xcq-598p</id>
        <link href="https://github.com/advisories/GHSA-wjp3-4xcq-598p"/>
        <updated>2023-08-29T23:58:03.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Sling JCR ContentLoader 2.1.4 XmlReader used in the Sling JCR content loader module makes it possible to import arbitrary files in the content repository, including local files, causing potential information leaks. Users should upgrade to version 2.1.6 of the JCR ContentLoader</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3353">https://nvd.nist.gov/vuln/detail/CVE-2012-3353</a></li>
<li><a href="https://issues.apache.org/jira/browse/SLING-2512">https://issues.apache.org/jira/browse/SLING-2512</a></li>
<li><a href="https://lists.apache.org/thread/owd2xw86l19dh1f1zlhq41l7wlnd16sk">https://lists.apache.org/thread/owd2xw86l19dh1f1zlhq41l7wlnd16sk</a></li>
<li><a href="https://github.com/advisories/GHSA-wjp3-4xcq-598p">https://github.com/advisories/GHSA-wjp3-4xcq-598p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wjp3-4xcq-598p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:46:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.qpid:qpid-parent] Apache QPID Allows Remote Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-phw8-fw9g-v3xc</id>
        <link href="https://github.com/advisories/GHSA-phw8-fw9g-v3xc"/>
        <updated>2023-08-29T23:50:21.000Z</updated>
        <content type="html"><![CDATA[<p>Apache QPID 0.14, 0.16, and earlier uses a NullAuthenticator mechanism to authenticate catch-up shadow connections to AMQP brokers, which allows remote attackers to bypass authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3467">https://nvd.nist.gov/vuln/detail/CVE-2012-3467</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=836276">https://bugzilla.redhat.com/show_bug.cgi?id=836276</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/77568">https://exchange.xforce.ibmcloud.com/vulnerabilities/77568</a></li>
<li><a href="https://issues.apache.org/jira/browse/QPID-3849">https://issues.apache.org/jira/browse/QPID-3849</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1277.html">http://rhn.redhat.com/errata/RHSA-2012-1277.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2012-1279.html">http://rhn.redhat.com/errata/RHSA-2012-1279.html</a></li>
<li><a href="http://svn.apache.org/viewvc?view=revision&amp;revision=1352992">http://svn.apache.org/viewvc?view=revision&amp;revision=1352992</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/08/09/6">http://www.openwall.com/lists/oss-security/2012/08/09/6</a></li>
<li><a href="https://web.archive.org/web/20200229113556/http://www.securityfocus.com/bid/54954">https://web.archive.org/web/20200229113556/http://www.securityfocus.com/bid/54954</a></li>
<li><a href="https://github.com/advisories/GHSA-phw8-fw9g-v3xc">https://github.com/advisories/GHSA-phw8-fw9g-v3xc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phw8-fw9g-v3xc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:44:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.servlets.post] Apache Sling POST Servlets Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-342c-f869-5m44</id>
        <link href="https://github.com/advisories/GHSA-342c-f869-5m44"/>
        <updated>2023-08-29T22:53:52.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>@CopyFrom</code> operation in the POST servlet in the <code>org.apache.sling.servlets.post</code> bundle before 2.1.2 in Apache Sling does not prevent attempts to copy an ancestor node to a descendant node, which allows remote attackers to cause a denial of service (infinite loop) via a crafted HTTP request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2138">https://nvd.nist.gov/vuln/detail/CVE-2012-2138</a></li>
<li><a href="https://issues.apache.org/jira/browse/SLING-2517">https://issues.apache.org/jira/browse/SLING-2517</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/www-announce/201207.mbox/%3CCAEWfVJ=PwoQmwJg0KmbrC17Gw51kgfKRsqgy=4RpMQsdGh0bVg@mail.gmail.com%3E">http://mail-archives.apache.org/mod_mbox/www-announce/201207.mbox/%3CCAEWfVJ=PwoQmwJg0KmbrC17Gw51kgfKRsqgy=4RpMQsdGh0bVg@mail.gmail.com%3E</a></li>
<li><a href="http://svn.apache.org/viewvc?view=revision&amp;revision=1352865">http://svn.apache.org/viewvc?view=revision&amp;revision=1352865</a></li>
<li><a href="https://github.com/apache/sling-org-apache-sling-servlets-post/commit/0205892908d6ea755645be5fc16e9df53e2e7261">https://github.com/apache/sling-org-apache-sling-servlets-post/commit/0205892908d6ea755645be5fc16e9df53e2e7261</a></li>
<li><a href="https://github.com/advisories/GHSA-342c-f869-5m44">https://github.com/advisories/GHSA-342c-f869-5m44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-342c-f869-5m44</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-all] Apache ActiveMQ default configuration subject to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-34fp-xvxp-rg22</id>
        <link href="https://github.com/advisories/GHSA-34fp-xvxp-rg22"/>
        <updated>2023-08-29T21:32:57.000Z</updated>
        <content type="html"><![CDATA[<p>The default configuration of Apache ActiveMQ before 5.8.0 enables a sample web application, which allows remote attackers to cause a denial of service (broker resource consumption) via HTTP requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6551">https://nvd.nist.gov/vuln/detail/CVE-2012-6551</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-4124">https://issues.apache.org/jira/browse/AMQ-4124</a></li>
<li><a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&amp;version=12323282">https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&amp;version=12323282</a></li>
<li><a href="http://activemq.apache.org/activemq-580-release.html">http://activemq.apache.org/activemq-580-release.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2013-1029.html">http://rhn.redhat.com/errata/RHSA-2013-1029.html</a></li>
<li><a href="https://web.archive.org/web/20130916074709/http://activemq.2283324.n4.nabble.com/DISCUSS-ActiveMQ-out-of-the-box-Should-not-include-the-demos-tc4658044.html">https://web.archive.org/web/20130916074709/http://activemq.2283324.n4.nabble.com/DISCUSS-ActiveMQ-out-of-the-box-Should-not-include-the-demos-tc4658044.html</a></li>
<li><a href="https://web.archive.org/web/20200228042520/http://www.securityfocus.com/bid/59401">https://web.archive.org/web/20200228042520/http://www.securityfocus.com/bid/59401</a></li>
<li><a href="https://github.com/advisories/GHSA-34fp-xvxp-rg22">https://github.com/advisories/GHSA-34fp-xvxp-rg22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-34fp-xvxp-rg22</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:46:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.james.hupa:hupa-parent] Apache James Hupa Webmail application Cross-site Scripting Vulnerabilities]]></title>
        <id>https://github.com/advisories/GHSA-7crp-p2vc-69r7</id>
        <link href="https://github.com/advisories/GHSA-7crp-p2vc-69r7"/>
        <updated>2023-08-29T21:19:24.000Z</updated>
        <content type="html"><![CDATA[<p>Two XSS vulnerabilities were fixed in message list and view in the Hupa Webmail application from the Apache James project. An attacker could send a carefully crafted email to a user of Hupa which would trigger a XSS when the email was opened or when a list of messages were viewed. This issue was addressed in Hupa 0.0.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3536">https://nvd.nist.gov/vuln/detail/CVE-2012-3536</a></li>
<li><a href="https://james.apache.org/hupa/index.html">https://james.apache.org/hupa/index.html</a></li>
<li><a href="http://svn.apache.org/viewvc?view=revision&amp;revision=1373762">http://svn.apache.org/viewvc?view=revision&amp;revision=1373762</a></li>
<li><a href="https://github.com/apache/james-hupa/commit/aff28a8117a49969b0fc8cc9926c19fa90146d8d">https://github.com/apache/james-hupa/commit/aff28a8117a49969b0fc8cc9926c19fa90146d8d</a></li>
<li><a href="https://github.com/advisories/GHSA-7crp-p2vc-69r7">https://github.com/advisories/GHSA-7crp-p2vc-69r7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7crp-p2vc-69r7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:37:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hadoop:hadoop-main] Apache Hadoop allows impersonation of arbitrary cluster user accounts]]></title>
        <id>https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</id>
        <link href="https://github.com/advisories/GHSA-c6f9-4pmv-m7m6"/>
        <updated>2023-08-29T21:08:06.000Z</updated>
        <content type="html"><![CDATA[<p>The Kerberos/MapReduce security functionality in Apache Hadoop 0.20.203.0 through 0.20.205.0, 0.23.x before 0.23.2, and 1.0.x before 1.0.2, as used in Cloudera CDH CDH3u0 through CDH3u2, Cloudera hadoop-0.20-sbin before 0.20.2+923.197, and other products, allows remote authenticated users to impersonate arbitrary cluster user accounts via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1574">https://nvd.nist.gov/vuln/detail/CVE-2012-1574</a></li>
<li><a href="https://seclists.org/fulldisclosure/2012/Apr/70">https://seclists.org/fulldisclosure/2012/Apr/70</a></li>
<li><a href="https://web.archive.org/web/20120720041621/https://ccp.cloudera.com/display/DOC/Cloudera+Security+Bulletin#ClouderaSecurityBulletin-MapReducewithSecurity">https://web.archive.org/web/20120720041621/https://ccp.cloudera.com/display/DOC/Cloudera+Security+Bulletin#ClouderaSecurityBulletin-MapReducewithSecurity</a></li>
<li><a href="https://web.archive.org/web/20151001135054/http://archives.neohapsis.com/archives/bugtraq/2012-04/0051.html">https://web.archive.org/web/20151001135054/http://archives.neohapsis.com/archives/bugtraq/2012-04/0051.html</a></li>
<li><a href="https://web.archive.org/web/20161215212154/https://www.cloudera.com/documentation/other/security-bulletins/topics/csb_topic_1.html#topic_1_0_2">https://web.archive.org/web/20161215212154/https://www.cloudera.com/documentation/other/security-bulletins/topics/csb_topic_1.html#topic_1_0_2</a></li>
<li><a href="https://web.archive.org/web/20200229125105/http://www.securityfocus.com/bid/52939">https://web.archive.org/web/20200229125105/http://www.securityfocus.com/bid/52939</a></li>
<li><a href="https://github.com/advisories/GHSA-c6f9-4pmv-m7m6">https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:54:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hadoop:hadoop-main] Apache Hadoop allows impersonation of arbitrary cluster user accounts]]></title>
        <id>https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</id>
        <link href="https://github.com/advisories/GHSA-c6f9-4pmv-m7m6"/>
        <updated>2023-08-29T21:08:06.000Z</updated>
        <content type="html"><![CDATA[<p>The Kerberos/MapReduce security functionality in Apache Hadoop 0.20.203.0 through 0.20.205.0, 0.23.x before 0.23.2, and 1.0.x before 1.0.2, as used in Cloudera CDH CDH3u0 through CDH3u2, Cloudera hadoop-0.20-sbin before 0.20.2+923.197, and other products, allows remote authenticated users to impersonate arbitrary cluster user accounts via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1574">https://nvd.nist.gov/vuln/detail/CVE-2012-1574</a></li>
<li><a href="https://seclists.org/fulldisclosure/2012/Apr/70">https://seclists.org/fulldisclosure/2012/Apr/70</a></li>
<li><a href="https://web.archive.org/web/20120720041621/https://ccp.cloudera.com/display/DOC/Cloudera+Security+Bulletin#ClouderaSecurityBulletin-MapReducewithSecurity">https://web.archive.org/web/20120720041621/https://ccp.cloudera.com/display/DOC/Cloudera+Security+Bulletin#ClouderaSecurityBulletin-MapReducewithSecurity</a></li>
<li><a href="https://web.archive.org/web/20151001135054/http://archives.neohapsis.com/archives/bugtraq/2012-04/0051.html">https://web.archive.org/web/20151001135054/http://archives.neohapsis.com/archives/bugtraq/2012-04/0051.html</a></li>
<li><a href="https://web.archive.org/web/20161215212154/https://www.cloudera.com/documentation/other/security-bulletins/topics/csb_topic_1.html#topic_1_0_2">https://web.archive.org/web/20161215212154/https://www.cloudera.com/documentation/other/security-bulletins/topics/csb_topic_1.html#topic_1_0_2</a></li>
<li><a href="https://web.archive.org/web/20200229125105/http://www.securityfocus.com/bid/52939">https://web.archive.org/web/20200229125105/http://www.securityfocus.com/bid/52939</a></li>
<li><a href="https://github.com/advisories/GHSA-c6f9-4pmv-m7m6">https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6f9-4pmv-m7m6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:54:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts2-parent] Apache Struts Remote Java Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-4wrr-9h5r-m92w</id>
        <link href="https://github.com/advisories/GHSA-4wrr-9h5r-m92w"/>
        <updated>2023-08-29T20:37:06.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>ExceptionDelegator</code> component in Apache Struts before 2.2.3.1 interprets parameter values as OGNL expressions during certain exception handling for mismatched data types of properties, which allows remote attackers to execute arbitrary Java code via a crafted parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-0391">https://nvd.nist.gov/vuln/detail/CVE-2012-0391</a></li>
<li><a href="https://issues.apache.org/jira/browse/WW-3668">https://issues.apache.org/jira/browse/WW-3668</a></li>
<li><a href="https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt">https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt</a></li>
<li><a href="http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html">http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html</a></li>
<li><a href="http://struts.apache.org/2.x/docs/s2-008.html">http://struts.apache.org/2.x/docs/s2-008.html</a></li>
<li><a href="http://struts.apache.org/2.x/docs/version-notes-2311.html">http://struts.apache.org/2.x/docs/version-notes-2311.html</a></li>
<li><a href="http://www.exploit-db.com/exploits/18329">http://www.exploit-db.com/exploits/18329</a></li>
<li><a href="https://github.com/apache/struts/commit/25e50069d60434a30395e3a98357ffba2bed427e">https://github.com/apache/struts/commit/25e50069d60434a30395e3a98357ffba2bed427e</a></li>
<li><a href="https://github.com/advisories/GHSA-4wrr-9h5r-m92w">https://github.com/advisories/GHSA-4wrr-9h5r-m92w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wrr-9h5r-m92w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-04T00:29:43.000Z</published>
    </entry>
</feed>