<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-06-16T17:01:23.247Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.xerial.snappy:snappy-java] snappy-java's unchecked chunk length leads to DoS]]></title>
        <id>https://github.com/advisories/GHSA-qcwq-55hx-v3vh</id>
        <link href="https://github.com/advisories/GHSA-qcwq-55hx-v3vh"/>
        <updated>2023-06-15T17:15:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Due to use of an unchecked chunk length, an unrecoverable fatal error can occur.</p>
<h2 id="impact">Impact</h2>
<p>Denial of Service</p>
<h2 id="description">Description</h2>
<p>The code in the function <a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388">hasNextChunk</a> in the file <a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java">SnappyInputStream.java</a> checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.</p>
<pre><code class="language-java">        int readBytes = readNext(header, 0, 4);
        if (readBytes &lt; 4) {
            return false;
        }

        int chunkSize = SnappyOutputStream.readInt(header, 0);
        if (chunkSize == SnappyCodec.MAGIC_HEADER_HEAD) {
            .........
        }

        // extend the compressed data buffer size
        if (compressed == null || chunkSize &gt; compressed.length) {
            compressed = new byte[chunkSize];
        }
</code></pre>
<p>In the case that the “compressed” variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the “chunkSize” variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a “java.lang.NegativeArraySizeException” exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal “java.lang.OutOfMemoryError” error.</p>
<h2 id="steps-to-reproduce">Steps To Reproduce</h2>
<p>Compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.SnappyInputStream;

import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff};
        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));
        byte[] out = new byte[50];
        try {
            in.read(out);
        }
        catch (Exception ignored) {

        }
    }
}
</code></pre>
<p>The program will crash with the following error (or similar), even though there is a catch clause, since “OutOfMemoryError” does not get caught by catching the “Exception” class:</p>
<pre><code>Exception in thread "main" java.lang.OutOfMemoryError: Requested array size exceeds VM limit
    at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422)
    at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167)
    at java.base/java.io.InputStream.read(InputStream.java:217)
    at org.example.Main.main(Main.java:12)
</code></pre>
<p>Alternatively - compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.SnappyInputStream;

import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff};
        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));
        byte[] out = new byte[50];
        in.read(out);
    }
}
</code></pre>
<p>The program will crash with the following error (or similar):</p>
<pre><code>Exception in thread "main" java.lang.NegativeArraySizeException: -1
    at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422)
    at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167)
    at java.base/java.io.InputStream.read(InputStream.java:217)
    at org.example.Main.main(Main.java:12)
</code></pre>
<p>It is important to note that these examples were written by using a flow that is generally used by developers, and can be seen for example in the Apache project “flume”: <a href="https://github.com/apache/flume/blob/f9dbb2de255d59e35e3668a5c6c66a268a055207/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java#L278">https://github.com/apache/flume/blob/f9dbb2de255d59e35e3668a5c6c66a268a055207/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java#L278</a>. Since they used try-catch, the “NegativeArraySizeException” exception won’t harm their users, but the “OutOfMemoryError” error can.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh">https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh</a></li>
<li><a href="https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea">https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java</a></li>
<li><a href="https://github.com/advisories/GHSA-qcwq-55hx-v3vh">https://github.com/advisories/GHSA-qcwq-55hx-v3vh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcwq-55hx-v3vh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-15T17:15:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xerial.snappy:snappy-java] snappy-java's Integer Overflow vulnerability in compress leads to DoS]]></title>
        <id>https://github.com/advisories/GHSA-fjpj-2g6w-x25r</id>
        <link href="https://github.com/advisories/GHSA-fjpj-2g6w-x25r"/>
        <updated>2023-06-16T16:51:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Due to unchecked multiplications, an integer overflow may occur, causing an unrecoverable fatal error.</p>
<h2 id="impact">Impact</h2>
<p>Denial of Service</p>
<h2 id="description">Description</h2>
<p>The function <a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169">compress(char[] input)</a> in the file <a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java">Snappy.java</a> receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the <a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422">rawCompress</a> function.</p>
<pre><code class="language-java">public static byte[] compress(char[] input)
            throws IOException
    {
        return rawCompress(input, input.length * 2); // char uses 2 bytes
    }
</code></pre>
<p>Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.</p>
<pre><code class="language-java">    public static byte[] rawCompress(Object data, int byteSize)
            throws IOException
    {
        byte[] buf = new byte[Snappy.maxCompressedLength(byteSize)];
        int compressedByteSize = impl.rawCompress(data, 0, byteSize, buf, 0);
        byte[] result = new byte[compressedByteSize];
        System.arraycopy(buf, 0, result, 0, compressedByteSize);
        return result;
    }
</code></pre>
<p>Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a “java.lang.NegativeArraySizeException” exception will be raised while trying to allocate the array “buf”. On the other side, if the result is positive, the “buf” array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.
The same issue exists also when using the “compress” functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.</p>
<h2 id="steps-to-reproduce">Steps To Reproduce</h2>
<p>Compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.Snappy;

import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        char[] uncompressed = new char[0x40000000];
        byte[] compressed = Snappy.compress(uncompressed);
    }
}
</code></pre>
<p>The program will crash, creating crashdumps and showing the following error (or similar):</p>
<pre><code>#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000063a01c20, pid=21164, tid=508
#
.......
</code></pre>
<p>Alternatively - compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.Snappy;

import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        char[] uncompressed = new char[0x3fffffff];
        byte[] compressed = Snappy.compress(uncompressed);
    }
}
</code></pre>
<p>The program will crash with the following error (or similar), since the maxCompressedLength returns a value that is interpreted as negative by java:</p>
<pre><code>Exception in thread "main" java.lang.NegativeArraySizeException: -1789569677
    at org.xerial.snappy.Snappy.rawCompress(Snappy.java:425)
    at org.xerial.snappy.Snappy.compress(Snappy.java:172)
    at org.example.Main.main(Main.java:10)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xerial/snappy-java/security/advisories/GHSA-fjpj-2g6w-x25r">https://github.com/xerial/snappy-java/security/advisories/GHSA-fjpj-2g6w-x25r</a></li>
<li><a href="https://github.com/xerial/snappy-java/commit/d0042551e4a3509a725038eb9b2ad1f683674d94">https://github.com/xerial/snappy-java/commit/d0042551e4a3509a725038eb9b2ad1f683674d94</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34454">https://nvd.nist.gov/vuln/detail/CVE-2023-34454</a></li>
<li><a href="https://github.com/advisories/GHSA-fjpj-2g6w-x25r">https://github.com/advisories/GHSA-fjpj-2g6w-x25r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fjpj-2g6w-x25r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-15T16:28:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xerial.snappy:snappy-java] snappy-java's Integer Overflow vulnerability in shuffle leads to DoS]]></title>
        <id>https://github.com/advisories/GHSA-pqr6-cmr2-h8hf</id>
        <link href="https://github.com/advisories/GHSA-pqr6-cmr2-h8hf"/>
        <updated>2023-06-16T16:51:35.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Due to unchecked multiplications, an integer overflow may occur, causing a fatal error.</p>
<h2 id="impact">Impact</h2>
<p>Denial of Service</p>
<h2 id="description">Description</h2>
<p>The function <a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107">shuffle(int[] input)</a> in the file <a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java">BitShuffle.java</a> receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function.</p>
<pre><code class="language-java">public static byte[] shuffle(int[] input) throws IOException {
        byte[] output = new byte[input.length * 4];
        int numProcessed = impl.shuffle(input, 0, 4, input.length * 4, output, 0);
        assert(numProcessed == input.length * 4);
        return output;
    }
</code></pre>
<p>Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a “java.lang.NegativeArraySizeException” exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as “java.lang.ArrayIndexOutOfBoundsException”.
The same issue exists also when using the “shuffle” functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.</p>
<h2 id="steps-to-reproduce">Steps To Reproduce</h2>
<p>Compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.BitShuffle;

import java.io.*;


public class Main {

    public static void main(String[] args) throws IOException {
        int[] original = new int[0x40000000];
        byte[] shuffled = BitShuffle.shuffle(original);
        System.out.println(shuffled[0]);
    }
}
</code></pre>
<p>The program will crash, showing the following error (or similar):</p>
<pre><code>Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
    at org.example.Main.main(Main.java:12)

Process finished with exit code 1
</code></pre>
<p>Alternatively - compile and run the following code:</p>
<pre><code class="language-java">package org.example;
import org.xerial.snappy.BitShuffle;

import java.io.*;


public class Main {

    public static void main(String[] args) throws IOException {
        int[] original = new int[0x20000000];
        byte[] shuffled = BitShuffle.shuffle(original);
    }
}
</code></pre>
<p>The program will crash with the following error (or similar):</p>
<pre><code>Exception in thread "main" java.lang.NegativeArraySizeException: -2147483648
    at org.xerial.snappy.BitShuffle.shuffle(BitShuffle.java:108)
    at org.example.Main.main(Main.java:11)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf">https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf</a></li>
<li><a href="https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905">https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107</a></li>
<li><a href="https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34453">https://nvd.nist.gov/vuln/detail/CVE-2023-34453</a></li>
<li><a href="https://github.com/advisories/GHSA-pqr6-cmr2-h8hf">https://github.com/advisories/GHSA-pqr6-cmr2-h8hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqr6-cmr2-h8hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-15T16:13:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.pwall.json:jsonutil] JSONUtil vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-w2rr-wvh9-m2m7</id>
        <link href="https://github.com/advisories/GHSA-w2rr-wvh9-m2m7"/>
        <updated>2023-06-14T21:20:51.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered JSONUtil through 5.0 that allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34615">https://nvd.nist.gov/vuln/detail/CVE-2023-34615</a></li>
<li><a href="https://github.com/billdavidson/JSONUtil/issues/10">https://github.com/billdavidson/JSONUtil/issues/10</a></li>
<li><a href="https://github.com/advisories/GHSA-w2rr-wvh9-m2m7">https://github.com/advisories/GHSA-w2rr-wvh9-m2m7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2rr-wvh9-m2m7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[de.grobmeier.json:jjson] jjson vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-75m3-f4hr-2vh9</id>
        <link href="https://github.com/advisories/GHSA-75m3-f4hr-2vh9"/>
        <updated>2023-06-14T21:11:42.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered jjson through 0.1.7 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35110">https://nvd.nist.gov/vuln/detail/CVE-2023-35110</a></li>
<li><a href="https://github.com/grobmeier/jjson/issues/2">https://github.com/grobmeier/jjson/issues/2</a></li>
<li><a href="https://github.com/advisories/GHSA-75m3-f4hr-2vh9">https://github.com/advisories/GHSA-75m3-f4hr-2vh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75m3-f4hr-2vh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.sf.sojo:sojo] sojo vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-75r3-38rh-pmxv</id>
        <link href="https://github.com/advisories/GHSA-75r3-38rh-pmxv"/>
        <updated>2023-06-14T21:10:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered sojo thru 1.1.1 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34613">https://nvd.nist.gov/vuln/detail/CVE-2023-34613</a></li>
<li><a href="https://github.com/maddingo/sojo/issues/15">https://github.com/maddingo/sojo/issues/15</a></li>
<li><a href="https://github.com/advisories/GHSA-75r3-38rh-pmxv">https://github.com/advisories/GHSA-75r3-38rh-pmxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75r3-38rh-pmxv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.helger.commons:ph-json] ph-json vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-mx27-gg24-h2jc</id>
        <link href="https://github.com/advisories/GHSA-mx27-gg24-h2jc"/>
        <updated>2023-06-14T21:16:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in ph-json that allows attackers to cause a denial of service or other unspecified impacts via crafted objects that have deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34612">https://nvd.nist.gov/vuln/detail/CVE-2023-34612</a></li>
<li><a href="https://github.com/phax/ph-commons/issues/35">https://github.com/phax/ph-commons/issues/35</a></li>
<li><a href="https://github.com/advisories/GHSA-mx27-gg24-h2jc">https://github.com/advisories/GHSA-mx27-gg24-h2jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx27-gg24-h2jc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.cedarsoftware:json-io] json-io vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-779h-3r69-4f5p</id>
        <link href="https://github.com/advisories/GHSA-779h-3r69-4f5p"/>
        <updated>2023-06-14T21:15:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered json-io through 4.14.0 allows attackers to cause a denial of service or other unspecified impacts via crafted object that have deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34610">https://nvd.nist.gov/vuln/detail/CVE-2023-34610</a></li>
<li><a href="https://github.com/jdereg/json-io/issues/169">https://github.com/jdereg/json-io/issues/169</a></li>
<li><a href="https://github.com/advisories/GHSA-779h-3r69-4f5p">https://github.com/advisories/GHSA-779h-3r69-4f5p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-779h-3r69-4f5p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.sourceforge.htmlcleaner:htmlcleaner] htmlcleaner vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-jv4x-j47q-6qvp</id>
        <link href="https://github.com/advisories/GHSA-jv4x-j47q-6qvp"/>
        <updated>2023-06-14T21:05:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered htmlcleaner through version 2.28 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34624">https://nvd.nist.gov/vuln/detail/CVE-2023-34624</a></li>
<li><a href="https://github.com/amplafi/htmlcleaner/issues/13">https://github.com/amplafi/htmlcleaner/issues/13</a></li>
<li><a href="https://github.com/advisories/GHSA-jv4x-j47q-6qvp">https://github.com/advisories/GHSA-jv4x-j47q-6qvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jv4x-j47q-6qvp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.google.guava:guava] Guava vulnerable to insecure use of temporary directory]]></title>
        <id>https://github.com/advisories/GHSA-7g45-4rm6-3mm3</id>
        <link href="https://github.com/advisories/GHSA-7g45-4rm6-3mm3"/>
        <updated>2023-06-14T21:01:08.000Z</updated>
        <content type="html"><![CDATA[<p>Use of Java's default temporary directory for file creation in <code>FileBackedOutputStream</code> in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.</p>
<p>Even though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2976">https://nvd.nist.gov/vuln/detail/CVE-2023-2976</a></li>
<li><a href="https://github.com/google/guava/issues/2575">https://github.com/google/guava/issues/2575</a></li>
<li><a href="https://github.com/google/guava/issues/6532">https://github.com/google/guava/issues/6532</a></li>
<li><a href="https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284">https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284</a></li>
<li><a href="https://github.com/google/guava/releases/tag/v32.0.0">https://github.com/google/guava/releases/tag/v32.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-7g45-4rm6-3mm3">https://github.com/advisories/GHSA-7g45-4rm6-3mm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g45-4rm6-3mm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-14T18:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cc.plural:jsonij] jsonij vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-66gv-5m8q-rrjc</id>
        <link href="https://github.com/advisories/GHSA-66gv-5m8q-rrjc"/>
        <updated>2023-06-14T21:15:10.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered jmarsden/jsonij through 0.5.2 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34614">https://nvd.nist.gov/vuln/detail/CVE-2023-34614</a></li>
<li><a href="https://bitbucket.org/jmarsden/jsonij/issues/7/stack-overflow-error-caused-by-jsonij">https://bitbucket.org/jmarsden/jsonij/issues/7/stack-overflow-error-caused-by-jsonij</a></li>
<li><a href="https://github.com/advisories/GHSA-66gv-5m8q-rrjc">https://github.com/advisories/GHSA-66gv-5m8q-rrjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66gv-5m8q-rrjc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.progsbase.libraries:JSON] pbjson vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-p4c9-x742-qh8c</id>
        <link href="https://github.com/advisories/GHSA-p4c9-x742-qh8c"/>
        <updated>2023-06-14T21:16:38.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered pbjson through 0.4.0 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34616">https://nvd.nist.gov/vuln/detail/CVE-2023-34616</a></li>
<li><a href="https://github.com/InductiveComputerScience/pbJson/issues/2">https://github.com/InductiveComputerScience/pbJson/issues/2</a></li>
<li><a href="https://github.com/advisories/GHSA-p4c9-x742-qh8c">https://github.com/advisories/GHSA-p4c9-x742-qh8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4c9-x742-qh8c</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.owlike:genson] genson vulnerable to stack exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-fj64-qprx-q7vq</id>
        <link href="https://github.com/advisories/GHSA-fj64-qprx-q7vq"/>
        <updated>2023-06-14T21:15:44.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered genson through 1.6 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34617">https://nvd.nist.gov/vuln/detail/CVE-2023-34617</a></li>
<li><a href="https://github.com/owlike/genson/issues/191">https://github.com/owlike/genson/issues/191</a></li>
<li><a href="https://github.com/advisories/GHSA-fj64-qprx-q7vq">https://github.com/advisories/GHSA-fj64-qprx-q7vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fj64-qprx-q7vq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.hjson:hjson] hjson stack exhaustion vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5wfc-hjrc-gq87</id>
        <link href="https://github.com/advisories/GHSA-5wfc-hjrc-gq87"/>
        <updated>2023-06-14T21:15:55.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered hjson through 3.0.0 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34620">https://nvd.nist.gov/vuln/detail/CVE-2023-34620</a></li>
<li><a href="https://github.com/hjson/hjson-java/issues/24">https://github.com/hjson/hjson-java/issues/24</a></li>
<li><a href="https://github.com/advisories/GHSA-5wfc-hjrc-gq87">https://github.com/advisories/GHSA-5wfc-hjrc-gq87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5wfc-hjrc-gq87</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-14T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ease-plugin] Jenkins Digital.ai App Management Publisher Plugin missing permission checks]]></title>
        <id>https://github.com/advisories/GHSA-5ghv-wxh9-7356</id>
        <link href="https://github.com/advisories/GHSA-5ghv-wxh9-7356"/>
        <updated>2023-06-14T20:33:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Digital.ai App Management Publisher Plugin 2.6 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35149">https://nvd.nist.gov/vuln/detail/CVE-2023-35149</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2911">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2911</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/5">http://www.openwall.com/lists/oss-security/2023/06/14/5</a></li>
<li><a href="https://github.com/advisories/GHSA-5ghv-wxh9-7356">https://github.com/advisories/GHSA-5ghv-wxh9-7356</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5ghv-wxh9-7356</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-14T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ease-plugin] Jenkins Digital.ai App Management Publisher Plugin vulnerable to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-r72x-2h45-p59x</id>
        <link href="https://github.com/advisories/GHSA-r72x-2h45-p59x"/>
        <updated>2023-06-14T20:32:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Digital.ai App Management Publisher Plugin 2.6 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35148">https://nvd.nist.gov/vuln/detail/CVE-2023-35148</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2911">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-2911</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/5">http://www.openwall.com/lists/oss-security/2023/06/14/5</a></li>
<li><a href="https://github.com/advisories/GHSA-r72x-2h45-p59x">https://github.com/advisories/GHSA-r72x-2h45-p59x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r72x-2h45-p59x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-14T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins.plugin.templateWorkflows:template-workflows] Jenkins Template Workflows Plugin vulnerable to Stored Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-62v2-xwh3-5gvx</id>
        <link href="https://github.com/advisories/GHSA-62v2-xwh3-5gvx"/>
        <updated>2023-06-14T20:30:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Template Workflows Plugin 41.v32d86a_313b_4a and earlier does not escape names of jobs used as buildings blocks for Template Workflow Job.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to create jobs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35146">https://nvd.nist.gov/vuln/detail/CVE-2023-35146</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3166">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3166</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/5">http://www.openwall.com/lists/oss-security/2023/06/14/5</a></li>
<li><a href="https://github.com/advisories/GHSA-62v2-xwh3-5gvx">https://github.com/advisories/GHSA-62v2-xwh3-5gvx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62v2-xwh3-5gvx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-14T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sonargraph-integration] Jenkins Sonargraph Integration Plugin vulnerable to Stored Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-wmxx-2pvr-x7j6</id>
        <link href="https://github.com/advisories/GHSA-wmxx-2pvr-x7j6"/>
        <updated>2023-06-14T20:30:41.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Sonargraph Integration Plugin 5.0.1 and earlier does not correctly escape the file path and the project name for the Log file field form validation.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35145">https://nvd.nist.gov/vuln/detail/CVE-2023-35145</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3155">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3155</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/5">http://www.openwall.com/lists/oss-security/2023/06/14/5</a></li>
<li><a href="https://github.com/advisories/GHSA-wmxx-2pvr-x7j6">https://github.com/advisories/GHSA-wmxx-2pvr-x7j6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmxx-2pvr-x7j6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-14T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins CSRF protection bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-98fp-r22g-wpj7</id>
        <link href="https://github.com/advisories/GHSA-98fp-r22g-wpj7"/>
        <updated>2023-06-14T20:28:03.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins provides context menus for various UI elements, like links to jobs and builds, or breadcrumbs.</p>
<p>In Jenkins 2.399 and earlier, LTS 2.387.3 and earlier, POST requests are sent in order to load the list of context actions. If part of the URL includes insufficiently escaped user-provided values, a victim may be tricked into sending a POST request to an unexpected endpoint (e.g., the Script Console) by opening a context menu.</p>
<p>As of publication of this advisory, we are aware of insufficiently escaped context menu URLs for label expressions, allowing attackers with Item/Configure permissions to exploit this vulnerability.</p>
<p>Jenkins 2.400, LTS 2.401.1 sends GET requests to load the list of context actions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35141">https://nvd.nist.gov/vuln/detail/CVE-2023-35141</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3135">https://www.jenkins.io/security/advisory/2023-06-14/#SECURITY-3135</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/5">http://www.openwall.com/lists/oss-security/2023/06/14/5</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/f37e157216b8e5e64a6db80b7b68bde0088277fe/2023/35xxx/CVE-2023-35141">https://github.com/CVEProject/cvelist/blob/f37e157216b8e5e64a6db80b7b68bde0088277fe/2023/35xxx/CVE-2023-35141</a></li>
<li><a href="https://github.com/advisories/GHSA-98fp-r22g-wpj7">https://github.com/advisories/GHSA-98fp-r22g-wpj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98fp-r22g-wpj7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-14T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts2-core] Apache Struts vulnerable to memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-4g42-gqrg-4633</id>
        <link href="https://github.com/advisories/GHSA-4g42-gqrg-4633"/>
        <updated>2023-06-14T20:16:52.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of service via out of memory (OOM) owing to no sanity limit on normal form fields in multipart forms. When a Multipart request has non-file normal form fields, Struts used to bring them into memory as Strings without checking their sizes. This could lead to an OOM if developer has set struts.multipart.maxSize to a value equal or greater than the available memory.</p>
<p>Upgrade to Struts 2.5.31 or 6.1.2.1 or greater</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34396">https://nvd.nist.gov/vuln/detail/CVE-2023-34396</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/WW/S2-064">https://cwiki.apache.org/confluence/display/WW/S2-064</a></li>
<li><a href="https://github.com/apache/struts/commit/2d6f1bc0a6f5ac575a56784ac6461816b67c4f21">https://github.com/apache/struts/commit/2d6f1bc0a6f5ac575a56784ac6461816b67c4f21</a></li>
<li><a href="https://github.com/apache/struts/releases/tag/STRUTS_2_5_31">https://github.com/apache/struts/releases/tag/STRUTS_2_5_31</a></li>
<li><a href="https://github.com/apache/struts/releases/tag/STRUTS_6_1_2_1">https://github.com/apache/struts/releases/tag/STRUTS_6_1_2_1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/06/14/3">http://www.openwall.com/lists/oss-security/2023/06/14/3</a></li>
<li><a href="https://github.com/advisories/GHSA-4g42-gqrg-4633">https://github.com/advisories/GHSA-4g42-gqrg-4633</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g42-gqrg-4633</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-14T09:30:42.000Z</published>
    </entry>
</feed>