<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-10-12T07:01:45.761Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper]]></title>
        <id>https://github.com/advisories/GHSA-7286-pgfv-vxvh</id>
        <link href="https://github.com/advisories/GHSA-7286-pgfv-vxvh"/>
        <updated>2023-10-11T20:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like '<a href="mailto:eve@EXAMPLE.COM">eve@EXAMPLE.COM</a>', the authorization check will be skipped.&nbsp;As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree.&nbsp;Quorum Peer authentication is not enabled by default.</p>
<p>Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue.</p>
<p>Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue.</p>
<p>See the documentation for more details on correct cluster administration.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44981">https://nvd.nist.gov/vuln/detail/CVE-2023-44981</a></li>
<li><a href="https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b">https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/11/4">http://www.openwall.com/lists/oss-security/2023/10/11/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7286-pgfv-vxvh">https://github.com/advisories/GHSA-7286-pgfv-vxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7286-pgfv-vxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-11T12:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper]]></title>
        <id>https://github.com/advisories/GHSA-7286-pgfv-vxvh</id>
        <link href="https://github.com/advisories/GHSA-7286-pgfv-vxvh"/>
        <updated>2023-10-11T20:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like '<a href="mailto:eve@EXAMPLE.COM">eve@EXAMPLE.COM</a>', the authorization check will be skipped.&nbsp;As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree.&nbsp;Quorum Peer authentication is not enabled by default.</p>
<p>Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue.</p>
<p>Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue.</p>
<p>See the documentation for more details on correct cluster administration.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44981">https://nvd.nist.gov/vuln/detail/CVE-2023-44981</a></li>
<li><a href="https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b">https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/11/4">http://www.openwall.com/lists/oss-security/2023/10/11/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7286-pgfv-vxvh">https://github.com/advisories/GHSA-7286-pgfv-vxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7286-pgfv-vxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-11T12:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper]]></title>
        <id>https://github.com/advisories/GHSA-7286-pgfv-vxvh</id>
        <link href="https://github.com/advisories/GHSA-7286-pgfv-vxvh"/>
        <updated>2023-10-11T20:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like '<a href="mailto:eve@EXAMPLE.COM">eve@EXAMPLE.COM</a>', the authorization check will be skipped.&nbsp;As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree.&nbsp;Quorum Peer authentication is not enabled by default.</p>
<p>Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue.</p>
<p>Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue.</p>
<p>See the documentation for more details on correct cluster administration.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44981">https://nvd.nist.gov/vuln/detail/CVE-2023-44981</a></li>
<li><a href="https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b">https://lists.apache.org/thread/wf0yrk84dg1942z1o74kd8nycg6pgm5b</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/11/4">http://www.openwall.com/lists/oss-security/2023/10/11/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7286-pgfv-vxvh">https://github.com/advisories/GHSA-7286-pgfv-vxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7286-pgfv-vxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-11T12:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.xss.compat] XML External Entity Reference in Apache Sling]]></title>
        <id>https://github.com/advisories/GHSA-7g54-vgp6-jj5w</id>
        <link href="https://github.com/advisories/GHSA-7g54-vgp6-jj5w"/>
        <updated>2023-10-11T18:17:14.000Z</updated>
        <content type="html"><![CDATA[<p>In the XSS Protection API module before 1.0.12 in Apache Sling, the method XSS.getValidXML() uses an insecure SAX parser to validate the input string, which allows for XXE attacks in all scripts which use this method to validate user input, potentially allowing an attacker to read sensitive data on the filesystem, perform same-site-request-forgery (SSRF), port-scanning behind the firewall or DoS the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-6798">https://nvd.nist.gov/vuln/detail/CVE-2016-6798</a></li>
<li><a href="https://lists.apache.org/thread.html/b72c3a511592ec70729b3ec2d29302b6ce87bbeab62d4745617a6bd0@%3Cdev.sling.apache.org%3E">https://lists.apache.org/thread.html/b72c3a511592ec70729b3ec2d29302b6ce87bbeab62d4745617a6bd0@%3Cdev.sling.apache.org%3E</a></li>
<li><a href="http://www.securityfocus.com/bid/99873">http://www.securityfocus.com/bid/99873</a></li>
<li><a href="https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529">https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529</a></li>
<li><a href="https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-6798">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-6798</a></li>
<li><a href="https://github.com/advisories/GHSA-7g54-vgp6-jj5w">https://github.com/advisories/GHSA-7g54-vgp6-jj5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g54-vgp6-jj5w</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T02:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.xss] XML External Entity Reference in Apache Sling]]></title>
        <id>https://github.com/advisories/GHSA-7g54-vgp6-jj5w</id>
        <link href="https://github.com/advisories/GHSA-7g54-vgp6-jj5w"/>
        <updated>2023-10-11T18:17:14.000Z</updated>
        <content type="html"><![CDATA[<p>In the XSS Protection API module before 1.0.12 in Apache Sling, the method XSS.getValidXML() uses an insecure SAX parser to validate the input string, which allows for XXE attacks in all scripts which use this method to validate user input, potentially allowing an attacker to read sensitive data on the filesystem, perform same-site-request-forgery (SSRF), port-scanning behind the firewall or DoS the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-6798">https://nvd.nist.gov/vuln/detail/CVE-2016-6798</a></li>
<li><a href="https://lists.apache.org/thread.html/b72c3a511592ec70729b3ec2d29302b6ce87bbeab62d4745617a6bd0@%3Cdev.sling.apache.org%3E">https://lists.apache.org/thread.html/b72c3a511592ec70729b3ec2d29302b6ce87bbeab62d4745617a6bd0@%3Cdev.sling.apache.org%3E</a></li>
<li><a href="http://www.securityfocus.com/bid/99873">http://www.securityfocus.com/bid/99873</a></li>
<li><a href="https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529">https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529</a></li>
<li><a href="https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-6798">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-6798</a></li>
<li><a href="https://github.com/advisories/GHSA-7g54-vgp6-jj5w">https://github.com/advisories/GHSA-7g54-vgp6-jj5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g54-vgp6-jj5w</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T02:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.xss.compat] Cross site scripting in Apache Sling]]></title>
        <id>https://github.com/advisories/GHSA-xwf4-88xr-hx2j</id>
        <link href="https://github.com/advisories/GHSA-xwf4-88xr-hx2j"/>
        <updated>2023-10-11T18:17:29.000Z</updated>
        <content type="html"><![CDATA[<p>In the XSS Protection API module before 1.0.12 in Apache Sling, the encoding done by the XSSAPI.encodeForJSString() method is not restrictive enough and for some input patterns allows script tags to pass through unencoded, leading to potential XSS vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-5394">https://nvd.nist.gov/vuln/detail/CVE-2016-5394</a></li>
<li><a href="https://lists.apache.org/thread.html/332166037a54b97cf41e2b616aaed38439de94b19b204841478e4525@%3Cdev.sling.apache.org%3E">https://lists.apache.org/thread.html/332166037a54b97cf41e2b616aaed38439de94b19b204841478e4525@%3Cdev.sling.apache.org%3E</a></li>
<li><a href="http://www.securityfocus.com/bid/99870">http://www.securityfocus.com/bid/99870</a></li>
<li><a href="https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-5394">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-5394</a></li>
<li><a href="https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529">https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529</a></li>
<li><a href="https://github.com/advisories/GHSA-xwf4-88xr-hx2j">https://github.com/advisories/GHSA-xwf4-88xr-hx2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xwf4-88xr-hx2j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:25:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.sling:org.apache.sling.xss] Cross site scripting in Apache Sling]]></title>
        <id>https://github.com/advisories/GHSA-xwf4-88xr-hx2j</id>
        <link href="https://github.com/advisories/GHSA-xwf4-88xr-hx2j"/>
        <updated>2023-10-11T18:17:29.000Z</updated>
        <content type="html"><![CDATA[<p>In the XSS Protection API module before 1.0.12 in Apache Sling, the encoding done by the XSSAPI.encodeForJSString() method is not restrictive enough and for some input patterns allows script tags to pass through unencoded, leading to potential XSS vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-5394">https://nvd.nist.gov/vuln/detail/CVE-2016-5394</a></li>
<li><a href="https://lists.apache.org/thread.html/332166037a54b97cf41e2b616aaed38439de94b19b204841478e4525@%3Cdev.sling.apache.org%3E">https://lists.apache.org/thread.html/332166037a54b97cf41e2b616aaed38439de94b19b204841478e4525@%3Cdev.sling.apache.org%3E</a></li>
<li><a href="http://www.securityfocus.com/bid/99870">http://www.securityfocus.com/bid/99870</a></li>
<li><a href="https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-5394">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2016-5394</a></li>
<li><a href="https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529">https://github.com/apache/sling-org-apache-sling-xss/commit/de32b144ad2be3367559f6184d560db42a220529</a></li>
<li><a href="https://github.com/advisories/GHSA-xwf4-88xr-hx2j">https://github.com/advisories/GHSA-xwf4-88xr-hx2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xwf4-88xr-hx2j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:25:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jm7m-8jh6-29hp</id>
        <link href="https://github.com/advisories/GHSA-jm7m-8jh6-29hp"/>
        <updated>2023-10-10T22:30:16.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>The internal fork of Commons FileUpload packaged with Apache Tomcat 9.0.70 through 9.0.80 and 8.5.85 through 8.5.93 included an unreleased, in progress refactoring that exposed a potential denial of service on Windows if a web application opened a stream for an uploaded file but failed to close the stream. The file would never be deleted from disk creating the possibility of an eventual denial of service due to the disk being full.</p>
<p>Users are recommended to upgrade to version 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42794">https://nvd.nist.gov/vuln/detail/CVE-2023-42794</a></li>
<li><a href="https://lists.apache.org/thread/vvbr2ms7lockj1hlhz5q3wmxb2mwcw82">https://lists.apache.org/thread/vvbr2ms7lockj1hlhz5q3wmxb2mwcw82</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/8">http://www.openwall.com/lists/oss-security/2023/10/10/8</a></li>
<li><a href="https://github.com/advisories/GHSA-jm7m-8jh6-29hp">https://github.com/advisories/GHSA-jm7m-8jh6-29hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jm7m-8jh6-29hp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jm7m-8jh6-29hp</id>
        <link href="https://github.com/advisories/GHSA-jm7m-8jh6-29hp"/>
        <updated>2023-10-10T22:30:16.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>The internal fork of Commons FileUpload packaged with Apache Tomcat 9.0.70 through 9.0.80 and 8.5.85 through 8.5.93 included an unreleased, in progress refactoring that exposed a potential denial of service on Windows if a web application opened a stream for an uploaded file but failed to close the stream. The file would never be deleted from disk creating the possibility of an eventual denial of service due to the disk being full.</p>
<p>Users are recommended to upgrade to version 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42794">https://nvd.nist.gov/vuln/detail/CVE-2023-42794</a></li>
<li><a href="https://lists.apache.org/thread/vvbr2ms7lockj1hlhz5q3wmxb2mwcw82">https://lists.apache.org/thread/vvbr2ms7lockj1hlhz5q3wmxb2mwcw82</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/8">http://www.openwall.com/lists/oss-security/2023/10/10/8</a></li>
<li><a href="https://github.com/advisories/GHSA-jm7m-8jh6-29hp">https://github.com/advisories/GHSA-jm7m-8jh6-29hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jm7m-8jh6-29hp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</id>
        <link href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v"/>
        <updated>2023-10-10T22:30:06.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to information leaking from the current request/response to the next.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42795">https://nvd.nist.gov/vuln/detail/CVE-2023-42795</a></li>
<li><a href="https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw">https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/9">http://www.openwall.com/lists/oss-security/2023/10/10/9</a></li>
<li><a href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v">https://github.com/advisories/GHSA-g8pj-r55q-5c2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</id>
        <link href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v"/>
        <updated>2023-10-10T22:30:06.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to information leaking from the current request/response to the next.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42795">https://nvd.nist.gov/vuln/detail/CVE-2023-42795</a></li>
<li><a href="https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw">https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/9">http://www.openwall.com/lists/oss-security/2023/10/10/9</a></li>
<li><a href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v">https://github.com/advisories/GHSA-g8pj-r55q-5c2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</id>
        <link href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v"/>
        <updated>2023-10-10T22:30:06.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to information leaking from the current request/response to the next.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42795">https://nvd.nist.gov/vuln/detail/CVE-2023-42795</a></li>
<li><a href="https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw">https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/9">http://www.openwall.com/lists/oss-security/2023/10/10/9</a></li>
<li><a href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v">https://github.com/advisories/GHSA-g8pj-r55q-5c2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</id>
        <link href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v"/>
        <updated>2023-10-10T22:30:06.000Z</updated>
        <content type="html"><![CDATA[<p>Incomplete Cleanup vulnerability in Apache Tomcat.</p>
<p>When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to information leaking from the current request/response to the next.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42795">https://nvd.nist.gov/vuln/detail/CVE-2023-42795</a></li>
<li><a href="https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw">https://lists.apache.org/thread/065jfyo583490r9j2v73nhpyxdob56lw</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/9">http://www.openwall.com/lists/oss-security/2023/10/10/9</a></li>
<li><a href="https://github.com/advisories/GHSA-g8pj-r55q-5c2v">https://github.com/advisories/GHSA-g8pj-r55q-5c2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8pj-r55q-5c2v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T18:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</id>
        <link href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x"/>
        <updated>2023-10-10T22:29:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Tomcat.</p>
<p>Tomcat&nbsp;from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45648">https://nvd.nist.gov/vuln/detail/CVE-2023-45648</a></li>
<li><a href="https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp">https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/10">http://www.openwall.com/lists/oss-security/2023/10/10/10</a></li>
<li><a href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x">https://github.com/advisories/GHSA-r6j3-px5g-cq3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</id>
        <link href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x"/>
        <updated>2023-10-10T22:29:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Tomcat.</p>
<p>Tomcat&nbsp;from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45648">https://nvd.nist.gov/vuln/detail/CVE-2023-45648</a></li>
<li><a href="https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp">https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/10">http://www.openwall.com/lists/oss-security/2023/10/10/10</a></li>
<li><a href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x">https://github.com/advisories/GHSA-r6j3-px5g-cq3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</id>
        <link href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x"/>
        <updated>2023-10-10T22:29:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Tomcat.</p>
<p>Tomcat&nbsp;from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45648">https://nvd.nist.gov/vuln/detail/CVE-2023-45648</a></li>
<li><a href="https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp">https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/10">http://www.openwall.com/lists/oss-security/2023/10/10/10</a></li>
<li><a href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x">https://github.com/advisories/GHSA-r6j3-px5g-cq3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</id>
        <link href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x"/>
        <updated>2023-10-10T22:29:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Tomcat.</p>
<p>Tomcat&nbsp;from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy.</p>
<p>Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45648">https://nvd.nist.gov/vuln/detail/CVE-2023-45648</a></li>
<li><a href="https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp">https://lists.apache.org/thread/2pv8yz1pyp088tsxfb7ogltk9msk0jdp</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/10/10/10">http://www.openwall.com/lists/oss-security/2023/10/10/10</a></li>
<li><a href="https://github.com/advisories/GHSA-r6j3-px5g-cq3x">https://github.com/advisories/GHSA-r6j3-px5g-cq3x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6j3-px5g-cq3x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.netty:netty-codec-http2] io.netty:netty-codec-http2 vulnerable to HTTP/2 Rapid Reset Attack]]></title>
        <id>https://github.com/advisories/GHSA-xpw8-rcwv-8f8p</id>
        <link href="https://github.com/advisories/GHSA-xpw8-rcwv-8f8p"/>
        <updated>2023-10-10T22:22:54.000Z</updated>
        <content type="html"><![CDATA[<p>A client might overload the server by issue frequent RST frames. This can cause a massive amount of load on the remote system and so cause a DDOS attack. </p>
<h3 id="impact">Impact</h3>
<p>This is a DDOS attack, any http2 server is affected and so you should update as soon as possible.</p>
<h3 id="patches">Patches</h3>
<p>This is patched in version 4.1.100.Final.</p>
<h3 id="workarounds">Workarounds</h3>
<p>A user can limit the amount of RST frames that are accepted per connection over a timeframe manually using either an own <code>Http2FrameListener</code> implementation or an <code>ChannelInboundHandler</code> implementation (depending which http2 API is used).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-44487">https://www.cve.org/CVERecord?id=CVE-2023-44487</a></li>
<li><a href="https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/">https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/</a></li>
<li><a href="https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/">https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p">https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p</a></li>
<li><a href="https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61">https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61</a></li>
<li><a href="https://github.com/advisories/GHSA-xpw8-rcwv-8f8p">https://github.com/advisories/GHSA-xpw8-rcwv-8f8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xpw8-rcwv-8f8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T22:22:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] HTTP/2 HPACK integer overflow and buffer allocation]]></title>
        <id>https://github.com/advisories/GHSA-wgh7-54f2-x98r</id>
        <link href="https://github.com/advisories/GHSA-wgh7-54f2-x98r"/>
        <updated>2023-10-10T21:16:26.000Z</updated>
        <content type="html"><![CDATA[<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to
exceed their size limit. </p>
<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value
exceeds the size limit, and throws an exception if the limit is exceeded:</p>
<pre><code class="language-java">291 public void checkSize(int length, boolean huffman) throws SessionException
292 {
293 // Apply a huffman fudge factor
294 if (huffman)
295 length = (length * 4) / 3;
296 if ((_size + length) &gt; _maxSize)
297 throw new HpackException.SessionException("Header too large %d &gt; %d",
_size + length, _maxSize);
298 }
</code></pre>
<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295
will overflow, and length will become negative. (_size+length) will now be negative, and
the check on line 296 will not be triggered.</p>
<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be
negative, potentially leading to a very large buffer allocation later on when the
user-entered size is multiplied by 2.</p>
<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value
exceeds the size limit, and throws an exception if the limit is exceeded:</p>
<pre><code class="language-java">public void checkSize(int length, boolean huffman) throws SessionException
{
// Apply a huffman fudge factor
if (huffman)
length = (length * 4) / 3;
if ((_size + length) &gt; _maxSize)
throw new HpackException.SessionException("Header too large %d &gt; %d", _size
+ length, _maxSize);
}
</code></pre>
<p>However, no exception is thrown in the case of a negative size.
Later, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>
<pre><code class="language-java">public static String decode(ByteBuffer buffer, int length) throws
HpackException.CompressionException
{
Utf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);
// ...
</code></pre>
<p>This means that if a user provides a negative length value (or, more precisely, a length
value which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a
very large positive number when multiplied by 2, then the user can cause a very large
buffer to be allocated on the server.</p>
<h3 id="exploit-scenario-1">Exploit Scenario 1</h3>
<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.
Each time this header is decoded:</p>
<ul>
<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length
805306494 needs to be decoded.</li>
<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>
<li>Huffman.decode will allocate a 1.6 GB string array.</li>
<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated
the next time garbage collection happens. (Note: this can be delayed by appending
valid huffman-coded characters to the end of the header.)</li>
</ul>
<p>Depending on the timing of garbage collection, the number of threads, and the amount of
memory available on the server, this may cause the server to run out of memory.</p>
<h3 id="exploit-scenario-2">Exploit Scenario 2</h3>
<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each
time this header is decoded:</p>
<ul>
<li>HpackDecode.decode will determine that a Huffman-coded value of length
-1073758081 needs to be decoded</li>
<li>MetaDataBuilder.checkSize will approve this length</li>
<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will
allocate a 2.1 GB string array</li>
<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated
the next time garbage collection happens (Note that this deallocation can be
delayed by adding valid Huffman-coded characters to the end of the header)</li>
</ul>
<p>Depending on the timing of garbage collection, the number of threads, and the amount of
memory available on the server, this may cause the server to run out of memory.</p>
<h3 id="impact">Impact</h3>
<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16
Fixed in Jetty 9.4.53
Jetty 12.x is unaffected.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds possible, only patched versions of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9634">https://github.com/eclipse/jetty.project/pull/9634</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36478">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9634">https://github.com/eclipse/jetty.project/pull/9634</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>
<li><a href="https://github.com/advisories/GHSA-wgh7-54f2-x98r">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgh7-54f2-x98r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T21:16:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty.http2:http2-hpack] HTTP/2 HPACK integer overflow and buffer allocation]]></title>
        <id>https://github.com/advisories/GHSA-wgh7-54f2-x98r</id>
        <link href="https://github.com/advisories/GHSA-wgh7-54f2-x98r"/>
        <updated>2023-10-10T21:16:26.000Z</updated>
        <content type="html"><![CDATA[<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to
exceed their size limit. </p>
<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value
exceeds the size limit, and throws an exception if the limit is exceeded:</p>
<pre><code class="language-java">291 public void checkSize(int length, boolean huffman) throws SessionException
292 {
293 // Apply a huffman fudge factor
294 if (huffman)
295 length = (length * 4) / 3;
296 if ((_size + length) &gt; _maxSize)
297 throw new HpackException.SessionException("Header too large %d &gt; %d",
_size + length, _maxSize);
298 }
</code></pre>
<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295
will overflow, and length will become negative. (_size+length) will now be negative, and
the check on line 296 will not be triggered.</p>
<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be
negative, potentially leading to a very large buffer allocation later on when the
user-entered size is multiplied by 2.</p>
<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value
exceeds the size limit, and throws an exception if the limit is exceeded:</p>
<pre><code class="language-java">public void checkSize(int length, boolean huffman) throws SessionException
{
// Apply a huffman fudge factor
if (huffman)
length = (length * 4) / 3;
if ((_size + length) &gt; _maxSize)
throw new HpackException.SessionException("Header too large %d &gt; %d", _size
+ length, _maxSize);
}
</code></pre>
<p>However, no exception is thrown in the case of a negative size.
Later, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>
<pre><code class="language-java">public static String decode(ByteBuffer buffer, int length) throws
HpackException.CompressionException
{
Utf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);
// ...
</code></pre>
<p>This means that if a user provides a negative length value (or, more precisely, a length
value which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a
very large positive number when multiplied by 2, then the user can cause a very large
buffer to be allocated on the server.</p>
<h3 id="exploit-scenario-1">Exploit Scenario 1</h3>
<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.
Each time this header is decoded:</p>
<ul>
<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length
805306494 needs to be decoded.</li>
<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>
<li>Huffman.decode will allocate a 1.6 GB string array.</li>
<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated
the next time garbage collection happens. (Note: this can be delayed by appending
valid huffman-coded characters to the end of the header.)</li>
</ul>
<p>Depending on the timing of garbage collection, the number of threads, and the amount of
memory available on the server, this may cause the server to run out of memory.</p>
<h3 id="exploit-scenario-2">Exploit Scenario 2</h3>
<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each
time this header is decoded:</p>
<ul>
<li>HpackDecode.decode will determine that a Huffman-coded value of length
-1073758081 needs to be decoded</li>
<li>MetaDataBuilder.checkSize will approve this length</li>
<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will
allocate a 2.1 GB string array</li>
<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated
the next time garbage collection happens (Note that this deallocation can be
delayed by adding valid Huffman-coded characters to the end of the header)</li>
</ul>
<p>Depending on the timing of garbage collection, the number of threads, and the amount of
memory available on the server, this may cause the server to run out of memory.</p>
<h3 id="impact">Impact</h3>
<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16
Fixed in Jetty 9.4.53
Jetty 12.x is unaffected.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds possible, only patched versions of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9634">https://github.com/eclipse/jetty.project/pull/9634</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36478">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9634">https://github.com/eclipse/jetty.project/pull/9634</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>
<li><a href="https://github.com/advisories/GHSA-wgh7-54f2-x98r">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgh7-54f2-x98r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T21:16:23.000Z</published>
    </entry>
</feed>