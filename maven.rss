<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-08-23T04:01:26.828Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.mortbay.jetty:jetty] Mortbay Jetty Double Slash URI Information Disclosure Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4jjw-xrr6-9v3p</id>
        <link href="https://github.com/advisories/GHSA-4jjw-xrr6-9v3p"/>
        <updated>2023-08-22T23:30:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mortbay Jetty 6.1.5 and 6.1.6 allows remote attackers to bypass protection mechanisms and read the source of files via multiple <code>/</code> (slash) characters in the URI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2007-6672">https://nvd.nist.gov/vuln/detail/CVE-2007-6672</a></li>
<li><a href="https://web.archive.org/web/20080113051254/http://www.kb.cert.org/vuls/id/553235">https://web.archive.org/web/20080113051254/http://www.kb.cert.org/vuls/id/553235</a></li>
<li><a href="https://web.archive.org/web/20080120225723/http://jira.codehaus.org/browse/JETTY-386">https://web.archive.org/web/20080120225723/http://jira.codehaus.org/browse/JETTY-386</a></li>
<li><a href="https://web.archive.org/web/20080120225728/http://jira.codehaus.org/browse/JETTY/fixforversion/13950">https://web.archive.org/web/20080120225728/http://jira.codehaus.org/browse/JETTY/fixforversion/13950</a></li>
<li><a href="https://web.archive.org/web/20080517012615/http://www.securityfocus.com/bid/27117">https://web.archive.org/web/20080517012615/http://www.securityfocus.com/bid/27117</a></li>
<li><a href="https://github.com/advisories/GHSA-4jjw-xrr6-9v3p">https://github.com/advisories/GHSA-4jjw-xrr6-9v3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4jjw-xrr6-9v3p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-01T18:45:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss:jboss-ejb-client] Wildfly EJB Client causes DoS]]></title>
        <id>https://github.com/advisories/GHSA-qcch-9268-59jw</id>
        <link href="https://github.com/advisories/GHSA-qcch-9268-59jw"/>
        <updated>2023-08-22T21:54:13.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in Wildfly's EJB Client as shipped with Red Hat JBoss EAP 7, where some specific EJB transaction objects may get accumulated over the time and can cause services to slow down and eventually unavailable. An attacker can take advantage and cause denial of service attack and make services unavailable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-14297">https://nvd.nist.gov/vuln/detail/CVE-2020-14297</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-14297">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-14297</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3141">https://access.redhat.com/errata/RHSA-2020:3141</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3142">https://access.redhat.com/errata/RHSA-2020:3142</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3143">https://access.redhat.com/errata/RHSA-2020:3143</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3144">https://access.redhat.com/errata/RHSA-2020:3144</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3461">https://access.redhat.com/errata/RHSA-2020:3461</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3462">https://access.redhat.com/errata/RHSA-2020:3462</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3463">https://access.redhat.com/errata/RHSA-2020:3463</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3464">https://access.redhat.com/errata/RHSA-2020:3464</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3501">https://access.redhat.com/errata/RHSA-2020:3501</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3539">https://access.redhat.com/errata/RHSA-2020:3539</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3637">https://access.redhat.com/errata/RHSA-2020:3637</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3638">https://access.redhat.com/errata/RHSA-2020:3638</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3639">https://access.redhat.com/errata/RHSA-2020:3639</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3642">https://access.redhat.com/errata/RHSA-2020:3642</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3817">https://access.redhat.com/errata/RHSA-2020:3817</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2021:3140">https://access.redhat.com/errata/RHSA-2021:3140</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2020-14297">https://access.redhat.com/security/cve/CVE-2020-14297</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1853595">https://bugzilla.redhat.com/show_bug.cgi?id=1853595</a></li>
<li><a href="https://access.redhat.com/solutions/21906">https://access.redhat.com/solutions/21906</a></li>
<li><a href="https://github.com/wildfly/jboss-ejb-client/commit/e5f8e4b591f1698a53adc7e430584ca2a8fc9f1b">https://github.com/wildfly/jboss-ejb-client/commit/e5f8e4b591f1698a53adc7e430584ca2a8fc9f1b</a></li>
<li><a href="https://github.com/wildfly/jboss-ejb-client/commits/4.0.34.Final">https://github.com/wildfly/jboss-ejb-client/commits/4.0.34.Final</a></li>
<li><a href="https://github.com/advisories/GHSA-qcch-9268-59jw">https://github.com/advisories/GHSA-qcch-9268-59jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcch-9268-59jw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify] Jenkins Fortify Plugin HTML injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-223m-pgcq-f3xg</id>
        <link href="https://github.com/advisories/GHSA-223m-pgcq-f3xg"/>
        <updated>2023-08-22T17:56:46.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Fortify Plugin 22.1.38 and earlier does not escape the error message for a form validation method. This results in an HTML injection vulnerability.</p>
<p>Fortify Plugin 22.2.39 removes HTML tags from the error message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4303">https://nvd.nist.gov/vuln/detail/CVE-2023-4303</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3140">https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3140</a></li>
<li><a href="https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d">https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d</a></li>
<li><a href="https://github.com/advisories/GHSA-223m-pgcq-f3xg">https://github.com/advisories/GHSA-223m-pgcq-f3xg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-223m-pgcq-f3xg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-22T00:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify] Jenkins Fortify Plugin cross-site request forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3fjv-8r82-6xm9</id>
        <link href="https://github.com/advisories/GHSA-3fjv-8r82-6xm9"/>
        <updated>2023-08-22T17:54:46.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Fortify Plugin 22.1.38 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Fortify Plugin 22.2.39 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4301">https://nvd.nist.gov/vuln/detail/CVE-2023-4301</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3115">https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3115</a></li>
<li><a href="https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d">https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d</a></li>
<li><a href="https://github.com/advisories/GHSA-3fjv-8r82-6xm9">https://github.com/advisories/GHSA-3fjv-8r82-6xm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3fjv-8r82-6xm9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-22T00:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify] Jenkins Fortify Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-4xmf-344q-m4cc</id>
        <link href="https://github.com/advisories/GHSA-4xmf-344q-m4cc"/>
        <updated>2023-08-22T17:53:48.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Fortify Plugin 22.1.38 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these HTTP endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Fortify Plugin 22.2.39 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4302">https://nvd.nist.gov/vuln/detail/CVE-2023-4302</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3115">https://www.jenkins.io/security/advisory/2023-08-16/#SECURITY-3115</a></li>
<li><a href="https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d">https://github.com/jenkinsci/fortify-plugin/commit/357d7bfbcb0ff796ea7d078bee13159f1d000f5d</a></li>
<li><a href="https://github.com/advisories/GHSA-4xmf-344q-m4cc">https://github.com/advisories/GHSA-4xmf-344q-m4cc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xmf-344q-m4cc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-22T00:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly:wildfly-parent] Wildfly Unsafe Deserialization Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vrmw-2xhq-hrmp</id>
        <link href="https://github.com/advisories/GHSA-vrmw-2xhq-hrmp"/>
        <updated>2023-08-22T14:34:12.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Wildfly in versions before 20.0.0.Final, where a remote deserialization attack is possible in the Enterprise Application Beans(EJB) due to lack of validation/filtering capabilities in wildfly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10740">https://nvd.nist.gov/vuln/detail/CVE-2020-10740</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10740">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10740</a></li>
<li><a href="https://github.com/advisories/GHSA-vrmw-2xhq-hrmp">https://github.com/advisories/GHSA-vrmw-2xhq-hrmp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vrmw-2xhq-hrmp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:21:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins Stored Cross-site Scripting vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-69vw-3pcm-84rw</id>
        <link href="https://github.com/advisories/GHSA-69vw-3pcm-84rw"/>
        <updated>2023-08-22T13:09:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins applies formatting to the console output of builds, transforming plain URLs into hyperlinks. Jenkins 2.415 and earlier, 2.414 and earlier, and LTS 2.401.2 and earlier does not sanitize or properly encode URLs of these hyperlinks in build logs. This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control build log contents. Jenkins 2.416, 2.414.1, and LTS 2.401.3 encodes URLs of affected hyperlink annotations in build logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39151">https://nvd.nist.gov/vuln/detail/CVE-2023-39151</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188">https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/07/26/2">http://www.openwall.com/lists/oss-security/2023/07/26/2</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae">https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json">https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json</a></li>
<li><a href="https://github.com/advisories/GHSA-69vw-3pcm-84rw">https://github.com/advisories/GHSA-69vw-3pcm-84rw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69vw-3pcm-84rw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-26T15:30:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.alibaba.nacos:nacos-spring-context] Nacos Spring vulnerable to Unsafe Deserialization]]></title>
        <id>https://github.com/advisories/GHSA-v6c8-pwhq-288m</id>
        <link href="https://github.com/advisories/GHSA-v6c8-pwhq-288m"/>
        <updated>2023-08-21T20:45:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Nacos Group Nacos Spring Project v.1.1.1 and before allows a remote attacker to execute arbitrary code via the SnakeYamls Constructor() component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39106">https://nvd.nist.gov/vuln/detail/CVE-2023-39106</a></li>
<li><a href="https://github.com/nacos-group/nacos-spring-project/issues/314">https://github.com/nacos-group/nacos-spring-project/issues/314</a></li>
<li><a href="https://github.com/advisories/GHSA-v6c8-pwhq-288m">https://github.com/advisories/GHSA-v6c8-pwhq-288m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6c8-pwhq-288m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-21T18:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.ivy:ivy] Apache Ivy External Entity Reference vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2jc4-r94c-rp7h</id>
        <link href="https://github.com/advisories/GHSA-2jc4-r94c-rp7h"/>
        <updated>2023-08-21T20:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Restriction of XML External Entity Reference, XML Injection (aka Blind XPath Injection) vulnerability in Apache Software Foundation Apache Ivy.This issue affects any version of Apache Ivy prior to 2.5.2.</p>
<p>When Apache Ivy prior to 2.5.2 parses XML files - either its own configuration, Ivy files or Apache Maven POMs - it will allow downloading external document type definitions and expand any entity references contained therein when used.</p>
<p>This can be used to exfiltrate data, access resources only the machine running Ivy has access to or disturb the execution of Ivy in different ways.</p>
<p>Starting with Ivy 2.5.2 DTD processing is disabled by default except when parsing Maven POMs where the default is to allow DTD processing but only to include a DTD snippet shipping with Ivy that is needed to deal with existing Maven POMs that are not valid XML files but are nevertheless accepted by Maven. Access can be be made more lenient via newly introduced system properties where needed.</p>
<p>Users of Ivy prior to version 2.5.2 can use Java system properties to restrict processing of external DTDs, see the section about "JAXP Properties for External Access restrictions" inside Oracle's "Java API for XML Processing (JAXP) Security Guide".</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46751">https://nvd.nist.gov/vuln/detail/CVE-2022-46751</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/13/security/java-api-xml-processing-jaxp-security-guide.html#GUID-94ABC0EE-9DC8-44F0-84AD-47ADD5340477">https://docs.oracle.com/en/java/javase/13/security/java-api-xml-processing-jaxp-security-guide.html#GUID-94ABC0EE-9DC8-44F0-84AD-47ADD5340477</a></li>
<li><a href="https://gitbox.apache.org/repos/asf?p=ant-ivy.git;a=commit;h=2be17bc18b0e1d4123007d579e43ba1a4b6fab3d">https://gitbox.apache.org/repos/asf?p=ant-ivy.git;a=commit;h=2be17bc18b0e1d4123007d579e43ba1a4b6fab3d</a></li>
<li><a href="https://lists.apache.org/thread/1dj60hg5nr36kjr4p1100dwjrqookps8">https://lists.apache.org/thread/1dj60hg5nr36kjr4p1100dwjrqookps8</a></li>
<li><a href="https://lists.apache.org/thread/9gcz4xrsn8c7o9gb377xfzvkb8jltffr">https://lists.apache.org/thread/9gcz4xrsn8c7o9gb377xfzvkb8jltffr</a></li>
<li><a href="https://github.com/apache/ant-ivy/commit/2be17bc18b0e1d4123007d579e43ba1a4b6fab3d">https://github.com/apache/ant-ivy/commit/2be17bc18b0e1d4123007d579e43ba1a4b6fab3d</a></li>
<li><a href="https://github.com/advisories/GHSA-2jc4-r94c-rp7h">https://github.com/advisories/GHSA-2jc4-r94c-rp7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2jc4-r94c-rp7h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-21T09:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-dbcp-service-bundle] Apache NiFi Insufficient Property Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</id>
        <link href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9"/>
        <updated>2023-08-21T20:16:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.21.0 through 1.23.0 support JDBC and JNDI JMS access in several Processors and Controller Services with connection URL validation that does not provide sufficient protection against crafted inputs. An authenticated and authorized user can bypass connection URL validation using custom input formatting. The resolution enhances connection URL validation and introduces validation for additional related properties. Upgrading to Apache NiFi 1.23.1 is the recommended mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40037">https://nvd.nist.gov/vuln/detail/CVE-2023-40037</a></li>
<li><a href="https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q">https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-40037">https://nifi.apache.org/security.html#CVE-2023-40037</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/18/2">http://www.openwall.com/lists/oss-security/2023/08/18/2</a></li>
<li><a href="https://github.com/apache/nifi/pull/7586">https://github.com/apache/nifi/pull/7586</a></li>
<li><a href="https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf">https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11920">https://issues.apache.org/jira/browse/NIFI-11920</a></li>
<li><a href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9">https://github.com/advisories/GHSA-23qf-3jf9-h3q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-19T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-dbcp-service-api] Apache NiFi Insufficient Property Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</id>
        <link href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9"/>
        <updated>2023-08-21T20:16:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.21.0 through 1.23.0 support JDBC and JNDI JMS access in several Processors and Controller Services with connection URL validation that does not provide sufficient protection against crafted inputs. An authenticated and authorized user can bypass connection URL validation using custom input formatting. The resolution enhances connection URL validation and introduces validation for additional related properties. Upgrading to Apache NiFi 1.23.1 is the recommended mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40037">https://nvd.nist.gov/vuln/detail/CVE-2023-40037</a></li>
<li><a href="https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q">https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-40037">https://nifi.apache.org/security.html#CVE-2023-40037</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/18/2">http://www.openwall.com/lists/oss-security/2023/08/18/2</a></li>
<li><a href="https://github.com/apache/nifi/pull/7586">https://github.com/apache/nifi/pull/7586</a></li>
<li><a href="https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf">https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11920">https://issues.apache.org/jira/browse/NIFI-11920</a></li>
<li><a href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9">https://github.com/advisories/GHSA-23qf-3jf9-h3q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-19T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-jms-processors] Apache NiFi Insufficient Property Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</id>
        <link href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9"/>
        <updated>2023-08-21T20:16:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.21.0 through 1.23.0 support JDBC and JNDI JMS access in several Processors and Controller Services with connection URL validation that does not provide sufficient protection against crafted inputs. An authenticated and authorized user can bypass connection URL validation using custom input formatting. The resolution enhances connection URL validation and introduces validation for additional related properties. Upgrading to Apache NiFi 1.23.1 is the recommended mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40037">https://nvd.nist.gov/vuln/detail/CVE-2023-40037</a></li>
<li><a href="https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q">https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-40037">https://nifi.apache.org/security.html#CVE-2023-40037</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/18/2">http://www.openwall.com/lists/oss-security/2023/08/18/2</a></li>
<li><a href="https://github.com/apache/nifi/pull/7586">https://github.com/apache/nifi/pull/7586</a></li>
<li><a href="https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf">https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11920">https://issues.apache.org/jira/browse/NIFI-11920</a></li>
<li><a href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9">https://github.com/advisories/GHSA-23qf-3jf9-h3q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-19T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-dbcp-base] Apache NiFi Insufficient Property Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</id>
        <link href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9"/>
        <updated>2023-08-21T20:16:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.21.0 through 1.23.0 support JDBC and JNDI JMS access in several Processors and Controller Services with connection URL validation that does not provide sufficient protection against crafted inputs. An authenticated and authorized user can bypass connection URL validation using custom input formatting. The resolution enhances connection URL validation and introduces validation for additional related properties. Upgrading to Apache NiFi 1.23.1 is the recommended mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40037">https://nvd.nist.gov/vuln/detail/CVE-2023-40037</a></li>
<li><a href="https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q">https://lists.apache.org/thread/bqbjlrs2p5ghh8sbk5nsxb8xpf9l687q</a></li>
<li><a href="https://nifi.apache.org/security.html#CVE-2023-40037">https://nifi.apache.org/security.html#CVE-2023-40037</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/18/2">http://www.openwall.com/lists/oss-security/2023/08/18/2</a></li>
<li><a href="https://github.com/apache/nifi/pull/7586">https://github.com/apache/nifi/pull/7586</a></li>
<li><a href="https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf">https://github.com/apache/nifi/commit/064550aacc189f39d7ddd2c0446068adf250f1bf</a></li>
<li><a href="https://issues.apache.org/jira/browse/NIFI-11920">https://issues.apache.org/jira/browse/NIFI-11920</a></li>
<li><a href="https://github.com/advisories/GHSA-23qf-3jf9-h3q9">https://github.com/advisories/GHSA-23qf-3jf9-h3q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qf-3jf9-h3q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-19T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-appwithinminutes-ui] XWiki Platform privilege escalation (PR) from account through AWM content fields]]></title>
        <id>https://github.com/advisories/GHSA-5mf8-v43w-mfxp</id>
        <link href="https://github.com/advisories/GHSA-5mf8-v43w-mfxp"/>
        <updated>2023-08-21T20:11:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any registered user can use the content field of their user profile page to execute arbitrary scripts with programming rights, thus effectively performing rights escalation.</p>
<p>The problem is present <a href="https://jira.xwiki.org/browse/XWIKI-7369">since version 4.3M2</a> when AppWithinMinutes Application added support for the Content field, allowing any wiki page (including the user profile page) to use its content as an AWM Content field, which has a custom displayer that executes the content with the rights of the <code>AppWithinMinutes.Content</code> author, rather than the rights of the content author.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in XWiki 14.10.5 and 15.1RC1 by <a href="https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262">https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262</a> . The fix is in the content of the <a href="https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262#diff-850f6875c40cf7932f40a985e99679a041891c6ee75d10239c06921c0019cf78R82">AppWithinMinutes.Content</a> page that defines the custom displayer. By using the <code>display</code> script service to render the content we make sure that the proper author is used for access rights checks.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you want to fix this problem on older versions of XWiki that have not been patched then you need to modify the content of <code>AppWithinMinutes.Content</code> page to use the <code>display</code> script service to render the content, like this:</p>
<pre><code>- {{html}}$tdoc.getRenderedContent($tdoc.content, $tdoc.syntax.toIdString()).replace('{{', '&amp;amp;#123;&amp;amp;#123;'){{/html}}
+ {{html}}$services.display.content($tdoc, {
+   'displayerHint': 'default'
+ }).replace('{{/html}}', '&amp;amp;#123;&amp;amp;#123;/html&amp;amp;#125;&amp;amp;#125;'){{/html}}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>JIRA issue <a href="https://jira.xwiki.org/browse/XWIKI-19906">https://jira.xwiki.org/browse/XWIKI-19906</a></li>
<li>Fix <a href="https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262">https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been found and reported by @michitux .</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-5mf8-v43w-mfxp">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-5mf8-v43w-mfxp</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262">https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-7369">https://jira.xwiki.org/browse/XWIKI-7369</a></li>
<li><a href="https://github.com/advisories/GHSA-5mf8-v43w-mfxp">https://github.com/advisories/GHSA-5mf8-v43w-mfxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mf8-v43w-mfxp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-08-21T20:10:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-web-templates] XWiki Platform Stored Cross-site Scripting in the user profile via the timezone displayer]]></title>
        <id>https://github.com/advisories/GHSA-h8cm-3v5f-rgp6</id>
        <link href="https://github.com/advisories/GHSA-h8cm-3v5f-rgp6"/>
        <updated>2023-08-21T19:59:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any registered user can exploit a stored XSS through their user profile by setting the payload as the value of the time zone user preference. Even though the time zone is selected from a drop down (no free text value) it can still be set from JavaScript (using the browser developer tools) or by calling the save URL on the user profile with the right query string. Once the time zone is set it is displayed without escaping which means the payload gets executed for any user that visits the malicious user profile, allowing the attacker to steal information and even gain more access rights (escalation to programming rights).</p>
<p>The problem is present <a href="https://jira.xwiki.org/browse/XWIKI-7847">since version 4.1M2</a> when the time zone user preference was introduced.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in XWiki 14.10.5 and 15.1RC1 by <a href="https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4">https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4</a> . The main fix is in the <a href="https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4#diff-57ffb6e10fa8768e59948f2becf755699570d97b78bb12a9623e0de49e6c5c7d"><code>displayer_timezone.vm</code></a> precisely at this <a href="https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4#diff-57ffb6e10fa8768e59948f2becf755699570d97b78bb12a9623e0de49e6c5c7dR40">line</a>:</p>
<pre><code>$!escapetool.xml($value)
</code></pre>
<p>By escaping the displayed time zone value we make sure the attacker's payload is not executed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you want to fix this problem on older versions of XWiki that have not been patched then you need to edit <code>displayer_timezone.vm</code> and escape the displayed time zone value <a href="https://github.com/xwiki/xwiki-platform/blob/xwiki-platform-14.10.4/xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/displayer_timezone.vm#L32">here</a>:</p>
<pre><code>- $!value
+ $!escapetool.xml($value)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>JIRA issue <a href="https://jira.xwiki.org/browse/XWIKI-20276">https://jira.xwiki.org/browse/XWIKI-20276</a></li>
<li>Fix <a href="https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4">https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been found and reported by @michitux .</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h8cm-3v5f-rgp6">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h8cm-3v5f-rgp6</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4">https://github.com/xwiki/xwiki-platform/commit/d11ca5d781f8a42a85bc98eb82306c1431e764d4</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-7847">https://jira.xwiki.org/browse/XWIKI-7847</a></li>
<li><a href="https://github.com/advisories/GHSA-h8cm-3v5f-rgp6">https://github.com/advisories/GHSA-h8cm-3v5f-rgp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8cm-3v5f-rgp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-08-21T19:59:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opennms.core:org.opennms.core.daemon] OpenNMS Horizon RCE via Unsafe Deserialization]]></title>
        <id>https://github.com/advisories/GHSA-853f-x27w-8r74</id>
        <link href="https://github.com/advisories/GHSA-853f-x27w-8r74"/>
        <updated>2023-08-21T19:53:39.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in OpenNMS Horizon before 26.0.1, and Meridian before 2018.1.19 and 2019 before 2019.1.7. The ActiveMQ channel configuration allowed for arbitrary deserialization of Java objects (aka ActiveMQ Minion payload deserialization), leading to remote code execution for any authenticated channel user regardless of its assigned permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-12760">https://nvd.nist.gov/vuln/detail/CVE-2020-12760</a></li>
<li><a href="https://github.com/OpenNMS/opennms/releases/tag/opennms-26.0.1-1">https://github.com/OpenNMS/opennms/releases/tag/opennms-26.0.1-1</a></li>
<li><a href="https://issues.opennms.org/browse/NMS-12673">https://issues.opennms.org/browse/NMS-12673</a></li>
<li><a href="https://www.opennms.com/en/blog/2020-04-29-opennms-horizon-26-0-1-luchador-released/">https://www.opennms.com/en/blog/2020-04-29-opennms-horizon-26-0-1-luchador-released/</a></li>
<li><a href="https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2018-1-18-wildfire-released/">https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2018-1-18-wildfire-released/</a></li>
<li><a href="https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2019-1-6-europa-released/">https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2019-1-6-europa-released/</a></li>
<li><a href="https://github.com/OpenNMS/opennms/pull/2983">https://github.com/OpenNMS/opennms/pull/2983</a></li>
<li><a href="https://github.com/OpenNMS/opennms/commit/e21fc14ce355533493da0db815bd81a66e291382">https://github.com/OpenNMS/opennms/commit/e21fc14ce355533493da0db815bd81a66e291382</a></li>
<li><a href="https://github.com/advisories/GHSA-853f-x27w-8r74">https://github.com/advisories/GHSA-853f-x27w-8r74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-853f-x27w-8r74</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:17:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-parent] WSO2 API Manager vulnerable to SSRF]]></title>
        <id>https://github.com/advisories/GHSA-jfgp-q2hg-w285</id>
        <link href="https://github.com/advisories/GHSA-jfgp-q2hg-w285"/>
        <updated>2023-08-21T18:37:50.000Z</updated>
        <content type="html"><![CDATA[<p>WSO2 API Manager 3.0.0 does not properly restrict outbound network access from a Publisher node, opening up the possibility of SSRF to this node's entire intranet.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13226">https://nvd.nist.gov/vuln/detail/CVE-2020-13226</a></li>
<li><a href="https://github.com/wso2/docs-apim/issues/816">https://github.com/wso2/docs-apim/issues/816</a></li>
<li><a href="https://github.com/wso2/product-apim/issues/7677">https://github.com/wso2/product-apim/issues/7677</a></li>
<li><a href="https://docs.wso2.com/display/Security/Security+Advisories">https://docs.wso2.com/display/Security/Security+Advisories</a></li>
<li><a href="https://docs.wso2.com/display/Security/WSO2+Security+Vulnerability+Management+Process">https://docs.wso2.com/display/Security/WSO2+Security+Vulnerability+Management+Process</a></li>
<li><a href="https://github.com/advisories/GHSA-jfgp-q2hg-w285">https://github.com/advisories/GHSA-jfgp-q2hg-w285</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfgp-q2hg-w285</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:18:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins Stored Cross-site Scripting vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-69vw-3pcm-84rw</id>
        <link href="https://github.com/advisories/GHSA-69vw-3pcm-84rw"/>
        <updated>2023-08-22T13:09:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins applies formatting to the console output of builds, transforming plain URLs into hyperlinks. Jenkins 2.415 and earlier, 2.414 and earlier, and LTS 2.401.2 and earlier does not sanitize or properly encode URLs of these hyperlinks in build logs. This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control build log contents. Jenkins 2.416, 2.414.1, and LTS 2.401.3 encodes URLs of affected hyperlink annotations in build logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39151">https://nvd.nist.gov/vuln/detail/CVE-2023-39151</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188">https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/07/26/2">http://www.openwall.com/lists/oss-security/2023/07/26/2</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae">https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json">https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json</a></li>
<li><a href="https://github.com/advisories/GHSA-69vw-3pcm-84rw">https://github.com/advisories/GHSA-69vw-3pcm-84rw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69vw-3pcm-84rw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-26T15:30:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Jenkins Stored Cross-site Scripting vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-69vw-3pcm-84rw</id>
        <link href="https://github.com/advisories/GHSA-69vw-3pcm-84rw"/>
        <updated>2023-08-22T13:09:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins applies formatting to the console output of builds, transforming plain URLs into hyperlinks. Jenkins 2.415 and earlier, 2.414 and earlier, and LTS 2.401.2 and earlier does not sanitize or properly encode URLs of these hyperlinks in build logs. This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control build log contents. Jenkins 2.416, 2.414.1, and LTS 2.401.3 encodes URLs of affected hyperlink annotations in build logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39151">https://nvd.nist.gov/vuln/detail/CVE-2023-39151</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188">https://www.jenkins.io/security/advisory/2023-07-26/#SECURITY-3188</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/07/26/2">http://www.openwall.com/lists/oss-security/2023/07/26/2</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae">https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae</a></li>
<li><a href="https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json">https://github.com/CVEProject/cvelist/blob/975222d6e43b5b1296dbc8a67d03704a1d2554e8/2023/39xxx/CVE-2023-39151.json</a></li>
<li><a href="https://github.com/advisories/GHSA-69vw-3pcm-84rw">https://github.com/advisories/GHSA-69vw-3pcm-84rw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69vw-3pcm-84rw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-26T15:30:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-core_2.13] Apache Spark vulnerable to Improper Privilege Management]]></title>
        <id>https://github.com/advisories/GHSA-329j-jfvr-rhr6</id>
        <link href="https://github.com/advisories/GHSA-329j-jfvr-rhr6"/>
        <updated>2023-08-21T16:01:43.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Spark versions prior to versions 3.4.0 and 3.3.3, applications using spark-submit can specify a <code>proxy-user</code> to run as, limiting privileges. The application can execute code with the privileges of the submitting user, however, by providing malicious configuration-related classes on the classpath. This affects architectures relying on proxy-user, for example those using Apache Livy to manage submitted applications.</p>
<p>Update to Apache Spark 3.4.0, 3.3.3, or later, and ensure that spark.submit.proxyUser.allowCustomClasspathInClusterMode is set to its default of "false", and is not overridden by submitted applications.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22946">https://nvd.nist.gov/vuln/detail/CVE-2023-22946</a></li>
<li><a href="https://lists.apache.org/thread/yllfl25xh5tbotjmg93zrq4bzwhqc0gv">https://lists.apache.org/thread/yllfl25xh5tbotjmg93zrq4bzwhqc0gv</a></li>
<li><a href="https://github.com/apache/spark/pull/39474">https://github.com/apache/spark/pull/39474</a></li>
<li><a href="https://github.com/apache/spark/pull/41428">https://github.com/apache/spark/pull/41428</a></li>
<li><a href="https://github.com/apache/spark/commit/909da96e1471886a01a9e1def93630c4fd40e74a">https://github.com/apache/spark/commit/909da96e1471886a01a9e1def93630c4fd40e74a</a></li>
<li><a href="https://github.com/degant/spark/commit/bfba57724d2520e0fcaa7990f7257c21d11cd75a">https://github.com/degant/spark/commit/bfba57724d2520e0fcaa7990f7257c21d11cd75a</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-41958">https://issues.apache.org/jira/browse/SPARK-41958</a></li>
<li><a href="https://github.com/advisories/GHSA-329j-jfvr-rhr6">https://github.com/advisories/GHSA-329j-jfvr-rhr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-329j-jfvr-rhr6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-17T09:30:23.000Z</published>
    </entry>
</feed>