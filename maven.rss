<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-09-22T23:01:24.913Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.springframework.data:spring-data-rest-core] Spring Data REST can expose hidden entity attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv7x-v67w-cvqv</id>
        <link href="https://github.com/advisories/GHSA-fv7x-v67w-cvqv"/>
        <updated>2022-09-22T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that allow HTTP PATCH access to resources exposed by Spring Data REST in versions 3.6.0 - 3.6.6, 3.7.0 - 3.7.2, and older unsupported versions, if an attacker knows about the structure of the underlying domain model, they can craft HTTP requests that expose hidden entity attributes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31679">https://nvd.nist.gov/vuln/detail/CVE-2022-31679</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31679">https://tanzu.vmware.com/security/cve-2022-31679</a></li>
<li><a href="https://github.com/spring-projects/spring-data-rest/commit/2ad081f75b4baabfbc139f0dc2b75c54889b4053">https://github.com/spring-projects/spring-data-rest/commit/2ad081f75b4baabfbc139f0dc2b75c54889b4053</a></li>
<li><a href="https://github.com/spring-projects/spring-data-rest/commit/bf37590b25a0c066f67547b39fb4d7294e2c7cb7">https://github.com/spring-projects/spring-data-rest/commit/bf37590b25a0c066f67547b39fb4d7294e2c7cb7</a></li>
<li><a href="https://github.com/advisories/GHSA-fv7x-v67w-cvqv">https://github.com/advisories/GHSA-fv7x-v67w-cvqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv7x-v67w-cvqv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-22T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.data:spring-data-rest-core] Spring Data REST can expose hidden entity attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv7x-v67w-cvqv</id>
        <link href="https://github.com/advisories/GHSA-fv7x-v67w-cvqv"/>
        <updated>2022-09-22T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that allow HTTP PATCH access to resources exposed by Spring Data REST in versions 3.6.0 - 3.6.6, 3.7.0 - 3.7.2, and older unsupported versions, if an attacker knows about the structure of the underlying domain model, they can craft HTTP requests that expose hidden entity attributes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31679">https://nvd.nist.gov/vuln/detail/CVE-2022-31679</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31679">https://tanzu.vmware.com/security/cve-2022-31679</a></li>
<li><a href="https://github.com/spring-projects/spring-data-rest/commit/2ad081f75b4baabfbc139f0dc2b75c54889b4053">https://github.com/spring-projects/spring-data-rest/commit/2ad081f75b4baabfbc139f0dc2b75c54889b4053</a></li>
<li><a href="https://github.com/spring-projects/spring-data-rest/commit/bf37590b25a0c066f67547b39fb4d7294e2c7cb7">https://github.com/spring-projects/spring-data-rest/commit/bf37590b25a0c066f67547b39fb4d7294e2c7cb7</a></li>
<li><a href="https://github.com/advisories/GHSA-fv7x-v67w-cvqv">https://github.com/advisories/GHSA-fv7x-v67w-cvqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv7x-v67w-cvqv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-22T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xalan:xalan] Apache Xalan Java XSLT library integer truncation issue when processing malicious XSLT stylesheets]]></title>
        <id>https://github.com/advisories/GHSA-9339-86wc-4qgf</id>
        <link href="https://github.com/advisories/GHSA-9339-86wc-4qgf"/>
        <updated>2022-09-22T19:16:29.000Z</updated>
        <content type="html"><![CDATA[<p>The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode.</p>
<p>A fix for this issue was published in September 2022 as part of an anticipated 2.7.3 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34169">https://nvd.nist.gov/vuln/detail/CVE-2022-34169</a></li>
<li><a href="https://lists.apache.org/thread/12pxy4phsry6c34x2ol4fft6xlho4kyw">https://lists.apache.org/thread/12pxy4phsry6c34x2ol4fft6xlho4kyw</a></li>
<li><a href="https://lists.apache.org/thread/2qvl7r43wb4t8p9dd9om1bnkssk07sn8">https://lists.apache.org/thread/2qvl7r43wb4t8p9dd9om1bnkssk07sn8</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/19/5">http://www.openwall.com/lists/oss-security/2022/07/19/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/19/6">http://www.openwall.com/lists/oss-security/2022/07/19/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/20/2">http://www.openwall.com/lists/oss-security/2022/07/20/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/20/3">http://www.openwall.com/lists/oss-security/2022/07/20/3</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5188">https://www.debian.org/security/2022/dsa-5188</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5192">https://www.debian.org/security/2022/dsa-5192</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KO3DXNKZ4EU3UZBT6AAR4XRKCD73KLMO/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KO3DXNKZ4EU3UZBT6AAR4XRKCD73KLMO/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220729-0009/">https://security.netapp.com/advisory/ntap-20220729-0009/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H4YNJSJ64NPCNKFPNBYITNZU5H3L4D6L/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H4YNJSJ64NPCNKFPNBYITNZU5H3L4D6L/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I5OZNAZJ4YHLOKRRRZSWRT5OJ25E4XLM/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I5OZNAZJ4YHLOKRRRZSWRT5OJ25E4XLM/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JN3EVGR7FD3ZLV5SBTJXUIDCMSK4QUE2/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JN3EVGR7FD3ZLV5SBTJXUIDCMSK4QUE2/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L3XPOTPPBZIPFBZHQE5E7OW6PDACUMCJ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L3XPOTPPBZIPFBZHQE5E7OW6PDACUMCJ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YULPNO3PAWMEQQZV2C54I3H3ZOXFZUTB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YULPNO3PAWMEQQZV2C54I3H3ZOXFZUTB/</a></li>
<li><a href="http://packetstormsecurity.com/files/168186/Xalan-J-XSLTC-Integer-Truncation.html">http://packetstormsecurity.com/files/168186/Xalan-J-XSLTC-Integer-Truncation.html</a></li>
<li><a href="https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=2e60d0a9a5b822c4abf9051857973b1c6babfe81">https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=2e60d0a9a5b822c4abf9051857973b1c6babfe81</a></li>
<li><a href="https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=ab57211e5d2e97cbed06786f919fa9b749c83573">https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=ab57211e5d2e97cbed06786f919fa9b749c83573</a></li>
<li><a href="https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=da3e0d06b467247643ce04e88d3346739d119f21">https://gitbox.apache.org/repos/asf?p=xalan-java.git;a=commit;h=da3e0d06b467247643ce04e88d3346739d119f21</a></li>
<li><a href="https://lists.apache.org/thread/x3f7xv3p1g32qj2hlg8wd57pwcpld471">https://lists.apache.org/thread/x3f7xv3p1g32qj2hlg8wd57pwcpld471</a></li>
<li><a href="https://github.com/advisories/GHSA-9339-86wc-4qgf">https://github.com/advisories/GHSA-9339-86wc-4qgf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9339-86wc-4qgf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-07-20T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] PostgreSQL JDBC Driver SQL Injection in ResultSet.refreshRow() with malicious column names]]></title>
        <id>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</id>
        <link href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2"/>
        <updated>2022-09-22T17:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The PGJDBC implementation of the <code>java.sql.ResultRow.refreshRow()</code> method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. <code>;</code>, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user.</p>
<p>User applications that do not invoke the <code>ResultSet.refreshRow()</code> method are not impacted.</p>
<p>User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the <code>refreshRow()</code> method on the ResultSet.</p>
<p>For example:</p>
<pre><code class="language-sql">CREATE TABLE refresh_row_example (
  id     int PRIMARY KEY,
  "1 FROM refresh_row_example; SELECT pg_sleep(10); SELECT * " int
);
</code></pre>
<p>This example has a table with two columns. The name of the second column is crafted to contain a statement terminator followed by additional SQL. Invoking the <code>ResultSet.refreshRow()</code> on a ResultSet that queried this table, e.g. <code>SELECT * FROM refresh_row</code>, would cause the additional SQL commands such as the <code>SELECT pg_sleep(10)</code> invocation to be executed.</p>
<p>As the multi statement command would contain multiple results, it would not be possible for the attacker to get data directly out of this approach as the <code>ResultSet.refreshRow()</code> method would throw an exception. However, the attacker could execute any arbitrary SQL including inserting the data into another table that could then be read or any other DML / DDL statement.</p>
<p>Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user.</p>
<h3 id="patches">Patches</h3>
<p>Versions 42.2.26, 42.3.7, and 42.4.1 have been released with a fix.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Check that you are not using the <code>ResultSet.refreshRow()</code> method.</p>
<p>If you are, ensure that the code that executes that method does not connect to a database that is controlled by an unauthenticated or malicious user. If your application only connects to its own database with a fixed schema with no DDL permissions, then you will not be affected by this vulnerability as it requires a maliciously crafted schema.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31197">https://nvd.nist.gov/vuln/detail/CVE-2022-31197</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637">https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637</a></li>
<li><a href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/advisories/GHSA-r38f-c4h4-hqq2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-06T05:51:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] PostgreSQL JDBC Driver SQL Injection in ResultSet.refreshRow() with malicious column names]]></title>
        <id>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</id>
        <link href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2"/>
        <updated>2022-09-22T17:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The PGJDBC implementation of the <code>java.sql.ResultRow.refreshRow()</code> method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. <code>;</code>, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user.</p>
<p>User applications that do not invoke the <code>ResultSet.refreshRow()</code> method are not impacted.</p>
<p>User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the <code>refreshRow()</code> method on the ResultSet.</p>
<p>For example:</p>
<pre><code class="language-sql">CREATE TABLE refresh_row_example (
  id     int PRIMARY KEY,
  "1 FROM refresh_row_example; SELECT pg_sleep(10); SELECT * " int
);
</code></pre>
<p>This example has a table with two columns. The name of the second column is crafted to contain a statement terminator followed by additional SQL. Invoking the <code>ResultSet.refreshRow()</code> on a ResultSet that queried this table, e.g. <code>SELECT * FROM refresh_row</code>, would cause the additional SQL commands such as the <code>SELECT pg_sleep(10)</code> invocation to be executed.</p>
<p>As the multi statement command would contain multiple results, it would not be possible for the attacker to get data directly out of this approach as the <code>ResultSet.refreshRow()</code> method would throw an exception. However, the attacker could execute any arbitrary SQL including inserting the data into another table that could then be read or any other DML / DDL statement.</p>
<p>Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user.</p>
<h3 id="patches">Patches</h3>
<p>Versions 42.2.26, 42.3.7, and 42.4.1 have been released with a fix.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Check that you are not using the <code>ResultSet.refreshRow()</code> method.</p>
<p>If you are, ensure that the code that executes that method does not connect to a database that is controlled by an unauthenticated or malicious user. If your application only connects to its own database with a fixed schema with no DDL permissions, then you will not be affected by this vulnerability as it requires a maliciously crafted schema.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31197">https://nvd.nist.gov/vuln/detail/CVE-2022-31197</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637">https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637</a></li>
<li><a href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/advisories/GHSA-r38f-c4h4-hqq2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-06T05:51:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] PostgreSQL JDBC Driver SQL Injection in ResultSet.refreshRow() with malicious column names]]></title>
        <id>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</id>
        <link href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2"/>
        <updated>2022-09-22T17:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The PGJDBC implementation of the <code>java.sql.ResultRow.refreshRow()</code> method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. <code>;</code>, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user.</p>
<p>User applications that do not invoke the <code>ResultSet.refreshRow()</code> method are not impacted.</p>
<p>User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the <code>refreshRow()</code> method on the ResultSet.</p>
<p>For example:</p>
<pre><code class="language-sql">CREATE TABLE refresh_row_example (
  id     int PRIMARY KEY,
  "1 FROM refresh_row_example; SELECT pg_sleep(10); SELECT * " int
);
</code></pre>
<p>This example has a table with two columns. The name of the second column is crafted to contain a statement terminator followed by additional SQL. Invoking the <code>ResultSet.refreshRow()</code> on a ResultSet that queried this table, e.g. <code>SELECT * FROM refresh_row</code>, would cause the additional SQL commands such as the <code>SELECT pg_sleep(10)</code> invocation to be executed.</p>
<p>As the multi statement command would contain multiple results, it would not be possible for the attacker to get data directly out of this approach as the <code>ResultSet.refreshRow()</code> method would throw an exception. However, the attacker could execute any arbitrary SQL including inserting the data into another table that could then be read or any other DML / DDL statement.</p>
<p>Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user.</p>
<h3 id="patches">Patches</h3>
<p>Versions 42.2.26, 42.3.7, and 42.4.1 have been released with a fix.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Check that you are not using the <code>ResultSet.refreshRow()</code> method.</p>
<p>If you are, ensure that the code that executes that method does not connect to a database that is controlled by an unauthenticated or malicious user. If your application only connects to its own database with a fixed schema with no DDL permissions, then you will not be affected by this vulnerability as it requires a maliciously crafted schema.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31197">https://nvd.nist.gov/vuln/detail/CVE-2022-31197</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637">https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637</a></li>
<li><a href="https://github.com/advisories/GHSA-r38f-c4h4-hqq2">https://github.com/advisories/GHSA-r38f-c4h4-hqq2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r38f-c4h4-hqq2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-06T05:51:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2022-09-21T21:15:54.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2022-09-21T21:15:54.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2022-09-21T21:15:54.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2022-09-21T21:15:54.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:inlong-common] Apache InLong vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-26m4-qjp9-xmc6</id>
        <link href="https://github.com/advisories/GHSA-26m4-qjp9-xmc6"/>
        <updated>2022-09-21T21:11:30.000Z</updated>
        <content type="html"><![CDATA[<p>In versions of Apache InLong prior to 1.3.0, an attacker with sufficient privileges to specify MySQL JDBC connection URL parameters and to write arbitrary data to the MySQL database, could cause this data to be deserialized by Apache InLong, potentially leading to Remote Code Execution on the Apache InLong server. Users are advised to upgrade to Apache InLong 1.3.0 or newer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40955">https://nvd.nist.gov/vuln/detail/CVE-2022-40955</a></li>
<li><a href="https://lists.apache.org/thread/r1r34y7bchrpmp9jhfdoohzdmk7pj1q1">https://lists.apache.org/thread/r1r34y7bchrpmp9jhfdoohzdmk7pj1q1</a></li>
<li><a href="https://github.com/advisories/GHSA-26m4-qjp9-xmc6">https://github.com/advisories/GHSA-26m4-qjp9-xmc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-26m4-qjp9-xmc6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars.npm:vuetify] Vuetify Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q4q5-c5cv-2p68</id>
        <link href="https://github.com/advisories/GHSA-q4q5-c5cv-2p68"/>
        <updated>2022-09-21T20:58:45.000Z</updated>
        <content type="html"><![CDATA[<p>The package vuetify from 2.0.0-beta.4 and before 2.6.10 are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization in the 'eventName' function within the VCalendar component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25873">https://nvd.nist.gov/vuln/detail/CVE-2022-25873</a></li>
<li><a href="https://github.com/vuetifyjs/vuetify/issues/15757">https://github.com/vuetifyjs/vuetify/issues/15757</a></li>
<li><a href="https://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176">https://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176</a></li>
<li><a href="https://codepen.io/5v3n-08/pen/MWGKEjY">https://codepen.io/5v3n-08/pen/MWGKEjY</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBVUETIFYJS-3024407">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBVUETIFYJS-3024407</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3024406">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3024406</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858">https://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858</a></li>
<li><a href="https://github.com/advisories/GHSA-q4q5-c5cv-2p68">https://github.com/advisories/GHSA-q4q5-c5cv-2p68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4q5-c5cv-2p68</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-19T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service via stack overflow]]></title>
        <id>https://github.com/advisories/GHSA-9fwf-46g9-45rx</id>
        <link href="https://github.com/advisories/GHSA-9fwf-46g9-45rx"/>
        <updated>2022-09-21T20:50:32.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Xstream to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40154">https://nvd.nist.gov/vuln/detail/CVE-2022-40154</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393</a></li>
<li><a href="https://github.com/advisories/GHSA-9fwf-46g9-45rx">https://github.com/advisories/GHSA-9fwf-46g9-45rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fwf-46g9-45rx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service via stack overflow]]></title>
        <id>https://github.com/advisories/GHSA-5hc5-c3m9-8vcj</id>
        <link href="https://github.com/advisories/GHSA-5hc5-c3m9-8vcj"/>
        <updated>2022-09-21T20:50:31.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Xstream to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40155">https://nvd.nist.gov/vuln/detail/CVE-2022-40155</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50428">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50428</a></li>
<li><a href="https://github.com/advisories/GHSA-5hc5-c3m9-8vcj">https://github.com/advisories/GHSA-5hc5-c3m9-8vcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5hc5-c3m9-8vcj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.codehaus.jettison:jettison] Jettison parser crash by stackoverflow]]></title>
        <id>https://github.com/advisories/GHSA-56h3-78gp-v83r</id>
        <link href="https://github.com/advisories/GHSA-56h3-78gp-v83r"/>
        <updated>2022-09-20T21:22:04.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40149">https://nvd.nist.gov/vuln/detail/CVE-2022-40149</a></li>
<li><a href="https://github.com/jettison-json/jettison/issues/45">https://github.com/jettison-json/jettison/issues/45</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538</a></li>
<li><a href="https://github.com/advisories/GHSA-56h3-78gp-v83r">https://github.com/advisories/GHSA-56h3-78gp-v83r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56h3-78gp-v83r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</id>
        <link href="https://github.com/advisories/GHSA-3mq5-fq9h-gj7j"/>
        <updated>2022-09-20T21:21:27.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Xstream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40151">https://nvd.nist.gov/vuln/detail/CVE-2022-40151</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47367">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47367</a></li>
<li><a href="https://github.com/advisories/GHSA-3mq5-fq9h-gj7j">https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-3f7h-mf4q-vrm4</id>
        <link href="https://github.com/advisories/GHSA-3f7h-mf4q-vrm4"/>
        <updated>2022-09-20T21:21:09.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Xstream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40152">https://nvd.nist.gov/vuln/detail/CVE-2022-40152</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47434">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47434</a></li>
<li><a href="https://github.com/advisories/GHSA-3f7h-mf4q-vrm4">https://github.com/advisories/GHSA-3f7h-mf4q-vrm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f7h-mf4q-vrm4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</id>
        <link href="https://github.com/advisories/GHSA-4rv7-wj6m-6c6r"/>
        <updated>2022-09-20T21:20:13.000Z</updated>
        <content type="html"><![CDATA[<p>Those using XStream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40156">https://nvd.nist.gov/vuln/detail/CVE-2022-40156</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50841">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50841</a></li>
<li><a href="https://github.com/advisories/GHSA-4rv7-wj6m-6c6r">https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] XStream Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-fv22-xp26-mm9w</id>
        <link href="https://github.com/advisories/GHSA-fv22-xp26-mm9w"/>
        <updated>2022-09-21T19:30:30.000Z</updated>
        <content type="html"><![CDATA[<p>Those using XStream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40153">https://nvd.nist.gov/vuln/detail/CVE-2022-40153</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=49858">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=49858</a></li>
<li><a href="https://github.com/advisories/GHSA-fv22-xp26-mm9w">https://github.com/advisories/GHSA-fv22-xp26-mm9w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv22-xp26-mm9w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-oldcore] XWiki.WebHome vulnerable to Improper Privilege Management in XWiki resolving groups]]></title>
        <id>https://github.com/advisories/GHSA-g4h6-qp44-wqvx</id>
        <link href="https://github.com/advisories/GHSA-g4h6-qp44-wqvx"/>
        <updated>2022-09-20T21:19:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It's possible to exploit a bug in XWikiRights resolution of groups to obtain privilege escalation. </p>
<p>More specifically, editing a right with the object editor leads to adding a supplementary empty value to groups which is then resolved as a reference to XWiki.WebHome page. Adding an XWikiGroup xobject to that page then transforms it to a group, any user put in that group would then obtain the privileges related to the edited right.</p>
<p>Note that this security issue is normally mitigated by the fact that XWiki.WebHome (and XWiki space in general) should be protected by default for edit rights. </p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in XWiki 13.10.4 and 14.2RC1 to not consider anymore empty values in XWikiRights. </p>
<h3 id="workarounds">Workarounds</h3>
<p>It's possible to workaround the problem by setting appropriate rights on XWiki.WebHome page to prevent users to edit it. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://jira.xwiki.org/browse/XWIKI-18386">https://jira.xwiki.org/browse/XWIKI-18386</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-15776">https://jira.xwiki.org/browse/XWIKI-15776</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g4h6-qp44-wqvx">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g4h6-qp44-wqvx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31166">https://nvd.nist.gov/vuln/detail/CVE-2022-31166</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/pull/1800">https://github.com/xwiki/xwiki-platform/pull/1800</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-15776">https://jira.xwiki.org/browse/XWIKI-15776</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-18386">https://jira.xwiki.org/browse/XWIKI-18386</a></li>
<li><a href="https://github.com/advisories/GHSA-g4h6-qp44-wqvx">https://github.com/advisories/GHSA-g4h6-qp44-wqvx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4h6-qp44-wqvx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-20T21:19:52.000Z</published>
    </entry>
</feed>