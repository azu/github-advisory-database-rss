<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-12T21:01:23.418Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:github-branch-source] Jenkins GitHub Branch Source Plugin allows any user with Overall/Read permission to get list of valid credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-6jp2-hggx-8j7p</id>
        <link href="https://github.com/advisories/GHSA-6jp2-hggx-8j7p"/>
        <updated>2022-12-12T20:58:15.000Z</updated>
        <content type="html"><![CDATA[<p>GitHub Branch Source provides a list of applicable credential IDs to allow users configuring a job to select the one they'd like to use. This functionality did not check permissions, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those could be used as part of an attack to capture the credentials using another vulnerability. An enumeration of credentials IDs in this plugin now requires the permission to have Extended Read permission (when that permission is enabled; otherwise Configure permission) to the job in whose context credentials are being accessed. If no job context exists, Overall/Administer permission is required.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000087">https://nvd.nist.gov/vuln/detail/CVE-2017-1000087</a></li>
<li><a href="https://jenkins.io/security/advisory/2017-07-10/">https://jenkins.io/security/advisory/2017-07-10/</a></li>
<li><a href="https://github.com/advisories/GHSA-6jp2-hggx-8j7p">https://github.com/advisories/GHSA-6jp2-hggx-8j7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jp2-hggx-8j7p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:29:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] TemporaryFolder on unix-like systems does not limit access to created files]]></title>
        <id>https://github.com/advisories/GHSA-562r-vg33-8x8h</id>
        <link href="https://github.com/advisories/GHSA-562r-vg33-8x8h"/>
        <updated>2022-12-12T20:28:05.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Vulnerability</strong></p>
<p><code>PreparedStatement.setText(int, InputStream)</code>
and</p>
<p><code>PreparedStatemet.setBytea(int, InputStream)</code></p>
<p>will create a temporary file if the InputStream is larger than 51k</p>
<p>Example of vulnerable code:</p>
<pre><code class="language-java">String s = "some very large string greater than 51200 bytes";

PreparedStatement.setInputStream(1, new ByteArrayInputStream(s.getBytes()) );
</code></pre>
<p>This will create a temporary file which is readable by other users on Unix like systems, but not MacOS.</p>
<p>Impact
On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system.</p>
<p>This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability.</p>
<p>When analyzing the impact of this vulnerability, here are the important questions to ask:</p>
<p>Is the driver running in an environment where the OS has other untrusted users.
If yes, and you answered 'yes' to question 1, this vulnerability impacts you.
If no, this vulnerability does not impact you.
Patches
Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using.</p>
<p>Java 1.8 and higher users: this vulnerability is fixed in 42.2.27, 42.3.8, 42.4.3, 42.5.1
Java 1.7 users: this vulnerability is fixed in 42.2.27.jre7
Java 1.6 and lower users: no patch is available; you must use the workaround below.
Workarounds
If you are unable to patch, or are stuck running on Java 1.6, specifying the java.io.tmpdir system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability.</p>
<p>References
<a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</a>
Fix commit <a href="https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5">https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5</a>
Similar Vulnerabilities
Google Guava - <a href="https://github.com/google/guava/issues/4011">https://github.com/google/guava/issues/4011</a>
Apache Ant - <a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1945">https://nvd.nist.gov/vuln/detail/CVE-2020-1945</a>
JetBrains Kotlin Compiler - <a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15824">https://nvd.nist.gov/vuln/detail/CVE-2020-15824</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-562r-vg33-8x8h">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-562r-vg33-8x8h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41946">https://nvd.nist.gov/vuln/detail/CVE-2022-41946</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5">https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/12/msg00003.html">https://lists.debian.org/debian-lts-announce/2022/12/msg00003.html</a></li>
<li><a href="https://github.com/advisories/GHSA-562r-vg33-8x8h">https://github.com/advisories/GHSA-562r-vg33-8x8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-562r-vg33-8x8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T22:17:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] Jenkins Subversion Plugin Cross-Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hrwc-pqfm-g6qf</id>
        <link href="https://github.com/advisories/GHSA-hrwc-pqfm-g6qf"/>
        <updated>2022-12-12T19:10:15.000Z</updated>
        <content type="html"><![CDATA[<p>Subversion Plugin connects to a user-specified Subversion repository as part of form validation (e.g. to retrieve a list of tags). This functionality improperly checked permissions, allowing any user with Item/Build permission (but not Item/Configure) to connect to any web server or Subversion server and send credentials with a known ID, thereby possibly capturing them. Additionally, this functionality did not require POST requests be used, thereby allowing the above to be performed without direct access to Jenkins via Cross-Site Request Forgery attacks. As of version 2.9, this functionality properly checks permissions and is only available via POST.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000085">https://nvd.nist.gov/vuln/detail/CVE-2017-1000085</a></li>
<li><a href="https://jenkins.io/security/advisory/2017-07-10/">https://jenkins.io/security/advisory/2017-07-10/</a></li>
<li><a href="https://web.archive.org/web/20171119065136/http://www.securityfocus.com/bid/99574">https://web.archive.org/web/20171119065136/http://www.securityfocus.com/bid/99574</a></li>
<li><a href="https://github.com/advisories/GHSA-hrwc-pqfm-g6qf">https://github.com/advisories/GHSA-hrwc-pqfm-g6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrwc-pqfm-g6qf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:29:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[se.diabol.jenkins.pipeline:delivery-pipeline-plugin] Jenkins Delivery Pipeline Plugin Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g364-c7w5-93wh</id>
        <link href="https://github.com/advisories/GHSA-g364-c7w5-93wh"/>
        <updated>2022-12-12T17:17:38.000Z</updated>
        <content type="html"><![CDATA[<p>The Jenkins Delivery Pipeline Plugin version 1.0.7 and earlier used the unescaped content of the query parameter 'fullscreen' in its JavaScript, resulting in a cross-site scripting vulnerability through specially crafted URLs. Version 1.0.8 of the plugin converts the value to a boolean (true/false) and inserts that into the page instead.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000404">https://nvd.nist.gov/vuln/detail/CVE-2017-1000404</a></li>
<li><a href="https://jenkins.io/security/advisory/2017-11-16/">https://jenkins.io/security/advisory/2017-11-16/</a></li>
<li><a href="http://www.securityfocus.com/bid/101927">http://www.securityfocus.com/bid/101927</a></li>
<li><a href="https://github.com/advisories/GHSA-g364-c7w5-93wh">https://github.com/advisories/GHSA-g364-c7w5-93wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g364-c7w5-93wh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:45:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:saml] Jenkins SAML Plugin Session Fixation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4pjx-86pg-x4j5</id>
        <link href="https://github.com/advisories/GHSA-4pjx-86pg-x4j5"/>
        <updated>2022-12-12T17:10:16.000Z</updated>
        <content type="html"><![CDATA[<p>A session fixation vulnerability exists in Jenkins SAML Plugin 1.0.6 and earlier in SamlSecurityRealm.java that allows unauthorized attackers to impersonate another users if they can control the pre-authentication session. SAML Plugin 1.0.7 invalidates the previous session during login and creates a new one.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000602">https://nvd.nist.gov/vuln/detail/CVE-2018-1000602</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-25/#SECURITY-916">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-916</a></li>
<li><a href="https://github.com/advisories/GHSA-4pjx-86pg-x4j5">https://github.com/advisories/GHSA-4pjx-86pg-x4j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4pjx-86pg-x4j5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:07:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:collabnet] Jenkins CollabNet Plugin man in the middle vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m8x2-4gc8-9v3r</id>
        <link href="https://github.com/advisories/GHSA-m8x2-4gc8-9v3r"/>
        <updated>2022-12-12T17:01:54.000Z</updated>
        <content type="html"><![CDATA[<p>A man in the middle vulnerability exists in Jenkins CollabNet Plugin 2.0.4 and earlier in CollabNetApp.java, CollabNetPlugin.java, CNFormFieldValidator.java that allows attackers to impersonate any service that Jenkins connects to. CollabNet Plugin 2.0.5 and newer no longer does that. It instead requires users to opt in to disabling SSL/TLS certificate validation by setting the system property hudson.plugins.collabnet.CollabNetPlugin.skipSslValidation to true. This feature applies to connections by this plugin only.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000605">https://nvd.nist.gov/vuln/detail/CVE-2018-1000605</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-25/#SECURITY-941">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-941</a></li>
<li><a href="https://github.com/advisories/GHSA-m8x2-4gc8-9v3r">https://github.com/advisories/GHSA-m8x2-4gc8-9v3r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8x2-4gc8-9v3r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ssh-agent] Jenkins SSH Agent Plugin exposes SSH private key password to users with permission to read the build log]]></title>
        <id>https://github.com/advisories/GHSA-wwgx-94v6-fc2p</id>
        <link href="https://github.com/advisories/GHSA-wwgx-94v6-fc2p"/>
        <updated>2022-12-12T17:00:04.000Z</updated>
        <content type="html"><![CDATA[<p>An exposure of sensitive information vulnerability exists in Jenkins SSH Agent Plugin 1.15 and earlier in SSHAgentStepExecution.java that exposes the SSH private key password to users with permission to read the build log. As of version 1.16, the plugin no longer logs the ssh-add invocation that would reveal the passphrase.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1999036">https://nvd.nist.gov/vuln/detail/CVE-2018-1999036</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704</a></li>
<li><a href="https://github.com/advisories/GHSA-wwgx-94v6-fc2p">https://github.com/advisories/GHSA-wwgx-94v6-fc2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wwgx-94v6-fc2p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-13T01:50:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:google-login] Jenkins Google Login Plugin Open Redirect vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j279-cx9m-jv3w</id>
        <link href="https://github.com/advisories/GHSA-j279-cx9m-jv3w"/>
        <updated>2022-12-12T16:57:45.000Z</updated>
        <content type="html"><![CDATA[<p>An open redirect vulnerability exists in Jenkins Google Login Plugin 1.3 and older in GoogleOAuth2SecurityRealm.java that allows attackers to redirect users to an arbitrary URL after successful login. Google Login Plugin 1.3.1 only performs redirects to relative URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000174">https://nvd.nist.gov/vuln/detail/CVE-2018-1000174</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-04-16/">https://jenkins.io/security/advisory/2018-04-16/</a></li>
<li><a href="http://www.securityfocus.com/bid/104211">http://www.securityfocus.com/bid/104211</a></li>
<li><a href="https://github.com/advisories/GHSA-j279-cx9m-jv3w">https://github.com/advisories/GHSA-j279-cx9m-jv3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j279-cx9m-jv3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:18:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:google-login] Jenkins Google Login Plugin Session Fixation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rp82-xvg3-727c</id>
        <link href="https://github.com/advisories/GHSA-rp82-xvg3-727c"/>
        <updated>2022-12-12T16:57:08.000Z</updated>
        <content type="html"><![CDATA[<p>A session fixaction vulnerability exists in Jenkins Google Login Plugin 1.3 and older in GoogleOAuth2SecurityRealm.java that allows unauthorized attackers to impersonate another user if they can control the pre-authentication session. Google Login Plugin 1.3.1 invalidates the previous session during login, and creates a new one.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000173">https://nvd.nist.gov/vuln/detail/CVE-2018-1000173</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-04-16/">https://jenkins.io/security/advisory/2018-04-16/</a></li>
<li><a href="http://www.securityfocus.com/bid/104210">http://www.securityfocus.com/bid/104210</a></li>
<li><a href="https://github.com/advisories/GHSA-rp82-xvg3-727c">https://github.com/advisories/GHSA-rp82-xvg3-727c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rp82-xvg3-727c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:18:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:htmlpublisher] Jenkins HTML Publisher Plugin path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4x63-3p7q-xmh7</id>
        <link href="https://github.com/advisories/GHSA-4x63-3p7q-xmh7"/>
        <updated>2022-12-12T16:55:43.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in Jenkins HTML Publisher Plugin 1.15 and older in HtmlPublisherTarget.java that allows attackers able to configure the HTML Publisher build step to override arbitrary files on the Jenkins master. In version 1.16, non-alphanumeric characters in report names are escaped for use as part of a URL and as a directory name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000175">https://nvd.nist.gov/vuln/detail/CVE-2018-1000175</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-04-16/">https://jenkins.io/security/advisory/2018-04-16/</a></li>
<li><a href="https://github.com/advisories/GHSA-4x63-3p7q-xmh7">https://github.com/advisories/GHSA-4x63-3p7q-xmh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x63-3p7q-xmh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:18:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:resource-disposer] Jenkins Resource Disposer Plugin allows attacker to stop tracking specified resource]]></title>
        <id>https://github.com/advisories/GHSA-63jg-5wv6-7ghv</id>
        <link href="https://github.com/advisories/GHSA-63jg-5wv6-7ghv"/>
        <updated>2022-12-12T16:53:32.000Z</updated>
        <content type="html"><![CDATA[<p>A data modification vulnerability exists in Jenkins Resource Disposer Plugin 0.11 and earlier in AsyncResourceDisposer.java that allows attackers to stop tracking a specified resource. Additionally, this API endpoint did not require POST requests, resulting in a CSRF vulnerability. As of version 0.12, this API endpoint requires POST requests and Overall/Administer permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1999037">https://nvd.nist.gov/vuln/detail/CVE-2018-1999037</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-07-30/#SECURITY-997">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-997</a></li>
<li><a href="https://github.com/advisories/GHSA-63jg-5wv6-7ghv">https://github.com/advisories/GHSA-63jg-5wv6-7ghv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-63jg-5wv6-7ghv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-14T02:45:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:github-branch-source] Jenkins GitHub Branch Source Plugin vulnerable to Server-Side Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-9cfq-v2hm-c3xr</id>
        <link href="https://github.com/advisories/GHSA-9cfq-v2hm-c3xr"/>
        <updated>2022-12-12T16:49:32.000Z</updated>
        <content type="html"><![CDATA[<p>A server-side request forgery vulnerability exists in Jenkins GitHub Branch Source Plugin 2.3.4 and older in Endpoint.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL. Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability. As of version 23.5, this form validation method requires POST requests and the Overall/Administer permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000185">https://nvd.nist.gov/vuln/detail/CVE-2018-1000185</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-04/#SECURITY-806">https://jenkins.io/security/advisory/2018-06-04/#SECURITY-806</a></li>
<li><a href="https://github.com/advisories/GHSA-9cfq-v2hm-c3xr">https://github.com/advisories/GHSA-9cfq-v2hm-c3xr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cfq-v2hm-c3xr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugin:ghprb] Jenkins GitHub Pull Request Builder Plugin credential capture vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-92rv-mvmj-47qh</id>
        <link href="https://github.com/advisories/GHSA-92rv-mvmj-47qh"/>
        <updated>2022-12-12T16:47:42.000Z</updated>
        <content type="html"><![CDATA[<p>A exposure of sensitive information vulnerability exists in Jenkins GitHub Pull Request Builder Plugin 1.41.0 and older in GhprbGitHubAuth.java that allows attackers with Overall/Read access to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins. Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability. As of version 1.42.0, these form validation methods require POST requests and Overall/Administer permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000186">https://nvd.nist.gov/vuln/detail/CVE-2018-1000186</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-04/#SECURITY-805">https://jenkins.io/security/advisory/2018-06-04/#SECURITY-805</a></li>
<li><a href="https://github.com/advisories/GHSA-92rv-mvmj-47qh">https://github.com/advisories/GHSA-92rv-mvmj-47qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-92rv-mvmj-47qh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cas-plugin] Jenkins CAS Plugin Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f8r7-7hv9-7f43</id>
        <link href="https://github.com/advisories/GHSA-f8r7-7hv9-7f43"/>
        <updated>2022-12-12T16:34:20.000Z</updated>
        <content type="html"><![CDATA[<p>A server-side request forgery vulnerability exists in Jenkins CAS Plugin 1.4.1 and older in CasSecurityRealm.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL. Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability. As of version 1.4.2, this form validation method requires POST requests and the Overall/Administer permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000188">https://nvd.nist.gov/vuln/detail/CVE-2018-1000188</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-04/#SECURITY-809">https://jenkins.io/security/advisory/2018-06-04/#SECURITY-809</a></li>
<li><a href="https://github.com/advisories/GHSA-f8r7-7hv9-7f43">https://github.com/advisories/GHSA-f8r7-7hv9-7f43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f8r7-7hv9-7f43</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:13:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:meliora-testlab] Jenkins meliora-testlab Plugin allows attackers with file system access to Jenkins master to obtain API key]]></title>
        <id>https://github.com/advisories/GHSA-3hw6-gc8h-9243</id>
        <link href="https://github.com/advisories/GHSA-3hw6-gc8h-9243"/>
        <updated>2022-12-12T16:33:20.000Z</updated>
        <content type="html"><![CDATA[<p>An exposure of sensitive information vulnerability exists in Jenkins meliora-testlab Plugin 1.14 and earlier in TestlabNotifier.java that allows attackers with file system access to the Jenkins master to obtain the API key stored in this plugin's configuration. Additionally, the API key was not masked from view using a password form field. As of version 1.15, the plugin stores the API Key encrypted in the configuration files on disk and no longer transfers it to users viewing the configuration form in plain text.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1999031">https://nvd.nist.gov/vuln/detail/CVE-2018-1999031</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-07-30/#SECURITY-847">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-847</a></li>
<li><a href="https://github.com/advisories/GHSA-3hw6-gc8h-9243">https://github.com/advisories/GHSA-3hw6-gc8h-9243</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3hw6-gc8h-9243</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-14T02:57:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:badge] Jenkins Badge Plugin cross-site scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3xjq-8j89-xrw9</id>
        <link href="https://github.com/advisories/GHSA-3xjq-8j89-xrw9"/>
        <updated>2022-12-12T16:32:19.000Z</updated>
        <content type="html"><![CDATA[<p>A persisted cross-site scripting vulnerability exists in Jenkins Badge Plugin 1.4 and earlier in BadgeSummaryAction.java, HtmlBadgeAction.java that allows attackers able to control build badge content to define JavaScript that would be executed in another user's browser when that other user performs some UI actions. Badge Plugin 1.5 and newer sanitizes the provided HTML for display on the Jenkins web UI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000604">https://nvd.nist.gov/vuln/detail/CVE-2018-1000604</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-06-25/#SECURITY-906">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-906</a></li>
<li><a href="https://github.com/advisories/GHSA-3xjq-8j89-xrw9">https://github.com/advisories/GHSA-3xjq-8j89-xrw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xjq-8j89-xrw9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:05:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:saltstack] Jenkins SaltStack Plugin allows attackers to capture credentials with a known credentials ID stored in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-cqp4-cv7h-7jp5</id>
        <link href="https://github.com/advisories/GHSA-cqp4-cv7h-7jp5"/>
        <updated>2022-12-12T16:31:11.000Z</updated>
        <content type="html"><![CDATA[<p>An exposure of sensitive information vulnerability exists in Jenkins SaltStack Plugin 3.1.6 and earlier in SaltAPIBuilder.java, SaltAPIStep.java. SaltStack Plugin did not perform permission checks on methods implementing form validation. This allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins, and to cause Jenkins to submit HTTP requests to attacker-specified URLs. Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability. As of version 3.1.7, these form validation methods require POST requests and Overall/Administer permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1999027">https://nvd.nist.gov/vuln/detail/CVE-2018-1999027</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-07-30/#SECURITY-1009">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-1009</a></li>
<li><a href="https://github.com/advisories/GHSA-cqp4-cv7h-7jp5">https://github.com/advisories/GHSA-cqp4-cv7h-7jp5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqp4-cv7h-7jp5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:09:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:publish-over-cifs] Jenkins Publisher Over CIFS Plugin confused deputy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rf7h-9m85-535v</id>
        <link href="https://github.com/advisories/GHSA-rf7h-9m85-535v"/>
        <updated>2022-12-12T16:29:28.000Z</updated>
        <content type="html"><![CDATA[<p>A confused deputy vulnerability exists in Jenkins Publisher Over CIFS Plugin 0.10 and earlier in CifsPublisherPluginDescriptor.java that allows attackers to have Jenkins connect to an attacker specified CIFS server with attacker specified credentials. Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability. As of version 0.11, this form validation method requires POST requests and Overall/Administer permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1999038">https://nvd.nist.gov/vuln/detail/CVE-2018-1999038</a></li>
<li><a href="https://jenkins.io/security/advisory/2018-07-30/#SECURITY-975">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-975</a></li>
<li><a href="https://github.com/advisories/GHSA-rf7h-9m85-535v">https://github.com/advisories/GHSA-rf7h-9m85-535v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf7h-9m85-535v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:21:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:docker-commons] Jenkins Docker Commons Plugin allows any user with Overall/Read permission to get list of valid credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-69cj-g7mw-mh72</id>
        <link href="https://github.com/advisories/GHSA-69cj-g7mw-mh72"/>
        <updated>2022-12-12T16:23:50.000Z</updated>
        <content type="html"><![CDATA[<p>Docker Commons Plugin provides a list of applicable credential IDs to allow users configuring a job to select the one they'd like to use to authenticate with a Docker Registry. This functionality did not check permissions, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those could be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>An enumeration of credentials IDs in this plugin now requires the permission to have Extended Read permission (when that permission is enabled; otherwise Configure permission) to the job in whose context credentials are being accessed. If no job context exists, Overall/Administer permission is required.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000094">https://nvd.nist.gov/vuln/detail/CVE-2017-1000094</a></li>
<li><a href="https://jenkins.io/security/advisory/2017-07-10/">https://jenkins.io/security/advisory/2017-07-10/</a></li>
<li><a href="https://github.com/jenkinsci/docker-commons-plugin/commit/07ddeff5331687db364d681504117b4e8b2dde6a">https://github.com/jenkinsci/docker-commons-plugin/commit/07ddeff5331687db364d681504117b4e8b2dde6a</a></li>
<li><a href="https://github.com/advisories/GHSA-69cj-g7mw-mh72">https://github.com/advisories/GHSA-69cj-g7mw-mh72</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69cj-g7mw-mh72</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:33:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eu.markov.jenkins.plugin.mvnmeta:maven-metadata-plugin] Stored XSS vulnerability in Jenkins Maven Metadata Plugin for Jenkins CI server plugin]]></title>
        <id>https://github.com/advisories/GHSA-8294-mv9c-7m5h</id>
        <link href="https://github.com/advisories/GHSA-8294-mv9c-7m5h"/>
        <updated>2022-12-12T16:09:18.000Z</updated>
        <content type="html"><![CDATA[<p>Maven Metadata Plugin for Jenkins CI server Plugin 2.2 and earlier does not perform URL validation for the Repository Base URL of List maven artifact versions parameters. This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36905">https://nvd.nist.gov/vuln/detail/CVE-2022-36905</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2686">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2686</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/27/1">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>
<li><a href="https://github.com/advisories/GHSA-8294-mv9c-7m5h">https://github.com/advisories/GHSA-8294-mv9c-7m5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8294-mv9c-7m5h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-28T00:00:42.000Z</published>
    </entry>
</feed>