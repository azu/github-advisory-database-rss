<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-21T17:01:26.981Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.biouno:uno-choice] Stored XSS vulnerability in Jenkins Active Choices Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rjch-j5x9-fgph</id>
        <link href="https://github.com/advisories/GHSA-rjch-j5x9-fgph"/>
        <updated>2022-12-21T16:50:59.000Z</updated>
        <content type="html"><![CDATA[<p>Active Choices Plugin 2.4 and earlier does not escape <code>List</code> and <code>Map</code> return values of sandboxed scripts for Reactive Reference Parameter.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>
<p>This issue is caused by an incomplete fix for <a href="https://www.jenkins.io/security/advisory/2017-10-23/#persisted-cross-site-scripting-vulnerability-in-active-choices-plugin">SECURITY-470</a>.</p>
<p>Active Choices Plugin 2.5 escapes all legal return values of sandboxed scripts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2290">https://nvd.nist.gov/vuln/detail/CVE-2020-2290</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-2008">https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-2008</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/10/08/5">http://www.openwall.com/lists/oss-security/2020/10/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-rjch-j5x9-fgph">https://github.com/advisories/GHSA-rjch-j5x9-fgph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjch-j5x9-fgph</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.biouno:uno-choice] Stored XSS vulnerability in Jenkins Active Choices Plugin]]></title>
        <id>https://github.com/advisories/GHSA-9jv5-wf44-8vfm</id>
        <link href="https://github.com/advisories/GHSA-9jv5-wf44-8vfm"/>
        <updated>2022-12-21T16:50:29.000Z</updated>
        <content type="html"><![CDATA[<p>Active Choices Plugin 2.4 and earlier does not escape the name and description of build parameters.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>
<p>Active Choices Plugin 2.5 escapes the name of build parameters and applies the configured markup formatter to the description of build parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2289">https://nvd.nist.gov/vuln/detail/CVE-2020-2289</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1954">https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1954</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/10/08/5">http://www.openwall.com/lists/oss-security/2020/10/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-9jv5-wf44-8vfm">https://github.com/advisories/GHSA-9jv5-wf44-8vfm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9jv5-wf44-8vfm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:audit-trail] Incorrect default pattern in Jenkins Audit Trail Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7v9p-34r2-q668</id>
        <link href="https://github.com/advisories/GHSA-7v9p-34r2-q668"/>
        <updated>2022-12-21T16:49:29.000Z</updated>
        <content type="html"><![CDATA[<p>Audit Trail Plugin uses regular expressions to match requested URLs whose dispatch should be logged.</p>
<p>In Audit Trail Plugin 3.6 and earlier, the default regular expression pattern could be bypassed in many cases by adding a suffix to the URL that would be ignored during request handling.</p>
<p>Audit Trail Plugin 3.7 changes the default regular expression pattern so that it allows for arbitrary suffixes. It automatically will replace previous default patterns with the new, more complete default pattern.</p>
<p>Additionally, an administrative monitor is shown if a user-specified pattern is found to be bypassable through crafted URLs and form validation was improved to recognize patterns that would not match requests with arbitrary suffixes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2288">https://nvd.nist.gov/vuln/detail/CVE-2020-2288</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1846">https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1846</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/10/08/5">http://www.openwall.com/lists/oss-security/2020/10/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-7v9p-34r2-q668">https://github.com/advisories/GHSA-7v9p-34r2-q668</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v9p-34r2-q668</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sounds] CSRF vulnerability in Jenkins Sounds Plugin allow OS command execution]]></title>
        <id>https://github.com/advisories/GHSA-x37x-3fw2-5qw2</id>
        <link href="https://github.com/advisories/GHSA-x37x-3fw2-5qw2"/>
        <updated>2022-12-21T16:48:53.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery vulnerability in Jenkins Sounds Plugin 0.5 and earlier allows attacker to execute arbitrary OS commands as the OS user account running Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2098">https://nvd.nist.gov/vuln/detail/CVE-2020-2098</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-814">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-814</a></li>
<li><a href="https://github.com/advisories/GHSA-x37x-3fw2-5qw2">https://github.com/advisories/GHSA-x37x-3fw2-5qw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x37x-3fw2-5qw2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:06:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.ruby-plugins:gitlab-hook] Reflected XSS vulnerability in Jenkins gitlab-hook Plugin]]></title>
        <id>https://github.com/advisories/GHSA-8696-836p-c8qp</id>
        <link href="https://github.com/advisories/GHSA-8696-836p-c8qp"/>
        <updated>2022-12-21T16:46:24.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Gitlab Hook Plugin 1.4.2 and earlier does not escape project names in the <code>build_now</code> endpoint, resulting in a reflected XSS vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2096">https://nvd.nist.gov/vuln/detail/CVE-2020-2096</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1683">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1683</a></li>
<li><a href="http://packetstormsecurity.com/files/155967/Jenkins-Gitlab-Hook-1.4.2-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/155967/Jenkins-Gitlab-Hook-1.4.2-Cross-Site-Scripting.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/01/15/1">http://www.openwall.com/lists/oss-security/2020/01/15/1</a></li>
<li><a href="https://github.com/advisories/GHSA-8696-836p-c8qp">https://github.com/advisories/GHSA-8696-836p-c8qp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8696-836p-c8qp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:06:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.redgate.plugins.redgatesqlci:redgate-sql-ci] Redgate SQL Change Automation Plugin stored credentials in plain text]]></title>
        <id>https://github.com/advisories/GHSA-x23m-8c2h-6wg7</id>
        <link href="https://github.com/advisories/GHSA-x23m-8c2h-6wg7"/>
        <updated>2022-12-21T16:45:48.000Z</updated>
        <content type="html"><![CDATA[<p>Redgate SQL Change Automation Plugin 2.0.4 and earlier stores a NuGet API key unencrypted in job config.xml files as part of its configuration. This credential could be viewed by users with Extended Read permission or access to the Jenkins controller file system.</p>
<p>This is due to an incomplete fix of <a href="https://www.jenkins.io/security/advisory/2019-12-17/#SECURITY-1598">SECURITY-1598</a>.</p>
<p>Redgate SQL Change Automation Plugin 2.0.5 now stores the API key encrypted. Existing jobs need to have their configuration saved for existing plain text passwords to be overwritten.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2095">https://nvd.nist.gov/vuln/detail/CVE-2020-2095</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1696">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1696</a></li>
<li><a href="https://github.com/advisories/GHSA-x23m-8c2h-6wg7">https://github.com/advisories/GHSA-x23m-8c2h-6wg7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x23m-8c2h-6wg7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:06:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cloudbees-jenkins-advisor] Missing permission checks in Health Advisor by CloudBees Plugin]]></title>
        <id>https://github.com/advisories/GHSA-h72v-652w-xv64</id>
        <link href="https://github.com/advisories/GHSA-h72v-652w-xv64"/>
        <updated>2022-12-21T16:43:38.000Z</updated>
        <content type="html"><![CDATA[<p>Health Advisor by CloudBees Plugin 3.0 and earlier does not perform permission checks in methods performing form validation. This allows users with Overall/Read access to send an email with fixed content to an attacker-specified recipient.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a CSRF vulnerability.</p>
<p>Health Advisor by CloudBees Plugin 3.0.1 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2094">https://nvd.nist.gov/vuln/detail/CVE-2020-2094</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1708">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1708</a></li>
<li><a href="https://github.com/advisories/GHSA-h72v-652w-xv64">https://github.com/advisories/GHSA-h72v-652w-xv64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h72v-652w-xv64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:06:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cloudbees-jenkins-advisor] CSRF vulnerability in Health Advisor by CloudBees Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fc92-8r77-9297</id>
        <link href="https://github.com/advisories/GHSA-fc92-8r77-9297"/>
        <updated>2022-12-21T16:42:46.000Z</updated>
        <content type="html"><![CDATA[<p>Health Advisor by CloudBees Plugin 3.0 and earlier does not perform permission checks in methods performing form validation. This allows users with Overall/Read access to send an email with fixed content to an attacker-specified recipient.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a CSRF vulnerability.</p>
<p>Health Advisor by CloudBees Plugin 3.0.1 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2093">https://nvd.nist.gov/vuln/detail/CVE-2020-2093</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1708">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1708</a></li>
<li><a href="https://github.com/advisories/GHSA-fc92-8r77-9297">https://github.com/advisories/GHSA-fc92-8r77-9297</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fc92-8r77-9297</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:06:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:robot] XXE vulnerability in Jenkins Robot Framework Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m53p-f25q-q6fg</id>
        <link href="https://github.com/advisories/GHSA-m53p-f25q-q6fg"/>
        <updated>2022-12-21T16:42:17.000Z</updated>
        <content type="html"><![CDATA[<p>Robot Framework Plugin 2.0.0 and earlier does not configure the XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the 'Publish Robot Framework' post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>
<p>Robot Framework Plugin 2.0.1 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2092">https://nvd.nist.gov/vuln/detail/CVE-2020-2092</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1698">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1698</a></li>
<li><a href="https://github.com/advisories/GHSA-m53p-f25q-q6fg">https://github.com/advisories/GHSA-m53p-f25q-q6fg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m53p-f25q-q6fg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:06:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ec2] Missing permission checks in Jenkins Amazon EC2 Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6hmm-77r2-h6hr</id>
        <link href="https://github.com/advisories/GHSA-6hmm-77r2-h6hr"/>
        <updated>2022-12-21T16:39:59.000Z</updated>
        <content type="html"><![CDATA[<p>Amazon EC2 Plugin 1.47 and earlier does not perform permission checks in methods performing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified URL within the AWS region using attacker-specified credentials IDs obtained through another method.</p>
<p>This vulnerability might also allow attackers to capture credentials stored in Jenkins. We have not been able to confirm that this is possible.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a CSRF vulnerability.</p>
<p>Amazon EC2 Plugin 1.48 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2091">https://nvd.nist.gov/vuln/detail/CVE-2020-2091</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1004">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1004</a></li>
<li><a href="https://github.com/advisories/GHSA-6hmm-77r2-h6hr">https://github.com/advisories/GHSA-6hmm-77r2-h6hr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hmm-77r2-h6hr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:06:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:play-autotest-plugin] OS command injection vulnerability in Jenkins Play Framework Plugin]]></title>
        <id>https://github.com/advisories/GHSA-h5mv-fv98-gqmq</id>
        <link href="https://github.com/advisories/GHSA-h5mv-fv98-gqmq"/>
        <updated>2022-12-21T16:23:07.000Z</updated>
        <content type="html"><![CDATA[<p>A form validation endpoint in Play Framework Plugin executes the <code>play</code> command to validate a given input file.</p>
<p>Play Framework Plugin 1.0.2 and earlier lets users specify the path to the <code>play</code> command on the Jenkins controller. This results in an OS command injection vulnerability exploitable by users able to store such a file on the Jenkins controller (e.g. through archiving artifacts).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2200">https://nvd.nist.gov/vuln/detail/CVE-2020-2200</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1879">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1879</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-h5mv-fv98-gqmq">https://github.com/advisories/GHSA-h5mv-fv98-gqmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h5mv-fv98-gqmq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:19:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:svn-partial-release-mgr] XSS vulnerability in Jenkins Subversion Partial Release Manager Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qmf3-w5jf-cv54</id>
        <link href="https://github.com/advisories/GHSA-qmf3-w5jf-cv54"/>
        <updated>2022-12-21T15:28:37.000Z</updated>
        <content type="html"><![CDATA[<p>Subversion Partial Release Manager Plugin 1.0.1 and earlier does not escape the error message for the repository URL field form validation.</p>
<p>This results in a reflected cross-site scripting (XSS) vulnerability that can also be exploited similar to a stored cross-site scripting vulnerability by users with Job/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2199">https://nvd.nist.gov/vuln/detail/CVE-2020-2199</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1726">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1726</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf3-w5jf-cv54">https://github.com/advisories/GHSA-qmf3-w5jf-cv54</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf3-w5jf-cv54</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:templating-engine] Remote code execution vulnerability in Jenkins Templating Engine Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p6qc-37hq-wqr6</id>
        <link href="https://github.com/advisories/GHSA-p6qc-37hq-wqr6"/>
        <updated>2022-12-21T05:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Templating Engine Plugin 2.1 and earlier does not protect its pipeline configurations using Script Security Plugin.</p>
<p>This vulnerability allows attackers with Job/Configure permission to execute arbitrary code in the context of the Jenkins controller JVM.</p>
<p>Templating Engine Plugin 2.2 integrates with Script Security Plugin to protect its pipeline configurations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21646">https://nvd.nist.gov/vuln/detail/CVE-2021-21646</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-21/#SECURITY-2311">https://www.jenkins.io/security/advisory/2021-04-21/#SECURITY-2311</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/21/2">http://www.openwall.com/lists/oss-security/2021/04/21/2</a></li>
<li><a href="https://github.com/advisories/GHSA-p6qc-37hq-wqr6">https://github.com/advisories/GHSA-p6qc-37hq-wqr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6qc-37hq-wqr6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:48:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:bumblebee] Credentials stored in plain text by Jenkins Bumblebee HP ALM Plugin]]></title>
        <id>https://github.com/advisories/GHSA-8v72-qr3h-c6rv</id>
        <link href="https://github.com/advisories/GHSA-8v72-qr3h-c6rv"/>
        <updated>2022-12-21T05:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>Bumblebee HP ALM Plugin 4.1.5 and earlier stores credentials unencrypted in its global configuration file <code>com.agiletestware.bumblebee.BumblebeeGlobalConfig.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>These credentials can be viewed by users with access to the Jenkins controller file system.</p>
<p>Bumblebee HP ALM Plugin 4.1.6 stores credentials encrypted once its configuration is saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21614">https://nvd.nist.gov/vuln/detail/CVE-2021-21614</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2156">https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2156</a></li>
<li><a href="https://github.com/advisories/GHSA-8v72-qr3h-c6rv">https://github.com/advisories/GHSA-8v72-qr3h-c6rv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v72-qr3h-c6rv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:hp-application-automation-tools-plugin] Missing permission checks in Micro Focus Application Automation Tools Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</id>
        <link href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4"/>
        <updated>2022-12-21T05:04:44.000Z</updated>
        <content type="html"><![CDATA[<p>Micro Focus Application Automation Tools Plugin 6.7 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to attacker-specified URLs using attacker-specified username and password.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Micro Focus Application Automation Tools Plugin 6.8 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22513">https://nvd.nist.gov/vuln/detail/CVE-2021-22513</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132</a></li>
<li><a href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4">https://github.com/advisories/GHSA-7qp2-rgxr-29q4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:claim] XSS vulnerability in Jenkins Claim Plugin]]></title>
        <id>https://github.com/advisories/GHSA-48hr-jg4p-w4p4</id>
        <link href="https://github.com/advisories/GHSA-48hr-jg4p-w4p4"/>
        <updated>2022-12-21T05:04:30.000Z</updated>
        <content type="html"><![CDATA[<p>Claim Plugin 2.18.1 and earlier does not escape the user display name shown in claims.</p>
<p>This results in a cross-site scripting (XSS) vulnerability exploitable by attackers who are able to control the display names of Jenkins users, either via the security realm, or directly inside Jenkins.</p>
<p>Everyone with a Jenkins account can change their own display name.\n\nClaim Plugin 2.18.2 escapes the user display name shown in claims.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21619">https://nvd.nist.gov/vuln/detail/CVE-2021-21619</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-02-24/#SECURITY-2188%20(1)">https://www.jenkins.io/security/advisory/2021-02-24/#SECURITY-2188%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/02/24/3">http://www.openwall.com/lists/oss-security/2021/02/24/3</a></li>
<li><a href="https://github.com/advisories/GHSA-48hr-jg4p-w4p4">https://github.com/advisories/GHSA-48hr-jg4p-w4p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-48hr-jg4p-w4p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:43:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2022-12-21T05:04:23.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] View name validation bypass in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</id>
        <link href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r"/>
        <updated>2022-12-21T05:04:23.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.286 and earlier, LTS 2.277.1 and earlier does not properly check that a newly created view has an allowed name. When a form to create a view is submitted, the name is included twice in the submission. One instance is validated, but the other instance is used to create the value.</p>
<p>This allows attackers with View/Create permission to create views with invalid or already-used names.</p>
<p>Jenkins 2.287, LTS 2.277.2 uses the same submitted value for validation and view creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21640">https://nvd.nist.gov/vuln/detail/CVE-2021-21640</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-1871</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/07/2">http://www.openwall.com/lists/oss-security/2021/04/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-w2hv-rcqr-2h7r">https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2hv-rcqr-2h7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:role-strategy] Improper authorization due to caching in Jenkins Role-based Authorization Strategy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-25g4-p347-x748</id>
        <link href="https://github.com/advisories/GHSA-25g4-p347-x748"/>
        <updated>2022-12-21T02:15:50.000Z</updated>
        <content type="html"><![CDATA[<p>Role-based Authorization Strategy Plugin 2.12 and newer uses a cache to speed up permission lookups. Role-based Authorization Strategy Plugin 3.0 and earlier this cache is not invalidated properly when an administrator changes the permission configuration. This can result in permissions being granted long after the configuration was changed to no longer grant them. Role-based Authorization Strategy Plugin 3.1 properly invalidates the cache on configuration changes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2286">https://nvd.nist.gov/vuln/detail/CVE-2020-2286</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1767">https://www.jenkins.io/security/advisory/2020-10-08/#SECURITY-1767</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/10/08/5">http://www.openwall.com/lists/oss-security/2020/10/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-25g4-p347-x748">https://github.com/advisories/GHSA-25g4-p347-x748</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25g4-p347-x748</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.tools:git-parameter] Stored XSS vulnerability in Jenkins Git Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</id>
        <link href="https://github.com/advisories/GHSA-j7q2-c6r4-x2jw"/>
        <updated>2022-12-21T00:22:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Git Parameter Plugin 0.9.12 and earlier does not escape the repository field on the 'Build with Parameters' page, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>
<p>Git Parameter Plugin 0.9.13 escapes the repository field on the 'Build with Parameters' page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2238">https://nvd.nist.gov/vuln/detail/CVE-2020-2238</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1884">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1884</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-j7q2-c6r4-x2jw">https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7q2-c6r4-x2jw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
</feed>