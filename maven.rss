<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-29T01:28:08.701Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:compatibility-action-storage] Reflected XSS in Jenkins Compatibility Action Storage Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rfrq-3v89-fqg6</id>
        <link href="https://github.com/advisories/GHSA-rfrq-3v89-fqg6"/>
        <updated>2022-12-29T01:27:51.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Compatibility Action Storage Plugin 1.0 and earlier does not escape the content coming from the MongoDB in the testConnection form validation endpoint, resulting in a reflected cross-site scripting (XSS) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2217">https://nvd.nist.gov/vuln/detail/CVE-2020-2217</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1771">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1771</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-rfrq-3v89-fqg6">https://github.com/advisories/GHSA-rfrq-3v89-fqg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rfrq-3v89-fqg6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:zephyr-for-jira-test-management] Missing permission checks in Zephyr for JIRA Test Management Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2q7j-52xg-x8fm</id>
        <link href="https://github.com/advisories/GHSA-2q7j-52xg-x8fm"/>
        <updated>2022-12-29T01:13:01.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins Zephyr for JIRA Test Management Plugin 1.5 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2216">https://nvd.nist.gov/vuln/detail/CVE-2020-2216</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1762">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1762</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-2q7j-52xg-x8fm">https://github.com/advisories/GHSA-2q7j-52xg-x8fm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2q7j-52xg-x8fm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:zephyr-for-jira-test-management] CSRF vulnerability in Jenkins Zephyr for JIRA Test Management Plugin]]></title>
        <id>https://github.com/advisories/GHSA-56wf-mx5c-ffjx</id>
        <link href="https://github.com/advisories/GHSA-56wf-mx5c-ffjx"/>
        <updated>2022-12-29T01:12:25.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery vulnerability in Jenkins Zephyr for JIRA Test Management Plugin 1.5 and earlier allows attackers to connect to an attacker-specified HTTP server using attacker-specified username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2215">https://nvd.nist.gov/vuln/detail/CVE-2020-2215</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1762">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1762</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-56wf-mx5c-ffjx">https://github.com/advisories/GHSA-56wf-mx5c-ffjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56wf-mx5c-ffjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.vrondakis.zap:zap-pipeline] Content-Security-Policy protection for user content disabled by Jenkins ZAP Pipeline Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4c87-9xq5-5c35</id>
        <link href="https://github.com/advisories/GHSA-4c87-9xq5-5c35"/>
        <updated>2022-12-29T01:09:20.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins sets the <code>Content-Security-Policy</code> header to static files served by Jenkins (specifically <code>DirectoryBrowserSupport</code>), such as workspaces, <code>/userContent</code>, or archived artifacts.</p>
<p>ZAP Pipeline Plugin prior to 1.10 globally disables the <code>Content-Security-Policy</code> header for static files served by Jenkins. This allows cross-site scripting (XSS) attacks by users with the ability to control files in workspaces, archived artifacts, etc.</p>
<p>Jenkins instances with <a href="https://www.jenkins.io/doc/upgrade-guide/2.204/#resource-domain-support">Resource Root URL</a> configured are largely unaffected. A possible exception are file parameter downloads. The behavior of those depends on the specific version of Jenkins:</p>
<ul>
<li>Jenkins 2.231 and newer, including 2.235.x LTS, is unaffected, as all resource files from user content are generally served safely from a different domain, without restrictions from <code>Content-Security-Policy</code> header.</li>
<li>Jenkins between 2.228 (inclusive) and 2.230 (inclusive), as well as all releases of Jenkins 2.222.x LTS and the 2.204.6 LTS release, are affected by this vulnerability, as file parameters are not served via the Resource Root URL.</li>
<li>Jenkins 2.227 and older, 2.204.5 and older, donâ€™t have XSS protection for file parameter values, see <a href="https://www.jenkins.io/security/advisory/2020-03-25/#SECURITY-1793">SECURITY-1793</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2214">https://nvd.nist.gov/vuln/detail/CVE-2020-2214</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1811">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1811</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/jenkinsci/zap-pipeline-plugin/commit/bca4b087c66ead39398f54cdadc27c515e8ede31">https://github.com/jenkinsci/zap-pipeline-plugin/commit/bca4b087c66ead39398f54cdadc27c515e8ede31</a></li>
<li><a href="https://github.com/advisories/GHSA-4c87-9xq5-5c35">https://github.com/advisories/GHSA-4c87-9xq5-5c35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4c87-9xq5-5c35</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:whitesource] Credentials stored in plain text by Jenkins White Source Plugin]]></title>
        <id>https://github.com/advisories/GHSA-v8v2-fhgv-3vq2</id>
        <link href="https://github.com/advisories/GHSA-v8v2-fhgv-3vq2"/>
        <updated>2022-12-29T00:50:08.000Z</updated>
        <content type="html"><![CDATA[<p>White Source Plugin prior to version 20.8.1 stores credentials in plain text as part of its global configuration file <code>org.whitesource.jenkins.pipeline.WhiteSourcePipelineStep.xml</code> and job config.xml files on the Jenkins controller. These credentials could be viewed by users with Extended Read permission (in the case of job config.xml files) or access to the Jenkins controller file system. Version 20.8.1 contains a patch for the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2213">https://nvd.nist.gov/vuln/detail/CVE-2020-2213</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1630">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1630</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/jenkinsci/whitesource-plugin/commit/4a9ee37246848c65cd41c5cf17d84992ffc6d21d">https://github.com/jenkinsci/whitesource-plugin/commit/4a9ee37246848c65cd41c5cf17d84992ffc6d21d</a></li>
<li><a href="https://github.com/advisories/GHSA-v8v2-fhgv-3vq2">https://github.com/advisories/GHSA-v8v2-fhgv-3vq2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8v2-fhgv-3vq2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.elasticbox.jenkins-ci.plugins:kubernetes-ci] RCE vulnerability in ElasticBox Jenkins Kubernetes CI/CD Plugin]]></title>
        <id>https://github.com/advisories/GHSA-9r3h-wm3x-v245</id>
        <link href="https://github.com/advisories/GHSA-9r3h-wm3x-v245"/>
        <updated>2022-12-29T00:34:13.000Z</updated>
        <content type="html"><![CDATA[<p>ElasticBox Jenkins Kubernetes CI/CD Plugin 1.3 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to provide YAML input files to ElasticBox Jenkins Kubernetes CI/CD Pluginâ€™s build step.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2211">https://nvd.nist.gov/vuln/detail/CVE-2020-2211</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1738">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1738</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9r3h-wm3x-v245">https://github.com/advisories/GHSA-9r3h-wm3x-v245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9r3h-wm3x-v245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:StashBranchParameter] Passwords transmitted in plain text by Jenkins Stash Branch Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-3f82-v3qw-53q7</id>
        <link href="https://github.com/advisories/GHSA-3f82-v3qw-53q7"/>
        <updated>2022-12-29T00:33:53.000Z</updated>
        <content type="html"><![CDATA[<p>Stash Branch Parameter Plugin stores Stash API passwords in its global configuration file <code>org.jenkinsci.plugins.StashBranchParameter.StashBranchParameterDefinition.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>While the password is stored encrypted on disk, it is transmitted in plain text as part of the configuration form by Stash Branch Parameter Plugin 0.3.0 and earlier. This can result in exposure of the password through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<p>This only affects Jenkins before 2.236, including 2.235.x LTS, as Jenkins 2.236 introduces a security hardening that transparently encrypts and decrypts data used for a Jenkins password form field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2210">https://nvd.nist.gov/vuln/detail/CVE-2020-2210</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1656">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1656</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-3f82-v3qw-53q7">https://github.com/advisories/GHSA-3f82-v3qw-53q7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f82-v3qw-53q7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:TestComplete] Password stored in plain text by Jenkins TestComplete support Plugin]]></title>
        <id>https://github.com/advisories/GHSA-r32r-f6wr-cc3w</id>
        <link href="https://github.com/advisories/GHSA-r32r-f6wr-cc3w"/>
        <updated>2022-12-29T00:33:26.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins TestComplete support Plugin prior to version 2.5.2 stores a password unencrypted in job <code>config.xml</code> files on the Jenkins master where it can be viewed by users with Extended Read permission, or access to the master file system. Version 2.5.2 contains a patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2209">https://nvd.nist.gov/vuln/detail/CVE-2020-2209</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1686">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1686</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/jenkinsci/testcomplete-plugin/commit/00988873c6ea7e8d081380e4262538960efd6bf1">https://github.com/jenkinsci/testcomplete-plugin/commit/00988873c6ea7e8d081380e4262538960efd6bf1</a></li>
<li><a href="https://github.com/jenkinsci/testcomplete-plugin/commit/91dae11421b70a334d2058286e30402cf2f86d4b">https://github.com/jenkinsci/testcomplete-plugin/commit/91dae11421b70a334d2058286e30402cf2f86d4b</a></li>
<li><a href="https://github.com/jenkinsci/testcomplete-plugin/commit/ca783d3b6be28b13f82865afa6a8888795d57d10">https://github.com/jenkinsci/testcomplete-plugin/commit/ca783d3b6be28b13f82865afa6a8888795d57d10</a></li>
<li><a href="https://github.com/advisories/GHSA-r32r-f6wr-cc3w">https://github.com/advisories/GHSA-r32r-f6wr-cc3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r32r-f6wr-cc3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:slack-uploader] Secret stored in plain text by Jenkins Slack Upload Plugin]]></title>
        <id>https://github.com/advisories/GHSA-656g-hf8v-x2rw</id>
        <link href="https://github.com/advisories/GHSA-656g-hf8v-x2rw"/>
        <updated>2022-12-29T00:33:12.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Slack Upload Plugin 1.7 and earlier stores a secret unencrypted in job <code>config.xml</code> files on the Jenkins master where it can be viewed by users with Extended Read permission, or access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2208">https://nvd.nist.gov/vuln/detail/CVE-2020-2208</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1627">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1627</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-656g-hf8v-x2rw">https://github.com/advisories/GHSA-656g-hf8v-x2rw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-656g-hf8v-x2rw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:vncviewer] Reflected XSS vulnerability in Jenkins VncViewer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2j4h-cjgh-659v</id>
        <link href="https://github.com/advisories/GHSA-2j4h-cjgh-659v"/>
        <updated>2022-12-29T00:27:50.000Z</updated>
        <content type="html"><![CDATA[<p>VncViewer Plugin 1.7 and earlier does not escape a parameter value in the <code>checkVncServ</code> form validation endpoint output.</p>
<p>This results in a reflected cross-site scripting (XSS) vulnerability.</p>
<p>VncViewer Plugin 1.8 escapes the parameter value in the output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2207">https://nvd.nist.gov/vuln/detail/CVE-2020-2207</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1776">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1776</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-2j4h-cjgh-659v">https://github.com/advisories/GHSA-2j4h-cjgh-659v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j4h-cjgh-659v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:vncrecorder] Reflected XSS vulnerability in Jenkins VncRecorder Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fq52-6cjf-jw59</id>
        <link href="https://github.com/advisories/GHSA-fq52-6cjf-jw59"/>
        <updated>2022-12-29T00:27:32.000Z</updated>
        <content type="html"><![CDATA[<p>VncRecorder Plugin 1.25 and earlier does not escape a parameter value in the <code>checkVncServ</code> form validation endpoint output.</p>
<p>This results in a reflected cross-site scripting (XSS) vulnerability.</p>
<p>VncRecorder Plugin 1.35 escapes the parameter value in the output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2206">https://nvd.nist.gov/vuln/detail/CVE-2020-2206</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1728%20(2)">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1728%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-fq52-6cjf-jw59">https://github.com/advisories/GHSA-fq52-6cjf-jw59</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq52-6cjf-jw59</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:vncrecorder] Stored XSS vulnerability in Jenkins VncRecorder Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vqp8-h53h-3jfh</id>
        <link href="https://github.com/advisories/GHSA-vqp8-h53h-3jfh"/>
        <updated>2022-12-29T00:27:19.000Z</updated>
        <content type="html"><![CDATA[<p>VncRecorder Plugin 1.25 and earlier does not escape a tool path in the <code>checkVncServ</code> form validation endpoint accessed e.g. via job configuration forms.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by Jenkins administrators.</p>
<p>VncRecorder Plugin 1.35 escapes the tool path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2205">https://nvd.nist.gov/vuln/detail/CVE-2020-2205</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1728%20(1)">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1728%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-vqp8-h53h-3jfh">https://github.com/advisories/GHSA-vqp8-h53h-3jfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vqp8-h53h-3jfh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify-on-demand-uploader] Missing permission checks in Jenkins Fortify on Demand Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fhmf-xf2q-4m8p</id>
        <link href="https://github.com/advisories/GHSA-fhmf-xf2q-4m8p"/>
        <updated>2022-12-29T00:27:02.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins Fortify on Demand Plugin 5.0.1 and earlier allows attackers with Overall/Read permission to connect to the globally configured Fortify on Demand endpoint using attacker-specified credentials IDs.</p>
<p>This form validation method requires appropriate permission in Fortify on Demand Plugin 6.0.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2204">https://nvd.nist.gov/vuln/detail/CVE-2020-2204</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1691">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1691</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-fhmf-xf2q-4m8p">https://github.com/advisories/GHSA-fhmf-xf2q-4m8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhmf-xf2q-4m8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify-on-demand-uploader] CSRF vulnerability in Jenkins Fortify on Demand Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p364-xfp2-f9rr</id>
        <link href="https://github.com/advisories/GHSA-p364-xfp2-f9rr"/>
        <updated>2022-12-28T23:51:14.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery vulnerability in Jenkins Fortify on Demand Plugin 5.0.1 and earlier allows attackers to connect to the globally configured Fortify on Demand endpoint using attacker-specified credentials IDs.</p>
<p>This form validation method requires appropriate permission in Fortify on Demand Plugin 6.0.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2203">https://nvd.nist.gov/vuln/detail/CVE-2020-2203</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1691">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1691</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-p364-xfp2-f9rr">https://github.com/advisories/GHSA-p364-xfp2-f9rr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p364-xfp2-f9rr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify-on-demand-uploader] Users with Overall/Read access could enumerate credentials IDs in Jenkins Fortify on Demand Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fph2-fwjq-prjf</id>
        <link href="https://github.com/advisories/GHSA-fph2-fwjq-prjf"/>
        <updated>2022-12-28T23:50:55.000Z</updated>
        <content type="html"><![CDATA[<p>Fortify on Demand Plugin provides a list of applicable credentials IDs to allow users configuring the plugin to select the one to use.</p>
<p>This functionality does not correctly check permissions in Fortify on Demand Plugin 6.0.0 and earlier, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>An enumeration of credentials IDs in Fortify on Demand Plugin 6.0.1 now requires the appropriate permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2202">https://nvd.nist.gov/vuln/detail/CVE-2020-2202</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1690">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1690</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-fph2-fwjq-prjf">https://github.com/advisories/GHSA-fph2-fwjq-prjf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fph2-fwjq-prjf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sonargraph-integration] Stored XSS vulnerability in Jenkins Sonargraph Integration Plugin]]></title>
        <id>https://github.com/advisories/GHSA-f799-hfg3-48jp</id>
        <link href="https://github.com/advisories/GHSA-f799-hfg3-48jp"/>
        <updated>2022-12-28T23:50:37.000Z</updated>
        <content type="html"><![CDATA[<p>Sonargraph Integration Plugin 3.0.0 and earlier does not escape the file path for the Log file field form validation.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability that can be exploited by users with Job/Configure permission.</p>
<p>Sonargraph Integration Plugin 3.0.1 escapes the affected part of the error message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2201">https://nvd.nist.gov/vuln/detail/CVE-2020-2201</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1775">https://jenkins.io/security/advisory/2020-07-02/#SECURITY-1775</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/02/7">http://www.openwall.com/lists/oss-security/2020/07/02/7</a></li>
<li><a href="https://github.com/advisories/GHSA-f799-hfg3-48jp">https://github.com/advisories/GHSA-f799-hfg3-48jp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f799-hfg3-48jp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:gitlab-oauth] Improper authorization of users and groups with the same base name in Jenkins GitLab Authentication Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qq38-mxpq-rrpj</id>
        <link href="https://github.com/advisories/GHSA-qq38-mxpq-rrpj"/>
        <updated>2022-12-28T23:44:47.000Z</updated>
        <content type="html"><![CDATA[<p>GitLab Authentication Plugin 1.5 and earlier does not differentiate between user names and hierarchical group names when performing authorization. This allows an attacker with permissions to create groups in GitLab to gain the privileges granted to another user or group.</p>
<p>GitLab Authentication Plugin 1.6 performs user name and group name authorization checks using the appropriate GitLab APIs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2228">https://nvd.nist.gov/vuln/detail/CVE-2020-2228</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-15/#SECURITY-1792">https://jenkins.io/security/advisory/2020-07-15/#SECURITY-1792</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/15/5">http://www.openwall.com/lists/oss-security/2020/07/15/5</a></li>
<li><a href="https://github.com/advisories/GHSA-qq38-mxpq-rrpj">https://github.com/advisories/GHSA-qq38-mxpq-rrpj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq38-mxpq-rrpj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:23:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:deployer-framework] Stored XSS vulnerability in Jenkins Deployer Framework Plugin]]></title>
        <id>https://github.com/advisories/GHSA-cfvw-84vq-43mx</id>
        <link href="https://github.com/advisories/GHSA-cfvw-84vq-43mx"/>
        <updated>2022-12-28T23:43:56.000Z</updated>
        <content type="html"><![CDATA[<p>Deployer Framework Plugin is a framework plugin allowing other plugins to provide a way to deploy artifacts. Deployer Framework Plugin 1.2 and earlier does not escape the URL displayed in the build home page. This results in a stored cross-site scripting (XSS) vulnerability exploitable by users able to provide the location.</p>
<p>The exploitability of this vulnerability depends on the specific implementation using Deployer Framework Plugin. The Jenkins security team is not aware of any exploitable implementation.</p>
<p>Deployer Framework Plugin 1.3 escapes the URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2227">https://nvd.nist.gov/vuln/detail/CVE-2020-2227</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-07-15/#SECURITY-1915">https://jenkins.io/security/advisory/2020-07-15/#SECURITY-1915</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/07/15/5">http://www.openwall.com/lists/oss-security/2020/07/15/5</a></li>
<li><a href="https://github.com/advisories/GHSA-cfvw-84vq-43mx">https://github.com/advisories/GHSA-cfvw-84vq-43mx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cfvw-84vq-43mx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:23:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.openshift.jenkins:openshift-pipeline] RCE vulnerability in Jenkins OpenShift Pipeline Plugin]]></title>
        <id>https://github.com/advisories/GHSA-264w-xrr7-6qqg</id>
        <link href="https://github.com/advisories/GHSA-264w-xrr7-6qqg"/>
        <updated>2022-12-28T23:19:18.000Z</updated>
        <content type="html"><![CDATA[<p>OpenShift Pipeline Plugin 1.0.56 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to provide YAML input files to OpenShift Pipeline Pluginâ€™s build step. OpenShift Pipeline Plugin 1.0.57 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2167">https://nvd.nist.gov/vuln/detail/CVE-2020-2167</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1739">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1739</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-264w-xrr7-6qqg">https://github.com/advisories/GHSA-264w-xrr7-6qqg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-264w-xrr7-6qqg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jvnet.hudson.plugins:storable-configs-plugin] Arbitrary file write vulnerability in Storable Configs Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qv6q-4jwx-7j5c</id>
        <link href="https://github.com/advisories/GHSA-qv6q-4jwx-7j5c"/>
        <updated>2022-12-28T22:50:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Storable Configs Plugin 1.0 and earlier does not restrict the user-specified file name, allowing attackers with Job/Configure permission to replace any other '.xml' file on the Jenkins controller with a job config.xml file's content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2278">https://nvd.nist.gov/vuln/detail/CVE-2020-2278</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1968%20(2)">https://www.jenkins.io/security/advisory/2020-09-16/#SECURITY-1968%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/16/3">http://www.openwall.com/lists/oss-security/2020/09/16/3</a></li>
<li><a href="https://github.com/advisories/GHSA-qv6q-4jwx-7j5c">https://github.com/advisories/GHSA-qv6q-4jwx-7j5c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv6q-4jwx-7j5c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:28:27.000Z</published>
    </entry>
</feed>