<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-09-18T23:01:31.850Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.mortbay.jetty:jetty] Jetty HTTP Server Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p5rr-q5g6-gm42</id>
        <link href="https://github.com/advisories/GHSA-p5rr-q5g6-gm42"/>
        <updated>2023-09-18T22:57:43.000Z</updated>
        <content type="html"><![CDATA[<p>HttpRequest.java in Jetty HTTP Server before 4.2.19 allows remote attackers to cause denial of service (memory usage and application crash) via HTTP requests with a large Content-Length.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2004-2381">https://nvd.nist.gov/vuln/detail/CVE-2004-2381</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/15537">https://exchange.xforce.ibmcloud.com/vulnerabilities/15537</a></li>
<li><a href="http://cvs.sourceforge.net/viewcvs.py/jetty/Jetty/src/org/mortbay/http/HttpRequest.java?r1=1.75&amp;r2=1.76">http://cvs.sourceforge.net/viewcvs.py/jetty/Jetty/src/org/mortbay/http/HttpRequest.java?r1=1.75&amp;r2=1.76</a></li>
<li><a href="http://sourceforge.net/project/shownotes.php?release_id=224743">http://sourceforge.net/project/shownotes.php?release_id=224743</a></li>
<li><a href="http://www.osvdb.org/4387">http://www.osvdb.org/4387</a></li>
<li><a href="https://github.com/advisories/GHSA-p5rr-q5g6-gm42">https://github.com/advisories/GHSA-p5rr-q5g6-gm42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p5rr-q5g6-gm42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-29T03:01:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Jakarta Tomcat Directory Listing vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qfw2-wvrw-mvw4</id>
        <link href="https://github.com/advisories/GHSA-qfw2-wvrw-mvw4"/>
        <updated>2023-09-18T22:43:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jakarta Tomcat before 3.3.1a, when used with JDK 1.3.1 or earlier, allows remote attackers to list directories even with an index.html or other file present, or obtain unprocessed source code for a JSP file, via a URL containing a null character.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2003-0042">https://nvd.nist.gov/vuln/detail/CVE-2003-0042</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/11194">https://exchange.xforce.ibmcloud.com/vulnerabilities/11194</a></li>
<li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/">http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/</a></li>
<li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt">http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt</a></li>
<li><a href="http://marc.info/?l=bugtraq&amp;m=104394568616290&amp;w=2">http://marc.info/?l=bugtraq&amp;m=104394568616290&amp;w=2</a></li>
<li><a href="http://secunia.com/advisories/7972">http://secunia.com/advisories/7972</a></li>
<li><a href="http://secunia.com/advisories/7977">http://secunia.com/advisories/7977</a></li>
<li><a href="http://www.ciac.org/ciac/bulletins/n-060.shtml">http://www.ciac.org/ciac/bulletins/n-060.shtml</a></li>
<li><a href="http://www.debian.org/security/2003/dsa-246">http://www.debian.org/security/2003/dsa-246</a></li>
<li><a href="http://www.securityfocus.com/advisories/5111">http://www.securityfocus.com/advisories/5111</a></li>
<li><a href="http://www.securityfocus.com/bid/6721">http://www.securityfocus.com/bid/6721</a></li>
<li><a href="https://github.com/advisories/GHSA-qfw2-wvrw-mvw4">https://github.com/advisories/GHSA-qfw2-wvrw-mvw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qfw2-wvrw-mvw4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-29T01:25:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Jakarta Tomcat cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5hgm-qm5m-5vmw</id>
        <link href="https://github.com/advisories/GHSA-5hgm-qm5m-5vmw"/>
        <updated>2023-09-18T22:43:31.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in the (1) examples and (2) ROOT web applications for Jakarta Tomcat 3.x through 3.3.1a allow remote attackers to insert arbitrary web script or HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2003-0044">https://nvd.nist.gov/vuln/detail/CVE-2003-0044</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/11196">https://exchange.xforce.ibmcloud.com/vulnerabilities/11196</a></li>
<li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/">http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/</a></li>
<li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt">http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt</a></li>
<li><a href="http://secunia.com/advisories/7972">http://secunia.com/advisories/7972</a></li>
<li><a href="http://www.ciac.org/ciac/bulletins/n-060.shtml">http://www.ciac.org/ciac/bulletins/n-060.shtml</a></li>
<li><a href="http://www.debian.org/security/2003/dsa-246">http://www.debian.org/security/2003/dsa-246</a></li>
<li><a href="http://www.osvdb.org/9203">http://www.osvdb.org/9203</a></li>
<li><a href="http://www.osvdb.org/9204">http://www.osvdb.org/9204</a></li>
<li><a href="http://www.securityfocus.com/advisories/5111">http://www.securityfocus.com/advisories/5111</a></li>
<li><a href="http://www.securityfocus.com/bid/6720">http://www.securityfocus.com/bid/6720</a></li>
<li><a href="https://github.com/advisories/GHSA-5hgm-qm5m-5vmw">https://github.com/advisories/GHSA-5hgm-qm5m-5vmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5hgm-qm5m-5vmw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-29T01:25:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Jakarta Tomcat Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w97x-xfxf-f9xj</id>
        <link href="https://github.com/advisories/GHSA-w97x-xfxf-f9xj"/>
        <updated>2023-09-18T22:43:30.000Z</updated>
        <content type="html"><![CDATA[<p>Jakarta Tomcat before 3.3.1a on certain Windows systems may allow remote attackers to cause a denial of service (thread hang and resource consumption) via a request for a JSP page containing an MS-DOS device name, such as aux.jsp.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2003-0045">https://nvd.nist.gov/vuln/detail/CVE-2003-0045</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/12102">https://exchange.xforce.ibmcloud.com/vulnerabilities/12102</a></li>
<li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt">http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3.1a/RELEASE-NOTES-3.3.1a.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-w97x-xfxf-f9xj">https://github.com/advisories/GHSA-w97x-xfxf-f9xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w97x-xfxf-f9xj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-29T01:25:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Denial of Service vulnerability in the Catalina package]]></title>
        <id>https://github.com/advisories/GHSA-7wj2-48c4-2684</id>
        <link href="https://github.com/advisories/GHSA-7wj2-48c4-2684"/>
        <updated>2023-09-18T22:40:44.000Z</updated>
        <content type="html"><![CDATA[<p>The Catalina org.apache.catalina.connector.http package in Tomcat 4.0.x up to 4.0.6 allows remote attackers to cause a denial of service via several requests that do not follow the HTTP protocol, which causes Tomcat to reject later requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2003-0866">https://nvd.nist.gov/vuln/detail/CVE-2003-0866</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/13429">https://exchange.xforce.ibmcloud.com/vulnerabilities/13429</a></li>
<li><a href="https://lists.apache.org/thread.html/29dc6c2b625789e70a9c4756b5a327e6547273ff8bde7e0327af48c5@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/29dc6c2b625789e70a9c4756b5a327e6547273ff8bde7e0327af48c5@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/c62b0e3a7bf23342352a5810c640a94b6db69957c5c19db507004d74@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/c62b0e3a7bf23342352a5810c640a94b6db69957c5c19db507004d74@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rb71997f506c6cc8b530dd845c084995a9878098846c7b4eacfae8db3@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/rb71997f506c6cc8b530dd845c084995a9878098846c7b4eacfae8db3@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=215506">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=215506</a></li>
<li><a href="http://secunia.com/advisories/30899">http://secunia.com/advisories/30899</a></li>
<li><a href="http://secunia.com/advisories/30908">http://secunia.com/advisories/30908</a></li>
<li><a href="http://sunsolve.sun.com/search/document.do?assetkey=1-26-239312-1">http://sunsolve.sun.com/search/document.do?assetkey=1-26-239312-1</a></li>
<li><a href="http://tomcat.apache.org/security-4.html">http://tomcat.apache.org/security-4.html</a></li>
<li><a href="http://www.debian.org/security/2003/dsa-395">http://www.debian.org/security/2003/dsa-395</a></li>
<li><a href="http://www.securityfocus.com/bid/8824">http://www.securityfocus.com/bid/8824</a></li>
<li><a href="http://www.vupen.com/english/advisories/2008/1979/references">http://www.vupen.com/english/advisories/2008/1979/references</a></li>
<li><a href="https://github.com/advisories/GHSA-7wj2-48c4-2684">https://github.com/advisories/GHSA-7wj2-48c4-2684</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7wj2-48c4-2684</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-29T01:27:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-servlet-api] Apache Tomcat Allows Source Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-x445-mmpw-7r4f</id>
        <link href="https://github.com/advisories/GHSA-x445-mmpw-7r4f"/>
        <updated>2023-09-18T22:36:53.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Software Foundation Tomcat Servlet prior to 3.2.2 allows a remote attacker to read the source code to arbitrary 'jsp' files via a malformed URL request which does not end with an HTTP protocol specification (i.e. HTTP/1.0).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2001-0590">https://nvd.nist.gov/vuln/detail/CVE-2001-0590</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/6971">https://exchange.xforce.ibmcloud.com/vulnerabilities/6971</a></li>
<li><a href="https://web.archive.org/web/20020711002734/http://archives.neohapsis.com/archives/bugtraq/2001-04/0031.html">https://web.archive.org/web/20020711002734/http://archives.neohapsis.com/archives/bugtraq/2001-04/0031.html</a></li>
<li><a href="https://github.com/advisories/GHSA-x445-mmpw-7r4f">https://github.com/advisories/GHSA-x445-mmpw-7r4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x445-mmpw-7r4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-30T18:16:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat allows webmasters to insert xss into error messages]]></title>
        <id>https://github.com/advisories/GHSA-58hj-575g-5j25</id>
        <link href="https://github.com/advisories/GHSA-58hj-575g-5j25"/>
        <updated>2023-09-18T22:35:47.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability in Apache Tomcat 3.2.1 allows a malicious webmaster to embed Javascript in a request for a .JSP file, which causes the Javascript to be inserted into an error message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2001-0829">https://nvd.nist.gov/vuln/detail/CVE-2001-0829</a></li>
<li><a href="https://web.archive.org/web/20021108153830/http://online.securityfocus.com/bid/2982">https://web.archive.org/web/20021108153830/http://online.securityfocus.com/bid/2982</a></li>
<li><a href="https://web.archive.org/web/20021201182720/http://jakarta.apache.org/tomcat/tomcat-3.2-doc/readme">https://web.archive.org/web/20021201182720/http://jakarta.apache.org/tomcat/tomcat-3.2-doc/readme</a></li>
<li><a href="https://web.archive.org/web/20061208015126/http://archive.cert.uni-stuttgart.de/archive/bugtraq/2001/07/msg00021.html">https://web.archive.org/web/20061208015126/http://archive.cert.uni-stuttgart.de/archive/bugtraq/2001/07/msg00021.html</a></li>
<li><a href="https://github.com/advisories/GHSA-58hj-575g-5j25">https://github.com/advisories/GHSA-58hj-575g-5j25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-58hj-575g-5j25</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-30T18:16:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Jakarta Apache Tomcat Reveals Physical Paths]]></title>
        <id>https://github.com/advisories/GHSA-qg4g-6jcq-rw93</id>
        <link href="https://github.com/advisories/GHSA-qg4g-6jcq-rw93"/>
        <updated>2023-09-18T22:00:30.000Z</updated>
        <content type="html"><![CDATA[<p>Jakarta Tomcat 3.1 under Apache reveals physical path information when a remote attacker requests a URL that does not exist, which generates an error message that includes the physical path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2000-0759">https://nvd.nist.gov/vuln/detail/CVE-2000-0759</a></li>
<li><a href="https://github.com/advisories/GHSA-qg4g-6jcq-rw93">https://github.com/advisories/GHSA-qg4g-6jcq-rw93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qg4g-6jcq-rw93</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-30T18:14:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-4gr9-99j3-vqxv</id>
        <link href="https://github.com/advisories/GHSA-4gr9-99j3-vqxv"/>
        <updated>2023-09-18T21:59:43.000Z</updated>
        <content type="html"><![CDATA[<p>Directory traversal vulnerability in source.jsp of Apache Tomcat before 3.1 allows remote attackers to read arbitrary files via a <code>..</code> (dot dot) in the argument to source.jsp.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2000-1210">https://nvd.nist.gov/vuln/detail/CVE-2000-1210</a></li>
<li><a href="http://marc.info/?l=bugtraq&amp;m=95371672300045&amp;w=2">http://marc.info/?l=bugtraq&amp;m=95371672300045&amp;w=2</a></li>
<li><a href="https://web.archive.org/web/20020818015647/http://www.iss.net/security_center/static/4205.php">https://web.archive.org/web/20020818015647/http://www.iss.net/security_center/static/4205.php</a></li>
<li><a href="https://github.com/advisories/GHSA-4gr9-99j3-vqxv">https://github.com/advisories/GHSA-4gr9-99j3-vqxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gr9-99j3-vqxv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-30T18:15:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jgit:org.eclipse.jgit] Arbitrary File Overwrite in Eclipse JGit ]]></title>
        <id>https://github.com/advisories/GHSA-3p86-9955-h393</id>
        <link href="https://github.com/advisories/GHSA-3p86-9955-h393"/>
        <updated>2023-09-18T19:17:55.000Z</updated>
        <content type="html"><![CDATA[<p>Arbitrary File Overwrite in Eclipse JGit &lt;= 6.6.0</p>
<p>In Eclipse JGit, all versions &lt;= 6.6.0.202305301015-r, a symbolic link present in a specially crafted git repository can be used to write a file to locations outside the working tree when this repository is cloned with JGit to a case-insensitive filesystem, or when a checkout from a clone of such a repository is performed on a case-insensitive filesystem.</p>
<p>This can happen on checkout (DirCacheCheckout), merge (ResolveMerger&nbsp;via its WorkingTreeUpdater), pull (PullCommand&nbsp;using merge), and when applying a patch (PatchApplier). This can be exploited for remote code execution (RCE), for instance if the file written outside the working tree is a git filter that gets executed on a subsequent git command.</p>
<p>The issue occurs only on case-insensitive filesystems, like the default filesystems on Windows and macOS. The user performing the clone or checkout must have the rights to create symbolic links for the problem to occur, and symbolic links must be enabled in the git configuration.</p>
<p>Setting git configuration option core.symlinks = false&nbsp;before checking out avoids the problem.</p>
<p>The issue was fixed in Eclipse JGit version 6.6.1.202309021850-r and 6.7.0.202309050840-r, available via  Maven Central <a href="https://repo1.maven.org/maven2/org/eclipse/jgit/">https://repo1.maven.org/maven2/org/eclipse/jgit/</a> &nbsp;and  repo.eclipse.org <a href="https://repo.eclipse.org/content/repositories/jgit-releases/">https://repo.eclipse.org/content/repositories/jgit-releases/</a> .</p>
<p>The JGit maintainers would like to thank RyotaK for finding and reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4759">https://nvd.nist.gov/vuln/detail/CVE-2023-4759</a></li>
<li><a href="https://git.eclipse.org/c/jgit/jgit.git/commit/?id=9072103f3b3cf64dd12ad2949836ab98f62dabf1">https://git.eclipse.org/c/jgit/jgit.git/commit/?id=9072103f3b3cf64dd12ad2949836ab98f62dabf1</a></li>
<li><a href="https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/11">https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/11</a></li>
<li><a href="https://projects.eclipse.org/projects/technology.jgit/releases/6.6.1">https://projects.eclipse.org/projects/technology.jgit/releases/6.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-3p86-9955-h393">https://github.com/advisories/GHSA-3p86-9955-h393</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p86-9955-h393</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-18T15:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.undertow:undertow-core] Undertow denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m4mm-pg93-fv78</id>
        <link href="https://github.com/advisories/GHSA-m4mm-pg93-fv78"/>
        <updated>2023-09-15T13:37:04.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in undertow. This issue makes achieving a denial of service possible due to an unexpected handshake status updated in SslConduit, where the loop never terminates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1108">https://nvd.nist.gov/vuln/detail/CVE-2023-1108</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1184">https://access.redhat.com/errata/RHSA-2023:1184</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1185">https://access.redhat.com/errata/RHSA-2023:1185</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1512">https://access.redhat.com/errata/RHSA-2023:1512</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1513">https://access.redhat.com/errata/RHSA-2023:1513</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1514">https://access.redhat.com/errata/RHSA-2023:1514</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:1516">https://access.redhat.com/errata/RHSA-2023:1516</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3883">https://access.redhat.com/errata/RHSA-2023:3883</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3884">https://access.redhat.com/errata/RHSA-2023:3884</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3885">https://access.redhat.com/errata/RHSA-2023:3885</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3888">https://access.redhat.com/errata/RHSA-2023:3888</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3892">https://access.redhat.com/errata/RHSA-2023:3892</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:3954">https://access.redhat.com/errata/RHSA-2023:3954</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2023:4612">https://access.redhat.com/errata/RHSA-2023:4612</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1108">https://access.redhat.com/security/cve/CVE-2023-1108</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2174246">https://bugzilla.redhat.com/show_bug.cgi?id=2174246</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/1b763064a41a30583b5df9a118898513007a70be">https://github.com/undertow-io/undertow/commit/1b763064a41a30583b5df9a118898513007a70be</a></li>
<li><a href="https://github.com/undertow-io/undertow/commit/ccc053b55f5de9872bc1a4999fd6aa85fc5e146d">https://github.com/undertow-io/undertow/commit/ccc053b55f5de9872bc1a4999fd6aa85fc5e146d</a></li>
<li><a href="https://github.com/advisories/GHSA-m4mm-pg93-fv78">https://github.com/advisories/GHSA-m4mm-pg93-fv78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4mm-pg93-fv78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-14T15:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-openid] Jetty's OpenId Revoked authentication allows one request]]></title>
        <id>https://github.com/advisories/GHSA-pwh8-58vv-vw48</id>
        <link href="https://github.com/advisories/GHSA-pwh8-58vv-vw48"/>
        <updated>2023-09-15T13:36:12.000Z</updated>
        <content type="html"><![CDATA[<p>If a Jetty <code>OpenIdAuthenticator</code> uses the optional nested <code>LoginService</code>, and that <code>LoginService</code> decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. </p>
<p>So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the <code>LoginService</code>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts usages of the jetty-openid which have configured a nested <code>LoginService</code> and where that <code>LoginService</code> will is capable of rejecting previously authenticated users.</p>
<h3 id="original-report">Original Report</h3>
<blockquote>
<p>working on a custom OpenIdAuthenticator, I discovered the following:</p>
<p><a href="https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505">https://github.com/eclipse/jetty.project/blob/jetty-10.0.14/jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java#L505</a></p>
<p>In the case where the LoginService does return that the authentication has been revoked (from the validate() call on line 463), the OpenIdAuthenticator removes the authentication from the session; however the current request still proceeds as if authenticated, since it falls through to "return authentication" on line 505.</p>
<p>This is fixed by moving the line 505 (and associated debug log) inside the else block that ends on line 502, instead of outside it. Then the revocation case will run through to line 517 and will trigger a new OpenId authentication which I think is correct.</p>
<p>I think this revocation can only occur if you do attach a separate LoginService to the OpenIdLoginService, but in that case the revoked authentication will still let the next request through (and possibly more than one if they are very close to simultaneous).</p>
<p>Technically I think this is a security vulnerability, if a very minor one, so I'm sending this off-list.</p>
</blockquote>
<h3 id="patched-versions">Patched Versions</h3>
<p>Fixed in Jetty Versions:</p>
<ul>
<li>9.4.52 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li>10.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>11.0.16 - fixed in PR <a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li>12.0.0 - not impacted (already has fix)</li>
</ul>
<h3 id="workaround">Workaround</h3>
<p>Upgrade your version of Jetty.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48">https://github.com/eclipse/jetty.project/security/advisories/GHSA-pwh8-58vv-vw48</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9528">https://github.com/eclipse/jetty.project/pull/9528</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/9660">https://github.com/eclipse/jetty.project/pull/9660</a></li>
<li><a href="https://github.com/advisories/GHSA-pwh8-58vv-vw48">https://github.com/advisories/GHSA-pwh8-58vv-vw48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwh8-58vv-vw48</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-15T13:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.commons:commons-compress] Apache Commons Compress denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cgwf-w82q-5jrr</id>
        <link href="https://github.com/advisories/GHSA-cgwf-w82q-5jrr"/>
        <updated>2023-09-14T19:35:27.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation, Uncontrolled Resource Consumption vulnerability in Apache Commons Compress in TAR parsing.This issue affects Apache Commons Compress:&nbsp;from 1.22 before 1.24.0.</p>
<p>Users are recommended to upgrade to version 1.24.0, which fixes the issue.</p>
<p>A third party can create a malformed TAR file by manipulating file modification times headers, which when parsed with Apache Commons Compress, will cause a denial of service issue via CPU consumption.</p>
<p>In version 1.22 of Apache Commons Compress, support was added for file modification times with higher precision (issue # COMPRESS-612 <a href="https://issues.apache.org/jira/browse/COMPRESS-612">1</a>). The format for the PAX extended headers carrying this data consists of two numbers separated by a period <a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html#tag_20_92_13_05">2</a>, indicating seconds and subsecond precision (for example “1647221103.5998539”). The impacted fields are “atime”, “ctime”, “mtime” and “LIBARCHIVE.creationtime”. No input validation is performed prior to the parsing of header values.</p>
<p>Parsing of these numbers uses the BigDecimal <a href="https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html">3</a> class from the JDK which has a publicly known algorithmic complexity issue when doing operations on large numbers, causing denial of service (see issue # JDK-6560193 <a href="https://bugs.openjdk.org/browse/JDK-6560193">4</a>). A third party can manipulate file time headers in a TAR file by placing a number with a very long fraction (300,000 digits) or a number with exponent notation (such as “9e9999999”) within a file modification time header, and the parsing of files with these headers will take hours instead of seconds, leading to a denial of service via exhaustion of CPU resources. This issue is similar to CVE-2012-2098 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2098">5</a>.</p>
<p>Only applications using CompressorStreamFactory class (with auto-detection of file types), TarArchiveInputStream and TarFile classes to parse TAR files are impacted. Since this code was introduced in v1.22, only that version and later versions are impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42503">https://nvd.nist.gov/vuln/detail/CVE-2023-42503</a></li>
<li><a href="https://lists.apache.org/thread/5xwcyr600mn074vgxq92tjssrchmc93c">https://lists.apache.org/thread/5xwcyr600mn074vgxq92tjssrchmc93c</a></li>
<li><a href="https://github.com/apache/commons-compress/commit/aae38bfb820159ae7a0b792e779571f6a46b3889">https://github.com/apache/commons-compress/commit/aae38bfb820159ae7a0b792e779571f6a46b3889</a></li>
<li><a href="https://github.com/advisories/GHSA-cgwf-w82q-5jrr">https://github.com/advisories/GHSA-cgwf-w82q-5jrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cgwf-w82q-5jrr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T09:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.commons:commons-compress] Uncontrolled Resource Consumption in Apache Commons Compress]]></title>
        <id>https://github.com/advisories/GHSA-6fxm-66hq-fc96</id>
        <link href="https://github.com/advisories/GHSA-6fxm-66hq-fc96"/>
        <updated>2023-09-14T16:29:21.000Z</updated>
        <content type="html"><![CDATA[<p>Algorithmic complexity vulnerability in the sorting algorithms in bzip2 compressing stream (BZip2CompressorOutputStream) in Apache Commons Compress before 1.4.1 allows remote attackers to cause a denial of service (CPU consumption) via a file with many repeating inputs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2098">https://nvd.nist.gov/vuln/detail/CVE-2012-2098</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/75857">https://exchange.xforce.ibmcloud.com/vulnerabilities/75857</a></li>
<li><a href="https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E">https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="http://ant.apache.org/security.html">http://ant.apache.org/security.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081697.html">http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081697.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081746.html">http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081746.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105049.html">http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105049.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105060.html">http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105060.html</a></li>
<li><a href="http://packetstormsecurity.org/files/113014/Apache-Commons-Compress-Apache-Ant-Denial-Of-Service.html">http://packetstormsecurity.org/files/113014/Apache-Commons-Compress-Apache-Ant-Denial-Of-Service.html</a></li>
<li><a href="http://www-01.ibm.com/support/docview.wss?uid=swg21644047">http://www-01.ibm.com/support/docview.wss?uid=swg21644047</a></li>
<li><a href="https://web.archive.org/web/20130525085523/http://www.securityfocus.com/bid/53676">https://web.archive.org/web/20130525085523/http://www.securityfocus.com/bid/53676</a></li>
<li><a href="https://web.archive.org/web/20140724002926/http://secunia.com/advisories/49286">https://web.archive.org/web/20140724002926/http://secunia.com/advisories/49286</a></li>
<li><a href="https://web.archive.org/web/20140724023114/http://secunia.com/advisories/49255">https://web.archive.org/web/20140724023114/http://secunia.com/advisories/49255</a></li>
<li><a href="https://web.archive.org/web/20200517014414/http://www.securitytracker.com/id?1027096">https://web.archive.org/web/20200517014414/http://www.securitytracker.com/id?1027096</a></li>
<li><a href="http://archives.neohapsis.com/archives/bugtraq/2012-05/0130.html">http://archives.neohapsis.com/archives/bugtraq/2012-05/0130.html</a></li>
<li><a href="http://commons.apache.org/compress/security.html">http://commons.apache.org/compress/security.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/13/3">http://www.openwall.com/lists/oss-security/2023/09/13/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6fxm-66hq-fc96">https://github.com/advisories/GHSA-6fxm-66hq-fc96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fxm-66hq-fc96</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:07:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-http] Jetty accepts "+" prefixed value in Content-Length]]></title>
        <id>https://github.com/advisories/GHSA-hmr7-m48g-48f6</id>
        <link href="https://github.com/advisories/GHSA-hmr7-m48g-48f6"/>
        <updated>2023-09-14T16:17:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Jetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround as there is no known exploit scenario.   </p>
<h3 id="original-report">Original Report</h3>
<p><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">RFC 9110 Secion 8.6</a> defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts "+" prefixed Content-Length, which could lead to potential HTTP request smuggling.</p>
<p>Payload:</p>
<pre><code> POST / HTTP/1.1
 Host: a.com
 Content-Length: +16
 Connection: close
 ​
 0123456789abcdef
</code></pre>
<p>When sending this payload to Jetty, it can successfully parse and identify the length.</p>
<p>When sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.</p>
<p>This behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6">https://github.com/eclipse/jetty.project/security/advisories/GHSA-hmr7-m48g-48f6</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.6">https://www.rfc-editor.org/rfc/rfc9110#section-8.6</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr7-m48g-48f6">https://github.com/advisories/GHSA-hmr7-m48g-48f6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr7-m48g-48f6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-14T16:17:27.000Z</published>
    </entry>
</feed>