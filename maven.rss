<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-24T00:03:24.216Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:build-with-parameters] CSRF vulnerability in Jenkins Build With Parameters Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w24g-24qg-v4w2</id>
        <link href="https://github.com/advisories/GHSA-w24g-24qg-v4w2"/>
        <updated>2022-12-23T05:05:48.000Z</updated>
        <content type="html"><![CDATA[<p>Build With Parameters Plugin 1.5 and earlier does not require POST requests for its form submission endpoint, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>This vulnerability allows attackers to build a project with attacker-specified parameters. Build With Parameters Plugin 1.5.1 requires POST requests for the affected HTTP endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21629">https://nvd.nist.gov/vuln/detail/CVE-2021-21629</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2257">https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2257</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/30/1">http://www.openwall.com/lists/oss-security/2021/03/30/1</a></li>
<li><a href="https://github.com/advisories/GHSA-w24g-24qg-v4w2">https://github.com/advisories/GHSA-w24g-24qg-v4w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24g-24qg-v4w2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:45:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.shardingsphere:shardingsphere-proxy] Apache ShardingSphere-Proxy Incomplete Cleanup vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</id>
        <link href="https://github.com/advisories/GHSA-wmxm-6wxc-3xqf"/>
        <updated>2022-12-22T20:02:31.000Z</updated>
        <content type="html"><![CDATA[<p>Apache ShardingSphere-Proxy prior to 5.3.0 when using MySQL as database backend didn't cleanup the database session completely after client authentication failed, which allowed an attacker to execute normal commands by constructing a special MySQL client. This vulnerability has been fixed in Apache ShardingSphere 5.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45347">https://nvd.nist.gov/vuln/detail/CVE-2022-45347</a></li>
<li><a href="https://lists.apache.org/thread/l5rz7j4rg10o7ywtgknh2f5hxnv6yw3l">https://lists.apache.org/thread/l5rz7j4rg10o7ywtgknh2f5hxnv6yw3l</a></li>
<li><a href="https://github.com/advisories/GHSA-wmxm-6wxc-3xqf">https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmxm-6wxc-3xqf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-22T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.mingsoft:ms-mcms] Mingsoft MCMS Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6rvv-h8g7-728w</id>
        <link href="https://github.com/advisories/GHSA-6rvv-h8g7-728w"/>
        <updated>2022-12-22T19:58:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in Mingsoft MCMS 5.2.9 and classified as problematic. Affected by this vulnerability is the function save of the component Article Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216499.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4640">https://nvd.nist.gov/vuln/detail/CVE-2022-4640</a></li>
<li><a href="https://gitee.com/mingSoft/MCMS/issues/I65KI5">https://gitee.com/mingSoft/MCMS/issues/I65KI5</a></li>
<li><a href="https://vuldb.com/?id.216499">https://vuldb.com/?id.216499</a></li>
<li><a href="https://github.com/advisories/GHSA-6rvv-h8g7-728w">https://github.com/advisories/GHSA-6rvv-h8g7-728w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rvv-h8g7-728w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-22T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.yaml:snakeyaml] SnakeYaml Constructor Deserialization Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-mjmj-j48q-9wg2</id>
        <link href="https://github.com/advisories/GHSA-mjmj-j48q-9wg2"/>
        <updated>2022-12-22T19:16:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>SnakeYaml's <code>Constructor</code> class, which inherits from <code>SafeConstructor</code>, allows
any type be deserialized given the following line:</p>
<p>new Yaml(new Constructor(TestDataClass.class)).load(yamlContent);</p>
<p>Types do not have to match the types of properties in the
target class. A <code>ConstructorException</code> is thrown, but only after a malicious
payload is deserialized.</p>
<h3 id="severity">Severity</h3>
<p>High, lack of type checks during deserialization allows remote code execution.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<p>Execute <code>bash run.sh</code>. The PoC uses Constructor to deserialize a payload
for RCE. RCE is demonstrated by using a payload which performs a http request to
<a href="http://127.0.0.1:8000">http://127.0.0.1:8000</a>.</p>
<p>Example output of successful run of proof of concept:</p>
<pre><code>$ bash run.sh

[+] Downloading snakeyaml if needed
[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE
nc: no process found
[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.
[+] An exception is expected.
Exception:
Cannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0
 in 'string', line 1, column 1:
    payload: !!javax.script.ScriptEn ... 
    ^
Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager
 in 'string', line 1, column 10:
    payload: !!javax.script.ScriptEngineManag ... 
             ^

    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)
    at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)
    at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)
    at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)
    at org.yaml.snakeyaml.Yaml.load(Yaml.java:416)
    at Main.main(Main.java:37)
Caused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager
    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
    at java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)
    at java.base/java.lang.reflect.Field.set(Field.java:780)
    at org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)
    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)
    ... 9 more
[+] Dumping Received HTTP Request. Will not be empty if PoC worked
GET /proof-of-concept HTTP/1.1
User-Agent: Java/11.0.14
Host: localhost:8000
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
</code></pre>
<h3 id="further-analysis">Further Analysis</h3>
<p>Potential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.</p>
<h3 id="timeline">Timeline</h3>
<p><strong>Date reported</strong>: 4/11/2022
<strong>Date fixed</strong>: 
<strong>Date disclosed</strong>: 10/13/2022</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2">https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1471">https://nvd.nist.gov/vuln/detail/CVE-2022-1471</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374</a></li>
<li><a href="https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471">https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471</a></li>
<li><a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></li>
<li><a href="https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/">https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/</a></li>
<li><a href="https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true">https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true</a></li>
<li><a href="https://github.com/advisories/GHSA-mjmj-j48q-9wg2">https://github.com/advisories/GHSA-mjmj-j48q-9wg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjmj-j48q-9wg2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-12T21:19:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:rapiddeploy-jenkins] XXE vulnerability in Jenkins RapidDeploy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</id>
        <link href="https://github.com/advisories/GHSA-g7w4-r4mg-gvhx"/>
        <updated>2022-12-22T14:05:20.000Z</updated>
        <content type="html"><![CDATA[<p>RapidDeploy Plugin 4.2 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the 'RapidDeploy deployment package build' build or post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>
<p>RapidDeploy Plugin 4.2.1 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2171">https://nvd.nist.gov/vuln/detail/CVE-2020-2171</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1677">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1677</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-g7w4-r4mg-gvhx">https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7w4-r4mg-gvhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:rapiddeploy-jenkins] Stored XSS vulnerability in Jenkins RapidDeploy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</id>
        <link href="https://github.com/advisories/GHSA-f4gq-7hvf-fjm3"/>
        <updated>2022-12-22T14:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>RapidDeploy Plugin 4.2 and earlier does not escape package names in its displayed table of packages obtained from a remote server. This results in a stored cross-site scripting (XSS) vulnerability exploitable by users able to configure jobs.</p>
<p>RapidDeploy Plugin 4.2.1 escapes package names.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2170">https://nvd.nist.gov/vuln/detail/CVE-2020-2170</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1676">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1676</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-f4gq-7hvf-fjm3">https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4gq-7hvf-fjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:queue-cleanup] Reflected XSS vulnerability in Jenkins Queue cleanup Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m7pr-m4cx-6m22</id>
        <link href="https://github.com/advisories/GHSA-m7pr-m4cx-6m22"/>
        <updated>2022-12-22T14:03:18.000Z</updated>
        <content type="html"><![CDATA[<p>A form validation HTTP endpoint in Queue cleanup Plugin 1.3 and earlier does not escape a query parameter displayed in an error message. This results in a reflected cross-site scripting vulnerability (XSS).</p>
<p>Queue cleanup Plugin 1.4 correctly escapes the query parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2169">https://nvd.nist.gov/vuln/detail/CVE-2020-2169</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1724">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1724</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-m7pr-m4cx-6m22">https://github.com/advisories/GHSA-m7pr-m4cx-6m22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7pr-m4cx-6m22</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:azure-acs] RCE vulnerability in Jenkins Azure Container Service Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5qff-7944-vq4f</id>
        <link href="https://github.com/advisories/GHSA-5qff-7944-vq4f"/>
        <updated>2022-12-22T14:02:35.000Z</updated>
        <content type="html"><![CDATA[<p>Azure Container Service Plugin 1.0.1 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution (RCE) vulnerability exploitable by users able to provide YAML input files to Azure Container Service Plugin’s build step.</p>
<p>Azure Container Service Plugin 1.0.2 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2168">https://nvd.nist.gov/vuln/detail/CVE-2020-2168</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1732">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1732</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-5qff-7944-vq4f">https://github.com/advisories/GHSA-5qff-7944-vq4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qff-7944-vq4f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:12:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:artifactory] Passwords transmitted in plain text by Jenkins Artifactory Plugin]]></title>
        <id>https://github.com/advisories/GHSA-xqf6-5grh-6223</id>
        <link href="https://github.com/advisories/GHSA-xqf6-5grh-6223"/>
        <updated>2022-12-22T13:56:43.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Artifactory Plugin 3.6.0 and earlier stores Artifactory server passwords in its global configuration file <code>org.jfrog.hudson.ArtifactoryBuilder.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>While the password is stored encrypted on disk since Artifactory Plugin 3.6.0, it is transmitted in plain text as part of the configuration form by Artifactory Plugin 3.6.0 and earlier. This can result in exposure of the password through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<p>Artifactory Plugin 3.6.1 transmits the password in its global configuration encrypted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2165">https://nvd.nist.gov/vuln/detail/CVE-2020-2165</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(2)">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-xqf6-5grh-6223">https://github.com/advisories/GHSA-xqf6-5grh-6223</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xqf6-5grh-6223</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:artifactory] Passwords stored in plain text by Jenkins Artifactory Plugin]]></title>
        <id>https://github.com/advisories/GHSA-4q47-ph87-fq4f</id>
        <link href="https://github.com/advisories/GHSA-4q47-ph87-fq4f"/>
        <updated>2022-12-22T13:54:53.000Z</updated>
        <content type="html"><![CDATA[<p>Artifactory Plugin 3.5.0 and earlier stores its Artifactory server password in plain text in the global configuration file <code>org.jfrog.hudson.ArtifactoryBuilder.xml</code>. This password can be viewed by users with access to the Jenkins controller file system.</p>
<p>Artifactory Plugin 3.6.0 now stores the Artifactory server password encrypted. This change is effective once the global configuration is saved the next time.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2164">https://nvd.nist.gov/vuln/detail/CVE-2020-2164</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(1)">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1542%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/25/2">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>
<li><a href="https://github.com/advisories/GHSA-4q47-ph87-fq4f">https://github.com/advisories/GHSA-4q47-ph87-fq4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4q47-ph87-fq4f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:labmanager] Password stored in plain text by Jenkins VMware Lab Manager Slaves Plugin]]></title>
        <id>https://github.com/advisories/GHSA-cg4h-cfjp-h3x2</id>
        <link href="https://github.com/advisories/GHSA-cg4h-cfjp-h3x2"/>
        <updated>2022-12-22T13:50:17.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins VMware Lab Manager Slaves Plugin 0.2.8 and earlier stores a password unencrypted in the global <code>config.xml</code> file on the Jenkins controller, where it can be viewed by users with access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2319">https://nvd.nist.gov/vuln/detail/CVE-2020-2319</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2084">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2084</a></li>
<li><a href="https://github.com/advisories/GHSA-cg4h-cfjp-h3x2">https://github.com/advisories/GHSA-cg4h-cfjp-h3x2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg4h-cfjp-h3x2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:33:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mailcommander] Passwords stored in plain text by Mail Commander Plugin for Jenkins-ci Plugin]]></title>
        <id>https://github.com/advisories/GHSA-485q-v457-3p58</id>
        <link href="https://github.com/advisories/GHSA-485q-v457-3p58"/>
        <updated>2022-12-22T13:49:20.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mail Commander Plugin for Jenkins-ci Plugin 1.0.0 and earlier stores passwords unencrypted in job config.xml files on the Jenkins controller where they can be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2318">https://nvd.nist.gov/vuln/detail/CVE-2020-2318</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2085">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2085</a></li>
<li><a href="https://github.com/advisories/GHSA-485q-v457-3p58">https://github.com/advisories/GHSA-485q-v457-3p58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-485q-v457-3p58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:33:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jvnet.hudson.plugins:findbugs] Stored XSS vulnerability in Jenkins FindBugs Plugin]]></title>
        <id>https://github.com/advisories/GHSA-24g8-35x9-fv8r</id>
        <link href="https://github.com/advisories/GHSA-24g8-35x9-fv8r"/>
        <updated>2022-12-22T13:48:16.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins FindBugs Plugin 5.0.0 and earlier does not escape the annotation message in tooltips, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to provide report files to Jenkins FindBugs Plugin's post build step.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2317">https://nvd.nist.gov/vuln/detail/CVE-2020-2317</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1918">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1918</a></li>
<li><a href="https://github.com/advisories/GHSA-24g8-35x9-fv8r">https://github.com/advisories/GHSA-24g8-35x9-fv8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-24g8-35x9-fv8r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:33:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jvnet.hudson.plugins:analysis-core] Stored XSS vulnerability in Jenkins Static Analysis Utilities Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fg6g-52rg-vr9q</id>
        <link href="https://github.com/advisories/GHSA-fg6g-52rg-vr9q"/>
        <updated>2022-12-22T13:45:07.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Static Analysis Utilities Plugin 1.96 and earlier does not escape the annotation message in tooltips, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2316">https://nvd.nist.gov/vuln/detail/CVE-2020-2316</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1907">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1907</a></li>
<li><a href="https://github.com/advisories/GHSA-fg6g-52rg-vr9q">https://github.com/advisories/GHSA-fg6g-52rg-vr9q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg6g-52rg-vr9q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.rapid7:jenkinsci-appspider-plugin] Password stored in plain text by Jenkins AppSpider Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rm7r-xv53-xwc3</id>
        <link href="https://github.com/advisories/GHSA-rm7r-xv53-xwc3"/>
        <updated>2022-12-22T13:41:30.000Z</updated>
        <content type="html"><![CDATA[<p>AppSpider Plugin 1.0.12 and earlier stores a password unencrypted in its global configuration file <code>com.rapid7.jenkinspider.PostBuildScan.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>This password can be viewed by users with access to the Jenkins controller file system.</p>
<p>AppSpider Plugin 1.0.13 stores a password encrypted once its configuration is saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2314">https://nvd.nist.gov/vuln/detail/CVE-2020-2314</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2058">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2058</a></li>
<li><a href="https://github.com/advisories/GHSA-rm7r-xv53-xwc3">https://github.com/advisories/GHSA-rm7r-xv53-xwc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rm7r-xv53-xwc3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:azure-keyvault] Missing permission checks in Jenkins Azure Key Vault Plugin allow enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-gf8w-6hcm-rh3j</id>
        <link href="https://github.com/advisories/GHSA-gf8w-6hcm-rh3j"/>
        <updated>2022-12-22T13:40:49.000Z</updated>
        <content type="html"><![CDATA[<p>Azure Key Vault Plugin 2.0 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>An enumeration of credentials IDs in Azure Key Vault Plugin 2.1 requires the appropriate permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2313">https://nvd.nist.gov/vuln/detail/CVE-2020-2313</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2110">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2110</a></li>
<li><a href="https://github.com/advisories/GHSA-gf8w-6hcm-rh3j">https://github.com/advisories/GHSA-gf8w-6hcm-rh3j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gf8w-6hcm-rh3j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sqlplus-script-runner] Password written to the build log by Jenkins SQLPlus Script Runner Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rwh3-5g7v-3c5m</id>
        <link href="https://github.com/advisories/GHSA-rwh3-5g7v-3c5m"/>
        <updated>2022-12-22T13:39:29.000Z</updated>
        <content type="html"><![CDATA[<p>SQLPlus Script Runner Plugin 2.0.12 and earlier prints the <code>sqlplus</code> command invocation to the build log.</p>
<p>This log message does not redact a password provided as part of a command line argument. This password can be viewed by users with Item/Read permission.</p>
<p>SQLPlus Script Runner Plugin 2.0.13 no longer prints the password in the build log.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2312">https://nvd.nist.gov/vuln/detail/CVE-2020-2312</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2129">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2129</a></li>
<li><a href="https://github.com/advisories/GHSA-rwh3-5g7v-3c5m">https://github.com/advisories/GHSA-rwh3-5g7v-3c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rwh3-5g7v-3c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hudson.plugins:project-inheritance] Missing permission check in Jenkins Project Inheritance Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w53q-r5cw-6vjh</id>
        <link href="https://github.com/advisories/GHSA-w53q-r5cw-6vjh"/>
        <updated>2022-12-22T13:38:11.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Project Inheritance Plugin 21.04.03 and earlier does not redact encrypted secrets in the 'getConfigAsXML' API URL when transmitting job config.xml data to users without Job/Configure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2198">https://nvd.nist.gov/vuln/detail/CVE-2020-2198</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1582">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1582</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-w53q-r5cw-6vjh">https://github.com/advisories/GHSA-w53q-r5cw-6vjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w53q-r5cw-6vjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:aws-global-configuration] Missing permission check in Jenkins AWS Global Configuration Plugin allows replacing plugin configuration]]></title>
        <id>https://github.com/advisories/GHSA-7v7g-mh53-89hw</id>
        <link href="https://github.com/advisories/GHSA-7v7g-mh53-89hw"/>
        <updated>2022-12-22T03:34:41.000Z</updated>
        <content type="html"><![CDATA[<p>AWS Global Configuration Plugin 1.5 and earlier does not perform a permission check in an HTTP endpoint processing form submissions.</p>
<p>This allows attackers with Overall/Read permission to replace the global AWS configuration.</p>
<p>AWS Global Configuration Plugin 1.6 properly performs permission checks when processing configuration form submissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2311">https://nvd.nist.gov/vuln/detail/CVE-2020-2311</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2101">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-2101</a></li>
<li><a href="https://github.com/advisories/GHSA-7v7g-mh53-89hw">https://github.com/advisories/GHSA-7v7g-mh53-89hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v7g-mh53-89hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ansible] Missing permission checks in Jenkins Ansible Plugin allow enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-6xqj-wvgp-rqp8</id>
        <link href="https://github.com/advisories/GHSA-6xqj-wvgp-rqp8"/>
        <updated>2022-12-22T03:34:20.000Z</updated>
        <content type="html"><![CDATA[<p>Ansible Plugin 1.0 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<p>An enumeration of credentials IDs in Ansible Plugin 1.1 requires the appropriate permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2310">https://nvd.nist.gov/vuln/detail/CVE-2020-2310</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1943">https://www.jenkins.io/security/advisory/2020-11-04/#SECURITY-1943</a></li>
<li><a href="https://github.com/advisories/GHSA-6xqj-wvgp-rqp8">https://github.com/advisories/GHSA-6xqj-wvgp-rqp8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6xqj-wvgp-rqp8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:33:08.000Z</published>
    </entry>
</feed>