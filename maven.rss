<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-10-27T19:01:18.780Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:teamconcert] Jenkins Team Concert Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-wj24-xmc5-hjw4</id>
        <link href="https://github.com/advisories/GHSA-wj24-xmc5-hjw4"/>
        <updated>2023-10-27T17:48:51.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins Team Concert Plugin 1.3.0 and earlier in form-related methods allowed users with Overall/Read access to enumerate credentials ID of credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16567">https://nvd.nist.gov/vuln/detail/CVE-2019-16567</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(2)">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/17/1">http://www.openwall.com/lists/oss-security/2019/12/17/1</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20%282%29">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20%282%29</a></li>
<li><a href="https://github.com/advisories/GHSA-wj24-xmc5-hjw4">https://github.com/advisories/GHSA-wj24-xmc5-hjw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wj24-xmc5-hjw4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:03:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:teamconcert] Jenkins Team Concert Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-c998-c4f6-vjw2</id>
        <link href="https://github.com/advisories/GHSA-c998-c4f6-vjw2"/>
        <updated>2023-10-27T17:46:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Team Concert Plugin 1.3.0 and earlier does not perform permission checks on a method implementing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, the form validation method does not require POST requests, resulting in a CSRF vulnerability.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16566">https://nvd.nist.gov/vuln/detail/CVE-2019-16566</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(1)">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/17/1">http://www.openwall.com/lists/oss-security/2019/12/17/1</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20%281%29">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20%281%29</a></li>
<li><a href="https://github.com/advisories/GHSA-c998-c4f6-vjw2">https://github.com/advisories/GHSA-c998-c4f6-vjw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c998-c4f6-vjw2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:03:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:teamconcert] Jenkins Team Concert Plugin cross-site request forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9h9v-rfh6-jf3w</id>
        <link href="https://github.com/advisories/GHSA-9h9v-rfh6-jf3w"/>
        <updated>2023-10-27T17:45:40.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Team Concert Plugin 1.3.0 and earlier does not perform permission checks on a method implementing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, the form validation method does not require POST requests, resulting in a CSRF vulnerability.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16565">https://nvd.nist.gov/vuln/detail/CVE-2019-16565</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(1)">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1605%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/17/1">http://www.openwall.com/lists/oss-security/2019/12/17/1</a></li>
<li><a href="https://github.com/advisories/GHSA-9h9v-rfh6-jf3w">https://github.com/advisories/GHSA-9h9v-rfh6-jf3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h9v-rfh6-jf3w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:03:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:websphere-deployer] Jenkins WebSphere Deployer Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-mxf8-grm7-mvqw</id>
        <link href="https://github.com/advisories/GHSA-mxf8-grm7-mvqw"/>
        <updated>2023-10-27T17:43:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins WebSphere Deployer Plugin 1.6.1 and earlier does not perform permission checks in methods performing form validation. This allows users with Overall/Read access to perform connection tests, determine whether files with an attacker-specified path exist on the Jenkins controller file system, and obtain limited information about the Jenkins and plugin configuration based on the responses. The latter include the ability to set plugin configuration options.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a CSRF vulnerability.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16559">https://nvd.nist.gov/vuln/detail/CVE-2019-16559</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1371">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1371</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/17/1">http://www.openwall.com/lists/oss-security/2019/12/17/1</a></li>
<li><a href="https://github.com/advisories/GHSA-mxf8-grm7-mvqw">https://github.com/advisories/GHSA-mxf8-grm7-mvqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxf8-grm7-mvqw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:03:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.m2release:m2release] Jenkins Maven Release Plug-in Plugin XXE vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7mf5-79gv-66gh</id>
        <link href="https://github.com/advisories/GHSA-7mf5-79gv-66gh"/>
        <updated>2023-10-27T17:41:55.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Maven Release Plug-in Plugin retrieves XML from Nexus repository manager APIs. Maven Release Plug-in Plugin 0.16.1 and earlier does not configure the XML parser to prevent XML external entity (XXE) attacks. While Jenkins users without Overall/Administer permission are not allowed to configure a custom Nexus URL, this could still be exploited via man-in-the-middle attacks, especially if itâ€™s not an HTTPS URL.</p>
<p>Additionally, a connection test form validation method does not require POST requests, resulting in a cross-site request forgery vulnerability. Combined, these two vulnerabilities allow attackers to have Jenkins parse crafted XML documents that use external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>
<p>Maven Release Plug-in Plugin 0.16.2 configures its XML parser to prevent XML external entity (XXE) attacks. It also now requires that requests to the connection test form validation method are done via POST, which protects from cross-site request forgery attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16549">https://nvd.nist.gov/vuln/detail/CVE-2019-16549</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1681">https://jenkins.io/security/advisory/2019-12-17/#SECURITY-1681</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/17/1">http://www.openwall.com/lists/oss-security/2019/12/17/1</a></li>
<li><a href="https://github.com/advisories/GHSA-7mf5-79gv-66gh">https://github.com/advisories/GHSA-7mf5-79gv-66gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mf5-79gv-66gh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:03:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:qmetry-for-jira-test-management] Jenkins QMetry for JIRA Plugin stored credentials in plain text]]></title>
        <id>https://github.com/advisories/GHSA-8mjp-8c2x-3g7w</id>
        <link href="https://github.com/advisories/GHSA-8mjp-8c2x-3g7w"/>
        <updated>2023-10-27T17:41:08.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins QMetry for JIRA - Test Management Plugin stored credentials unencrypted in job config.xml files on the Jenkins controller as part of its post-build step configuration. This credential could be viewed by users with Extended Read permission or access to the Jenkins controller file system.</p>
<p>QMetry for JIRA - Test Management Plugin now stores these credentials encrypted once the job configuration is saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16544">https://nvd.nist.gov/vuln/detail/CVE-2019-16544</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-11-21/#SECURITY-727%20(1)">https://jenkins.io/security/advisory/2019-11-21/#SECURITY-727%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/11/21/1">http://www.openwall.com/lists/oss-security/2019/11/21/1</a></li>
<li><a href="https://github.com/advisories/GHSA-8mjp-8c2x-3g7w">https://github.com/advisories/GHSA-8mjp-8c2x-3g7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8mjp-8c2x-3g7w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:01:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:qmetry-for-jira-test-management] Jenkins QMetry for JIRA Plugin shows plain text password in configuration form]]></title>
        <id>https://github.com/advisories/GHSA-793w-q2h5-8h5j</id>
        <link href="https://github.com/advisories/GHSA-793w-q2h5-8h5j"/>
        <updated>2023-10-27T17:39:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins QMetry for JIRA - Test Management Plugin stores a credential as part of its post-build step configuration.</p>
<p>While the password is stored encrypted on disk since QMetry for JIRA - Test Management Plugin 1.13, it is transmitted in plain text as part of the configuration form. This can result in exposure of the password through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16545">https://nvd.nist.gov/vuln/detail/CVE-2019-16545</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-11-21/#SECURITY-727%20(2)">https://jenkins.io/security/advisory/2019-11-21/#SECURITY-727%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/11/21/1">http://www.openwall.com/lists/oss-security/2019/11/21/1</a></li>
<li><a href="https://github.com/jenkinsci/qmetry-for-jira-test-management-plugin/commit/6711f566b72c099f10b1cecab406786ca998651d">https://github.com/jenkinsci/qmetry-for-jira-test-management-plugin/commit/6711f566b72c099f10b1cecab406786ca998651d</a></li>
<li><a href="https://github.com/advisories/GHSA-793w-q2h5-8h5j">https://github.com/advisories/GHSA-793w-q2h5-8h5j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-793w-q2h5-8h5j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:01:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:git] Path traversal in Jenkins Git Plugin]]></title>
        <id>https://github.com/advisories/GHSA-84cm-vjwm-m979</id>
        <link href="https://github.com/advisories/GHSA-84cm-vjwm-m979"/>
        <updated>2023-10-27T17:19:31.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins SCMs support a number of different URL schemes, including local file system paths (e.g. using <code>file:</code> URLs).</p>
<p>Historically in Jenkins, only agents checked out from SCM, and if multiple projects share the same agent, there is no expected isolation between builds besides using different workspaces unless overridden. Some Pipeline-related features check out SCMs from the Jenkins controller as well.</p>
<p>This allows attackers able to configure pipelines to check out some SCM repositories stored on the Jenkins controllerâ€™s file system using local paths as SCM URLs, obtaining limited information about other projects' SCM contents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30947">https://nvd.nist.gov/vuln/detail/CVE-2022-30947</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2478">https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2478</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/05/17/8">http://www.openwall.com/lists/oss-security/2022/05/17/8</a></li>
<li><a href="https://github.com/jenkinsci/git-plugin/commit/b295606e0b865c298fde27bea14f9b7535a976e6">https://github.com/jenkinsci/git-plugin/commit/b295606e0b865c298fde27bea14f9b7535a976e6</a></li>
<li><a href="https://github.com/advisories/GHSA-84cm-vjwm-m979">https://github.com/advisories/GHSA-84cm-vjwm-m979</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-84cm-vjwm-m979</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-18T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:extended-choice-parameter] Stored Cross-site Scripting vulnerabilities in Jenkins Extended Choice Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</id>
        <link href="https://github.com/advisories/GHSA-gp7c-xmmm-7pqr"/>
        <updated>2023-10-27T17:18:36.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Extended Choice Parameter Plugin 346.vd87693c5a_86c and earlier does not escape the name and description of Extended Choice parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29038">https://nvd.nist.gov/vuln/detail/CVE-2022-29038</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-gp7c-xmmm-7pqr">https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.synopsys.jenkinsci:ownership] Cross site request forgery in Jenkins Job and Node ownership Plugin]]></title>
        <id>https://github.com/advisories/GHSA-85f9-w9cx-h363</id>
        <link href="https://github.com/advisories/GHSA-85f9-w9cx-h363"/>
        <updated>2023-10-27T17:17:09.000Z</updated>
        <content type="html"><![CDATA[<p>Job and Node ownership Plugin 0.13.0 and earlier does not perform a permission check in several HTTP endpoints. This allows attackers with Item/Read permission to change the owners and item-specific permissions of a job. Additionally, this endpoint does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28150">https://nvd.nist.gov/vuln/detail/CVE-2022-28150</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2062%20(1)">https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2062%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/29/1">http://www.openwall.com/lists/oss-security/2022/03/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-85f9-w9cx-h363">https://github.com/advisories/GHSA-85f9-w9cx-h363</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85f9-w9cx-h363</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-30T00:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:JiraTestResultReporter] CSRF vulnerability and missing permission check in Jenkins JiraTestResultReporter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vqcx-jw4r-6fp3</id>
        <link href="https://github.com/advisories/GHSA-vqcx-jw4r-6fp3"/>
        <updated>2023-10-27T17:14:51.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery (CSRF) vulnerability in Jenkins JiraTestResultReporter Plugin 165.v817928553942 and earlier allows attackers to connect to an attacker-specified URL using attacker-specified credentials.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28136">https://nvd.nist.gov/vuln/detail/CVE-2022-28136</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2236">https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2236</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/29/1">http://www.openwall.com/lists/oss-security/2022/03/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-vqcx-jw4r-6fp3">https://github.com/advisories/GHSA-vqcx-jw4r-6fp3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vqcx-jw4r-6fp3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-30T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:atlassian-bitbucket-server-integration] Stored XSS vulnerability in Jenkins Bitbucket Server Integration Plugin]]></title>
        <id>https://github.com/advisories/GHSA-45v7-65q8-x294</id>
        <link href="https://github.com/advisories/GHSA-45v7-65q8-x294"/>
        <updated>2023-10-27T17:13:27.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Bitbucket Server Integration Plugin 3.1.0 and earlier does not limit URL schemes for callback URLs on OAuth consumers, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to create BitBucket Server consumers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28133">https://nvd.nist.gov/vuln/detail/CVE-2022-28133</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2639">https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2639</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/29/1">http://www.openwall.com/lists/oss-security/2022/03/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-45v7-65q8-x294">https://github.com/advisories/GHSA-45v7-65q8-x294</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45v7-65q8-x294</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-03-30T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:selected-tests-executor] Stored Cross-site Scripting vulnerability in Jenkins Tests Selector Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q787-qgw2-j2qf</id>
        <link href="https://github.com/advisories/GHSA-q787-qgw2-j2qf"/>
        <updated>2023-10-27T17:13:08.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Tests Selector Plugin 1.3.3 and earlier does not escape the Properties File Path option for Choosing Tests parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28159">https://nvd.nist.gov/vuln/detail/CVE-2022-28159</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2262">https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2262</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/29/1">http://www.openwall.com/lists/oss-security/2022/03/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-q787-qgw2-j2qf">https://github.com/advisories/GHSA-q787-qgw2-j2qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q787-qgw2-j2qf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-03-30T00:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jobgenerator] Stored Cross-site Scripting vulnerability in Jenkins Job Generator Plugin]]></title>
        <id>https://github.com/advisories/GHSA-f3jq-9c79-j65m</id>
        <link href="https://github.com/advisories/GHSA-f3jq-9c79-j65m"/>
        <updated>2023-10-27T17:12:24.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Job Generator Plugin 1.22 and earlier does not escape the name and description of Generator Parameter and Generator Choice parameters on Job Generator jobs' Build With Parameters views, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29042">https://nvd.nist.gov/vuln/detail/CVE-2022-29042</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jq-9c79-j65m">https://github.com/advisories/GHSA-f3jq-9c79-j65m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jq-9c79-j65m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:nodelabelparameter] Stored Cross-site Scripting in Jenkins Node and Label parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-pv7p-c7cp-vrh3</id>
        <link href="https://github.com/advisories/GHSA-pv7p-c7cp-vrh3"/>
        <updated>2023-10-27T17:11:52.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Node and Label parameter Plugin 1.10.3 and earlier does not escape the name and description of Node and Label parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29044">https://nvd.nist.gov/vuln/detail/CVE-2022-29044</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/nodelabelparameter-plugin/commit/b8a95cbf678e18dd1f936fd38f23b8cb0695ded7">https://github.com/jenkinsci/nodelabelparameter-plugin/commit/b8a95cbf678e18dd1f936fd38f23b8cb0695ded7</a></li>
<li><a href="https://github.com/advisories/GHSA-pv7p-c7cp-vrh3">https://github.com/advisories/GHSA-pv7p-c7cp-vrh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pv7p-c7cp-vrh3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] Stored Cross-site Scripting vulnerability in Jenkins Subversion Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wpr6-qvcq-8269</id>
        <link href="https://github.com/advisories/GHSA-wpr6-qvcq-8269"/>
        <updated>2023-10-27T17:11:30.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Subversion Plugin 2.15.3 and earlier does not escape the name and description of List Subversion tags (and more) parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29046">https://nvd.nist.gov/vuln/detail/CVE-2022-29046</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://support.apple.com/kb/HT213345">https://support.apple.com/kb/HT213345</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/Jul/18">http://seclists.org/fulldisclosure/2022/Jul/18</a></li>
<li><a href="https://github.com/advisories/GHSA-wpr6-qvcq-8269">https://github.com/advisories/GHSA-wpr6-qvcq-8269</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpr6-qvcq-8269</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jira] Stored Cross-site Scripting vulnerability in Jenkins Jira Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</id>
        <link href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8"/>
        <updated>2023-10-27T17:10:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Jira Plugin 3.7 and earlier, except 3.6.1, does not escape the name and description of Jira Issue and Jira Release Version parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29041">https://nvd.nist.gov/vuln/detail/CVE-2022-29041</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e">https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e</a></li>
<li><a href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8">https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jira] Stored Cross-site Scripting vulnerability in Jenkins Jira Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</id>
        <link href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8"/>
        <updated>2023-10-27T17:10:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Jira Plugin 3.7 and earlier, except 3.6.1, does not escape the name and description of Jira Issue and Jira Release Version parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29041">https://nvd.nist.gov/vuln/detail/CVE-2022-29041</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e">https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e</a></li>
<li><a href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8">https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mask-passwords] Stored Cross-site Scripting in Jenkins Mask Passwords Plugin]]></title>
        <id>https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</id>
        <link href="https://github.com/advisories/GHSA-pjm3-f4vh-3h3h"/>
        <updated>2023-10-27T17:10:27.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mask Passwords Plugin 3.0 and earlier does not escape the name and description of Non-Stored Password parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29043">https://nvd.nist.gov/vuln/detail/CVE-2022-29043</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/mask-passwords-plugin/commit/55022b3f1935dc005c4075161c176b29bce7b849">https://github.com/jenkinsci/mask-passwords-plugin/commit/55022b3f1935dc005c4075161c176b29bce7b849</a></li>
<li><a href="https://github.com/advisories/GHSA-pjm3-f4vh-3h3h">https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.surenpi.jenkins:phoenix-autotest] Path traversal in Jenkins Pipeline Phoenix AutoTest Plugin]]></title>
        <id>https://github.com/advisories/GHSA-62hc-f8qj-5xc3</id>
        <link href="https://github.com/advisories/GHSA-62hc-f8qj-5xc3"/>
        <updated>2023-10-27T17:08:14.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Pipeline: Phoenix AutoTest Plugin 1.3 and earlier allows attackers with Item/Configure permission to upload arbitrary files from the Jenkins controller via FTP to an attacker-specified FTP server.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28157">https://nvd.nist.gov/vuln/detail/CVE-2022-28157</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2684">https://www.jenkins.io/security/advisory/2022-03-29/#SECURITY-2684</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/29/1">http://www.openwall.com/lists/oss-security/2022/03/29/1</a></li>
<li><a href="https://github.com/advisories/GHSA-62hc-f8qj-5xc3">https://github.com/advisories/GHSA-62hc-f8qj-5xc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62hc-f8qj-5xc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-03-30T00:00:22.000Z</published>
    </entry>
</feed>