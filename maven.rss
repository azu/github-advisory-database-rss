<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-03T13:04:20.021Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler-common] Apache Dolphin Scheduler has insufficiently protected credentials ]]></title>
        <id>https://github.com/advisories/GHSA-jvc3-wjf6-7c6c</id>
        <link href="https://github.com/advisories/GHSA-jvc3-wjf6-7c6c"/>
        <updated>2022-12-02T22:37:39.000Z</updated>
        <content type="html"><![CDATA[<p>When using tasks to read config files, there is a risk of database password disclosure. We recommend you upgrade to version 2.0.6 or higher.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26885">https://nvd.nist.gov/vuln/detail/CVE-2022-26885</a></li>
<li><a href="https://lists.apache.org/thread/z7084r9cs2r26cszkkgjqpb5bhnxqssp">https://lists.apache.org/thread/z7084r9cs2r26cszkkgjqpb5bhnxqssp</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/releases/tag/2.0.6">https://github.com/apache/dolphinscheduler/releases/tag/2.0.6</a></li>
<li><a href="https://github.com/advisories/GHSA-jvc3-wjf6-7c6c">https://github.com/advisories/GHSA-jvc3-wjf6-7c6c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jvc3-wjf6-7c6c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-24T18:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.testng:testng] TestNG is vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-rc2q-x9mf-w3vf</id>
        <link href="https://github.com/advisories/GHSA-rc2q-x9mf-w3vf"/>
        <updated>2022-12-02T22:31:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in cbeust testng. It has been declared as critical. Affected by this vulnerability is the function testngXmlExistsInJar of the file testng-core/src/main/java/org/testng/JarFileUtils.java of the component XML File Parser. The manipulation leads to path traversal. The attack can be launched remotely. A patch is available in commit 9150736cd2c123a6a3b60e6193630859f9f0422b. It is recommended to apply a patch to fix this issue. The patch was pushed into the master branch but no releases have yet been made with the patch included.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4065">https://nvd.nist.gov/vuln/detail/CVE-2022-4065</a></li>
<li><a href="https://github.com/cbeust/testng/pull/2806">https://github.com/cbeust/testng/pull/2806</a></li>
<li><a href="https://github.com/cbeust/testng/commit/9150736cd2c123a6a3b60e6193630859f9f0422b">https://github.com/cbeust/testng/commit/9150736cd2c123a6a3b60e6193630859f9f0422b</a></li>
<li><a href="https://vuldb.com/?id.214027">https://vuldb.com/?id.214027</a></li>
<li><a href="https://github.com/advisories/GHSA-rc2q-x9mf-w3vf">https://github.com/advisories/GHSA-rc2q-x9mf-w3vf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rc2q-x9mf-w3vf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-19T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.github.samtools:htsjdk] HTSJDK is vulnerable to exposure of resource(s) to the wrong sphere]]></title>
        <id>https://github.com/advisories/GHSA-96vh-4rfp-c42c</id>
        <link href="https://github.com/advisories/GHSA-96vh-4rfp-c42c"/>
        <updated>2022-12-02T22:21:14.000Z</updated>
        <content type="html"><![CDATA[<p>The package com.github.samtools:htsjdk before 3.0.1 are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the createTempDir() function in util/IOUtil.java not checking for the existence of the temporary directory before attempting to create it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21126">https://nvd.nist.gov/vuln/detail/CVE-2022-21126</a></li>
<li><a href="https://github.com/samtools/htsjdk/pull/1617">https://github.com/samtools/htsjdk/pull/1617</a></li>
<li><a href="https://github.com/samtools/htsjdk/commit/4a4024a97ee3e87096df6ad9b22c8260bd527772">https://github.com/samtools/htsjdk/commit/4a4024a97ee3e87096df6ad9b22c8260bd527772</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMGITHUBSAMTOOLS-3149901">https://security.snyk.io/vuln/SNYK-JAVA-COMGITHUBSAMTOOLS-3149901</a></li>
<li><a href="https://github.com/advisories/GHSA-96vh-4rfp-c42c">https://github.com/advisories/GHSA-96vh-4rfp-c42c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96vh-4rfp-c42c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-29T18:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps-global-lib] Untrusted users can modify some Pipeline libraries in Jenkins Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</id>
        <link href="https://github.com/advisories/GHSA-hh6f-6fp5-gfpv"/>
        <updated>2022-12-02T21:35:59.000Z</updated>
        <content type="html"><![CDATA[<p>Multibranch Pipelines by default limit who can change the Pipeline definition from the Jenkinsfile. This is useful for SCMs like GitHub: Jenkins can build content from users without commit access, but who can submit pull requests, without granting them the ability to modify the Pipeline definition. In that case, Jenkins will just use the Pipeline definition in the pull request’s destination branch instead.</p>
<p>In Pipeline: Deprecated Groovy Libraries Plugin 564.ve62a_4eb_b_e039 and earlier the same protection does not apply to uses of the <code>library</code> step with a <code>retriever</code> argument pointing to a library in the current build’s repository and branch (e.g., <code>library(…, retriever: legacySCM(scm))</code>). This allows attackers able to submit pull requests (or equivalent), but not able to commit directly to the configured SCM, to effectively change the Pipeline behavior by changing the library behavior in their pull request, even if the Pipeline is configured to not trust them.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 566.vd0a_a_3334a_555 and 2.21.3 aborts library retrieval if the library would be retrieved from the same repository and revision as the current build, and the revision being built is untrusted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29047">https://nvd.nist.gov/vuln/detail/CVE-2022-29047</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-1951">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-1951</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/97bf32458e60ad252cfe5e7949bacf04459cee64">https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/97bf32458e60ad252cfe5e7949bacf04459cee64</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/bae59b46cb524549d7f346ba73d3161804c97331">https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/bae59b46cb524549d7f346ba73d3161804c97331</a></li>
<li><a href="https://github.com/advisories/GHSA-hh6f-6fp5-gfpv">https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps-global-lib] Untrusted users can modify some Pipeline libraries in Jenkins Pipeline: Deprecated Groovy Libraries Plugin]]></title>
        <id>https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</id>
        <link href="https://github.com/advisories/GHSA-hh6f-6fp5-gfpv"/>
        <updated>2022-12-02T21:35:59.000Z</updated>
        <content type="html"><![CDATA[<p>Multibranch Pipelines by default limit who can change the Pipeline definition from the Jenkinsfile. This is useful for SCMs like GitHub: Jenkins can build content from users without commit access, but who can submit pull requests, without granting them the ability to modify the Pipeline definition. In that case, Jenkins will just use the Pipeline definition in the pull request’s destination branch instead.</p>
<p>In Pipeline: Deprecated Groovy Libraries Plugin 564.ve62a_4eb_b_e039 and earlier the same protection does not apply to uses of the <code>library</code> step with a <code>retriever</code> argument pointing to a library in the current build’s repository and branch (e.g., <code>library(…, retriever: legacySCM(scm))</code>). This allows attackers able to submit pull requests (or equivalent), but not able to commit directly to the configured SCM, to effectively change the Pipeline behavior by changing the library behavior in their pull request, even if the Pipeline is configured to not trust them.</p>
<p>Pipeline: Deprecated Groovy Libraries Plugin 566.vd0a_a_3334a_555 and 2.21.3 aborts library retrieval if the library would be retrieved from the same repository and revision as the current build, and the revision being built is untrusted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29047">https://nvd.nist.gov/vuln/detail/CVE-2022-29047</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-1951">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-1951</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/97bf32458e60ad252cfe5e7949bacf04459cee64">https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/97bf32458e60ad252cfe5e7949bacf04459cee64</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/bae59b46cb524549d7f346ba73d3161804c97331">https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/bae59b46cb524549d7f346ba73d3161804c97331</a></li>
<li><a href="https://github.com/advisories/GHSA-hh6f-6fp5-gfpv">https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh6f-6fp5-gfpv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-parent] Code injection in quarkus dev ui config editor]]></title>
        <id>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</id>
        <link href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9"/>
        <updated>2022-12-02T21:31:54.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in quarkus. This security flaw happens in Dev UI Config Editor which is vulnerable to drive-by localhost attacks leading to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4116">https://nvd.nist.gov/vuln/detail/CVE-2022-4116</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-4116">https://access.redhat.com/security/cve/CVE-2022-4116</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2144748">https://bugzilla.redhat.com/show_bug.cgi?id=2144748</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527">https://github.com/quarkusio/quarkus/discussions/29527</a></li>
<li><a href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9">https://github.com/advisories/GHSA-g56w-cwg4-hxx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T21:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-parent] Code injection in quarkus dev ui config editor]]></title>
        <id>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</id>
        <link href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9"/>
        <updated>2022-12-02T21:31:54.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in quarkus. This security flaw happens in Dev UI Config Editor which is vulnerable to drive-by localhost attacks leading to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4116">https://nvd.nist.gov/vuln/detail/CVE-2022-4116</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-4116">https://access.redhat.com/security/cve/CVE-2022-4116</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2144748">https://bugzilla.redhat.com/show_bug.cgi?id=2144748</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527">https://github.com/quarkusio/quarkus/discussions/29527</a></li>
<li><a href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9">https://github.com/advisories/GHSA-g56w-cwg4-hxx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T21:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:extended-choice-parameter] Stored Cross-site Scripting vulnerabilities in Jenkins Extended Choice Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</id>
        <link href="https://github.com/advisories/GHSA-gp7c-xmmm-7pqr"/>
        <updated>2022-12-02T21:30:00.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Extended Choice Parameter Plugin 346.vd87693c5a_86c and earlier does not escape the name and description of Extended Choice parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29038">https://nvd.nist.gov/vuln/detail/CVE-2022-29038</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-gp7c-xmmm-7pqr">https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gp7c-xmmm-7pqr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.sonyericsson.hudson.plugins.gerrit:gerrit-trigger] Stored Cross-site Scripting vulnerability in Jenkins Gerrit Trigger Plugin]]></title>
        <id>https://github.com/advisories/GHSA-455j-8hg5-8576</id>
        <link href="https://github.com/advisories/GHSA-455j-8hg5-8576"/>
        <updated>2022-12-02T21:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Gerrit Trigger Plugin 2.35.2 and earlier does not escape the name and description of parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of these vulnerabilities requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29039">https://nvd.nist.gov/vuln/detail/CVE-2022-29039</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/gerrit-trigger-plugin/commit/8b1d59645725e6f01057c1cf87170e321f99f6be">https://github.com/jenkinsci/gerrit-trigger-plugin/commit/8b1d59645725e6f01057c1cf87170e321f99f6be</a></li>
<li><a href="https://github.com/advisories/GHSA-455j-8hg5-8576">https://github.com/advisories/GHSA-455j-8hg5-8576</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-455j-8hg5-8576</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jira] Stored Cross-site Scripting vulnerability in Jenkins Jira Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</id>
        <link href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8"/>
        <updated>2022-12-02T21:26:56.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Jira Plugin 3.7 and earlier, except 3.6.1, does not escape the name and description of Jira Issue and Jira Release Version parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29041">https://nvd.nist.gov/vuln/detail/CVE-2022-29041</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e">https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e</a></li>
<li><a href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8">https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jira] Stored Cross-site Scripting vulnerability in Jenkins Jira Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</id>
        <link href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8"/>
        <updated>2022-12-02T21:26:56.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Jira Plugin 3.7 and earlier, except 3.6.1, does not escape the name and description of Jira Issue and Jira Release Version parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29041">https://nvd.nist.gov/vuln/detail/CVE-2022-29041</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e">https://github.com/jenkinsci/jira-plugin/commit/e1eed0d64b4e32ce84946d632dab76c3f0ff6c4e</a></li>
<li><a href="https://github.com/advisories/GHSA-m3p3-2gp6-ghq8">https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3p3-2gp6-ghq8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jobgenerator] Stored Cross-site Scripting vulnerability in Jenkins Job Generator Plugin]]></title>
        <id>https://github.com/advisories/GHSA-f3jq-9c79-j65m</id>
        <link href="https://github.com/advisories/GHSA-f3jq-9c79-j65m"/>
        <updated>2022-12-02T21:23:18.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Job Generator Plugin 1.22 and earlier does not escape the name and description of Generator Parameter and Generator Choice parameters on Job Generator jobs' Build With Parameters views, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29042">https://nvd.nist.gov/vuln/detail/CVE-2022-29042</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-f3jq-9c79-j65m">https://github.com/advisories/GHSA-f3jq-9c79-j65m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3jq-9c79-j65m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:mask-passwords] Stored Cross-site Scripting in Jenkins Mask Passwords Plugin]]></title>
        <id>https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</id>
        <link href="https://github.com/advisories/GHSA-pjm3-f4vh-3h3h"/>
        <updated>2022-12-02T21:21:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Mask Passwords Plugin 3.0 and earlier does not escape the name and description of Non-Stored Password parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29043">https://nvd.nist.gov/vuln/detail/CVE-2022-29043</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/jenkinsci/mask-passwords-plugin/commit/55022b3f1935dc005c4075161c176b29bce7b849">https://github.com/jenkinsci/mask-passwords-plugin/commit/55022b3f1935dc005c4075161c176b29bce7b849</a></li>
<li><a href="https://github.com/advisories/GHSA-pjm3-f4vh-3h3h">https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pjm3-f4vh-3h3h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins.workflow:workflow-cps] Sandbox bypass vulnerability through implicitly allowlisted platform Groovy files in Jenkins Pipeline: Groovy Plugin]]></title>
        <id>https://github.com/advisories/GHSA-2xvx-rw9p-xgfc</id>
        <link href="https://github.com/advisories/GHSA-2xvx-rw9p-xgfc"/>
        <updated>2022-12-02T21:10:56.000Z</updated>
        <content type="html"><![CDATA[<p>Pipeline: Groovy Plugin allows pipelines to load Groovy source files. This is intended to be used to allow Global Shared Libraries to execute without sandbox protection.</p>
<p>In Pipeline: Groovy Plugin 2689.v434009a_31b_f1 and earlier, any Groovy source files bundled with Jenkins core and plugins could be loaded this way and their methods executed. If a suitable Groovy source file is available on the classpath of Jenkins, sandbox protections can be bypassed.</p>
<p>The Jenkins security team has been unable to identify any Groovy source files in Jenkins core or plugins that would allow attackers to execute dangerous code. While the severity of this issue is declared as High due to the potential impact, successful exploitation is considered very unlikely.</p>
<p>Pipeline: Groovy Plugin 2692.v76b_089ccd026 restricts which Groovy source files can be loaded in Pipelines.</p>
<p>Groovy source files in public plugins intended to be executed in sandboxed pipelines have been identified and added to an allowlist. The new extension point <code>org.jenkinsci.plugins.workflow.cps.GroovySourceFileAllowlist</code> allows plugins to add specific Groovy source files to that allowlist if necessary, but creation of plugin-specific Pipeline DSLs is strongly discouraged.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30945">https://nvd.nist.gov/vuln/detail/CVE-2022-30945</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-359">https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-359</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/05/17/8">http://www.openwall.com/lists/oss-security/2022/05/17/8</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-plugin/commit/76a7681702f42d65f77bbaa5463f146876ea62db">https://github.com/jenkinsci/workflow-cps-plugin/commit/76a7681702f42d65f77bbaa5463f146876ea62db</a></li>
<li><a href="https://github.com/jenkinsci/workflow-cps-plugin/commit/76b089ccd026b68012b0deb30c217395f7ca7dc2">https://github.com/jenkinsci/workflow-cps-plugin/commit/76b089ccd026b68012b0deb30c217395f7ca7dc2</a></li>
<li><a href="https://github.com/advisories/GHSA-2xvx-rw9p-xgfc">https://github.com/advisories/GHSA-2xvx-rw9p-xgfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2xvx-rw9p-xgfc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-18T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] CSRF vulnerability in Jenkins Script Security Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qwgx-mrv5-87j8</id>
        <link href="https://github.com/advisories/GHSA-qwgx-mrv5-87j8"/>
        <updated>2022-12-02T21:08:27.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery (CSRF) vulnerability in Jenkins Script Security Plugin 1158.v7c1b_73a_69a_08 and earlier allows attackers to have Jenkins send an HTTP request to an attacker-specified webserver.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30946">https://nvd.nist.gov/vuln/detail/CVE-2022-30946</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2116">https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2116</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/05/17/8">http://www.openwall.com/lists/oss-security/2022/05/17/8</a></li>
<li><a href="https://github.com/jenkinsci/script-security-plugin/commit/35f6a0b8207ed3a32a85f27c1312da6cd738eeaa">https://github.com/jenkinsci/script-security-plugin/commit/35f6a0b8207ed3a32a85f27c1312da6cd738eeaa</a></li>
<li><a href="https://github.com/advisories/GHSA-qwgx-mrv5-87j8">https://github.com/advisories/GHSA-qwgx-mrv5-87j8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwgx-mrv5-87j8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-18T00:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:ssh] Missing Authorization in Jenkins SSH plugin]]></title>
        <id>https://github.com/advisories/GHSA-7h2j-h5xp-h3gh</id>
        <link href="https://github.com/advisories/GHSA-7h2j-h5xp-h3gh"/>
        <updated>2022-12-02T20:34:16.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins SSH Plugin 2.6.1 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified SSH server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30959">https://nvd.nist.gov/vuln/detail/CVE-2022-30959</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2093">https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2093</a></li>
<li><a href="https://github.com/advisories/GHSA-7h2j-h5xp-h3gh">https://github.com/advisories/GHSA-7h2j-h5xp-h3gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h2j-h5xp-h3gh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-18T00:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds-simple] Stored Cross-site Scripting vulnerabilities in Jenkins promoted Builds (Simple) plugin providing additional parameter types]]></title>
        <id>https://github.com/advisories/GHSA-7j66-wvhr-m83x</id>
        <link href="https://github.com/advisories/GHSA-7j66-wvhr-m83x"/>
        <updated>2022-12-02T20:14:18.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Promoted Builds (Simple) Plugin 1.9 and earlier does not escape the name and description of Promotion Level parameters on views displaying parameters. This results in stored cross-site scripting (XSS) vulnerabilities exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix. Additionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see <a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">SECURITY-2617 in the 2022-04-12 security advisory for a list</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30965">https://nvd.nist.gov/vuln/detail/CVE-2022-30965</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2717">https://www.jenkins.io/security/advisory/2022-05-17/#SECURITY-2717</a></li>
<li><a href="https://github.com/advisories/GHSA-7j66-wvhr-m83x">https://github.com/advisories/GHSA-7j66-wvhr-m83x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7j66-wvhr-m83x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-18T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:embotics-vcommander] Jenkins Snow Commander Plugin 2.0 vulnerable to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-fhfh-6cjg-57rg</id>
        <link href="https://github.com/advisories/GHSA-fhfh-6cjg-57rg"/>
        <updated>2022-12-02T20:00:05.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery (CSRF) vulnerability in Jenkins Snow Commander Plugin 2.0 and earlier allows attackers to connect to an attacker-specified webserver using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25192">https://nvd.nist.gov/vuln/detail/CVE-2022-25192</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2536">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2536</a></li>
<li><a href="https://github.com/jenkinsci/snowsoftware-commander-plugin/commit/4fb4e68e8e7be3168721a06ad08b263252c276f1">https://github.com/jenkinsci/snowsoftware-commander-plugin/commit/4fb4e68e8e7be3168721a06ad08b263252c276f1</a></li>
<li><a href="https://github.com/advisories/GHSA-fhfh-6cjg-57rg">https://github.com/advisories/GHSA-fhfh-6cjg-57rg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhfh-6cjg-57rg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds] Stored Cross-site Scripting vulnerability in Jenkins Promoted Builds Plugin]]></title>
        <id>https://github.com/advisories/GHSA-v98r-gjgc-m9pf</id>
        <link href="https://github.com/advisories/GHSA-v98r-gjgc-m9pf"/>
        <updated>2022-12-01T23:59:35.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins promoted builds Plugin 873.v6149db_d64130 and earlier, except 3.10.1, does not escape the name and description of Promoted Build parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of these vulnerabilities requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29045">https://nvd.nist.gov/vuln/detail/CVE-2022-29045</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-v98r-gjgc-m9pf">https://github.com/advisories/GHSA-v98r-gjgc-m9pf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v98r-gjgc-m9pf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] Stored Cross-site Scripting vulnerability in Jenkins Subversion Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wpr6-qvcq-8269</id>
        <link href="https://github.com/advisories/GHSA-wpr6-qvcq-8269"/>
        <updated>2022-12-01T23:57:36.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Subversion Plugin 2.15.3 and earlier does not escape the name and description of List Subversion tags (and more) parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29046">https://nvd.nist.gov/vuln/detail/CVE-2022-29046</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://support.apple.com/kb/HT213345">https://support.apple.com/kb/HT213345</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/Jul/18">http://seclists.org/fulldisclosure/2022/Jul/18</a></li>
<li><a href="https://github.com/advisories/GHSA-wpr6-qvcq-8269">https://github.com/advisories/GHSA-wpr6-qvcq-8269</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpr6-qvcq-8269</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
</feed>