<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-09-15T04:01:26.525Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks]]></title>
        <id>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</id>
        <link href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"/>
        <updated>2024-09-13T19:32:24.000Z</updated>
        <content type="html"><![CDATA[<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>
<p>Specifically, an application is vulnerable when both of the following are true:</p>
<ul>
<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>
<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>
</ul>
<p>However, malicious requests are blocked and rejected when any of the following is true:</p>
<ul>
<li>the  Spring Security HTTP Firewall <a href="https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>
<li>the application runs on Tomcat or Jetty</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38816">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>
<li><a href="https://spring.io/security/cve-2024-38816">https://spring.io/security/cve-2024-38816</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>
<li><a href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-13T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks]]></title>
        <id>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</id>
        <link href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"/>
        <updated>2024-09-13T19:32:24.000Z</updated>
        <content type="html"><![CDATA[<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>
<p>Specifically, an application is vulnerable when both of the following are true:</p>
<ul>
<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>
<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>
</ul>
<p>However, malicious requests are blocked and rejected when any of the following is true:</p>
<ul>
<li>the  Spring Security HTTP Firewall <a href="https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>
<li>the application runs on Tomcat or Jetty</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38816">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>
<li><a href="https://spring.io/security/cve-2024-38816">https://spring.io/security/cve-2024-38816</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>
<li><a href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-13T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks]]></title>
        <id>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</id>
        <link href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"/>
        <updated>2024-09-13T19:32:24.000Z</updated>
        <content type="html"><![CDATA[<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>
<p>Specifically, an application is vulnerable when both of the following are true:</p>
<ul>
<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>
<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>
</ul>
<p>However, malicious requests are blocked and rejected when any of the following is true:</p>
<ul>
<li>the  Spring Security HTTP Firewall <a href="https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>
<li>the application runs on Tomcat or Jetty</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38816">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>
<li><a href="https://spring.io/security/cve-2024-38816">https://spring.io/security/cve-2024-38816</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>
<li><a href="https://github.com/advisories/GHSA-cx7f-g6mp-7hqm">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-13T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[software.amazon.awssdk.iotdevicesdk:aws-iot-device-sdk] Improper certificate management in AWS IoT Device SDK v2]]></title>
        <id>https://github.com/advisories/GHSA-94jq-q5v2-76wj</id>
        <link href="https://github.com/advisories/GHSA-94jq-q5v2-76wj"/>
        <updated>2024-09-12T21:14:09.000Z</updated>
        <content type="html"><![CDATA[<p>Connections initialized by the AWS IoT Device SDK v2 for Java (versions prior to 1.3.3), Python (versions prior to 1.5.18), C++ (versions prior to 1.12.7) and Node.js (versions prior to 1.5.1) did not verify server certificate hostname during TLS handshake when overriding Certificate Authorities (CA) in their trust stores on Windows. This issue has been addressed in aws-c-io submodule versions 0.9.13 onward. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.3.3 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.5.18 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on Microsoft Windows.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40828">https://nvd.nist.gov/vuln/detail/CVE-2021-40828</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2/commit/67950ad2a02f2f9355c310b69dc9226b017f32f2">https://github.com/aws/aws-iot-device-sdk-java-v2/commit/67950ad2a02f2f9355c310b69dc9226b017f32f2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2/commit/4be41394f1aee979e6f4b012fcb01eecabd0c08d">https://github.com/aws/aws-iot-device-sdk-js-v2/commit/4be41394f1aee979e6f4b012fcb01eecabd0c08d</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2/commit/fd4c0ba04b35eab9e20c635af5548fcc5a92d8be">https://github.com/aws/aws-iot-device-sdk-python-v2/commit/fd4c0ba04b35eab9e20c635af5548fcc5a92d8be</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-cpp-v2">https://github.com/aws/aws-iot-device-sdk-cpp-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2">https://github.com/aws/aws-iot-device-sdk-java-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2">https://github.com/aws/aws-iot-device-sdk-js-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2">https://github.com/aws/aws-iot-device-sdk-python-v2</a></li>
<li><a href="https://github.com/advisories/GHSA-94jq-q5v2-76wj">https://github.com/advisories/GHSA-94jq-q5v2-76wj</a></li>
<li><a href="https://github.com/awslabs/aws-c-io">https://github.com/awslabs/aws-c-io</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-861.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-861.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94jq-q5v2-76wj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-24T21:02:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[software.amazon.awssdk.iotdevicesdk:aws-iot-device-sdk] Improper certificate management in AWS IoT Device SDK v2]]></title>
        <id>https://github.com/advisories/GHSA-c4rh-4376-gff4</id>
        <link href="https://github.com/advisories/GHSA-c4rh-4376-gff4"/>
        <updated>2024-09-12T20:53:26.000Z</updated>
        <content type="html"><![CDATA[<p>The AWS IoT Device SDK v2 for Java, Python, C++ and Node.js appends a user supplied Certificate Authority (CA) to the root CAs instead of overriding it on Unix systems. TLS handshakes will thus succeed if the peer can be verified either from the user-supplied CA or the system’s default trust-store. Attackers with access to a host’s trust stores or are able to compromise a certificate authority already in the host's trust store (note: the attacker must also be able to spoof DNS in this case) may be able to use this issue to bypass CA pinning. An attacker could then spoof the MQTT broker, and either drop traffic and/or respond with the attacker's data, but they would not be able to forward this data on to the MQTT broker because the attacker would still need the user's private keys to authenticate against the MQTT broker. The 'aws_tls_ctx_options_override_default_trust_store_*' function within the aws-c-io submodule has been updated to override the default trust store. This corrects this issue. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.5.0 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.6.1 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on Linux/Unix. Amazon Web Services AWS-C-IO 0.10.4 on Linux/Unix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40830">https://nvd.nist.gov/vuln/detail/CVE-2021-40830</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2/commit/67950ad2a02f2f9355c310b69dc9226b017f32f2">https://github.com/aws/aws-iot-device-sdk-java-v2/commit/67950ad2a02f2f9355c310b69dc9226b017f32f2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2/commit/53a36e3ac203291494120604d416b6de59177cac">https://github.com/aws/aws-iot-device-sdk-js-v2/commit/53a36e3ac203291494120604d416b6de59177cac</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2/commit/0450ce68add7e3d05c6d781ecdac953c299c053a">https://github.com/aws/aws-iot-device-sdk-python-v2/commit/0450ce68add7e3d05c6d781ecdac953c299c053a</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-cpp-v2">https://github.com/aws/aws-iot-device-sdk-cpp-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2">https://github.com/aws/aws-iot-device-sdk-java-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2">https://github.com/aws/aws-iot-device-sdk-js-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2">https://github.com/aws/aws-iot-device-sdk-python-v2</a></li>
<li><a href="https://github.com/advisories/GHSA-c4rh-4376-gff4">https://github.com/advisories/GHSA-c4rh-4376-gff4</a></li>
<li><a href="https://github.com/awslabs/aws-c-io">https://github.com/awslabs/aws-c-io</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-863.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-863.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c4rh-4376-gff4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-24T21:12:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[software.amazon.awssdk.iotdevicesdk:aws-iot-device-sdk] Improper certificate management in AWS IoT Device SDK v2]]></title>
        <id>https://github.com/advisories/GHSA-j3f7-7rmc-6wqj</id>
        <link href="https://github.com/advisories/GHSA-j3f7-7rmc-6wqj"/>
        <updated>2024-09-12T20:52:09.000Z</updated>
        <content type="html"><![CDATA[<p>The AWS IoT Device SDK v2 for Java, Python, C++ and Node.js appends a user supplied Certificate Authority (CA) to the root CAs instead of overriding it on macOS systems. Additionally, SNI validation is also not enabled when the CA has been "overridden". TLS handshakes will thus succeed if the peer can be verified either from the user-supplied CA or the system’s default trust-store. Attackers with access to a host’s trust stores or are able to compromise a certificate authority already in the host's trust store (note: the attacker must also be able to spoof DNS in this case) may be able to use this issue to bypass CA pinning. An attacker could then spoof the MQTT broker, and either drop traffic and/or respond with the attacker's data, but they would not be able to forward this data on to the MQTT broker because the attacker would still need the user's private keys to authenticate against the MQTT broker. The <code>aws_tls_ctx_options_override_default_trust_store_*</code> function within the aws-c-io submodule has been updated to address this behavior. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.5.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.7.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.14.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.6.0 on macOS. Amazon Web Services AWS-C-IO 0.10.7 on macOS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40831">https://nvd.nist.gov/vuln/detail/CVE-2021-40831</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2/commit/46375e9b1bfb34109b9ff3b1eff9c770f9daa186">https://github.com/aws/aws-iot-device-sdk-java-v2/commit/46375e9b1bfb34109b9ff3b1eff9c770f9daa186</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2/commit/22f1989f5bdb0bdd9c912a5a2d255ee6c0854f68">https://github.com/aws/aws-iot-device-sdk-js-v2/commit/22f1989f5bdb0bdd9c912a5a2d255ee6c0854f68</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2/commit/5aef82573202309063eb540b72cee0e565f85a2d">https://github.com/aws/aws-iot-device-sdk-python-v2/commit/5aef82573202309063eb540b72cee0e565f85a2d</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-cpp-v2">https://github.com/aws/aws-iot-device-sdk-cpp-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2">https://github.com/aws/aws-iot-device-sdk-java-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2">https://github.com/aws/aws-iot-device-sdk-js-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2">https://github.com/aws/aws-iot-device-sdk-python-v2</a></li>
<li><a href="https://github.com/advisories/GHSA-j3f7-7rmc-6wqj">https://github.com/advisories/GHSA-j3f7-7rmc-6wqj</a></li>
<li><a href="https://github.com/awslabs/aws-c-io">https://github.com/awslabs/aws-c-io</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-864.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-864.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3f7-7rmc-6wqj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-24T20:35:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[software.amazon.awssdk.iotdevicesdk:aws-iot-device-sdk] Improper certificate management in AWS IoT Device SDK v2]]></title>
        <id>https://github.com/advisories/GHSA-743r-5g92-5vgf</id>
        <link href="https://github.com/advisories/GHSA-743r-5g92-5vgf"/>
        <updated>2024-09-12T20:48:36.000Z</updated>
        <content type="html"><![CDATA[<p>Connections initialized by the AWS IoT Device SDK v2 for Java (versions prior to 1.4.2), Python (versions prior to 1.6.1), C++ (versions prior to 1.12.7) and Node.js (versions prior to 1.5.3) did not verify server certificate hostname during TLS handshake when overriding Certificate Authorities (CA) in their trust stores on MacOS. This issue has been addressed in aws-c-io submodule versions 0.10.5 onward. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.4.2 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.6.1 on macOS. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on macOS. Amazon Web Services AWS-C-IO 0.10.4 on macOS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40829">https://nvd.nist.gov/vuln/detail/CVE-2021-40829</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2/commits/v1.4.2">https://github.com/aws/aws-iot-device-sdk-java-v2/commits/v1.4.2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-cpp-v2">https://github.com/aws/aws-iot-device-sdk-cpp-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-java-v2">https://github.com/aws/aws-iot-device-sdk-java-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-js-v2">https://github.com/aws/aws-iot-device-sdk-js-v2</a></li>
<li><a href="https://github.com/aws/aws-iot-device-sdk-python-v2">https://github.com/aws/aws-iot-device-sdk-python-v2</a></li>
<li><a href="https://github.com/advisories/GHSA-743r-5g92-5vgf">https://github.com/advisories/GHSA-743r-5g92-5vgf</a></li>
<li><a href="https://github.com/awslabs/aws-c-io">https://github.com/awslabs/aws-c-io</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-862.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/awsiotsdk/PYSEC-2021-862.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-743r-5g92-5vgf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-24T21:11:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.iotdb:tsfile] Apache IoTDB subject to ReDOS with Java 8]]></title>
        <id>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</id>
        <link href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7"/>
        <updated>2024-09-12T20:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>Apache IoTDB versions 0.12.2 through 0.12.6, and 0.13.0 through 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. This issue is patched in 0.13.3. Users should upgrade or use a later version of Java to avoid it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43766">https://nvd.nist.gov/vuln/detail/CVE-2022-43766</a></li>
<li><a href="https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn">https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7">https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T19:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.iotdb:iotdb-server] Apache IoTDB subject to ReDOS with Java 8]]></title>
        <id>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</id>
        <link href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7"/>
        <updated>2024-09-12T20:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>Apache IoTDB versions 0.12.2 through 0.12.6, and 0.13.0 through 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. This issue is patched in 0.13.3. Users should upgrade or use a later version of Java to avoid it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43766">https://nvd.nist.gov/vuln/detail/CVE-2022-43766</a></li>
<li><a href="https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn">https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7">https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T19:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.iotdb:flink-tsfile-connector] Apache IoTDB subject to ReDOS with Java 8]]></title>
        <id>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</id>
        <link href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7"/>
        <updated>2024-09-12T20:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>Apache IoTDB versions 0.12.2 through 0.12.6, and 0.13.0 through 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. This issue is patched in 0.13.3. Users should upgrade or use a later version of Java to avoid it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43766">https://nvd.nist.gov/vuln/detail/CVE-2022-43766</a></li>
<li><a href="https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn">https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7">https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T19:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler-api] Incorrect Default Permissions in Apache DolphinScheduler]]></title>
        <id>https://github.com/advisories/GHSA-qhh5-9738-g9mx</id>
        <link href="https://github.com/advisories/GHSA-qhh5-9738-g9mx"/>
        <updated>2024-09-12T20:17:18.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of Apache DolphinScheduler prior to 1.3.2 allowed an ordinary user under any tenant to override another users password through the API interface.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13922">https://nvd.nist.gov/vuln/detail/CVE-2020-13922</a></li>
<li><a href="https://github.com/apache/incubator-dolphinscheduler/commit/b8a9e2e00f2f207ae60c913a7173b59405ff95f1">https://github.com/apache/incubator-dolphinscheduler/commit/b8a9e2e00f2f207ae60c913a7173b59405ff95f1</a></li>
<li><a href="https://www.mail-archive.com/announce@apache.org/msg06076.html">https://www.mail-archive.com/announce@apache.org/msg06076.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-dolphinscheduler/PYSEC-2021-876.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-dolphinscheduler/PYSEC-2021-876.yaml</a></li>
<li><a href="https://www.mail-archive.com/announce%40apache.org/msg06076.html">https://www.mail-archive.com/announce%40apache.org/msg06076.html</a></li>
<li><a href="https://github.com/advisories/GHSA-qhh5-9738-g9mx">https://github.com/advisories/GHSA-qhh5-9738-g9mx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qhh5-9738-g9mx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-09T22:26:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.iotdb:iotdb-grafana-connector] Apache IoTDB Grafana Connector vulnerable to Improper Authentication]]></title>
        <id>https://github.com/advisories/GHSA-pvjv-386f-c8wh</id>
        <link href="https://github.com/advisories/GHSA-pvjv-386f-c8wh"/>
        <updated>2024-09-12T19:13:00.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Authentication vulnerability in Apache Software Foundation Apache IoTDB. This issue affects Apache IoTDB Grafana Connector from 0.13.0 through 0.13.3.</p>
<p>Attackers could log in without authorization. This is fixed in 0.13.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-24831">https://nvd.nist.gov/vuln/detail/CVE-2023-24831</a></li>
<li><a href="https://lists.apache.org/thread/3dgvzgstycf8b5hyf4z3n7cqdhcyln3l">https://lists.apache.org/thread/3dgvzgstycf8b5hyf4z3n7cqdhcyln3l</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2023-7.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2023-7.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pvjv-386f-c8wh">https://github.com/advisories/GHSA-pvjv-386f-c8wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvjv-386f-c8wh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-04-17T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jitsi:dnssecjava] DNSJava affected by KeyTrap - NSEC3 closest encloser proof can exhaust CPU resources]]></title>
        <id>https://github.com/advisories/GHSA-mmwx-rj87-vfgr</id>
        <link href="https://github.com/advisories/GHSA-mmwx-rj87-vfgr"/>
        <updated>2024-09-12T17:35:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to dnsjava v3.6.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability.</p>
<h3 id="references">References</h3>
<p><a href="https://www.athene-center.de/en/keytrap">https://www.athene-center.de/en/keytrap</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116">https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50868">https://nvd.nist.gov/vuln/detail/CVE-2023-50868</a></li>
<li><a href="https://github.com/advisories/GHSA-pv4h-p8jr-6cv2">https://github.com/advisories/GHSA-pv4h-p8jr-6cv2</a></li>
<li><a href="https://github.com/advisories/GHSA-mmwx-rj87-vfgr">https://github.com/advisories/GHSA-mmwx-rj87-vfgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmwx-rj87-vfgr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T14:46:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dnsjava:dnsjava] DNSJava affected by KeyTrap - NSEC3 closest encloser proof can exhaust CPU resources]]></title>
        <id>https://github.com/advisories/GHSA-mmwx-rj87-vfgr</id>
        <link href="https://github.com/advisories/GHSA-mmwx-rj87-vfgr"/>
        <updated>2024-09-12T17:35:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to dnsjava v3.6.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability.</p>
<h3 id="references">References</h3>
<p><a href="https://www.athene-center.de/en/keytrap">https://www.athene-center.de/en/keytrap</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116">https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50868">https://nvd.nist.gov/vuln/detail/CVE-2023-50868</a></li>
<li><a href="https://github.com/advisories/GHSA-pv4h-p8jr-6cv2">https://github.com/advisories/GHSA-pv4h-p8jr-6cv2</a></li>
<li><a href="https://github.com/advisories/GHSA-mmwx-rj87-vfgr">https://github.com/advisories/GHSA-mmwx-rj87-vfgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmwx-rj87-vfgr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T14:46:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jitsi:dnssecjava] DNSJava vulnerable to KeyTrap - Denial-of-Service Algorithmic Complexity Attacks]]></title>
        <id>https://github.com/advisories/GHSA-crjg-w57m-rqqf</id>
        <link href="https://github.com/advisories/GHSA-crjg-w57m-rqqf"/>
        <updated>2024-09-11T21:02:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to dnsjava v3.6.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability. </p>
<h3 id="references">References</h3>
<p><a href="https://www.athene-center.de/en/keytrap">https://www.athene-center.de/en/keytrap</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78">https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf">https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50387">https://nvd.nist.gov/vuln/detail/CVE-2023-50387</a></li>
<li><a href="https://github.com/advisories/GHSA-8459-gg55-8qjj">https://github.com/advisories/GHSA-8459-gg55-8qjj</a></li>
<li><a href="https://github.com/advisories/GHSA-crjg-w57m-rqqf">https://github.com/advisories/GHSA-crjg-w57m-rqqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crjg-w57m-rqqf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T17:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dnsjava:dnsjava] DNSJava vulnerable to KeyTrap - Denial-of-Service Algorithmic Complexity Attacks]]></title>
        <id>https://github.com/advisories/GHSA-crjg-w57m-rqqf</id>
        <link href="https://github.com/advisories/GHSA-crjg-w57m-rqqf"/>
        <updated>2024-09-11T21:02:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to dnsjava v3.6.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability. </p>
<h3 id="references">References</h3>
<p><a href="https://www.athene-center.de/en/keytrap">https://www.athene-center.de/en/keytrap</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78">https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78</a></li>
<li><a href="https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf">https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50387">https://nvd.nist.gov/vuln/detail/CVE-2023-50387</a></li>
<li><a href="https://github.com/advisories/GHSA-8459-gg55-8qjj">https://github.com/advisories/GHSA-8459-gg55-8qjj</a></li>
<li><a href="https://github.com/advisories/GHSA-crjg-w57m-rqqf">https://github.com/advisories/GHSA-crjg-w57m-rqqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crjg-w57m-rqqf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T17:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.edc:transfer-data-plane] Eclipse Dataspace Components's ConsumerPullTransferTokenValidationApiController doesn't check for token validit]]></title>
        <id>https://github.com/advisories/GHSA-8259-2x72-2gvc</id>
        <link href="https://github.com/advisories/GHSA-8259-2x72-2gvc"/>
        <updated>2024-09-11T17:31:07.000Z</updated>
        <content type="html"><![CDATA[<p>In Eclipse Dataspace Components, from version 0.5.0 and before version 0.9.0, the ConsumerPullTransferTokenValidationApiController does not check for token validity (expiry, not-before, issuance date), which can allow an attacker to bypass the check for token expiration. The issue requires to have a dataplane configured to support http proxy consumer pull AND include the module "transfer-data-plane". The affected code was marked deprecated from the version 0.6.0 in favour of Dataplane Signaling. In 0.9.0 the vulnerable code has been removed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8642">https://nvd.nist.gov/vuln/detail/CVE-2024-8642</a></li>
<li><a href="https://github.com/eclipse-edc/Connector/commit/04899e91dcdb4a407db4eb7af3e7b6ff9a9e9ad6">https://github.com/eclipse-edc/Connector/commit/04899e91dcdb4a407db4eb7af3e7b6ff9a9e9ad6</a></li>
<li><a href="https://github.com/eclipse-edc/Connector/releases/tag/v0.9.0">https://github.com/eclipse-edc/Connector/releases/tag/v0.9.0</a></li>
<li><a href="https://gitlab.eclipse.org/security/cve-assignement/-/issues/28">https://gitlab.eclipse.org/security/cve-assignement/-/issues/28</a></li>
<li><a href="https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/234">https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/234</a></li>
<li><a href="https://github.com/eclipse-edc/Connector/blob/bcb2e42aee82ce1863be3dcbdab29919d39a0e97/extensions/control-plane/transfer/transfer-data-plane/src/main/java/org/eclipse/edc/connector/controlplane/transfer/dataplane/api/ConsumerPullTransferTokenValidationApiController.java">https://github.com/eclipse-edc/Connector/blob/bcb2e42aee82ce1863be3dcbdab29919d39a0e97/extensions/control-plane/transfer/transfer-data-plane/src/main/java/org/eclipse/edc/connector/controlplane/transfer/dataplane/api/ConsumerPullTransferTokenValidationApiController.java</a></li>
<li><a href="https://github.com/advisories/GHSA-8259-2x72-2gvc">https://github.com/advisories/GHSA-8259-2x72-2gvc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8259-2x72-2gvc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-11T15:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.glassfish.main.web:web-core] Eclipse Glassfish URL redirection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7gq2-vwq9-w8vw</id>
        <link href="https://github.com/advisories/GHSA-7gq2-vwq9-w8vw"/>
        <updated>2024-09-11T17:30:49.000Z</updated>
        <content type="html"><![CDATA[<p>In Eclipse Glassfish versions prior to 7.0.10, a URL redirection vulnerability to untrusted sites existed.
This vulnerability is caused by the vulnerability (CVE-2023-41080) in the Apache code included in GlassFish.
This vulnerability only affects applications that are explicitly deployed to the root context ('/').</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8646">https://nvd.nist.gov/vuln/detail/CVE-2024-8646</a></li>
<li><a href="https://github.com/eclipse-ee4j/glassfish/pull/24655">https://github.com/eclipse-ee4j/glassfish/pull/24655</a></li>
<li><a href="https://gitlab.eclipse.org/security/cve-assignement/-/issues/34">https://gitlab.eclipse.org/security/cve-assignement/-/issues/34</a></li>
<li><a href="https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/163">https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/163</a></li>
<li><a href="https://glassfish.org/download">https://glassfish.org/download</a></li>
<li><a href="https://github.com/eclipse-ee4j/glassfish/commit/06b80012761d07f6e40e40aa6b0133465b0bd145">https://github.com/eclipse-ee4j/glassfish/commit/06b80012761d07f6e40e40aa6b0133465b0bd145</a></li>
<li><a href="https://github.com/advisories/GHSA-7gq2-vwq9-w8vw">https://github.com/advisories/GHSA-7gq2-vwq9-w8vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gq2-vwq9-w8vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-11T15:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.keycloak:keycloak-core] Keycloak Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w97f-w3hq-36g2</id>
        <link href="https://github.com/advisories/GHSA-w97f-w3hq-36g2"/>
        <updated>2024-09-10T19:41:57.000Z</updated>
        <content type="html"><![CDATA[<p>A denial of service vulnerability was found in keycloak where the amount of attributes per object is not limited,an attacker by sending repeated HTTP requests could cause a resource exhaustion when the application send back rows with long attribute values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6841">https://nvd.nist.gov/vuln/detail/CVE-2023-6841</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-6841">https://access.redhat.com/security/cve/CVE-2023-6841</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2254714">https://bugzilla.redhat.com/show_bug.cgi?id=2254714</a></li>
<li><a href="https://github.com/advisories/GHSA-w97f-w3hq-36g2">https://github.com/advisories/GHSA-w97f-w3hq-36g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w97f-w3hq-36g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-10T18:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.jetty:jetty-xml] Eclipse Jetty XmlParser allows arbitrary DOCTYPE declarations]]></title>
        <id>https://github.com/advisories/GHSA-58qw-p7qm-5rvh</id>
        <link href="https://github.com/advisories/GHSA-58qw-p7qm-5rvh"/>
        <updated>2024-09-10T17:16:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="from-the-reporter">From the reporter</h3>
<blockquote>
<p><code>XmlParser</code> is vulnerable to XML external entity (XXE) vulnerability.
 XmlParser is being used when parsing Jetty’s xml configuration files. An attacker might exploit
this vulnerability in order to achieve SSRF or cause a denial of service.
One possible scenario is importing a (remote) malicious WAR into a Jetty’s server, while the
WAR includes a malicious web.xml.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>There are no circumstances in a normally deployed Jetty server where potentially hostile XML is given to the XmlParser class without the attacker already having arbitrary access to the server. I.e. in order to exploit <code>XmlParser</code> the attacker would already have the ability to deploy and execute hostile code.  Specifically, Jetty has no protection against malicious web application and potentially hostile web applications should only be run on an isolated virtualisation.  </p>
<p>Thus this is not considered a vulnerability of the Jetty server itself, as any such usage of the jetty XmlParser is equally vulnerable as a direct usage of the JVM supplied SAX parser.  No CVE will be allocated to this advisory.</p>
<p>However, any direct usage of the <code>XmlParser</code> class by an application may be vulnerable.  The impact would greatly depend on how the application uses <code>XmlParser</code>, but it could be a denial of service due to large entity expansion, or possibly the revealing local files if the XML results are accessible remotely.</p>
<h3 id="patches">Patches</h3>
<p>Ability to configure the SAXParserFactory to fit the needs of your particular XML parser implementation have been merged as part of PR #10067</p>
<h3 id="workarounds">Workarounds</h3>
<p>Don't use <code>XmlParser</code> to parse data from users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eclipse/jetty.project/security/advisories/GHSA-58qw-p7qm-5rvh">https://github.com/eclipse/jetty.project/security/advisories/GHSA-58qw-p7qm-5rvh</a></li>
<li><a href="https://github.com/eclipse/jetty.project/pull/10067">https://github.com/eclipse/jetty.project/pull/10067</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0">https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0</a></li>
<li><a href="https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823</a></li>
<li><a href="https://github.com/advisories/GHSA-58qw-p7qm-5rvh">https://github.com/advisories/GHSA-58qw-p7qm-5rvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-58qw-p7qm-5rvh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-10T21:52:39.000Z</published>
    </entry>
</feed>