<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-12-19T16:01:24.328Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:hp-application-automation-tools-plugin] Missing permission checks in Micro Focus Application Automation Tools Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</id>
        <link href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4"/>
        <updated>2023-12-19T14:58:49.000Z</updated>
        <content type="html"><![CDATA[<p>Micro Focus Application Automation Tools Plugin 6.7 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to attacker-specified URLs using attacker-specified username and password.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Micro Focus Application Automation Tools Plugin 6.8 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22513">https://nvd.nist.gov/vuln/detail/CVE-2021-22513</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132">https://www.jenkins.io/security/advisory/2021-04-07/#SECURITY-2132</a></li>
<li><a href="https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/497a143d9a95e9c937501ca329fe0dae22a0d9cd">https://github.com/jenkinsci/hpe-application-automation-tools-plugin/commit/497a143d9a95e9c937501ca329fe0dae22a0d9cd</a></li>
<li><a href="https://github.com/advisories/GHSA-7qp2-rgxr-29q4">https://github.com/advisories/GHSA-7qp2-rgxr-29q4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qp2-rgxr-29q4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:46:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.docker:docker-plugin] Jenkins Docker Plugin contains Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-m6gf-p26p-mx2w</id>
        <link href="https://github.com/advisories/GHSA-m6gf-p26p-mx2w"/>
        <updated>2023-12-19T14:55:17.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site request forgery vulnerability in Jenkins Docker Plugin 1.1.6 and earlier in DockerAPI.DescriptorImpl#doTestConnection allowed users with Overall/Read access to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10340">https://nvd.nist.gov/vuln/detail/CVE-2019-10340</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-07-11/#SECURITY-1010">https://jenkins.io/security/advisory/2019-07-11/#SECURITY-1010</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/07/11/4">http://www.openwall.com/lists/oss-security/2019/07/11/4</a></li>
<li><a href="http://www.securityfocus.com/bid/109156">http://www.securityfocus.com/bid/109156</a></li>
<li><a href="https://github.com/jenkinsci/docker-plugin/commit/6ad27199f6fad230be72fd45da78ddac85c075db">https://github.com/jenkinsci/docker-plugin/commit/6ad27199f6fad230be72fd45da78ddac85c075db</a></li>
<li><a href="https://github.com/advisories/GHSA-m6gf-p26p-mx2w">https://github.com/advisories/GHSA-m6gf-p26p-mx2w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6gf-p26p-mx2w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:50:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:influxdb] Plaintext password storage in Jenkins InfluxDB Plugin]]></title>
        <id>https://github.com/advisories/GHSA-rv97-r8f7-8wmg</id>
        <link href="https://github.com/advisories/GHSA-rv97-r8f7-8wmg"/>
        <updated>2023-12-19T14:43:03.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins InfluxDB Plugin Prior to 1.22 stored credentials unencrypted in its global configuration file on the Jenkins master where they can be viewed by users with access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10329">https://nvd.nist.gov/vuln/detail/CVE-2019-10329</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-05-31/#SECURITY-1403">https://jenkins.io/security/advisory/2019-05-31/#SECURITY-1403</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/05/31/2">http://www.openwall.com/lists/oss-security/2019/05/31/2</a></li>
<li><a href="http://www.securityfocus.com/bid/108540">http://www.securityfocus.com/bid/108540</a></li>
<li><a href="https://github.com/jenkinsci/influxdb-plugin/commit/bfc2fcc0d8e6fb6f2dff5a45353abac5cefc0573">https://github.com/jenkinsci/influxdb-plugin/commit/bfc2fcc0d8e6fb6f2dff5a45353abac5cefc0573</a></li>
<li><a href="https://github.com/advisories/GHSA-rv97-r8f7-8wmg">https://github.com/advisories/GHSA-rv97-r8f7-8wmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rv97-r8f7-8wmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:00:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:rundeck] XXE vulnerability in Rundeck Plugin]]></title>
        <id>https://github.com/advisories/GHSA-5xh7-6v3x-vrhj</id>
        <link href="https://github.com/advisories/GHSA-5xh7-6v3x-vrhj"/>
        <updated>2023-12-19T14:33:48.000Z</updated>
        <content type="html"><![CDATA[<p>Rundeck Plugin 3.6.6 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user with Overall/Read access to have Jenkins parse a crafted HTTP request with XML data that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Rundeck Plugin 3.6.7 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2144">https://nvd.nist.gov/vuln/detail/CVE-2020-2144</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1702">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1702</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/jenkinsci/rundeck-plugin/commit/9222a2101d994b43b6c399630da978a4cf2ea62f">https://github.com/jenkinsci/rundeck-plugin/commit/9222a2101d994b43b6c399630da978a4cf2ea62f</a></li>
<li><a href="https://github.com/advisories/GHSA-5xh7-6v3x-vrhj">https://github.com/advisories/GHSA-5xh7-6v3x-vrhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xh7-6v3x-vrhj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:10:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cvs] CSRF vulnerability in Jenkins CVS Plugin]]></title>
        <id>https://github.com/advisories/GHSA-63mw-hp3h-gc77</id>
        <link href="https://github.com/advisories/GHSA-63mw-hp3h-gc77"/>
        <updated>2023-12-19T10:32:59.000Z</updated>
        <content type="html"><![CDATA[<p>CVS Plugin 2.15 and earlier does not require POST requests in several HTTP endpoints, resulting in cross-site request forgery (CSRF) vulnerabilities. This allows attackers to create and manipulate tags, and to connect to an attacker-specified URL.</p>
<p>CVS Plugin 2.16 now requires POST requests for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2184">https://nvd.nist.gov/vuln/detail/CVE-2020-2184</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1094">https://jenkins.io/security/advisory/2020-05-06/#SECURITY-1094</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/05/06/3">http://www.openwall.com/lists/oss-security/2020/05/06/3</a></li>
<li><a href="https://github.com/jenkinsci/cvs-plugin/commit/8954b3a1e498f11c09296d4f54dc2de6a371c448">https://github.com/jenkinsci/cvs-plugin/commit/8954b3a1e498f11c09296d4f54dc2de6a371c448</a></li>
<li><a href="https://github.com/advisories/GHSA-63mw-hp3h-gc77">https://github.com/advisories/GHSA-63mw-hp3h-gc77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-63mw-hp3h-gc77</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:17:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:radargun] RCE vulnerability in RadarGun Plugin]]></title>
        <id>https://github.com/advisories/GHSA-723p-9rcj-xv8j</id>
        <link href="https://github.com/advisories/GHSA-723p-9rcj-xv8j"/>
        <updated>2023-12-19T10:30:55.000Z</updated>
        <content type="html"><![CDATA[<p>RadarGun Plugin 1.7 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution vulnerability exploitable by users able to configure RadarGun Plugin’s build step.</p>
<p>RadarGun Plugin 1.8 configures its YAML parser to only instantiate safe types.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2123">https://nvd.nist.gov/vuln/detail/CVE-2020-2123</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1733">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1733</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/jenkinsci/radargun-plugin/commit/63aba3b31d1a8ea140f26923eb48a25ef7f87e87">https://github.com/jenkinsci/radargun-plugin/commit/63aba3b31d1a8ea140f26923eb48a25ef7f87e87</a></li>
<li><a href="https://github.com/advisories/GHSA-723p-9rcj-xv8j">https://github.com/advisories/GHSA-723p-9rcj-xv8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-723p-9rcj-xv8j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:08:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:cobertura] XXE vulnerability in Jenkins Cobertura Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vpfj-5gg5-fvfm</id>
        <link href="https://github.com/advisories/GHSA-vpfj-5gg5-fvfm"/>
        <updated>2023-12-19T10:30:11.000Z</updated>
        <content type="html"><![CDATA[<p>Cobertura Plugin 1.15 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the 'Publish Cobertura Coverage Report' post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Cobertura Plugin 1.16 disables external entity resolution for its XML parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2138">https://nvd.nist.gov/vuln/detail/CVE-2020-2138</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1700">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1700</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/jenkinsci/cobertura-plugin/commit/fdee535fe4782181d822b875c96df8306f245d48">https://github.com/jenkinsci/cobertura-plugin/commit/fdee535fe4782181d822b875c96df8306f245d48</a></li>
<li><a href="https://github.com/advisories/GHSA-vpfj-5gg5-fvfm">https://github.com/advisories/GHSA-vpfj-5gg5-fvfm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpfj-5gg5-fvfm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:10:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.dubture.jenkins:digitalocean-plugin] Token stored in plain text by DigitalOcean Plugin]]></title>
        <id>https://github.com/advisories/GHSA-8g6v-g8qc-5w7j</id>
        <link href="https://github.com/advisories/GHSA-8g6v-g8qc-5w7j"/>
        <updated>2023-12-19T10:26:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins DigitalOcean Plugin 1.1 and earlier stores a token unencrypted in the global config.xml file on the Jenkins master where it can be viewed by users with access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2126">https://nvd.nist.gov/vuln/detail/CVE-2020-2126</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1559">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1559</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/jenkinsci/digitalocean-plugin/commit/ca1112c5c52a842c6340401f02f536fc07c6620a">https://github.com/jenkinsci/digitalocean-plugin/commit/ca1112c5c52a842c6340401f02f536fc07c6620a</a></li>
<li><a href="https://github.com/advisories/GHSA-8g6v-g8qc-5w7j">https://github.com/advisories/GHSA-8g6v-g8qc-5w7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g6v-g8qc-5w7j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:08:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper Neutralization of Input During Web Page Generation in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q6q9-83xw-mp6p</id>
        <link href="https://github.com/advisories/GHSA-q6q9-83xw-mp6p"/>
        <updated>2023-12-19T10:23:55.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.196 and earlier, LTS 2.176.3 and earlier, the f:combobox form control interpreted its item labels as HTML, resulting in a stored XSS vulnerability exploitable by users with permission to define its contents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10402">https://nvd.nist.gov/vuln/detail/CVE-2019-10402</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1525">https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1525</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/09/25/3">http://www.openwall.com/lists/oss-security/2019/09/25/3</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/00064be3661e687da7215523a3ed9a37a85f51a3">https://github.com/jenkinsci/jenkins/commit/00064be3661e687da7215523a3ed9a37a85f51a3</a></li>
<li><a href="https://github.com/advisories/GHSA-q6q9-83xw-mp6p">https://github.com/advisories/GHSA-q6q9-83xw-mp6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q6q9-83xw-mp6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:00:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper Neutralization of Input During Web Page Generation in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-q6q9-83xw-mp6p</id>
        <link href="https://github.com/advisories/GHSA-q6q9-83xw-mp6p"/>
        <updated>2023-12-19T10:23:55.000Z</updated>
        <content type="html"><![CDATA[<p>In Jenkins 2.196 and earlier, LTS 2.176.3 and earlier, the f:combobox form control interpreted its item labels as HTML, resulting in a stored XSS vulnerability exploitable by users with permission to define its contents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10402">https://nvd.nist.gov/vuln/detail/CVE-2019-10402</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1525">https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1525</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/09/25/3">http://www.openwall.com/lists/oss-security/2019/09/25/3</a></li>
<li><a href="https://github.com/jenkinsci/jenkins/commit/00064be3661e687da7215523a3ed9a37a85f51a3">https://github.com/jenkinsci/jenkins/commit/00064be3661e687da7215523a3ed9a37a85f51a3</a></li>
<li><a href="https://github.com/advisories/GHSA-q6q9-83xw-mp6p">https://github.com/advisories/GHSA-q6q9-83xw-mp6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q6q9-83xw-mp6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:00:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:pipeline-maven] XML External Entity processing vulnerability in Pipeline Maven Integration Jenkins Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6755-jgp4-8q7h</id>
        <link href="https://github.com/advisories/GHSA-6755-jgp4-8q7h"/>
        <updated>2023-12-19T10:21:11.000Z</updated>
        <content type="html"><![CDATA[<p>An XML external entities (XXE) vulnerability in Jenkins Pipeline Maven Integration Plugin 1.7.0 and earlier allowed attackers able to control a temporary directory's content on the agent running the Maven build to have Jenkins parse a maliciously crafted XML file that uses external entities for extraction of secrets from the Jenkins master, server-side request forgery, or denial-of-service attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10327">https://nvd.nist.gov/vuln/detail/CVE-2019-10327</a></li>
<li><a href="https://jenkins.io/security/advisory/2019-05-31/#SECURITY-1409">https://jenkins.io/security/advisory/2019-05-31/#SECURITY-1409</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/05/31/2">http://www.openwall.com/lists/oss-security/2019/05/31/2</a></li>
<li><a href="http://www.securityfocus.com/bid/108540">http://www.securityfocus.com/bid/108540</a></li>
<li><a href="https://github.com/jenkinsci/pipeline-maven-plugin/commit/e7cb858852c05d2423e3fd9922a090982dcd6392">https://github.com/jenkinsci/pipeline-maven-plugin/commit/e7cb858852c05d2423e3fd9922a090982dcd6392</a></li>
<li><a href="https://github.com/advisories/GHSA-6755-jgp4-8q7h">https://github.com/advisories/GHSA-6755-jgp4-8q7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6755-jgp4-8q7h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:00:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.sonatype.nexus.ci:nexus-jenkins-plugin] Jenkins Nexus Platform Plugin Cross-Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4gfc-72gw-v385</id>
        <link href="https://github.com/advisories/GHSA-4gfc-72gw-v385"/>
        <updated>2023-12-18T23:39:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Nexus Platform Plugin 3.18.0-03 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to send an HTTP request to an attacker-specified URL and parse the response as XML.</p>
<p>Additionally, the plugin does not configure its XML parser to prevent XML external entity (XXE) attacks, so attackers can have Jenkins parse a crafted XML response that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Nexus Platform Plugin 3.18.1-01 configures its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>Additionally, POST requests and Overall/Administer permission are required for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50766">https://nvd.nist.gov/vuln/detail/CVE-2023-50766</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3204">https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3204</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/13/4">http://www.openwall.com/lists/oss-security/2023/12/13/4</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/pull/291">https://github.com/jenkinsci/nexus-platform-plugin/pull/291</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd">https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd</a></li>
<li><a href="https://github.com/advisories/GHSA-4gfc-72gw-v385">https://github.com/advisories/GHSA-4gfc-72gw-v385</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gfc-72gw-v385</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-13T18:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.sonatype.nexus.ci:nexus-jenkins-plugin] Jenkins Nexus Platform Plugin Cross-Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-phjq-7xqp-2526</id>
        <link href="https://github.com/advisories/GHSA-phjq-7xqp-2526"/>
        <updated>2023-12-18T23:39:45.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Nexus Platform Plugin 3.18.0-03 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Nexus Platform Plugin 3.18.1-01 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50768">https://nvd.nist.gov/vuln/detail/CVE-2023-50768</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3203">https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3203</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/13/4">http://www.openwall.com/lists/oss-security/2023/12/13/4</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/pull/291">https://github.com/jenkinsci/nexus-platform-plugin/pull/291</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd">https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd</a></li>
<li><a href="https://github.com/advisories/GHSA-phjq-7xqp-2526">https://github.com/advisories/GHSA-phjq-7xqp-2526</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phjq-7xqp-2526</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-13T18:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.sonatype.nexus.ci:nexus-jenkins-plugin] Jenkins Nexus Platform Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-9vrm-747r-668v</id>
        <link href="https://github.com/advisories/GHSA-9vrm-747r-668v"/>
        <updated>2023-12-18T23:39:41.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Nexus Platform Plugin 3.18.0-03 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to send an HTTP request to an attacker-specified URL and parse the response as XML.</p>
<p>Additionally, the plugin does not configure its XML parser to prevent XML external entity (XXE) attacks, so attackers can have Jenkins parse a crafted XML response that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Nexus Platform Plugin 3.18.1-01 configures its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>Additionally, POST requests and Overall/Administer permission are required for the affected HTTP endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50767">https://nvd.nist.gov/vuln/detail/CVE-2023-50767</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3204">https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3204</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/13/4">http://www.openwall.com/lists/oss-security/2023/12/13/4</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/pull/291">https://github.com/jenkinsci/nexus-platform-plugin/pull/291</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd">https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd</a></li>
<li><a href="https://github.com/advisories/GHSA-9vrm-747r-668v">https://github.com/advisories/GHSA-9vrm-747r-668v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vrm-747r-668v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-13T18:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.sonatype.nexus.ci:nexus-jenkins-plugin] Jenkins Nexus Platform Plugin missing permission check]]></title>
        <id>https://github.com/advisories/GHSA-4g5f-w3mh-w99m</id>
        <link href="https://github.com/advisories/GHSA-4g5f-w3mh-w99m"/>
        <updated>2023-12-18T23:39:04.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Nexus Platform Plugin 3.18.0-03 and earlier does not perform permission checks in methods implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Nexus Platform Plugin 3.18.1-01 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50769">https://nvd.nist.gov/vuln/detail/CVE-2023-50769</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3203">https://www.jenkins.io/security/advisory/2023-12-13/#SECURITY-3203</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/13/4">http://www.openwall.com/lists/oss-security/2023/12/13/4</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/pull/291">https://github.com/jenkinsci/nexus-platform-plugin/pull/291</a></li>
<li><a href="https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd">https://github.com/jenkinsci/nexus-platform-plugin/commit/1d5e1e9e457af5e8ce8c9a403933d6cb73542dbd</a></li>
<li><a href="https://github.com/advisories/GHSA-4g5f-w3mh-w99m">https://github.com/advisories/GHSA-4g5f-w3mh-w99m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g5f-w3mh-w99m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-13T18:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[edu.gemini:gsp-graphql-core_native0.4_3] Grackle has StackOverflowError in GraphQL query processing]]></title>
        <id>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</id>
        <link href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8"/>
        <updated>2023-12-18T23:26:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to this fix, the GraphQL query parsing was vulnerable to <code>StackOverflowError</code>s. The possibility of small queries resulting in stack overflow is a potential denial of service vulnerability.</p>
<p>This potentially affects all applications using Grackle which have untrusted users.</p>
<blockquote>
<p>[!CAUTION]<br><strong>No specific knowledge of an application's GraphQL schema would be required to construct a pathological query.</strong></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>The stack overflow issues have been resolved in the v0.18.0 release of Grackle.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users could interpose a sanitizing layer in between untrusted input and Grackle query processing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8</a></li>
<li><a href="https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd">https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd</a></li>
<li><a href="https://github.com/typelevel/grackle/releases/tag/v0.18.0">https://github.com/typelevel/grackle/releases/tag/v0.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/advisories/GHSA-g56x-7j6w-g8r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-18T23:26:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[edu.gemini:gsp-graphql-core_native0.4_2.13] Grackle has StackOverflowError in GraphQL query processing]]></title>
        <id>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</id>
        <link href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8"/>
        <updated>2023-12-18T23:26:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to this fix, the GraphQL query parsing was vulnerable to <code>StackOverflowError</code>s. The possibility of small queries resulting in stack overflow is a potential denial of service vulnerability.</p>
<p>This potentially affects all applications using Grackle which have untrusted users.</p>
<blockquote>
<p>[!CAUTION]<br><strong>No specific knowledge of an application's GraphQL schema would be required to construct a pathological query.</strong></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>The stack overflow issues have been resolved in the v0.18.0 release of Grackle.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users could interpose a sanitizing layer in between untrusted input and Grackle query processing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8</a></li>
<li><a href="https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd">https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd</a></li>
<li><a href="https://github.com/typelevel/grackle/releases/tag/v0.18.0">https://github.com/typelevel/grackle/releases/tag/v0.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/advisories/GHSA-g56x-7j6w-g8r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-18T23:26:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[edu.gemini:gsp-graphql-core_sjs1_3] Grackle has StackOverflowError in GraphQL query processing]]></title>
        <id>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</id>
        <link href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8"/>
        <updated>2023-12-18T23:26:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to this fix, the GraphQL query parsing was vulnerable to <code>StackOverflowError</code>s. The possibility of small queries resulting in stack overflow is a potential denial of service vulnerability.</p>
<p>This potentially affects all applications using Grackle which have untrusted users.</p>
<blockquote>
<p>[!CAUTION]<br><strong>No specific knowledge of an application's GraphQL schema would be required to construct a pathological query.</strong></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>The stack overflow issues have been resolved in the v0.18.0 release of Grackle.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users could interpose a sanitizing layer in between untrusted input and Grackle query processing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8</a></li>
<li><a href="https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd">https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd</a></li>
<li><a href="https://github.com/typelevel/grackle/releases/tag/v0.18.0">https://github.com/typelevel/grackle/releases/tag/v0.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/advisories/GHSA-g56x-7j6w-g8r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-18T23:26:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[edu.gemini:gsp-graphql-core_sjs1_2.13] Grackle has StackOverflowError in GraphQL query processing]]></title>
        <id>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</id>
        <link href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8"/>
        <updated>2023-12-18T23:26:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to this fix, the GraphQL query parsing was vulnerable to <code>StackOverflowError</code>s. The possibility of small queries resulting in stack overflow is a potential denial of service vulnerability.</p>
<p>This potentially affects all applications using Grackle which have untrusted users.</p>
<blockquote>
<p>[!CAUTION]<br><strong>No specific knowledge of an application's GraphQL schema would be required to construct a pathological query.</strong></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>The stack overflow issues have been resolved in the v0.18.0 release of Grackle.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users could interpose a sanitizing layer in between untrusted input and Grackle query processing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8</a></li>
<li><a href="https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd">https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd</a></li>
<li><a href="https://github.com/typelevel/grackle/releases/tag/v0.18.0">https://github.com/typelevel/grackle/releases/tag/v0.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/advisories/GHSA-g56x-7j6w-g8r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-18T23:26:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[edu.gemini:gsp-graphql-core_3] Grackle has StackOverflowError in GraphQL query processing]]></title>
        <id>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</id>
        <link href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8"/>
        <updated>2023-12-18T23:26:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prior to this fix, the GraphQL query parsing was vulnerable to <code>StackOverflowError</code>s. The possibility of small queries resulting in stack overflow is a potential denial of service vulnerability.</p>
<p>This potentially affects all applications using Grackle which have untrusted users.</p>
<blockquote>
<p>[!CAUTION]<br><strong>No specific knowledge of an application's GraphQL schema would be required to construct a pathological query.</strong></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>The stack overflow issues have been resolved in the v0.18.0 release of Grackle.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users could interpose a sanitizing layer in between untrusted input and Grackle query processing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/typelevel/grackle/security/advisories/GHSA-g56x-7j6w-g8r8</a></li>
<li><a href="https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd">https://github.com/typelevel/grackle/commit/56e244b91659cf385df590fc6c46695b6f36cbfd</a></li>
<li><a href="https://github.com/typelevel/grackle/releases/tag/v0.18.0">https://github.com/typelevel/grackle/releases/tag/v0.18.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g56x-7j6w-g8r8">https://github.com/advisories/GHSA-g56x-7j6w-g8r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56x-7j6w-g8r8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-18T23:26:52.000Z</published>
    </entry>
</feed>