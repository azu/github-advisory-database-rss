<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-05-10T00:04:01.921Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.netflix.genie:genie-web] Genie Path Traversal vulnerability via File Uploads]]></title>
        <id>https://github.com/advisories/GHSA-wpcv-5jgp-69f3</id>
        <link href="https://github.com/advisories/GHSA-wpcv-5jgp-69f3"/>
        <updated>2024-05-09T21:42:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Path Traversal vulnerability via  File Uploads in Genie </p>
<h3 id="impact">Impact</h3>
<p>Any Genie OSS users running their own instance and relying on the filesystem to store file attachments submitted to the Genie application may be impacted. Using this technique, it is possible to write a file with any user-specified filename and file contents to any location on the file system that the Java process has write access - potentially leading to remote code execution (RCE).</p>
<p>Genie users who do not store these attachments locally on the underlying file system are not vulnerable to this issue. </p>
<h3 id="description">Description</h3>
<p>Genie's API accepts a multipart/form-data file upload which can be saved to a location on disk. However, it takes a user-supplied filename as part of the request and uses this as the filename when writing the file to disk. Since this filename is user-controlled, it is possible for a malicious actor to manipulate the filename in order to break out of the default attachment storage path and perform path traversal. </p>
<p>Using this technique it is possible to write a file with any user specified name and file contents to any location on the file system that the Java process has write access to.</p>
<h3 id="patches">Patches</h3>
<p>This path traversal issue is fixed in Genie OSS v4.3.18. This issue was fixed in this <a href="https://github.com/Netflix/genie/pull/1217">https://github.com/Netflix/genie/pull/1217</a> and a <a href="https://github.com/Netflix/genie/releases/tag/v4.3.18">new release</a> with the fix was created. Please, upgrade your Genie OSS instances to the new version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Netflix/genie/security/advisories/GHSA-wpcv-5jgp-69f3">https://github.com/Netflix/genie/security/advisories/GHSA-wpcv-5jgp-69f3</a></li>
<li><a href="https://github.com/Netflix/genie/pull/1217">https://github.com/Netflix/genie/pull/1217</a></li>
<li><a href="https://github.com/Netflix/genie/commit/6bad017d8078c94e80d6c6fe8abd693910bf55cf">https://github.com/Netflix/genie/commit/6bad017d8078c94e80d6c6fe8abd693910bf55cf</a></li>
<li><a href="https://github.com/Netflix/genie/releases/tag/v4.3.18">https://github.com/Netflix/genie/releases/tag/v4.3.18</a></li>
<li><a href="https://github.com/advisories/GHSA-wpcv-5jgp-69f3">https://github.com/advisories/GHSA-wpcv-5jgp-69f3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpcv-5jgp-69f3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-09T21:35:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:manager-pojo] Apache Inlong Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fgh3-pwmp-3qw3</id>
        <link href="https://github.com/advisories/GHSA-fgh3-pwmp-3qw3"/>
        <updated>2024-05-09T13:22:55.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache InLong. This issue affects Apache InLong: from 1.7.0 through 1.11.0. The attackers can bypass using malicious parameters.</p>
<p>Users are advised to upgrade to Apache InLong's 1.12.0 or cherry-pick [1], [2] to solve it.</p>
<p>[1]  <a href="https://github.com/apache/inlong/pull/9694">https://github.com/apache/inlong/pull/9694</a> </p>
<p>[2]&nbsp; <a href="https://github.com/apache/inlong/pull/9707">https://github.com/apache/inlong/pull/9707</a> </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26579">https://nvd.nist.gov/vuln/detail/CVE-2024-26579</a></li>
<li><a href="https://lists.apache.org/thread/d2hndtvh6bll4pkl91o2oqxyynhr54k3">https://lists.apache.org/thread/d2hndtvh6bll4pkl91o2oqxyynhr54k3</a></li>
<li><a href="https://github.com/apache/inlong/pull/9694">https://github.com/apache/inlong/pull/9694</a></li>
<li><a href="https://github.com/apache/inlong/pull/9707">https://github.com/apache/inlong/pull/9707</a></li>
<li><a href="https://github.com/apache/inlong/commit/23e3e00cae1fd120b089fca54f7440945dfe11a4">https://github.com/apache/inlong/commit/23e3e00cae1fd120b089fca54f7440945dfe11a4</a></li>
<li><a href="https://github.com/apache/inlong/commit/cdf616670942fec7d09fae2452e2ea215205dd1d">https://github.com/apache/inlong/commit/cdf616670942fec7d09fae2452e2ea215205dd1d</a></li>
<li><a href="https://github.com/advisories/GHSA-fgh3-pwmp-3qw3">https://github.com/advisories/GHSA-fgh3-pwmp-3qw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fgh3-pwmp-3qw3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-08T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2024-05-08T17:44:35.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc">https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc</a></li>
<li><a href="https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb">https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb</a></li>
<li><a href="https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb">https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb</a></li>
<li><a href="https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657">https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657</a></li>
<li><a href="https://issues.apache.org/jira/browse/KAFKA-14063">https://issues.apache.org/jira/browse/KAFKA-14063</a></li>
<li><a href="https://kafka.apache.org/cve-list#CVE-2022-34917">https://kafka.apache.org/cve-list#CVE-2022-34917</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2024-05-08T17:44:35.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc">https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc</a></li>
<li><a href="https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb">https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb</a></li>
<li><a href="https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb">https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb</a></li>
<li><a href="https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657">https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657</a></li>
<li><a href="https://issues.apache.org/jira/browse/KAFKA-14063">https://issues.apache.org/jira/browse/KAFKA-14063</a></li>
<li><a href="https://kafka.apache.org/cve-list#CVE-2022-34917">https://kafka.apache.org/cve-list#CVE-2022-34917</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2024-05-08T17:44:35.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc">https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc</a></li>
<li><a href="https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb">https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb</a></li>
<li><a href="https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb">https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb</a></li>
<li><a href="https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657">https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657</a></li>
<li><a href="https://issues.apache.org/jira/browse/KAFKA-14063">https://issues.apache.org/jira/browse/KAFKA-14063</a></li>
<li><a href="https://kafka.apache.org/cve-list#CVE-2022-34917">https://kafka.apache.org/cve-list#CVE-2022-34917</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka vulnerability can lead to brokers hitting OutOfMemoryException, causing Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</id>
        <link href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q"/>
        <updated>2024-05-08T17:44:35.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34917">https://nvd.nist.gov/vuln/detail/CVE-2022-34917</a></li>
<li><a href="https://kafka.apache.org/cve-list">https://kafka.apache.org/cve-list</a></li>
<li><a href="https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc">https://github.com/apache/kafka/commit/14951a83e3fdead212156e5532359500d72f68bc</a></li>
<li><a href="https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb">https://github.com/apache/kafka/commit/2bfa24b2bd416e7b8c4a0c566b984c43904fdecb</a></li>
<li><a href="https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb">https://github.com/apache/kafka/commit/aaceb6b79bfcb1d32874ccdbc8f3138d1c1c00fb</a></li>
<li><a href="https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657">https://github.com/apache/kafka/commit/c1295662768e64b4467e27c3d5158f95f2307657</a></li>
<li><a href="https://issues.apache.org/jira/browse/KAFKA-14063">https://issues.apache.org/jira/browse/KAFKA-14063</a></li>
<li><a href="https://kafka.apache.org/cve-list#CVE-2022-34917">https://kafka.apache.org/cve-list#CVE-2022-34917</a></li>
<li><a href="https://github.com/advisories/GHSA-c9h3-c6qj-hh7q">https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9h3-c6qj-hh7q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.neo4j:neo4j-cypher] Neo4j Cypher component mishandles IMMUTABLE privileges]]></title>
        <id>https://github.com/advisories/GHSA-p343-9qwp-pqxv</id>
        <link href="https://github.com/advisories/GHSA-p343-9qwp-pqxv"/>
        <updated>2024-05-07T19:59:42.000Z</updated>
        <content type="html"><![CDATA[<p>The Cypher component in Neo4j before 5.19.0 mishandles IMMUTABLE privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34517">https://nvd.nist.gov/vuln/detail/CVE-2024-34517</a></li>
<li><a href="https://github.com/neo4j/neo4j/wiki/Neo4j-5-changelog#cypher">https://github.com/neo4j/neo4j/wiki/Neo4j-5-changelog#cypher</a></li>
<li><a href="https://neo4j.com/security/cve-2024-34517">https://neo4j.com/security/cve-2024-34517</a></li>
<li><a href="https://trust.neo4j.com">https://trust.neo4j.com</a></li>
<li><a href="https://github.com/advisories/GHSA-p343-9qwp-pqxv">https://github.com/advisories/GHSA-p343-9qwp-pqxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p343-9qwp-pqxv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T18:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.mingsoft:ms-basic] MS Basic Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-64cm-3cj3-67hf</id>
        <link href="https://github.com/advisories/GHSA-64cm-3cj3-67hf"/>
        <updated>2024-05-07T19:59:13.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the search function in MvnRepository MS Basic 2.1.18.3 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-33748">https://nvd.nist.gov/vuln/detail/CVE-2024-33748</a></li>
<li><a href="https://github.com/Fr1ezy/Fr1ezy-ms-basic_XSS">https://github.com/Fr1ezy/Fr1ezy-ms-basic_XSS</a></li>
<li><a href="https://mvnrepository.com/artifact/net.mingsoft/ms-basic">https://mvnrepository.com/artifact/net.mingsoft/ms-basic</a></li>
<li><a href="https://github.com/advisories/GHSA-64cm-3cj3-67hf">https://github.com/advisories/GHSA-64cm-3cj3-67hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64cm-3cj3-67hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T18:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.eclipse.edc:connector-core] Eclipse Dataspace Components vulnerable to OAuth2 client secret disclosure]]></title>
        <id>https://github.com/advisories/GHSA-2x52-8f29-7cjr</id>
        <link href="https://github.com/advisories/GHSA-2x52-8f29-7cjr"/>
        <updated>2024-05-07T16:51:11.000Z</updated>
        <content type="html"><![CDATA[<p>In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, in the <a href="https://github.com/eclipse-edc/Connector">EDC Connector component</a>, an attacker might obtain OAuth2 client secrets from the vault.</p>
<p>In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, we have identified a security vulnerability in the EDC Connector component ( <a href="https://github.com/eclipse-edc/Connector">https://github.com/eclipse-edc/Connector</a> ) regarding the OAuth2-protected data sink feature. When using a custom, OAuth2-protected data sink, the OAuth2-specific data address properties are resolved by the provider data plane. Problematically, the consumer-provided clientSecretKey, which indicates the OAuth2 client secret to retrieve from a secrets vault, is resolved in the context of the provider's vault, not the consumer. This secret's value is then sent to the tokenUrl, also consumer-controlled, as part of an OAuth2 client credentials grant. The returned access token is then sent as a bearer token to the data sink URL.</p>
<p>This feature is now disabled entirely, because not all code paths necessary for a successful realization were fully implemented.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4536">https://nvd.nist.gov/vuln/detail/CVE-2024-4536</a></li>
<li><a href="https://github.com/eclipse-edc/Connector/commit/a4e6018d2c0457fba6f672fafa6c590513c45d1b">https://github.com/eclipse-edc/Connector/commit/a4e6018d2c0457fba6f672fafa6c590513c45d1b</a></li>
<li><a href="https://github.com/eclipse-edc/Connector/releases/tag/v0.6.3">https://github.com/eclipse-edc/Connector/releases/tag/v0.6.3</a></li>
<li><a href="https://gitlab.eclipse.org/security/cve-assignement/-/issues/22">https://gitlab.eclipse.org/security/cve-assignement/-/issues/22</a></li>
<li><a href="https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/198">https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/198</a></li>
<li><a href="https://github.com/advisories/GHSA-2x52-8f29-7cjr">https://github.com/advisories/GHSA-2x52-8f29-7cjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2x52-8f29-7cjr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-07T15:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk12] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk13] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk14] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk15to18] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk18on] Bouncy Castle Java Cryptography API vulnerable to DNS poisoning]]></title>
        <id>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</id>
        <link href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w"/>
        <updated>2024-05-03T20:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34447">https://nvd.nist.gov/vuln/detail/CVE-2024-34447</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4h8f-2wvx-gg5w">https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h8f-2wvx-gg5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hive:hive-jdbc] Apache Hive Code Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vpw3-3prf-3974</id>
        <link href="https://github.com/advisories/GHSA-vpw3-3prf-3974"/>
        <updated>2024-05-08T18:59:10.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Control of Generation of Code ('Code Injection') vulnerability in Apache Hive.</p>
<p>The vulnerability affects the Hive JDBC driver component and it can potentially lead to arbitrary code execution on the machine/endpoint that the JDBC driver (client) is running. The malicious user must have sufficient permissions to specify/edit JDBC URL(s) in an endpoint relying on the Hive JDBC driver and the JDBC client process must run under a privileged user to fully exploit the vulnerability.&nbsp;</p>
<p>The attacker can setup a malicious HTTP server and specify a JDBC URL pointing towards this server. When a JDBC connection is attempted, the malicious HTTP server can provide a special response with customized payload that can trigger the execution of certain commands in the JDBC client.This issue affects Apache Hive: from 4.0.0-alpha-1 before 4.0.0.</p>
<p>Users are recommended to upgrade to version 4.0.0, which fixes the issue. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35701">https://nvd.nist.gov/vuln/detail/CVE-2023-35701</a></li>
<li><a href="https://lists.apache.org/thread/7zcv6l63spl4r66xwz5jv9rtrg2opx81">https://lists.apache.org/thread/7zcv6l63spl4r66xwz5jv9rtrg2opx81</a></li>
<li><a href="https://github.com/apache/hive/commit/7abeb1df463cc389f668172e7cf3bb772799858a">https://github.com/apache/hive/commit/7abeb1df463cc389f668172e7cf3bb772799858a</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-27554">https://issues.apache.org/jira/browse/HIVE-27554</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/03/3">http://www.openwall.com/lists/oss-security/2024/05/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-vpw3-3prf-3974">https://github.com/advisories/GHSA-vpw3-3prf-3974</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpw3-3prf-3974</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-03T09:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Jenkins Script Security Plugin sandbox bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</id>
        <link href="https://github.com/advisories/GHSA-2g4q-9vm9-9fw4"/>
        <updated>2024-05-03T20:17:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin 1335.vf07d9ce377a_e and earlier:</p>
<ul>
<li><p>Crafted constructor bodies that invoke other constructors can be used to construct any subclassable type via implicit casts.</p>
</li>
<li><p>Sandbox-defined Groovy classes that shadow specific non-sandbox-defined classes can be used to construct any subclassable type.</p>
</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34145">https://nvd.nist.gov/vuln/detail/CVE-2024-34145</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-2g4q-9vm9-9fw4">https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2g4q-9vm9-9fw4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:script-security] Jenkins Script Security Plugin has sandbox bypass vulnerability involving crafted constructor bodies]]></title>
        <id>https://github.com/advisories/GHSA-v63g-v339-2673</id>
        <link href="https://github.com/advisories/GHSA-v63g-v339-2673"/>
        <updated>2024-05-03T20:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Script Security Plugin provides a sandbox feature that allows low privileged users to define scripts, including Pipelines, that are generally safe to execute. Calls to code defined inside a sandboxed script are intercepted, and various allowlists are checked to determine whether the call is to be allowed.</p>
<p>Multiple sandbox bypass vulnerabilities exist in Script Security Plugin 1335.vf07d9ce377a_e and earlier:</p>
<ul>
<li><p>Crafted constructor bodies that invoke other constructors can be used to construct any subclassable type via implicit casts.</p>
</li>
<li><p>Sandbox-defined Groovy classes that shadow specific non-sandbox-defined classes can be used to construct any subclassable type.</p>
</li>
</ul>
<p>These vulnerabilities allow attackers with permission to define and run sandboxed scripts, including Pipelines, to bypass the sandbox protection and execute arbitrary code in the context of the Jenkins controller JVM.</p>
<ul>
<li>These issues are caused by an incomplete fix of <a href="https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2824%20(1)">SECURITY-2824</a>.</li>
</ul>
<p>Script Security Plugin 1336.vf33a_a_9863911 has additional restrictions and sanity checks to ensure that super constructors cannot be constructed without being intercepted by the sandbox:</p>
<ul>
<li><p>Calls to to other constructors using this are now intercepted by the sandbox.</p>
</li>
<li><p>Classes in packages that can be shadowed by Groovy-defined classes are no longer ignored by the sandbox when intercepting super constructor calls.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34144">https://nvd.nist.gov/vuln/detail/CVE-2024-34144</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3341</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/jenkinsci/script-security-plugin/releases/tag/1336.vf33a_a_9863911">https://github.com/jenkinsci/script-security-plugin/releases/tag/1336.vf33a_a_9863911</a></li>
<li><a href="https://github.com/advisories/GHSA-v63g-v339-2673">https://github.com/advisories/GHSA-v63g-v339-2673</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v63g-v339-2673</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly:wildfly-domain-http] Wildfly vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</id>
        <link href="https://github.com/advisories/GHSA-x7g6-rwhc-g7mj"/>
        <updated>2024-05-03T20:12:01.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Wildfly’s management interface. Due to the lack of limitation of sockets for the management interface, it may be possible to cause a denial of service hitting the nofile limit as there is no possibility to configure or set a maximum number of connections.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4029">https://nvd.nist.gov/vuln/detail/CVE-2024-4029</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-4029">https://access.redhat.com/security/cve/CVE-2024-4029</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2278615">https://bugzilla.redhat.com/show_bug.cgi?id=2278615</a></li>
<li><a href="https://github.com/advisories/GHSA-x7g6-rwhc-g7mj">https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x7g6-rwhc-g7mj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:partial-release-manager] Jenkins Subversion Partial Release Manager Plugin programmatically disables the fix for CVE-2016-3721 ]]></title>
        <id>https://github.com/advisories/GHSA-phh3-2p9m-w6j5</id>
        <link href="https://github.com/advisories/GHSA-phh3-2p9m-w6j5"/>
        <updated>2024-05-03T19:37:36.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Subversion Partial Release Manager Plugin 1.0.1 and earlier programmatically sets the Java system property <code>hudson.model.ParametersAction.keepUndefinedParameters</code> whenever a build is triggered from a release tag with the 'Svn-Partial Release Manager' SCM. Doing so disables the fix for <a href="https://www.jenkins.io/security/advisory/2016-05-11/#arbitrary-build-parameters-are-passed-to-build-scripts-as-environment-variables">SECURITY-170</a> / CVE-2016-3721.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34148">https://nvd.nist.gov/vuln/detail/CVE-2024-34148</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3331">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3331</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-phh3-2p9m-w6j5">https://github.com/advisories/GHSA-phh3-2p9m-w6j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phh3-2p9m-w6j5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:telegrambot] Jenkins Telegram Bot Plugin stores the Telegram Bot token in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-94pr-w968-h923</id>
        <link href="https://github.com/advisories/GHSA-94pr-w968-h923"/>
        <updated>2024-05-03T19:35:09.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Telegram Bot Plugin 1.4.0 and earlier stores the Telegram Bot token unencrypted in its global configuration file <code>jenkinsci.plugins.telegrambot.TelegramBotGlobalConfiguration.xml</code> on the Jenkins controller as part of its configuration.</p>
<p>This token can be viewed by users with access to the Jenkins controller file system.</p>
<p>As of publication of this advisory, there is no fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-34147">https://nvd.nist.gov/vuln/detail/CVE-2024-34147</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3294">https://www.jenkins.io/security/advisory/2024-05-02/#SECURITY-3294</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/05/02/3">http://www.openwall.com/lists/oss-security/2024/05/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-94pr-w968-h923">https://github.com/advisories/GHSA-94pr-w968-h923</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94pr-w968-h923</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-02T15:30:35.000Z</published>
    </entry>
</feed>