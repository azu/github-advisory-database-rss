<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-02-21T13:01:30.483Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.yetanalytics:lrs] Cross-site Scripting Vulnerability in Statement Browser]]></title>
        <id>https://github.com/advisories/GHSA-7rw2-3hhp-rc46</id>
        <link href="https://github.com/advisories/GHSA-7rw2-3hhp-rc46"/>
        <updated>2024-02-21T00:34:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A maliciously crafted xAPI statement could be used to perform script or other tag injection in the LRS Statement Browser.</p>
<h3 id="patches">Patches</h3>
<p>The problem is patched in version 1.2.17 of the LRS library and <a href="https://github.com/yetanalytics/lrsql/releases/tag/v0.7.5">version 0.7.5 of SQL LRS</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds exist, we recommend upgrading to version 1.2.17 of the library or version 0.7.5 of SQL LRS immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yetanalytics/lrs/releases/tag/v1.2.17">LRS Tag</a></li>
<li><a href="https://clojars.org/com.yetanalytics/lrs/versions/1.2.17">LRS lib on Clojars</a></li>
<li><a href="https://github.com/yetanalytics/lrsql/releases/tag/v0.7.5">SQL LRS 0.7.5 Release</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/yetanalytics/lrs/security/advisories/GHSA-7rw2-3hhp-rc46">https://github.com/yetanalytics/lrs/security/advisories/GHSA-7rw2-3hhp-rc46</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26140">https://nvd.nist.gov/vuln/detail/CVE-2024-26140</a></li>
<li><a href="https://github.com/yetanalytics/lrs/commit/d7f4883bc2252337d25e8bba2c7f9d172f5b0621">https://github.com/yetanalytics/lrs/commit/d7f4883bc2252337d25e8bba2c7f9d172f5b0621</a></li>
<li><a href="https://clojars.org/com.yetanalytics/lrs/versions/1.2.17">https://clojars.org/com.yetanalytics/lrs/versions/1.2.17</a></li>
<li><a href="https://github.com/yetanalytics/lrs/releases/tag/v1.2.17">https://github.com/yetanalytics/lrs/releases/tag/v1.2.17</a></li>
<li><a href="https://github.com/yetanalytics/lrsql/releases/tag/v0.7.5">https://github.com/yetanalytics/lrsql/releases/tag/v0.7.5</a></li>
<li><a href="https://github.com/advisories/GHSA-7rw2-3hhp-rc46">https://github.com/advisories/GHSA-7rw2-3hhp-rc46</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7rw2-3hhp-rc46</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-21T00:24:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-sql] Deserialization of Untrusted Data in Apache Camel SQL]]></title>
        <id>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</id>
        <link href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9"/>
        <updated>2024-02-21T00:22:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel SQL Component. This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue. If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22369">https://nvd.nist.gov/vuln/detail/CVE-2024-22369</a></li>
<li><a href="https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f">https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f</a></li>
<li><a href="https://github.com/apache/camel/pull/12706">https://github.com/apache/camel/pull/12706</a></li>
<li><a href="https://github.com/apache/camel/pull/12707">https://github.com/apache/camel/pull/12707</a></li>
<li><a href="https://github.com/apache/camel/pull/12708">https://github.com/apache/camel/pull/12708</a></li>
<li><a href="https://github.com/apache/camel/pull/12709">https://github.com/apache/camel/pull/12709</a></li>
<li><a href="https://github.com/apache/camel/pull/12716">https://github.com/apache/camel/pull/12716</a></li>
<li><a href="https://github.com/apache/camel/pull/12717">https://github.com/apache/camel/pull/12717</a></li>
<li><a href="https://github.com/apache/camel/pull/12718">https://github.com/apache/camel/pull/12718</a></li>
<li><a href="https://github.com/apache/camel/pull/12719">https://github.com/apache/camel/pull/12719</a></li>
<li><a href="https://github.com/apache/camel/pull/12789">https://github.com/apache/camel/pull/12789</a></li>
<li><a href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9">https://github.com/advisories/GHSA-36xr-4x2f-cfj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-sql] Deserialization of Untrusted Data in Apache Camel SQL]]></title>
        <id>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</id>
        <link href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9"/>
        <updated>2024-02-21T00:22:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel SQL Component. This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue. If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22369">https://nvd.nist.gov/vuln/detail/CVE-2024-22369</a></li>
<li><a href="https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f">https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f</a></li>
<li><a href="https://github.com/apache/camel/pull/12706">https://github.com/apache/camel/pull/12706</a></li>
<li><a href="https://github.com/apache/camel/pull/12707">https://github.com/apache/camel/pull/12707</a></li>
<li><a href="https://github.com/apache/camel/pull/12708">https://github.com/apache/camel/pull/12708</a></li>
<li><a href="https://github.com/apache/camel/pull/12709">https://github.com/apache/camel/pull/12709</a></li>
<li><a href="https://github.com/apache/camel/pull/12716">https://github.com/apache/camel/pull/12716</a></li>
<li><a href="https://github.com/apache/camel/pull/12717">https://github.com/apache/camel/pull/12717</a></li>
<li><a href="https://github.com/apache/camel/pull/12718">https://github.com/apache/camel/pull/12718</a></li>
<li><a href="https://github.com/apache/camel/pull/12719">https://github.com/apache/camel/pull/12719</a></li>
<li><a href="https://github.com/apache/camel/pull/12789">https://github.com/apache/camel/pull/12789</a></li>
<li><a href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9">https://github.com/advisories/GHSA-36xr-4x2f-cfj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-sql] Deserialization of Untrusted Data in Apache Camel SQL]]></title>
        <id>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</id>
        <link href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9"/>
        <updated>2024-02-21T00:22:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel SQL Component. This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue. If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22369">https://nvd.nist.gov/vuln/detail/CVE-2024-22369</a></li>
<li><a href="https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f">https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f</a></li>
<li><a href="https://github.com/apache/camel/pull/12706">https://github.com/apache/camel/pull/12706</a></li>
<li><a href="https://github.com/apache/camel/pull/12707">https://github.com/apache/camel/pull/12707</a></li>
<li><a href="https://github.com/apache/camel/pull/12708">https://github.com/apache/camel/pull/12708</a></li>
<li><a href="https://github.com/apache/camel/pull/12709">https://github.com/apache/camel/pull/12709</a></li>
<li><a href="https://github.com/apache/camel/pull/12716">https://github.com/apache/camel/pull/12716</a></li>
<li><a href="https://github.com/apache/camel/pull/12717">https://github.com/apache/camel/pull/12717</a></li>
<li><a href="https://github.com/apache/camel/pull/12718">https://github.com/apache/camel/pull/12718</a></li>
<li><a href="https://github.com/apache/camel/pull/12719">https://github.com/apache/camel/pull/12719</a></li>
<li><a href="https://github.com/apache/camel/pull/12789">https://github.com/apache/camel/pull/12789</a></li>
<li><a href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9">https://github.com/advisories/GHSA-36xr-4x2f-cfj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-sql] Deserialization of Untrusted Data in Apache Camel SQL]]></title>
        <id>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</id>
        <link href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9"/>
        <updated>2024-02-21T00:22:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel SQL Component. This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue. If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22369">https://nvd.nist.gov/vuln/detail/CVE-2024-22369</a></li>
<li><a href="https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f">https://lists.apache.org/thread/3dko781dy2gy5l3fs48p56fgp429yb0f</a></li>
<li><a href="https://github.com/apache/camel/pull/12706">https://github.com/apache/camel/pull/12706</a></li>
<li><a href="https://github.com/apache/camel/pull/12707">https://github.com/apache/camel/pull/12707</a></li>
<li><a href="https://github.com/apache/camel/pull/12708">https://github.com/apache/camel/pull/12708</a></li>
<li><a href="https://github.com/apache/camel/pull/12709">https://github.com/apache/camel/pull/12709</a></li>
<li><a href="https://github.com/apache/camel/pull/12716">https://github.com/apache/camel/pull/12716</a></li>
<li><a href="https://github.com/apache/camel/pull/12717">https://github.com/apache/camel/pull/12717</a></li>
<li><a href="https://github.com/apache/camel/pull/12718">https://github.com/apache/camel/pull/12718</a></li>
<li><a href="https://github.com/apache/camel/pull/12719">https://github.com/apache/camel/pull/12719</a></li>
<li><a href="https://github.com/apache/camel/pull/12789">https://github.com/apache/camel/pull/12789</a></li>
<li><a href="https://github.com/advisories/GHSA-36xr-4x2f-cfj9">https://github.com/advisories/GHSA-36xr-4x2f-cfj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xr-4x2f-cfj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-cassandraql] Deserialization of Untrusted Data in Apache Camel CassandraQL]]></title>
        <id>https://github.com/advisories/GHSA-m43p-55rf-8c2j</id>
        <link href="https://github.com/advisories/GHSA-m43p-55rf-8c2j"/>
        <updated>2024-02-21T00:22:05.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel CassandraQL Component AggregationRepository which is vulnerable to unsafe deserialization. Under specific conditions it is possible to deserialize malicious payload.This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue.&nbsp;If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23114">https://nvd.nist.gov/vuln/detail/CVE-2024-23114</a></li>
<li><a href="https://camel.apache.org/security/CVE-2024-23114.html">https://camel.apache.org/security/CVE-2024-23114.html</a></li>
<li><a href="https://issues.apache.org/jira/browse/CAMEL-20306">https://issues.apache.org/jira/browse/CAMEL-20306</a></li>
<li><a href="https://github.com/advisories/GHSA-m43p-55rf-8c2j">https://github.com/advisories/GHSA-m43p-55rf-8c2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m43p-55rf-8c2j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-cassandraql] Deserialization of Untrusted Data in Apache Camel CassandraQL]]></title>
        <id>https://github.com/advisories/GHSA-m43p-55rf-8c2j</id>
        <link href="https://github.com/advisories/GHSA-m43p-55rf-8c2j"/>
        <updated>2024-02-21T00:22:05.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel CassandraQL Component AggregationRepository which is vulnerable to unsafe deserialization. Under specific conditions it is possible to deserialize malicious payload.This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue.&nbsp;If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23114">https://nvd.nist.gov/vuln/detail/CVE-2024-23114</a></li>
<li><a href="https://camel.apache.org/security/CVE-2024-23114.html">https://camel.apache.org/security/CVE-2024-23114.html</a></li>
<li><a href="https://issues.apache.org/jira/browse/CAMEL-20306">https://issues.apache.org/jira/browse/CAMEL-20306</a></li>
<li><a href="https://github.com/advisories/GHSA-m43p-55rf-8c2j">https://github.com/advisories/GHSA-m43p-55rf-8c2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m43p-55rf-8c2j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-cassandraql] Deserialization of Untrusted Data in Apache Camel CassandraQL]]></title>
        <id>https://github.com/advisories/GHSA-m43p-55rf-8c2j</id>
        <link href="https://github.com/advisories/GHSA-m43p-55rf-8c2j"/>
        <updated>2024-02-21T00:22:05.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel CassandraQL Component AggregationRepository which is vulnerable to unsafe deserialization. Under specific conditions it is possible to deserialize malicious payload.This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue.&nbsp;If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23114">https://nvd.nist.gov/vuln/detail/CVE-2024-23114</a></li>
<li><a href="https://camel.apache.org/security/CVE-2024-23114.html">https://camel.apache.org/security/CVE-2024-23114.html</a></li>
<li><a href="https://issues.apache.org/jira/browse/CAMEL-20306">https://issues.apache.org/jira/browse/CAMEL-20306</a></li>
<li><a href="https://github.com/advisories/GHSA-m43p-55rf-8c2j">https://github.com/advisories/GHSA-m43p-55rf-8c2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m43p-55rf-8c2j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-cassandraql] Deserialization of Untrusted Data in Apache Camel CassandraQL]]></title>
        <id>https://github.com/advisories/GHSA-m43p-55rf-8c2j</id>
        <link href="https://github.com/advisories/GHSA-m43p-55rf-8c2j"/>
        <updated>2024-02-21T00:22:05.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache Camel CassandraQL Component AggregationRepository which is vulnerable to unsafe deserialization. Under specific conditions it is possible to deserialize malicious payload.This issue affects Apache Camel: from 3.0.0 before 3.21.4, from 3.22.0 before 3.22.1, from 4.0.0 before 4.0.4, from 4.1.0 before 4.4.0.</p>
<p>Users are recommended to upgrade to version 4.4.0, which fixes the issue.&nbsp;If users are on the 4.0.x LTS releases stream, then they are suggested to upgrade to 4.0.4. If users are on 3.x, they are suggested to move to 3.21.4 or 3.22.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23114">https://nvd.nist.gov/vuln/detail/CVE-2024-23114</a></li>
<li><a href="https://camel.apache.org/security/CVE-2024-23114.html">https://camel.apache.org/security/CVE-2024-23114.html</a></li>
<li><a href="https://issues.apache.org/jira/browse/CAMEL-20306">https://issues.apache.org/jira/browse/CAMEL-20306</a></li>
<li><a href="https://github.com/advisories/GHSA-m43p-55rf-8c2j">https://github.com/advisories/GHSA-m43p-55rf-8c2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m43p-55rf-8c2j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T15:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Arbitrary File Read Vulnerability in Apache Dolphinscheduler]]></title>
        <id>https://github.com/advisories/GHSA-ff2w-wm48-jhqj</id>
        <link href="https://github.com/advisories/GHSA-ff2w-wm48-jhqj"/>
        <updated>2024-02-21T00:21:46.000Z</updated>
        <content type="html"><![CDATA[<p>Arbitrary File Read Vulnerability in Apache Dolphinscheduler.</p>
<p>This issue affects Apache DolphinScheduler: before 3.2.1. </p>
<p>We recommend users to upgrade Apache DolphinScheduler to version 3.2.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51770">https://nvd.nist.gov/vuln/detail/CVE-2023-51770</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/pull/15433">https://github.com/apache/dolphinscheduler/pull/15433</a></li>
<li><a href="https://lists.apache.org/thread/4t8bdjqnfhldh73gy9p0whlgvnnbtn7g">https://lists.apache.org/thread/4t8bdjqnfhldh73gy9p0whlgvnnbtn7g</a></li>
<li><a href="https://lists.apache.org/thread/gpks573kn00ofxn7n9gkg6o47d03p5rw">https://lists.apache.org/thread/gpks573kn00ofxn7n9gkg6o47d03p5rw</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/20/2">http://www.openwall.com/lists/oss-security/2024/02/20/2</a></li>
<li><a href="https://github.com/advisories/GHSA-ff2w-wm48-jhqj">https://github.com/advisories/GHSA-ff2w-wm48-jhqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ff2w-wm48-jhqj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T12:31:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Session Fixation Apache DolphinScheduler]]></title>
        <id>https://github.com/advisories/GHSA-vjqc-g788-f378</id>
        <link href="https://github.com/advisories/GHSA-vjqc-g788-f378"/>
        <updated>2024-02-21T00:21:29.000Z</updated>
        <content type="html"><![CDATA[<p>Session Fixation Apache DolphinScheduler before version 3.2.1, which session is still valid after the password change.</p>
<p>Users are recommended to upgrade to version 3.2.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50270">https://nvd.nist.gov/vuln/detail/CVE-2023-50270</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/pull/15219">https://github.com/apache/dolphinscheduler/pull/15219</a></li>
<li><a href="https://lists.apache.org/thread/94prw8hyk60vvw7s6cs3tr708qzqlwl6">https://lists.apache.org/thread/94prw8hyk60vvw7s6cs3tr708qzqlwl6</a></li>
<li><a href="https://lists.apache.org/thread/lmnf21obyos920dnvbfpwq29c1sd2r9r">https://lists.apache.org/thread/lmnf21obyos920dnvbfpwq29c1sd2r9r</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/20/3">http://www.openwall.com/lists/oss-security/2024/02/20/3</a></li>
<li><a href="https://github.com/advisories/GHSA-vjqc-g788-f378">https://github.com/advisories/GHSA-vjqc-g788-f378</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vjqc-g788-f378</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T12:31:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Improper Certificate Validation in Apache DolphinScheduler]]></title>
        <id>https://github.com/advisories/GHSA-37gx-jqx9-fwmg</id>
        <link href="https://github.com/advisories/GHSA-37gx-jqx9-fwmg"/>
        <updated>2024-02-21T00:19:02.000Z</updated>
        <content type="html"><![CDATA[<p>Because the HttpUtils class did not verify certificates, an attacker that could perform a Man-in-the-Middle (MITM) attack on outgoing https connections could impersonate the server.</p>
<p>This issue affects Apache DolphinScheduler: before 3.2.1.</p>
<p>Users are recommended to upgrade to version 3.2.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49250">https://nvd.nist.gov/vuln/detail/CVE-2023-49250</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/pull/15288">https://github.com/apache/dolphinscheduler/pull/15288</a></li>
<li><a href="https://lists.apache.org/thread/wgs2jvhbmq8xnd6rmg0ymz73nyj7b3qn">https://lists.apache.org/thread/wgs2jvhbmq8xnd6rmg0ymz73nyj7b3qn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/20/1">http://www.openwall.com/lists/oss-security/2024/02/20/1</a></li>
<li><a href="https://github.com/advisories/GHSA-37gx-jqx9-fwmg">https://github.com/advisories/GHSA-37gx-jqx9-fwmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37gx-jqx9-fwmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T12:31:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Remote Code Execution in Apache Dolphinscheduler]]></title>
        <id>https://github.com/advisories/GHSA-qwxx-xww6-8q8m</id>
        <link href="https://github.com/advisories/GHSA-qwxx-xww6-8q8m"/>
        <updated>2024-02-21T00:18:00.000Z</updated>
        <content type="html"><![CDATA[<p>This issue affects Apache DolphinScheduler 3.0.0 before 3.2.1. We recommend users to upgrade Apache DolphinScheduler to version 3.2.1, which fixes the issue. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49109">https://nvd.nist.gov/vuln/detail/CVE-2023-49109</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/pull/14991">https://github.com/apache/dolphinscheduler/pull/14991</a></li>
<li><a href="https://lists.apache.org/thread/5b6yq2gov0fsy9x5dkvo8ws4rr45vkn8">https://lists.apache.org/thread/5b6yq2gov0fsy9x5dkvo8ws4rr45vkn8</a></li>
<li><a href="https://lists.apache.org/thread/6kgsl93vtqlbdk6otttl0d8wmlspk0m5">https://lists.apache.org/thread/6kgsl93vtqlbdk6otttl0d8wmlspk0m5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/20/4">http://www.openwall.com/lists/oss-security/2024/02/20/4</a></li>
<li><a href="https://github.com/advisories/GHSA-qwxx-xww6-8q8m">https://github.com/advisories/GHSA-qwxx-xww6-8q8m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwxx-xww6-8q8m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T12:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Broken Access Control in Spring Security With Direct Use of isFullyAuthenticated]]></title>
        <id>https://github.com/advisories/GHSA-w3w6-26f2-p474</id>
        <link href="https://github.com/advisories/GHSA-w3w6-26f2-p474"/>
        <updated>2024-02-21T00:17:30.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 6.1.x prior to 6.1.7 and versions 6.2.x prior to 6.2.2, an application is vulnerable to broken access control when it directly uses the AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;method.</p>
<p>Specifically, an application is vulnerable if:</p>
<ul>
<li>The application uses AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;directly and a null&nbsp;authentication parameter is passed to it resulting in an erroneous true&nbsp;return value.</li>
</ul>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;directly.</li>
<li>The application does not pass null&nbsp;to AuthenticationTrustResolver.isFullyAuthenticated</li>
<li>The application only uses isFullyAuthenticated&nbsp;via  Method Security <a href="https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html">https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html</a> &nbsp;or  HTTP Request Security <a href="https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html">https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22234">https://nvd.nist.gov/vuln/detail/CVE-2024-22234</a></li>
<li><a href="https://spring.io/security/cve-2024-22234">https://spring.io/security/cve-2024-22234</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/750cb30ce44d279c2f54c845d375e6a58bded569">https://github.com/spring-projects/spring-security/commit/750cb30ce44d279c2f54c845d375e6a58bded569</a></li>
<li><a href="https://github.com/advisories/GHSA-w3w6-26f2-p474">https://github.com/advisories/GHSA-w3w6-26f2-p474</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3w6-26f2-p474</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T09:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Broken Access Control in Spring Security With Direct Use of isFullyAuthenticated]]></title>
        <id>https://github.com/advisories/GHSA-w3w6-26f2-p474</id>
        <link href="https://github.com/advisories/GHSA-w3w6-26f2-p474"/>
        <updated>2024-02-21T00:17:30.000Z</updated>
        <content type="html"><![CDATA[<p>In Spring Security, versions 6.1.x prior to 6.1.7 and versions 6.2.x prior to 6.2.2, an application is vulnerable to broken access control when it directly uses the AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;method.</p>
<p>Specifically, an application is vulnerable if:</p>
<ul>
<li>The application uses AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;directly and a null&nbsp;authentication parameter is passed to it resulting in an erroneous true&nbsp;return value.</li>
</ul>
<p>An application is not vulnerable if any of the following is true:</p>
<ul>
<li>The application does not use AuthenticationTrustResolver.isFullyAuthenticated(Authentication)&nbsp;directly.</li>
<li>The application does not pass null&nbsp;to AuthenticationTrustResolver.isFullyAuthenticated</li>
<li>The application only uses isFullyAuthenticated&nbsp;via  Method Security <a href="https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html">https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html</a> &nbsp;or  HTTP Request Security <a href="https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html">https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22234">https://nvd.nist.gov/vuln/detail/CVE-2024-22234</a></li>
<li><a href="https://spring.io/security/cve-2024-22234">https://spring.io/security/cve-2024-22234</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/750cb30ce44d279c2f54c845d375e6a58bded569">https://github.com/spring-projects/spring-security/commit/750cb30ce44d279c2f54c845d375e6a58bded569</a></li>
<li><a href="https://github.com/advisories/GHSA-w3w6-26f2-p474">https://github.com/advisories/GHSA-w3w6-26f2-p474</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3w6-26f2-p474</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-20T09:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] SQL injection in pgjdbc]]></title>
        <id>https://github.com/advisories/GHSA-xfg6-62px-cxc2</id>
        <link href="https://github.com/advisories/GHSA-xfg6-62px-cxc2"/>
        <updated>2024-02-21T00:04:53.000Z</updated>
        <content type="html"><![CDATA[<p>pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.8 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1597">https://nvd.nist.gov/vuln/detail/CVE-2024-1597</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee">https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40">https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40</a></li>
<li><a href="https://github.com/advisories/GHSA-xfg6-62px-cxc2">https://github.com/advisories/GHSA-xfg6-62px-cxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfg6-62px-cxc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-19T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] SQL injection in pgjdbc]]></title>
        <id>https://github.com/advisories/GHSA-xfg6-62px-cxc2</id>
        <link href="https://github.com/advisories/GHSA-xfg6-62px-cxc2"/>
        <updated>2024-02-21T00:04:53.000Z</updated>
        <content type="html"><![CDATA[<p>pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.8 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1597">https://nvd.nist.gov/vuln/detail/CVE-2024-1597</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee">https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40">https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40</a></li>
<li><a href="https://github.com/advisories/GHSA-xfg6-62px-cxc2">https://github.com/advisories/GHSA-xfg6-62px-cxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfg6-62px-cxc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-19T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] SQL injection in pgjdbc]]></title>
        <id>https://github.com/advisories/GHSA-xfg6-62px-cxc2</id>
        <link href="https://github.com/advisories/GHSA-xfg6-62px-cxc2"/>
        <updated>2024-02-21T00:04:53.000Z</updated>
        <content type="html"><![CDATA[<p>pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.8 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1597">https://nvd.nist.gov/vuln/detail/CVE-2024-1597</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee">https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40">https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40</a></li>
<li><a href="https://github.com/advisories/GHSA-xfg6-62px-cxc2">https://github.com/advisories/GHSA-xfg6-62px-cxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfg6-62px-cxc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-19T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] SQL injection in pgjdbc]]></title>
        <id>https://github.com/advisories/GHSA-xfg6-62px-cxc2</id>
        <link href="https://github.com/advisories/GHSA-xfg6-62px-cxc2"/>
        <updated>2024-02-21T00:04:53.000Z</updated>
        <content type="html"><![CDATA[<p>pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.8 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1597">https://nvd.nist.gov/vuln/detail/CVE-2024-1597</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee">https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40">https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40</a></li>
<li><a href="https://github.com/advisories/GHSA-xfg6-62px-cxc2">https://github.com/advisories/GHSA-xfg6-62px-cxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfg6-62px-cxc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-19T15:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.postgresql:postgresql] SQL injection in pgjdbc]]></title>
        <id>https://github.com/advisories/GHSA-xfg6-62px-cxc2</id>
        <link href="https://github.com/advisories/GHSA-xfg6-62px-cxc2"/>
        <updated>2024-02-21T00:04:53.000Z</updated>
        <content type="html"><![CDATA[<p>pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.8 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1597">https://nvd.nist.gov/vuln/detail/CVE-2024-1597</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee">https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee</a></li>
<li><a href="https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40">https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40</a></li>
<li><a href="https://github.com/advisories/GHSA-xfg6-62px-cxc2">https://github.com/advisories/GHSA-xfg6-62px-cxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfg6-62px-cxc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-19T15:30:38.000Z</published>
    </entry>
</feed>