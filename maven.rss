<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-10-04T10:01:37.695Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[com.amazon.redshift:redshift-jdbc42] AWS Redshift JDBC Driver fails to validate class type during object instantiation]]></title>
        <id>https://github.com/advisories/GHSA-5c6q-f783-h888</id>
        <link href="https://github.com/advisories/GHSA-5c6q-f783-h888"/>
        <updated>2022-09-30T23:03:36.000Z</updated>
        <content type="html"><![CDATA[<p>In Amazon AWS Redshift JDBC Driver (aka amazon-redshift-jdbc-driver or redshift-jdbc42) before 2.1.0.8, the Object Factory does not check the class type when instantiating an object from a class name. This issue has been fixed in version 2.1.0.8.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41828">https://nvd.nist.gov/vuln/detail/CVE-2022-41828</a></li>
<li><a href="https://github.com/aws/amazon-redshift-jdbc-driver/commit/40b143b4698faf90c788ffa89f2d4d8d2ad068b5">https://github.com/aws/amazon-redshift-jdbc-driver/commit/40b143b4698faf90c788ffa89f2d4d8d2ad068b5</a></li>
<li><a href="https://github.com/aws/amazon-redshift-jdbc-driver/commit/9999659bbc9f3d006fb02a0bf39d5bcf3b503605">https://github.com/aws/amazon-redshift-jdbc-driver/commit/9999659bbc9f3d006fb02a0bf39d5bcf3b503605</a></li>
<li><a href="https://github.com/advisories/GHSA-5c6q-f783-h888">https://github.com/advisories/GHSA-5c6q-f783-h888</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5c6q-f783-h888</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-30T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jx7c-7mj5-9438</id>
        <link href="https://github.com/advisories/GHSA-jx7c-7mj5-9438"/>
        <updated>2022-09-30T06:30:12.000Z</updated>
        <content type="html"><![CDATA[<p>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43980">https://nvd.nist.gov/vuln/detail/CVE-2021-43980</a></li>
<li><a href="https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3">https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/28/1">http://www.openwall.com/lists/oss-security/2022/09/28/1</a></li>
<li><a href="https://github.com/advisories/GHSA-jx7c-7mj5-9438">https://github.com/advisories/GHSA-jx7c-7mj5-9438</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jx7c-7mj5-9438</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jx7c-7mj5-9438</id>
        <link href="https://github.com/advisories/GHSA-jx7c-7mj5-9438"/>
        <updated>2022-09-30T06:30:12.000Z</updated>
        <content type="html"><![CDATA[<p>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43980">https://nvd.nist.gov/vuln/detail/CVE-2021-43980</a></li>
<li><a href="https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3">https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/28/1">http://www.openwall.com/lists/oss-security/2022/09/28/1</a></li>
<li><a href="https://github.com/advisories/GHSA-jx7c-7mj5-9438">https://github.com/advisories/GHSA-jx7c-7mj5-9438</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jx7c-7mj5-9438</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jx7c-7mj5-9438</id>
        <link href="https://github.com/advisories/GHSA-jx7c-7mj5-9438"/>
        <updated>2022-09-30T06:30:12.000Z</updated>
        <content type="html"><![CDATA[<p>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43980">https://nvd.nist.gov/vuln/detail/CVE-2021-43980</a></li>
<li><a href="https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3">https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/28/1">http://www.openwall.com/lists/oss-security/2022/09/28/1</a></li>
<li><a href="https://github.com/advisories/GHSA-jx7c-7mj5-9438">https://github.com/advisories/GHSA-jx7c-7mj5-9438</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jx7c-7mj5-9438</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jx7c-7mj5-9438</id>
        <link href="https://github.com/advisories/GHSA-jx7c-7mj5-9438"/>
        <updated>2022-09-30T06:30:12.000Z</updated>
        <content type="html"><![CDATA[<p>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43980">https://nvd.nist.gov/vuln/detail/CVE-2021-43980</a></li>
<li><a href="https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3">https://lists.apache.org/thread/3jjqbsp6j88b198x5rmg99b1qr8ht3g3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/09/28/1">http://www.openwall.com/lists/oss-security/2022/09/28/1</a></li>
<li><a href="https://github.com/advisories/GHSA-jx7c-7mj5-9438">https://github.com/advisories/GHSA-jx7c-7mj5-9438</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jx7c-7mj5-9438</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.xuxueli:xxl-job-core] XXL-JOB contains a Command execution vulnerability in background tasks ]]></title>
        <id>https://github.com/advisories/GHSA-m54f-rp6r-rrrm</id>
        <link href="https://github.com/advisories/GHSA-m54f-rp6r-rrrm"/>
        <updated>2022-09-30T06:23:01.000Z</updated>
        <content type="html"><![CDATA[<p>XXL-JOB versions 2.2.0 and prior contain a Command execution vulnerability in background tasks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40929">https://nvd.nist.gov/vuln/detail/CVE-2022-40929</a></li>
<li><a href="https://github.com/xuxueli/xxl-job/issues/2979">https://github.com/xuxueli/xxl-job/issues/2979</a></li>
<li><a href="https://github.com/advisories/GHSA-m54f-rp6r-rrrm">https://github.com/advisories/GHSA-m54f-rp6r-rrrm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m54f-rp6r-rrrm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-29T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.wire:lithium] Lithium vulnerable to Cross Site Scripting in provided Swagger-UI]]></title>
        <id>https://github.com/advisories/GHSA-f36p-42jv-8rh2</id>
        <link href="https://github.com/advisories/GHSA-f36p-42jv-8rh2"/>
        <updated>2022-09-30T04:53:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A  XSS vulnerability in the provided (outdated) Swagger-UI is exploitable in applications using lithium with Swagger-UI enabled.
This allows an attacker gain Remote Code Execution (RCE) and potentially exfiltrate secrets in the context of this swagger session.</p>
<h3 id="patches">Patches</h3>
<p>The used swagger-ui was updated by switching to the latest version of dropwizard-swagger in 8b9b406d608fe482ec0e7adf8705834bca92d7df</p>
<h3 id="workarounds">Workarounds</h3>
<p>The risk of injected external content can be reduced by setting up a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content-Security-Policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.vidocsecurity.com/blog/hacking-swagger-ui-from-xss-to-account-takeovers/">https://www.vidocsecurity.com/blog/hacking-swagger-ui-from-xss-to-account-takeovers/</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>We thank <a href="https://www.linkedin.com/in/mohit-kumar-4ab6b3bb">Mohit Kumar</a> for reporting this vulnerability!</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/wireapp/lithium/security/advisories/GHSA-f36p-42jv-8rh2">https://github.com/wireapp/lithium/security/advisories/GHSA-f36p-42jv-8rh2</a></li>
<li><a href="https://github.com/wireapp/lithium/commit/8b9b406d608fe482ec0e7adf8705834bca92d7df">https://github.com/wireapp/lithium/commit/8b9b406d608fe482ec0e7adf8705834bca92d7df</a></li>
<li><a href="https://github.com/advisories/GHSA-f36p-42jv-8rh2">https://github.com/advisories/GHSA-f36p-42jv-8rh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f36p-42jv-8rh2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T04:53:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.matrix.android:matrix-android-sdk2] matrix-android-sdk2 vulnerable to Olm/Megolm protocol confusion]]></title>
        <id>https://github.com/advisories/GHSA-fpgf-pjjv-2qgm</id>
        <link href="https://github.com/advisories/GHSA-fpgf-pjjv-2qgm"/>
        <updated>2022-09-30T04:37:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker cooperating with a malicious homeserver can construct messages that legitimately appear to have come from another person, without any indication such as a grey shield. </p>
<p>Additionally, a sophisticated attacker cooperating with a malicious homeserver could employ this vulnerability to perform a targeted attack in order to send fake to-device messages appearing to originate from another user. This can allow, for example, to inject the key backup secret during a self-verification, to make a targeted device start using a malicious key backup spoofed by the homeserver. matrix-android-sdk2 would then additionally sign such a key backup with its device key, spilling trust over to other devices trusting the matrix-android-sdk2 device.</p>
<p>These attacks are possible due to a protocol confusion vulnerability that accepts to-device messages encrypted with Megolm instead of Olm.</p>
<h3 id="patches">Patches</h3>
<p>matrix-android-sdk2 has been modified to only accept Olm-encrypted to-device messages and to stop signing backups on a successful decryption.</p>
<p>Out of caution, several other checks have been audited or added:</p>
<ul>
<li>Cleartext <code>m.room_key</code>, <code>m.forwarded_room_key</code> and <code>m.secret.send</code> to_device messages are discarded.</li>
<li>Secrets received from untrusted devices are discarded.</li>
<li>Key backups are only usable if they have a valid signature from a trusted device (no more local trust, or trust-on-decrypt).</li>
<li>The origin of a to-device message should only be determined by observing the Olm session which managed to decrypt the message, and not by using claimed sender_key, user_id, or any other fields controllable by the homeserver.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>As this attack requires coordination between a malicious home server and an attacker, if you trust your home server no particular workaround is needed.  Notice that the backup spoofing attack is a particularly sophisticated targeted attack.</p>
<p>We are not aware of this attack being used in the wild, though specifying a false positive-free way of noticing malicious key backups key is challenging.</p>
<p>As an abundance of caution, to avoid malicious backup attacks, you should not verify your new logins using emoji/QR verifications methods until patched. Prefer using verify with passphrase.</p>
<h3 id="references">References</h3>
<p>Blog post: <a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/security/advisories/GHSA-fpgf-pjjv-2qgm">https://github.com/matrix-org/matrix-android-sdk2/security/advisories/GHSA-fpgf-pjjv-2qgm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39248">https://nvd.nist.gov/vuln/detail/CVE-2022-39248</a></li>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/commit/77df720a238d17308deab83ecaa37f7a4740a17e">https://github.com/matrix-org/matrix-android-sdk2/commit/77df720a238d17308deab83ecaa37f7a4740a17e</a></li>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/releases/tag/v1.5.1">https://github.com/matrix-org/matrix-android-sdk2/releases/tag/v1.5.1</a></li>
<li><a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>
<li><a href="https://github.com/advisories/GHSA-fpgf-pjjv-2qgm">https://github.com/advisories/GHSA-fpgf-pjjv-2qgm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpgf-pjjv-2qgm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T04:37:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.matrix.android:matrix-android-sdk2] matrix-android-sdk2 vulnerable to impersonation via forwarded Megolm sessions]]></title>
        <id>https://github.com/advisories/GHSA-2pvj-p485-cp3m</id>
        <link href="https://github.com/advisories/GHSA-2pvj-p485-cp3m"/>
        <updated>2022-09-30T04:33:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.</p>
<p>This attack is possible due to the matrix-android-sdk2 implementing a too permissive <a href="https://spec.matrix.org/v1.3/client-server-api/#key-requests">key forwarding</a> strategy on the receiving end.</p>
<p>Key forwarding is a mechanism allowing clients to recover from “unable to decrypt” messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.</p>
<h3 id="patches">Patches</h3>
<p>The default policy for accepting key forwards has been made more strict in the matrix-android-sdk2. The matrix-android-sdk2 will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.</p>
<p>A unique exception to this rule is with the experimental <a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3061">MSC3061</a>, that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window. </p>
<p>The SDK now sets a <code>trusted</code> flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with <code>trusted = false</code> are decorated appropriately (for example, by showing a warning for such messages).</p>
<h3 id="workarounds">Workarounds</h3>
<p>Current users of the SDK can disable key forwarding in their forks using <code>CryptoService#enableKeyGossiping(enable: Boolean)</code>.</p>
<h3 id="references">References</h3>
<p>Blog post: <a href="https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/security/advisories/GHSA-2pvj-p485-cp3m">https://github.com/matrix-org/matrix-android-sdk2/security/advisories/GHSA-2pvj-p485-cp3m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39246">https://nvd.nist.gov/vuln/detail/CVE-2022-39246</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3061">https://github.com/matrix-org/matrix-spec-proposals/pull/3061</a></li>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/commit/77df720a238d17308deab83ecaa37f7a4740a17e">https://github.com/matrix-org/matrix-android-sdk2/commit/77df720a238d17308deab83ecaa37f7a4740a17e</a></li>
<li><a href="https://github.com/matrix-org/matrix-android-sdk2/releases/tag/v1.5.1">https://github.com/matrix-org/matrix-android-sdk2/releases/tag/v1.5.1</a></li>
<li><a href="https://github.com/advisories/GHSA-2pvj-p485-cp3m">https://github.com/advisories/GHSA-2pvj-p485-cp3m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2pvj-p485-cp3m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T04:33:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.zaxxer:nuprocess] NuProcess vulnerable to command-line injection through insertion of NUL character(s)]]></title>
        <id>https://github.com/advisories/GHSA-cxgf-v2p8-7ph7</id>
        <link href="https://github.com/advisories/GHSA-cxgf-v2p8-7ph7"/>
        <updated>2022-09-30T04:29:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In all the versions of NuProcess where it forks processes by using the JVM's Java_java_lang_UNIXProcess_forkAndExec method (1.2.0+), attackers can use NUL characters in their strings to perform command line injection. Java's ProcessBuilder isn't vulnerable because of a check in ProcessBuilder.start. NuProcess is missing that check.</p>
<p>This vulnerability can only be exploited to inject command line arguments on Linux.</p>
<ul>
<li>On macOS, any argument with a NUL character is truncated at that character. This means the malicious arguments are never seen by the started process.</li>
<li>On Windows, the entire command line is truncated at the first NUL character. This means the malicious arguments, and any intentional arguments provided after them, are never seen by the started process.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>2.0.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users of the library can sanitize command strings to remove NUL characters prior to passing them to NuProcess for execution.</p>
<h3 id="references">References</h3>
<p>None.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/brettwooldridge/NuProcess/security/advisories/GHSA-cxgf-v2p8-7ph7">https://github.com/brettwooldridge/NuProcess/security/advisories/GHSA-cxgf-v2p8-7ph7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39243">https://nvd.nist.gov/vuln/detail/CVE-2022-39243</a></li>
<li><a href="https://github.com/brettwooldridge/NuProcess/pull/143">https://github.com/brettwooldridge/NuProcess/pull/143</a></li>
<li><a href="https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868">https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868</a></li>
<li><a href="https://github.com/advisories/GHSA-cxgf-v2p8-7ph7">https://github.com/advisories/GHSA-cxgf-v2p8-7ph7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxgf-v2p8-7ph7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-30T04:29:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-proxy] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-broker] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-proxy] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-broker] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-proxy] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-broker] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-proxy] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pulsar:pulsar-broker] Apache Pulsar Brokers and Proxies vulnerable to Improper Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-j3qw-g67q-7m64</id>
        <link href="https://github.com/advisories/GHSA-j3qw-g67q-7m64"/>
        <updated>2022-09-30T04:26:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Pulsar Brokers and Proxies create an internal Pulsar Admin Client that does not verify peer TLS certificates, even when tlsAllowInsecureConnection is disabled via configuration. The Pulsar Admin Client's intra-cluster and geo-replication HTTPS connections are vulnerable to man in the middle attacks, which could leak authentication data, configuration data, and any other data sent by these clients. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. This issue affects Apache Pulsar Broker and Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-33683">https://nvd.nist.gov/vuln/detail/CVE-2022-33683</a></li>
<li><a href="https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x">https://lists.apache.org/thread/42v5rsxj36r3nhfxhmhb2x12r5jmvx3x</a></li>
<li><a href="https://github.com/advisories/GHSA-j3qw-g67q-7m64">https://github.com/advisories/GHSA-j3qw-g67q-7m64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3qw-g67q-7m64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.codehaus.jettison:jettison] Jettison memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-x27m-9w8j-5vcw</id>
        <link href="https://github.com/advisories/GHSA-x27m-9w8j-5vcw"/>
        <updated>2022-09-30T03:04:17.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40150">https://nvd.nist.gov/vuln/detail/CVE-2022-40150</a></li>
<li><a href="https://github.com/jettison-json/jettison/issues/45">https://github.com/jettison-json/jettison/issues/45</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46549">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46549</a></li>
<li><a href="https://github.com/advisories/GHSA-x27m-9w8j-5vcw">https://github.com/advisories/GHSA-x27m-9w8j-5vcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x27m-9w8j-5vcw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.scala-lang:scala-library] Scala subject to file deletion, code execution due to Java deserialization chain with LazyList object deserialization]]></title>
        <id>https://github.com/advisories/GHSA-8qv5-68g4-248j</id>
        <link href="https://github.com/advisories/GHSA-8qv5-68g4-248j"/>
        <updated>2022-09-30T02:27:49.000Z</updated>
        <content type="html"><![CDATA[<p>Scala 2.13.x before 2.13.9 has a Java deserialization chain in its JAR file. On its own, it cannot be exploited. There is only a risk in conjunction with LazyList object deserialization within an application. In such situations, it allows attackers to erase contents of arbitrary files, make network connections, or possibly run arbitrary code (specifically, Function0 functions) via a gadget chain.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36944">https://nvd.nist.gov/vuln/detail/CVE-2022-36944</a></li>
<li><a href="https://github.com/scala/scala/pull/10118">https://github.com/scala/scala/pull/10118</a></li>
<li><a href="https://www.scala-lang.org/download/">https://www.scala-lang.org/download/</a></li>
<li><a href="https://github.com/scala/scala/releases/tag/v2.13.9">https://github.com/scala/scala/releases/tag/v2.13.9</a></li>
<li><a href="https://github.com/advisories/GHSA-8qv5-68g4-248j">https://github.com/advisories/GHSA-8qv5-68g4-248j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qv5-68g4-248j</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-25T00:00:20.000Z</published>
    </entry>
</feed>