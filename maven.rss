<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-10-09T06:01:41.892Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.owasp.antisamy:antisamy] mXSS in AntiSamy]]></title>
        <id>https://github.com/advisories/GHSA-pcf2-gh6g-h5r2</id>
        <link href="https://github.com/advisories/GHSA-pcf2-gh6g-h5r2"/>
        <updated>2023-10-09T00:42:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="impact">Impact</h1>
<p>There is a potential for a mutation XSS (mXSS) vulnerability in AntiSamy caused by flawed parsing of the HTML being sanitized. To be subject to this vulnerability the <code>preserveComments</code> directive must be enabled in your policy file and also allow for certain tags at the same time. As a result, certain crafty inputs can result in elements in comment tags being interpreted as executable when using AntiSamy's sanitized output.</p>
<h1 id="patches">Patches</h1>
<p>Patched in AntiSamy 1.7.4 and later. See important remediation details in the reference given below.</p>
<h1 id="workarounds">Workarounds</h1>
<p>If you cannot upgrade to a fixed version of the library, the following mitigation can be applied until you can upgrade: Manually edit your AntiSamy policy file (e.g., antisamy.xml) by deleting the <code>preserveComments</code> directive or setting its value to <code>false</code>,  if present. Also it would be useful to make AntiSamy remove the <code>noscript</code> tag by adding this in your tag definitions under the <code>&lt;tagrules&gt;</code> node (or deleting it entirely if present):</p>
<pre><code class="language-xml">&lt;tag name="noscript" action="remove"/&gt;
</code></pre>
<p>As the previously mentioned policy settings are preconditions for the mXSS attack to work, changing them as recommended should be sufficient to protect you against this vulnerability when using a vulnerable version of this library. However, the existing bug would still be present in AntiSamy or its parser dependency (neko-htmlunit). The safety of this workaround relies on configurations that may change in the future and don't address the root cause of the vulnerability. As such, it is strongly recommended to upgrade to a fixed version of AntiSamy.</p>
<h1 id="for-more-information">For more information</h1>
<p>If you have any questions or comments about this advisory:</p>
<p>Email one of the project co-leaders, listed on the <a href="https://owasp.org/www-project-antisamy/">OWASP AntiSamy project</a> page, under "Leaders".</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nahsra/antisamy/security/advisories/GHSA-pcf2-gh6g-h5r2">https://github.com/nahsra/antisamy/security/advisories/GHSA-pcf2-gh6g-h5r2</a></li>
<li><a href="https://github.com/nahsra/antisamy/releases/tag/v1.7.4">https://github.com/nahsra/antisamy/releases/tag/v1.7.4</a></li>
<li><a href="https://github.com/advisories/GHSA-pcf2-gh6g-h5r2">https://github.com/advisories/GHSA-pcf2-gh6g-h5r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pcf2-gh6g-h5r2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-09T00:42:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graniteds:granite-core] GraniteDS Insecure Deserialization]]></title>
        <id>https://github.com/advisories/GHSA-8m35-r25c-qr56</id>
        <link href="https://github.com/advisories/GHSA-8m35-r25c-qr56"/>
        <updated>2023-10-06T21:21:35.000Z</updated>
        <content type="html"><![CDATA[<p>The Java implementation of GraniteDS, version 3.1.1.GA, AMF3 deserializers derives class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-3199">https://nvd.nist.gov/vuln/detail/CVE-2017-3199</a></li>
<li><a href="https://codewhitesec.blogspot.com/2017/04/amf.html">https://codewhitesec.blogspot.com/2017/04/amf.html</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/307983">https://www.kb.cert.org/vuls/id/307983</a></li>
<li><a href="http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution">http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution</a></li>
<li><a href="https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382">https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382</a></li>
<li><a href="https://github.com/advisories/GHSA-8m35-r25c-qr56">https://github.com/advisories/GHSA-8m35-r25c-qr56</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8m35-r25c-qr56</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:28:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.flex.blazeds:flex-messaging-remoting] Apache Flex BlazeDS unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-w8v7-prhw-xjpw</id>
        <link href="https://github.com/advisories/GHSA-w8v7-prhw-xjpw"/>
        <updated>2023-10-06T21:11:50.000Z</updated>
        <content type="html"><![CDATA[<p>Previous versions of Apache Flex BlazeDS (4.7.2 and earlier) did not restrict which types were allowed for AMF(X) object deserialization by default. During the deserialization process code is executed that for several known types has undesired side-effects. Other, unknown types may also exhibit such behaviors. One vector in the Java standard library exists that allows an attacker to trigger possibly further exploitable Java deserialization of untrusted data. Other known vectors in third party libraries can be used to trigger remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-5641">https://nvd.nist.gov/vuln/detail/CVE-2017-5641</a></li>
<li><a href="https://issues.apache.org/jira/browse/FLEX-35290">https://issues.apache.org/jira/browse/FLEX-35290</a></li>
<li><a href="https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/307983">https://www.kb.cert.org/vuls/id/307983</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-22-506/">https://www.zerodayinitiative.com/advisories/ZDI-22-506/</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-22-507/">https://www.zerodayinitiative.com/advisories/ZDI-22-507/</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E">http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E</a></li>
<li><a href="https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273">https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273</a></li>
<li><a href="https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383">https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383</a></li>
<li><a href="https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627">https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627</a></li>
<li><a href="https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1">https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1</a></li>
<li><a href="https://github.com/advisories/GHSA-w8v7-prhw-xjpw">https://github.com/advisories/GHSA-w8v7-prhw-xjpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8v7-prhw-xjpw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:02:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.flex.blazeds:flex-messaging-core] Apache Flex BlazeDS unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-w8v7-prhw-xjpw</id>
        <link href="https://github.com/advisories/GHSA-w8v7-prhw-xjpw"/>
        <updated>2023-10-06T21:11:50.000Z</updated>
        <content type="html"><![CDATA[<p>Previous versions of Apache Flex BlazeDS (4.7.2 and earlier) did not restrict which types were allowed for AMF(X) object deserialization by default. During the deserialization process code is executed that for several known types has undesired side-effects. Other, unknown types may also exhibit such behaviors. One vector in the Java standard library exists that allows an attacker to trigger possibly further exploitable Java deserialization of untrusted data. Other known vectors in third party libraries can be used to trigger remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-5641">https://nvd.nist.gov/vuln/detail/CVE-2017-5641</a></li>
<li><a href="https://issues.apache.org/jira/browse/FLEX-35290">https://issues.apache.org/jira/browse/FLEX-35290</a></li>
<li><a href="https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/307983">https://www.kb.cert.org/vuls/id/307983</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-22-506/">https://www.zerodayinitiative.com/advisories/ZDI-22-506/</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-22-507/">https://www.zerodayinitiative.com/advisories/ZDI-22-507/</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E">http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E</a></li>
<li><a href="https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273">https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273</a></li>
<li><a href="https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383">https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383</a></li>
<li><a href="https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627">https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627</a></li>
<li><a href="https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1">https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1</a></li>
<li><a href="https://github.com/advisories/GHSA-w8v7-prhw-xjpw">https://github.com/advisories/GHSA-w8v7-prhw-xjpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8v7-prhw-xjpw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:02:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform] XWiki XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6mvr-cq72-f66v</id>
        <link href="https://github.com/advisories/GHSA-6mvr-cq72-f66v"/>
        <updated>2023-10-06T18:04:37.000Z</updated>
        <content type="html"><![CDATA[<p>The Image Import function in XWiki through 10.7 has XSS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16277">https://nvd.nist.gov/vuln/detail/CVE-2018-16277</a></li>
<li><a href="https://mksec.tk/index.php/2018/09/27/cve-2018-16277-xss-in-xwiki/">https://mksec.tk/index.php/2018/09/27/cve-2018-16277-xss-in-xwiki/</a></li>
<li><a href="https://github.com/advisories/GHSA-6mvr-cq72-f66v">https://github.com/advisories/GHSA-6mvr-cq72-f66v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mvr-cq72-f66v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:59:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.keycloak:keycloak-parent] Keycloak Improper Bruteforce Detection]]></title>
        <id>https://github.com/advisories/GHSA-85v8-vx4w-q684</id>
        <link href="https://github.com/advisories/GHSA-85v8-vx4w-q684"/>
        <updated>2023-10-06T17:29:16.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Keycloak 4.2.1.Final, 4.3.0.Final. When TOPT enabled, an improper implementation of the Brute Force detection algorithm will not enforce its protection measures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-14657">https://nvd.nist.gov/vuln/detail/CVE-2018-14657</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3592">https://access.redhat.com/errata/RHSA-2018:3592</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3593">https://access.redhat.com/errata/RHSA-2018:3593</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3595">https://access.redhat.com/errata/RHSA-2018:3595</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657</a></li>
<li><a href="https://github.com/advisories/GHSA-85v8-vx4w-q684">https://github.com/advisories/GHSA-85v8-vx4w-q684</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85v8-vx4w-q684</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:12:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.keycloak:keycloak-services] Keycloak Authentication Error]]></title>
        <id>https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</id>
        <link href="https://github.com/advisories/GHSA-xvv8-8wh9-9fh2"/>
        <updated>2023-10-06T17:25:02.000Z</updated>
        <content type="html"><![CDATA[<p>It was found that SAML authentication in Keycloak 3.4.3.Final incorrectly authenticated expired certificates. A malicious user could use this to access unauthorized data or possibly conduct further attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-10894">https://nvd.nist.gov/vuln/detail/CVE-2018-10894</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3592">https://access.redhat.com/errata/RHSA-2018:3592</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3593">https://access.redhat.com/errata/RHSA-2018:3593</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3595">https://access.redhat.com/errata/RHSA-2018:3595</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0877">https://access.redhat.com/errata/RHSA-2019:0877</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894</a></li>
<li><a href="https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e">https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e</a></li>
<li><a href="https://github.com/advisories/GHSA-xvv8-8wh9-9fh2">https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:34:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.keycloak:keycloak-saml-adapter-core] Keycloak Authentication Error]]></title>
        <id>https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</id>
        <link href="https://github.com/advisories/GHSA-xvv8-8wh9-9fh2"/>
        <updated>2023-10-06T17:25:02.000Z</updated>
        <content type="html"><![CDATA[<p>It was found that SAML authentication in Keycloak 3.4.3.Final incorrectly authenticated expired certificates. A malicious user could use this to access unauthorized data or possibly conduct further attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-10894">https://nvd.nist.gov/vuln/detail/CVE-2018-10894</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3592">https://access.redhat.com/errata/RHSA-2018:3592</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3593">https://access.redhat.com/errata/RHSA-2018:3593</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3595">https://access.redhat.com/errata/RHSA-2018:3595</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0877">https://access.redhat.com/errata/RHSA-2019:0877</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894</a></li>
<li><a href="https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e">https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e</a></li>
<li><a href="https://github.com/advisories/GHSA-xvv8-8wh9-9fh2">https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:34:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.mingsoft:ms-mcms] Mingsoft MCMS CSRF vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m246-pv28-4r6f</id>
        <link href="https://github.com/advisories/GHSA-m246-pv28-4r6f"/>
        <updated>2023-10-06T16:19:53.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in MCMS 4.6.5. There is a CSRF vulnerability that can add an administrator account via ms/basic/manager/save.do.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-17366">https://nvd.nist.gov/vuln/detail/CVE-2018-17366</a></li>
<li><a href="https://gitee.com/mingSoft/MCMS/issues/IM1DA">https://gitee.com/mingSoft/MCMS/issues/IM1DA</a></li>
<li><a href="https://github.com/advisories/GHSA-m246-pv28-4r6f">https://github.com/advisories/GHSA-m246-pv28-4r6f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m246-pv28-4r6f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:00:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.openrefine:main] OpenRefine Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-f6fv-fjg8-4m6w</id>
        <link href="https://github.com/advisories/GHSA-f6fv-fjg8-4m6w"/>
        <updated>2023-10-06T15:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>OpenRefine before 3.2 beta allows directory traversal via a relative pathname in a ZIP archive.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19859">https://nvd.nist.gov/vuln/detail/CVE-2018-19859</a></li>
<li><a href="https://github.com/OpenRefine/OpenRefine/issues/1840">https://github.com/OpenRefine/OpenRefine/issues/1840</a></li>
<li><a href="https://github.com/OpenRefine/OpenRefine/pull/1901">https://github.com/OpenRefine/OpenRefine/pull/1901</a></li>
<li><a href="https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656">https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656</a></li>
<li><a href="https://github.com/advisories/GHSA-f6fv-fjg8-4m6w">https://github.com/advisories/GHSA-f6fv-fjg8-4m6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6fv-fjg8-4m6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:14:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ro.pippo:pippo-session] Pippo RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h892-x453-86wc</id>
        <link href="https://github.com/advisories/GHSA-h892-x453-86wc"/>
        <updated>2023-10-06T01:08:09.000Z</updated>
        <content type="html"><![CDATA[<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18240">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>
<li><a href="https://github.com/pippo-java/pippo/issues/454">https://github.com/pippo-java/pippo/issues/454</a></li>
<li><a href="https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>
<li><a href="https://github.com/advisories/GHSA-h892-x453-86wc">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h892-x453-86wc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:19:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ro.pippo:pippo-core] Pippo RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h892-x453-86wc</id>
        <link href="https://github.com/advisories/GHSA-h892-x453-86wc"/>
        <updated>2023-10-06T01:08:09.000Z</updated>
        <content type="html"><![CDATA[<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18240">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>
<li><a href="https://github.com/pippo-java/pippo/issues/454">https://github.com/pippo-java/pippo/issues/454</a></li>
<li><a href="https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>
<li><a href="https://github.com/advisories/GHSA-h892-x453-86wc">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h892-x453-86wc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:19:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud]]></title>
        <id>https://github.com/advisories/GHSA-qw22-8w9r-864h</id>
        <link href="https://github.com/advisories/GHSA-qw22-8w9r-864h"/>
        <updated>2023-10-05T20:55:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>
<h3 id="details">Details</h3>
<p>See <a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>
<p>This logic violates point 3 of <a href="https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>
<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. 
 <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>
<h3 id="poc">PoC</h3>
<p>Should probably be:</p>
<pre><code class="language-java">                return issuer.equalsIgnoreCase(iss) &amp;&amp;
                        audiences.contains(clientId) &amp;&amp;
                                validateAzp(claims, clientId, audiences);
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>
<li><a href="https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>
<li><a href="https://github.com/advisories/GHSA-qw22-8w9r-864h">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw22-8w9r-864h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-05T20:55:14.000Z</published>
    </entry>
</feed>