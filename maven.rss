<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-02T12:01:32.961Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds] Stored Cross-site Scripting vulnerability in Jenkins Promoted Builds Plugin]]></title>
        <id>https://github.com/advisories/GHSA-v98r-gjgc-m9pf</id>
        <link href="https://github.com/advisories/GHSA-v98r-gjgc-m9pf"/>
        <updated>2022-12-01T23:59:35.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins promoted builds Plugin 873.v6149db_d64130 and earlier, except 3.10.1, does not escape the name and description of Promoted Build parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of these vulnerabilities requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29045">https://nvd.nist.gov/vuln/detail/CVE-2022-29045</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://github.com/advisories/GHSA-v98r-gjgc-m9pf">https://github.com/advisories/GHSA-v98r-gjgc-m9pf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v98r-gjgc-m9pf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] Stored Cross-site Scripting vulnerability in Jenkins Subversion Plugin]]></title>
        <id>https://github.com/advisories/GHSA-wpr6-qvcq-8269</id>
        <link href="https://github.com/advisories/GHSA-wpr6-qvcq-8269"/>
        <updated>2022-12-01T23:57:36.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Subversion Plugin 2.15.3 and earlier does not escape the name and description of List Subversion tags (and more) parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the "Build With Parameters" and "Parameters" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the "Build With Parameters" and "Parameters" pages since 2.44 and LTS 2.32.2 as part of the <a href="https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions">SECURITY-353 / CVE-2017-2601</a> fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29046">https://nvd.nist.gov/vuln/detail/CVE-2022-29046</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617</a></li>
<li><a href="https://support.apple.com/kb/HT213345">https://support.apple.com/kb/HT213345</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/Jul/18">http://seclists.org/fulldisclosure/2022/Jul/18</a></li>
<li><a href="https://github.com/advisories/GHSA-wpr6-qvcq-8269">https://github.com/advisories/GHSA-wpr6-qvcq-8269</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpr6-qvcq-8269</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:subversion] CSRF vulnerability in Jenkins Subversion Plugin]]></title>
        <id>https://github.com/advisories/GHSA-m5cw-c64p-77h6</id>
        <link href="https://github.com/advisories/GHSA-m5cw-c64p-77h6"/>
        <updated>2022-12-01T23:49:29.000Z</updated>
        <content type="html"><![CDATA[<p>Subversion Plugin 2.15.3 and earlier does not require POST requests for several form validation methods, resulting in cross-site request forgery (CSRF) vulnerabilities.</p>
<p>These vulnerabilities allow attackers to connect to an attacker-specified URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29048">https://nvd.nist.gov/vuln/detail/CVE-2022-29048</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2075">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2075</a></li>
<li><a href="https://support.apple.com/kb/HT213345">https://support.apple.com/kb/HT213345</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/Jul/18">http://seclists.org/fulldisclosure/2022/Jul/18</a></li>
<li><a href="https://github.com/jenkinsci/subversion-plugin/commit/882a7d359f6ac73c53d787bff4d62eba837001ea">https://github.com/jenkinsci/subversion-plugin/commit/882a7d359f6ac73c53d787bff4d62eba837001ea</a></li>
<li><a href="https://github.com/advisories/GHSA-m5cw-c64p-77h6">https://github.com/advisories/GHSA-m5cw-c64p-77h6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5cw-c64p-77h6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds] Promotion names in Jenkins promoted builds Plugin are not validated when using Job DSL]]></title>
        <id>https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</id>
        <link href="https://github.com/advisories/GHSA-jmxr-w2jc-qp7w"/>
        <updated>2022-12-01T23:45:19.000Z</updated>
        <content type="html"><![CDATA[<p>promoted builds Plugin provides dedicated support for defining promotions using <a href="https://plugins.jenkins.io/job-dsl">Job DSL Plugin</a>.</p>
<p>promoted builds Plugin 873.v6149db_d64130 and earlier does not validate the names of promotions defined in Job DSL. This allows attackers with Job/Configure permission to create a promotion with an unsafe name. As a result, the promotion name could be used for cross-site scripting (XSS) or to replace other <code>config.xml</code> files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29049">https://nvd.nist.gov/vuln/detail/CVE-2022-29049</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2655">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2655</a></li>
<li><a href="https://github.com/jenkinsci/promoted-builds-plugin/commit/d6fd95688ae2052bf9ac7158bc2579c755167fe0">https://github.com/jenkinsci/promoted-builds-plugin/commit/d6fd95688ae2052bf9ac7158bc2579c755167fe0</a></li>
<li><a href="https://github.com/advisories/GHSA-jmxr-w2jc-qp7w">https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmxr-w2jc-qp7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-13T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:google-compute-engine] Private key stored in plain text by Jenkins Google Compute Engine Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vhxq-9mpv-gj87</id>
        <link href="https://github.com/advisories/GHSA-vhxq-9mpv-gj87"/>
        <updated>2022-12-01T23:42:50.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Google Compute Engine Plugin 4.3.8 and earlier stores private keys unencrypted in cloud agent <code>config.xml</code> files on the Jenkins controller where they can be viewed by users with Agent/Extended Read permission, or access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29052">https://nvd.nist.gov/vuln/detail/CVE-2022-29052</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2045">https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2045</a></li>
<li><a href="https://github.com/jenkinsci/google-compute-engine-plugin/commit/16d2ae71a1b34c81db1d74f83c41577536e5256f">https://github.com/jenkinsci/google-compute-engine-plugin/commit/16d2ae71a1b34c81db1d74f83c41577536e5256f</a></li>
<li><a href="https://github.com/advisories/GHSA-vhxq-9mpv-gj87">https://github.com/advisories/GHSA-vhxq-9mpv-gj87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vhxq-9mpv-gj87</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-13T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:pipeline-build-step] Password parameter default values exposed by Jenkins Pipeline: Build Step Plugin]]></title>
        <id>https://github.com/advisories/GHSA-g84f-cmc8-682c</id>
        <link href="https://github.com/advisories/GHSA-g84f-cmc8-682c"/>
        <updated>2022-12-01T23:40:03.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Pipeline: Build Step Plugin 2.15 and earlier reveals password parameter default values when generating a pipeline script using the Pipeline Snippet Generator, allowing attackers with Item/Read permission to retrieve the default password parameter value from jobs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25184">https://nvd.nist.gov/vuln/detail/CVE-2022-25184</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2519">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2519</a></li>
<li><a href="https://github.com/jenkinsci/pipeline-build-step-plugin/commit/c06f65425fe9696d2237f591959dd4b5c6083fd9">https://github.com/jenkinsci/pipeline-build-step-plugin/commit/c06f65425fe9696d2237f591959dd4b5c6083fd9</a></li>
<li><a href="https://github.com/advisories/GHSA-g84f-cmc8-682c">https://github.com/advisories/GHSA-g84f-cmc8-682c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g84f-cmc8-682c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:generic-webhook-trigger] Stored XSS vulnerability in Jenkins Generic Webhook Trigger Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qqwx-hcp6-25vr</id>
        <link href="https://github.com/advisories/GHSA-qqwx-hcp6-25vr"/>
        <updated>2022-12-01T23:38:26.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Generic Webhook Trigger Plugin 1.81 and earlier does not escape the build cause when using the webhook, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to trigger builds using the webhook.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25185">https://nvd.nist.gov/vuln/detail/CVE-2022-25185</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2592">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2592</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/02/15/2">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>
<li><a href="https://github.com/jenkinsci/generic-webhook-trigger-plugin/commit/b289c32aa74439f3a8deb7674128a3a6fd90a61c">https://github.com/jenkinsci/generic-webhook-trigger-plugin/commit/b289c32aa74439f3a8deb7674128a3a6fd90a61c</a></li>
<li><a href="https://github.com/advisories/GHSA-qqwx-hcp6-25vr">https://github.com/advisories/GHSA-qqwx-hcp6-25vr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qqwx-hcp6-25vr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.datapipe.jenkins.plugins:hashicorp-vault-plugin] Agent-to-controller security bypass in Jenkins HashiCorp Vault Plugin]]></title>
        <id>https://github.com/advisories/GHSA-fm6q-97gw-c4wh</id>
        <link href="https://github.com/advisories/GHSA-fm6q-97gw-c4wh"/>
        <updated>2022-12-01T23:35:47.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins HashiCorp Vault Plugin 3.8.0 and earlier implements functionality that allows agent processes to retrieve any Vault secrets for use on the agent, allowing attackers able to control agent processes to obtain Vault secrets for an attacker-specified path and key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25186">https://nvd.nist.gov/vuln/detail/CVE-2022-25186</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2429">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2429</a></li>
<li><a href="https://github.com/advisories/GHSA-fm6q-97gw-c4wh">https://github.com/advisories/GHSA-fm6q-97gw-c4wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fm6q-97gw-c4wh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-16T00:01:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:fortify] Path traversal vulnerability in Jenkins Fortify Plugin]]></title>
        <id>https://github.com/advisories/GHSA-23h5-8ph6-7rfc</id>
        <link href="https://github.com/advisories/GHSA-23h5-8ph6-7rfc"/>
        <updated>2022-12-01T23:05:06.000Z</updated>
        <content type="html"><![CDATA[<p>Fortify Plugin 20.2.34 and earlier does not sanitize the <code>appName</code> and <code>appVersion</code> parameters of its Pipeline steps, which are used to write to files inside build directories.</p>
<p>This allows attackers with Item/Configure permission to write or overwrite <code>.xml</code> files on the Jenkins controller file system with content not controllable by the attacker.</p>
<p>Fortify Plugin 20.2.35 sanitizes the <code>appName</code> and <code>appVersion</code> parameters of its Pipeline steps when determining the resulting filename.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25188">https://nvd.nist.gov/vuln/detail/CVE-2022-25188</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2214">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2214</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/02/15/2">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>
<li><a href="https://github.com/jenkinsci/fortify-plugin/commit/ba3030cb63bb86b6bb13342664e0e319f2fee374">https://github.com/jenkinsci/fortify-plugin/commit/ba3030cb63bb86b6bb13342664e0e319f2fee374</a></li>
<li><a href="https://github.com/advisories/GHSA-23h5-8ph6-7rfc">https://github.com/advisories/GHSA-23h5-8ph6-7rfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23h5-8ph6-7rfc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:custom-checkbox-parameter] Stored Cross-site Scripting vulnerability in Jenkins Custom Checkbox Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-6q8r-5pm6-v2q8</id>
        <link href="https://github.com/advisories/GHSA-6q8r-5pm6-v2q8"/>
        <updated>2022-12-01T23:01:51.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Custom Checkbox Parameter Plugin 1.1 and earlier does not escape parameter names of custom checkbox parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25189">https://nvd.nist.gov/vuln/detail/CVE-2022-25189</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2266">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2266</a></li>
<li><a href="https://github.com/jenkinsci/custom-checkbox-parameter-plugin/commit/f859f0aebb94974f72591fb01ef41b05675d9f11">https://github.com/jenkinsci/custom-checkbox-parameter-plugin/commit/f859f0aebb94974f72591fb01ef41b05675d9f11</a></li>
<li><a href="https://github.com/advisories/GHSA-6q8r-5pm6-v2q8">https://github.com/advisories/GHSA-6q8r-5pm6-v2q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q8r-5pm6-v2q8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.conjur.jenkins:conjur-credentials] Missing permission check in Jenkins Conjur Secrets Plugin allows enumerating credentials IDs]]></title>
        <id>https://github.com/advisories/GHSA-372f-jc47-7gr5</id>
        <link href="https://github.com/advisories/GHSA-372f-jc47-7gr5"/>
        <updated>2022-12-01T23:00:12.000Z</updated>
        <content type="html"><![CDATA[<p>Conjur Secrets Plugin 1.0.11 and earlier does not perform a permission check in an HTTP endpoint.</p>
<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins. Those can be used as part of an attack to capture the credentials using another vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25190">https://nvd.nist.gov/vuln/detail/CVE-2022-25190</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2350">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2350</a></li>
<li><a href="https://github.com/jenkinsci/conjur-credentials-plugin/commit/eda06cde26cdf2d40ae4e2f4d2709e8174489068">https://github.com/jenkinsci/conjur-credentials-plugin/commit/eda06cde26cdf2d40ae4e2f4d2709e8174489068</a></li>
<li><a href="https://github.com/advisories/GHSA-372f-jc47-7gr5">https://github.com/advisories/GHSA-372f-jc47-7gr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-372f-jc47-7gr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:agent-server-parameter] Stored Cross-site Scripting vulnerability in Jenkins Agent Server Parameter Plugin]]></title>
        <id>https://github.com/advisories/GHSA-53c4-cmhf-gp7w</id>
        <link href="https://github.com/advisories/GHSA-53c4-cmhf-gp7w"/>
        <updated>2022-12-01T22:57:18.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Agent Server Parameter Plugin 1.0 and earlier does not escape parameter names of agent server parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25191">https://nvd.nist.gov/vuln/detail/CVE-2022-25191</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2268">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2268</a></li>
<li><a href="https://github.com/jenkinsci/agent-server-parameter-plugin/commit/cd237c40c76661b5c6a05e542034746e431e706e">https://github.com/jenkinsci/agent-server-parameter-plugin/commit/cd237c40c76661b5c6a05e542034746e431e706e</a></li>
<li><a href="https://github.com/advisories/GHSA-53c4-cmhf-gp7w">https://github.com/advisories/GHSA-53c4-cmhf-gp7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53c4-cmhf-gp7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:gitlab-oauth] Open redirect vulnerability in Jenkins GitLab Authentication Plugin]]></title>
        <id>https://github.com/advisories/GHSA-mvq8-hgxh-4v2g</id>
        <link href="https://github.com/advisories/GHSA-mvq8-hgxh-4v2g"/>
        <updated>2022-12-01T22:38:37.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins GitLab Authentication Plugin 1.13 and earlier records the HTTP <code>Referer</code> header as part of the URL query parameters when the authentication process starts, allowing attackers with access to Jenkins to craft a URL that will redirect users to an attacker-specified URL after logging in.</p>
<p>This issue is caused by an incomplete fix of <a href="https://www.jenkins.io/security/advisory/2019-08-07/#SECURITY-796">SECURITY-796</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25196">https://nvd.nist.gov/vuln/detail/CVE-2022-25196</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1833">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1833</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/02/15/2">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2019-08-07/#SECURITY-796">https://www.jenkins.io/security/advisory/2019-08-07/#SECURITY-796</a></li>
<li><a href="https://github.com/advisories/GHSA-mvq8-hgxh-4v2g">https://github.com/advisories/GHSA-mvq8-hgxh-4v2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mvq8-hgxh-4v2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.datapipe.jenkins.plugins:hashicorp-vault-plugin] Agent-to-controller security bypass in Jenkins HashiCorp Vault Plugin allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-2587-w93g-63m2</id>
        <link href="https://github.com/advisories/GHSA-2587-w93g-63m2"/>
        <updated>2022-12-01T22:34:55.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins HashiCorp Vault Plugin 336.v182c0fbaaeb7 and earlier implements functionality that allows agent processes to read arbitrary files on the Jenkins controller file system.</p>
<p>This allows attackers able to control agent processes to read arbitrary files on the Jenkins controller file system.</p>
<p>This vulnerability is only exploitable in Jenkins 2.318 and earlier, LTS 2.303.2 and earlier. See the <a href="https://www.jenkins.io/doc/upgrade-guide/2.303/#upgrading-to-jenkins-lts-2-303-3">LTS upgrade guide</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25197">https://nvd.nist.gov/vuln/detail/CVE-2022-25197</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2521">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2521</a></li>
<li><a href="https://github.com/jenkinsci/hashicorp-vault-plugin/releases/tag/351.vdb_f83a_1c6a_9d">https://github.com/jenkinsci/hashicorp-vault-plugin/releases/tag/351.vdb_f83a_1c6a_9d</a></li>
<li><a href="https://github.com/advisories/GHSA-2587-w93g-63m2">https://github.com/advisories/GHSA-2587-w93g-63m2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2587-w93g-63m2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:scp] Missing permission check in Jenkins SCP publisher Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vj3j-8m6x-mjq6</id>
        <link href="https://github.com/advisories/GHSA-vj3j-8m6x-mjq6"/>
        <updated>2022-12-01T22:29:37.000Z</updated>
        <content type="html"><![CDATA[<p>SCP publisher Plugin 1.8 and earlier does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified SSH server using attacker-specified username and password.</p>
<p>Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25199">https://nvd.nist.gov/vuln/detail/CVE-2022-25199</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2323">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2323</a></li>
<li><a href="https://github.com/advisories/GHSA-vj3j-8m6x-mjq6">https://github.com/advisories/GHSA-vj3j-8m6x-mjq6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj3j-8m6x-mjq6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.checkmarx.jenkins:checkmarx] Missing permission checks in Jenkins Checkmarx Plugin allow capturing credentials]]></title>
        <id>https://github.com/advisories/GHSA-wwf6-x2rv-vxqh</id>
        <link href="https://github.com/advisories/GHSA-wwf6-x2rv-vxqh"/>
        <updated>2022-12-01T22:23:35.000Z</updated>
        <content type="html"><![CDATA[<p>Checkmarx Plugin 2022.1.2 and earlier does not perform permission checks in several HTTP endpoints.</p>
<p>This allows attackers with Overall/Read permission to connect to an attacker-specified webserver using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25201">https://nvd.nist.gov/vuln/detail/CVE-2022-25201</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1017">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1017</a></li>
<li><a href="https://github.com/jenkinsci/checkmarx-plugin/releases/tag/Release_2022.1.3">https://github.com/jenkinsci/checkmarx-plugin/releases/tag/Release_2022.1.3</a></li>
<li><a href="https://github.com/advisories/GHSA-wwf6-x2rv-vxqh">https://github.com/advisories/GHSA-wwf6-x2rv-vxqh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wwf6-x2rv-vxqh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:promoted-builds-simple] Stored Cross-site Scripting vulnerability in Jenkins Promoted Builds (Simple) Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gc7q-7vg3-h8gf</id>
        <link href="https://github.com/advisories/GHSA-gc7q-7vg3-h8gf"/>
        <updated>2022-12-01T22:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Promoted Builds (Simple) Plugin 1.9 and earlier does not escape the name of custom promotion levels, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Overall/Administer permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25202">https://nvd.nist.gov/vuln/detail/CVE-2022-25202</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2334">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2334</a></li>
<li><a href="https://github.com/advisories/GHSA-gc7q-7vg3-h8gf">https://github.com/advisories/GHSA-gc7q-7vg3-h8gf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc7q-7vg3-h8gf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-16T00:01:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.sonymobile.jenkins.plugins.teamviews:team-views] Stored Cross-site Scripting vulnerability in Jenkins Team Views Plugin]]></title>
        <id>https://github.com/advisories/GHSA-mv5c-724f-3fq7</id>
        <link href="https://github.com/advisories/GHSA-mv5c-724f-3fq7"/>
        <updated>2022-12-01T22:19:55.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Team Views Plugin 0.9.0 and earlier does not escape team names, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Overall/Read permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25203">https://nvd.nist.gov/vuln/detail/CVE-2022-25203</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2324">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2324</a></li>
<li><a href="https://github.com/advisories/GHSA-mv5c-724f-3fq7">https://github.com/advisories/GHSA-mv5c-724f-3fq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mv5c-724f-3fq7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sinatra-chef-builder] CSRF vulnerability in Jenkins Chef Sinatra Plugin allow XXE]]></title>
        <id>https://github.com/advisories/GHSA-x92v-xv3x-9v29</id>
        <link href="https://github.com/advisories/GHSA-x92v-xv3x-9v29"/>
        <updated>2022-12-01T22:14:52.000Z</updated>
        <content type="html"><![CDATA[<p>Chef Sinatra Plugin 1.20 and earlier does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to have Jenkins send an HTTP request to an attacker-controlled URL and have it parse the response as XML.</p>
<p>As the plugin does not configure its XML parser to prevent XML external entity (XXE) attacks, attackers can have Jenkins parse a crafted XML response that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25207">https://nvd.nist.gov/vuln/detail/CVE-2022-25207</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1377">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1377</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/02/15/2">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>
<li><a href="https://github.com/advisories/GHSA-x92v-xv3x-9v29">https://github.com/advisories/GHSA-x92v-xv3x-9v29</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x92v-xv3x-9v29</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sinatra-chef-builder] Missing permission checks in Jenkins Chef Sinatra Plugin allow XXE]]></title>
        <id>https://github.com/advisories/GHSA-fq56-c7rj-j3j9</id>
        <link href="https://github.com/advisories/GHSA-fq56-c7rj-j3j9"/>
        <updated>2022-12-01T22:13:31.000Z</updated>
        <content type="html"><![CDATA[<p>Chef Sinatra Plugin 1.20 and earlier does not perform a permission check in a method implementing form validation.</p>
<p>This allows attackers with Overall/Read permission to have Jenkins send an HTTP request to an attacker-controlled URL and have it parse the response as XML.</p>
<p>As the plugin does not configure its XML parser to prevent XML external entity (XXE) attacks, attackers can have Jenkins parse a crafted XML response that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<p>Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25208">https://nvd.nist.gov/vuln/detail/CVE-2022-25208</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1377">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-1377</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/02/15/2">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>
<li><a href="https://github.com/advisories/GHSA-fq56-c7rj-j3j9">https://github.com/advisories/GHSA-fq56-c7rj-j3j9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq56-c7rj-j3j9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T00:01:15.000Z</published>
    </entry>
</feed>