<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-03-16T17:01:11.625Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-core] Denial of Service in org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-rcpf-vj53-7h2m</id>
        <link href="https://github.com/advisories/GHSA-rcpf-vj53-7h2m"/>
        <updated>2024-03-16T05:01:14.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1257">https://nvd.nist.gov/vuln/detail/CVE-2018-1257</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:1809">https://access.redhat.com/errata/RHSA-2018:1809</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3768">https://access.redhat.com/errata/RHSA-2018:3768</a></li>
<li><a href="https://github.com/advisories/GHSA-rcpf-vj53-7h2m">https://github.com/advisories/GHSA-rcpf-vj53-7h2m</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1257">https://pivotal.io/security/cve-2018-1257</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2020.html">https://www.oracle.com/security-alerts/cpujan2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html">https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>
<li><a href="http://www.securityfocus.com/bid/104260">http://www.securityfocus.com/bid/104260</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/246a6db1cad205ca9b6fca00c544ab7443ba202">https://github.com/spring-projects/spring-framework/commit/246a6db1cad205ca9b6fca00c544ab7443ba202</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/ff2228fdaf131d57b5c8c5918ee8d07c6dd9bba">https://github.com/spring-projects/spring-framework/commit/ff2228fdaf131d57b5c8c5918ee8d07c6dd9bba</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcpf-vj53-7h2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:02:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-core] Denial of Service in org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-rcpf-vj53-7h2m</id>
        <link href="https://github.com/advisories/GHSA-rcpf-vj53-7h2m"/>
        <updated>2024-03-16T05:01:14.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1257">https://nvd.nist.gov/vuln/detail/CVE-2018-1257</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:1809">https://access.redhat.com/errata/RHSA-2018:1809</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3768">https://access.redhat.com/errata/RHSA-2018:3768</a></li>
<li><a href="https://github.com/advisories/GHSA-rcpf-vj53-7h2m">https://github.com/advisories/GHSA-rcpf-vj53-7h2m</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1257">https://pivotal.io/security/cve-2018-1257</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2020.html">https://www.oracle.com/security-alerts/cpujan2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html">https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>
<li><a href="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>
<li><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>
<li><a href="http://www.securityfocus.com/bid/104260">http://www.securityfocus.com/bid/104260</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/246a6db1cad205ca9b6fca00c544ab7443ba202">https://github.com/spring-projects/spring-framework/commit/246a6db1cad205ca9b6fca00c544ab7443ba202</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/ff2228fdaf131d57b5c8c5918ee8d07c6dd9bba">https://github.com/spring-projects/spring-framework/commit/ff2228fdaf131d57b5c8c5918ee8d07c6dd9bba</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcpf-vj53-7h2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:02:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.cxf:cxf-core] SSRF vulnerability using the Aegis DataBinding in Apache CXF]]></title>
        <id>https://github.com/advisories/GHSA-qmgx-j96g-4428</id>
        <link href="https://github.com/advisories/GHSA-qmgx-j96g-4428"/>
        <updated>2024-03-15T19:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>A SSRF vulnerability using the Aegis DataBinding in versions of Apache CXF before 4.0.4, 3.6.3 and 3.5.8 allows an attacker to perform SSRF style attacks on webservices that take at least one parameter of any type. Users of other data bindings (including the default databinding) are not impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28752">https://nvd.nist.gov/vuln/detail/CVE-2024-28752</a></li>
<li><a href="https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt">https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-qmgx-j96g-4428">https://github.com/advisories/GHSA-qmgx-j96g-4428</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmgx-j96g-4428</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.cxf:cxf-core] SSRF vulnerability using the Aegis DataBinding in Apache CXF]]></title>
        <id>https://github.com/advisories/GHSA-qmgx-j96g-4428</id>
        <link href="https://github.com/advisories/GHSA-qmgx-j96g-4428"/>
        <updated>2024-03-15T19:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>A SSRF vulnerability using the Aegis DataBinding in versions of Apache CXF before 4.0.4, 3.6.3 and 3.5.8 allows an attacker to perform SSRF style attacks on webservices that take at least one parameter of any type. Users of other data bindings (including the default databinding) are not impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28752">https://nvd.nist.gov/vuln/detail/CVE-2024-28752</a></li>
<li><a href="https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt">https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-qmgx-j96g-4428">https://github.com/advisories/GHSA-qmgx-j96g-4428</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmgx-j96g-4428</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.cxf:cxf-core] SSRF vulnerability using the Aegis DataBinding in Apache CXF]]></title>
        <id>https://github.com/advisories/GHSA-qmgx-j96g-4428</id>
        <link href="https://github.com/advisories/GHSA-qmgx-j96g-4428"/>
        <updated>2024-03-15T19:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>A SSRF vulnerability using the Aegis DataBinding in versions of Apache CXF before 4.0.4, 3.6.3 and 3.5.8 allows an attacker to perform SSRF style attacks on webservices that take at least one parameter of any type. Users of other data bindings (including the default databinding) are not impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28752">https://nvd.nist.gov/vuln/detail/CVE-2024-28752</a></li>
<li><a href="https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt">https://cxf.apache.org/security-advisories.data/CVE-2024-28752.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-qmgx-j96g-4428">https://github.com/advisories/GHSA-qmgx-j96g-4428</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmgx-j96g-4428</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Apache ZooKeeper vulnerable to information disclosure in persistent watchers handling]]></title>
        <id>https://github.com/advisories/GHSA-r978-9m6m-6gm6</id>
        <link href="https://github.com/advisories/GHSA-r978-9m6m-6gm6"/>
        <updated>2024-03-15T19:35:37.000Z</updated>
        <content type="html"><![CDATA[<p>Information disclosure in persistent watchers handling in Apache ZooKeeper due to missing ACL check. It allows an attacker to monitor child znodes by attaching a persistent watcher (addWatch command) to a parent which the attacker has already access to. ZooKeeper server doesn't do ACL check when the persistent watcher is triggered and as a consequence, the full path of znodes that a watch event gets triggered upon is exposed to the owner of the watcher. It's important to note that only the path is exposed by this vulnerability, not the data of znode, but since znode path can contain sensitive information like user name or login ID, this issue is potentially critical.</p>
<p>Users are recommended to upgrade to version 3.9.2, 3.8.4 which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23944">https://nvd.nist.gov/vuln/detail/CVE-2024-23944</a></li>
<li><a href="https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k">https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c">https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d">https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8">https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8</a></li>
<li><a href="https://github.com/advisories/GHSA-r978-9m6m-6gm6">https://github.com/advisories/GHSA-r978-9m6m-6gm6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r978-9m6m-6gm6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Apache ZooKeeper vulnerable to information disclosure in persistent watchers handling]]></title>
        <id>https://github.com/advisories/GHSA-r978-9m6m-6gm6</id>
        <link href="https://github.com/advisories/GHSA-r978-9m6m-6gm6"/>
        <updated>2024-03-15T19:35:37.000Z</updated>
        <content type="html"><![CDATA[<p>Information disclosure in persistent watchers handling in Apache ZooKeeper due to missing ACL check. It allows an attacker to monitor child znodes by attaching a persistent watcher (addWatch command) to a parent which the attacker has already access to. ZooKeeper server doesn't do ACL check when the persistent watcher is triggered and as a consequence, the full path of znodes that a watch event gets triggered upon is exposed to the owner of the watcher. It's important to note that only the path is exposed by this vulnerability, not the data of znode, but since znode path can contain sensitive information like user name or login ID, this issue is potentially critical.</p>
<p>Users are recommended to upgrade to version 3.9.2, 3.8.4 which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23944">https://nvd.nist.gov/vuln/detail/CVE-2024-23944</a></li>
<li><a href="https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k">https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c">https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d">https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8">https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8</a></li>
<li><a href="https://github.com/advisories/GHSA-r978-9m6m-6gm6">https://github.com/advisories/GHSA-r978-9m6m-6gm6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r978-9m6m-6gm6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zookeeper:zookeeper] Apache ZooKeeper vulnerable to information disclosure in persistent watchers handling]]></title>
        <id>https://github.com/advisories/GHSA-r978-9m6m-6gm6</id>
        <link href="https://github.com/advisories/GHSA-r978-9m6m-6gm6"/>
        <updated>2024-03-15T19:35:37.000Z</updated>
        <content type="html"><![CDATA[<p>Information disclosure in persistent watchers handling in Apache ZooKeeper due to missing ACL check. It allows an attacker to monitor child znodes by attaching a persistent watcher (addWatch command) to a parent which the attacker has already access to. ZooKeeper server doesn't do ACL check when the persistent watcher is triggered and as a consequence, the full path of znodes that a watch event gets triggered upon is exposed to the owner of the watcher. It's important to note that only the path is exposed by this vulnerability, not the data of znode, but since znode path can contain sensitive information like user name or login ID, this issue is potentially critical.</p>
<p>Users are recommended to upgrade to version 3.9.2, 3.8.4 which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23944">https://nvd.nist.gov/vuln/detail/CVE-2024-23944</a></li>
<li><a href="https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k">https://lists.apache.org/thread/96s5nqssj03rznz9hv58txdb2k1lr79k</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c">https://github.com/apache/zookeeper/commit/29c7b9462681f47c2ac12e609341cf9f52abac5c</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d">https://github.com/apache/zookeeper/commit/65b91d2d9a56157285c2a86b106e67c26520b01d</a></li>
<li><a href="https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8">https://github.com/apache/zookeeper/commit/daf7cfd04005cff1a4f7cab5ab13d41db88d0cd8</a></li>
<li><a href="https://github.com/advisories/GHSA-r978-9m6m-6gm6">https://github.com/advisories/GHSA-r978-9m6m-6gm6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r978-9m6m-6gm6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T12:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat Denial of Service due to improper input validation vulnerability for HTTP/2 requests]]></title>
        <id>https://github.com/advisories/GHSA-7w75-32cg-r6g2</id>
        <link href="https://github.com/advisories/GHSA-7w75-32cg-r6g2"/>
        <updated>2024-03-15T16:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.</p>
<p>Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24549">https://nvd.nist.gov/vuln/detail/CVE-2024-24549</a></li>
<li><a href="https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg">https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg</a></li>
<li><a href="https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96">https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96</a></li>
<li><a href="https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5">https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0">https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843">https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843</a></li>
<li><a href="https://github.com/advisories/GHSA-7w75-32cg-r6g2">https://github.com/advisories/GHSA-7w75-32cg-r6g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w75-32cg-r6g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T18:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Improper Input Validation in org.springframework.security:spring-security-core, org.springframework.security:spring-security-core , and org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-v596-fwhq-8x48</id>
        <link href="https://github.com/advisories/GHSA-v596-fwhq-8x48"/>
        <updated>2024-03-15T15:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1199">https://nvd.nist.gov/vuln/detail/CVE-2018-1199</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2405">https://access.redhat.com/errata/RHSA-2018:2405</a></li>
<li><a href="https://github.com/advisories/GHSA-v596-fwhq-8x48">https://github.com/advisories/GHSA-v596-fwhq-8x48</a></li>
<li><a href="https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1199">https://pivotal.io/security/cve-2018-1199</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c">https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b">https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c">https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f">https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d">https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22">https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v596-fwhq-8x48</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:01:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Improper Input Validation in org.springframework.security:spring-security-core, org.springframework.security:spring-security-core , and org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-v596-fwhq-8x48</id>
        <link href="https://github.com/advisories/GHSA-v596-fwhq-8x48"/>
        <updated>2024-03-15T15:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1199">https://nvd.nist.gov/vuln/detail/CVE-2018-1199</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2405">https://access.redhat.com/errata/RHSA-2018:2405</a></li>
<li><a href="https://github.com/advisories/GHSA-v596-fwhq-8x48">https://github.com/advisories/GHSA-v596-fwhq-8x48</a></li>
<li><a href="https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1199">https://pivotal.io/security/cve-2018-1199</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c">https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b">https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c">https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f">https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d">https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22">https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v596-fwhq-8x48</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:01:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Improper Input Validation in org.springframework.security:spring-security-core, org.springframework.security:spring-security-core , and org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-v596-fwhq-8x48</id>
        <link href="https://github.com/advisories/GHSA-v596-fwhq-8x48"/>
        <updated>2024-03-15T15:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1199">https://nvd.nist.gov/vuln/detail/CVE-2018-1199</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2405">https://access.redhat.com/errata/RHSA-2018:2405</a></li>
<li><a href="https://github.com/advisories/GHSA-v596-fwhq-8x48">https://github.com/advisories/GHSA-v596-fwhq-8x48</a></li>
<li><a href="https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1199">https://pivotal.io/security/cve-2018-1199</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c">https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b">https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c">https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f">https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d">https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22">https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v596-fwhq-8x48</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:01:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-core] Improper Input Validation in org.springframework.security:spring-security-core, org.springframework.security:spring-security-core , and org.springframework:spring-core]]></title>
        <id>https://github.com/advisories/GHSA-v596-fwhq-8x48</id>
        <link href="https://github.com/advisories/GHSA-v596-fwhq-8x48"/>
        <updated>2024-03-15T15:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1199">https://nvd.nist.gov/vuln/detail/CVE-2018-1199</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:2405">https://access.redhat.com/errata/RHSA-2018:2405</a></li>
<li><a href="https://github.com/advisories/GHSA-v596-fwhq-8x48">https://github.com/advisories/GHSA-v596-fwhq-8x48</a></li>
<li><a href="https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E">https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369@%3Cissues.activemq.apache.org%3E</a></li>
<li><a href="https://pivotal.io/security/cve-2018-1199">https://pivotal.io/security/cve-2018-1199</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c">https://github.com/spring-projects/spring-framework/commit/554662ebab87af97ba25d0c9f5449c7acda8df9c</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b">https://github.com/spring-projects/spring-framework/commit/73a81f98d40eb6f5faa91aceb868db53fae2a94b</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c">https://github.com/spring-projects/spring-framework/commit/e6e6b8f4adcad99d133de97fcfac5ae5dd14153c</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f">https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d">https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d</a></li>
<li><a href="https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22">https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v596-fwhq-8x48</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-10-17T20:01:54.000Z</published>
    </entry>
</feed>