<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-12-21T00:03:35.293Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[io.apiman:apiman-manager-api-rest-impl] Apiman has insufficient checks for read permissions]]></title>
        <id>https://github.com/advisories/GHSA-54r5-wr8x-x5v3</id>
        <link href="https://github.com/advisories/GHSA-54r5-wr8x-x5v3"/>
        <updated>2022-12-20T23:29:57.000Z</updated>
        <content type="html"><![CDATA[<p>Apiman 1.5.7 through 2.2.3.Final has insufficient checks for read permissions within the Apiman Manager REST API. A malicious user may be able to find and subscribe to private APIs they do not have permission for, thus accessing API Management-protected resources they should not be allowed to access. The root cause of the issue is the Apiman project's accidental acceptance of a large contribution that was not fully compatible with the security model of Apiman versions before 3.0.0.Final. Because of this, 3.0.0.Final is not affected by the vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-47551">https://nvd.nist.gov/vuln/detail/CVE-2022-47551</a></li>
<li><a href="https://www.apiman.io/blog/permissions-bypass-disclosure/">https://www.apiman.io/blog/permissions-bypass-disclosure/</a></li>
<li><a href="https://www.github.com/apiman/apiman">https://www.github.com/apiman/apiman</a></li>
<li><a href="https://github.com/apiman/apiman/discussions/2409">https://github.com/apiman/apiman/discussions/2409</a></li>
<li><a href="https://github.com/advisories/GHSA-54r5-wr8x-x5v3">https://github.com/advisories/GHSA-54r5-wr8x-x5v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54r5-wr8x-x5v3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T00:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:selenium] Complete lack of CSRF protection in Jenkins Selenium Plugin can lead to OS command injection]]></title>
        <id>https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</id>
        <link href="https://github.com/advisories/GHSA-rp4x-xpgf-4xv7"/>
        <updated>2022-12-20T23:03:59.000Z</updated>
        <content type="html"><![CDATA[<p>Selenium Plugin 3.141.59 and earlier has no CSRF protection for its HTTP endpoints.</p>
<p>This allows attackers to perform the following actions:</p>
<ul>
<li>Restart the Selenium Grid hub.</li>
<li>Delete or replace the plugin configuration.</li>
<li>Start, stop, or restart Selenium configurations on specific nodes.</li>
</ul>
<p>Through carefully chosen configuration parameters, these actions can result in OS command injection on the Jenkins controller.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2196">https://nvd.nist.gov/vuln/detail/CVE-2020-2196</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1766">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1766</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/2">http://www.openwall.com/lists/oss-security/2022/04/14/2</a></li>
<li><a href="https://github.com/advisories/GHSA-rp4x-xpgf-4xv7">https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rp4x-xpgf-4xv7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:compact-columns] Stored XSS vulnerability in Jenkins Compact Columns Plugin]]></title>
        <id>https://github.com/advisories/GHSA-x68x-wvm2-hqc8</id>
        <link href="https://github.com/advisories/GHSA-x68x-wvm2-hqc8"/>
        <updated>2022-12-20T22:43:13.000Z</updated>
        <content type="html"><![CDATA[<p>Compact Columns Plugin 1.11 and earlier displays the unprocessed job description in tooltips.</p>
<p>This results in a stored cross-site scripting vulnerability that can be exploited by users with Job/Configure permission.</p>
<p>Compact Columns Plugin 1.12 applies the configured markup formatter to the job description shown in tooltips.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2195">https://nvd.nist.gov/vuln/detail/CVE-2020-2195</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1837">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1837</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-x68x-wvm2-hqc8">https://github.com/advisories/GHSA-x68x-wvm2-hqc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x68x-wvm2-hqc8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:echarts-api] Stored XSS vulnerability in Jenkins ECharts API Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q397-w28f-jx97</id>
        <link href="https://github.com/advisories/GHSA-q397-w28f-jx97"/>
        <updated>2022-12-20T22:41:35.000Z</updated>
        <content type="html"><![CDATA[<p>ECharts API Plugin 4.7.0-3 and earlier does not escape the display name of the builds in the trend chart.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability that can be exploited by users with Run/Update permission.</p>
<p>ECharts API Plugin 4.7.0-4 escapes the display name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2194">https://nvd.nist.gov/vuln/detail/CVE-2020-2194</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1842">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1842</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-q397-w28f-jx97">https://github.com/advisories/GHSA-q397-w28f-jx97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q397-w28f-jx97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jenkins.plugins:echarts-api] Stored XSS vulnerability in Jenkins ECharts API Plugin]]></title>
        <id>https://github.com/advisories/GHSA-x9rq-9h44-f84v</id>
        <link href="https://github.com/advisories/GHSA-x9rq-9h44-f84v"/>
        <updated>2022-12-20T22:40:57.000Z</updated>
        <content type="html"><![CDATA[<p>ECharts API Plugin 4.7.0-3 and earlier does not escape the parser identifier when rendering charts.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability that can be exploited by users with Job/Configure permission.</p>
<p>ECharts API Plugin 4.7.0-4 escapes the parser identifier.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2193">https://nvd.nist.gov/vuln/detail/CVE-2020-2193</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1841">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1841</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-x9rq-9h44-f84v">https://github.com/advisories/GHSA-x9rq-9h44-f84v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9rq-9h44-f84v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:tfs] Credentials stored in plain text by Jenkins tfs Plugin]]></title>
        <id>https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</id>
        <link href="https://github.com/advisories/GHSA-w6c2-jrhh-jrxg"/>
        <updated>2022-12-20T22:39:50.000Z</updated>
        <content type="html"><![CDATA[<p>tfs Plugin 5.157.1 and earlier stores a webhook secret unencrypted in its global configuration file <code>hudson.plugins.tfs.TeamPluginGlobalConfig.xml</code> on the Jenkins controller as part of its configuration. This secret can be viewed by attackers with access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2249">https://nvd.nist.gov/vuln/detail/CVE-2020-2249</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1506">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1506</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-w6c2-jrhh-jrxg">https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6c2-jrhh-jrxg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:jsgames] Reflected XSS vulnerability in Jenkins JSGames Plugin]]></title>
        <id>https://github.com/advisories/GHSA-7hf3-h28p-q6gx</id>
        <link href="https://github.com/advisories/GHSA-7hf3-h28p-q6gx"/>
        <updated>2022-12-20T22:39:22.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins JSGames Plugin 0.2 and earlier evaluates part of a URL as code, resulting in a reflected cross-site scripting (XSS) vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2248">https://nvd.nist.gov/vuln/detail/CVE-2020-2248</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1905">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1905</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-7hf3-h28p-q6gx">https://github.com/advisories/GHSA-7hf3-h28p-q6gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hf3-h28p-q6gx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:klocwork] XXE vulnerability in Jenkins Klocwork Analysis Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p6c5-737r-2r93</id>
        <link href="https://github.com/advisories/GHSA-p6c5-737r-2r93"/>
        <updated>2022-12-20T22:39:07.000Z</updated>
        <content type="html"><![CDATA[<p>Klocwork Analysis Plugin 2020.2.1 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the Klocwork plugin parser to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2247">https://nvd.nist.gov/vuln/detail/CVE-2020-2247</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1831">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1831</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-p6c5-737r-2r93">https://github.com/advisories/GHSA-p6c5-737r-2r93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6c5-737r-2r93</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:valgrind] XXE vulnerability in Jenkins Valgrind Plugin]]></title>
        <id>https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</id>
        <link href="https://github.com/advisories/GHSA-xq2q-8hxc-7jr2"/>
        <updated>2022-12-20T22:38:26.000Z</updated>
        <content type="html"><![CDATA[<p>Valgrind Plugin 0.28 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>
<p>This allows a user able to control the input files for the Valgrind plugin parser to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2245">https://nvd.nist.gov/vuln/detail/CVE-2020-2245</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1829">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1829</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-xq2q-8hxc-7jr2">https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xq2q-8hxc-7jr2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.sonyericsson.jenkins.plugins.bfa:build-failure-analyzer] XSS vulnerability in Jenkins Build Failure Analyzer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-p5jh-8rxp-wqjj</id>
        <link href="https://github.com/advisories/GHSA-p5jh-8rxp-wqjj"/>
        <updated>2022-12-20T22:38:04.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Build Failure Analyzer Plugin 1.27.0 and earlier does not escape matching text in a form validation response, resulting in a cross-site scripting (XSS) vulnerability exploitable by attackers able to provide console output for builds used to test build log indications.</p>
<p>Build Failure Analyzer Plugin 1.27.1 escapes matching text in the affected form validation response.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2244">https://nvd.nist.gov/vuln/detail/CVE-2020-2244</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1770">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1770</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-p5jh-8rxp-wqjj">https://github.com/advisories/GHSA-p5jh-8rxp-wqjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p5jh-8rxp-wqjj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:vmanager-plugin] Stored XSS vulnerability in Jenkins Cadence vManager Plugin]]></title>
        <id>https://github.com/advisories/GHSA-v46q-xjp5-7p6r</id>
        <link href="https://github.com/advisories/GHSA-v46q-xjp5-7p6r"/>
        <updated>2022-12-20T22:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Cadence vManager Plugin 3.0.4 and earlier does not escape build descriptions in tooltips, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Run/Update permission.</p>
<p>Cadence vManager Plugin 3.0.5 removes affected tooltips.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2243">https://nvd.nist.gov/vuln/detail/CVE-2020-2243</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1936">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1936</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-v46q-xjp5-7p6r">https://github.com/advisories/GHSA-v46q-xjp5-7p6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v46q-xjp5-7p6r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:database] Missing permission checks in Jenkins Database Plugin]]></title>
        <id>https://github.com/advisories/GHSA-hj36-v72x-cc6j</id>
        <link href="https://github.com/advisories/GHSA-hj36-v72x-cc6j"/>
        <updated>2022-12-20T22:37:19.000Z</updated>
        <content type="html"><![CDATA[<p>A missing permission check in Jenkins database Plugin 1.6 and earlier allows attackers with Overall/Read access to Jenkins to connect to an attacker-specified database server using attacker-specified credentials.</p>
<p>Database Plugin 1.7 requires Overall/Administer permission for the affected form validation method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2242">https://nvd.nist.gov/vuln/detail/CVE-2020-2242</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1024">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1024</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-hj36-v72x-cc6j">https://github.com/advisories/GHSA-hj36-v72x-cc6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj36-v72x-cc6j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:27:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:swarm] CSRF vulnerability in Jenkins Swarm Plugin]]></title>
        <id>https://github.com/advisories/GHSA-c264-8834-ppj2</id>
        <link href="https://github.com/advisories/GHSA-c264-8834-ppj2"/>
        <updated>2022-12-20T22:15:48.000Z</updated>
        <content type="html"><![CDATA[<p>Swarm Plugin adds API endpoints to add or remove agent labels. In Swarm Plugin 3.20 and earlier these only require a global Swarm secret to use, and no regular permission check is performed. This allows users with Agent/Create permission to add or remove labels of any agent.</p>
<p>Additionally, these API endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>Swarm Plugin 3.21 requires POST requests and Agent/Configure permission for the affected agent to these endpoints. It no longer uses the global Swarm secret for these API endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2192">https://nvd.nist.gov/vuln/detail/CVE-2020-2192</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1200">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1200</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-c264-8834-ppj2">https://github.com/advisories/GHSA-c264-8834-ppj2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c264-8834-ppj2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:swarm] Improper permission checks in Jenkins Swarm Plugin]]></title>
        <id>https://github.com/advisories/GHSA-j852-mp82-wv2g</id>
        <link href="https://github.com/advisories/GHSA-j852-mp82-wv2g"/>
        <updated>2022-12-20T22:14:56.000Z</updated>
        <content type="html"><![CDATA[<p>Swarm Plugin adds API endpoints to add or remove agent labels. In Swarm Plugin 3.20 and earlier these only require a global Swarm secret to use, and no regular permission check is performed. This allows users with Agent/Create permission to add or remove labels of any agent.</p>
<p>Swarm Plugin 3.21 requires Agent/Configure permission for the affected agent to these endpoints. It no longer uses the global Swarm secret for these API endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2191">https://nvd.nist.gov/vuln/detail/CVE-2020-2191</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1200">https://jenkins.io/security/advisory/2020-06-03/#SECURITY-1200</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/06/03/3">http://www.openwall.com/lists/oss-security/2020/06/03/3</a></li>
<li><a href="https://github.com/advisories/GHSA-j852-mp82-wv2g">https://github.com/advisories/GHSA-j852-mp82-wv2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j852-mp82-wv2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:19:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:flaky-test-handler] CSRF vulnerability in Jenkins Flaky Test Handler Plugin]]></title>
        <id>https://github.com/advisories/GHSA-vjf8-xw6c-wjhq</id>
        <link href="https://github.com/advisories/GHSA-vjf8-xw6c-wjhq"/>
        <updated>2022-12-20T22:14:21.000Z</updated>
        <content type="html"><![CDATA[<p>Flaky Test Handler Plugin 1.0.4 and earlier does not require POST requests for the "Deflake this build" feature, resulting in a cross-site request forgery (CSRF) vulnerability.</p>
<p>This vulnerability allows attackers to rebuild a project at a previous git revision where the tests were failing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2237">https://nvd.nist.gov/vuln/detail/CVE-2020-2237</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1763">https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1763</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/08/12/4">http://www.openwall.com/lists/oss-security/2020/08/12/4</a></li>
<li><a href="https://github.com/advisories/GHSA-vjf8-xw6c-wjhq">https://github.com/advisories/GHSA-vjf8-xw6c-wjhq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vjf8-xw6c-wjhq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:25:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.axis.system.jenkins.plugins.downstream:yet-another-build-visualizer] Stored XSS vulnerability in Jenkins Yet Another Build Visualizer Plugin]]></title>
        <id>https://github.com/advisories/GHSA-3mwj-7vmq-w43p</id>
        <link href="https://github.com/advisories/GHSA-3mwj-7vmq-w43p"/>
        <updated>2022-12-20T22:13:06.000Z</updated>
        <content type="html"><![CDATA[<p>Yet Another Build Visualizer Plugin 1.11 and earlier does not escape tooltip content.</p>
<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by users with Run/Update permission.</p>
<p>Yet Another Build Visualizer Plugin 1.12 escapes tooltip content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2236">https://nvd.nist.gov/vuln/detail/CVE-2020-2236</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1940">https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1940</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/08/12/4">http://www.openwall.com/lists/oss-security/2020/08/12/4</a></li>
<li><a href="https://github.com/advisories/GHSA-3mwj-7vmq-w43p">https://github.com/advisories/GHSA-3mwj-7vmq-w43p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mwj-7vmq-w43p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:25:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:soapui-pro-functional-testing] Passwords transmitted in plain text by Jenkins ReadyAPI Functional Testing Plugin]]></title>
        <id>https://github.com/advisories/GHSA-q4qq-8q2r-g2f2</id>
        <link href="https://github.com/advisories/GHSA-q4qq-8q2r-g2f2"/>
        <updated>2022-12-20T22:11:20.000Z</updated>
        <content type="html"><![CDATA[<p>ReadyAPI Functional Testing Plugin stores project passwords in job <code>config.xml</code> files on the Jenkins controller as part of its configuration.</p>
<p>While these passwords are stored encrypted on disk since ReadyAPI Functional Testing Plugin 1.4, they are transmitted in plain text as part of the global configuration form by ReadyAPI Functional Testing Plugin 1.5 and earlier. These passwords can be viewed by attackers with Extended Read permission.</p>
<p>This only affects Jenkins before 2.236, including 2.235.x LTS, as Jenkins 2.236 introduces a security hardening that transparently encrypts and decrypts data used for a Jenkins password form field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2251">https://nvd.nist.gov/vuln/detail/CVE-2020-2251</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1631%20(2)">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1631%20(2)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-q4qq-8q2r-g2f2">https://github.com/advisories/GHSA-q4qq-8q2r-g2f2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4qq-8q2r-g2f2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:soapui-pro-functional-testing] Passwords stored in plain text by Jenkins ReadyAPI Functional Testing Plugin]]></title>
        <id>https://github.com/advisories/GHSA-ccwp-633j-g29v</id>
        <link href="https://github.com/advisories/GHSA-ccwp-633j-g29v"/>
        <updated>2022-12-20T22:10:51.000Z</updated>
        <content type="html"><![CDATA[<p>ReadyAPI Functional Testing Plugin 1.3 and earlier stores project passwords unencrypted in job <code>config.xml</code> files as part of its configuration. These project passwords can be viewed by attackers with Extended Read permission or access to the Jenkins controller file system.</p>
<p>ReadyAPI Functional Testing Plugin 1.4 stores project passwords encrypted once affected job configurations are saved again.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2250">https://nvd.nist.gov/vuln/detail/CVE-2020-2250</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1631%20(1)">https://jenkins.io/security/advisory/2020-09-01/#SECURITY-1631%20(1)</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/09/01/3">http://www.openwall.com/lists/oss-security/2020/09/01/3</a></li>
<li><a href="https://github.com/advisories/GHSA-ccwp-633j-g29v">https://github.com/advisories/GHSA-ccwp-633j-g29v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccwp-633j-g29v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.zeppelin:zeppelin] Apache Zeppelin Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9p8j-hrgf-jc2g</id>
        <link href="https://github.com/advisories/GHSA-9p8j-hrgf-jc2g"/>
        <updated>2022-12-20T22:10:30.000Z</updated>
        <content type="html"><![CDATA[<p>An Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Apache Zeppelin allows logged-in users to execute arbitrary javascript in other users' browsers. This issue affects Apache Zeppelin before 0.8.2. Users are recommended to upgrade to a supported version of Zeppelin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46870">https://nvd.nist.gov/vuln/detail/CVE-2022-46870</a></li>
<li><a href="https://lists.apache.org/thread/gb1wdnrm1095xw6qznpsycfrht4lwbwc">https://lists.apache.org/thread/gb1wdnrm1095xw6qznpsycfrht4lwbwc</a></li>
<li><a href="https://github.com/advisories/GHSA-9p8j-hrgf-jc2g">https://github.com/advisories/GHSA-9p8j-hrgf-jc2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p8j-hrgf-jc2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-20T21:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.carbon.registry:carbon-registry] WSO2 carbon-registry Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j34r-57xj-pfm5</id>
        <link href="https://github.com/advisories/GHSA-j34r-57xj-pfm5"/>
        <updated>2022-12-20T22:09:40.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in WSO2 carbon-registry up to 4.8.11. It has been rated as problematic. Affected by this issue is some unknown functionality of the file <code>components/registry/org.wso2.carbon.registry.search.ui/src/main/resources/web/search/advancedSearchForm-ajaxprocessor.jsp</code> of the component <code>Advanced Search</code>. The manipulation of the argument <code>mediaType/rightOp/leftOp/rightPropertyValue/leftPropertyValue</code> leads to cross site scripting. The attack may be launched remotely. Upgrading to version 4.8.12 can address this issue. The name of the patch is 0c827cc1b14b82d8eb86117ab2e43c34bb91ddb4. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-215900.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4520">https://nvd.nist.gov/vuln/detail/CVE-2022-4520</a></li>
<li><a href="https://github.com/wso2/carbon-registry/pull/404">https://github.com/wso2/carbon-registry/pull/404</a></li>
<li><a href="https://github.com/wso2/carbon-registry/commit/0c827cc1b14b82d8eb86117ab2e43c34bb91ddb4">https://github.com/wso2/carbon-registry/commit/0c827cc1b14b82d8eb86117ab2e43c34bb91ddb4</a></li>
<li><a href="https://github.com/wso2/carbon-registry/releases/tag/v4.8.12">https://github.com/wso2/carbon-registry/releases/tag/v4.8.12</a></li>
<li><a href="https://vuldb.com/?id.215900">https://vuldb.com/?id.215900</a></li>
<li><a href="https://github.com/advisories/GHSA-j34r-57xj-pfm5">https://github.com/advisories/GHSA-j34r-57xj-pfm5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j34r-57xj-pfm5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-15T21:30:26.000Z</published>
    </entry>
</feed>