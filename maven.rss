<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2023-01-07T15:01:20.447Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-vertx-http-deployment] Code injection in quarkus dev ui config editor]]></title>
        <id>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</id>
        <link href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9"/>
        <updated>2023-01-06T22:27:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in quarkus. This security flaw happens in Dev UI Config Editor which is vulnerable to drive-by localhost attacks leading to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4116">https://nvd.nist.gov/vuln/detail/CVE-2022-4116</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-4116">https://access.redhat.com/security/cve/CVE-2022-4116</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2144748">https://bugzilla.redhat.com/show_bug.cgi?id=2144748</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527">https://github.com/quarkusio/quarkus/discussions/29527</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527#discussioncomment-4387809">https://github.com/quarkusio/quarkus/discussions/29527#discussioncomment-4387809</a></li>
<li><a href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9">https://github.com/advisories/GHSA-g56w-cwg4-hxx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T21:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-vertx-http-deployment] Code injection in quarkus dev ui config editor]]></title>
        <id>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</id>
        <link href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9"/>
        <updated>2023-01-06T22:27:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in quarkus. This security flaw happens in Dev UI Config Editor which is vulnerable to drive-by localhost attacks leading to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4116">https://nvd.nist.gov/vuln/detail/CVE-2022-4116</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-4116">https://access.redhat.com/security/cve/CVE-2022-4116</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2144748">https://bugzilla.redhat.com/show_bug.cgi?id=2144748</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527">https://github.com/quarkusio/quarkus/discussions/29527</a></li>
<li><a href="https://github.com/quarkusio/quarkus/discussions/29527#discussioncomment-4387809">https://github.com/quarkusio/quarkus/discussions/29527#discussioncomment-4387809</a></li>
<li><a href="https://github.com/advisories/GHSA-g56w-cwg4-hxx9">https://github.com/advisories/GHSA-g56w-cwg4-hxx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g56w-cwg4-hxx9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T21:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Apache DolphinScheduler vulnerable to Improper Input Validation]]></title>
        <id>https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</id>
        <link href="https://github.com/advisories/GHSA-3xh5-8hvq-rc8x"/>
        <updated>2023-01-06T21:35:29.000Z</updated>
        <content type="html"><![CDATA[<p>Apache DolphinScheduler improperly validates script alert plugin parameters and is vulnerable to remote command execution. This issue affects Apache DolphinScheduler version 3.0.1 and prior versions; version 3.1.0 and prior versions. Users should upgrade to version 3.0.2 or 3.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45875">https://nvd.nist.gov/vuln/detail/CVE-2022-45875</a></li>
<li><a href="https://lists.apache.org/thread/r0wqzkjsoq17j6ww381kmpx3jjp9hb6r">https://lists.apache.org/thread/r0wqzkjsoq17j6ww381kmpx3jjp9hb6r</a></li>
<li><a href="https://github.com/advisories/GHSA-3xh5-8hvq-rc8x">https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-04T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Apache DolphinScheduler vulnerable to Improper Input Validation]]></title>
        <id>https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</id>
        <link href="https://github.com/advisories/GHSA-3xh5-8hvq-rc8x"/>
        <updated>2023-01-06T21:35:29.000Z</updated>
        <content type="html"><![CDATA[<p>Apache DolphinScheduler improperly validates script alert plugin parameters and is vulnerable to remote command execution. This issue affects Apache DolphinScheduler version 3.0.1 and prior versions; version 3.1.0 and prior versions. Users should upgrade to version 3.0.2 or 3.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45875">https://nvd.nist.gov/vuln/detail/CVE-2022-45875</a></li>
<li><a href="https://lists.apache.org/thread/r0wqzkjsoq17j6ww381kmpx3jjp9hb6r">https://lists.apache.org/thread/r0wqzkjsoq17j6ww381kmpx3jjp9hb6r</a></li>
<li><a href="https://github.com/advisories/GHSA-3xh5-8hvq-rc8x">https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xh5-8hvq-rc8x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-04T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.http4s:http4s-core] Http4s improperly parses User-Agent and Server headers]]></title>
        <id>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</id>
        <link href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f"/>
        <updated>2023-01-06T20:24:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>User-Agent</code> and <code>Server</code> header parsers are susceptible to a fatal error on certain inputs.  In http4s, modeled headers are lazily parsed, so this only applies to services that explicitly request these typed headers. </p>
<h4 id="v021x">v0.21.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get(`User-Agent`)
</code></pre>
<h4 id="v022x-v023x-v1x">v0.22.x, v0.23.x, v1.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get[`User-Agent`]
val alsoUnsafe: Option[`Server`] = req.headers.get[Server]
</code></pre>
<h3 id="patches">Patches</h3>
<p>Fixes are released in 0.21.34, 0.22.15, 0.23.17, and 1.0.0-M38.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="use-the-weakly-typed-header-interface">Use the weakly typed header interface</h4>
<h5 id="v021x-1">v0.21.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get("User-Agent".ci)
// but don't do this
val unsafe = header.map(_.parsed) 
</code></pre>
<h5 id="v022x-v023x-v1x-1">v0.22.x, v0.23.x, v1.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get(ci"User-Agent")
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22465">https://nvd.nist.gov/vuln/detail/CVE-2023-22465</a></li>
<li><a href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/advisories/GHSA-54w6-vxfh-fw7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-06T20:24:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.http4s:http4s-core] Http4s improperly parses User-Agent and Server headers]]></title>
        <id>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</id>
        <link href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f"/>
        <updated>2023-01-06T20:24:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>User-Agent</code> and <code>Server</code> header parsers are susceptible to a fatal error on certain inputs.  In http4s, modeled headers are lazily parsed, so this only applies to services that explicitly request these typed headers. </p>
<h4 id="v021x">v0.21.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get(`User-Agent`)
</code></pre>
<h4 id="v022x-v023x-v1x">v0.22.x, v0.23.x, v1.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get[`User-Agent`]
val alsoUnsafe: Option[`Server`] = req.headers.get[Server]
</code></pre>
<h3 id="patches">Patches</h3>
<p>Fixes are released in 0.21.34, 0.22.15, 0.23.17, and 1.0.0-M38.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="use-the-weakly-typed-header-interface">Use the weakly typed header interface</h4>
<h5 id="v021x-1">v0.21.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get("User-Agent".ci)
// but don't do this
val unsafe = header.map(_.parsed) 
</code></pre>
<h5 id="v022x-v023x-v1x-1">v0.22.x, v0.23.x, v1.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get(ci"User-Agent")
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22465">https://nvd.nist.gov/vuln/detail/CVE-2023-22465</a></li>
<li><a href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/advisories/GHSA-54w6-vxfh-fw7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-06T20:24:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.http4s:http4s-core] Http4s improperly parses User-Agent and Server headers]]></title>
        <id>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</id>
        <link href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f"/>
        <updated>2023-01-06T20:24:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>User-Agent</code> and <code>Server</code> header parsers are susceptible to a fatal error on certain inputs.  In http4s, modeled headers are lazily parsed, so this only applies to services that explicitly request these typed headers. </p>
<h4 id="v021x">v0.21.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get(`User-Agent`)
</code></pre>
<h4 id="v022x-v023x-v1x">v0.22.x, v0.23.x, v1.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get[`User-Agent`]
val alsoUnsafe: Option[`Server`] = req.headers.get[Server]
</code></pre>
<h3 id="patches">Patches</h3>
<p>Fixes are released in 0.21.34, 0.22.15, 0.23.17, and 1.0.0-M38.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="use-the-weakly-typed-header-interface">Use the weakly typed header interface</h4>
<h5 id="v021x-1">v0.21.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get("User-Agent".ci)
// but don't do this
val unsafe = header.map(_.parsed) 
</code></pre>
<h5 id="v022x-v023x-v1x-1">v0.22.x, v0.23.x, v1.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get(ci"User-Agent")
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22465">https://nvd.nist.gov/vuln/detail/CVE-2023-22465</a></li>
<li><a href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/advisories/GHSA-54w6-vxfh-fw7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-06T20:24:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.http4s:http4s-core] Http4s improperly parses User-Agent and Server headers]]></title>
        <id>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</id>
        <link href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f"/>
        <updated>2023-01-06T20:24:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>User-Agent</code> and <code>Server</code> header parsers are susceptible to a fatal error on certain inputs.  In http4s, modeled headers are lazily parsed, so this only applies to services that explicitly request these typed headers. </p>
<h4 id="v021x">v0.21.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get(`User-Agent`)
</code></pre>
<h4 id="v022x-v023x-v1x">v0.22.x, v0.23.x, v1.x</h4>
<pre><code class="language-scala">val unsafe: Option[`User-Agent`] = req.headers.get[`User-Agent`]
val alsoUnsafe: Option[`Server`] = req.headers.get[Server]
</code></pre>
<h3 id="patches">Patches</h3>
<p>Fixes are released in 0.21.34, 0.22.15, 0.23.17, and 1.0.0-M38.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="use-the-weakly-typed-header-interface">Use the weakly typed header interface</h4>
<h5 id="v021x-1">v0.21.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get("User-Agent".ci)
// but don't do this
val unsafe = header.map(_.parsed) 
</code></pre>
<h5 id="v022x-v023x-v1x-1">v0.22.x, v0.23.x, v1.x</h5>
<pre><code class="language-scala">val safe: Option[Header] = req.headers.get(ci"User-Agent")
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/http4s/http4s/security/advisories/GHSA-54w6-vxfh-fw7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22465">https://nvd.nist.gov/vuln/detail/CVE-2023-22465</a></li>
<li><a href="https://github.com/advisories/GHSA-54w6-vxfh-fw7f">https://github.com/advisories/GHSA-54w6-vxfh-fw7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54w6-vxfh-fw7f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-06T20:24:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.gravitee.apim:gravitee-api-management] Gravitee API Management contains Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-vp62-m958-qj8c</id>
        <link href="https://github.com/advisories/GHSA-vp62-m958-qj8c"/>
        <updated>2023-01-06T17:21:34.000Z</updated>
        <content type="html"><![CDATA[<p><strong>This CVE addresses the partial fix for CVE-2019-25075</strong></p>
<p>Gravitee API Management before 3.15.13 allows path traversal through HTML injection. A certain HTML injection combined with path traversal in the Email service in Gravitee API Management before 3.15.13 allows anonymous users to read arbitrary files via a /management/users/register request.</p>
<p>A patch was published in 2019 for this vulnerability but did not appear to have solved the issue. Version 3.15.13 did remove the flaw.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38723">https://nvd.nist.gov/vuln/detail/CVE-2022-38723</a></li>
<li><a href="https://community.gravitee.io/t/whats-new-in-access-management-3-15-lts/164">https://community.gravitee.io/t/whats-new-in-access-management-3-15-lts/164</a></li>
<li><a href="https://gist.github.com/garatc/d86cdb1fa2e35a7ee719d9a0de0b5ca3">https://gist.github.com/garatc/d86cdb1fa2e35a7ee719d9a0de0b5ca3</a></li>
<li><a href="https://github.com/advisories/GHSA-xc4w-28g8-vqm5">https://github.com/advisories/GHSA-xc4w-28g8-vqm5</a></li>
<li><a href="https://github.com/advisories/GHSA-vp62-m958-qj8c">https://github.com/advisories/GHSA-vp62-m958-qj8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp62-m958-qj8c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-04T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.contrib:application-ckeditor-ui] XWiki CKEditor.HTMLConverter vulnerable to Remote Code Execution via Cross-Site Request Forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-6mjp-2rm6-9g85</id>
        <link href="https://github.com/advisories/GHSA-6mjp-2rm6-9g85"/>
        <updated>2023-01-06T17:15:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>CKEditor.HTMLConverter</code> document lacked a protection against Cross-Site Request Forgery (CSRF), allowing to execute macros with the rights of the current user. If a privileged user with programming rights was tricked into executing a GET request to this document with certain parameters (e.g., via an image with a corresponding URL embedded in a comment or via a redirect), this would allow arbitrary remote code execution and the attacker could gain rights, access private information or impact the availability of the wiki.</p>
<p>The attack can be demonstrated by accessing the URL <code>&lt;server&gt;/xwiki/bin/view/Main?sheet=CKEditor.HTMLConverter&amp;language=en&amp;sourceSyntax=xwiki%2F2.1&amp;stripHTMLEnvelope=true&amp;fromHTML=false&amp;toHTML=true&amp;text=%7B%7Bgroovy%7D%7Dprintln%28%22Hello+from+Groovy%21%22%29%7B%7B%2Fgroovy%7D%7D</code> where <code>&lt;server&gt;</code> is the URL of the XWiki installation as a user with programming rights. If this displays the text "Hello from Groovy!", the installation is vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in the CKEditor Integration version 1.64.3. This has also been patched in the version of the CKEditor integration that is bundled starting with XWiki 14.6 RC1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds for this other than upgrading the CKEditor integration to a fixed version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xwiki-contrib/application-ckeditor/commit/6b1053164386aefc526df7512bc664918aa6849b">https://github.com/xwiki-contrib/application-ckeditor/commit/6b1053164386aefc526df7512bc664918aa6849b</a></li>
<li><a href="https://jira.xwiki.org/browse/CKEDITOR-475">https://jira.xwiki.org/browse/CKEDITOR-475</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki-contrib/application-ckeditor/security/advisories/GHSA-6mjp-2rm6-9g85">https://github.com/xwiki-contrib/application-ckeditor/security/advisories/GHSA-6mjp-2rm6-9g85</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22457">https://nvd.nist.gov/vuln/detail/CVE-2023-22457</a></li>
<li><a href="https://github.com/xwiki-contrib/application-ckeditor/commit/6b1053164386aefc526df7512bc664918aa6849b">https://github.com/xwiki-contrib/application-ckeditor/commit/6b1053164386aefc526df7512bc664918aa6849b</a></li>
<li><a href="https://jira.xwiki.org/browse/CKEDITOR-475">https://jira.xwiki.org/browse/CKEDITOR-475</a></li>
<li><a href="https://github.com/advisories/GHSA-6mjp-2rm6-9g85">https://github.com/advisories/GHSA-6mjp-2rm6-9g85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mjp-2rm6-9g85</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-01-06T17:15:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:s3] Jenkins S3 Publisher Plugin transmits credentials in plain text during configuration]]></title>
        <id>https://github.com/advisories/GHSA-ffr6-8cv5-j637</id>
        <link href="https://github.com/advisories/GHSA-ffr6-8cv5-j637"/>
        <updated>2023-01-06T17:07:28.000Z</updated>
        <content type="html"><![CDATA[<p>S3 Publisher Plugin stores a secret key in its global configuration. While the credential is stored encrypted on disk, it is transmitted in plain text as part of the configuration form by S3 publisher Plugin 0.11.4 and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations. S3 Publisher Plugin 0.11.5 transmits the secret key in its global configuration encrypted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2114">https://nvd.nist.gov/vuln/detail/CVE-2020-2114</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1684">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1684</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-ffr6-8cv5-j637">https://github.com/advisories/GHSA-ffr6-8cv5-j637</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffr6-8cv5-j637</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:08:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.tools:git-parameter] Jenkins Git Parameter Plugin vulnerable to stored cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-fgxc-mxvw-55mv</id>
        <link href="https://github.com/advisories/GHSA-fgxc-mxvw-55mv"/>
        <updated>2023-01-06T17:06:02.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Git Parameter Plugin 0.9.11 and earlier does not escape the default value shown on the UI, resulting in a stored cross-site scripting vulnerability exploitable by users with Job/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2113">https://nvd.nist.gov/vuln/detail/CVE-2020-2113</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1709">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1709</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-fgxc-mxvw-55mv">https://github.com/advisories/GHSA-fgxc-mxvw-55mv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fgxc-mxvw-55mv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:08:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.tools:git-parameter] Jenkins Git Parameter Plugin vulnerable to Stored cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-hw26-fw67-qxm9</id>
        <link href="https://github.com/advisories/GHSA-hw26-fw67-qxm9"/>
        <updated>2023-01-06T17:05:23.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Git Parameter Plugin 0.9.11 and earlier does not escape the parameter name shown on the UI, resulting in a stored cross-site scripting vulnerability exploitable by users with Job/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2112">https://nvd.nist.gov/vuln/detail/CVE-2020-2112</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1709">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1709</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-hw26-fw67-qxm9">https://github.com/advisories/GHSA-hw26-fw67-qxm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw26-fw67-qxm9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:08:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:zephyr-for-jira-test-management] Jenkins Zephyr for JIRA Test Management Plugin stores credentials in plain text]]></title>
        <id>https://github.com/advisories/GHSA-m365-98j8-w96w</id>
        <link href="https://github.com/advisories/GHSA-m365-98j8-w96w"/>
        <updated>2023-01-06T17:03:58.000Z</updated>
        <content type="html"><![CDATA[<p>Zephyr for JIRA Test Management Plugin 1.5 and earlier stores Jira credentials unencrypted in its global configuration file <code>com.thed.zephyr.jenkins.reporter.ZfjReporter.xml</code> on the Jenkins controller. These credentials can be viewed by users with access to the Jenkins controller file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2154">https://nvd.nist.gov/vuln/detail/CVE-2020-2154</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1550">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1550</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/advisories/GHSA-m365-98j8-w96w">https://github.com/advisories/GHSA-m365-98j8-w96w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m365-98j8-w96w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:10:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jvnet.hudson.plugins:svn-release-mgr] Jenkins Subversion Release Manager Plugin vulnerable to cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-wc2g-9j98-vcgw</id>
        <link href="https://github.com/advisories/GHSA-wc2g-9j98-vcgw"/>
        <updated>2023-01-06T17:03:12.000Z</updated>
        <content type="html"><![CDATA[<p>Subversion Release Manager Plugin 1.2 and earlier does not escape the error message for the Repository URL field form validation. This results in a reflected cross-site scripting vulnerability that can also be exploited similar to a stored cross-site scripting vulnerability by users with Job/Configure permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2152">https://nvd.nist.gov/vuln/detail/CVE-2020-2152</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1727">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1727</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/advisories/GHSA-wc2g-9j98-vcgw">https://github.com/advisories/GHSA-wc2g-9j98-vcgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc2g-9j98-vcgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:10:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:quality-gates] Jenkins Quality Gates Plugin transmits credentials in plain text during configuration ]]></title>
        <id>https://github.com/advisories/GHSA-gvcj-72h4-8xm9</id>
        <link href="https://github.com/advisories/GHSA-gvcj-72h4-8xm9"/>
        <updated>2023-01-06T16:58:55.000Z</updated>
        <content type="html"><![CDATA[<p>Quality Gates Plugin stores credentials in its global configuration file <code>quality.gates.jenkins.plugin.GlobalConfig.xml</code> on the Jenkins controller as part of its configuration. While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Quality Gates Plugin 2.5 and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2151">https://nvd.nist.gov/vuln/detail/CVE-2020-2151</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1519">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1519</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/advisories/GHSA-gvcj-72h4-8xm9">https://github.com/advisories/GHSA-gvcj-72h4-8xm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvcj-72h4-8xm9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:10:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:sonar-quality-gates] Jenkins Sonar Quality Gates Plugin transmits credentials in plain text during configuration]]></title>
        <id>https://github.com/advisories/GHSA-6fh3-xhwg-7hfh</id>
        <link href="https://github.com/advisories/GHSA-6fh3-xhwg-7hfh"/>
        <updated>2023-01-06T16:56:36.000Z</updated>
        <content type="html"><![CDATA[<p>Sonar Quality Gates Plugin stores credentials in its global configuration file <code>org.quality.gates.jenkins.plugin.GlobalConfig.xml</code> on the Jenkins controller as part of its configuration. While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Sonar Quality Gates Plugin 1.3.1 and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2150">https://nvd.nist.gov/vuln/detail/CVE-2020-2150</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1523">https://jenkins.io/security/advisory/2020-03-09/#SECURITY-1523</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/03/09/1">http://www.openwall.com/lists/oss-security/2020/03/09/1</a></li>
<li><a href="https://github.com/advisories/GHSA-6fh3-xhwg-7hfh">https://github.com/advisories/GHSA-6fh3-xhwg-7hfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fh3-xhwg-7hfh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-24T17:10:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.applatix.jenkins:applatix] Password stored in plain text by Applatix Plugin]]></title>
        <id>https://github.com/advisories/GHSA-54m9-h7qp-fwvg</id>
        <link href="https://github.com/advisories/GHSA-54m9-h7qp-fwvg"/>
        <updated>2023-01-05T21:46:59.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Applatix Plugin 1.1 and earlier stores a password unencrypted in job config.xml files on the Jenkins master where it can be viewed by users with Extended Read permission, or access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2133">https://nvd.nist.gov/vuln/detail/CVE-2020-2133</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1540">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1540</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-54m9-h7qp-fwvg">https://github.com/advisories/GHSA-54m9-h7qp-fwvg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54m9-h7qp-fwvg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:08:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.parasoft:environment-manager] Password stored in plain text by Parasoft Environment Manager Plugin]]></title>
        <id>https://github.com/advisories/GHSA-gmg2-3w6v-945p</id>
        <link href="https://github.com/advisories/GHSA-gmg2-3w6v-945p"/>
        <updated>2023-01-05T21:45:44.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Parasoft Environment Manager Plugin 2.14 and earlier stores a password unencrypted in job config.xml files on the Jenkins master where it can be viewed by users with Extended Read permission, or access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2132">https://nvd.nist.gov/vuln/detail/CVE-2020-2132</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1562">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1562</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/jenkinsci/environment-manager-tools-plugin/commit/a2511b9d3dfbd3778471c6840ae6026076f11134">https://github.com/jenkinsci/environment-manager-tools-plugin/commit/a2511b9d3dfbd3778471c6840ae6026076f11134</a></li>
<li><a href="https://github.com/advisories/GHSA-gmg2-3w6v-945p">https://github.com/advisories/GHSA-gmg2-3w6v-945p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmg2-3w6v-945p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:08:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:harvest] Passwords stored in plain text by Harvest SCM Plugin]]></title>
        <id>https://github.com/advisories/GHSA-qj7p-9hgf-x8j7</id>
        <link href="https://github.com/advisories/GHSA-qj7p-9hgf-x8j7"/>
        <updated>2023-01-05T21:44:49.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Harvest SCM Plugin 0.5.1 and earlier stores passwords unencrypted in job config.xml files on the Jenkins master where they can be viewed by users with Extended Read permission, or access to the master file system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2131">https://nvd.nist.gov/vuln/detail/CVE-2020-2131</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1553">https://jenkins.io/security/advisory/2020-02-12/#SECURITY-1553</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/12/3">http://www.openwall.com/lists/oss-security/2020/02/12/3</a></li>
<li><a href="https://github.com/advisories/GHSA-qj7p-9hgf-x8j7">https://github.com/advisories/GHSA-qj7p-9hgf-x8j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj7p-9hgf-x8j7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:08:48.000Z</published>
    </entry>
</feed>