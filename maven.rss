<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2022-11-01T21:01:37.524Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Spring Security authorization rules can be bypassed via forward or include dispatcher types]]></title>
        <id>https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</id>
        <link href="https://github.com/advisories/GHSA-mmmh-wcxm-2wr4"/>
        <updated>2022-11-01T19:01:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security, versions 5.7 prior to 5.7.5 and 5.6 prior to 5.6.9 could be susceptible to authorization rules bypass via forward or include dispatcher types. Specifically, an application is vulnerable when all of the following are true: The application expects that Spring Security applies security to forward and include dispatcher types. The application uses the AuthorizationFilter either manually or via the authorizeHttpRequests() method. The application configures the FilterChainProxy to apply to forward and/or include requests (e.g. spring.security.filter.dispatcher-types = request, error, async, forward, include). The application may forward or include the request to a higher privilege-secured endpoint.The application configures Spring Security to apply to every dispatcher type via authorizeHttpRequests().shouldFilterAllDispatcherTypes(true)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31692">https://nvd.nist.gov/vuln/detail/CVE-2022-31692</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31692">https://tanzu.vmware.com/security/cve-2022-31692</a></li>
<li><a href="https://github.com/advisories/GHSA-mmmh-wcxm-2wr4">https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-core] Spring Security authorization rules can be bypassed via forward or include dispatcher types]]></title>
        <id>https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</id>
        <link href="https://github.com/advisories/GHSA-mmmh-wcxm-2wr4"/>
        <updated>2022-11-01T19:01:04.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security, versions 5.7 prior to 5.7.5 and 5.6 prior to 5.6.9 could be susceptible to authorization rules bypass via forward or include dispatcher types. Specifically, an application is vulnerable when all of the following are true: The application expects that Spring Security applies security to forward and include dispatcher types. The application uses the AuthorizationFilter either manually or via the authorizeHttpRequests() method. The application configures the FilterChainProxy to apply to forward and/or include requests (e.g. spring.security.filter.dispatcher-types = request, error, async, forward, include). The application may forward or include the request to a higher privilege-secured endpoint.The application configures Spring Security to apply to every dispatcher type via authorizeHttpRequests().shouldFilterAllDispatcherTypes(true)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31692">https://nvd.nist.gov/vuln/detail/CVE-2022-31692</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31692">https://tanzu.vmware.com/security/cve-2022-31692</a></li>
<li><a href="https://github.com/advisories/GHSA-mmmh-wcxm-2wr4">https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmmh-wcxm-2wr4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat may reject request containing invalid Content-Length header]]></title>
        <id>https://github.com/advisories/GHSA-p22x-g9px-3945</id>
        <link href="https://github.com/advisories/GHSA-p22x-g9px-3945"/>
        <updated>2022-11-01T18:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>If Apache Tomcat 8.5.0 to 8.5.52, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42252">https://nvd.nist.gov/vuln/detail/CVE-2022-42252</a></li>
<li><a href="https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq">https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq</a></li>
<li><a href="https://github.com/advisories/GHSA-p22x-g9px-3945">https://github.com/advisories/GHSA-p22x-g9px-3945</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p22x-g9px-3945</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat may reject request containing invalid Content-Length header]]></title>
        <id>https://github.com/advisories/GHSA-p22x-g9px-3945</id>
        <link href="https://github.com/advisories/GHSA-p22x-g9px-3945"/>
        <updated>2022-11-01T18:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>If Apache Tomcat 8.5.0 to 8.5.52, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42252">https://nvd.nist.gov/vuln/detail/CVE-2022-42252</a></li>
<li><a href="https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq">https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq</a></li>
<li><a href="https://github.com/advisories/GHSA-p22x-g9px-3945">https://github.com/advisories/GHSA-p22x-g9px-3945</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p22x-g9px-3945</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat may reject request containing invalid Content-Length header]]></title>
        <id>https://github.com/advisories/GHSA-p22x-g9px-3945</id>
        <link href="https://github.com/advisories/GHSA-p22x-g9px-3945"/>
        <updated>2022-11-01T18:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>If Apache Tomcat 8.5.0 to 8.5.52, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42252">https://nvd.nist.gov/vuln/detail/CVE-2022-42252</a></li>
<li><a href="https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq">https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq</a></li>
<li><a href="https://github.com/advisories/GHSA-p22x-g9px-3945">https://github.com/advisories/GHSA-p22x-g9px-3945</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p22x-g9px-3945</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat] Apache Tomcat may reject request containing invalid Content-Length header]]></title>
        <id>https://github.com/advisories/GHSA-p22x-g9px-3945</id>
        <link href="https://github.com/advisories/GHSA-p22x-g9px-3945"/>
        <updated>2022-11-01T18:37:43.000Z</updated>
        <content type="html"><![CDATA[<p>If Apache Tomcat 8.5.0 to 8.5.52, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42252">https://nvd.nist.gov/vuln/detail/CVE-2022-42252</a></li>
<li><a href="https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq">https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq</a></li>
<li><a href="https://github.com/advisories/GHSA-p22x-g9px-3945">https://github.com/advisories/GHSA-p22x-g9px-3945</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p22x-g9px-3945</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-01T12:00:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-oauth2-client] spring-security-oauth2-client vulnerable to Privilege Escalation]]></title>
        <id>https://github.com/advisories/GHSA-32vj-v39g-jh23</id>
        <link href="https://github.com/advisories/GHSA-32vj-v39g-jh23"/>
        <updated>2022-11-01T17:27:46.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security, versions 5.7 prior to 5.7.5, and 5.6 prior to 5.6.9, and older unsupported versions could be susceptible to a privilege escalation under certain conditions. A malicious user or attacker can modify a request initiated by the Client (via the browser) to the Authorization Server which can lead to a privilege escalation on the subsequent approval. This scenario can happen if the Authorization Server responds with an OAuth2 Access Token Response containing an empty scope list (per RFC 6749, Section 5.1) on the subsequent request to the token endpoint to obtain the access token.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31690">https://nvd.nist.gov/vuln/detail/CVE-2022-31690</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31690">https://tanzu.vmware.com/security/cve-2022-31690</a></li>
<li><a href="https://github.com/spring-projects/spring-security-samples/blob/4638e1e428ee2ddab234199eb3b67b9c94dfa08b/servlet/spring-boot/java/oauth2/webclient/src/main/java/example/SecurityConfiguration.java#L48">https://github.com/spring-projects/spring-security-samples/blob/4638e1e428ee2ddab234199eb3b67b9c94dfa08b/servlet/spring-boot/java/oauth2/webclient/src/main/java/example/SecurityConfiguration.java#L48</a></li>
<li><a href="https://github.com/advisories/GHSA-32vj-v39g-jh23">https://github.com/advisories/GHSA-32vj-v39g-jh23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32vj-v39g-jh23</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework.security:spring-security-oauth2-client] spring-security-oauth2-client vulnerable to Privilege Escalation]]></title>
        <id>https://github.com/advisories/GHSA-32vj-v39g-jh23</id>
        <link href="https://github.com/advisories/GHSA-32vj-v39g-jh23"/>
        <updated>2022-11-01T17:27:46.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Security, versions 5.7 prior to 5.7.5, and 5.6 prior to 5.6.9, and older unsupported versions could be susceptible to a privilege escalation under certain conditions. A malicious user or attacker can modify a request initiated by the Client (via the browser) to the Authorization Server which can lead to a privilege escalation on the subsequent approval. This scenario can happen if the Authorization Server responds with an OAuth2 Access Token Response containing an empty scope list (per RFC 6749, Section 5.1) on the subsequent request to the token endpoint to obtain the access token.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31690">https://nvd.nist.gov/vuln/detail/CVE-2022-31690</a></li>
<li><a href="https://tanzu.vmware.com/security/cve-2022-31690">https://tanzu.vmware.com/security/cve-2022-31690</a></li>
<li><a href="https://github.com/spring-projects/spring-security-samples/blob/4638e1e428ee2ddab234199eb3b67b9c94dfa08b/servlet/spring-boot/java/oauth2/webclient/src/main/java/example/SecurityConfiguration.java#L48">https://github.com/spring-projects/spring-security-samples/blob/4638e1e428ee2ddab234199eb3b67b9c94dfa08b/servlet/spring-boot/java/oauth2/webclient/src/main/java/example/SecurityConfiguration.java#L48</a></li>
<li><a href="https://github.com/advisories/GHSA-32vj-v39g-jh23">https://github.com/advisories/GHSA-32vj-v39g-jh23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32vj-v39g-jh23</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-01T12:00:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.dolphinscheduler:dolphinscheduler] Apache DolphinScheduler vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-vpgf-fgm8-gxr2</id>
        <link href="https://github.com/advisories/GHSA-vpgf-fgm8-gxr2"/>
        <updated>2022-11-01T13:29:33.000Z</updated>
        <content type="html"><![CDATA[<p>Users can read any files by log server, Apache DolphinScheduler users should upgrade to version 2.0.6 or higher.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26884">https://nvd.nist.gov/vuln/detail/CVE-2022-26884</a></li>
<li><a href="https://lists.apache.org/thread/xfdst5y4hnrm2ntmc5jzrgmw2htyyb9c">https://lists.apache.org/thread/xfdst5y4hnrm2ntmc5jzrgmw2htyyb9c</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/28/2">http://www.openwall.com/lists/oss-security/2022/10/28/2</a></li>
<li><a href="https://github.com/apache/dolphinscheduler/releases/tag/2.0.6">https://github.com/apache/dolphinscheduler/releases/tag/2.0.6</a></li>
<li><a href="https://github.com/advisories/GHSA-vpgf-fgm8-gxr2">https://github.com/advisories/GHSA-vpgf-fgm8-gxr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpgf-fgm8-gxr2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-28T12:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.main:jenkins-core] Improper Neutralization of Input During Web Page Generation in Jenkins]]></title>
        <id>https://github.com/advisories/GHSA-jpvq-v729-7j2h</id>
        <link href="https://github.com/advisories/GHSA-jpvq-v729-7j2h"/>
        <updated>2022-10-31T15:57:05.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins 2.251 and earlier, LTS 2.235.3 and earlier does not escape the remote address of the host starting a build via 'Trigger builds remotely', resulting in a stored cross-site scripting (XSS) vulnerability exploitable by users with Job/Configure permission or knowledge of the Authentication Token.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-2231">https://nvd.nist.gov/vuln/detail/CVE-2020-2231</a></li>
<li><a href="https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1960">https://jenkins.io/security/advisory/2020-08-12/#SECURITY-1960</a></li>
<li><a href="http://packetstormsecurity.com/files/160616/Jenkins-2.251-LTS-2.235.3-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/160616/Jenkins-2.251-LTS-2.235.3-Cross-Site-Scripting.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/08/12/4">http://www.openwall.com/lists/oss-security/2020/08/12/4</a></li>
<li><a href="https://github.com/advisories/GHSA-jpvq-v729-7j2h">https://github.com/advisories/GHSA-jpvq-v729-7j2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jpvq-v729-7j2h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:25:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.xmlgraphics:batik] Untrusted code execution in Apache XML Graphics Batik]]></title>
        <id>https://github.com/advisories/GHSA-rwqr-m72q-v6cm</id>
        <link href="https://github.com/advisories/GHSA-rwqr-m72q-v6cm"/>
        <updated>2022-10-31T15:41:34.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Batik of Apache XML Graphics allows an attacker to run Java code from untrusted SVG via JavaScript. This issue affects Apache XML Graphics prior to 1.16. Users are recommended to upgrade to version 1.16.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42890">https://nvd.nist.gov/vuln/detail/CVE-2022-42890</a></li>
<li><a href="https://lists.apache.org/thread/pkvhy0nsj1h1mlon008wtzhosbtxjwly">https://lists.apache.org/thread/pkvhy0nsj1h1mlon008wtzhosbtxjwly</a></li>
<li><a href="https://github.com/apache/xmlgraphics-batik/commit/401aa8595f52d085d40ff5b6b4ac0dd372423082">https://github.com/apache/xmlgraphics-batik/commit/401aa8595f52d085d40ff5b6b4ac0dd372423082</a></li>
<li><a href="https://github.com/apache/xmlgraphics-batik/commit/52f7a1ad6e3110ec295a35ffc94410eef085707a">https://github.com/apache/xmlgraphics-batik/commit/52f7a1ad6e3110ec295a35ffc94410eef085707a</a></li>
<li><a href="https://github.com/apache/xmlgraphics-batik/commit/eada57c716a2757579d53017f8b2aeadaad20edd">https://github.com/apache/xmlgraphics-batik/commit/eada57c716a2757579d53017f8b2aeadaad20edd</a></li>
<li><a href="https://issues.apache.org/jira/browse/BATIK-1345">https://issues.apache.org/jira/browse/BATIK-1345</a></li>
<li><a href="https://xmlgraphics.apache.org/security.html">https://xmlgraphics.apache.org/security.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/25/3">http://www.openwall.com/lists/oss-security/2022/10/25/3</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00038.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00038.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5264">https://www.debian.org/security/2022/dsa-5264</a></li>
<li><a href="https://github.com/advisories/GHSA-rwqr-m72q-v6cm">https://github.com/advisories/GHSA-rwqr-m72q-v6cm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rwqr-m72q-v6cm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.linkis:linkis] Apache Linkis subject to Remote Code Execution via deserialization]]></title>
        <id>https://github.com/advisories/GHSA-3f3w-gmqf-4hj3</id>
        <link href="https://github.com/advisories/GHSA-3f3w-gmqf-4hj3"/>
        <updated>2022-10-31T15:53:34.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Linkis &lt;=1.2.0 when used with the MySQL Connector/J, a deserialization vulnerability with possible remote code execution impact exists when an attacker has write access to a database and configures a JDBC EC with a MySQL data source and malicious parameters. Therefore, the parameters in the jdbc url should be blacklisted. This issue is patched in version 1.3.0, and users are recommended to upgrade.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39944">https://nvd.nist.gov/vuln/detail/CVE-2022-39944</a></li>
<li><a href="https://lists.apache.org/thread/rxytj48q17304snonjtyt5lnlw64gccc">https://lists.apache.org/thread/rxytj48q17304snonjtyt5lnlw64gccc</a></li>
<li><a href="https://github.com/advisories/GHSA-3f3w-gmqf-4hj3">https://github.com/advisories/GHSA-3f3w-gmqf-4hj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f3w-gmqf-4hj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T19:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.flume:flume-parent] Apache Flume vulnerable to remote code execution via deserialization of unsafe providerURL]]></title>
        <id>https://github.com/advisories/GHSA-9w4g-fp9h-3q2v</id>
        <link href="https://github.com/advisories/GHSA-9w4g-fp9h-3q2v"/>
        <updated>2022-10-31T15:53:07.000Z</updated>
        <content type="html"><![CDATA[<p>Flume’s JMSSource class can be configured with a providerUrl parameter. A JNDI lookup is performed on this name without performing validation. This could result in untrusted data being deserialized, leading to remote code execution (RCE) attack when a configuration uses a JMS Source with an unsafe providerURL. This issue is fixed in version 1.11.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42468">https://nvd.nist.gov/vuln/detail/CVE-2022-42468</a></li>
<li><a href="https://issues.apache.org/jira/browse/FLUME-3437">https://issues.apache.org/jira/browse/FLUME-3437</a></li>
<li><a href="https://lists.apache.org/thread/1ckhmp539zr2nd2rs45pocpywk2d9zvz">https://lists.apache.org/thread/1ckhmp539zr2nd2rs45pocpywk2d9zvz</a></li>
<li><a href="https://lists.apache.org/thread/939wkx8o90bp6m2ht3t1sdyo1ncypl78">https://lists.apache.org/thread/939wkx8o90bp6m2ht3t1sdyo1ncypl78</a></li>
<li><a href="https://github.com/advisories/GHSA-9w4g-fp9h-3q2v">https://github.com/advisories/GHSA-9w4g-fp9h-3q2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w4g-fp9h-3q2v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-26T19:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.iotdb:iotdb-parent] Apache IoTDB subject to ReDOS with Java 8]]></title>
        <id>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</id>
        <link href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7"/>
        <updated>2022-10-31T15:43:24.000Z</updated>
        <content type="html"><![CDATA[<p>Apache IoTDB versions 0.12.2 through 0.12.6, and 0.13.0 through 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. This issue is patched in 0.13.3. Users should upgrade or use a later version of Java to avoid it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43766">https://nvd.nist.gov/vuln/detail/CVE-2022-43766</a></li>
<li><a href="https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn">https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn</a></li>
<li><a href="https://github.com/advisories/GHSA-g6hg-4v3c-6jq7">https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T19:00:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.thoughtworks.xstream:xstream] Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</id>
        <link href="https://github.com/advisories/GHSA-3mq5-fq9h-gj7j"/>
        <updated>2022-10-27T17:02:50.000Z</updated>
        <content type="html"><![CDATA[<p>Those using Xstream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40151">https://nvd.nist.gov/vuln/detail/CVE-2022-40151</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47367">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47367</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/314">https://github.com/x-stream/xstream/issues/314</a></li>
<li><a href="https://github.com/advisories/GHSA-3mq5-fq9h-gj7j">https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mq5-fq9h-gj7j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.xmlgraphics:batik] Apache XML Graphics Batik vulnerable to code execution via SVG.]]></title>
        <id>https://github.com/advisories/GHSA-r29w-r9ph-vm76</id>
        <link href="https://github.com/advisories/GHSA-r29w-r9ph-vm76"/>
        <updated>2022-10-31T15:41:19.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Batik of Apache XML Graphics allows an attacker to run untrusted Java code from an SVG. This issue affects Apache XML Graphics prior to 1.16. It is recommended to update to version 1.16.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41704">https://nvd.nist.gov/vuln/detail/CVE-2022-41704</a></li>
<li><a href="https://lists.apache.org/thread/hplhx0o74jb7blj39fm4kw3otcnjd6xf">https://lists.apache.org/thread/hplhx0o74jb7blj39fm4kw3otcnjd6xf</a></li>
<li><a href="https://github.com/apache/xmlgraphics-batik/commit/905f368b50c2567cf2c4869a0ab596a7b1b5125c">https://github.com/apache/xmlgraphics-batik/commit/905f368b50c2567cf2c4869a0ab596a7b1b5125c</a></li>
<li><a href="https://issues.apache.org/jira/browse/BATIK-1338">https://issues.apache.org/jira/browse/BATIK-1338</a></li>
<li><a href="https://xmlgraphics.apache.org/security.html">https://xmlgraphics.apache.org/security.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/25/2">http://www.openwall.com/lists/oss-security/2022/10/25/2</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/10/msg00038.html">https://lists.debian.org/debian-lts-announce/2022/10/msg00038.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5264">https://www.debian.org/security/2022/dsa-5264</a></li>
<li><a href="https://github.com/advisories/GHSA-r29w-r9ph-vm76">https://github.com/advisories/GHSA-r29w-r9ph-vm76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r29w-r9ph-vm76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-25T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.geode:geode-core] Apache Geode vulnerable to Cross-Site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-373r-9mg8-3jc4</id>
        <link href="https://github.com/advisories/GHSA-373r-9mg8-3jc4"/>
        <updated>2022-10-27T18:34:42.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Geode versions up to 1.15.0 are vulnerable to a Cross-Site Scripting (XSS) via data injection when using Pulse web application to view Region entries.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34870">https://nvd.nist.gov/vuln/detail/CVE-2022-34870</a></li>
<li><a href="https://lists.apache.org/thread/zltlr7f2ymr2m6jj54k4z0c4foos5fwx">https://lists.apache.org/thread/zltlr7f2ymr2m6jj54k4z0c4foos5fwx</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/10/24/3">http://www.openwall.com/lists/oss-security/2022/10/24/3</a></li>
<li><a href="https://github.com/advisories/GHSA-373r-9mg8-3jc4">https://github.com/advisories/GHSA-373r-9mg8-3jc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-373r-9mg8-3jc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-25T19:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.woodstox:woodstox-core] Denial of Service via stack overflow]]></title>
        <id>https://github.com/advisories/GHSA-9fwf-46g9-45rx</id>
        <link href="https://github.com/advisories/GHSA-9fwf-46g9-45rx"/>
        <updated>2022-10-25T22:12:15.000Z</updated>
        <content type="html"><![CDATA[<p>Those using FasterXML/woodstox to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</p>
<p>This vulnerability is only relevant for users making use of the DTD parsing functionality. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40154">https://nvd.nist.gov/vuln/detail/CVE-2022-40154</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/157">https://github.com/FasterXML/woodstox/issues/157</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/160">https://github.com/FasterXML/woodstox/issues/160</a></li>
<li><a href="https://github.com/FasterXML/woodstox/pull/159">https://github.com/FasterXML/woodstox/pull/159</a></li>
<li><a href="https://github.com/advisories/GHSA-9fwf-46g9-45rx">https://github.com/advisories/GHSA-9fwf-46g9-45rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fwf-46g9-45rx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.woodstox:woodstox-core] Denial of Service via stack overflow]]></title>
        <id>https://github.com/advisories/GHSA-9fwf-46g9-45rx</id>
        <link href="https://github.com/advisories/GHSA-9fwf-46g9-45rx"/>
        <updated>2022-10-25T22:12:15.000Z</updated>
        <content type="html"><![CDATA[<p>Those using FasterXML/woodstox to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</p>
<p>This vulnerability is only relevant for users making use of the DTD parsing functionality. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40154">https://nvd.nist.gov/vuln/detail/CVE-2022-40154</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50393</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/157">https://github.com/FasterXML/woodstox/issues/157</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/160">https://github.com/FasterXML/woodstox/issues/160</a></li>
<li><a href="https://github.com/FasterXML/woodstox/pull/159">https://github.com/FasterXML/woodstox/pull/159</a></li>
<li><a href="https://github.com/advisories/GHSA-9fwf-46g9-45rx">https://github.com/advisories/GHSA-9fwf-46g9-45rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fwf-46g9-45rx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.woodstox:woodstox-core] Denial of Service due to parser crash]]></title>
        <id>https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</id>
        <link href="https://github.com/advisories/GHSA-4rv7-wj6m-6c6r"/>
        <updated>2022-10-25T22:13:30.000Z</updated>
        <content type="html"><![CDATA[<p>Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>
<p>This vulnerability is only relevant for users making use of the DTD parsing functionality. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40156">https://nvd.nist.gov/vuln/detail/CVE-2022-40156</a></li>
<li><a href="https://github.com/x-stream/xstream/issues/304">https://github.com/x-stream/xstream/issues/304</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50841">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50841</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/157">https://github.com/FasterXML/woodstox/issues/157</a></li>
<li><a href="https://github.com/FasterXML/woodstox/issues/160">https://github.com/FasterXML/woodstox/issues/160</a></li>
<li><a href="https://github.com/FasterXML/woodstox/pull/159">https://github.com/FasterXML/woodstox/pull/159</a></li>
<li><a href="https://github.com/advisories/GHSA-4rv7-wj6m-6c6r">https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rv7-wj6m-6c6r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-17T00:00:41.000Z</published>
    </entry>
</feed>