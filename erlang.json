{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Erlang/Elixir packages hosted at hex.pm",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Aerlang",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/erlang.json",
    "description": "Security Advisory for Erlang/Elixir packages hosted at hex.pm on GitHub",
    "items": [
        {
            "content_html": "<p>The SweetXml (aka sweet_xml) package through 0.6.6 for Erlang and Elixir allows attackers to cause a denial of service (resource consumption) via an XML entity expansion attack with an inline DTD.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15160\">https://nvd.nist.gov/vuln/detail/CVE-2019-15160</a></li>\n<li><a href=\"https://github.com/kbrw/sweet_xml/issues/71\">https://github.com/kbrw/sweet_xml/issues/71</a></li>\n<li><a href=\"https://hex.pm/packages/sweet_xml\">https://hex.pm/packages/sweet_xml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpmc-wprv-x746\">https://github.com/advisories/GHSA-qpmc-wprv-x746</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpmc-wprv-x746",
            "title": "[sweet_xml] Inline DTD allows XML bomb attack",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpmc-wprv-x746"
            }
        },
        {
            "content_html": "<p>The use of <code>String.to_atom/1</code> in PowAssent is susceptible to denial of service attacks. In <code>PowAssent.Phoenix.AuthorizationController</code> a value is fetched from the user provided params, and <code>String.to_atom/1</code> is used to convert the binary value to an atom so it can be used to fetch the provider configuration value. This is unsafe as it is user provided data, and can be used to fill up the whole atom table of ~1M which will cause the app to crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pow-auth/pow_assent/security/advisories/GHSA-368c-xvrv-x986\">https://github.com/pow-auth/pow_assent/security/advisories/GHSA-368c-xvrv-x986</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16764\">https://nvd.nist.gov/vuln/detail/CVE-2019-16764</a></li>\n<li><a href=\"https://github.com/pow-auth/pow_assent/commit/026105eeecc0e3c2f807e7109e745ea93c0fd9cf\">https://github.com/pow-auth/pow_assent/commit/026105eeecc0e3c2f807e7109e745ea93c0fd9cf</a></li>\n<li><a href=\"https://hex.pm/packages/pow_assent\">https://hex.pm/packages/pow_assent</a></li>\n<li><a href=\"http://erlang.org/doc/efficiency_guide/commoncaveats.html#list_to_atom-1\">http://erlang.org/doc/efficiency_guide/commoncaveats.html#list_to_atom-1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5653-437f-5hmc\">https://github.com/advisories/GHSA-5653-437f-5hmc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5653-437f-5hmc",
            "title": "[pow_assent] Denial of service",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:29:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5653-437f-5hmc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The use of <code>Plug.Session</code> in <code>Pow.Plug.Session</code> is susceptible to session fixation attacks if a persistent session store is used for <code>Plug.Session</code>, such as Redis or a database. Cookie store, which is used in most Phoenix apps, doesn't have this vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Call <code>Plug.Conn.configure_session(conn, renew: true)</code> periodically and after privilege change. A custom authorization plug can be written where the <code>create/3</code> method should return the <code>conn</code> only after <code>Plug.Conn.configure_session/2</code> have been called on it.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/danschultzer/pow/commit/578ffd3d8bb8e8a26077b644222186b108da474f\">https://github.com/danschultzer/pow/commit/578ffd3d8bb8e8a26077b644222186b108da474f</a><br><a href=\"https://www.owasp.org/index.php/Session_fixation\">https://www.owasp.org/index.php/Session_fixation</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/danschultzer/pow/security/advisories/GHSA-v2wf-c3j6-wpvw\">https://github.com/danschultzer/pow/security/advisories/GHSA-v2wf-c3j6-wpvw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-5205\">https://nvd.nist.gov/vuln/detail/CVE-2020-5205</a></li>\n<li><a href=\"https://github.com/danschultzer/pow/commit/578ffd3d8bb8e8a26077b644222186b108da474f\">https://github.com/danschultzer/pow/commit/578ffd3d8bb8e8a26077b644222186b108da474f</a></li>\n<li><a href=\"https://github.com/danschultzer/pow/blob/master/CHANGELOG.md#v1016-2020-01-07\">https://github.com/danschultzer/pow/blob/master/CHANGELOG.md#v1016-2020-01-07</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v2wf-c3j6-wpvw\">https://github.com/advisories/GHSA-v2wf-c3j6-wpvw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v2wf-c3j6-wpvw",
            "title": "[pow] Session fixation",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:27:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v2wf-c3j6-wpvw"
            }
        },
        {
            "content_html": "<p>Elixir Plug Plug version All contains a Header Injection vulnerability in Connection that can result in Given a cookie value, Headers can be added. This attack appear to be exploitable via Crafting a value to be sent as a cookie. This vulnerability appears to have been fixed in &gt;= 1.3.5 or ~&gt; 1.2.5 or ~&gt; 1.1.9 or ~&gt; 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000883\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000883</a></li>\n<li><a href=\"https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573\">https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573</a></li>\n<li><a href=\"https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml\">https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h73-w7ch-rh73\">https://github.com/advisories/GHSA-9h73-w7ch-rh73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73",
            "title": "[plug] Header Injection",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:26:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73"
            }
        },
        {
            "content_html": "<p>Elixir Plug Plug version All contains a Header Injection vulnerability in Connection that can result in Given a cookie value, Headers can be added. This attack appear to be exploitable via Crafting a value to be sent as a cookie. This vulnerability appears to have been fixed in &gt;= 1.3.5 or ~&gt; 1.2.5 or ~&gt; 1.1.9 or ~&gt; 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000883\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000883</a></li>\n<li><a href=\"https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573\">https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573</a></li>\n<li><a href=\"https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml\">https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h73-w7ch-rh73\">https://github.com/advisories/GHSA-9h73-w7ch-rh73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73",
            "title": "[plug] Header Injection",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:26:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73"
            }
        },
        {
            "content_html": "<p>Elixir Plug Plug version All contains a Header Injection vulnerability in Connection that can result in Given a cookie value, Headers can be added. This attack appear to be exploitable via Crafting a value to be sent as a cookie. This vulnerability appears to have been fixed in &gt;= 1.3.5 or ~&gt; 1.2.5 or ~&gt; 1.1.9 or ~&gt; 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000883\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000883</a></li>\n<li><a href=\"https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573\">https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573</a></li>\n<li><a href=\"https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml\">https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h73-w7ch-rh73\">https://github.com/advisories/GHSA-9h73-w7ch-rh73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73",
            "title": "[plug] Header Injection",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:26:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73"
            }
        },
        {
            "content_html": "<p>Elixir Plug Plug version All contains a Header Injection vulnerability in Connection that can result in Given a cookie value, Headers can be added. This attack appear to be exploitable via Crafting a value to be sent as a cookie. This vulnerability appears to have been fixed in &gt;= 1.3.5 or ~&gt; 1.2.5 or ~&gt; 1.1.9 or ~&gt; 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000883\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000883</a></li>\n<li><a href=\"https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573\">https://github.com/elixir-plug/plug/commit/8857f8ab4acf9b9c22e80480dae2636692f5f573</a></li>\n<li><a href=\"https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml\">https://github.com/dependabot/elixir-security-advisories/blob/master/packages/plug/2017-04-17.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h73-w7ch-rh73\">https://github.com/advisories/GHSA-9h73-w7ch-rh73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73",
            "title": "[plug] Header Injection",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:26:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h73-w7ch-rh73"
            }
        },
        {
            "content_html": "<p>The default serialization used by Plug session may result in code execution\n  in certain situations. Keep in mind, however, the session cookie is signed\n  and this attack can only be exploited if the attacker has access to your\n  secret key as well as your signing/encryption salts. We recommend users to\n  change their secret key base and salts if they suspect they have been leaked,\n  regardless of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000053\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000053</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5v4m-c73v-c7gq\">https://github.com/advisories/GHSA-5v4m-c73v-c7gq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq",
            "title": "[plug] Arbitrary Code Execution in Cookie Serialization",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:23:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq"
            }
        },
        {
            "content_html": "<p>The default serialization used by Plug session may result in code execution\n  in certain situations. Keep in mind, however, the session cookie is signed\n  and this attack can only be exploited if the attacker has access to your\n  secret key as well as your signing/encryption salts. We recommend users to\n  change their secret key base and salts if they suspect they have been leaked,\n  regardless of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000053\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000053</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5v4m-c73v-c7gq\">https://github.com/advisories/GHSA-5v4m-c73v-c7gq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq",
            "title": "[plug] Arbitrary Code Execution in Cookie Serialization",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:23:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq"
            }
        },
        {
            "content_html": "<p>The default serialization used by Plug session may result in code execution\n  in certain situations. Keep in mind, however, the session cookie is signed\n  and this attack can only be exploited if the attacker has access to your\n  secret key as well as your signing/encryption salts. We recommend users to\n  change their secret key base and salts if they suspect they have been leaked,\n  regardless of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000053\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000053</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5v4m-c73v-c7gq\">https://github.com/advisories/GHSA-5v4m-c73v-c7gq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq",
            "title": "[plug] Arbitrary Code Execution in Cookie Serialization",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:23:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq"
            }
        },
        {
            "content_html": "<p>The default serialization used by Plug session may result in code execution\n  in certain situations. Keep in mind, however, the session cookie is signed\n  and this attack can only be exploited if the attacker has access to your\n  secret key as well as your signing/encryption salts. We recommend users to\n  change their secret key base and salts if they suspect they have been leaked,\n  regardless of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000053\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000053</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5v4m-c73v-c7gq\">https://github.com/advisories/GHSA-5v4m-c73v-c7gq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq",
            "title": "[plug] Arbitrary Code Execution in Cookie Serialization",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:23:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5v4m-c73v-c7gq"
            }
        },
        {
            "content_html": "<p>Plug.Static is used for serving static assets, and is vulnerable to null\n  byte injection. If file upload functionality is provided, this can allow\n  users to bypass filetype restrictions.\n  We recommend all applications that provide file upload functionality and\n  serve those uploaded files locally with Plug.Static to upgrade immediately\n  or include the fix below. If uploaded files are rather stored and served\n  from S3 or any other cloud storage, you are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000052\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000052</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q6v-32mr-8p8x\">https://github.com/advisories/GHSA-2q6v-32mr-8p8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x",
            "title": "[plug] Null Byte Injection in Plug.Static",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:20:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x"
            }
        },
        {
            "content_html": "<p>Plug.Static is used for serving static assets, and is vulnerable to null\n  byte injection. If file upload functionality is provided, this can allow\n  users to bypass filetype restrictions.\n  We recommend all applications that provide file upload functionality and\n  serve those uploaded files locally with Plug.Static to upgrade immediately\n  or include the fix below. If uploaded files are rather stored and served\n  from S3 or any other cloud storage, you are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000052\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000052</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q6v-32mr-8p8x\">https://github.com/advisories/GHSA-2q6v-32mr-8p8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x",
            "title": "[plug] Null Byte Injection in Plug.Static",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:20:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x"
            }
        },
        {
            "content_html": "<p>Plug.Static is used for serving static assets, and is vulnerable to null\n  byte injection. If file upload functionality is provided, this can allow\n  users to bypass filetype restrictions.\n  We recommend all applications that provide file upload functionality and\n  serve those uploaded files locally with Plug.Static to upgrade immediately\n  or include the fix below. If uploaded files are rather stored and served\n  from S3 or any other cloud storage, you are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000052\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000052</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q6v-32mr-8p8x\">https://github.com/advisories/GHSA-2q6v-32mr-8p8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x",
            "title": "[plug] Null Byte Injection in Plug.Static",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:20:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x"
            }
        },
        {
            "content_html": "<p>Plug.Static is used for serving static assets, and is vulnerable to null\n  byte injection. If file upload functionality is provided, this can allow\n  users to bypass filetype restrictions.\n  We recommend all applications that provide file upload functionality and\n  serve those uploaded files locally with Plug.Static to upgrade immediately\n  or include the fix below. If uploaded files are rather stored and served\n  from S3 or any other cloud storage, you are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000052\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000052</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-plug/3913\">https://elixirforum.com/t/security-releases-for-plug/3913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q6v-32mr-8p8x\">https://github.com/advisories/GHSA-2q6v-32mr-8p8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x",
            "title": "[plug] Null Byte Injection in Plug.Static",
            "date_modified": "2022-06-27T19:22:01.000Z",
            "date_published": "2022-04-12T21:20:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q6v-32mr-8p8x"
            }
        },
        {
            "content_html": "<p>XSS is possible via the use of the order query parameter. An example request\n  would look like:</p>\n<pre><code>http://host/ressources?order=%27&gt;&lt;script&gt;alert(1);&lt;/script&gt;\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-20302\">https://nvd.nist.gov/vuln/detail/CVE-2018-20302</a></li>\n<li><a href=\"https://github.com/smpallen99/xain/issues/18\">https://github.com/smpallen99/xain/issues/18</a></li>\n<li><a href=\"https://github.com/dependabot/elixir-security-advisories/blob/master/packages/xain/2018-09-03.yml\">https://github.com/dependabot/elixir-security-advisories/blob/master/packages/xain/2018-09-03.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5chx-gg25-v37m\">https://github.com/advisories/GHSA-5chx-gg25-v37m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5chx-gg25-v37m",
            "title": "[xain] Cross-site Scripting in xain",
            "date_modified": "2022-06-27T19:22:00.000Z",
            "date_published": "2022-04-12T21:17:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5chx-gg25-v37m"
            }
        },
        {
            "content_html": "<p>The Phoenix team designed Phoenix.Controller.redirect/2 to protect against\n  redirects allowing user input to redirect to an external URL where your\n  application code otherwise assumes a local path redirect. This is why the\n  :to option is used for “local” URL redirects and why you must pass the\n  :external option to intentionally allow external URLs to be redirected to.\n  It has been disclosed that carefully crafted user input may be treated by some\n  browsers as an external URL. An attacker can use this vulnerability to aid in\n  social engineering attacks. The most common use would be to create highly\n  believable phishing attacks.\n  For example, the following user input would pass local URL validation,\n  but be treated by Chrome and Firefox as external URLs:\n  <a href=\"http://localhost:4000/?redirect=/%5Cnexample.com\">http://localhost:4000/?redirect=/\\nexample.com</a>\n  Not all browsers are affected, but latest Chrome and Firefox will issue a get\n  request for example.com and successfully redirect externally</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000163\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000163</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-phoenix/4143\">https://elixirforum.com/t/security-releases-for-phoenix/4143</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmfh-8f8r-fj96\">https://github.com/advisories/GHSA-cmfh-8f8r-fj96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96",
            "title": "[phoenix] Arbitrary URL Redirect",
            "date_modified": "2022-06-27T19:22:00.000Z",
            "date_published": "2022-04-12T21:16:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96"
            }
        },
        {
            "content_html": "<p>The Phoenix team designed Phoenix.Controller.redirect/2 to protect against\n  redirects allowing user input to redirect to an external URL where your\n  application code otherwise assumes a local path redirect. This is why the\n  :to option is used for “local” URL redirects and why you must pass the\n  :external option to intentionally allow external URLs to be redirected to.\n  It has been disclosed that carefully crafted user input may be treated by some\n  browsers as an external URL. An attacker can use this vulnerability to aid in\n  social engineering attacks. The most common use would be to create highly\n  believable phishing attacks.\n  For example, the following user input would pass local URL validation,\n  but be treated by Chrome and Firefox as external URLs:\n  <a href=\"http://localhost:4000/?redirect=/%5Cnexample.com\">http://localhost:4000/?redirect=/\\nexample.com</a>\n  Not all browsers are affected, but latest Chrome and Firefox will issue a get\n  request for example.com and successfully redirect externally</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000163\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000163</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-phoenix/4143\">https://elixirforum.com/t/security-releases-for-phoenix/4143</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmfh-8f8r-fj96\">https://github.com/advisories/GHSA-cmfh-8f8r-fj96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96",
            "title": "[phoenix] Arbitrary URL Redirect",
            "date_modified": "2022-06-27T19:22:00.000Z",
            "date_published": "2022-04-12T21:16:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96"
            }
        },
        {
            "content_html": "<p>The Phoenix team designed Phoenix.Controller.redirect/2 to protect against\n  redirects allowing user input to redirect to an external URL where your\n  application code otherwise assumes a local path redirect. This is why the\n  :to option is used for “local” URL redirects and why you must pass the\n  :external option to intentionally allow external URLs to be redirected to.\n  It has been disclosed that carefully crafted user input may be treated by some\n  browsers as an external URL. An attacker can use this vulnerability to aid in\n  social engineering attacks. The most common use would be to create highly\n  believable phishing attacks.\n  For example, the following user input would pass local URL validation,\n  but be treated by Chrome and Firefox as external URLs:\n  <a href=\"http://localhost:4000/?redirect=/%5Cnexample.com\">http://localhost:4000/?redirect=/\\nexample.com</a>\n  Not all browsers are affected, but latest Chrome and Firefox will issue a get\n  request for example.com and successfully redirect externally</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000163\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000163</a></li>\n<li><a href=\"https://elixirforum.com/t/security-releases-for-phoenix/4143\">https://elixirforum.com/t/security-releases-for-phoenix/4143</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmfh-8f8r-fj96\">https://github.com/advisories/GHSA-cmfh-8f8r-fj96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96",
            "title": "[phoenix] Arbitrary URL Redirect",
            "date_modified": "2022-06-27T19:22:00.000Z",
            "date_published": "2022-04-12T21:16:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmfh-8f8r-fj96"
            }
        },
        {
            "content_html": "<p>The <code>class</code> attribute was not protected against XSS attacks when using HEEx.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phoenixframework/phoenix_html/commit/62a0139fb716bcdce697f6221244bd81d321d620\">https://github.com/phoenixframework/phoenix_html/commit/62a0139fb716bcdce697f6221244bd81d321d620</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j3gg-r6gp-95q2\">https://github.com/advisories/GHSA-j3gg-r6gp-95q2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j3gg-r6gp-95q2",
            "title": "[phoenix_html] XSS in HEEx class attributes",
            "date_modified": "2022-06-27T19:22:00.000Z",
            "date_published": "2022-04-12T20:22:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j3gg-r6gp-95q2"
            }
        }
    ]
}