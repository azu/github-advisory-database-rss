{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Parsing a corrupt or malicious image with invalid color indices can cause a panic.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://go.dev/cl/588115\">https://go.dev/cl/588115</a></li>\n<li><a href=\"https://go.dev/issue/67624\">https://go.dev/issue/67624</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2937\">https://pkg.go.dev/vuln/GO-2024-2937</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24792\">https://nvd.nist.gov/vuln/detail/CVE-2024-24792</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9phm-fm57-rhg8\">https://github.com/advisories/GHSA-9phm-fm57-rhg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9phm-fm57-rhg8",
            "title": "[golang.org/x/image] Panic when parsing invalid palette-color images in golang.org/x/image",
            "date_modified": "2024-06-27T18:53:40.000Z",
            "date_published": "2024-06-26T19:26:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9phm-fm57-rhg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorpâ€™s go-getter library can be coerced into executing Git update on an existing maliciously modified Git Configuration, potentially leading to arbitrary code execution. When go-getter is performing a Git operation, go-getter will try to clone the given repository in a specified destination. Cloning initializes a git config to the provided destination and if the repository needs to get updated go-getter will pull the new changes .</p>\n<p>An attacker may alter the Git config after the cloning step to set an arbitrary Git configuration to achieve code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6257\">https://nvd.nist.gov/vuln/detail/CVE-2024-6257</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-13-hashicorp-go-getter-vulnerable-to-code-execution-on-git-update-via-git-config-manipulation/68081\">https://discuss.hashicorp.com/t/hcsec-2024-13-hashicorp-go-getter-vulnerable-to-code-execution-on-git-update-via-git-config-manipulation/68081</a></li>\n<li><a href=\"https://github.com/hashicorp/go-getter/commit/268c11cae8cf0d9374783e06572679796abe9ce9\">https://github.com/hashicorp/go-getter/commit/268c11cae8cf0d9374783e06572679796abe9ce9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xfhp-jf8p-mh5w\">https://github.com/advisories/GHSA-xfhp-jf8p-mh5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xfhp-jf8p-mh5w",
            "title": "[github.com/hashicorp/go-getter] HashiCorp go-getter Vulnerable to Code Execution On Git Update Via Git Config Manipulation",
            "date_modified": "2024-06-25T20:14:08.000Z",
            "date_published": "2024-06-25T18:31:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xfhp-jf8p-mh5w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49922\">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>\n<li><a href=\"https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180\">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>\n<li><a href=\"https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996\">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hj4r-2c9c-29h3\">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hj4r-2c9c-29h3",
            "title": "[github.com/elastic/beats] Elastic Beats inserts sensitive information into log file",
            "date_modified": "2024-06-25T14:06:38.000Z",
            "date_published": "2023-12-12T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hj4r-2c9c-29h3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49922\">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>\n<li><a href=\"https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180\">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>\n<li><a href=\"https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996\">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hj4r-2c9c-29h3\">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hj4r-2c9c-29h3",
            "title": "[github.com/elastic/beats/v7] Elastic Beats inserts sensitive information into log file",
            "date_modified": "2024-06-25T14:06:38.000Z",
            "date_published": "2023-12-12T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hj4r-2c9c-29h3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>go-retryablehttp prior to 0.7.7 did not sanitize urls when writing them to its log file. This could lead to go-retryablehttp writing sensitive HTTP basic auth credentials to its log file. This vulnerability, CVE-2024-6104, was fixed in go-retryablehttp 0.7.7.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6104\">https://nvd.nist.gov/vuln/detail/CVE-2024-6104</a></li>\n<li><a href=\"https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a\">https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027\">https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v6v8-xj6m-xwqh\">https://github.com/advisories/GHSA-v6v8-xj6m-xwqh</a></li>\n<li><a href=\"https://discuss.hashicorp.com/c/security\">https://discuss.hashicorp.com/c/security</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v6v8-xj6m-xwqh",
            "title": "[github.com/hashicorp/go-retryablehttp] go-retryablehttp can leak basic auth credentials to log files",
            "date_modified": "2024-06-26T19:31:28.000Z",
            "date_published": "2024-06-24T18:31:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v6v8-xj6m-xwqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A parsing vulnerability in lnd's onion processing logic led to a DoS vector due to excessive memory allocation. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue was patched in lnd <a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta\">v0.17.0</a>. Users should update to a version &gt;= v0.17.0 to be protected. </p>\n<h3 id=\"references\">References</h3>\n<p>Detailed blog post: <a href=\"https://morehouse.github.io/lightning/lnd-onion-bomb/\">https://morehouse.github.io/lightning/lnd-onion-bomb/</a></p>\n<p>Developer discussion: <a href=\"https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979\">https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lightningnetwork/lnd/security/advisories/GHSA-9gxx-58q6-42p7\">https://github.com/lightningnetwork/lnd/security/advisories/GHSA-9gxx-58q6-42p7</a></li>\n<li><a href=\"https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979\">https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979</a></li>\n<li><a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta\">https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta</a></li>\n<li><a href=\"https://morehouse.github.io/lightning/lnd-onion-bomb\">https://morehouse.github.io/lightning/lnd-onion-bomb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38359\">https://nvd.nist.gov/vuln/detail/CVE-2024-38359</a></li>\n<li><a href=\"https://lightning.network\">https://lightning.network</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9gxx-58q6-42p7\">https://github.com/advisories/GHSA-9gxx-58q6-42p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9gxx-58q6-42p7",
            "title": "[github.com/lightningnetwork/lnd] Lightning Network Daemon (LND)'s onion processing logic leads to a denial of service",
            "date_modified": "2024-06-21T14:02:37.000Z",
            "date_published": "2024-06-20T19:18:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9gxx-58q6-42p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"background\">Background</h3>\n<p>Use of an exclusion under an arrow that has multiple resources may resolve to <code>NO_PERMISSION</code> when permission is expected.</p>\n<p>For example, given this schema:</p>\n<pre><code class=\"language-zed\">definition user {}\n\ndefinition folder {\n  relation member: user\n  relation banned: user\n  permission view = member - banned\n}\n\ndefinition resource {\n  relation folder: folder\n  permission view = folder-&gt;view\n}\n</code></pre>\n<p>If the resource exists under <em>multiple</em> folders and the user has access to view more than a single folder, SpiceDB may report the user does not have access due to a failure in the exclusion dispatcher to request that <em>all</em> the folders in which the user is a member be returned</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Permission is returned as <code>NO_PERMISSION</code> when <code>PERMISSION</code> is expected on the <code>CheckPermission</code> API.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2\">https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2</a></li>\n<li><a href=\"https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb\">https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38361\">https://nvd.nist.gov/vuln/detail/CVE-2024-38361</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-grjv-gjgr-66g2\">https://github.com/advisories/GHSA-grjv-gjgr-66g2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-grjv-gjgr-66g2",
            "title": "[github.com/authzed/spicedb] SpiceDB exclusions can result in no permission returned when permission expected",
            "date_modified": "2024-06-21T14:02:47.000Z",
            "date_published": "2024-06-20T16:24:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-grjv-gjgr-66g2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a vulnerability in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">CVE-2024-35255</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.5\">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.3\">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf\">https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.5\">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.3\">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rvj4-q8q5-8grf\">https://github.com/advisories/GHSA-rvj4-q8q5-8grf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rvj4-q8q5-8grf",
            "title": "[github.com/traefik/traefik/v2] ACME DNS: Azure Identity Libraries Elevation of Privilege Vulnerability",
            "date_modified": "2024-06-20T16:20:26.000Z",
            "date_published": "2024-06-20T16:20:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rvj4-q8q5-8grf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a vulnerability in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">CVE-2024-35255</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.5\">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.3\">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf\">https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.5\">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.3\">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rvj4-q8q5-8grf\">https://github.com/advisories/GHSA-rvj4-q8q5-8grf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rvj4-q8q5-8grf",
            "title": "[github.com/traefik/traefik/v3] ACME DNS: Azure Identity Libraries Elevation of Privilege Vulnerability",
            "date_modified": "2024-06-20T16:20:26.000Z",
            "date_published": "2024-06-20T16:20:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rvj4-q8q5-8grf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A path traversal vulnerability exists in mudler/localai version 2.14.0, where an attacker can exploit the <code>model</code> parameter during the model deletion process to delete arbitrary files. Specifically, by crafting a request with a manipulated <code>model</code> parameter, an attacker can traverse the directory structure and target files outside of the intended directory, leading to the deletion of sensitive data. This vulnerability is due to insufficient input validation and sanitization of the <code>model</code> parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5182\">https://nvd.nist.gov/vuln/detail/CVE-2024-5182</a></li>\n<li><a href=\"https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e\">https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e</a></li>\n<li><a href=\"https://huntr.com/bounties/f7a87f29-c22a-48e8-9fce-b6d5a273e545\">https://huntr.com/bounties/f7a87f29-c22a-48e8-9fce-b6d5a273e545</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cpcx-r2gq-x893\">https://github.com/advisories/GHSA-cpcx-r2gq-x893</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cpcx-r2gq-x893",
            "title": "[github.com/go-skynet/LocalAI] LocalAI path traversal vulnerability",
            "date_modified": "2024-06-20T16:12:33.000Z",
            "date_published": "2024-06-20T00:30:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cpcx-r2gq-x893"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SFTPGo WebAdmin and WebClient support password reset. This feature is disabled in the default configuration.\nIn SFTPGo versions prior to v2.6.1, if the feature is enabled, even users with access restrictions (e.g. expired) can reset their password and log in.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v2.6.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The following workarounds are available:</p>\n<ul>\n<li>keep the password reset feature disabled.</li>\n<li>Set a blank email address for users and admins with access restrictions so they cannot receive the email with the reset code and exploit the vulnerability.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-hw5f-6wvv-xcrh\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-hw5f-6wvv-xcrh</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/releases/tag/v2.6.1\">https://github.com/drakkan/sftpgo/releases/tag/v2.6.1</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/3462bba3f41cbc75486474991b9e3ac1b5f1e583\">https://github.com/drakkan/sftpgo/commit/3462bba3f41cbc75486474991b9e3ac1b5f1e583</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37897\">https://nvd.nist.gov/vuln/detail/CVE-2024-37897</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/1f8ac8bfe16100b0484d6c91e1e8361687324423\">https://github.com/drakkan/sftpgo/commit/1f8ac8bfe16100b0484d6c91e1e8361687324423</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hw5f-6wvv-xcrh\">https://github.com/advisories/GHSA-hw5f-6wvv-xcrh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hw5f-6wvv-xcrh",
            "title": "[github.com/drakkan/sftpgo/v2] SFTPGo has insufficient access control for password reset",
            "date_modified": "2024-06-20T19:16:29.000Z",
            "date_published": "2024-06-20T16:11:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hw5f-6wvv-xcrh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>In order to be exploited you must have both OAuth2 and Password auth methods enabled.</strong></p>\n<p>A possible attack scenario could be:</p>\n<ul>\n<li>a malicious actor register with the targeted user's email (it is unverified)</li>\n<li>at some later point in time the targeted user stumble on your app and decides to sign-up with OAuth2 (<em>this step could be also initiated by the attacker by sending an invite email to the targeted user</em>)</li>\n<li>on successful OAuth2 auth we search for an existing PocketBase user matching with the OAuth2 user's email and associate them</li>\n<li>because we haven't changed the password of the existing PocketBase user during the linking, the malicious actor has access to the targeted user account and will be able to login with the initially created email/password</li>\n</ul>\n<p>To prevent this for happening we now reset the password for this specific case if the previously created user wasn't verified (an exception to this is if the linking is explicit/manual, aka. when you send <code>Authorization:TOKEN</code> with the OAuth2 auth call).</p>\n<p>Additionally to warn existing users we now send an email alert in case the user has logged in with password but has at least one OAuth2 account linked. It looks something like:</p>\n<p><em>Hello,\nJust to let you know that someone has logged in to your Acme account using a password while you already have OAuth2 GitLab auth linked.\nIf you have recently signed in with a password, you may disregard this email.\n<strong>If you don't recognize the above action, you should immediately change your Acme account password.</strong>\nThanks,\nAcme team</em></p>\n<p>The flow will be further improved with the <a href=\"https://github.com/pocketbase/pocketbase/discussions/4355\">ongoing refactoring</a> and we will start sending emails for \"unrecognized device\" logins (OTP and MFA is already implemented and will be available with the next v0.23.0 release in the near future).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pocketbase/pocketbase/security/advisories/GHSA-m93w-4fxv-r35v\">https://github.com/pocketbase/pocketbase/security/advisories/GHSA-m93w-4fxv-r35v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38351\">https://nvd.nist.gov/vuln/detail/CVE-2024-38351</a></li>\n<li><a href=\"https://github.com/pocketbase/pocketbase/commit/58ace5d5e7b9b979490019cf8d1b88491e5daec5\">https://github.com/pocketbase/pocketbase/commit/58ace5d5e7b9b979490019cf8d1b88491e5daec5</a></li>\n<li><a href=\"https://github.com/pocketbase/pocketbase/discussions/4355\">https://github.com/pocketbase/pocketbase/discussions/4355</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m93w-4fxv-r35v\">https://github.com/advisories/GHSA-m93w-4fxv-r35v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m93w-4fxv-r35v",
            "title": "[github.com/pocketbase/pocketbase] PocketBase performs password auth and OAuth2 unverified email linking",
            "date_modified": "2024-06-18T20:29:34.000Z",
            "date_published": "2024-06-18T20:29:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m93w-4fxv-r35v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the <code>github.com/go-git/go-git/v5</code> library on these lines:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L55-L89\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L55-L89</a></p>\n<p>The Git provider does the following on these lines:</p>\n<p>First, it sets the <code>CloneOptions</code>, specifying the url, the depth etc:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L56-L62\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L56-L62</a></p>\n<p>It then validates the options: </p>\n<p><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L66-L68\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L66-L68</a></p>\n<p>It then sets up an in-memory filesystem, to which it clones:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L70-L71\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L70-L71</a></p>\n<p>Finally, it clones the repository:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L77\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L77</a></p>\n<p>This <code>(g *Git) Clone()</code> method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions:</p>\n<ol>\n<li>Users can control the Git URL which Minder clones.</li>\n<li>Minder does not enforce a size limit to the repository.</li>\n<li>Minder clones the entire repository into memory.</li>\n</ol>\n<h2 id=\"poc\">PoC</h2>\n<p>Here, we share a PoC of how the logic of <code>(g *Git) Clone()</code> behaves isolated from Minder. To get a true assessment of whether this is 100% identical to its behavior in the context of Minder instead of an isolated PoC, this should be tested out by creating a large repository and instructing Minder to clone it. However, even in that case, it might not be possible to deterministically trigger a DoS because of noise from network calls.</p>\n<p>We believe the below PoC is a correct representation because:</p>\n<ol>\n<li>We have replicated the important and impactful parts of <code>(g *Git) Clone()</code></li>\n<li>We run this in multiple goroutines which Minder does here: <a href=\"https://github.com/stacklok/minder/blob/3afa50ef2e06269ed619d390d266cf1988c2068b/internal/engine/executor.go#L128\">https://github.com/stacklok/minder/blob/3afa50ef2e06269ed619d390d266cf1988c2068b/internal/engine/executor.go#L128</a></li>\n<li>Minders timeout is set to 5 minutes: <a href=\"https://github.com/stacklok/minder/blob/3afa50ef2e06269ed619d390d266cf1988c2068b/internal/engine/executor.go#L114\">https://github.com/stacklok/minder/blob/3afa50ef2e06269ed619d390d266cf1988c2068b/internal/engine/executor.go#L114</a>. With a reasonable connection, Minder can download many GBs in that period.</li>\n</ol>\n<p>In our PoC, we demonstrate that under these two conditions, a large repository can perform a SigKill of the Go process which in Minders case is the Minder server.</p>\n<p>First, create a local Git repository:</p>\n<pre><code>cd /tmp\nmkdir upstream-repo\ncd upstream-repo\ngit init --bare\ncd /tmp\ngit clone /tmp/upstream-repo ./upstream-repo-clone\ncd ./upstream-repo-clone\n# Add large file:\nfallocate -l 8G large-file\ngit add .\ngit commit -m \"add large file\"\ngit push\ncd /tmp\n</code></pre>\n<p>Create and run the following script in <code>/tmp/dos-poc/main.go</code>:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n        \"context\"\n        \"fmt\"\n        \"github.com/go-git/go-billy/v5/memfs\"\n        \"github.com/go-git/go-git/v5\"\n        \"github.com/go-git/go-git/v5/storage/memory\"\n        \"runtime\"\n        \"sync\"\n)\n\nfunc main() {\n        var (\n                wg  sync.WaitGroup\n        )\n\n        for i := 0; i &lt; 2; i++ {\n                fmt.Println(\"Starting one...\")\n                wg.Add(1)\n                go func() {\n                        defer wg.Done()\n                        opts := &amp;git.CloneOptions{\n                                URL:          \"/tmp/upstream-repo\",\n                                SingleBranch: true,\n                                Depth:        1,\n                                Tags:         git.NoTags,\n                        }\n\n                        storer := memory.NewStorage()\n                        fs := memfs.New()\n                        git.CloneContext(context.Background(), storer, fs, opts)\n                }()\n        }\n        fmt.Println(\"Finished\")\n        PrintMemUsage()\n        wg.Wait()\n\n}\n\nfunc PrintMemUsage() {\n        var m runtime.MemStats\n        runtime.ReadMemStats(&amp;m)\n        // For info on each, see: https://golang.org/pkg/runtime/#MemStats\n        fmt.Printf(\"Alloc = %v MiB\", bToMb(m.Alloc))\n        fmt.Printf(\"\\tTotalAlloc = %v MiB\", bToMb(m.TotalAlloc))\n        fmt.Printf(\"\\tSys = %v MiB\", bToMb(m.Sys))\n        fmt.Printf(\"\\tNumGC = %v\\n\", m.NumGC)\n}\n\nfunc bToMb(b uint64) uint64 {\n        return b / 1024 / 1024\n}\n</code></pre>\n<p>On my local machine, this Go program is killed before it prints \"Finished\" in the terminal. Observing the memory by way of <code>top</code>, we can see that the memory climbs steadily until the program crashes around 93% memory consumption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stacklok/minder/security/advisories/GHSA-hpcg-xjq5-g666\">https://github.com/stacklok/minder/security/advisories/GHSA-hpcg-xjq5-g666</a></li>\n<li><a href=\"https://github.com/stacklok/minder/commit/35bab8f9a6025eea9e6e3cef6bd80707ac03d2a9\">https://github.com/stacklok/minder/commit/35bab8f9a6025eea9e6e3cef6bd80707ac03d2a9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37904\">https://nvd.nist.gov/vuln/detail/CVE-2024-37904</a></li>\n<li><a href=\"https://github.com/stacklok/minder/commit/7979b43\">https://github.com/stacklok/minder/commit/7979b43</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L55-L89\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L55-L89</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L56-L62\">https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L56-L62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpcg-xjq5-g666\">https://github.com/advisories/GHSA-hpcg-xjq5-g666</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpcg-xjq5-g666",
            "title": "[github.com/stacklok/minder] Minder affected by denial of service from maliciously configured Git repository",
            "date_modified": "2024-06-18T19:27:36.000Z",
            "date_published": "2024-06-18T16:34:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpcg-xjq5-g666"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified whereby privilege escalation checks are not properly enforced for <code>RoleTemplate</code>objects when external=true, which in specific scenarios can lead to privilege escalation.</p>\n<p>The bug in the webhook rule resolver ignores rules from a <code>ClusterRole</code> for external <code>RoleTemplates</code> when its context is set to either <code>project</code> or is left empty. The fix introduces a new field to the <code>RoleTemplate</code> CRD named <code>ExternalRules</code>. The new field will be used to resolve rules directly from the <code>RoleTemplate</code>. Additionally, rules from the backing <code>ClusterRole</code> will be used if <code>ExternalRules</code> is not provided. The new field will always take precedence when it is set, and serve as the source of truth for rules used when creating Rancher resources on the local cluster.</p>\n<p>Please note that this is a breaking change for external <code>RoleTemplates</code>, when context is set to <code>project</code> or empty and the backing <code>ClusterRole</code> does not exist, as this was not previously required.</p>\n<p><strong>Important:</strong> The fix is automatically applied when upgrading to the release lines <code>2.8</code>and above. For users still on the <code>2.7</code> release line, after the upgrade to a patched version, users are required to opt-in to the fix by enabling the <code>external-rules</code> <a href=\"https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/feature-flags\">feature flag</a>.</p>\n<p>Please consult the associated <a href=\"https://attack.mitre.org/techniques/T1068/\">MITRE ATT&amp;CK - Technique - Exploitation for Privilege Escalation</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The following script was developed for Rancher Manager administrators to identify <code>RoleTemplates</code> impacted by this vulnerability. The script requires <code>jq</code> installed and a <code>kubeconfig</code> with access to Rancher local cluster; it can also be executed in Rancher's kubectl shell.</p>\n<pre><code class=\"language-bash\">#!/bin/bash\nset -euo pipefail\n\n# get all RoleTemplates with .context == \"project\" or .context == \"\" that don't have externalRules.\nrts=$(kubectl get roletemplates -o json | jq -r  '.items[] | select((.context == \"project\" or .context == \"\") and .external == true and .externalRules == null and .builtin == false) | .metadata.name')\nfound_invalid_rt=false\n\nfor rt in $rts; do\n  if ! kubectl get clusterrole \"$rt\" &gt; /dev/null 2&gt;&amp;1; then\n     echo \"$rt\" # prints RoleTemplate names that don't have a backing ClusterRole\n     found_invalid_rt=true\n  fi\ndone\n\nif ! $found_invalid_rt ; then\n    echo 'This cluster is not affected by CVE-2023-32197: no RoleTemplate objects found'\nfi\n</code></pre>\n<p>It will return all objects affected by this vulnerability. The administrator can fix those objects by creating the backing <code>ClusterRole</code> that they refer to.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32196\">CVE-2023-32196</a></li>\n</ul>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security-related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-64jq-m7rq-768h\">https://github.com/rancher/rancher/security/advisories/GHSA-64jq-m7rq-768h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-64jq-m7rq-768h\">https://github.com/advisories/GHSA-64jq-m7rq-768h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-64jq-m7rq-768h",
            "title": "[github.com/rancher/rancher] Rancher's External RoleTemplates can lead to privilege escalation",
            "date_modified": "2024-06-24T21:28:42.000Z",
            "date_published": "2024-06-17T22:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-64jq-m7rq-768h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified whereby privilege escalation checks are not properly enforced for <code>RoleTemplate</code>objects when external=true, which in specific scenarios can lead to privilege escalation.</p>\n<p>The bug in the webhook rule resolver ignores rules from a <code>ClusterRole</code> for external <code>RoleTemplates</code> when its context is set to either <code>project</code> or is left empty. The fix introduces a new field to the <code>RoleTemplate</code> CRD named <code>ExternalRules</code>. The new field will be used to resolve rules directly from the <code>RoleTemplate</code>. Additionally, rules from the backing <code>ClusterRole</code> will be used if <code>ExternalRules</code> is not provided. The new field will always take precedence when it is set, and serve as the source of truth for rules used when creating Rancher resources on the local cluster.</p>\n<p>Please note that this is a breaking change for external <code>RoleTemplates</code>, when context is set to <code>project</code> or empty and the backing <code>ClusterRole</code> does not exist, as this was not previously required.</p>\n<p><strong>Important:</strong> The fix is automatically applied when upgrading to the release lines <code>2.8</code>and above. For users still on the <code>2.7</code> release line, after the upgrade to a patched version, users are required to opt-in to the fix by enabling the <code>external-rules</code> <a href=\"https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/feature-flags\">feature flag</a>.</p>\n<p>Please consult the associated <a href=\"https://attack.mitre.org/techniques/T1068/\">MITRE ATT&amp;CK - Technique - Exploitation for Privilege Escalation</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The following script was developed for Rancher Manager administrators to identify <code>RoleTemplates</code> impacted by this vulnerability. The script requires <code>jq</code> installed and a <code>kubeconfig</code> with access to Rancher local cluster; it can also be executed in Rancher's kubectl shell.</p>\n<pre><code class=\"language-bash\">#!/bin/bash\nset -euo pipefail\n\n# get all RoleTemplates with .context == \"project\" or .context == \"\" that don't have externalRules.\nrts=$(kubectl get roletemplates -o json | jq -r  '.items[] | select((.context == \"project\" or .context == \"\") and .external == true and .externalRules == null and .builtin == false) | .metadata.name')\nfound_invalid_rt=false\n\nfor rt in $rts; do\n  if ! kubectl get clusterrole \"$rt\" &gt; /dev/null 2&gt;&amp;1; then\n     echo \"$rt\" # prints RoleTemplate names that don't have a backing ClusterRole\n     found_invalid_rt=true\n  fi\ndone\n\nif ! $found_invalid_rt ; then\n    echo 'This cluster is not affected by CVE-2023-32197: no RoleTemplate objects found'\nfi\n</code></pre>\n<p>It will return all objects affected by this vulnerability. The administrator can fix those objects by creating the backing <code>ClusterRole</code> that they refer to.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32196\">CVE-2023-32196</a></li>\n</ul>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security-related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-64jq-m7rq-768h\">https://github.com/rancher/rancher/security/advisories/GHSA-64jq-m7rq-768h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-64jq-m7rq-768h\">https://github.com/advisories/GHSA-64jq-m7rq-768h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-64jq-m7rq-768h",
            "title": "[github.com/rancher/rancher] Rancher's External RoleTemplates can lead to privilege escalation",
            "date_modified": "2024-06-24T21:28:42.000Z",
            "date_published": "2024-06-17T22:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-64jq-m7rq-768h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue is only relevant to clusters provisioned using RKE1 with secrets encryption configuration enabled.</p>\n<p>A vulnerability has been identified in which an RKE1 cluster keeps constantly reconciling when secrets encryption configuration is enabled (please see the <a href=\"https://rke.docs.rancher.com/config-options/secrets-encryption\">RKE documentation</a>). When reconciling, the Kube API secret values are written in plaintext on the AppliedSpec. Cluster owners, Cluster members, and Project members (for projects within the cluster), all have RBAC permissions to view the cluster object from the apiserver.</p>\n<p>This could lead to an unauthorized user gaining access to the entire secrets encryption config specific for the cluster, only on the applied spec.</p>\n<p>Since this affects only custom encryption configurations, users need to manually rotate the keys by editing the cluster. For more information, please refer to the <a href=\"https://rke.docs.rancher.com/config-options/secrets-encryption#key-rotation\">RKE secrets encryption documentation</a>.</p>\n<p>The full custom configuration example:</p>\n<pre><code class=\"language-yaml\">services:\n  kube-api:\n    secrets_encryption_config:\n      enabled: true\n      custom_config:\n        apiVersion: apiserver.config.k8s.io/v1\n        kind: EncryptionConfiguration\n        resources:\n        - resources:\n          - secrets\n          providers:\n          - aescbc:\n              keys:\n              - name: k-fw5hn\n                secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I= #&lt;--- needs to be changed\n          - identity: {}\n</code></pre>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1552/\">MITRE ATT&amp;CK - Technique - Unsecured Credentials</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To address this issue, the fix introduces a new change that copies the AppliedSpec before mutating. As such, the next time the cluster is reconciled and the AppliedSpec is set, all references to sensitive data will be removed. </p>\n<p>Patched versions include releases <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of RKE/Rancher Manager which contains the fixes. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22032\">CVE-2024-22032</a></li>\n</ul>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security-related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-q6c7-56cq-g2wm\">https://github.com/rancher/rancher/security/advisories/GHSA-q6c7-56cq-g2wm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6c7-56cq-g2wm\">https://github.com/advisories/GHSA-q6c7-56cq-g2wm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6c7-56cq-g2wm",
            "title": "[github.com/rancher/rancher] Rancher's RKE1 Encryption Config kept in plain-text within cluster AppliedSpec",
            "date_modified": "2024-06-17T22:30:53.000Z",
            "date_published": "2024-06-17T22:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6c7-56cq-g2wm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue is only relevant to clusters provisioned using RKE1 with secrets encryption configuration enabled.</p>\n<p>A vulnerability has been identified in which an RKE1 cluster keeps constantly reconciling when secrets encryption configuration is enabled (please see the <a href=\"https://rke.docs.rancher.com/config-options/secrets-encryption\">RKE documentation</a>). When reconciling, the Kube API secret values are written in plaintext on the AppliedSpec. Cluster owners, Cluster members, and Project members (for projects within the cluster), all have RBAC permissions to view the cluster object from the apiserver.</p>\n<p>This could lead to an unauthorized user gaining access to the entire secrets encryption config specific for the cluster, only on the applied spec.</p>\n<p>Since this affects only custom encryption configurations, users need to manually rotate the keys by editing the cluster. For more information, please refer to the <a href=\"https://rke.docs.rancher.com/config-options/secrets-encryption#key-rotation\">RKE secrets encryption documentation</a>.</p>\n<p>The full custom configuration example:</p>\n<pre><code class=\"language-yaml\">services:\n  kube-api:\n    secrets_encryption_config:\n      enabled: true\n      custom_config:\n        apiVersion: apiserver.config.k8s.io/v1\n        kind: EncryptionConfiguration\n        resources:\n        - resources:\n          - secrets\n          providers:\n          - aescbc:\n              keys:\n              - name: k-fw5hn\n                secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I= #&lt;--- needs to be changed\n          - identity: {}\n</code></pre>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1552/\">MITRE ATT&amp;CK - Technique - Unsecured Credentials</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To address this issue, the fix introduces a new change that copies the AppliedSpec before mutating. As such, the next time the cluster is reconciled and the AppliedSpec is set, all references to sensitive data will be removed. </p>\n<p>Patched versions include releases <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of RKE/Rancher Manager which contains the fixes. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22032\">CVE-2024-22032</a></li>\n</ul>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security-related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-q6c7-56cq-g2wm\">https://github.com/rancher/rancher/security/advisories/GHSA-q6c7-56cq-g2wm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6c7-56cq-g2wm\">https://github.com/advisories/GHSA-q6c7-56cq-g2wm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6c7-56cq-g2wm",
            "title": "[github.com/rancher/rancher] Rancher's RKE1 Encryption Config kept in plain-text within cluster AppliedSpec",
            "date_modified": "2024-06-17T22:30:53.000Z",
            "date_published": "2024-06-17T22:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6c7-56cq-g2wm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When RKE provisions a cluster, it stores the cluster state in a configmap called <code>full-cluster-state</code> inside the <code>kube-system</code> namespace of the cluster itself. This cluster state object contains information used to set up the K8s cluster, which may include the following sensitive data:</p>\n<ul>\n<li>RancherKubernetesEngineConfig<ul>\n<li>RKENodeConfig<ul>\n<li>SSH username</li>\n<li>SSH private key</li>\n<li>SSH private key path</li>\n</ul>\n</li>\n<li>RKEConfigServices<ul>\n<li>ETCDService<ul>\n<li>External client key</li>\n<li>BackupConfig<ul>\n<li>S3BackupConfig<ul>\n<li>AWS access key</li>\n<li>AWS secret key</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>KubeAPIService<ul>\n<li>SecretsEncryptionConfig<ul>\n<li>K8s encryption configuration (contains encryption keys)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PrivateRegistries<ul>\n<li>User</li>\n<li>Password</li>\n<li>ECRCredentialPlugin<ul>\n<li>AWS access key</li>\n<li>AWS secret key</li>\n<li>AWS session token</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CloudProvider<ul>\n<li>AzureCloudProvider<ul>\n<li>AAD client ID</li>\n<li>AAD client secret</li>\n<li>AAD client cert password</li>\n</ul>\n</li>\n<li>OpenstackCloudProvider<ul>\n<li>Username</li>\n<li>User ID</li>\n<li>Password</li>\n</ul>\n</li>\n<li>VsphereCloudProvider<ul>\n<li>GlobalVsphereOpts<ul>\n<li>User</li>\n<li>Password</li>\n</ul>\n</li>\n<li>VirtualCenterConfig<ul>\n<li>User</li>\n<li>Password</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>HarvesterCloudProvider<ul>\n<li>CloudConfig</li>\n</ul>\n</li>\n<li>CustomCloudProvider</li>\n</ul>\n</li>\n<li>BastionHost<ul>\n<li>User</li>\n<li>SSH key</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CertificatesBundle<ul>\n<li>Private key</li>\n</ul>\n</li>\n<li>EncryptionConfig<ul>\n<li>Private key</li>\n</ul>\n</li>\n</ul>\n<p>The <code>State</code> type that contains the above info and more can viewed <a href=\"https://github.com/rancher/rke/blob/8714c3c06e0bad55c61684fd5d94f1481128c58d/cluster/state.go#L37\">here</a>.</p>\n<p>While the <code>full-cluster-state</code> configmap is not publicly available (reading it requires access to the RKE cluster), it being a configmap makes it available to non-administrators of the cluster. Because this configmap contains essentially all the information and credentials required to administer the cluster, anyone with permission to read it thereby achieves admin-level access to the cluster (please consult the <a href=\"https://attack.mitre.org/techniques/T1552/001/\">MITRE ATT&amp;CK - Technique - Unsecured Credentials : Credentials In Files</a> for further information about the associated technique of attack).</p>\n<p><strong>Important:</strong>\nFor the exposure of credentials not related to Rancher and RKE, the final impact severity for confidentiality, integrity and availability is dependent on the permissions the leaked credentials have on their services.</p>\n<p>It is recommended to review for potentially leaked credentials in this scenario and to change them if deemed necessary.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is being fixed in RKE versions <code>1.4.19</code> and <code>1.5.10</code> which are included in Rancher versions <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<p>The patches include changes that will cause RKE to automatically migrate the cluster state configmap to a <code>full-cluster-state</code> secret in the <code>kube-system</code> namespace. The migrated secret will only be accessible to those who have read access to the <code>kube-system</code> namespace in the downstream RKE cluster. In Rancher, only admin and cluster-owner roles can access the secret. The old configmap will be removed after successful migration.</p>\n<p>All downstream clusters provisioned using RKE via Rancher will be migrated automatically on Rancher upgrade. Note that any downstream clusters that are unavailable or otherwise non migratable on Rancher upgrade will still be migrated automatically as soon as they become available.</p>\n<p>Clusters provisioned using RKE outside of Rancher will be migrated automatically upon the next invocation of <code>rke up</code> (i.e. the next cluster reconciliation) after upgrading RKE.</p>\n<p>If a rollback needs to be performed after an upgrade to a patched Rancher or RKE version, downstream RKE clusters that were migrated need to have their migrations manually reversed using this script: <a href=\"https://github.com/rancherlabs/support-tools/tree/master/reverse-rke-state-migrations\">https://github.com/rancherlabs/support-tools/tree/master/reverse-rke-state-migrations</a>. \n<strong>Please be sure to back up downstream clusters before performing the reverse migration</strong>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of RKE/Rancher Manager which contains the fixes.</p>\n<p>Users should not attempt to perform this migration manually without upgrading their RKE/Rancher versions as only post-patch versions of RKE are capable of reading the cluster state from a secret instead of a configmap. In other words, migrating the cluster state to a secret without upgrading RKE/Rancher would cause RKE to be unable to read the cluster state, making it incapable of managing the cluster until an RKE/Rancher upgrade is performed.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support life cycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rke/security/advisories/GHSA-6gr4-52w6-vmqx\">https://github.com/rancher/rke/security/advisories/GHSA-6gr4-52w6-vmqx</a></li>\n<li><a href=\"https://github.com/rancher/rke/commit/cf49199481a1891909acb1384eed73a5c987d5bd\">https://github.com/rancher/rke/commit/cf49199481a1891909acb1384eed73a5c987d5bd</a></li>\n<li><a href=\"https://github.com/rancher/rke/commit/f7485b8dce376db0fc15a7c3ceb3de7029c8d0cf\">https://github.com/rancher/rke/commit/f7485b8dce376db0fc15a7c3ceb3de7029c8d0cf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6gr4-52w6-vmqx\">https://github.com/advisories/GHSA-6gr4-52w6-vmqx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6gr4-52w6-vmqx",
            "title": "[github.com/rancher/rke] rke's credentials are stored in the RKE1 Cluster state ConfigMap",
            "date_modified": "2024-06-17T22:30:49.000Z",
            "date_published": "2024-06-17T22:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6gr4-52w6-vmqx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When RKE provisions a cluster, it stores the cluster state in a configmap called <code>full-cluster-state</code> inside the <code>kube-system</code> namespace of the cluster itself. This cluster state object contains information used to set up the K8s cluster, which may include the following sensitive data:</p>\n<ul>\n<li>RancherKubernetesEngineConfig<ul>\n<li>RKENodeConfig<ul>\n<li>SSH username</li>\n<li>SSH private key</li>\n<li>SSH private key path</li>\n</ul>\n</li>\n<li>RKEConfigServices<ul>\n<li>ETCDService<ul>\n<li>External client key</li>\n<li>BackupConfig<ul>\n<li>S3BackupConfig<ul>\n<li>AWS access key</li>\n<li>AWS secret key</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>KubeAPIService<ul>\n<li>SecretsEncryptionConfig<ul>\n<li>K8s encryption configuration (contains encryption keys)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PrivateRegistries<ul>\n<li>User</li>\n<li>Password</li>\n<li>ECRCredentialPlugin<ul>\n<li>AWS access key</li>\n<li>AWS secret key</li>\n<li>AWS session token</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CloudProvider<ul>\n<li>AzureCloudProvider<ul>\n<li>AAD client ID</li>\n<li>AAD client secret</li>\n<li>AAD client cert password</li>\n</ul>\n</li>\n<li>OpenstackCloudProvider<ul>\n<li>Username</li>\n<li>User ID</li>\n<li>Password</li>\n</ul>\n</li>\n<li>VsphereCloudProvider<ul>\n<li>GlobalVsphereOpts<ul>\n<li>User</li>\n<li>Password</li>\n</ul>\n</li>\n<li>VirtualCenterConfig<ul>\n<li>User</li>\n<li>Password</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>HarvesterCloudProvider<ul>\n<li>CloudConfig</li>\n</ul>\n</li>\n<li>CustomCloudProvider</li>\n</ul>\n</li>\n<li>BastionHost<ul>\n<li>User</li>\n<li>SSH key</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CertificatesBundle<ul>\n<li>Private key</li>\n</ul>\n</li>\n<li>EncryptionConfig<ul>\n<li>Private key</li>\n</ul>\n</li>\n</ul>\n<p>The <code>State</code> type that contains the above info and more can viewed <a href=\"https://github.com/rancher/rke/blob/8714c3c06e0bad55c61684fd5d94f1481128c58d/cluster/state.go#L37\">here</a>.</p>\n<p>While the <code>full-cluster-state</code> configmap is not publicly available (reading it requires access to the RKE cluster), it being a configmap makes it available to non-administrators of the cluster. Because this configmap contains essentially all the information and credentials required to administer the cluster, anyone with permission to read it thereby achieves admin-level access to the cluster (please consult the <a href=\"https://attack.mitre.org/techniques/T1552/001/\">MITRE ATT&amp;CK - Technique - Unsecured Credentials : Credentials In Files</a> for further information about the associated technique of attack).</p>\n<p><strong>Important:</strong>\nFor the exposure of credentials not related to Rancher and RKE, the final impact severity for confidentiality, integrity and availability is dependent on the permissions the leaked credentials have on their services.</p>\n<p>It is recommended to review for potentially leaked credentials in this scenario and to change them if deemed necessary.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is being fixed in RKE versions <code>1.4.19</code> and <code>1.5.10</code> which are included in Rancher versions <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<p>The patches include changes that will cause RKE to automatically migrate the cluster state configmap to a <code>full-cluster-state</code> secret in the <code>kube-system</code> namespace. The migrated secret will only be accessible to those who have read access to the <code>kube-system</code> namespace in the downstream RKE cluster. In Rancher, only admin and cluster-owner roles can access the secret. The old configmap will be removed after successful migration.</p>\n<p>All downstream clusters provisioned using RKE via Rancher will be migrated automatically on Rancher upgrade. Note that any downstream clusters that are unavailable or otherwise non migratable on Rancher upgrade will still be migrated automatically as soon as they become available.</p>\n<p>Clusters provisioned using RKE outside of Rancher will be migrated automatically upon the next invocation of <code>rke up</code> (i.e. the next cluster reconciliation) after upgrading RKE.</p>\n<p>If a rollback needs to be performed after an upgrade to a patched Rancher or RKE version, downstream RKE clusters that were migrated need to have their migrations manually reversed using this script: <a href=\"https://github.com/rancherlabs/support-tools/tree/master/reverse-rke-state-migrations\">https://github.com/rancherlabs/support-tools/tree/master/reverse-rke-state-migrations</a>. \n<strong>Please be sure to back up downstream clusters before performing the reverse migration</strong>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of RKE/Rancher Manager which contains the fixes.</p>\n<p>Users should not attempt to perform this migration manually without upgrading their RKE/Rancher versions as only post-patch versions of RKE are capable of reading the cluster state from a secret instead of a configmap. In other words, migrating the cluster state to a secret without upgrading RKE/Rancher would cause RKE to be unable to read the cluster state, making it incapable of managing the cluster until an RKE/Rancher upgrade is performed.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support life cycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rke/security/advisories/GHSA-6gr4-52w6-vmqx\">https://github.com/rancher/rke/security/advisories/GHSA-6gr4-52w6-vmqx</a></li>\n<li><a href=\"https://github.com/rancher/rke/commit/cf49199481a1891909acb1384eed73a5c987d5bd\">https://github.com/rancher/rke/commit/cf49199481a1891909acb1384eed73a5c987d5bd</a></li>\n<li><a href=\"https://github.com/rancher/rke/commit/f7485b8dce376db0fc15a7c3ceb3de7029c8d0cf\">https://github.com/rancher/rke/commit/f7485b8dce376db0fc15a7c3ceb3de7029c8d0cf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6gr4-52w6-vmqx\">https://github.com/advisories/GHSA-6gr4-52w6-vmqx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6gr4-52w6-vmqx",
            "title": "[github.com/rancher/rke] rke's credentials are stored in the RKE1 Cluster state ConfigMap",
            "date_modified": "2024-06-17T22:30:49.000Z",
            "date_published": "2024-06-17T22:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6gr4-52w6-vmqx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified in which Rancher does not automatically clean up a user which has been deleted from the configured authentication provider (AP). This characteristic also applies to disabled or revoked users, Rancher will not reflect these modifications which may leave the userâ€™s tokens still usable.</p>\n<p>An AP must be enabled to be affected by this, as the built-in User Management feature is not affected by this vulnerability.\nThis issue may lead to an adversary gaining unauthorized access, as the userâ€™s access privileges may still be active within Rancher even though they are no longer valid on the configured AP (please consult the <a href=\"https://attack.mitre.org/techniques/T1078/\">MITRE ATT&amp;CK - Technique - Valid Accounts</a> for further information about the associated technique of attack).</p>\n<p>Itâ€™s important to note that all configurable APs are impacted, see <a href=\"https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/authentication-config#external-vs-local-authentication\">Rancher Docs - Configuring Authentication - External vs. Local Authentication</a> to get the full authentication providers list.</p>\n<p>To address this issue, the fix introduces a new user retention process that can be configured to run periodically and disable and/or delete inactive users. If enabled a user becomes subject to retention if they don't login for a configurable period of time. It's possible to set overrides for users that are used mainly for programmatic access (e.g. CI, scripts etc.) so that they don't become subject to retention for a longer period of time or at all. The user retention process is disabled by default, to avoid deleting wrong accounts. It is up to each user to enable it and configure the retention period as it best suits its environment.</p>\n<p>Be aware that once the process is enabled, it might take a few days for previous users that have been revoked or deleted from the AP to be automatically removed from Rancher. To attenuate the risk of this condition, we recommend to regularly audit the APâ€™s user accounts for activity and manually deactivate or remove them from Rancher, if they are no longer needed.</p>\n<p>For further information about the user retention process configuration, please refer to the dedicated documentation <a href=\"https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-user-retention\">Rancher Docs - Advanced User Guides - Enable User Retention</a>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>2.7.14</code> and <code>2.8.5</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Administrators that are unable to update to a patched Rancher Manager version, are advised to delete Rancher users, via kubectl or through the UI, as soon as those users are deleted from the Authentication Provider. If a user needs to be temporarily disabled on the Authentication Provider, similar intervention will need to take place to reflect that change on Rancher Manager.</p>\n<p>Below is a procedure to list and remove a deleted/disabled user in Rancher using <code>kubectl</code> (with a privileged kubeconfig).</p>\n<ol>\n<li>List all users bound to a supported external auth provider, then returns <code>username</code>, <code>uid</code>, <code>displayName</code> and <code>PrincipalIds</code> which contains the related <code>authprovider_user://ID</code></li>\n</ol>\n<pre><code class=\"language-shell\">#!/bin/bash\n\nfor authprovider in {activedirectory,azure,common,genericoidc,github googleauth, keycloakoidc,ldap,oidc,publicapi,saml}\ndo \n    kubectl get users -o json | jq --arg authprovider \"$authprovider\" '.items[] | select(.principalIds[] | test(\"^\" + $authprovider + \"_user://\")) | {username: .metadata.name, uid: .metadata.uid, displayName: .displayName, principalIds: .principalIds}'\ndone\n</code></pre>\n<ol start=\"2\">\n<li>Once the <code>authprovider_user://ID</code> (and/or <code>DisplayName</code>) is confirmed, remove the user from the Rancher UI or using <code>kubectl delete users &lt;USERNAME&gt;</code>.</li>\n</ol>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-9ghh-mmcq-8phc\">https://github.com/rancher/rancher/security/advisories/GHSA-9ghh-mmcq-8phc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9ghh-mmcq-8phc\">https://github.com/advisories/GHSA-9ghh-mmcq-8phc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9ghh-mmcq-8phc",
            "title": "[github.com/rancher/rancher] Rancher does not automatically clean up a user deleted or disabled from the configured Authentication Provider",
            "date_modified": "2024-06-17T22:30:48.000Z",
            "date_published": "2024-06-17T22:30:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9ghh-mmcq-8phc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}