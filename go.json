{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Envoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.</p>\n<p>This can be exercised if you use the builtin gateway and receive untrusted http2 traffic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a>\n<a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a>\n<a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\">https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76</a>\n<a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a>\n<a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1</a>\n<a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge\">https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv",
            "title": "[github.com/kumahq/kuma] github.com/kumahq/kuma affected by CVE-2023-44487",
            "date_modified": "2023-10-17T12:41:55.000Z",
            "date_published": "2023-10-17T12:41:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Envoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.</p>\n<p>This can be exercised if you use the builtin gateway and receive untrusted http2 traffic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a>\n<a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a>\n<a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\">https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76</a>\n<a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a>\n<a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1</a>\n<a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge\">https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv",
            "title": "[github.com/kumahq/kuma] github.com/kumahq/kuma affected by CVE-2023-44487",
            "date_modified": "2023-10-17T12:41:55.000Z",
            "date_published": "2023-10-17T12:41:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Envoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.</p>\n<p>This can be exercised if you use the builtin gateway and receive untrusted http2 traffic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a>\n<a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a>\n<a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\">https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76</a>\n<a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a>\n<a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1</a>\n<a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge\">https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv",
            "title": "[github.com/kumahq/kuma] github.com/kumahq/kuma affected by CVE-2023-44487",
            "date_modified": "2023-10-17T12:41:55.000Z",
            "date_published": "2023-10-17T12:41:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Envoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.</p>\n<p>This can be exercised if you use the builtin gateway and receive untrusted http2 traffic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a>\n<a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a>\n<a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\">https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76</a>\n<a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a>\n<a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1</a>\n<a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge\">https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv",
            "title": "[github.com/kumahq/kuma] github.com/kumahq/kuma affected by CVE-2023-44487",
            "date_modified": "2023-10-17T12:41:55.000Z",
            "date_published": "2023-10-17T12:41:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Envoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.</p>\n<p>This can be exercised if you use the builtin gateway and receive untrusted http2 traffic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a>\n<a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a>\n<a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a>\n<a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\">https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76</a>\n<a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a>\n<a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1</a>\n<a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge\">https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8001\">https://github.com/kumahq/kuma/pull/8001</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8023\">https://github.com/kumahq/kuma/pull/8023</a></li>\n<li><a href=\"https://github.com/kumahq/kuma/pull/8034\">https://github.com/kumahq/kuma/pull/8034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wmc-rg4h-28wv\">https://github.com/advisories/GHSA-9wmc-rg4h-28wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv",
            "title": "[github.com/kumahq/kuma] github.com/kumahq/kuma affected by CVE-2023-44487",
            "date_modified": "2023-10-17T12:41:55.000Z",
            "date_published": "2023-10-17T12:41:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wmc-rg4h-28wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Cross-Site Request Forgery (CSRF) vulnerability has been identified in the application, which allows an attacker to obtain tokens and forge malicious requests on behalf of a user. This can lead to unauthorized actions being taken on the user's behalf, potentially compromising the security and integrity of the application.</p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<p>The vulnerability is caused by improper validation and enforcement of CSRF tokens within the application. The following issues were identified:</p>\n<ol>\n<li><strong>Lack of Token Association</strong>: The CSRF token was validated against tokens in storage but was not tied to the original requestor that generated it, allowing for token reuse.</li>\n</ol>\n<h3 id=\"specific-go-packages-affected\">Specific Go Packages Affected</h3>\n<p>github.com/gofiber/fiber/v2/middleware/csrf</p>\n<h2 id=\"remediation\">Remediation</h2>\n<p>To remediate this vulnerability, it is recommended to take the following actions:</p>\n<ol>\n<li><p><strong>Update the Application</strong>: Upgrade the application to a fixed version with a patch for the vulnerability.</p>\n</li>\n<li><p><strong>Implement Proper CSRF Protection</strong>: Review the updated documentation and ensure your application's CSRF protection mechanisms follow best practices.</p>\n</li>\n<li><p><strong>Choose CSRF Protection Method</strong>: Select the appropriate CSRF protection method based on your application's requirements, either the Double Submit Cookie method or the Synchronizer Token Pattern using sessions.</p>\n</li>\n<li><p><strong>Security Testing</strong>: Conduct a thorough security assessment, including penetration testing, to identify and address any other security vulnerabilities.</p>\n</li>\n</ol>\n<h2 id=\"defence-in-depth\">Defence-in-depth</h2>\n<p>Users should take additional security measures like captchas or Two-Factor Authentication (2FA) and set Session cookies with SameSite=Lax or SameSite=Secure, and the Secure and HttpOnly attributes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gofiber/fiber/security/advisories/GHSA-mv73-f69x-444p\">https://github.com/gofiber/fiber/security/advisories/GHSA-mv73-f69x-444p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45141\">https://nvd.nist.gov/vuln/detail/CVE-2023-45141</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv73-f69x-444p\">https://github.com/advisories/GHSA-mv73-f69x-444p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv73-f69x-444p",
            "title": "[github.com/gofiber/fiber/v2] Go Fiber CSRF Token Validation Vulnerability",
            "date_modified": "2023-10-17T12:41:09.000Z",
            "date_published": "2023-10-17T12:41:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv73-f69x-444p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Cross-Site Request Forgery (CSRF) vulnerability has been identified in the application, which allows an attacker to inject arbitrary values and forge malicious requests on behalf of a user. This vulnerability can allow an attacker to inject arbitrary values without any authentication, or perform various malicious actions on behalf of an authenticated user, potentially compromising the security and integrity of the application.</p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<p>The vulnerability is caused by improper validation and enforcement of CSRF tokens within the application. The following issues were identified:</p>\n<ol>\n<li><p><strong>Token Injection</strong>: For 'safe' methods, the token was extracted from the cookie and saved to storage without further validation or sanitization.</p>\n</li>\n<li><p><strong>Lack of Token Association</strong>: The CSRF token was validated against tokens in storage but not associated with a session, nor by using a Double Submit Cookie Method, allowing for token reuse.</p>\n</li>\n</ol>\n<h3 id=\"specific-go-packages-affected\">Specific Go Packages Affected</h3>\n<p>github.com/gofiber/fiber/v2/middleware/csrf</p>\n<h2 id=\"remediation\">Remediation</h2>\n<p>To remediate this vulnerability, it is recommended to take the following actions:</p>\n<ol>\n<li><p><strong>Update the Application</strong>: Upgrade the application to a fixed version with a patch for the vulnerability.</p>\n</li>\n<li><p><strong>Implement Proper CSRF Protection</strong>: Review the updated documentation and ensure your application's CSRF protection mechanisms follow best practices.</p>\n</li>\n<li><p><strong>Choose CSRF Protection Method</strong>: Select the appropriate CSRF protection method based on your application's requirements, either the Double Submit Cookie method or the Synchronizer Token Pattern using sessions.</p>\n</li>\n<li><p><strong>Security Testing</strong>: Conduct a thorough security assessment, including penetration testing, to identify and address any other security vulnerabilities.</p>\n</li>\n</ol>\n<h2 id=\"defence-in-depth\">Defence-in-depth</h2>\n<p>Users should take additional security measures like captchas or Two-Factor Authentication (2FA) and set Session cookies with SameSite=Lax or SameSite=Secure, and the Secure and HttpOnly attributes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gofiber/fiber/security/advisories/GHSA-94w9-97p3-p368\">https://github.com/gofiber/fiber/security/advisories/GHSA-94w9-97p3-p368</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45128\">https://nvd.nist.gov/vuln/detail/CVE-2023-45128</a></li>\n<li><a href=\"https://github.com/gofiber/fiber/commit/8c3916dbf4ad2ed427d02c6eb63ae8b2fa8f019a\">https://github.com/gofiber/fiber/commit/8c3916dbf4ad2ed427d02c6eb63ae8b2fa8f019a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-94w9-97p3-p368\">https://github.com/advisories/GHSA-94w9-97p3-p368</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-94w9-97p3-p368",
            "title": "[github.com/gofiber/fiber/v2] CSRF Token Reuse Vulnerability",
            "date_modified": "2023-10-17T12:40:38.000Z",
            "date_published": "2023-10-17T12:40:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-94w9-97p3-p368"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability CVE-2023-39325 exists in <a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1\">Go managing HTTP/2 requests</a>, which impacts Traefik. This vulnerability could be exploited to cause a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-44487\">CVE-2023-44487</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-39325\">CVE-2023-39325</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.5\">https://github.com/traefik/traefik/releases/tag/v2.10.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta4\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta4</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-7v4p-328v-8v5g\">https://github.com/traefik/traefik/security/advisories/GHSA-7v4p-328v-8v5g</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1\">https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7v4p-328v-8v5g\">https://github.com/advisories/GHSA-7v4p-328v-8v5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7v4p-328v-8v5g",
            "title": "[github.com/traefik/traefik] Traefik vulnerable to HTTP/2 request causing denial of service ",
            "date_modified": "2023-10-17T02:37:43.000Z",
            "date_published": "2023-10-17T02:37:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7v4p-328v-8v5g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability CVE-2023-39325 exists in <a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1\">Go managing HTTP/2 requests</a>, which impacts Traefik. This vulnerability could be exploited to cause a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-44487\">CVE-2023-44487</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-39325\">CVE-2023-39325</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.5\">https://github.com/traefik/traefik/releases/tag/v2.10.5</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta4\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta4</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-7v4p-328v-8v5g\">https://github.com/traefik/traefik/security/advisories/GHSA-7v4p-328v-8v5g</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1\">https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7v4p-328v-8v5g\">https://github.com/advisories/GHSA-7v4p-328v-8v5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7v4p-328v-8v5g",
            "title": "[github.com/traefik/traefik] Traefik vulnerable to HTTP/2 request causing denial of service ",
            "date_modified": "2023-10-17T02:37:43.000Z",
            "date_published": "2023-10-17T02:37:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7v4p-328v-8v5g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/gopkg.in/macaron.v1/otelmacaron] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/github.com/labstack/echo/otelecho] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenTelemetry-Go Contrib has a <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">handler wrapper <code>otelhttp</code></a> that adds the following labels by deafult that have unbound cardinality:</p>\n<ul>\n<li><code>http.user_agent</code></li>\n<li><code>http.method</code></li>\n</ul>\n<p>This leads to the server's potential memory exhaustion when many malicious requests are sent to it.</p>\n<h3 id=\"details\">Details</h3>\n<p>HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">httpconv.ServerRequest</a> that records every value for HTTP <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204\">method</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">User-Agent</a>.</p>\n<p><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">This pull request</a> released with version 0.44.0 dixes this vulnerability The values collected for attribute <code>http.request.method</code> were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In order to be affected program has to use <a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">otelhttp.NewHandler</a> wrapper and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.</p>\n<h3 id=\"others\">Others</h3>\n<p>This vulnerability is similar but different from these known vulnerabilities:</p>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a> (<a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib\">open-telemetry/opentelemetry-go-contrib</a>)</li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a> (<a href=\"https://github.com/prometheus/client_golang\">prometheus/client_golang</a>)</li>\n</ul>\n<h3 id=\"workaround-for-affected-versions\">Workaround for affected versions</h3>\n<p>As a workaround, <a href=\"https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters\">otelhttp.WithFilter()</a> can be used instead, but it requires manual careful configuration to not log certain requests entirely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45142\">https://nvd.nist.gov/vuln/detail/CVE-2023-45142</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\">https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\">https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\">https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223\">https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223</a></li>\n<li><a href=\"https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159\">https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcjv-mgp8-qvmr\">https://github.com/advisories/GHSA-rcjv-mgp8-qvmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr",
            "title": "[go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp] OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics",
            "date_modified": "2023-10-16T22:32:30.000Z",
            "date_published": "2023-10-16T14:01:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcjv-mgp8-qvmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Sylabs Singularity 2.4 to 2.6 allows local users to conduct Improper Input Validation attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19295\">https://nvd.nist.gov/vuln/detail/CVE-2018-19295</a></li>\n<li><a href=\"https://github.com/sylabs/singularity/releases/tag/2.6.1\">https://github.com/sylabs/singularity/releases/tag/2.6.1</a></li>\n<li><a href=\"https://github.com/sylabs/singularity/commit/9103f0155259fdf1159277bca3c2d347571cba0d\">https://github.com/sylabs/singularity/commit/9103f0155259fdf1159277bca3c2d347571cba0d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p83v-8vmr-qfv9\">https://github.com/advisories/GHSA-p83v-8vmr-qfv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p83v-8vmr-qfv9",
            "title": "[github.com/sylabs/singularity] Sylabs Singularity Improper Input Validation",
            "date_modified": "2023-10-15T05:03:41.000Z",
            "date_published": "2022-05-14T01:39:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p83v-8vmr-qfv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>swift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new <code>Channel</code>s to serve the traffic. This can easily overwhelm an <code>EventLoop</code> and prevent it from making forward progress.</p>\n<p>swift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/apple/swift-nio-http2/security/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/apple/swift-nio-http2/security/advisories/GHSA-qppj-fm5r-hxr3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\">https://nvd.nist.gov/vuln/detail/CVE-2023-44487</a></li>\n<li><a href=\"https://github.com/alibaba/tengine/issues/1872\">https://github.com/alibaba/tengine/issues/1872</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/issues/5877\">https://github.com/caddyserver/caddy/issues/5877</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/issues/10679\">https://github.com/eclipse/jetty.project/issues/10679</a></li>\n<li><a href=\"https://github.com/haproxy/haproxy/issues/2312\">https://github.com/haproxy/haproxy/issues/2312</a></li>\n<li><a href=\"https://github.com/hyperium/hyper/issues/3337\">https://github.com/hyperium/hyper/issues/3337</a></li>\n<li><a href=\"https://github.com/envoyproxy/envoy/pull/30055\">https://github.com/envoyproxy/envoy/pull/30055</a></li>\n<li><a href=\"https://github.com/grpc/grpc-go/pull/6703\">https://github.com/grpc/grpc-go/pull/6703</a></li>\n<li><a href=\"https://github.com/nghttp2/nghttp2/pull/1961\">https://github.com/nghttp2/nghttp2/pull/1961</a></li>\n<li><a href=\"https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61\">https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2023-011/\">https://aws.amazon.com/security/security-bulletins/AWS-2023-011/</a></li>\n<li><a href=\"https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/\">https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/</a></li>\n<li><a href=\"https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack/\">https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack/</a></li>\n<li><a href=\"https://bugzilla.proxmox.com/show_bug.cgi?id=4988\">https://bugzilla.proxmox.com/show_bug.cgi?id=4988</a></li>\n<li><a href=\"https://cgit.freebsd.org/ports/commit/?id=c64c329c2c1752f46b73e3e6ce9f4329be6629f9\">https://cgit.freebsd.org/ports/commit/?id=c64c329c2c1752f46b73e3e6ce9f4329be6629f9</a></li>\n<li><a href=\"https://chaos.social/@icing/111210915918780532\">https://chaos.social/@icing/111210915918780532</a></li>\n<li><a href=\"https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/\">https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/</a></li>\n<li><a href=\"https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a></li>\n<li><a href=\"https://forums.swift.org/t/swift-nio-http2-security-update-cve-2023-44487-http-2-dos/67764\">https://forums.swift.org/t/swift-nio-http2-security-update-cve-2023-44487-http-2-dos/67764</a></li>\n<li><a href=\"https://github.com/apache/tomcat/tree/main/java/org/apache/coyote/http2\">https://github.com/apache/tomcat/tree/main/java/org/apache/coyote/http2</a></li>\n<li><a href=\"https://github.com/bcdannyboy/CVE-2023-44487\">https://github.com/bcdannyboy/CVE-2023-44487</a></li>\n<li><a href=\"https://github.com/icing/mod_h2/blob/0a864782af0a942aa2ad4ed960a6b32cd35bcf0a/mod_http2/README.md?plain=1#L239-L244\">https://github.com/icing/mod_h2/blob/0a864782af0a942aa2ad4ed960a6b32cd35bcf0a/mod_http2/README.md?plain=1#L239-L244</a></li>\n<li><a href=\"https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0\">https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0</a></li>\n<li><a href=\"https://mailman.nginx.org/pipermail/nginx-devel/2023-October/S36Q5HBXR7CAIMPLLPRSSSYR4PCMWILK.html\">https://mailman.nginx.org/pipermail/nginx-devel/2023-October/S36Q5HBXR7CAIMPLLPRSSSYR4PCMWILK.html</a></li>\n<li><a href=\"https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2/\">https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2/</a></li>\n<li><a href=\"https://my.f5.com/manage/s/article/K000137106\">https://my.f5.com/manage/s/article/K000137106</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=37830987\">https://news.ycombinator.com/item?id=37830987</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=37830998\">https://news.ycombinator.com/item?id=37830998</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=37831062\">https://news.ycombinator.com/item?id=37831062</a></li>\n<li><a href=\"https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records/\">https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records/</a></li>\n<li><a href=\"https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/\">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/</a></li>\n<li><a href=\"https://www.phoronix.com/news/HTTP2-Rapid-Reset-Attack\">https://www.phoronix.com/news/HTTP2-Rapid-Reset-Attack</a></li>\n<li><a href=\"https://github.com/h2o/h2o/security/advisories/GHSA-2m7v-gc89-fjqf\">https://github.com/h2o/h2o/security/advisories/GHSA-2m7v-gc89-fjqf</a></li>\n<li><a href=\"https://github.com/dotnet/announcements/issues/277\">https://github.com/dotnet/announcements/issues/277</a></li>\n<li><a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a></li>\n<li><a href=\"https://github.com/apache/trafficserver/pull/10564\">https://github.com/apache/trafficserver/pull/10564</a></li>\n<li><a href=\"https://github.com/facebook/proxygen/pull/466\">https://github.com/facebook/proxygen/pull/466</a></li>\n<li><a href=\"https://github.com/h2o/h2o/pull/3291\">https://github.com/h2o/h2o/pull/3291</a></li>\n<li><a href=\"https://github.com/microsoft/CBL-Mariner/pull/6381\">https://github.com/microsoft/CBL-Mariner/pull/6381</a></li>\n<li><a href=\"https://github.com/nodejs/node/pull/50121\">https://github.com/nodejs/node/pull/50121</a></li>\n<li><a href=\"https://edg.io/lp/blog/resets-leaks-ddos-and-the-tale-of-a-hidden-cve\">https://edg.io/lp/blog/resets-leaks-ddos-and-the-tale-of-a-hidden-cve</a></li>\n<li><a href=\"https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088\">https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx74-f528-fxqg\">https://github.com/advisories/GHSA-vx74-f528-fxqg</a></li>\n<li><a href=\"https://github.com/micrictor/http2-rst-stream\">https://github.com/micrictor/http2-rst-stream</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo\">https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo</a></li>\n<li><a href=\"https://lists.apache.org/thread/5py8h42mxfsn8l1wy6o41xwhsjlsd87q\">https://lists.apache.org/thread/5py8h42mxfsn8l1wy6o41xwhsjlsd87q</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-44487\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-44487</a></li>\n<li><a href=\"https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response/\">https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response/</a></li>\n<li><a href=\"https://seanmonstar.com/post/730794151136935936/hyper-http2-rapid-reset-unaffected\">https://seanmonstar.com/post/730794151136935936/hyper-http2-rapid-reset-unaffected</a></li>\n<li><a href=\"https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.14\">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.14</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2023/10/10/6\">https://www.openwall.com/lists/oss-security/2023/10/10/6</a></li>\n<li><a href=\"https://github.com/opensearch-project/data-prepper/issues/3474\">https://github.com/opensearch-project/data-prepper/issues/3474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/121120\">https://github.com/kubernetes/kubernetes/pull/121120</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xpw8-rcwv-8f8p\">https://github.com/advisories/GHSA-xpw8-rcwv-8f8p</a></li>\n<li><a href=\"https://github.com/dotnet/core/blob/e4613450ea0da7fd2fc6b61dfb2c1c1dec1ce9ec/release-notes/6.0/6.0.23/6.0.23.md?plain=1#L73\">https://github.com/dotnet/core/blob/e4613450ea0da7fd2fc6b61dfb2c1c1dec1ce9ec/release-notes/6.0/6.0.23/6.0.23.md?plain=1#L73</a></li>\n<li><a href=\"https://github.com/oqtane/oqtane.framework/discussions/3367\">https://github.com/oqtane/oqtane.framework/discussions/3367</a></li>\n<li><a href=\"https://netty.io/news/2023/10/10/4-1-100-Final.html\">https://netty.io/news/2023/10/10/4-1-100-Final.html</a></li>\n<li><a href=\"https://www.haproxy.com/blog/haproxy-is-not-affected-by-the-http-2-rapid-reset-attack-cve-2023-44487\">https://www.haproxy.com/blog/haproxy-is-not-affected-by-the-http-2-rapid-reset-attack-cve-2023-44487</a></li>\n<li><a href=\"https://github.com/Azure/AKS/issues/3947\">https://github.com/Azure/AKS/issues/3947</a></li>\n<li><a href=\"https://github.com/akka/akka-http/issues/4323\">https://github.com/akka/akka-http/issues/4323</a></li>\n<li><a href=\"https://github.com/apache/apisix/issues/10320\">https://github.com/apache/apisix/issues/10320</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/issues/16740\">https://github.com/etcd-io/etcd/issues/16740</a></li>\n<li><a href=\"https://github.com/junkurihara/rust-rpxy/issues/97\">https://github.com/junkurihara/rust-rpxy/issues/97</a></li>\n<li><a href=\"https://github.com/kazu-yamamoto/http2/issues/93\">https://github.com/kazu-yamamoto/http2/issues/93</a></li>\n<li><a href=\"https://github.com/ninenines/cowboy/issues/1615\">https://github.com/ninenines/cowboy/issues/1615</a></li>\n<li><a href=\"https://github.com/openresty/openresty/issues/930\">https://github.com/openresty/openresty/issues/930</a></li>\n<li><a href=\"https://github.com/tempesta-tech/tempesta/issues/1986\">https://github.com/tempesta-tech/tempesta/issues/1986</a></li>\n<li><a href=\"https://github.com/varnishcache/varnish-cache/issues/3996\">https://github.com/varnishcache/varnish-cache/issues/3996</a></li>\n<li><a href=\"https://github.com/apache/httpd-site/pull/10\">https://github.com/apache/httpd-site/pull/10</a></li>\n<li><a href=\"https://github.com/line/armeria/pull/5232\">https://github.com/line/armeria/pull/5232</a></li>\n<li><a href=\"https://github.com/linkerd/website/pull/1695/commits/4b9c6836471bc8270ab48aae6fd2181bc73fd632\">https://github.com/linkerd/website/pull/1695/commits/4b9c6836471bc8270ab48aae6fd2181bc73fd632</a></li>\n<li><a href=\"https://github.com/projectcontour/contour/pull/5826\">https://github.com/projectcontour/contour/pull/5826</a></li>\n<li><a href=\"https://github.com/kazu-yamamoto/http2/commit/f61d41a502bd0f60eb24e1ce14edc7b6df6722a1\">https://github.com/kazu-yamamoto/http2/commit/f61d41a502bd0f60eb24e1ce14edc7b6df6722a1</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2023-44487\">https://access.redhat.com/security/cve/cve-2023-44487</a></li>\n<li><a href=\"https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty/\">https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty/</a></li>\n<li><a href=\"https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack\">https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack</a></li>\n<li><a href=\"https://blog.vespa.ai/cve-2023-44487/\">https://blog.vespa.ai/cve-2023-44487/</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2242803\">https://bugzilla.redhat.com/show_bug.cgi?id=2242803</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1216123\">https://bugzilla.suse.com/show_bug.cgi?id=1216123</a></li>\n<li><a href=\"https://community.traefik.io/t/is-traefik-vulnerable-to-cve-2023-44487/20125\">https://community.traefik.io/t/is-traefik-vulnerable-to-cve-2023-44487/20125</a></li>\n<li><a href=\"https://github.com/Kong/kong/discussions/11741\">https://github.com/Kong/kong/discussions/11741</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qppj-fm5r-hxr3\">https://github.com/advisories/GHSA-qppj-fm5r-hxr3</a></li>\n<li><a href=\"https://github.com/apache/httpd/blob/afcdbeebbff4b0c50ea26cdd16e178c0d1f24152/modules/http2/h2_mplx.c#L1101-L1113\">https://github.com/apache/httpd/blob/afcdbeebbff4b0c50ea26cdd16e178c0d1f24152/modules/http2/h2_mplx.c#L1101-L1113</a></li>\n<li><a href=\"https://github.com/arkrwn/PoC/tree/main/CVE-2023-44487\">https://github.com/arkrwn/PoC/tree/main/CVE-2023-44487</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/releases/tag/v2.7.5\">https://github.com/caddyserver/caddy/releases/tag/v2.7.5</a></li>\n<li><a href=\"https://go.dev/cl/534215\">https://go.dev/cl/534215</a></li>\n<li><a href=\"https://go.dev/cl/534235\">https://go.dev/cl/534235</a></li>\n<li><a href=\"https://go.dev/issue/63417\">https://go.dev/issue/63417</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ\">https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ</a></li>\n<li><a href=\"https://istio.io/latest/news/security/istio-security-2023-004/\">https://istio.io/latest/news/security/istio-security-2023-004/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/10/msg00020.html\">https://lists.debian.org/debian-lts-announce/2023/10/msg00020.html</a></li>\n<li><a href=\"https://martinthomson.github.io/h2-stream-limits/draft-thomson-httpbis-h2-stream-limits.html\">https://martinthomson.github.io/h2-stream-limits/draft-thomson-httpbis-h2-stream-limits.html</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=37837043\">https://news.ycombinator.com/item?id=37837043</a></li>\n<li><a href=\"https://security.paloaltonetworks.com/CVE-2023-44487\">https://security.paloaltonetworks.com/CVE-2023-44487</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2023-44487\">https://ubuntu.com/security/CVE-2023-44487</a></li>\n<li><a href=\"https://www.cisa.gov/news-events/alerts/2023/10/10/http2-rapid-reset-vulnerability-cve-2023-44487\">https://www.cisa.gov/news-events/alerts/2023/10/10/http2-rapid-reset-vulnerability-cve-2023-44487</a></li>\n<li><a href=\"https://www.darkreading.com/cloud/internet-wide-zero-day-bug-fuels-largest-ever-ddos-event\">https://www.darkreading.com/cloud/internet-wide-zero-day-bug-fuels-largest-ever-ddos-event</a></li>\n<li><a href=\"https://www.debian.org/security/2023/dsa-5521\">https://www.debian.org/security/2023/dsa-5521</a></li>\n<li><a href=\"https://www.debian.org/security/2023/dsa-5522\">https://www.debian.org/security/2023/dsa-5522</a></li>\n<li><a href=\"https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487/\">https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487/</a></li>\n<li><a href=\"https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday/\">https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/10/13/4\">http://www.openwall.com/lists/oss-security/2023/10/13/4</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/10/13/9\">http://www.openwall.com/lists/oss-security/2023/10/13/9</a></li>\n<li><a href=\"https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size/\">https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size/</a></li>\n<li><a href=\"https://linkerd.io/2023/10/12/linkerd-cve-2023-44487/\">https://linkerd.io/2023/10/12/linkerd-cve-2023-44487/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html\">https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/</a></li>\n<li><a href=\"https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0025.html\">https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0025.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20231016-0001/\">https://security.netapp.com/advisory/ntap-20231016-0001/</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qppj-fm5r-hxr3",
            "title": "[golang.org/x/net] swift-nio-http2 vulnerable to HTTP/2 Stream Cancellation Attack",
            "date_modified": "2023-10-16T21:44:16.000Z",
            "date_published": "2023-10-10T21:28:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qppj-fm5r-hxr3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3978\">https://nvd.nist.gov/vuln/detail/CVE-2023-3978</a></li>\n<li><a href=\"https://go.dev/cl/514896\">https://go.dev/cl/514896</a></li>\n<li><a href=\"https://go.dev/issue/61615\">https://go.dev/issue/61615</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1988\">https://pkg.go.dev/vuln/GO-2023-1988</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2wrh-6pvc-2jm9\">https://github.com/advisories/GHSA-2wrh-6pvc-2jm9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2wrh-6pvc-2jm9",
            "title": "[golang.org/x/net] Improper rendering of text nodes in golang.org/x/net/html",
            "date_modified": "2023-10-13T23:10:22.000Z",
            "date_published": "2023-08-02T21:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2wrh-6pvc-2jm9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.</p>\n<p>With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.</p>\n<p>This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.</p>\n<p>The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/golang/go/issues/63417\">https://github.com/golang/go/issues/63417</a></li>\n<li><a href=\"https://go.dev/cl/534215\">https://go.dev/cl/534215</a></li>\n<li><a href=\"https://go.dev/cl/534235\">https://go.dev/cl/534235</a></li>\n<li><a href=\"https://go.dev/issue/63417\">https://go.dev/issue/63417</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ\">https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39325\">https://nvd.nist.gov/vuln/detail/CVE-2023-39325</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-2102\">https://pkg.go.dev/vuln/GO-2023-2102</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4374-p667-p6c8\">https://github.com/advisories/GHSA-4374-p667-p6c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4374-p667-p6c8",
            "title": "[golang.org/x/net] HTTP/2 rapid reset can cause excessive work in net/http",
            "date_modified": "2023-10-13T22:54:53.000Z",
            "date_published": "2023-10-11T20:35:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4374-p667-p6c8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}