{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>v2fly/v2ray-core prior to 4.44.0 is vulnerable to an off-by-one error. Indexing operations on arrays, slices, or strings should use an index at most one less than the length. If the index is checked for being less than or equal to the length (<code>&lt;=</code>), instead of less than the length (<code>&lt;</code>), the index could be out of bounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4070\">https://nvd.nist.gov/vuln/detail/CVE-2021-4070</a></li>\n<li><a href=\"https://github.com/v2fly/v2ray-core/commit/c1af2bfd7aa59a4482aa7f6ec4b9208c1d350b5c\">https://github.com/v2fly/v2ray-core/commit/c1af2bfd7aa59a4482aa7f6ec4b9208c1d350b5c</a></li>\n<li><a href=\"https://huntr.dev/bounties/8da19456-4d89-41ef-9781-a41efd6a1877\">https://huntr.dev/bounties/8da19456-4d89-41ef-9781-a41efd6a1877</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4cxw-hq44-r344\">https://github.com/advisories/GHSA-4cxw-hq44-r344</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4cxw-hq44-r344",
            "title": "[github.com/v2fly/v2ray-core] Off-by-one Error in v2fly/v2ray-core",
            "date_modified": "2022-02-26T01:54:24.000Z",
            "date_published": "2022-02-24T00:00:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4cxw-hq44-r344"
            }
        },
        {
            "content_html": "<p>v2fly/v2ray-core prior to 4.44.0 is vulnerable to an off-by-one error. Indexing operations on arrays, slices, or strings should use an index at most one less than the length. If the index is checked for being less than or equal to the length (<code>&lt;=</code>), instead of less than the length (<code>&lt;</code>), the index could be out of bounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4070\">https://nvd.nist.gov/vuln/detail/CVE-2021-4070</a></li>\n<li><a href=\"https://github.com/v2fly/v2ray-core/commit/c1af2bfd7aa59a4482aa7f6ec4b9208c1d350b5c\">https://github.com/v2fly/v2ray-core/commit/c1af2bfd7aa59a4482aa7f6ec4b9208c1d350b5c</a></li>\n<li><a href=\"https://huntr.dev/bounties/8da19456-4d89-41ef-9781-a41efd6a1877\">https://huntr.dev/bounties/8da19456-4d89-41ef-9781-a41efd6a1877</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4cxw-hq44-r344\">https://github.com/advisories/GHSA-4cxw-hq44-r344</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4cxw-hq44-r344",
            "title": "[github.com/v2fly/v2ray-core/v4] Off-by-one Error in v2fly/v2ray-core",
            "date_modified": "2022-02-26T01:54:24.000Z",
            "date_published": "2022-02-24T00:00:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4cxw-hq44-r344"
            }
        },
        {
            "content_html": "<p>An incorrect sysctls validation vulnerability was found in CRI-O 1.18 and earlier. The sysctls from the list of \"safe\" sysctls specified for the cluster will be applied to the host if an attacker is able to create a pod with a hostIPC and hostNetwork kernel namespace.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0532\">https://nvd.nist.gov/vuln/detail/CVE-2022-0532</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2051730\">https://bugzilla.redhat.com/show_bug.cgi?id=2051730</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls\">https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/pull/5610\">https://github.com/cri-o/cri-o/pull/5610</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/releases/tag/v1.23.1\">https://github.com/cri-o/cri-o/releases/tag/v1.23.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqmc-79gx-7g8p\">https://github.com/advisories/GHSA-jqmc-79gx-7g8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p",
            "title": "[github.com/cri-o/cri-o] Incorrect Permission Assignment for Critical Resource in CRI-O",
            "date_modified": "2022-02-23T22:00:52.000Z",
            "date_published": "2022-02-11T00:00:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Using a malicious <code>Connection</code> header, an attacker with a proper authentication mechanism could start a privilege escalation towards the Kubernetes API Server, being able to exploit the <code>cluster-admin</code> Role bound to <code>capsule-proxy</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch has been merged in the v0.2.1 release.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrading is mandatory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/clastix/capsule-proxy/security/advisories/GHSA-9cwv-cppx-mqjm\">https://github.com/clastix/capsule-proxy/security/advisories/GHSA-9cwv-cppx-mqjm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23652\">https://nvd.nist.gov/vuln/detail/CVE-2022-23652</a></li>\n<li><a href=\"https://github.com/clastix/capsule-proxy/issues/188\">https://github.com/clastix/capsule-proxy/issues/188</a></li>\n<li><a href=\"https://github.com/clastix/capsule-proxy/commit/efe91f68ebf8a9e3d21491dc57da7b8a746415d8\">https://github.com/clastix/capsule-proxy/commit/efe91f68ebf8a9e3d21491dc57da7b8a746415d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cwv-cppx-mqjm\">https://github.com/advisories/GHSA-9cwv-cppx-mqjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cwv-cppx-mqjm",
            "title": "[github.com/clastix/capsule-proxy] Improper Authentication in Capsule Proxy",
            "date_modified": "2022-02-26T01:53:25.000Z",
            "date_published": "2022-02-23T21:17:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cwv-cppx-mqjm"
            }
        },
        {
            "content_html": "<p>Netmaker prior to versions 0.8.5, 0.9.4, 0.10.0, and 0.10.1 uses a hard-coded cryptographic key.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0664\">https://nvd.nist.gov/vuln/detail/CVE-2022-0664</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/9bee12642986cb9534e268447b70e6f0f03c59cf\">https://github.com/gravitl/netmaker/commit/9bee12642986cb9534e268447b70e6f0f03c59cf</a></li>\n<li><a href=\"https://huntr.dev/bounties/29898a42-fd4f-4b5b-a8e3-ab573cb87eac\">https://huntr.dev/bounties/29898a42-fd4f-4b5b-a8e3-ab573cb87eac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6rrw-4fm9-rghv\">https://github.com/advisories/GHSA-6rrw-4fm9-rghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6rrw-4fm9-rghv",
            "title": "[github.com/gravitl/netmaker] Use of Hard-coded Cryptographic Key in Netmaker",
            "date_modified": "2022-02-26T01:51:36.000Z",
            "date_published": "2022-02-19T00:01:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6rrw-4fm9-rghv"
            }
        },
        {
            "content_html": "<p>Netmaker prior to versions 0.8.5, 0.9.4, 0.10.0, and 0.10.1 uses a hard-coded cryptographic key.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0664\">https://nvd.nist.gov/vuln/detail/CVE-2022-0664</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/9bee12642986cb9534e268447b70e6f0f03c59cf\">https://github.com/gravitl/netmaker/commit/9bee12642986cb9534e268447b70e6f0f03c59cf</a></li>\n<li><a href=\"https://huntr.dev/bounties/29898a42-fd4f-4b5b-a8e3-ab573cb87eac\">https://huntr.dev/bounties/29898a42-fd4f-4b5b-a8e3-ab573cb87eac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6rrw-4fm9-rghv\">https://github.com/advisories/GHSA-6rrw-4fm9-rghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6rrw-4fm9-rghv",
            "title": "[github.com/gravitl/netmaker] Use of Hard-coded Cryptographic Key in Netmaker",
            "date_modified": "2022-02-26T01:51:36.000Z",
            "date_published": "2022-02-19T00:01:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6rrw-4fm9-rghv"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a hard-coded cryptographic key in the code base which can be exploited to run admin commands on a remote server, if you know the address and username of the admin. This effects the server (netmaker) component, and not clients.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Netmaker v0.8.5, v0.9.4, and v0.10.0. If you are running these versions, the fix is to perform the following:</p>\n<ol>\n<li>docker-compose down</li>\n<li>docker pull gravitl/netmaker:( version )</li>\n<li>docker-compose up -d</li>\n</ol>\n<h4 id=\"additional-information\">Additional Information</h4>\n<p>If you are running <strong>any other version</strong>, you will need to upgrade to one of these three versions. If you have a special circumstance that requires running a different version, let us know and we may be able to build a custom patch.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:info@gravitl.com\">info@gravitl.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gravitl/netmaker/security/advisories/GHSA-86f3-hf24-76q4\">https://github.com/gravitl/netmaker/security/advisories/GHSA-86f3-hf24-76q4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23650\">https://nvd.nist.gov/vuln/detail/CVE-2022-23650</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87\">https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/3d4f44ecfe8be4ca38920556ba3b90502ffb4fee\">https://github.com/gravitl/netmaker/commit/3d4f44ecfe8be4ca38920556ba3b90502ffb4fee</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/e9bce264719f88c30e252ecc754d08f422f4c080\">https://github.com/gravitl/netmaker/commit/e9bce264719f88c30e252ecc754d08f422f4c080</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86f3-hf24-76q4\">https://github.com/advisories/GHSA-86f3-hf24-76q4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86f3-hf24-76q4",
            "title": "[github.com/gravitl/netmaker] Use of Hard-coded Cryptographic Key in Netmaker",
            "date_modified": "2022-02-26T01:52:49.000Z",
            "date_published": "2022-02-22T19:40:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86f3-hf24-76q4"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a hard-coded cryptographic key in the code base which can be exploited to run admin commands on a remote server, if you know the address and username of the admin. This effects the server (netmaker) component, and not clients.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Netmaker v0.8.5, v0.9.4, and v0.10.0. If you are running these versions, the fix is to perform the following:</p>\n<ol>\n<li>docker-compose down</li>\n<li>docker pull gravitl/netmaker:( version )</li>\n<li>docker-compose up -d</li>\n</ol>\n<h4 id=\"additional-information\">Additional Information</h4>\n<p>If you are running <strong>any other version</strong>, you will need to upgrade to one of these three versions. If you have a special circumstance that requires running a different version, let us know and we may be able to build a custom patch.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:info@gravitl.com\">info@gravitl.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gravitl/netmaker/security/advisories/GHSA-86f3-hf24-76q4\">https://github.com/gravitl/netmaker/security/advisories/GHSA-86f3-hf24-76q4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23650\">https://nvd.nist.gov/vuln/detail/CVE-2022-23650</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87\">https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/3d4f44ecfe8be4ca38920556ba3b90502ffb4fee\">https://github.com/gravitl/netmaker/commit/3d4f44ecfe8be4ca38920556ba3b90502ffb4fee</a></li>\n<li><a href=\"https://github.com/gravitl/netmaker/commit/e9bce264719f88c30e252ecc754d08f422f4c080\">https://github.com/gravitl/netmaker/commit/e9bce264719f88c30e252ecc754d08f422f4c080</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86f3-hf24-76q4\">https://github.com/advisories/GHSA-86f3-hf24-76q4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86f3-hf24-76q4",
            "title": "[github.com/gravitl/netmaker] Use of Hard-coded Cryptographic Key in Netmaker",
            "date_modified": "2022-02-26T01:52:49.000Z",
            "date_published": "2022-02-22T19:40:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86f3-hf24-76q4"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Cosign can be manipulated to claim that an entry for a signature exists in the Rekor transparency log even if it doesn't. This requires the attacker to have pull and push permissions for the signature in OCI. This can happen with both standard signing with a keypair and \"keyless signing\" with Fulcio.</p>\n<h4 id=\"signing-with-a-keypair\">Signing with a keypair</h4>\n<details>\n\n<p>To reproduce this vulnerability, create a keypair and sign an image. Don't store the signature in Rekor:</p>\n<pre><code>$ cosign generate-key-pair       \n$ cosign sign --key cosign.key IMAGE\n</code></pre>\n<p>If an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. To accomplish this, the attacker needs to:</p>\n<ol>\n<li>Pull the signature image</li>\n<li>Annotate the signature image with any valid Rekor bundle under the <code>dev.sigstore.cosign/bundle</code> annotation</li>\n<li>Push the signature image back to OCI</li>\n</ol>\n<p>Verification then prints out the following:</p>\n<pre><code>$ cosign verify [--key]  [IMAGE]\n\nVerification for [IMAGE] --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - The signatures were verified against the specified public key\n  - Any certificates were verified against the Fulcio roots.\n\n[…]\n</code></pre>\n<p>The claim that <code>Existence of the claims in the transparency log was verified offline</code> is inaccurate since an entry for this image doesn't exist in the log.\nThe claim that <code>Any certificates were verified against the Fulcio roots.</code> is technically correct but since there were no certificates that should be explicitly called out.</p>\n</details>\n\n<h4 id=\"keyless-signing-with-an-oidc-flow\">\"Keyless signing\" with an OIDC flow</h4>\n<details>\n\n<p>To reproduce this vulnerability, sign the image with a Fulcio identity. Don't store the signature in Rekor: </p>\n<pre><code>$ COSIGN_EXPERIMENTAL=1 cosign sign IMAGE\n[...]\nIMAGE appears to be a private repository, please confirm uploading to the transparency log at \"https://rekor.sigstore.dev\" [Y/N]: n\n</code></pre>\n<p>Then, create a keypair and sign the image again. Store an entry for the signature in Rekor:</p>\n<pre><code>$ cosign generate-key-pair       \n$ COSIGN_EXPERIMENTAL=1 cosign sign --key cosign.key IMAGE\n\nEnter password for private key: IMAGE appears to be a private repository, please confirm uploading to the transparency log at \"https://rekor.sigstore.dev\" [Y/N]: y\n</code></pre>\n<p>If an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. To accomplish this, the attacker needs to:</p>\n<ol>\n<li>Pull the signature image</li>\n<li>Copy the rekor bundle from the second signature into the first signature under the <code>dev.sigstore.cosign/bundle</code> annotation</li>\n<li>Push the signature image back to OCI</li>\n</ol>\n<p><em>Note: For this to work, both signatures must occur during the valid lifespan of the certificate (~20 minutes).</em></p>\n<p>Verification then prints out the following:</p>\n<pre><code>$ cosign verify [--key]  [IMAGE]\n\nVerification for [IMAGE] --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - The signatures were verified against the specified public key\n  - Any certificates were verified against the Fulcio roots.\n\n[…]\n</code></pre>\n<p>The claim that <code>Existence of the claims in the transparency log was verified offline</code> is inaccurate since an entry for this image doesn't exist in the log.</p>\n<p>The claim that <code>Any certificates were verified against the Fulcio roots.</code> is technically correct but since there were no certificates that should be explicitly called out.</p>\n</details>\n\n\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in v1.5.2 of cosign.</p>\n<p>The <code>signature</code> in the <code>signedEntryTimestamp</code> provided by Rekor is now compared to the <code>signature</code> that is being verified. If these don't match, then an error is returned. If a valid bundle is copied to a different signature, verification should fail. </p>\n<p>Cosign output now only informs the user that certificates were verified if a certificate was in fact verified.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only workaround is upgrading.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/sigstore/cosign\">cosign</a></li>\n<li>Send us a message on <a href=\"https://sigstore.slack.com/\">Slack</a>. Invite link <a href=\"https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ\">here</a>.</li>\n</ul>\n<h3 id=\"thank-you\">Thank you</h3>\n<p>Thank you to @mtrmac for finding and reporting this vulnerability.</p>\n<p>Thank you to everyone who worked on fixing this:</p>\n<ul>\n<li>@nsmith5</li>\n<li>@znewman01 </li>\n<li>@dlorenc</li>\n<li>@mattmoor </li>\n<li>@priyawadhwa</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/cosign/security/advisories/GHSA-ccxc-vr6p-4858\">https://github.com/sigstore/cosign/security/advisories/GHSA-ccxc-vr6p-4858</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23649\">https://nvd.nist.gov/vuln/detail/CVE-2022-23649</a></li>\n<li><a href=\"https://github.com/sigstore/cosign/commit/96d410a6580e4e81d24d112a0855c70ca3fb5b49\">https://github.com/sigstore/cosign/commit/96d410a6580e4e81d24d112a0855c70ca3fb5b49</a></li>\n<li><a href=\"https://github.com/sigstore/cosign/releases/tag/v1.5.2\">https://github.com/sigstore/cosign/releases/tag/v1.5.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ccxc-vr6p-4858\">https://github.com/advisories/GHSA-ccxc-vr6p-4858</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ccxc-vr6p-4858",
            "title": "[github.com/sigstore/cosign] Improper Certificate Validation in Cosign",
            "date_modified": "2022-02-26T01:52:35.000Z",
            "date_published": "2022-02-22T19:34:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ccxc-vr6p-4858"
            }
        },
        {
            "content_html": "<p>runc through 1.0.0-rc8, as used in Docker through 19.03.2-ce and other products, allows AppArmor restriction bypass because libcontainer/rootfs_linux.go incorrectly checks mount targets, and thus a malicious Docker image can mount over a /proc directory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16884\">https://nvd.nist.gov/vuln/detail/CVE-2019-16884</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/issues/2128\">https://github.com/opencontainers/runc/issues/2128</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/pull/2129\">https://github.com/opencontainers/runc/pull/2129</a></li>\n<li><a href=\"https://github.com/crosbymichael/runc/commit/78dce1cf1ec36bbe7fe6767bdb81f7cbf6d34d70\">https://github.com/crosbymichael/runc/commit/78dce1cf1ec36bbe7fe6767bdb81f7cbf6d34d70</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3940\">https://access.redhat.com/errata/RHSA-2019:3940</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:4074\">https://access.redhat.com/errata/RHSA-2019:4074</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:4269\">https://access.redhat.com/errata/RHSA-2019:4269</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/62OQ2P7K5YDZ5BRCH2Q6DHUJIHQD3QCD/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/62OQ2P7K5YDZ5BRCH2Q6DHUJIHQD3QCD/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DGK6IV5JGVDXHOXEKJOJWKOVNZLT6MYR/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DGK6IV5JGVDXHOXEKJOJWKOVNZLT6MYR/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPK4JWP32BUIVDJ3YODZSOEVEW6BHQCF/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPK4JWP32BUIVDJ3YODZSOEVEW6BHQCF/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202003-21\">https://security.gentoo.org/glsa/202003-21</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220221-0004/\">https://security.netapp.com/advisory/ntap-20220221-0004/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4297-1/\">https://usn.ubuntu.com/4297-1/</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00073.html\">http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00073.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00009.html\">http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00009.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00010.html\">http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00010.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fgv8-vj5c-2ppq\">https://github.com/advisories/GHSA-fgv8-vj5c-2ppq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fgv8-vj5c-2ppq",
            "title": "[github.com/opencontainers/runc] Incorrect Authorization in runc",
            "date_modified": "2022-02-26T01:52:03.000Z",
            "date_published": "2022-02-22T15:38:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fgv8-vj5c-2ppq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If no TLS configuration is provided by the user, the websocket package constructs its own TLS configuration using recommended defaults. When looking up a WSS endpoint using the DNS TXT record method described in <a href=\"https://xmpp.org/extensions/xep-0156.html\">XEP-0156: Discovering Alternative XMPP Connection Methods</a> the ServerName field was incorrectly being set to the name of the server returned by the TXT record request, not the name of the initial server we were attempting to connect to. This means that any attacker that can spoof a DNS record (ie. in the absence of DNSSEC, DNS-over-TLS, DNS-over-HTTPS, or similar technologies) could redirect the user to a server of their choosing and as long as it had a valid TLS certificate for itself the connection would succeed, resulting in a MITM situation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>All users should upgrade to v0.21.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around the issue, manually specify a TLS configuration with the correct hostname.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://mellium.im/cve/cve-2022-24968/\">https://mellium.im/cve/cve-2022-24968/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24968\">https://nvd.nist.gov/vuln/detail/CVE-2022-24968</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out on XMPP to <a href=\"xmpp:sam@samwhited.com?msg\">sam@samwhited.com</a></li>\n<li>Email us at <a href=\"mailto:sam@samwhited.com\">sam@samwhited.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mellium/xmpp/security/advisories/GHSA-h289-x5wc-xcv8\">https://github.com/mellium/xmpp/security/advisories/GHSA-h289-x5wc-xcv8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h289-x5wc-xcv8\">https://github.com/advisories/GHSA-h289-x5wc-xcv8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h289-x5wc-xcv8",
            "title": "[mellium.im/xmpp/websocket] Improper Validation of Certificate with Host Mismatch in mellium.im/xmpp/websocket",
            "date_modified": "2022-02-17T14:16:34.000Z",
            "date_published": "2022-02-16T22:56:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h289-x5wc-xcv8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>People that configure mTLS between Traefik and clients.</p>\n<p>For a request, the TLS configuration choice can be different than the router choice, which implies the use of a wrong TLS configuration.</p>\n<ul>\n<li><p>When sending a request using FQDN handled by a router configured with a dedicated TLS configuration, the TLS configuration falls back to the default configuration that might not correspond to the configured one.</p>\n</li>\n<li><p>If the CNAME flattening is enabled, the selected TLS configuration is the SNI one and the routing uses the CNAME value, so this can skip the expected TLS configuration.</p>\n</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Traefik v2.6.x: <a href=\"https://github.com/traefik/traefik/releases/tag/v2.6.1\">https://github.com/traefik/traefik/releases/tag/v2.6.1</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Add the FDQN to the host rule:</p>\n<p>Example:</p>\n<pre><code class=\"language-yml\">  whoami:\n    image: traefik/whoami:v1.7.1\n    labels:\n      traefik.http.routers.whoami.rule: Host(`whoami.example.com`, `whoami.example.com.`)\n      traefik.http.routers.whoami.tls: true\n      traefik.http.routers.whoami.tls.options: mtls@file\n</code></pre>\n<p>There is no workaround if the CNAME flattening is enabled.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-hrhx-6h34-j5hc\">https://github.com/traefik/traefik/security/advisories/GHSA-hrhx-6h34-j5hc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23632\">https://nvd.nist.gov/vuln/detail/CVE-2022-23632</a></li>\n<li><a href=\"https://github.com/traefik/traefik/pull/8764\">https://github.com/traefik/traefik/pull/8764</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.6.1\">https://github.com/traefik/traefik/releases/tag/v2.6.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrhx-6h34-j5hc\">https://github.com/advisories/GHSA-hrhx-6h34-j5hc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrhx-6h34-j5hc",
            "title": "[github.com/traefik/traefik/v2] Skip the router TLS configuration when the host header is an FQDN",
            "date_modified": "2022-02-23T21:52:28.000Z",
            "date_published": "2022-02-16T22:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrhx-6h34-j5hc"
            }
        },
        {
            "content_html": "<p>This is the Go client library for Prometheus. It has two separate parts, one for instrumenting application code, and one for creating clients that talk to the Prometheus HTTP API. client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>HTTP server susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods.</p>\n<h3 id=\"affected-configuration\">Affected Configuration</h3>\n<p>In order to be affected, an instrumented software must</p>\n<ul>\n<li>Use any of <code>promhttp.InstrumentHandler*</code> middleware except <code>RequestsInFlight</code>.</li>\n<li>Do not filter any specific methods (e.g GET) before middleware.</li>\n<li>Pass metric with <code>method</code> label name to our middleware.</li>\n<li>Not have any firewall/LB/proxy that filters away requests with unknown <code>method</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/962\">https://github.com/prometheus/client_golang/pull/962</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/987\">https://github.com/prometheus/client_golang/pull/987</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade to <a href=\"https://github.com/prometheus/client_golang/releases/tag/v1.11.1\">v1.11.1 or above</a>, in order to stop being affected you can:</p>\n<ul>\n<li>Remove <code>method</code> label name from counter/gauge you use in the InstrumentHandler.</li>\n<li>Turn off affected promhttp handlers.</li>\n<li>Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.</li>\n<li>Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/prometheus/client_golang\">https://github.com/prometheus/client_golang</a></li>\n<li>Email us at <code>prometheus-team@googlegroups.com</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21698\">https://nvd.nist.gov/vuln/detail/CVE-2022-21698</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/962\">https://github.com/prometheus/client_golang/pull/962</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/987\">https://github.com/prometheus/client_golang/pull/987</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/releases/tag/v1.11.1\">https://github.com/prometheus/client_golang/releases/tag/v1.11.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cg3q-j54f-5p7p",
            "title": "[github.com/prometheus/client_golang/prometheus/promhttp] Uncontrolled Resource Consumption in promhttp",
            "date_modified": "2022-02-25T15:41:11.000Z",
            "date_published": "2022-02-16T22:26:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cg3q-j54f-5p7p"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Under certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.</p>\n<p><strong>All of these</strong> three conditions have to be met to create an adverse effect:</p>\n<ol>\n<li>An AST of Rego had to be <strong>created programmatically</strong> such that it ends up containing terms without a location (such as wildcard variables).</li>\n<li>The AST had to be <strong>pretty-printed</strong> using the <code>github.com/open-policy-agent/opa/format</code> package.</li>\n<li>The result of the pretty-printing had to be <strong>parsed and evaluated again</strong> via an OPA instance using the bundles, or the Golang packages.</li>\n</ol>\n<p>If any of these three conditions are not met, you are not affected.</p>\n<p>Notably, all three would be true if using <strong>optimized bundles</strong>, i.e. bundles created with <code>opa build -O=1</code> or higher.\nIn that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).</p>\n<h4 id=\"example\">Example</h4>\n<p>For example, the process outlined above could turn \nthis rule</p>\n<pre><code class=\"language-rego\">hello {\n    [\"foo\", _] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>into</p>\n<pre><code class=\"language-rego\">hello {\n    [_, \"foo\"] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>with an input of</p>\n<pre><code class=\"language-rego\">{\n    \"resource\": \"foo/bar\"\n}\n</code></pre>\n<p>the result would change from</p>\n<pre><code class=\"language-rego\">{\n    \"hello\": true\n}\n</code></pre>\n<p>to (no default value of hello)</p>\n<pre><code class=\"language-rego\">{}\n</code></pre>\n<p>The severity was determined to be <em>moderate</em> because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in version 0.37.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Disabling optimization when creating bundles.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Introduced in <a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li>Backported for the 0.33.1 patch release: <a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li>Fixed by <a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a> and <a href=\"https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055\">https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego\">Community Discussions</a></li>\n<li>Ask in Slack: <a href=\"https://slack.openpolicyagent.org/\">https://slack.openpolicyagent.org/</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23628\">https://nvd.nist.gov/vuln/detail/CVE-2022-23628</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/advisories/GHSA-hcw3-j74m-qc58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58",
            "title": "[github.com/open-policy-agent/opa] Incorrect Calculation in github.com/open-policy-agent/opa",
            "date_modified": "2022-02-23T22:04:26.000Z",
            "date_published": "2022-02-09T22:17:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt/v2] Import token permissions checking not enforced",
            "date_modified": "2022-02-15T00:42:57.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt] Import token permissions checking not enforced",
            "date_modified": "2022-02-15T00:42:57.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            }
        },
        {
            "content_html": "<p>Cross Site Scripting (XSS) vulnerability exists in Gitea before 1.5.1 via the repository settings inside the external wiki/issue tracker URL field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45329\">https://nvd.nist.gov/vuln/detail/CVE-2021-45329</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/4710\">https://github.com/go-gitea/gitea/pull/4710</a></li>\n<li><a href=\"https://blog.gitea.io/2018/09/gitea-1.5.1-is-released/\">https://blog.gitea.io/2018/09/gitea-1.5.1-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3gq-wxqf-q4gh\">https://github.com/advisories/GHSA-r3gq-wxqf-q4gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3gq-wxqf-q4gh",
            "title": "[github.com/go-gitea/gitea] Cross-site Scripting in Gitea",
            "date_modified": "2022-02-15T00:18:14.000Z",
            "date_published": "2022-02-10T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3gq-wxqf-q4gh"
            }
        },
        {
            "content_html": "<p>Gitea is a project to help users set up a self-hosted Git service. Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. This could allow a remote malicious user to execute arbitrary code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45327\">https://nvd.nist.gov/vuln/detail/CVE-2021-45327</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10462\">https://github.com/go-gitea/gitea/pull/10462</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10465\">https://github.com/go-gitea/gitea/pull/10465</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10582\">https://github.com/go-gitea/gitea/pull/10582</a></li>\n<li><a href=\"https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/\">https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrpg-35hw-m4p9\">https://github.com/advisories/GHSA-jrpg-35hw-m4p9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrpg-35hw-m4p9",
            "title": "[github.com/go-gitea/gitea] Capture-replay in Gitea",
            "date_modified": "2022-02-15T00:17:58.000Z",
            "date_published": "2022-02-09T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrpg-35hw-m4p9"
            }
        },
        {
            "content_html": "<p>Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45326\">https://nvd.nist.gov/vuln/detail/CVE-2021-45326</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/issues/4838\">https://github.com/go-gitea/gitea/issues/4838</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/4840\">https://github.com/go-gitea/gitea/pull/4840</a></li>\n<li><a href=\"https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/\">https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wp3-8q92-mh8w\">https://github.com/advisories/GHSA-4wp3-8q92-mh8w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wp3-8q92-mh8w",
            "title": "[github.com/go-gitea/gitea] Cross Site Request Forgery in Gitea",
            "date_modified": "2022-02-15T00:18:10.000Z",
            "date_published": "2022-02-09T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wp3-8q92-mh8w"
            }
        },
        {
            "content_html": "<p>Gitea before 1.4.3 is affected by URL Redirection to Untrusted Site ('Open Redirect') via internal URLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45328\">https://nvd.nist.gov/vuln/detail/CVE-2021-45328</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/issues/4332\">https://github.com/go-gitea/gitea/issues/4332</a></li>\n<li><a href=\"https://blog.gitea.io/2018/06/release-of-1.4.3/\">https://blog.gitea.io/2018/06/release-of-1.4.3/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36h2-95gj-w488\">https://github.com/advisories/GHSA-36h2-95gj-w488</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36h2-95gj-w488",
            "title": "[github.com/go-gitea/gitea] Open redirect in Gitea",
            "date_modified": "2022-02-15T00:18:11.000Z",
            "date_published": "2022-02-09T00:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36h2-95gj-w488"
            }
        }
    ]
}