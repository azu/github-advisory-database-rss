{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>version 1.5.0 and 1.6.0 when using the new <code>debug-host</code> feature could expose unnecessary information about the host</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Use 1.6.1 or newer</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Downgrade to 1.4.0 or set <code>debug-host</code> to empty</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/fortio/proxy/pull/38\">https://github.com/fortio/proxy/pull/38</a></p>\n<p>Q&amp;A <a href=\"https://github.com/fortio/proxy/discussions\">https://github.com/fortio/proxy/discussions</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fortio/proxy/security/advisories/GHSA-x477-fq37-q5wr\">https://github.com/fortio/proxy/security/advisories/GHSA-x477-fq37-q5wr</a></li>\n<li><a href=\"https://github.com/fortio/proxy/pull/38\">https://github.com/fortio/proxy/pull/38</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x477-fq37-q5wr\">https://github.com/advisories/GHSA-x477-fq37-q5wr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x477-fq37-q5wr",
            "title": "[fortio.org/proxy] Initial debug-host handler implementation could leak information and facilitate denial of service",
            "date_modified": "2023-01-27T00:55:28.000Z",
            "date_published": "2023-01-27T00:55:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x477-fq37-q5wr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Elastic APM agent for Go versions before 1.11.0 can leak sensitive HTTP header information when logging the details during an application panic. Normally, the APM agent will sanitize sensitive HTTP header details before sending the information to the APM server. During an application panic it is possible the headers will not be sanitized before being sent.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22133\">https://nvd.nist.gov/vuln/detail/CVE-2021-22133</a></li>\n<li><a href=\"https://github.com/elastic/apm-agent-go/commit/c5c7e21aa26a6def7790f74fbceed792ad47ef35\">https://github.com/elastic/apm-agent-go/commit/c5c7e21aa26a6def7790f74fbceed792ad47ef35</a></li>\n<li><a href=\"https://discuss.elastic.co/t/elastic-apm-agent-for-go-1-11-0-security-update/263252\">https://discuss.elastic.co/t/elastic-apm-agent-for-go-1-11-0-security-update/263252</a></li>\n<li><a href=\"https://github.com/elastic/apm-agent-go/compare/v1.10.0...v1.11.0\">https://github.com/elastic/apm-agent-go/compare/v1.10.0...v1.11.0</a></li>\n<li><a href=\"https://github.com/elastic/apm-agent-go/pull/888\">https://github.com/elastic/apm-agent-go/pull/888</a></li>\n<li><a href=\"https://github.com/elastic/apm-agent-go/commit/dd3e8c593580e7b80a98b57e1cc6e017e56747b4\">https://github.com/elastic/apm-agent-go/commit/dd3e8c593580e7b80a98b57e1cc6e017e56747b4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqc5-rgcc-cjqh\">https://github.com/advisories/GHSA-qqc5-rgcc-cjqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqc5-rgcc-cjqh",
            "title": "[go.elastic.co/apm] Information Disclosure in go.elastic.co/apm",
            "date_modified": "2023-01-26T21:57:07.000Z",
            "date_published": "2021-05-18T18:34:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqc5-rgcc-cjqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD starting with v1.8.2 are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens.</p>\n<p>OIDC providers include an <code>aud</code> (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD <em>does</em> validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD <em>does not</em> validate the audience claim, so it will accept tokens that are not intended for Argo CD.</p>\n<p>If Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's <code>groups</code> claim, even though those groups were not intended to be used by Argo CD.</p>\n<p>This bug also increases the blast radius of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.0-rc5</li>\n<li>v2.5.8</li>\n<li>v2.4.20</li>\n<li>v2.3.14</li>\n</ul>\n<p>The patch introduces a new <code>allowedAudiences</code> to the OIDC config block. By default, the client ID is the only allowed audience. Users who <em>want</em> Argo CD to accept tokens intended for a different audience may use <code>allowedAudiences</code> to specify those audiences.</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    allowedAudiences:\n    - audience-1\n    - audience-2\n    - argocd-client-id  # If `allowedAudiences` is non-empty, Argo CD's client ID must be explicitly added if you want to allow it.\n</code></pre>\n<p>Even though <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">the OIDC spec requires the audience claim</a>, some tokens may not include it. To avoid a breaking change in a patch release, versions &lt; 2.6.0 of Argo CD will skip the audience claim check for tokens that have no audience. In versions &gt;= 2.6.0, Argo CD will reject all tokens which do not have an audience claim. Users can opt into the old behavior by setting an option:</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    skipAudienceCheckWhenTokenHasNoAudience: true\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround besides upgrading.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to express their gratitude to Vladimir Pouzanov (@farcaller) from Indeed, who discovered the issue, reported it confidentially according to our <a href=\"https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability\">guidelines</a>, and actively worked with the project to provide a remedy. Many thanks to Vladimir!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/user-management/#existing-oidc-provider\">How to configure OIDC in Argo CD</a></li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">OIDC spec section discussing the audience claim</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3\">JWT spec section discussing the audience claim</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22482\">https://nvd.nist.gov/vuln/detail/CVE-2023-22482</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc",
            "title": "[github.com/argoproj/argo-cd] JWT audience claim is not verified",
            "date_modified": "2023-01-26T21:57:42.000Z",
            "date_published": "2023-01-25T22:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD starting with v1.8.2 are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens.</p>\n<p>OIDC providers include an <code>aud</code> (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD <em>does</em> validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD <em>does not</em> validate the audience claim, so it will accept tokens that are not intended for Argo CD.</p>\n<p>If Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's <code>groups</code> claim, even though those groups were not intended to be used by Argo CD.</p>\n<p>This bug also increases the blast radius of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.0-rc5</li>\n<li>v2.5.8</li>\n<li>v2.4.20</li>\n<li>v2.3.14</li>\n</ul>\n<p>The patch introduces a new <code>allowedAudiences</code> to the OIDC config block. By default, the client ID is the only allowed audience. Users who <em>want</em> Argo CD to accept tokens intended for a different audience may use <code>allowedAudiences</code> to specify those audiences.</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    allowedAudiences:\n    - audience-1\n    - audience-2\n    - argocd-client-id  # If `allowedAudiences` is non-empty, Argo CD's client ID must be explicitly added if you want to allow it.\n</code></pre>\n<p>Even though <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">the OIDC spec requires the audience claim</a>, some tokens may not include it. To avoid a breaking change in a patch release, versions &lt; 2.6.0 of Argo CD will skip the audience claim check for tokens that have no audience. In versions &gt;= 2.6.0, Argo CD will reject all tokens which do not have an audience claim. Users can opt into the old behavior by setting an option:</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    skipAudienceCheckWhenTokenHasNoAudience: true\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround besides upgrading.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to express their gratitude to Vladimir Pouzanov (@farcaller) from Indeed, who discovered the issue, reported it confidentially according to our <a href=\"https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability\">guidelines</a>, and actively worked with the project to provide a remedy. Many thanks to Vladimir!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/user-management/#existing-oidc-provider\">How to configure OIDC in Argo CD</a></li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">OIDC spec section discussing the audience claim</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3\">JWT spec section discussing the audience claim</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22482\">https://nvd.nist.gov/vuln/detail/CVE-2023-22482</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc",
            "title": "[github.com/argoproj/argo-cd] JWT audience claim is not verified",
            "date_modified": "2023-01-26T21:57:42.000Z",
            "date_published": "2023-01-25T22:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD starting with v1.8.2 are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens.</p>\n<p>OIDC providers include an <code>aud</code> (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD <em>does</em> validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD <em>does not</em> validate the audience claim, so it will accept tokens that are not intended for Argo CD.</p>\n<p>If Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's <code>groups</code> claim, even though those groups were not intended to be used by Argo CD.</p>\n<p>This bug also increases the blast radius of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.0-rc5</li>\n<li>v2.5.8</li>\n<li>v2.4.20</li>\n<li>v2.3.14</li>\n</ul>\n<p>The patch introduces a new <code>allowedAudiences</code> to the OIDC config block. By default, the client ID is the only allowed audience. Users who <em>want</em> Argo CD to accept tokens intended for a different audience may use <code>allowedAudiences</code> to specify those audiences.</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    allowedAudiences:\n    - audience-1\n    - audience-2\n    - argocd-client-id  # If `allowedAudiences` is non-empty, Argo CD's client ID must be explicitly added if you want to allow it.\n</code></pre>\n<p>Even though <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">the OIDC spec requires the audience claim</a>, some tokens may not include it. To avoid a breaking change in a patch release, versions &lt; 2.6.0 of Argo CD will skip the audience claim check for tokens that have no audience. In versions &gt;= 2.6.0, Argo CD will reject all tokens which do not have an audience claim. Users can opt into the old behavior by setting an option:</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    skipAudienceCheckWhenTokenHasNoAudience: true\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround besides upgrading.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to express their gratitude to Vladimir Pouzanov (@farcaller) from Indeed, who discovered the issue, reported it confidentially according to our <a href=\"https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability\">guidelines</a>, and actively worked with the project to provide a remedy. Many thanks to Vladimir!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/user-management/#existing-oidc-provider\">How to configure OIDC in Argo CD</a></li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">OIDC spec section discussing the audience claim</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3\">JWT spec section discussing the audience claim</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22482\">https://nvd.nist.gov/vuln/detail/CVE-2023-22482</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc",
            "title": "[github.com/argoproj/argo-cd] JWT audience claim is not verified",
            "date_modified": "2023-01-26T21:57:42.000Z",
            "date_published": "2023-01-25T22:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD starting with v1.8.2 are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens.</p>\n<p>OIDC providers include an <code>aud</code> (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD <em>does</em> validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD <em>does not</em> validate the audience claim, so it will accept tokens that are not intended for Argo CD.</p>\n<p>If Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's <code>groups</code> claim, even though those groups were not intended to be used by Argo CD.</p>\n<p>This bug also increases the blast radius of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.0-rc5</li>\n<li>v2.5.8</li>\n<li>v2.4.20</li>\n<li>v2.3.14</li>\n</ul>\n<p>The patch introduces a new <code>allowedAudiences</code> to the OIDC config block. By default, the client ID is the only allowed audience. Users who <em>want</em> Argo CD to accept tokens intended for a different audience may use <code>allowedAudiences</code> to specify those audiences.</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    allowedAudiences:\n    - audience-1\n    - audience-2\n    - argocd-client-id  # If `allowedAudiences` is non-empty, Argo CD's client ID must be explicitly added if you want to allow it.\n</code></pre>\n<p>Even though <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">the OIDC spec requires the audience claim</a>, some tokens may not include it. To avoid a breaking change in a patch release, versions &lt; 2.6.0 of Argo CD will skip the audience claim check for tokens that have no audience. In versions &gt;= 2.6.0, Argo CD will reject all tokens which do not have an audience claim. Users can opt into the old behavior by setting an option:</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    skipAudienceCheckWhenTokenHasNoAudience: true\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround besides upgrading.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to express their gratitude to Vladimir Pouzanov (@farcaller) from Indeed, who discovered the issue, reported it confidentially according to our <a href=\"https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability\">guidelines</a>, and actively worked with the project to provide a remedy. Many thanks to Vladimir!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/user-management/#existing-oidc-provider\">How to configure OIDC in Argo CD</a></li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">OIDC spec section discussing the audience claim</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3\">JWT spec section discussing the audience claim</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22482\">https://nvd.nist.gov/vuln/detail/CVE-2023-22482</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9hr-j4rf-8fjc\">https://github.com/advisories/GHSA-q9hr-j4rf-8fjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc",
            "title": "[github.com/argoproj/argo-cd] JWT audience claim is not verified",
            "date_modified": "2023-01-26T21:57:42.000Z",
            "date_published": "2023-01-25T22:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9hr-j4rf-8fjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-01-25T19:40:45.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[rancher/github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-01-25T19:40:45.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-01-25T19:40:45.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-01-25T19:40:45.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A denial of services (DoS) vulnerability was discovered in Wrangler Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Specially crafted Git credentials can result in a denial of service (DoS) attack on an application that uses Wrangler due to the exhaustion of the available memory and CPU resources. This is caused by a lack of input validation of Git credentials before they are used, which may lead to a denial of service in some cases. This issue can be triggered when accessing both private and public Git repositories. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/advisories/GHSA-8fcj-gf77-47mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg",
            "title": "[github.com/rancher/wrangler] Denial of service (DoS) when processing Git credentials",
            "date_modified": "2023-01-25T19:40:27.000Z",
            "date_published": "2023-01-25T19:40:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A denial of services (DoS) vulnerability was discovered in Wrangler Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Specially crafted Git credentials can result in a denial of service (DoS) attack on an application that uses Wrangler due to the exhaustion of the available memory and CPU resources. This is caused by a lack of input validation of Git credentials before they are used, which may lead to a denial of service in some cases. This issue can be triggered when accessing both private and public Git repositories. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/advisories/GHSA-8fcj-gf77-47mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg",
            "title": "[github.com/rancher/wrangler] Denial of service (DoS) when processing Git credentials",
            "date_modified": "2023-01-25T19:40:27.000Z",
            "date_published": "2023-01-25T19:40:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A denial of services (DoS) vulnerability was discovered in Wrangler Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Specially crafted Git credentials can result in a denial of service (DoS) attack on an application that uses Wrangler due to the exhaustion of the available memory and CPU resources. This is caused by a lack of input validation of Git credentials before they are used, which may lead to a denial of service in some cases. This issue can be triggered when accessing both private and public Git repositories. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/advisories/GHSA-8fcj-gf77-47mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg",
            "title": "[github.com/rancher/wrangler] Denial of service (DoS) when processing Git credentials",
            "date_modified": "2023-01-25T19:40:27.000Z",
            "date_published": "2023-01-25T19:40:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A denial of services (DoS) vulnerability was discovered in Wrangler Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Specially crafted Git credentials can result in a denial of service (DoS) attack on an application that uses Wrangler due to the exhaustion of the available memory and CPU resources. This is caused by a lack of input validation of Git credentials before they are used, which may lead to a denial of service in some cases. This issue can be triggered when accessing both private and public Git repositories. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fcj-gf77-47mg\">https://github.com/advisories/GHSA-8fcj-gf77-47mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg",
            "title": "[github.com/rancher/wrangler] Denial of service (DoS) when processing Git credentials",
            "date_modified": "2023-01-25T19:40:27.000Z",
            "date_published": "2023-01-25T19:40:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with 2.5.0-rc1 are vulnerable to an authorization bypass bug which allows a malicious Argo CD user to deploy Applications outside the configured allowed namespaces. </p>\n<h4 id=\"description-of-exploit\">Description of exploit</h4>\n<p>Reconciled Application namespaces are specified as a comma-delimited list of glob patterns. When sharding is enabled on the Application controller, it does not enforce that list of patterns when reconciling Applications. For example, if Application namespaces are configured to be <code>argocd-*</code>, the Application controller may reconcile an Application installed in a namespace called <code>other</code>, even though it does not start with <code>argocd-</code>.</p>\n<p>Reconciliation of the out-of-bounds Application is only triggered when the Application is updated, so the attacker must be able to cause an update operation on the Application resource.</p>\n<h4 id=\"limitations\">Limitations</h4>\n<p>This bug only applies to users who have explicitly enabled the \"apps-in-any-namespace\" feature by setting <code>application.namespaces</code> in the argocd-cmd-params-cm ConfigMap or otherwise setting the <code>--application-namespaces</code> flags on the Application controller and API server components. The apps-in-any-namespace feature is in beta as of this Security Advisory's publish date.</p>\n<p>The bug is also limited to Argo CD instances where sharding is enabled by increasing the <code>replicas</code> count for the Application controller.</p>\n<p>Finally, the AppProjects' <code>sourceNamespaces</code> field acts as a secondary check against this exploit. To cause reconciliation of an Application in an out-of-bounds namespace, an AppProject must be available which permits Applications in the out-of-bounds namespace.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.5.8</li>\n<li>v2.6.0-rc5</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Running only one replica of the Application controller will prevent exploitation of this bug.</p>\n<p>Making sure all AppProjects' <code>sourceNamespaces</code> are restricted within the confines of the configured Application namespaces will also prevent exploitation of this bug.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to ChangZhuo Chen (@czchen) for finding the issue and for contributing the fix!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd--10678.org.readthedocs.build/en/10678/operator-manual/app-any-namespace/\">Documentation for apps-in-any-namespace</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-6p4m-hw2h-6gmw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-6p4m-hw2h-6gmw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22736\">https://nvd.nist.gov/vuln/detail/CVE-2023-22736</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p4m-hw2h-6gmw\">https://github.com/advisories/GHSA-6p4m-hw2h-6gmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p4m-hw2h-6gmw",
            "title": "[github.com/argoproj/argo-cd] Controller reconciles apps outside configured namespaces when sharding is enabled",
            "date_modified": "2023-01-26T21:57:47.000Z",
            "date_published": "2023-01-25T19:39:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p4m-hw2h-6gmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with 2.5.0-rc1 are vulnerable to an authorization bypass bug which allows a malicious Argo CD user to deploy Applications outside the configured allowed namespaces. </p>\n<h4 id=\"description-of-exploit\">Description of exploit</h4>\n<p>Reconciled Application namespaces are specified as a comma-delimited list of glob patterns. When sharding is enabled on the Application controller, it does not enforce that list of patterns when reconciling Applications. For example, if Application namespaces are configured to be <code>argocd-*</code>, the Application controller may reconcile an Application installed in a namespace called <code>other</code>, even though it does not start with <code>argocd-</code>.</p>\n<p>Reconciliation of the out-of-bounds Application is only triggered when the Application is updated, so the attacker must be able to cause an update operation on the Application resource.</p>\n<h4 id=\"limitations\">Limitations</h4>\n<p>This bug only applies to users who have explicitly enabled the \"apps-in-any-namespace\" feature by setting <code>application.namespaces</code> in the argocd-cmd-params-cm ConfigMap or otherwise setting the <code>--application-namespaces</code> flags on the Application controller and API server components. The apps-in-any-namespace feature is in beta as of this Security Advisory's publish date.</p>\n<p>The bug is also limited to Argo CD instances where sharding is enabled by increasing the <code>replicas</code> count for the Application controller.</p>\n<p>Finally, the AppProjects' <code>sourceNamespaces</code> field acts as a secondary check against this exploit. To cause reconciliation of an Application in an out-of-bounds namespace, an AppProject must be available which permits Applications in the out-of-bounds namespace.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.5.8</li>\n<li>v2.6.0-rc5</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Running only one replica of the Application controller will prevent exploitation of this bug.</p>\n<p>Making sure all AppProjects' <code>sourceNamespaces</code> are restricted within the confines of the configured Application namespaces will also prevent exploitation of this bug.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to ChangZhuo Chen (@czchen) for finding the issue and for contributing the fix!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd--10678.org.readthedocs.build/en/10678/operator-manual/app-any-namespace/\">Documentation for apps-in-any-namespace</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-6p4m-hw2h-6gmw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-6p4m-hw2h-6gmw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22736\">https://nvd.nist.gov/vuln/detail/CVE-2023-22736</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p4m-hw2h-6gmw\">https://github.com/advisories/GHSA-6p4m-hw2h-6gmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p4m-hw2h-6gmw",
            "title": "[github.com/argoproj/argo-cd] Controller reconciles apps outside configured namespaces when sharding is enabled",
            "date_modified": "2023-01-26T21:57:47.000Z",
            "date_published": "2023-01-25T19:39:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p4m-hw2h-6gmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It only affects Rancher setups that have an external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> configured or had one configured in the past.</p>\n<p>It was discovered that when an external authentication provider is configured in Rancher and then disabled, the Rancher generated <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">tokens</a> associated with users who had access granted through the now disabled auth provider are not revoked. This allows users to retain access to Rancher and <code>kubectl</code> access to clusters managed by Rancher, according to their previous configured permissions, even after they are supposed to have lost it due to the auth provider been disabled.</p>\n<p>The problem also occurs if the auth provider is configured (and is still enabled) to use the <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">access level scopes</a> <code>allow members of clusters and projects, plus authorized users &amp; groups</code> and <code>restrict access to only the authorized users &amp; groups</code>. In this case, removing users and groups from the authorized lists will not revoke the access tokens and they will remain valid.</p>\n<p>An example scenario is:</p>\n<ol>\n<li>OpenLDAP, MS Active Directory (AD) or any other external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> is configured as an auth provider.</li>\n<li>A user (<code>cluster-owner</code>) is granted <code>cluster-owner</code> permissions on a downstream cluster (<code>test-cluster</code>).</li>\n<li><code>cluster-owner</code> logs in using their external auth provider username and password.</li>\n<li><code>cluster-owner</code> generates a <code>kubeconfig</code> token for <code>test-cluster</code>.</li>\n<li>The configured external auth provider is disabled.</li>\n</ol>\n<p>In this scenario, the <code>kubeconfig</code> generated in step 4 will still be valid after step 5, and <code>test-cluster</code> can still be accessed using the <code>kubeconfig</code> token.</p>\n<p>By default, tokens for authenticated session have their <code>ttl</code> (time to live) set to <code>960</code> minutes, so they will expire after <code>16</code> hours. <code>kubeconfig</code> tokens are configured to never expire, and their <code>ttl</code> is set to <code>0</code>. These configurations can be changed in the Rancher's settings (<code>Configuration &gt; Global Settings &gt; Settings</code>) with the <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">parameters</a>  <code>auth-user-session-ttl-minutes</code> and <code>kubeconfig-default-token-ttl-minutes</code>, respectively.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot update to a patched Rancher version, the recommended workaround is to review and remove tokens associated with auth providers manually.</p>\n<p>The tokens can be reviewed by executing <code>kubectl get tokens</code> in Rancher's <code>local</code> cluster. Each found token must be manually reviewed to check if it belongs to a user from a disabled auth provider or a user who's access was previously removed from the auth provider (when the auth provider is still enabled and is or was configured to use access level scopes, as mentioned above). The identified tokens can be removed with <code>kubectl delete tokens &lt;token_name&gt;</code>.</p>\n<p>It is important to mention that this workaround must be done every time an auth provider is disabled in case you cannot update to a patched version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions. After updating to a patched version, it is highly recommended to review the existing tokens and remove tokens related to disabled auth providers as described above in the workaround section.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/advisories/GHSA-c45c-39f6-6gw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9",
            "title": "[github.com/rancher/rancher] Rancher generated tokens not revoked after modifications made to authentication provider",
            "date_modified": "2023-01-25T19:38:14.000Z",
            "date_published": "2023-01-25T19:38:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It only affects Rancher setups that have an external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> configured or had one configured in the past.</p>\n<p>It was discovered that when an external authentication provider is configured in Rancher and then disabled, the Rancher generated <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">tokens</a> associated with users who had access granted through the now disabled auth provider are not revoked. This allows users to retain access to Rancher and <code>kubectl</code> access to clusters managed by Rancher, according to their previous configured permissions, even after they are supposed to have lost it due to the auth provider been disabled.</p>\n<p>The problem also occurs if the auth provider is configured (and is still enabled) to use the <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">access level scopes</a> <code>allow members of clusters and projects, plus authorized users &amp; groups</code> and <code>restrict access to only the authorized users &amp; groups</code>. In this case, removing users and groups from the authorized lists will not revoke the access tokens and they will remain valid.</p>\n<p>An example scenario is:</p>\n<ol>\n<li>OpenLDAP, MS Active Directory (AD) or any other external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> is configured as an auth provider.</li>\n<li>A user (<code>cluster-owner</code>) is granted <code>cluster-owner</code> permissions on a downstream cluster (<code>test-cluster</code>).</li>\n<li><code>cluster-owner</code> logs in using their external auth provider username and password.</li>\n<li><code>cluster-owner</code> generates a <code>kubeconfig</code> token for <code>test-cluster</code>.</li>\n<li>The configured external auth provider is disabled.</li>\n</ol>\n<p>In this scenario, the <code>kubeconfig</code> generated in step 4 will still be valid after step 5, and <code>test-cluster</code> can still be accessed using the <code>kubeconfig</code> token.</p>\n<p>By default, tokens for authenticated session have their <code>ttl</code> (time to live) set to <code>960</code> minutes, so they will expire after <code>16</code> hours. <code>kubeconfig</code> tokens are configured to never expire, and their <code>ttl</code> is set to <code>0</code>. These configurations can be changed in the Rancher's settings (<code>Configuration &gt; Global Settings &gt; Settings</code>) with the <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">parameters</a>  <code>auth-user-session-ttl-minutes</code> and <code>kubeconfig-default-token-ttl-minutes</code>, respectively.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot update to a patched Rancher version, the recommended workaround is to review and remove tokens associated with auth providers manually.</p>\n<p>The tokens can be reviewed by executing <code>kubectl get tokens</code> in Rancher's <code>local</code> cluster. Each found token must be manually reviewed to check if it belongs to a user from a disabled auth provider or a user who's access was previously removed from the auth provider (when the auth provider is still enabled and is or was configured to use access level scopes, as mentioned above). The identified tokens can be removed with <code>kubectl delete tokens &lt;token_name&gt;</code>.</p>\n<p>It is important to mention that this workaround must be done every time an auth provider is disabled in case you cannot update to a patched version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions. After updating to a patched version, it is highly recommended to review the existing tokens and remove tokens related to disabled auth providers as described above in the workaround section.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/advisories/GHSA-c45c-39f6-6gw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9",
            "title": "[github.com/rancher/rancher] Rancher generated tokens not revoked after modifications made to authentication provider",
            "date_modified": "2023-01-25T19:38:14.000Z",
            "date_published": "2023-01-25T19:38:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It only affects Rancher setups that have an external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> configured or had one configured in the past.</p>\n<p>It was discovered that when an external authentication provider is configured in Rancher and then disabled, the Rancher generated <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">tokens</a> associated with users who had access granted through the now disabled auth provider are not revoked. This allows users to retain access to Rancher and <code>kubectl</code> access to clusters managed by Rancher, according to their previous configured permissions, even after they are supposed to have lost it due to the auth provider been disabled.</p>\n<p>The problem also occurs if the auth provider is configured (and is still enabled) to use the <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">access level scopes</a> <code>allow members of clusters and projects, plus authorized users &amp; groups</code> and <code>restrict access to only the authorized users &amp; groups</code>. In this case, removing users and groups from the authorized lists will not revoke the access tokens and they will remain valid.</p>\n<p>An example scenario is:</p>\n<ol>\n<li>OpenLDAP, MS Active Directory (AD) or any other external <a href=\"https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config\">authentication provider</a> is configured as an auth provider.</li>\n<li>A user (<code>cluster-owner</code>) is granted <code>cluster-owner</code> permissions on a downstream cluster (<code>test-cluster</code>).</li>\n<li><code>cluster-owner</code> logs in using their external auth provider username and password.</li>\n<li><code>cluster-owner</code> generates a <code>kubeconfig</code> token for <code>test-cluster</code>.</li>\n<li>The configured external auth provider is disabled.</li>\n</ol>\n<p>In this scenario, the <code>kubeconfig</code> generated in step 4 will still be valid after step 5, and <code>test-cluster</code> can still be accessed using the <code>kubeconfig</code> token.</p>\n<p>By default, tokens for authenticated session have their <code>ttl</code> (time to live) set to <code>960</code> minutes, so they will expire after <code>16</code> hours. <code>kubeconfig</code> tokens are configured to never expire, and their <code>ttl</code> is set to <code>0</code>. These configurations can be changed in the Rancher's settings (<code>Configuration &gt; Global Settings &gt; Settings</code>) with the <a href=\"https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens\">parameters</a>  <code>auth-user-session-ttl-minutes</code> and <code>kubeconfig-default-token-ttl-minutes</code>, respectively.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot update to a patched Rancher version, the recommended workaround is to review and remove tokens associated with auth providers manually.</p>\n<p>The tokens can be reviewed by executing <code>kubectl get tokens</code> in Rancher's <code>local</code> cluster. Each found token must be manually reviewed to check if it belongs to a user from a disabled auth provider or a user who's access was previously removed from the auth provider (when the auth provider is still enabled and is or was configured to use access level scopes, as mentioned above). The identified tokens can be removed with <code>kubectl delete tokens &lt;token_name&gt;</code>.</p>\n<p>It is important to mention that this workaround must be done every time an auth provider is disabled in case you cannot update to a patched version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions. After updating to a patched version, it is highly recommended to review the existing tokens and remove tokens related to disabled auth providers as described above in the workaround section.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c45c-39f6-6gw9\">https://github.com/advisories/GHSA-c45c-39f6-6gw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9",
            "title": "[github.com/rancher/rancher] Rancher generated tokens not revoked after modifications made to authentication provider",
            "date_modified": "2023-01-25T19:38:14.000Z",
            "date_published": "2023-01-25T19:38:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c45c-39f6-6gw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It was discovered that the security advisory CVE-2021-36782 (GHSA-g7j7-h4q8-8w2f), previously released by Rancher, missed addressing some sensitive fields, secret tokens, encryption keys, and SSH keys that were still being stored in plaintext directly on Kubernetes objects like <code>Clusters</code>.</p>\n<p>The exposed credentials are visible in Rancher to authenticated <code>Cluster Owners</code>, <code>Cluster Members</code>, <code>Project Owners</code> and <code>Project Members</code> of that cluster on the endpoints:</p>\n<ul>\n<li><code>/v1/management.cattle.io.cluster</code></li>\n<li><code>/v1/management.cattle.io.clustertemplaterevisions</code></li>\n</ul>\n<p>The remaining sensitive fields are now stripped from <code>Clusters</code> and other objects and moved to a <code>Secret</code> before the object is stored. The <code>Secret</code> is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.</p>\n<p>The fields that have been addressed by this security fix are:</p>\n<ul>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].AESGCM.Keys[].Secret</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].AESCBC.Keys[].Secret</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].SecretboxConfiguration.Keys[].Secret</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Services.Kubelet.ExtraEnv</code> when containing the <code>AWS_SECRET_ACCESS_KEY</code> environment variable</li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.BastionHost.SSHKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries[].ECRCredentialPlugin.AwsSecretAccessKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries[].ECRCredentialPlugin.AwsSessionToken</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.ApicUserKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.KafkaClientKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.Token</code></li>\n</ul>\n<p><strong>Important:</strong></p>\n<ul>\n<li><p>For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions the leaked credentials have on their services.</p>\n</li>\n<li><p>It is recommended to review for potentially leaked credentials in this scenario and to change them if deemed necessary.</p>\n</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no direct mitigation besides updating Rancher to a patched version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions.</p>\n<p>After upgrading to a patched version, it is important to check for the <code>ACISecretsMigrated</code> and <code>RKESecretsMigrated</code> conditions on <code>Clusters</code> and <code>ClusterTemplateRevisions</code> to confirm when secrets have been fully migrated off of those objects, and the objects scoped within them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-cq4p-vp5q-4522\">https://github.com/rancher/rancher/security/advisories/GHSA-cq4p-vp5q-4522</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cq4p-vp5q-4522\">https://github.com/advisories/GHSA-cq4p-vp5q-4522</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cq4p-vp5q-4522",
            "title": "[github.com/rancher/rancher] Plaintext storage of sensitive data in Rancher API and cluster.management.cattle.io objects",
            "date_modified": "2023-01-25T19:36:59.000Z",
            "date_published": "2023-01-25T19:36:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cq4p-vp5q-4522"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}