{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Mattermost version 7.1.x and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3257\">https://nvd.nist.gov/vuln/detail/CVE-2022-3257</a></li>\n<li><a href=\"https://hackerone.com/reports/1620170\">https://hackerone.com/reports/1620170</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m7w4-q5vg-5xfp\">https://github.com/advisories/GHSA-m7w4-q5vg-5xfp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m7w4-q5vg-5xfp",
            "title": "[https://pkg.go.dev/github.com/mattermost/mattermost-server/v6] Mattermost subject to Denial of Service via upload of special GIF",
            "date_modified": "2022-09-28T14:14:04.000Z",
            "date_published": "2022-09-25T00:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m7w4-q5vg-5xfp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in Hyperledger Fabric &lt; 2.4 could allow an attacker to construct a non-validated request that could cause a denial of service attack.  The peer gateway service tries to extract channel and chaincode information from the signed proposal, but it doesn't check the proposal fields for validity. Therefore a malformed proposal might end up crashing the peer service. This issue has been patched in 2.4.6. There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35253\">https://nvd.nist.gov/vuln/detail/CVE-2022-35253</a></li>\n<li><a href=\"https://github.com/hyperledger/fabric/pull/3572\">https://github.com/hyperledger/fabric/pull/3572</a></li>\n<li><a href=\"https://github.com/hyperledger/fabric/pull/3576\">https://github.com/hyperledger/fabric/pull/3576</a></li>\n<li><a href=\"https://github.com/hyperledger/fabric/pull/3577\">https://github.com/hyperledger/fabric/pull/3577</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9w7j-q3xw-p9vh\">https://github.com/advisories/GHSA-9w7j-q3xw-p9vh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9w7j-q3xw-p9vh",
            "title": "[github.com/hyperledger/fabric] Hyperledger Fabric subject to Denial of Service via non-validated request",
            "date_modified": "2022-09-28T14:12:31.000Z",
            "date_published": "2022-09-25T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9w7j-q3xw-p9vh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bifrost is a middleware package which can synchronize MySQL/MariaDB binlog data to other types of databases. Versions 1.8.6-release and prior are vulnerable to authentication bypass when using HTTP basic authentication. This may allow group members who only have read permissions to write requests when they are normally forbidden from doing so. Version 1.8.7-release contains a patch. There are currently no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/brokercap/Bifrost/security/advisories/GHSA-p6fh-xc6r-g5hw\">https://github.com/brokercap/Bifrost/security/advisories/GHSA-p6fh-xc6r-g5hw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39219\">https://nvd.nist.gov/vuln/detail/CVE-2022-39219</a></li>\n<li><a href=\"https://github.com/brokercap/Bifrost/issues/200\">https://github.com/brokercap/Bifrost/issues/200</a></li>\n<li><a href=\"https://github.com/brokercap/Bifrost/releases/tag/v1.8.7-release\">https://github.com/brokercap/Bifrost/releases/tag/v1.8.7-release</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6fh-xc6r-g5hw\">https://github.com/advisories/GHSA-p6fh-xc6r-g5hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6fh-xc6r-g5hw",
            "title": "[github.com/brokercap/Bifrost] Brokercap Bifrost subject to authentication bypass when using HTTP basic authentication",
            "date_modified": "2022-09-29T10:15:48.000Z",
            "date_published": "2022-09-27T15:45:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6fh-xc6r-g5hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Not invoking a call to <code>pam_acct_mgmt</code> after a call to <code>pam_authenticate</code> to check the validity of a login can lead to an authorization bypass.</p>\n<h3 id=\"impact\">Impact</h3>\n<h4 id=\"exploitability\">Exploitability</h4>\n<p>The attack can be carried over the network. A complex non-standard configuration or a specialized condition is required for the attack to be successfully conducted. The attacker also requires access to a users credentials, be it expired, for an attack to be successful. There is no user interaction required for successful execution. The attack can affect components outside the scope of the target module.</p>\n<h4 id=\"impact-1\">Impact</h4>\n<p>Using this attack vector, an attacker may access otherwise restricted parts of the system. The attack can be used to gain access to confidential files like passwords, login credentials and other secrets. Hence, it has a high impact on confidentiality. It may also be directly used to affect a change on a system resource. Hence has a medium to high impact on integrity. This attack may not be used to affect the availability of the system. Taking this account an appropriate CVSS v3.1 vector would be\n<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:L&amp;version=3.1\">AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:N</a></p>\n<h3 id=\"root-cause-analysis\">Root Cause Analysis</h3>\n<p>In this case, in the following PAM transaction, only a call to <code>pam.Authenticate</code> is used to login a user.</p>\n<p><a href=\"https://github.com/mohammed90/caddy-ssh/blob/1d980ceea6e67765daf19b5e644c7a0773fdaa13/internal/authentication/os/pam.go#L60\">https://github.com/mohammed90/caddy-ssh/blob/1d980ceea6e67765daf19b5e644c7a0773fdaa13/internal/authentication/os/pam.go#L60</a></p>\n<p>This implies that a user with expired credentials can still login.</p>\n<p>The bug can be verified easily by creating a new user account, expiring it with <code>chage -E0 &lt;username&gt;</code> and then trying to log in with the expired credentials.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This can be fixed by invoking a call to <code>pam.AcctMgmt</code> after a successful call to <code>pam.Authenticate</code></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://man7.org/linux/man-pages/man3/pam_acct_mgmt.3.html\">Man Page for pam_acct_mgmt</a></li>\n<li><a href=\"http://cwe.mitre.org/data/definitions/863.html\">CWE-863</a></li>\n<li><a href=\"http://cwe.mitre.org/data/definitions/285.html\">CWE-285</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mohammed90/caddy-ssh/security/advisories/GHSA-gmhj-xjfh-cf6m\">https://github.com/mohammed90/caddy-ssh/security/advisories/GHSA-gmhj-xjfh-cf6m</a></li>\n<li><a href=\"https://github.com/mohammed90/caddy-ssh/commit/4b3e639d64c55f91152ffb51a4af35a8845c95a3\">https://github.com/mohammed90/caddy-ssh/commit/4b3e639d64c55f91152ffb51a4af35a8845c95a3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gmhj-xjfh-cf6m\">https://github.com/advisories/GHSA-gmhj-xjfh-cf6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gmhj-xjfh-cf6m",
            "title": "[github.com/mohammed90/caddy-ssh] Caddy-SSH vulnerable to Authorization Bypass due to incorrect usage of PAM library",
            "date_modified": "2022-09-23T21:37:21.000Z",
            "date_published": "2022-09-23T21:37:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gmhj-xjfh-cf6m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40186\">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550\">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cgv-v83v-rr87\">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87",
            "title": "[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access",
            "date_modified": "2022-09-27T08:12:04.000Z",
            "date_published": "2022-09-23T00:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40186\">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550\">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cgv-v83v-rr87\">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87",
            "title": "[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access",
            "date_modified": "2022-09-27T08:12:04.000Z",
            "date_published": "2022-09-23T00:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40186\">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550\">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cgv-v83v-rr87\">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87",
            "title": "[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access",
            "date_modified": "2022-09-27T08:12:04.000Z",
            "date_published": "2022-09-23T00:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cgv-v83v-rr87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like <code>Clusters</code>, for example <code>cluster.management.cattle.io</code>. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.</p>\n<p>The exposed credentials are visible in Rancher to authenticated <code>Cluster Owners</code>, <code>Cluster Members</code>, <code>Project Owners</code>, <code>Project Members</code> and <code>User Base</code> on the endpoints:</p>\n<ul>\n<li><code>/v1/management.cattle.io.catalogs</code></li>\n<li><code>/v1/management.cattle.io.cluster</code></li>\n<li><code>/v1/management.cattle.io.clustertemplates</code></li>\n<li><code>/v1/management.cattle.io.notifiers</code></li>\n<li><code>/v1/project.cattle.io.sourcecodeproviderconfig</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/catalogs</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clusters</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/notifiers</code></li>\n<li><code>/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs</code></li>\n</ul>\n<p>Sensitive fields are now stripped from <code>Clusters</code> and other objects and moved to a <code>Secret</code> before the object is stored. The <code>Secret</code> is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.</p>\n<p><strong>Important:</strong></p>\n<ul>\n<li>The exposure of Rancher's <code>serviceAccountToken</code> allows any standard user to escalate its privileges to cluster administrator in Rancher.</li>\n<li>For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.</li>\n</ul>\n<p>The fields that have been addressed by this security fix are:</p>\n<ul>\n<li><code>Notifier.SMTPConfig.Password</code></li>\n<li><code>Notifier.WechatConfig.Secret</code></li>\n<li><code>Notifier.DingtalkConfig.Secret</code></li>\n<li><code>Catalog.Spec.Password</code></li>\n<li><code>SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>\n<li><code>Cluster.Status.ServiceAccountToken</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.16, 2.6.7 and later versions.</p>\n<p>After upgrading to a patched version, it is important to check for the <code>SecretsMigrated</code> condition on <code>Clusters</code>, <code>ClusterTemplates</code>, and <code>Catalogs</code> to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (<code>Notifiers</code> and <code>SourceCodeProviderConfigs</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Important:</strong></p>\n<ul>\n<li>It is highly advised to rotate Rancher's <code>serviceAccountToken</code>. This rotation is not done by the version upgrade. Please see the helper script below.</li>\n<li>The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.</li>\n<li>It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.</li>\n</ul>\n<p>The script available in <a href=\"https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens\">rancherlabs/support-tools/rotate-tokens</a> repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, <code>kubectl</code> access to the <code>local</code> cluster and the <code>jq</code> command.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to recognize and appreciate Florian Struck (from <a href=\"https://www.continum.net/\">Continum AG</a>) and <a href=\"https://github.com/fe-ax\">Marco Stuurman</a> (from <a href=\"https://www.shockmedia.nl\">Shock Media B.V.</a>) for the responsible disclosure of this security issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f\">https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36782\">https://nvd.nist.gov/vuln/detail/CVE-2021-36782</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193988\">https://bugzilla.suse.com/show_bug.cgi?id=1193988</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7j7-h4q8-8w2f\">https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7j7-h4q8-8w2f",
            "title": "[github.com/rancher/rancher] Rancher API and cluster.management.cattle.io object vulnerable to plaintext storage and exposure of credentials",
            "date_modified": "2022-09-23T18:11:28.000Z",
            "date_published": "2022-09-23T18:11:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7j7-h4q8-8w2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like <code>Clusters</code>, for example <code>cluster.management.cattle.io</code>. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.</p>\n<p>The exposed credentials are visible in Rancher to authenticated <code>Cluster Owners</code>, <code>Cluster Members</code>, <code>Project Owners</code>, <code>Project Members</code> and <code>User Base</code> on the endpoints:</p>\n<ul>\n<li><code>/v1/management.cattle.io.catalogs</code></li>\n<li><code>/v1/management.cattle.io.cluster</code></li>\n<li><code>/v1/management.cattle.io.clustertemplates</code></li>\n<li><code>/v1/management.cattle.io.notifiers</code></li>\n<li><code>/v1/project.cattle.io.sourcecodeproviderconfig</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/catalogs</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clusters</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates</code></li>\n<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/notifiers</code></li>\n<li><code>/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs</code></li>\n</ul>\n<p>Sensitive fields are now stripped from <code>Clusters</code> and other objects and moved to a <code>Secret</code> before the object is stored. The <code>Secret</code> is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.</p>\n<p><strong>Important:</strong></p>\n<ul>\n<li>The exposure of Rancher's <code>serviceAccountToken</code> allows any standard user to escalate its privileges to cluster administrator in Rancher.</li>\n<li>For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.</li>\n</ul>\n<p>The fields that have been addressed by this security fix are:</p>\n<ul>\n<li><code>Notifier.SMTPConfig.Password</code></li>\n<li><code>Notifier.WechatConfig.Secret</code></li>\n<li><code>Notifier.DingtalkConfig.Secret</code></li>\n<li><code>Catalog.Spec.Password</code></li>\n<li><code>SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret</code></li>\n<li><code>SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>\n<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>\n<li><code>Cluster.Status.ServiceAccountToken</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>\n<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.16, 2.6.7 and later versions.</p>\n<p>After upgrading to a patched version, it is important to check for the <code>SecretsMigrated</code> condition on <code>Clusters</code>, <code>ClusterTemplates</code>, and <code>Catalogs</code> to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (<code>Notifiers</code> and <code>SourceCodeProviderConfigs</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Important:</strong></p>\n<ul>\n<li>It is highly advised to rotate Rancher's <code>serviceAccountToken</code>. This rotation is not done by the version upgrade. Please see the helper script below.</li>\n<li>The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.</li>\n<li>It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.</li>\n</ul>\n<p>The script available in <a href=\"https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens\">rancherlabs/support-tools/rotate-tokens</a> repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, <code>kubectl</code> access to the <code>local</code> cluster and the <code>jq</code> command.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to recognize and appreciate Florian Struck (from <a href=\"https://www.continum.net/\">Continum AG</a>) and <a href=\"https://github.com/fe-ax\">Marco Stuurman</a> (from <a href=\"https://www.shockmedia.nl\">Shock Media B.V.</a>) for the responsible disclosure of this security issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f\">https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36782\">https://nvd.nist.gov/vuln/detail/CVE-2021-36782</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193988\">https://bugzilla.suse.com/show_bug.cgi?id=1193988</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7j7-h4q8-8w2f\">https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7j7-h4q8-8w2f",
            "title": "[github.com/rancher/rancher] Rancher API and cluster.management.cattle.io object vulnerable to plaintext storage and exposure of credentials",
            "date_modified": "2022-09-23T18:11:28.000Z",
            "date_published": "2022-09-23T18:11:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7j7-h4q8-8w2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cloudreve versions v1.0.0 through v3.5.3 are vulnerable to Stored Cross-Site Scripting (XSS), via the file upload functionality. A low privileged user will be able to share a file with an admin user, which could lead to privilege escalation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-32167\">https://nvd.nist.gov/vuln/detail/CVE-2022-32167</a></li>\n<li><a href=\"https://www.mend.io/vulnerability-database/CVE-2022-32167\">https://www.mend.io/vulnerability-database/CVE-2022-32167</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fg25-gq9g-32mx\">https://github.com/advisories/GHSA-fg25-gq9g-32mx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fg25-gq9g-32mx",
            "title": "[github.com/cloudreve/Cloudreve/v3] Cross site scripting in Cloudreve",
            "date_modified": "2022-09-23T18:10:51.000Z",
            "date_published": "2022-09-21T00:00:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fg25-gq9g-32mx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cloudreve versions v1.0.0 through v3.5.3 are vulnerable to Stored Cross-Site Scripting (XSS), via the file upload functionality. A low privileged user will be able to share a file with an admin user, which could lead to privilege escalation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-32167\">https://nvd.nist.gov/vuln/detail/CVE-2022-32167</a></li>\n<li><a href=\"https://www.mend.io/vulnerability-database/CVE-2022-32167\">https://www.mend.io/vulnerability-database/CVE-2022-32167</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fg25-gq9g-32mx\">https://github.com/advisories/GHSA-fg25-gq9g-32mx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fg25-gq9g-32mx",
            "title": "[github.com/HFO4/cloudreve] Cross site scripting in Cloudreve",
            "date_modified": "2022-09-23T18:10:51.000Z",
            "date_published": "2022-09-21T00:00:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fg25-gq9g-32mx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Authenticated users can send a request to delete-objects through the s3 gateway and delete files they are not authorized to delete.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>lakeFS v0.82.0 and later</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Drop specific request to the lakeFS listen port. Any request with \"Authorization\" header and value that starts with \"AWS\".</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9\">advisories/GHSA-28q9-9c3g-v3f9</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Ask on the <a href=\"https://github.com/treeverse/lakeFS/security/advisories/lakefs.io/slack\">lakeFS Slack</a> #help channel\nEmail us at <a href=\"mailto:security@treeverse.io\">security@treeverse.io</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9\">https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9</a></li>\n<li><a href=\"https://github.com/treeverse/lakeFS/commit/81182bf9c0cf57f3cec3c893cf739b2069305e37\">https://github.com/treeverse/lakeFS/commit/81182bf9c0cf57f3cec3c893cf739b2069305e37</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28q9-9c3g-v3f9\">https://github.com/advisories/GHSA-28q9-9c3g-v3f9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28q9-9c3g-v3f9",
            "title": "[github.com/treeverse/lakefs] lakeFS vulnerable to authenticated users deleting files they are not authorized to delete",
            "date_modified": "2022-09-23T15:13:15.000Z",
            "date_published": "2022-09-23T15:13:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28q9-9c3g-v3f9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Incorrect handling of the supplementary groups in the CRI-O container engine might lead to sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2995\">https://nvd.nist.gov/vuln/detail/CVE-2022-2995</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/pull/6159\">https://github.com/cri-o/cri-o/pull/6159</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/commit/db3b399a8d7dabf7f073db73894bee98311d7909\">https://github.com/cri-o/cri-o/commit/db3b399a8d7dabf7f073db73894bee98311d7909</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-phjr-8j92-w5v7",
            "title": "[github.com/cri-o/cri-o] CRI-O incorrect handling of supplementary groups may lead to sensitive information disclosure",
            "date_modified": "2022-09-22T17:22:58.000Z",
            "date_published": "2022-09-20T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-phjr-8j92-w5v7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Cross-site scripting (XSS) vulnerabilities have been reported to affect SFTPGo WebClient. If exploited, this vulnerability allows remote attackers to inject malicious code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v2.3.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-cf7g-cm7q-rq7f\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-cf7g-cm7q-rq7f</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/cbef217cfa92478ee8e00ba1a5fb074f8a8aeee0\">https://github.com/drakkan/sftpgo/commit/cbef217cfa92478ee8e00ba1a5fb074f8a8aeee0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39220\">https://nvd.nist.gov/vuln/detail/CVE-2022-39220</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf7g-cm7q-rq7f\">https://github.com/advisories/GHSA-cf7g-cm7q-rq7f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf7g-cm7q-rq7f",
            "title": "[github.com/drakkan/sftpgo] SFTPGo WebClient vulnerable to Cross-site Scripting",
            "date_modified": "2022-09-23T17:07:46.000Z",
            "date_published": "2022-09-20T21:22:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf7g-cm7q-rq7f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Summary</strong>\nAs part of a Kubevirt audit performed by NCC group, a finding dealing with systemic lack of path sanitization which leads to a path traversal was identified.  Google tested the exploitability of the paths in the audit report and identified that when combined with another vulnerability one of the paths leads to an arbitrary file read on the host from the VM.</p>\n<p>The read operations are limited to files which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/&lt;&gt; is not accessible.</p>\n<p><strong>Severity</strong></p>\n<p>Moderate - The vulnerability is proven to exist in an open source version of KubeVirt by NCC Group while being combined with Systemic Lack of Path Sanitization, which leads to Path traversal.</p>\n<p><strong>Proof of Concept</strong></p>\n<p>The initial VMI specifications can be written as such to reproduce the issue:</p>\n<pre><code>\napiVersion: kubevirt.io/v1\nkind: VirtualMachineInstance\nmetadata:\n  name: vmi-fedora\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: containerdisk\n      - disk:\n          bus: virtio\n        name: cloudinitdisk\n      - disk:\n          bus: virtio\n        name: containerdisk1\n      rng: {}\n    resources:\n      requests:\n        memory: 1024M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - containerDisk:\n      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0\n    name: containerdisk\n  - containerDisk:\n      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0\n      path: test3/../../../../../../../../etc/passwd\n    name: containerdisk1\n  - cloudInitNoCloud:\n      userData: |\n        #!/bin/sh\n        echo 'just something to make cirros happy'\n    name: cloudinitdisk\n\n</code></pre>\n<p>The VMI can then be started through kubectl apply -f vm-test-ncc.yaml.\nThe requested file is accessible once the VM is up and can be accessed under /dev/vdc.</p>\n<p>Depending on the environment, path may contain more or less /.., something that can easily be tested by checking the events until the VMI can start without failure.\nRestrictions </p>\n<p>SELinux may mitigate this vulnerability.</p>\n<p>When using a node with selinux, selinux denies the access and the VM start was aborted:</p>\n<pre><code>\n19s         Warning   SyncFailed                virtualmachineinstance/vmi-fedora    server error. command SyncVMI failed: \"preparing ephemeral container disk images failed: stat /var/run/kubevirt/container-disks/disk_0.img: permission denied\"\n\ntype=AVC msg=audit(1651828898.296:1266): avc:  denied  { setattr } for  pid=44402 comm=\"rpc-worker\" name=\"passwd\" dev=\"vda1\" ino=691477 scontext=system_u:system_r:virt_launcher.process:s0:c255,c849 tcontext=system_u:object_r:passwd_file_t:s0 tclass=file permissive=1\n</code></pre>\n<p>After making selinux permissive the VM can boot and access /etc/passwd from the node within the guest:</p>\n<pre><code>\n$ sudo cat /dev/vdc\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[...]\n</code></pre>\n<p><strong>Further Analysis</strong>\nIn order to mitigate this vulnerability, Sanitize imagePath in pkg/container-disk/container-disk.go following ISE best practices described and Add checks in pkg/virt-api/webhooks/validating-webhook/admitters/vmi-create-admitter.go</p>\n<p><strong>Timeline</strong>\nDate reported: 05/10/2022\nDate fixed: N/A\nDate disclosed: 08/08/2022</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm\">https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm</a></li>\n<li><a href=\"https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364\">https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1798\">https://nvd.nist.gov/vuln/detail/CVE-2022-1798</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cvx8-ppmc-78hm\">https://github.com/advisories/GHSA-cvx8-ppmc-78hm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cvx8-ppmc-78hm",
            "title": "[kubevirt.io/kubevirt] KubeVirt arbitrary host file read from the VM",
            "date_modified": "2022-09-20T20:10:49.000Z",
            "date_published": "2022-08-18T19:02:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cvx8-ppmc-78hm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<blockquote>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n</blockquote>\n<p>The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program.</p>\n<p>When using <code>github.com/gagliardetto/binary</code> to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size.</p>\n<p>When <code>dec.Decode(&amp;val)</code> method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value.</p>\n<p>Example:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"github.com/gagliardetto/binary\" // any version before v0.7.1 is vulnerable\n    \"log\"\n)\n\ntype MyStruct struct {\n    Field1 []byte // field is a slice (could be a slice of any type)\n}\n\nfunc main() {\n    // Let's assume that the data is coming from the blockchain:\n    data := []byte{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10}\n    \n    var val MyStruct\n    // - To determine the size of the val.Field1 slice, the decoder will read the length\n    //   of the slice from the data itself without any checks on the size of it.\n    //\n    // - This could lead to an allocation of memory with excessive size value.\n    //   Which means: []byte{0x01, 0x02, 0x03, 0x04} will be read as the length\n    //   of the slice (= 67305985) and then an allocation of memory with 67305985 bytes will be made.\n    //\n    dec := binary.NewBorshDecoder(data)\n    err := dec.Decode(&amp;val)  // or binary.UnmarshalBorsh(&amp;val, data) or binary.UnmarshalBin(&amp;val, data) etc.\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<blockquote>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n</blockquote>\n<p>The vulnerability has been patched in <code>github.com/gagliardetto/binary</code> <code>v0.7.1</code></p>\n<p>Users should upgrade to <code>v0.7.1</code> or higher.</p>\n<p>To upgrade to <code>v0.7.1</code> or higher, run:</p>\n<pre><code class=\"language-bash\">go get github.com/gagliardetto/binary@v0.7.1\n\n# or\n\ngo get github.com/gagliardetto/binary@latest\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<blockquote>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n</blockquote>\n<p>A workaround is not to rely on the <code>dec.Decode(&amp;val)</code> function to parse the data, but to use a custom <code>UnmarshalWithDecoder()</code> method that reads and checks the length of any slice.</p>\n<h3 id=\"references\">References</h3>\n<blockquote>\n<p><em>Are there any links users can visit to find out more?</em></p>\n</blockquote>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/gagliardetto/binary\">github.com/gagliardetto/binary</a></li>\n<li>DM me on <a href=\"https://twitter.com/immaterial_ink\">twitter</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88\">https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36078\">https://nvd.nist.gov/vuln/detail/CVE-2022-36078</a></li>\n<li><a href=\"https://github.com/gagliardetto/binary/pull/7\">https://github.com/gagliardetto/binary/pull/7</a></li>\n<li><a href=\"https://github.com/gagliardetto/binary/releases/tag/v0.7.1\">https://github.com/gagliardetto/binary/releases/tag/v0.7.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p6f-m4f9-ch88\">https://github.com/advisories/GHSA-4p6f-m4f9-ch88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4p6f-m4f9-ch88",
            "title": "[github.com/gagliardetto/binary] Binary vulnerable to Slice Memory Allocation with Excessive Size Value",
            "date_modified": "2022-09-16T21:25:04.000Z",
            "date_published": "2022-09-16T21:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4p6f-m4f9-ch88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Read only calls between contracts can generate smart contracts results. For example, if contract A calls in read only mode contract B and the called function will make changes upon the contract's B state, the state will be altered for contract B as if the call was not made in the read-only mode. This can lead to some effects not designed by the original smart contracts programmers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch v1.3.35 or higher</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround</p>\n<h3 id=\"references\">References</h3>\n<p>For future reference and understanding of this issue, anyone can check this integration test <a href=\"https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452\">https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452</a> that proves the fix and prevents a future code regression. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in elrond-go (<a href=\"https://github.com/ElrondNetwork/elrond-go/issues\">http://github.com/ElrondNetwork/elrond-go/issues</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-mv8x-668m-53fg\">https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-mv8x-668m-53fg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36061\">https://nvd.nist.gov/vuln/detail/CVE-2022-36061</a></li>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452\">https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452</a></li>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/releases/tag/v1.3.35\">https://github.com/ElrondNetwork/elrond-go/releases/tag/v1.3.35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv8x-668m-53fg\">https://github.com/advisories/GHSA-mv8x-668m-53fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv8x-668m-53fg",
            "title": "[github.com/ElrondNetwork/elrond-go] Elrond-go has improper initialization",
            "date_modified": "2022-09-16T21:21:44.000Z",
            "date_published": "2022-09-16T21:21:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv8x-668m-53fg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SFTPGo WebAdmin and WebClient support login using TOTP (Time-based One Time Passwords) as a seconday authentication factor. Because TOTPs are often configured on mobile devices that can be lost, stolen or damaged, SFTPGo also supports recovery codes. These are a set of one time use codes that can be used instead of the TOTP.</p>\n<p>In SFTPGo versions from v2.2.0 to v2.3.3 recovery codes can be generated before enabling two-factor authentication.\nAn attacker who knows the user's password could potentially generate some recovery codes and then bypass two-factor authentication after it is enabled on the account at a later time.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v2.3.4.\nRecovery codes can now only be generated after enabling two-factor authentication and are deleted after disabling it.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Regenerate recovery codes after enabling two-factor authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/drakkan/sftpgo/issues/965\">https://github.com/drakkan/sftpgo/issues/965</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-54qx-8p8w-xhg8\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-54qx-8p8w-xhg8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36071\">https://nvd.nist.gov/vuln/detail/CVE-2022-36071</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/issues/965\">https://github.com/drakkan/sftpgo/issues/965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-54qx-8p8w-xhg8\">https://github.com/advisories/GHSA-54qx-8p8w-xhg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-54qx-8p8w-xhg8",
            "title": "[github.com/drakkan/sftpgo/v2] SFTPGo vulnerable to recovery codes abuse",
            "date_modified": "2022-09-16T21:05:29.000Z",
            "date_published": "2022-09-16T21:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-54qx-8p8w-xhg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the <code>\"USER $USERNAME\"</code> Dockerfile instruction. Instead by calling <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> the supplementary groups will be set up properly.</p>\n<p>Thanks to Steven Murdoch for reporting this issue.</p>\n<hr>\n<h3 id=\"impact\">Impact</h3>\n<p>If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. </p>\n<h3 id=\"patches\">Patches</h3>\n<p> This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This problem can be worked around by not using the <code>\"USER $USERNAME\"</code> Dockerfile instruction. Instead by calling <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> the supplementary groups will be set up properly.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/moby/moby/issues/new\">Open an issue</a></li>\n<li>Email us at <a href=\"mailto:security@docker.com\">security@docker.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36109\">https://nvd.nist.gov/vuln/detail/CVE-2022-36109</a></li>\n<li><a href=\"https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32\">https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32</a></li>\n<li><a href=\"https://github.com/moby/moby/releases/tag/v20.10.18\">https://github.com/moby/moby/releases/tag/v20.10.18</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rc4r-wh2q-q6c4",
            "title": "[github.com/moby/moby] Moby supplementary group permissions not set up properly, allowing attackers to bypass primary group restrictions",
            "date_modified": "2022-09-19T20:23:40.000Z",
            "date_published": "2022-09-16T21:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rc4r-wh2q-q6c4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When a full CVSS v2.0 vector string is parsed using <code>ParseVector</code>, an Out-of-Bounds Read is possible due to a lack of tests. The Go module will then panic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in tag <code>v0.4.0</code>, by the commit <code>d9d478ff0c13b8b09ace030db9262f3c2fe031f4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only way to avoid it is by parsing CVSS v2.0 vector strings that does not have all attributes defined (e.g. <code>AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M</code>).</p>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"cpe-v23\">CPE v2.3</h3>\n<p>As stated in <a href=\"https://github.com/pandatix/go-cvss/blob/master/SECURITY.md\">SECURITY.md</a>, the CPE v2.3 to refer to this Go module is <code>cpe:2.3:a:pandatix:go_cvss:*:*:*:*:*:*:*:*</code>.\nThe entry has already been requested to the NVD CPE dictionnary.</p>\n<h3 id=\"exploit-example\">Exploit example</h3>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"log\"\n\n    gocvss20 \"github.com/pandatix/go-cvss/20\"\n)\n\nfunc main() {\n    _, err := gocvss20.ParseVector(\"AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M\")\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n</code></pre>\n<p>When ran, the following trace is returned.</p>\n<pre><code>panic: runtime error: index out of range [3] with length 3\n\ngoroutine 1 [running]:\ngithub.com/pandatix/go-cvss/20.ParseVector({0x4aed6c?, 0x0?})\n        /home/lucas/go/pkg/mod/github.com/pandatix/go-cvss@v0.2.0/20/cvss20.go:54 +0x578\nmain.main()\n        /media/lucas/HDD-K/Documents/cve-2022-xxxxx/main.go:10 +0x25\nexit status 2\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pandatix/go-cvss/issues\">pandatix/go-cvss</a></li>\n<li>Email me at <a href=\"mailto:lucastesson@protonmail.com\">lucastesson@protonmail.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pandatix/go-cvss/security/advisories/GHSA-xhmf-mmv2-4hhx\">https://github.com/pandatix/go-cvss/security/advisories/GHSA-xhmf-mmv2-4hhx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39213\">https://nvd.nist.gov/vuln/detail/CVE-2022-39213</a></li>\n<li><a href=\"https://github.com/pandatix/go-cvss/commit/d9d478ff0c13b8b09ace030db9262f3c2fe031f4\">https://github.com/pandatix/go-cvss/commit/d9d478ff0c13b8b09ace030db9262f3c2fe031f4</a></li>\n<li><a href=\"https://github.com/pandatix/go-cvss/blob/master/SECURITY.md\">https://github.com/pandatix/go-cvss/blob/master/SECURITY.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xhmf-mmv2-4hhx\">https://github.com/advisories/GHSA-xhmf-mmv2-4hhx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xhmf-mmv2-4hhx",
            "title": "[github.com/pandatix/go-cvss] Go-CVSS has Out-of-bounds Read vulnerability in ParseVector function",
            "date_modified": "2022-09-16T20:59:44.000Z",
            "date_published": "2022-09-16T20:59:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xhmf-mmv2-4hhx"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}