{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4045\">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v42f-hq78-8c5m\">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:03:45.000Z",
            "date_published": "2022-11-23T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4045\">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v42f-hq78-8c5m\">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:03:45.000Z",
            "date_published": "2022-11-23T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4045\">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v42f-hq78-8c5m\">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:03:45.000Z",
            "date_published": "2022-11-23T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v42f-hq78-8c5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4044\">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>\n<li><a href=\"https://hackerone.com/reports/1680241\">https://hackerone.com/reports/1680241</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jph-wrq7-v9hf\">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:18:05.000Z",
            "date_published": "2022-11-23T06:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4044\">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>\n<li><a href=\"https://hackerone.com/reports/1680241\">https://hackerone.com/reports/1680241</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jph-wrq7-v9hf\">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:18:05.000Z",
            "date_published": "2022-11-23T06:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4044\">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>\n<li><a href=\"https://hackerone.com/reports/1680241\">https://hackerone.com/reports/1680241</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jph-wrq7-v9hf\">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf",
            "title": "[github.com/mattermost/mattermost-server] Denial of service in Mattermost",
            "date_modified": "2022-11-26T20:18:05.000Z",
            "date_published": "2022-11-23T06:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jph-wrq7-v9hf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Consul and Consul Enterprise 1.13.0 up to 1.13.3 do not filter cluster filtering's imported nodes and services for HTTP or RPC endpoints used by the UI. Fixed in 1.14.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3920\">https://nvd.nist.gov/vuln/detail/CVE-2022-3920</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-28-consul-cluster-peering-leaks-imported-nodes-services-information/46946\">https://discuss.hashicorp.com/t/hcsec-2022-28-consul-cluster-peering-leaks-imported-nodes-services-information/46946</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/commit/706866fa0016b0aa302679f9c648859050d19b2e\">https://github.com/hashicorp/consul/commit/706866fa0016b0aa302679f9c648859050d19b2e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gw2g-hhc9-wgjh\">https://github.com/advisories/GHSA-gw2g-hhc9-wgjh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gw2g-hhc9-wgjh",
            "title": "[github.com/hashicorp/consul] Missing Authorization in HashiCorp Consul",
            "date_modified": "2022-11-21T23:53:04.000Z",
            "date_published": "2022-11-16T12:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gw2g-hhc9-wgjh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability identified in the Tailscale client allows a malicious website to access the peer API, which can then be used to access Tailscale environment variables.</p>\n<p><strong>Affected platforms:</strong> All\n<strong>Patched Tailscale client versions:</strong> v1.32.3 or later, v1.33.257 or later (unstable)</p>\n<h3 id=\"what-happened\">What happened?</h3>\n<p>In the Tailscale client, the peer API was vulnerable to DNS rebinding. This allowed an attacker-controlled website visited by the node to rebind DNS for the peer API to an attacker-controlled DNS server, and then making peer API requests in the client, including accessing the nodeâ€™s Tailscale environment variables.</p>\n<h3 id=\"who-is-affected\">Who is affected?</h3>\n<p>All Tailscale clients prior to version v.1.32.3 are affected.</p>\n<h3 id=\"what-should-i-do\">What should I do?</h3>\n<p>Upgrade to v1.32.3 or later to remediate the issue.</p>\n<h3 id=\"what-is-the-impact\">What is the impact?</h3>\n<p>An attacker with access to the peer API on a node could use that access to read the nodeâ€™s environment variables, including any credentials or secrets stored in environment variables. This may include Tailscale authentication keys, which could then be used to add new nodes to the userâ€™s tailnet. The peer API access could also be used to learn of other nodes in the tailnet or send files via Taildrop.</p>\n<p>An attacker with access to the peer API who sent a malicious file via Taildrop which was accessed while it was loading could use this to gain access to the local API, and remotely execute code.</p>\n<p>There is no evidence of this vulnerability being purposefully triggered or exploited.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to thank <a href=\"https://github.com/emilytrau\">Emily Trau</a> and <a href=\"https://twitter.com/JJJollyjim\">Jamie McClymont (CyberCX)</a> for reporting this issue. Further detail is available in <a href=\"https://emily.id.au/tailscale\">their blog post</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://tailscale.com/security-bulletins/#ts-2022-005\">TS-2022-005</a></li>\n<li><a href=\"https://emily.id.au/tailscale\">Researcher blog post</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, <a href=\"https://tailscale.com/contact/support/\">contact Tailscale support</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tailscale/tailscale/security/advisories/GHSA-qccm-wmcq-pwr6\">https://github.com/tailscale/tailscale/security/advisories/GHSA-qccm-wmcq-pwr6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qccm-wmcq-pwr6\">https://github.com/advisories/GHSA-qccm-wmcq-pwr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qccm-wmcq-pwr6",
            "title": "[tailscale.com/cmd] Tailscale daemon is vulnerable to information disclosure via CSRF",
            "date_modified": "2022-11-21T22:34:23.000Z",
            "date_published": "2022-11-21T22:34:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qccm-wmcq-pwr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability identified in the Tailscale Windows client allows a malicious website to reconfigure the Tailscale daemon <code>tailscaled</code>, which can then be used to remotely execute code.</p>\n<p><strong>Affected platforms:</strong> Windows\n<strong>Patched Tailscale client versions:</strong> v1.32.3 or later, v1.33.257 or later (unstable)</p>\n<h3 id=\"what-happened\">What happened?</h3>\n<p>In the Tailscale Windows client, the local API was bound to a local TCP socket, and communicated with the Windows client GUI in cleartext with no Host header verification. This allowed an attacker-controlled website visited by the node to rebind DNS to an attacker-controlled DNS server, and then make local API requests in the client, including changing the coordination server to an attacker-controlled coordination server.</p>\n<h3 id=\"who-is-affected\">Who is affected?</h3>\n<p>All Windows clients prior to version v.1.32.3 are affected.</p>\n<h3 id=\"what-should-i-do\">What should I do?</h3>\n<p>If you are running Tailscale on Windows, upgrade to v1.32.3 or later to remediate the issue.</p>\n<h3 id=\"what-is-the-impact\">What is the impact?</h3>\n<p>An attacker-controlled coordination server can send malicious URL responses to the client, including pushing executables or installing an SMB share. These allow the attacker to remotely execute code on the node.</p>\n<p>Reviewing all logs confirms this vulnerability was not triggered or exploited. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to thank <a href=\"https://github.com/emilytrau\">Emily Trau</a> and <a href=\"https://twitter.com/JJJollyjim\">Jamie McClymont (CyberCX)</a> for reporting this issue. Further detail is available in <a href=\"https://emily.id.au/tailscale\">their blog post</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://tailscale.com/security-bulletins/#ts-2022-004\">TS-2022-004</a></li>\n<li><a href=\"https://emily.id.au/tailscale\">Researcher blog post</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, <a href=\"https://tailscale.com/contact/support/\">contact Tailscale support</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp\">https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqp6-rc3h-83cp\">https://github.com/advisories/GHSA-vqp6-rc3h-83cp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqp6-rc3h-83cp",
            "title": "[tailscale/tailscale.com/cmd] Tailscale Windows daemon is vulnerable to RCE via CSRF",
            "date_modified": "2022-11-21T22:34:00.000Z",
            "date_published": "2022-11-21T22:34:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqp6-rc3h-83cp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>What kind of vulnerability is it? Who is impacted?</p>\n<p>ZipSlip issue when use fileutil package to unzip files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Has the problem been patched? What versions should users upgrade to?</p>\n<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.\nUsers who use v1.x.x should upgrade v1.3.4 or above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>\n<p>No, users have to upgrade version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4\">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41920\">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/issues/62\">https://github.com/duke-git/lancet/issues/62</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572\">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9\">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pp3f-xrw5-q5j4\">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pp3f-xrw5-q5j4",
            "title": "[github.com/duke-git/lancet/v2/fileutil] Lancet vulnerable to path traversal when unzipping files",
            "date_modified": "2022-11-22T21:48:04.000Z",
            "date_published": "2022-11-21T22:31:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>What kind of vulnerability is it? Who is impacted?</p>\n<p>ZipSlip issue when use fileutil package to unzip files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Has the problem been patched? What versions should users upgrade to?</p>\n<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.\nUsers who use v1.x.x should upgrade v1.3.4 or above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>\n<p>No, users have to upgrade version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4\">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41920\">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/issues/62\">https://github.com/duke-git/lancet/issues/62</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572\">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>\n<li><a href=\"https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9\">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pp3f-xrw5-q5j4\">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pp3f-xrw5-q5j4",
            "title": "[github.com/duke-git/lancet/v2/fileutil] Lancet vulnerable to path traversal when unzipping files",
            "date_modified": "2022-11-22T21:48:04.000Z",
            "date_published": "2022-11-21T22:31:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>immudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The following Go SDK versions are not vulnerable:</p>\n<table>\n<thead>\n<tr>\n<th><strong>SDK</strong></th>\n<th><strong>Version</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"pkg.go.dev/github.com/codenotary/immudb/pkg/client\">go</a></td>\n<td>1.4.1</td>\n</tr>\n</tbody></table>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>When initializing an immudb client object, a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in <a href=\"https://github.com/codenotary/immudb/discussions/new\">immudb Discussions</a></li>\n<li>Email us at <a href=\"mailto:immudb-security@codenotary.com\">immudb-security@codenotary.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x\">https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39199\">https://nvd.nist.gov/vuln/detail/CVE-2022-39199</a></li>\n<li><a href=\"https://github.com/codenotary/immudb/releases/tag/v1.4.1\">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6cqj-6969-p57x\">https://github.com/advisories/GHSA-6cqj-6969-p57x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6cqj-6969-p57x",
            "title": "[github.com/codenotary/immudb/pkg/client] Lack of proper validation of server UUID can be used by the server to trick the client to accept invalid proofs",
            "date_modified": "2022-11-28T16:16:30.000Z",
            "date_published": "2022-11-21T20:38:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6cqj-6969-p57x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In certain scenario a malicious immudb server can provide a falsified proof that will be accepted by the client SDK signing a falsified transaction replacing the genuine one. This situation can not be triggered by a genuine immudb server and requires the client to perform a specific list of verified operations resulting in acceptance of an invalid state value.</p>\n<p>This vulnerability only affects immudb client SDKs, the immudb server itself is not affected by this vulnerability.</p>\n<h3 id=\"detailed-description\">Detailed description</h3>\n<p>immudb uses Merkle Tree enhanced with additional linear part to perform consistency proofs between two transactions. The linear part is built from the last leaf node of the Merkle Tree compensating for transactions that were not yet consumed by the Merkle Tree calculation.</p>\n<p>The Merkle Tree part is then used to perform proofs for things that are in transaction range covered by the Merkle Tree where the linear part is used to check those that are not yet in the Merkle Tree.</p>\n<p>When doing consistency checks between two immudb states, the linear proof part is not fully checked. In fact only the first (last Merkle Tree leaf) and the last (current DB state value) are checked against new Merkle Tree without ensuring that elements in the middle of that chain are correctly added as Merkle Tree leafs.</p>\n<p>This lack of check means that the database can present different set of hashes on the linear proof part to what would later be used once those become part of the Merkle Tree. This property can be exploited by the database to expose two different transaction entries depending on the other transaction that the user requested consistency proof for.</p>\n<p>In practice this could lead to a following scenario:</p>\n<ul>\n<li>a client requests a verified write operation</li>\n<li>the server responds with a proof for the transaction</li>\n<li>client stores the state value retrieved from the server and expects it to be a confirmation of that write and all the history of the database before that transaction</li>\n<li>a series of validated read / write operations is performed by the client, each accompanied by a successfully validated consistency proof and update of the client state</li>\n<li>the client requests verified get operation on the transaction it has written before (and that was verified with a proof from the server)</li>\n<li>the server replies with a completely different transaction that can be properly validated according to the currently stored db state on the client side</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The following Go SDK versions is not vulnerable:</p>\n<table>\n<thead>\n<tr>\n<th><strong>SDK</strong></th>\n<th><strong>Version</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"pkg.go.dev/github.com/codenotary/immudb/pkg/client\">go</a></td>\n<td>1.4.1</td>\n</tr>\n</tbody></table>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Invalid proofs can not be generated in a normal immudb server and will be detected by a genuine replica server.\nTo ensure that the server does not produce invalid proofs and to check that the history presented by the server\ndoes not contain falsified transactions, one should run a genuine immudb replica server in a safe environment\nand fully synchronize all databases with the primary.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake\">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in <a href=\"https://github.com/codenotary/immudb/discussions/new\">immudb Discussions</a></li>\n<li>Email us at <a href=\"mailto:immudb-security@codenotary.com\">immudb-security@codenotary.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8\">https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36111\">https://nvd.nist.gov/vuln/detail/CVE-2022-36111</a></li>\n<li><a href=\"https://github.com/codenotary/immudb/releases/tag/v1.4.1\">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake\">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>\n<li><a href=\"https://pkg.go.dev/github.com/codenotary/immudb/pkg/client\">https://pkg.go.dev/github.com/codenotary/immudb/pkg/client</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-672p-m5jq-mrh8\">https://github.com/advisories/GHSA-672p-m5jq-mrh8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-672p-m5jq-mrh8",
            "title": "[github.com/codenotary/immudb/pkg/client] Insufficient Verification of Proofs generated by the immudb server in client SDK.",
            "date_modified": "2022-11-28T16:03:43.000Z",
            "date_published": "2022-11-21T20:38:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-672p-m5jq-mrh8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All lnd nodes before version <code>v0.15.4</code> are vulnerable to a block parsing bug that can cause a node to enter a degraded state once encountered. In this degraded state, nodes can continue to make payments and forward HTLCs, and close out channels. Opening channels is prohibited, and also on chain transaction events will be undetected. </p>\n<p>This can cause loss of funds if a CSV expiry is researched during a breach attempt or a CLTV delta expires forgetting the funds in the HTLC. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch is available starting with lnd <code>v0.15.4</code>. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Nodes can use the <code>lncli updatechanpolicy</code> RPC call to increase their CLTV value to a very high amount or increase their fee policies. This will prevent nodes from routing through your node, meaning that no pending HTLCs can be present. </p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/lightningnetwork/lnd/issues/7096\">https://github.com/lightningnetwork/lnd/issues/7096</a></p>\n<p><a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta\">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr\">https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39389\">https://nvd.nist.gov/vuln/detail/CVE-2022-39389</a></li>\n<li><a href=\"https://github.com/lightningnetwork/lnd/issues/7096\">https://github.com/lightningnetwork/lnd/issues/7096</a></li>\n<li><a href=\"https://github.com/lightningnetwork/lnd/pull/7098\">https://github.com/lightningnetwork/lnd/pull/7098</a></li>\n<li><a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta\">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hc82-w9v8-83pr\">https://github.com/advisories/GHSA-hc82-w9v8-83pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hc82-w9v8-83pr",
            "title": "[github.com/lightningnetwork/lnd] Witness Block Parsing DoS Vulnerability ",
            "date_modified": "2022-11-18T18:50:03.000Z",
            "date_published": "2022-11-18T18:50:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hc82-w9v8-83pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>\n<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For users who're using v1.6, please update the v1.6.1.\nFor users who're using v1.5, please update the v1.5.8.</p>\n<h3 id=\"references\">References</h3>\n<p>Fix by: #5000 </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/kubevela/kubevela\">KubeVela repo</a></li>\n<li>Email us at <a href=\"https://github.com/kubevela/kubevela#contact-us\">here</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39383\">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>\n<li><a href=\"https://github.com/kubevela/kubevela/pull/5000\">https://github.com/kubevela/kubevela/pull/5000</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7",
            "title": "[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ",
            "date_modified": "2022-11-19T01:18:52.000Z",
            "date_published": "2022-11-18T17:14:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>\n<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For users who're using v1.6, please update the v1.6.1.\nFor users who're using v1.5, please update the v1.5.8.</p>\n<h3 id=\"references\">References</h3>\n<p>Fix by: #5000 </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/kubevela/kubevela\">KubeVela repo</a></li>\n<li>Email us at <a href=\"https://github.com/kubevela/kubevela#contact-us\">here</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39383\">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>\n<li><a href=\"https://github.com/kubevela/kubevela/pull/5000\">https://github.com/kubevela/kubevela/pull/5000</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7",
            "title": "[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ",
            "date_modified": "2022-11-19T01:18:52.000Z",
            "date_published": "2022-11-18T17:14:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unmarshal can panic on some inputs, possibly allowing for denial of service attacks. This issue has been patched in version 2.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41719\">https://nvd.nist.gov/vuln/detail/CVE-2022-41719</a></li>\n<li><a href=\"https://github.com/shamaton/msgpack/issues/31\">https://github.com/shamaton/msgpack/issues/31</a></li>\n<li><a href=\"https://github.com/shamaton/msgpack/pull/32\">https://github.com/shamaton/msgpack/pull/32</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0972\">https://pkg.go.dev/vuln/GO-2022-0972</a></li>\n<li><a href=\"https://github.com/shamaton/msgpack/releases/tag/v2.1.1\">https://github.com/shamaton/msgpack/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jr77-8gx4-h5qh\">https://github.com/advisories/GHSA-jr77-8gx4-h5qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jr77-8gx4-h5qh",
            "title": "[github.com/shamaton/msgpack/v2] MessagePack for Golang subject to DoS via Unmarshal panic",
            "date_modified": "2022-11-16T00:04:13.000Z",
            "date_published": "2022-11-11T12:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jr77-8gx4-h5qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In versions prior to v0.7.0 it was possible for an attacker to supply an invalid assertion which would trigger a panic due to a nil-pointer dereference.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue was patched in v0.7.0, released on March 2, 2022.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Callers to <code>gosaml2</code> can use <code>recover()</code> to handle panics to mitigate a potential DoS.</p>\n<h3 id=\"references\">References</h3>\n<p>See issue #59 for details.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr\">https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr</a></li>\n<li><a href=\"https://github.com/russellhaering/gosaml2/issues/59\">https://github.com/russellhaering/gosaml2/issues/59</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gq5r-cc4w-g8xf\">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prjq-f4q3-fvfr\">https://github.com/advisories/GHSA-prjq-f4q3-fvfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prjq-f4q3-fvfr",
            "title": "[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference",
            "date_modified": "2022-11-15T19:05:09.000Z",
            "date_published": "2022-11-15T19:05:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prjq-f4q3-fvfr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7731\">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>\n<li><a href=\"https://github.com/russellhaering/gosaml2/issues/59\">https://github.com/russellhaering/gosaml2/issues/59</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gq5r-cc4w-g8xf\">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gq5r-cc4w-g8xf",
            "title": "[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference",
            "date_modified": "2022-11-15T19:04:54.000Z",
            "date_published": "2021-06-23T17:25:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>Moby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.</p>\n<p>Containers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.</p>\n<p>Versions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.</p>\n<p>This issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.</p>\n<p>As this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Moby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of <code>git+&lt;protocol&gt;://...</code> URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.</p>\n<p>Specifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:</p>\n<ul>\n<li><code>docker build</code> with the legacy builder (e.g. <code>DOCKER_BUILDKIT</code> unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.</li>\n<li><code>docker build</code> with the BuildKit builder (e.g. <code>DOCKER_BUILDKIT=1</code>) of a Git URL context.</li>\n<li><code>docker buildx build</code> with <code>BUILDKIT_CONTEXT_KEEP_GIT_DIR=1</code> of a Git URL context.</li>\n</ul>\n<p>Patches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.</p>\n<p>Patches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose <strong>cannot</strong> fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as <code>git clone --recursive</code>, <code>git submodule update</code>, etc.  may have already triggered the Git vulnerability).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>While this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.</p>\n<p>When building with BuildKit (e.g. <code>docker buildx build</code> or <code>docker build</code> with <code>DOCKER_BUILDKIT=1</code>), this issue cannot be exploited unless <code>--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1</code> was also passed, as by default BuildKit will discard the <code>.git</code> directory of a Git URL context immediately after cloning and checking out the repository.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/moby/moby/issues/new\">Open an issue</a></li>\n<li>Email us at <a href=\"mailto:security@docker.com\">security@docker.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25\">https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25</a></li>\n<li><a href=\"https://github.blog/2022-10-17-git-security-vulnerabilities-announced/\">https://github.blog/2022-10-17-git-security-vulnerabilities-announced/</a></li>\n<li><a href=\"https://github.com/moby/moby/releases/tag/v20.10.20\">https://github.com/moby/moby/releases/tag/v20.10.20</a></li>\n<li><a href=\"https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u\">https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vp35-85q5-9f25\">https://github.com/advisories/GHSA-vp35-85q5-9f25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vp35-85q5-9f25",
            "title": "[github.com/moby/moby] Container build can leak any path on the host into the container",
            "date_modified": "2022-11-11T00:03:32.000Z",
            "date_published": "2022-11-11T00:03:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vp35-85q5-9f25"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}