{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h2 id=\"asa-2024-005-potential-slashing-evasion-during-re-delegation\">ASA-2024-005: Potential slashing evasion during re-delegation</h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Low\n<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.4; &lt;= 0.47.9\n<strong>Affected Users</strong>: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Slashing Evasion</p>\n<h2 id=\"summary\">Summary</h2>\n<p>An issue was identified in the slashing mechanism that may allow for the evasion of slashing penalties during a slashing event. If a delegation contributed to byzantine behavior of a validator, and the validator has not yet been slashed, it may be possible for that delegation to evade a pending slashing penalty through re-delegation behavior. Additional validation logic was added to restrict this behavior.</p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by cat shark (Khanh) who reported it to the Cosmos Bug Bounty Program on HackerOne on December 6, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/commit/7dbed2fc0c3ed7c285645e21cb1037d8810372ae\">https://github.com/cosmos/cosmos-sdk/commit/7dbed2fc0c3ed7c285645e21cb1037d8810372ae</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/commit/d1b5b0c5ae2c51206cc1849e09e4d59986742cc3\">https://github.com/cosmos/cosmos-sdk/commit/d1b5b0c5ae2c51206cc1849e09e4d59986742cc3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86h5-xcpx-cfqc\">https://github.com/advisories/GHSA-86h5-xcpx-cfqc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86h5-xcpx-cfqc",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-005: Potential slashing evasion during re-delegation",
            "date_modified": "2024-02-27T21:55:55.000Z",
            "date_published": "2024-02-27T21:55:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86h5-xcpx-cfqc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"asa-2024-005-potential-slashing-evasion-during-re-delegation\">ASA-2024-005: Potential slashing evasion during re-delegation</h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Low\n<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.4; &lt;= 0.47.9\n<strong>Affected Users</strong>: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Slashing Evasion</p>\n<h2 id=\"summary\">Summary</h2>\n<p>An issue was identified in the slashing mechanism that may allow for the evasion of slashing penalties during a slashing event. If a delegation contributed to byzantine behavior of a validator, and the validator has not yet been slashed, it may be possible for that delegation to evade a pending slashing penalty through re-delegation behavior. Additional validation logic was added to restrict this behavior.</p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by cat shark (Khanh) who reported it to the Cosmos Bug Bounty Program on HackerOne on December 6, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-86h5-xcpx-cfqc</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/commit/7dbed2fc0c3ed7c285645e21cb1037d8810372ae\">https://github.com/cosmos/cosmos-sdk/commit/7dbed2fc0c3ed7c285645e21cb1037d8810372ae</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/commit/d1b5b0c5ae2c51206cc1849e09e4d59986742cc3\">https://github.com/cosmos/cosmos-sdk/commit/d1b5b0c5ae2c51206cc1849e09e4d59986742cc3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86h5-xcpx-cfqc\">https://github.com/advisories/GHSA-86h5-xcpx-cfqc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86h5-xcpx-cfqc",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-005: Potential slashing evasion during re-delegation",
            "date_modified": "2024-02-27T21:55:55.000Z",
            "date_published": "2024-02-27T21:55:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86h5-xcpx-cfqc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Transparent TLS (TTLS) is a MarbleRun feature that wraps plain TCP connections between Marbles in TLS.\nIn the manifest, a user defines the connections that should be considered.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If a Marble is configured for TTLS, but doesn't have an environment variable defined in its parameters, TTLS is not applied.\nThe traffic will not be encrypted.</p>\n<p>MarbleRun deployments that don't use TTLS (which is only available with EGo Marbles) are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/edgelesssys/marblerun/releases/tag/v1.4.1\"><code>v1.4.1</code></a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure that all Marbles that use TTLS have an environment variable defined in their parameters.</p>\n<h3 id=\"references\">References</h3>\n<p>For a description of TTLS, see <a href=\"https://docs.edgeless.systems/marblerun/features/transparent-TLS\">https://docs.edgeless.systems/marblerun/features/transparent-TLS</a>\nSee the updated section on TTLS configuration in the manifest: <a href=\"https://docs.edgeless.systems/marblerun/workflows/define-manifest#tls\">https://docs.edgeless.systems/marblerun/workflows/define-manifest#tls</a> </p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/edgelesssys/marblerun/security/advisories/GHSA-x5r5-2qrx-rqj8\">https://github.com/edgelesssys/marblerun/security/advisories/GHSA-x5r5-2qrx-rqj8</a></li>\n<li><a href=\"https://github.com/edgelesssys/marblerun/commit/0330ced092253613a07abe7b330ff6ac6fc6e9c6\">https://github.com/edgelesssys/marblerun/commit/0330ced092253613a07abe7b330ff6ac6fc6e9c6</a></li>\n<li><a href=\"https://github.com/edgelesssys/marblerun/commit/e5bcfe32883d22f3d87ffc9400f9fdb5ecbe3200\">https://github.com/edgelesssys/marblerun/commit/e5bcfe32883d22f3d87ffc9400f9fdb5ecbe3200</a></li>\n<li><a href=\"https://github.com/edgelesssys/marblerun/releases/tag/v1.4.1\">https://github.com/edgelesssys/marblerun/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x5r5-2qrx-rqj8\">https://github.com/advisories/GHSA-x5r5-2qrx-rqj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x5r5-2qrx-rqj8",
            "title": "[github.com/edgelesssys/marblerun] Transparent TLS may not be applied to Marbles with certain manifest configurations",
            "date_modified": "2024-02-27T19:02:16.000Z",
            "date_published": "2024-02-27T19:02:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x5r5-2qrx-rqj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The go-jose package is subject to a \"billion hashes attack\" causing denial-of-service when decrypting JWE inputs. This occurs when an attacker can provide a PBES2 encrypted JWE blob with a very large p2c value that, when decrypted, produces a denial-of-service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-jose/go-jose/issues/64\">https://github.com/go-jose/go-jose/issues/64</a></li>\n<li><a href=\"https://github.com/go-jose/go-jose/commit/65351c27657d58960c2e6c9fbb2b00f818e50568\">https://github.com/go-jose/go-jose/commit/65351c27657d58960c2e6c9fbb2b00f818e50568</a></li>\n<li><a href=\"https://github.com/go-jose/go-jose/commit/a3d307244c3bc50b25a71aa0688764c32ec419c7\">https://github.com/go-jose/go-jose/commit/a3d307244c3bc50b25a71aa0688764c32ec419c7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c7c-3mj9-8fqh\">https://github.com/advisories/GHSA-2c7c-3mj9-8fqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c7c-3mj9-8fqh",
            "title": "[github.com/square/go-jose] Decryption of malicious PBES2 JWE objects can consume unbounded system resources",
            "date_modified": "2024-02-27T18:36:28.000Z",
            "date_published": "2023-11-21T22:17:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c7c-3mj9-8fqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using a modified client or the grpc interface directly, the <code>RegisterRepository</code> call accepts <em>both</em> the repository owner / repo <strong>and</strong> the repo_id.  Furthermore, these two are not checked for matching before registering webhooks and data in the database.</p>\n<h3 id=\"details\">Details</h3>\n<p>It is possible for an attacker to register a repository with a invalid or differing upstream ID, which causes Minder to report the repository as registered, but not remediate any future changes which conflict with policy (because the webhooks for the repo do not match any known repository in the database).  When attempting to register a repo with a different repo ID, the registered provider must have admin on the named repo, or a 404 error will result.  Similarly, if the stored provider token does not have repo access, then the remediations will not apply successfully.  Lastly, it appears that reconciliation actions do not execute against repos with this type of mismatch.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>With an RPC like the following text proto:</p>\n<pre><code>context {\n  ...\n}\nrepository {\n  owner: \"Stacklok-Demo-Org\"\n  repo: \"python-app\"\n  # repo_id is defaulted to 0\n}\n</code></pre>\n<p>I was able to produce the following <code>minder</code> output:</p>\n<pre><code>+--------------------------------------+--------------------------------------+----------+-------------+-------------------+------------+\n|                  ID                  |               PROJECT                | PROVIDER | UPSTREAM ID |       OWNER       |    NAME    |\n+--------------------------------------+--------------------------------------+----------+-------------+-------------------+------------+\n| da3acba4-ef66-4d9b-b41e-250869107fd5 | f9f4aef0-74af-4909-a0c3-0e8ac7fbc38d | github   |           0 | Stacklok-Demo-Org | python-app |\n+--------------------------------------+--------------------------------------+----------+-------------+-------------------+------------+\n| 7cf8f7b8-b19b-40dd-a96b-b88bb1ef5563 | f9f4aef0-74af-4909-a0c3-0e8ac7fbc38d | github   |   762029128 | evankanderson     | bad-python |\n+--------------------------------------+--------------------------------------+----------+-------------+-------------------+------------+\n</code></pre>\n<pre><code>$ gh api repos/Stacklok-Demo-Org/python-app | jq .id                  \n762029128\n</code></pre>\n<p>I've registered bad-python with the ID of python-app, and python-app with an ID of 0.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This appears to primarily be a potential denial-of-service vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stacklok/minder/security/advisories/GHSA-q6h8-4j2v-pjg4\">https://github.com/stacklok/minder/security/advisories/GHSA-q6h8-4j2v-pjg4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27093\">https://nvd.nist.gov/vuln/detail/CVE-2024-27093</a></li>\n<li><a href=\"https://github.com/stacklok/minder/commit/53868a878e93f29c43437f96dbc990b548e48d1d\">https://github.com/stacklok/minder/commit/53868a878e93f29c43437f96dbc990b548e48d1d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6h8-4j2v-pjg4\">https://github.com/advisories/GHSA-q6h8-4j2v-pjg4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6h8-4j2v-pjg4",
            "title": "[github.com/stacklok/minder] Minder trusts client-provided mapping from repo name to upstream ID",
            "date_modified": "2024-02-27T14:12:02.000Z",
            "date_published": "2024-02-26T22:15:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6h8-4j2v-pjg4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug in permissions validation allows a user with the <code>ci:ReadAction</code> permission to skip read checks when copying an object.  If they additionally have read and write permission to path in the repository, they can copy an otherwise unreadable object and read it.</p>\n<p>In order to be affected and exploitable, the following conditions must ALL occur on the same user:</p>\n<ol>\n<li><code>ci:ReadAction</code> enabled for the repository.  Predefined policies RepoManagementRead and RepoManagementFullAccess allow this action.</li>\n<li><code>fs:ReadObject</code> and <code>fs:WriteObject</code> enabled for some path.</li>\n<li><code>fs:ReadObject</code> <em>not</em> available for some path</li>\n</ol>\n<p>Such a user can use (1) to copy the unreadable object (3) to a path that they can read and write (2).  At that point they can read the object copy.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Releases &gt;= 1.12.1 fix this issue in lakeFS.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a workaround, use RBAC to deny <code>ci:*</code> permissions to all users, or to all users who have limited read access.</p>\n<p>Many installations are unaffected:</p>\n<ul>\n<li><strong>Installations using ACLs are <em>not</em> affected.</strong> This includes all OSS installations that have not implemented an external authorization server.  We do not know of any OSS installations that have implemented such a server.  ACLs that allow ci:ReadAction also allow reading repositories, so no capabilities are granted.</li>\n<li><strong>Installations using RBAC that use only predefined policies with \"all\" ARNs (\"*\") are <em>not</em> affected.</strong>  This includes <strong>all installations that have not defined any new groups in RBAC.</strong></li>\n</ul>\n<p>In order to be affected, <strong>installations using RBAC</strong> must define users and simultaneous allow <code>ci:ReadAction</code> and disallow <code>fs:ReadObject</code> for some path.  <code>ci:ReadAction</code> is available in policies RepoManagementReadAll and RepoManagementFullAccess.  By default these actions are configured for groups Developers and above, for all repositories and paths.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://docs.lakefs.io/reference/security/rbac.html\">lakeFS RBAC</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/treeverse/lakeFS/security/advisories/GHSA-fvv5-h29g-f6w5\">https://github.com/treeverse/lakeFS/security/advisories/GHSA-fvv5-h29g-f6w5</a></li>\n<li><a href=\"https://github.com/treeverse/lakeFS/commit/56556ee5406fc5425b9302cd08a8d412635fdcd7\">https://github.com/treeverse/lakeFS/commit/56556ee5406fc5425b9302cd08a8d412635fdcd7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvv5-h29g-f6w5\">https://github.com/advisories/GHSA-fvv5-h29g-f6w5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvv5-h29g-f6w5",
            "title": "[github.com/treeverse/lakefs] User with ci:ReadAction permissions and write permissions to one path in a repository may copy objects from any path in the repository",
            "date_modified": "2024-02-22T21:36:05.000Z",
            "date_published": "2024-02-22T21:36:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvv5-h29g-f6w5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') vulnerability in Apache Answer. This issue affects Apache Answer through 1.2.1.</p>\n<p>Repeated submission during registration resulted in the registration of the same user. When users register, if they rapidly submit multiple registrations using scripts, it can result in the creation of multiple user accounts simultaneously with the same name.</p>\n<p>Users are recommended to upgrade to version 1.2.5, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26578\">https://nvd.nist.gov/vuln/detail/CVE-2024-26578</a></li>\n<li><a href=\"https://lists.apache.org/thread/ko0ksnznt2484lxt0zts2ygr82ldkhcb\">https://lists.apache.org/thread/ko0ksnznt2484lxt0zts2ygr82ldkhcb</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/02/22/3\">http://www.openwall.com/lists/oss-security/2024/02/22/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9q24-hwmc-797x\">https://github.com/advisories/GHSA-9q24-hwmc-797x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9q24-hwmc-797x",
            "title": "[github.com/apache/incubator-answer] Apache Answer Race Condition vulnerability",
            "date_modified": "2024-02-22T21:35:15.000Z",
            "date_published": "2024-02-22T12:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9q24-hwmc-797x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Helm contributor discovered uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>When either an <code>index.yaml</code> file or a plugins <code>plugin.yaml</code> file were missing all metadata a panic would occur in Helm.</p>\n<p>In the Helm SDK this is found when using the <code>LoadIndexFile</code> or <code>DownloadIndexFile</code> functions in the <code>repo</code> package or the <code>LoadDir</code> function in the <code>plugin</code> package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been resolved in Helm v3.14.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem.</p>\n<p>If using Helm SDK versions prior to 3.14.2, calls to affected functions can use <code>recover</code> to catch the panic.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Helm's security policy is spelled out in detail in our <a href=\"https://github.com/helm/community/blob/master/SECURITY.md\">SECURITY</a> document.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by Jakub Ciolek at AlphaSense.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-r53h-jv2g-vpx6\">https://github.com/helm/helm/security/advisories/GHSA-r53h-jv2g-vpx6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26147\">https://nvd.nist.gov/vuln/detail/CVE-2024-26147</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/bb4cc9125503a923afb7988f3eb478722a8580af\">https://github.com/helm/helm/commit/bb4cc9125503a923afb7988f3eb478722a8580af</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r53h-jv2g-vpx6\">https://github.com/advisories/GHSA-r53h-jv2g-vpx6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r53h-jv2g-vpx6",
            "title": "[helm.sh/helm/v3] Helm's Missing YAML Content Leads To Panic",
            "date_modified": "2024-02-22T19:34:53.000Z",
            "date_published": "2024-02-22T19:34:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r53h-jv2g-vpx6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unrestricted Upload of File with Dangerous Type vulnerability in Apache Answer. This issue affects Apache Answer through 1.2.1.</p>\n<p>Pixel Flood Attack by uploading large pixel files will cause server out of memory. A logged-in user&nbsp;can cause such an attack by uploading an image when posting content.</p>\n<p>Users are recommended to upgrade to version 1.2.5, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22393\">https://nvd.nist.gov/vuln/detail/CVE-2024-22393</a></li>\n<li><a href=\"https://lists.apache.org/thread/f58l6dr4r74hl6o71gn47kmn44vw12cv\">https://lists.apache.org/thread/f58l6dr4r74hl6o71gn47kmn44vw12cv</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/02/22/1\">http://www.openwall.com/lists/oss-security/2024/02/22/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rmqp-mvv2-54c6\">https://github.com/advisories/GHSA-rmqp-mvv2-54c6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rmqp-mvv2-54c6",
            "title": "[github.com/apache/incubator-answer] Apache Answer Unrestricted Upload of File with Dangerous Type vulnerability",
            "date_modified": "2024-02-22T19:31:42.000Z",
            "date_published": "2024-02-22T12:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rmqp-mvv2-54c6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Apache Answer. This issue affects Apache Answer through 1.2.1.</p>\n<p>XSS attack when user enters summary. A logged-in user, when modifying their own submitted question, can input malicious code in the summary to create such an attack.</p>\n<p>Users are recommended to upgrade to version 1.2.5, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23349\">https://nvd.nist.gov/vuln/detail/CVE-2024-23349</a></li>\n<li><a href=\"https://lists.apache.org/thread/y5902t09vfgy7892z3vzr1zq900sgyqg\">https://lists.apache.org/thread/y5902t09vfgy7892z3vzr1zq900sgyqg</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/02/22/2\">http://www.openwall.com/lists/oss-security/2024/02/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8pf2-qj4v-fj64\">https://github.com/advisories/GHSA-8pf2-qj4v-fj64</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8pf2-qj4v-fj64",
            "title": "[github.com/apache/incubator-answer] Apache Answer Cross-site Scripting vulnerability",
            "date_modified": "2024-02-22T19:30:46.000Z",
            "date_published": "2024-02-22T12:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8pf2-qj4v-fj64"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The CORS middleware allows for insecure configurations that could potentially expose the application to multiple CORS-related vulnerabilities. Specifically, it allows setting the Access-Control-Allow-Origin header to a wildcard (\"*\") while also having the Access-Control-Allow-Credentials set to true, which goes against recommended security best practices.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The impact of this misconfiguration is high as it can lead to unauthorized access to sensitive user data and expose the system to various types of attacks listed in the PortSwigger article linked in the references.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>The code in cors.go allows setting a wildcard in the AllowOrigins while having AllowCredentials set to true, which could lead to various vulnerabilities.</p>\n<h2 id=\"potential-solution\">Potential Solution</h2>\n<p>Here is a potential solution to ensure the CORS configuration is secure:</p>\n<pre><code class=\"language-go\">func New(config ...Config) fiber.Handler {\n    if cfg.AllowCredentials &amp;&amp; cfg.AllowOrigins == \"*\" {\n        panic(\"[CORS] Insecure setup, 'AllowCredentials' is set to true, and 'AllowOrigins' is set to a wildcard.\")\n    }\n    // Return new handler goes below\n}\n\nThe middleware will not allow insecure configurations when using `AllowCredentials` and `AllowOrigins`.\n</code></pre>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For the meantime, users are advised to manually validate the CORS configurations in their implementation to ensure that they do not allow a wildcard origin when credentials are enabled. The browser fetch api, browsers and utilities that enforce CORS policies are not affected by this.</p>\n<h2 id=\"references\">References</h2>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials\">MDN Web Docs on CORS Errors</a>\n<a href=\"https://codeql.github.com/codeql-query-help/javascript/js-cors-misconfiguration-for-credentials/\">CodeQL on CORS Misconfiguration</a>\n<a href=\"http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html\">PortSwigger on Exploiting CORS Misconfigurations</a>\n<a href=\"https://fetch.spec.whatwg.org/#cors-protocol-and-credentials\">WhatWG CORS protocol and credentials </a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gofiber/fiber/security/advisories/GHSA-fmg4-x8pw-hjhg\">https://github.com/gofiber/fiber/security/advisories/GHSA-fmg4-x8pw-hjhg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25124\">https://nvd.nist.gov/vuln/detail/CVE-2024-25124</a></li>\n<li><a href=\"https://github.com/gofiber/fiber/commit/f0cd3b44b086544a37886232d0530601f2406c23\">https://github.com/gofiber/fiber/commit/f0cd3b44b086544a37886232d0530601f2406c23</a></li>\n<li><a href=\"https://codeql.github.com/codeql-query-help/javascript/js-cors-misconfiguration-for-credentials\">https://codeql.github.com/codeql-query-help/javascript/js-cors-misconfiguration-for-credentials</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials\">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials</a></li>\n<li><a href=\"https://fetch.spec.whatwg.org/#cors-protocol-and-credentials\">https://fetch.spec.whatwg.org/#cors-protocol-and-credentials</a></li>\n<li><a href=\"https://github.com/gofiber/fiber/releases/tag/v2.52.1\">https://github.com/gofiber/fiber/releases/tag/v2.52.1</a></li>\n<li><a href=\"https://saturncloud.io/blog/cors-cannot-use-wildcard-in-accesscontrolalloworigin-when-credentials-flag-is-true\">https://saturncloud.io/blog/cors-cannot-use-wildcard-in-accesscontrolalloworigin-when-credentials-flag-is-true</a></li>\n<li><a href=\"http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html\">http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmg4-x8pw-hjhg\">https://github.com/advisories/GHSA-fmg4-x8pw-hjhg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmg4-x8pw-hjhg",
            "title": "[github.com/gofiber/fiber/v2] Fiber has Insecure CORS Configuration, Allowing Wildcard Origin with Credentials",
            "date_modified": "2024-02-26T15:48:32.000Z",
            "date_published": "2024-02-22T18:25:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmg4-x8pw-hjhg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Elastic Cloud on Kubernetes (ECK) versions prior to 1.1.0 generate passwords using a weak random number generator. If an attacker is able to determine when the current Elastic Stack cluster was deployed they may be able to more easily brute force the Elasticsearch credentials generated by ECK.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7010\">https://nvd.nist.gov/vuln/detail/CVE-2020-7010</a></li>\n<li><a href=\"https://www.elastic.co/community/security/\">https://www.elastic.co/community/security/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfp4-xx6m-7vf6\">https://github.com/advisories/GHSA-vfp4-xx6m-7vf6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfp4-xx6m-7vf6",
            "title": "[github.com/elastic/cloud-on-k8s] Cryptographic Issues in ECK",
            "date_modified": "2024-02-22T05:08:13.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfp4-xx6m-7vf6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>aws/resource_aws_iam_user_login_profile.go in the HashiCorp Terraform Amazon Web Services (AWS) provider through v1.12.0 has an inappropriate PRNG algorithm and seeding, which makes it easier for remote attackers to obtain access by leveraging an IAM account that was provisioned with a weak password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-9057\">https://nvd.nist.gov/vuln/detail/CVE-2018-9057</a></li>\n<li><a href=\"https://github.com/terraform-providers/terraform-provider-aws/pull/3934\">https://github.com/terraform-providers/terraform-provider-aws/pull/3934</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-aws/pull/3934\">https://github.com/hashicorp/terraform-provider-aws/pull/3934</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-aws/pull/3989\">https://github.com/hashicorp/terraform-provider-aws/pull/3989</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-aws/commit/efa8cd45c6484ff70b2a515ea7ff06f2459d4ddf\">https://github.com/hashicorp/terraform-provider-aws/commit/efa8cd45c6484ff70b2a515ea7ff06f2459d4ddf</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-aws/blob/02b039aa82dd7fc6e4a97a0922cc5dbbab724021/resource_aws_iam_user_login_profile.go#L70-L80\">https://github.com/hashicorp/terraform-provider-aws/blob/02b039aa82dd7fc6e4a97a0922cc5dbbab724021/resource_aws_iam_user_login_profile.go#L70-L80</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r48h-jr2j-9g78\">https://github.com/advisories/GHSA-r48h-jr2j-9g78</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r48h-jr2j-9g78",
            "title": "[github.com/hashicorp/terraform-provider-aws]  HashiCorp Terraform Amazon Web Services (AWS) uses an insecure PRNG ",
            "date_modified": "2024-02-21T23:19:55.000Z",
            "date_published": "2022-05-14T03:29:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r48h-jr2j-9g78"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in the decompression function of registry-support. This issue can be triggered by an unauthenticated remote attacker when tricking a user into opening a specially modified .tar archive, leading to the cleanup process following relative paths to overwrite or delete files outside the intended scope.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1485\">https://nvd.nist.gov/vuln/detail/CVE-2024-1485</a></li>\n<li><a href=\"https://github.com/devfile/registry-support/commit/0e44b9ca6d03fac4fc3f77d37656d56dc5defe0d\">https://github.com/devfile/registry-support/commit/0e44b9ca6d03fac4fc3f77d37656d56dc5defe0d</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-1485\">https://access.redhat.com/security/cve/CVE-2024-1485</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2264106\">https://bugzilla.redhat.com/show_bug.cgi?id=2264106</a></li>\n<li><a href=\"https://github.com/devfile/registry-support/pull/197\">https://github.com/devfile/registry-support/pull/197</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-84xv-jfrm-h4gm\">https://github.com/advisories/GHSA-84xv-jfrm-h4gm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-84xv-jfrm-h4gm",
            "title": "[github.com/devfile/registry-support/registry-library] registry-support: decompress can delete files outside scope via relative paths",
            "date_modified": "2024-02-22T18:59:03.000Z",
            "date_published": "2024-02-14T00:35:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-84xv-jfrm-h4gm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"asa-2024-002-default-prepareproposalhandler-may-produce-invalid-proposals-when-used-with-default-sendernoncemempool\">ASA-2024-002: Default <code>PrepareProposalHandler</code> may produce invalid proposals when used with default <code>SenderNonceMempool</code></h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Medium\n<strong>Affected</strong> Versions: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8\n<strong>Affected</strong> Users: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Denial of Service</p>\n<h2 id=\"summary\">Summary</h2>\n<p>When using the default <code>PrepareProposalHandler</code> and the default <code>SenderNonceMempool</code>, an issue was identified which may allow invalid blocks to be proposed when a single sender includes multiple transactions with non-sequential sequence numbers in certain conditions. If this state is reached, it can lead to a reduction in block production for a network.</p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by <a href=\"https://github.com/KonradStaniec\">KonradStaniec</a>, <a href=\"https://github.com/gitferry\">gitferry</a>, <a href=\"https://github.com/SebastianElvis\">SebastianElvis</a>, and <a href=\"https://github.com/vitsalis\">vitsalis</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 16, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2557-x9mg-76w8\">https://github.com/advisories/GHSA-2557-x9mg-76w8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2557-x9mg-76w8",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-002: Default `PrepareProposalHandler` may produce invalid proposals when used with default `SenderNonceMempool`",
            "date_modified": "2024-02-21T00:13:49.000Z",
            "date_published": "2024-02-21T00:13:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2557-x9mg-76w8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"asa-2024-002-default-prepareproposalhandler-may-produce-invalid-proposals-when-used-with-default-sendernoncemempool\">ASA-2024-002: Default <code>PrepareProposalHandler</code> may produce invalid proposals when used with default <code>SenderNonceMempool</code></h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Medium\n<strong>Affected</strong> Versions: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8\n<strong>Affected</strong> Users: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Denial of Service</p>\n<h2 id=\"summary\">Summary</h2>\n<p>When using the default <code>PrepareProposalHandler</code> and the default <code>SenderNonceMempool</code>, an issue was identified which may allow invalid blocks to be proposed when a single sender includes multiple transactions with non-sequential sequence numbers in certain conditions. If this state is reached, it can lead to a reduction in block production for a network.</p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by <a href=\"https://github.com/KonradStaniec\">KonradStaniec</a>, <a href=\"https://github.com/gitferry\">gitferry</a>, <a href=\"https://github.com/SebastianElvis\">SebastianElvis</a>, and <a href=\"https://github.com/vitsalis\">vitsalis</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 16, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2557-x9mg-76w8\">https://github.com/advisories/GHSA-2557-x9mg-76w8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2557-x9mg-76w8",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-002: Default `PrepareProposalHandler` may produce invalid proposals when used with default `SenderNonceMempool`",
            "date_modified": "2024-02-21T00:13:49.000Z",
            "date_published": "2024-02-21T00:13:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2557-x9mg-76w8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"asa-2024-003-missing-blockedaddressed-validation-in-vesting-module\">ASA-2024-003: Missing <code>BlockedAddressed</code> Validation in Vesting Module</h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Low\n<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8\n<strong>Affected Users</strong>: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Denial of Service</p>\n<h2 id=\"description\">Description</h2>\n<p>A vulnerability was identified in the <code>x/auth/vesting</code> module, which can allow a user to create a periodic vesting account on a blocked address, for example a non-initialized module account. Additional validation was added to prevent creation of a periodic vesting account in this scenario.</p>\n<p>If this case is triggered, there is the potential for a chain halt if the uninitialized account in question is called by <code>GetModuleAccount</code> in <code>Begin</code>/<code>EndBlock</code> of a module. This combination of an uninitialized blocked module account is not common.  </p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If your chain has uninitialized blocked module accounts, it is recommended to proactively initialize them, as they are often initialized during a chain migration or during init genesis.</p>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by <a href=\"https://github.com/dongsam\">Dongsam</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 30, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4j93-fm92-rp4m\">https://github.com/advisories/GHSA-4j93-fm92-rp4m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4j93-fm92-rp4m",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-003: Missing `BlockedAddressed` Validation in Vesting Module",
            "date_modified": "2024-02-21T00:12:54.000Z",
            "date_published": "2024-02-21T00:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4j93-fm92-rp4m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"asa-2024-003-missing-blockedaddressed-validation-in-vesting-module\">ASA-2024-003: Missing <code>BlockedAddressed</code> Validation in Vesting Module</h2>\n<p><strong>Component</strong>: Cosmos SDK\n<strong>Criticality</strong>: Low\n<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8\n<strong>Affected Users</strong>: Chain developers, Validator and Node operators\n<strong>Impact</strong>: Denial of Service</p>\n<h2 id=\"description\">Description</h2>\n<p>A vulnerability was identified in the <code>x/auth/vesting</code> module, which can allow a user to create a periodic vesting account on a blocked address, for example a non-initialized module account. Additional validation was added to prevent creation of a periodic vesting account in this scenario.</p>\n<p>If this case is triggered, there is the potential for a chain halt if the uninitialized account in question is called by <code>GetModuleAccount</code> in <code>Begin</code>/<code>EndBlock</code> of a module. This combination of an uninitialized blocked module account is not common.  </p>\n<h2 id=\"next-steps-for-impacted-parties\">Next Steps for Impacted Parties</h2>\n<p>If your chain has uninitialized blocked module accounts, it is recommended to proactively initialize them, as they are often initialized during a chain migration or during init genesis.</p>\n<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>\n<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories\">repository</a>. For more information about Cosmos SDK, see <a href=\"https://docs.cosmos.network/\">https://docs.cosmos.network/</a>.</p>\n<p>This issue was found by <a href=\"https://github.com/dongsam\">Dongsam</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 30, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href=\"https://hackerone.com/cosmos\">https://hackerone.com/cosmos</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4j93-fm92-rp4m\">https://github.com/advisories/GHSA-4j93-fm92-rp4m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4j93-fm92-rp4m",
            "title": "[github.com/cosmos/cosmos-sdk] ASA-2024-003: Missing `BlockedAddressed` Validation in Vesting Module",
            "date_modified": "2024-02-21T00:12:54.000Z",
            "date_published": "2024-02-21T00:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4j93-fm92-rp4m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Server-side Request Forgery (SSRF) via X-Forwarded-Host header manipulation. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21498\">https://nvd.nist.gov/vuln/detail/CVE-2024-21498</a></li>\n<li><a href=\"https://github.com/greenpau/caddy-security/issues/269\">https://github.com/greenpau/caddy-security/issues/269</a></li>\n<li><a href=\"https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy\">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249862\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249862</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93x8-66j2-wwr5\">https://github.com/advisories/GHSA-93x8-66j2-wwr5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93x8-66j2-wwr5",
            "title": "[github.com/greenpau/caddy-security] Server-Side Request Forgery in github.com/greenpau/caddy-security",
            "date_modified": "2024-02-20T23:53:07.000Z",
            "date_published": "2024-02-17T06:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93x8-66j2-wwr5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Improper Restriction of Excessive Authentication Attempts via the two-factor authentication (2FA). Although the application blocks the user after several failed attempts to provide 2FA codes, attackers can bypass this blocking mechanism by automating the application’s full multistep 2FA process.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21500\">https://nvd.nist.gov/vuln/detail/CVE-2024-21500</a></li>\n<li><a href=\"https://github.com/greenpau/caddy-security/issues/271\">https://github.com/greenpau/caddy-security/issues/271</a></li>\n<li><a href=\"https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy\">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249864\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249864</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfph-hjfv-cpv2\">https://github.com/advisories/GHSA-vfph-hjfv-cpv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfph-hjfv-cpv2",
            "title": "[github.com/greenpau/caddy-security] Improper Restriction of Excessive Authentication Attempts in github.com/greenpau/caddy-security",
            "date_modified": "2024-02-20T23:48:23.000Z",
            "date_published": "2024-02-17T06:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfph-hjfv-cpv2"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}