{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Asymmetric resource exhaustion could occur when go-getter processed malicious HTTP responses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30323\">https://nvd.nist.gov/vuln/detail/CVE-2022-30323</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28r2-q6m8-9hpx\">https://github.com/advisories/GHSA-28r2-q6m8-9hpx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28r2-q6m8-9hpx",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:21:26.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28r2-q6m8-9hpx"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Asymmetric resource exhaustion could occur when go-getter processed malicious HTTP responses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30323\">https://nvd.nist.gov/vuln/detail/CVE-2022-30323</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28r2-q6m8-9hpx\">https://github.com/advisories/GHSA-28r2-q6m8-9hpx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28r2-q6m8-9hpx",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:21:26.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28r2-q6m8-9hpx"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter before 2.0.2 allows Command Injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26945\">https://nvd.nist.gov/vuln/detail/CVE-2022-26945</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x24g-9w7v-vprh\">https://github.com/advisories/GHSA-x24g-9w7v-vprh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x24g-9w7v-vprh",
            "title": "[github.com/hashicorp/go-getter] Command injection in HashiCorp go-getter ",
            "date_modified": "2022-06-01T21:20:55.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x24g-9w7v-vprh"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter before 2.0.2 allows Command Injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26945\">https://nvd.nist.gov/vuln/detail/CVE-2022-26945</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x24g-9w7v-vprh\">https://github.com/advisories/GHSA-x24g-9w7v-vprh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x24g-9w7v-vprh",
            "title": "[github.com/hashicorp/go-getter] Command injection in HashiCorp go-getter ",
            "date_modified": "2022-06-01T21:20:55.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x24g-9w7v-vprh"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Protocol switching, endless redirect, and configuration bypass were possible via abuse of custom HTTP response header processing.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30321\">https://nvd.nist.gov/vuln/detail/CVE-2022-30321</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fcgg-rvwg-jv58\">https://github.com/advisories/GHSA-fcgg-rvwg-jv58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fcgg-rvwg-jv58",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:20:38.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fcgg-rvwg-jv58"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Protocol switching, endless redirect, and configuration bypass were possible via abuse of custom HTTP response header processing.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30321\">https://nvd.nist.gov/vuln/detail/CVE-2022-30321</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fcgg-rvwg-jv58\">https://github.com/advisories/GHSA-fcgg-rvwg-jv58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fcgg-rvwg-jv58",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:20:38.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fcgg-rvwg-jv58"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Arbitrary host access was possible via go-getter path traversal, symlink processing, and command injection flaws.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30322\">https://nvd.nist.gov/vuln/detail/CVE-2022-30322</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cjr4-fv6c-f3mv\">https://github.com/advisories/GHSA-cjr4-fv6c-f3mv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cjr4-fv6c-f3mv",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:19:26.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cjr4-fv6c-f3mv"
            }
        },
        {
            "content_html": "<p>HashiCorp go-getter through 2.0.2 does not safely perform downloads. Arbitrary host access was possible via go-getter path traversal, symlink processing, and command injection flaws.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30322\">https://nvd.nist.gov/vuln/detail/CVE-2022-30322</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930\">https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cjr4-fv6c-f3mv\">https://github.com/advisories/GHSA-cjr4-fv6c-f3mv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cjr4-fv6c-f3mv",
            "title": "[github.com/hashicorp/go-getter] Unsafe downloads in HashiCorp go-getter",
            "date_modified": "2022-06-01T21:19:26.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cjr4-fv6c-f3mv"
            }
        },
        {
            "content_html": "<p>In ginadmin through 05-10-2022 the incoming path value is not filtered, resulting in directory traversal.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30427\">https://nvd.nist.gov/vuln/detail/CVE-2022-30427</a></li>\n<li><a href=\"https://github.com/gphper/ginadmin/issues/8\">https://github.com/gphper/ginadmin/issues/8</a></li>\n<li><a href=\"https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30\">https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pg5-3pjc-f8wm\">https://github.com/advisories/GHSA-9pg5-3pjc-f8wm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pg5-3pjc-f8wm",
            "title": "[github.com/gphper/ginadmin] Path traversal in ginadmin",
            "date_modified": "2022-06-01T21:13:17.000Z",
            "date_published": "2022-05-26T00:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pg5-3pjc-f8wm"
            }
        },
        {
            "content_html": "<p>In ginadmin through 05-10-2022, the incoming path value is not filtered, resulting in arbitrary file reading.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30428\">https://nvd.nist.gov/vuln/detail/CVE-2022-30428</a></li>\n<li><a href=\"https://github.com/gphper/ginadmin/issues/9\">https://github.com/gphper/ginadmin/issues/9</a></li>\n<li><a href=\"https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30\">https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5824-6jfv-xr3r\">https://github.com/advisories/GHSA-5824-6jfv-xr3r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5824-6jfv-xr3r",
            "title": "[github.com/gphper/ginadmin] Arbitrary file read in ginadmin",
            "date_modified": "2022-06-01T21:12:50.000Z",
            "date_published": "2022-05-26T00:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5824-6jfv-xr3r"
            }
        },
        {
            "content_html": "<p>An issue in the Unmarshal function in Go-Yaml v3 causes the program to crash when attempting to deserialize invalid input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28948\">https://nvd.nist.gov/vuln/detail/CVE-2022-28948</a></li>\n<li><a href=\"https://github.com/go-yaml/yaml/issues/666\">https://github.com/go-yaml/yaml/issues/666</a></li>\n<li><a href=\"https://github.com/go-yaml/yaml/commit/8f96da9f5d5eff988554c1aae1784627c4bf6754\">https://github.com/go-yaml/yaml/commit/8f96da9f5d5eff988554c1aae1784627c4bf6754</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hp87-p4gw-j4gq\">https://github.com/advisories/GHSA-hp87-p4gw-j4gq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hp87-p4gw-j4gq",
            "title": "[gopkg.in/yaml.v3] Unhandled exception in gopkg.in/yaml.v3",
            "date_modified": "2022-06-01T19:34:21.000Z",
            "date_published": "2022-05-20T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hp87-p4gw-j4gq"
            }
        },
        {
            "content_html": "<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1227\">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>\n<li><a href=\"https://github.com/containers/podman/issues/10941\">https://github.com/containers/podman/issues/10941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2070368\">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66vw-v2x9-hw75\">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75",
            "title": "[github.com/containers/podman] Podman publishes a malicious image to public registries",
            "date_modified": "2022-05-26T19:48:01.000Z",
            "date_published": "2022-04-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75"
            }
        },
        {
            "content_html": "<p>The route lookup process in beego through 1.12.4 and 2.x through 2.0.2 allows attackers to bypass access control. When a /p1/p2/:name route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31259\">https://nvd.nist.gov/vuln/detail/CVE-2022-31259</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4946\">https://github.com/beego/beego/issues/4946</a></li>\n<li><a href=\"https://github.com/beego/beego/tree/v2.0.2\">https://github.com/beego/beego/tree/v2.0.2</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4958\">https://github.com/beego/beego/pull/4958</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qx32-f6g6-fcfr\">https://github.com/advisories/GHSA-qx32-f6g6-fcfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr",
            "title": "[github.com/beego/beego] Access control bypass in beego",
            "date_modified": "2022-05-25T20:36:11.000Z",
            "date_published": "2022-05-22T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr"
            }
        },
        {
            "content_html": "<p>The route lookup process in beego through 1.12.4 and 2.x through 2.0.2 allows attackers to bypass access control. When a /p1/p2/:name route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31259\">https://nvd.nist.gov/vuln/detail/CVE-2022-31259</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4946\">https://github.com/beego/beego/issues/4946</a></li>\n<li><a href=\"https://github.com/beego/beego/tree/v2.0.2\">https://github.com/beego/beego/tree/v2.0.2</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4958\">https://github.com/beego/beego/pull/4958</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qx32-f6g6-fcfr\">https://github.com/advisories/GHSA-qx32-f6g6-fcfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr",
            "title": "[github.com/beego/beego/v2] Access control bypass in beego",
            "date_modified": "2022-05-25T20:36:11.000Z",
            "date_published": "2022-05-22T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr"
            }
        },
        {
            "content_html": "<p>An issue in the component ast/parser.go of Open Policy Agent v0.39.0 causes the application to incorrectly interpret every expression, causing a Denial of Service (DoS) via triggering out-of-range memory access.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28946\">https://nvd.nist.gov/vuln/detail/CVE-2022-28946</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/e9d3828db670cbe11129885f37f08cbf04935264\">https://github.com/open-policy-agent/opa/commit/e9d3828db670cbe11129885f37f08cbf04935264</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7f3-62pm-9p38\">https://github.com/advisories/GHSA-x7f3-62pm-9p38</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7f3-62pm-9p38",
            "title": "[github.com/open-policy-agent/opa] Out of bounds memory access in github.com/open-policy-agent/opa",
            "date_modified": "2022-05-31T23:27:53.000Z",
            "date_published": "2022-05-20T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7f3-62pm-9p38"
            }
        },
        {
            "content_html": "<p>Gitea before 1.16.7 does not escape the shell out for <code>git fetch remote</code> allowing for shell command injection</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30781\">https://nvd.nist.gov/vuln/detail/CVE-2022-30781</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/19487\">https://github.com/go-gitea/gitea/pull/19487</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/19490\">https://github.com/go-gitea/gitea/pull/19490</a></li>\n<li><a href=\"https://blog.gitea.io/2022/05/gitea-1.16.7-is-released/\">https://blog.gitea.io/2022/05/gitea-1.16.7-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p5f9-c9j9-g8qx\">https://github.com/advisories/GHSA-p5f9-c9j9-g8qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p5f9-c9j9-g8qx",
            "title": "[code.gitea.io/gitea] Shell command injection in gitea",
            "date_modified": "2022-05-25T20:14:37.000Z",
            "date_published": "2022-05-17T00:01:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p5f9-c9j9-g8qx"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Unprivileged software in VMware VMs, including software running in unprivileged containers, can retrieve an Ignition config stored in a hypervisor guestinfo variable or OVF environment.  If the Ignition config contains secrets, this can result in the compromise of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Ignition 2.14.0 and later <a href=\"https://github.com/coreos/ignition/pull/1350\">adds</a> a new systemd service, <code>ignition-delete-config.service</code>, that deletes the Ignition config from supported hypervisors (currently VMware and VirtualBox) during the first boot.  This ensures that unprivileged software cannot retrieve the Ignition config from the hypervisor.</p>\n<p>If you have external tooling that requires the Ignition config to remain accessible in VM metadata after provisioning, and your Ignition config does not include sensitive information, you can prevent Ignition 2.14.0 and later from deleting the config by masking <code>ignition-delete-config.service</code>.  For example:</p>\n<pre><code class=\"language-json\">{\n  \"ignition\": {\n    \"version\": \"3.0.0\"\n  },\n  \"systemd\": {\n    \"units\": [\n      {\n        \"name\": \"ignition-delete-config.service\",\n        \"mask\": true\n      }\n    ]\n  }\n}\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><a href=\"https://coreos.github.io/ignition/operator-notes/#secrets\">Avoid storing secrets</a> in Ignition configs. In addition to VMware, many cloud platforms allow unprivileged software in a VM to retrieve the Ignition config from a networked cloud metadata service. While platform-specific mitigation is possible, such as firewall rules that prevent access to the metadata service, it's best to store secrets in a dedicated platform such as <a href=\"https://www.vaultproject.io/\">Hashicorp Vault</a>.</p>\n<h3 id=\"advice-to-linux-distributions\">Advice to Linux distributions</h3>\n<p>Linux distributions that ship Ignition should ensure the new <code>ignition-delete-config.service</code> is installed and enabled by default.</p>\n<p>In addition, we recommend shipping a service similar to <code>ignition-delete-config.service</code> that runs when existing machines are upgraded, similar to the one in <a href=\"https://github.com/coreos/fedora-coreos-config/pull/1738\">https://github.com/coreos/fedora-coreos-config/pull/1738</a>. Consider giving your users advance notice of this change, and providing instructions for masking <code>ignition-delete-config.service</code> on existing nodes if users have tooling that requires the Ignition config to remain accessible in VM metadata.</p>\n<h3 id=\"references\">References</h3>\n<p>For more information, see #1300 and #1350.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, <a href=\"https://github.com/coreos/ignition/issues/new/choose\">open an issue in Ignition</a> or email the CoreOS <a href=\"https://lists.fedoraproject.org/archives/list/coreos@lists.fedoraproject.org/\">development mailing list</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coreos/ignition/security/advisories/GHSA-hj57-j5cw-2mwp\">https://github.com/coreos/ignition/security/advisories/GHSA-hj57-j5cw-2mwp</a></li>\n<li><a href=\"https://github.com/coreos/ignition/issues/1300\">https://github.com/coreos/ignition/issues/1300</a></li>\n<li><a href=\"https://github.com/coreos/ignition/pull/1350\">https://github.com/coreos/ignition/pull/1350</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hj57-j5cw-2mwp\">https://github.com/advisories/GHSA-hj57-j5cw-2mwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hj57-j5cw-2mwp",
            "title": "[github.com/coreos/ignition] Ignition config accessible to unprivileged software on VMware",
            "date_modified": "2022-05-25T19:37:39.000Z",
            "date_published": "2022-05-25T19:37:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hj57-j5cw-2mwp"
            }
        },
        {
            "content_html": "<p>A vulnerability was found in Ignition where ignition configs are accessible from unprivileged containers in VMs running on VMware products. This issue is only relevant in user environments where the Ignition config contains secrets. The highest threat from this vulnerability is to data confidentiality. Possible workaround is to not put secrets in the Ignition config.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1706\">https://nvd.nist.gov/vuln/detail/CVE-2022-1706</a></li>\n<li><a href=\"https://github.com/coreos/ignition/issues/1300\">https://github.com/coreos/ignition/issues/1300</a></li>\n<li><a href=\"https://github.com/coreos/ignition/issues/1315\">https://github.com/coreos/ignition/issues/1315</a></li>\n<li><a href=\"https://github.com/coreos/ignition/pull/1350\">https://github.com/coreos/ignition/pull/1350</a></li>\n<li><a href=\"https://github.com/coreos/ignition/commit/4b70b44b430ecf8377a276e89b5acd3a6957d4ea\">https://github.com/coreos/ignition/commit/4b70b44b430ecf8377a276e89b5acd3a6957d4ea</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2082274\">https://bugzilla.redhat.com/show_bug.cgi?id=2082274</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LY7LKGMQMXV6DGD263YQHNSLOJJ5VLV5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LY7LKGMQMXV6DGD263YQHNSLOJJ5VLV5/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NP765L7TJI7CD4XVOHUWZVRYRH3FYBOR/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NP765L7TJI7CD4XVOHUWZVRYRH3FYBOR/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T5QQXRGQKTN4YX2ZF3GQNEBDEOKJGCN3/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T5QQXRGQKTN4YX2ZF3GQNEBDEOKJGCN3/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mjqc-5c9x-xfcc\">https://github.com/advisories/GHSA-mjqc-5c9x-xfcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mjqc-5c9x-xfcc",
            "title": "[github.com/coreos/ignition/v2] Configuration exposure in github.com/coreos/ignition",
            "date_modified": "2022-05-31T23:27:26.000Z",
            "date_published": "2022-05-18T00:00:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mjqc-5c9x-xfcc"
            }
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise from 1.10.0 to 1.10.2 did not correctly configure and enforce MFA on login after server restarts. This affects the Login MFA feature introduced in Vault and Vault Enterprise 1.10.0 and does not affect the separate Enterprise MFA feature set. Fixed in 1.10.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30689\">https://nvd.nist.gov/vuln/detail/CVE-2022-30689</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/commit/15baea5fa3e71c837c33b8bcbd8f06e0fbbc110d\">https://github.com/hashicorp/vault/commit/15baea5fa3e71c837c33b8bcbd8f06e0fbbc110d</a></li>\n<li><a href=\"https://discuss.hashicorp.com\">https://discuss.hashicorp.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c5wc-v287-82pc\">https://github.com/advisories/GHSA-c5wc-v287-82pc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c5wc-v287-82pc",
            "title": "[github.com/hashicorp/vault] Improper configuration of multi factor authentication in hashicorp vault",
            "date_modified": "2022-05-31T23:27:11.000Z",
            "date_published": "2022-05-18T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c5wc-v287-82pc"
            }
        },
        {
            "content_html": "<p>A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use the spec.rules[].http.paths[].path field of an Ingress object (in the networking.k8s.io or extensions API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25745\">https://nvd.nist.gov/vuln/detail/CVE-2021-25745</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/issues/8502\">https://github.com/kubernetes/ingress-nginx/issues/8502</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/7vQrpDZeBlc\">https://groups.google.com/g/kubernetes-security-announce/c/7vQrpDZeBlc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvmg-xgmx-9mxh\">https://github.com/advisories/GHSA-pvmg-xgmx-9mxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvmg-xgmx-9mxh",
            "title": "[k8s.io/ingress-nginx] Improper Input Validation in k8s.io/ingress-nginx",
            "date_modified": "2022-05-25T19:29:52.000Z",
            "date_published": "2022-05-07T00:00:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvmg-xgmx-9mxh"
            }
        }
    ]
}