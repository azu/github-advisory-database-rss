{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank <a href=\"https://github.com/DavidKorczynski\">David Korczynski</a> and <a href=\"https://github.com/AdamKorcz\">Adam Korczynski</a> of ADA Logics for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a> during a security fuzzing audit sponsored by CNCF.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2\">https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25153\">https://nvd.nist.gov/vuln/detail/CVE-2023-25153</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4\">https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259w-8hf6-59c2\">https://github.com/advisories/GHSA-259w-8hf6-59c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2",
            "title": "[github.com/containerd/containerd] OCI image importer memory exhaustion in github.com/containerd/containerd",
            "date_modified": "2023-02-16T17:38:31.000Z",
            "date_published": "2023-02-16T14:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank <a href=\"https://github.com/DavidKorczynski\">David Korczynski</a> and <a href=\"https://github.com/AdamKorcz\">Adam Korczynski</a> of ADA Logics for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a> during a security fuzzing audit sponsored by CNCF.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2\">https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25153\">https://nvd.nist.gov/vuln/detail/CVE-2023-25153</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4\">https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259w-8hf6-59c2\">https://github.com/advisories/GHSA-259w-8hf6-59c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2",
            "title": "[github.com/containerd/containerd] OCI image importer memory exhaustion in github.com/containerd/containerd",
            "date_modified": "2023-02-16T17:38:31.000Z",
            "date_published": "2023-02-16T14:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>\n<p>Downstream applications that use the containerd client library may be affected as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that the <code>\"USER $USERNAME\"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>\n<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>\n<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>\n<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>\n</ul>\n<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25173\">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a\">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wjj-jwc9-2x96\">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjm8-m7m6-2fjp\">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p",
            "title": "[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd",
            "date_modified": "2023-02-16T17:38:24.000Z",
            "date_published": "2023-02-16T14:11:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>\n<p>Downstream applications that use the containerd client library may be affected as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that the <code>\"USER $USERNAME\"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>\n<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>\n<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>\n<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>\n</ul>\n<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25173\">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a\">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wjj-jwc9-2x96\">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjm8-m7m6-2fjp\">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p",
            "title": "[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd",
            "date_modified": "2023-02-16T17:38:24.000Z",
            "date_published": "2023-02-16T14:11:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>go-jose before 1.0.4 suffers from an invalid curve attack for the ECDH-ES algorithm. When deriving a shared key using ECDH-ES for an encrypted message, go-jose neglected to check that the received public key on a message is on the same curve as the static private key of the receiver, thus making it vulnerable to an invalid curve attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9121\">https://nvd.nist.gov/vuln/detail/CVE-2016-9121</a></li>\n<li><a href=\"https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507\">https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507</a></li>\n<li><a href=\"https://hackerone.com/reports/164590\">https://hackerone.com/reports/164590</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2016/11/03/1\">https://www.openwall.com/lists/oss-security/2016/11/03/1</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0010\">https://pkg.go.dev/vuln/GO-2020-0010</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86r9-39j9-99wp\">https://github.com/advisories/GHSA-86r9-39j9-99wp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86r9-39j9-99wp",
            "title": "[github.com/square/go-jose] Elliptic Curve Key Disclosure in go-jose",
            "date_modified": "2023-02-16T02:04:17.000Z",
            "date_published": "2021-06-23T17:17:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86r9-39j9-99wp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The following vulnerabilities have been disclosed, which impact users leveraging the SAML connector:</p>\n<p>Signature Validation Bypass (CVE-2020-15216): <a href=\"https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7\">https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7</a></p>\n<p><code>encoding/xml</code> instabilities:</p>\n<ul>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md\">Element namespace prefix instability (CVE-2020-29511)</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md\">Attribute namespace prefix instability (CVE-2020-29509)</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md\">Directive comment instability (CVE-2020-29510)</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Immediately update to <a href=\"https://github.com/dexidp/dex/releases/tag/v2.27.0\">Dex v2.27.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5\">https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5</a></li>\n<li><a href=\"https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7\">https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26290\">https://nvd.nist.gov/vuln/detail/CVE-2020-26290</a></li>\n<li><a href=\"https://github.com/dexidp/dex/commit/324b1c886b407594196113a3dbddebe38eecd4e8\">https://github.com/dexidp/dex/commit/324b1c886b407594196113a3dbddebe38eecd4e8</a></li>\n<li><a href=\"https://github.com/dexidp/dex/releases/tag/v2.27.0\">https://github.com/dexidp/dex/releases/tag/v2.27.0</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md</a></li>\n<li><a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/</a></li>\n<li><a href=\"https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64\">https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0050\">https://pkg.go.dev/vuln/GO-2020-0050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9hp-7r99-94h5\">https://github.com/advisories/GHSA-m9hp-7r99-94h5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9hp-7r99-94h5",
            "title": "[github.com/russellhaering/goxmldsig] Critical security issues in XML encoding in github.com/dexidp/dex",
            "date_modified": "2023-02-16T00:31:29.000Z",
            "date_published": "2021-12-20T17:53:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9hp-7r99-94h5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The CPIO extraction functionality doesn't sanitize the paths of the archived files for leading and non-leading \"..\" which leads in file extraction outside of the current directory. Note, the fixing commit was applied to all affected versions which were re-released.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7667\">https://nvd.nist.gov/vuln/detail/CVE-2020-7667</a></li>\n<li><a href=\"https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0\">https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0042\">https://pkg.go.dev/vuln/GO-2020-0042</a></li>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9423-6c93-gpp8\">https://github.com/advisories/GHSA-9423-6c93-gpp8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9423-6c93-gpp8",
            "title": "[github.com/sassoftware/go-rpmutils] Arbitrary File Write via Archive Extraction (Zip Slip)",
            "date_modified": "2023-02-16T00:23:04.000Z",
            "date_published": "2021-06-23T17:13:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9423-6c93-gpp8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading \"..\". This allows an attacker to add or replace files system-wide.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7664\">https://nvd.nist.gov/vuln/detail/CVE-2020-7664</a></li>\n<li><a href=\"https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11\">https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0228\">https://pkg.go.dev/vuln/GO-2021-0228</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpx7-vm66-qx8r\">https://github.com/advisories/GHSA-vpx7-vm66-qx8r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpx7-vm66-qx8r",
            "title": "[github.com/unknwon/cae] Path Traversal in github.com/unknwon/cae/zip",
            "date_modified": "2023-02-16T00:19:23.000Z",
            "date_published": "2021-05-18T20:31:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpx7-vm66-qx8r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>\"The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading \"..\". This allows an attacker to add or replace files system-wide.\"</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7668\">https://nvd.nist.gov/vuln/detail/CVE-2020-7668</a></li>\n<li><a href=\"https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11\">https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0041\">https://pkg.go.dev/vuln/GO-2020-0041</a></li>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-88jf-7rch-32qc\">https://github.com/advisories/GHSA-88jf-7rch-32qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-88jf-7rch-32qc",
            "title": "[github.com/unknwon/cae] Path Traversal in github.com/unknwon/cae/tz",
            "date_modified": "2023-02-16T00:17:17.000Z",
            "date_published": "2021-05-18T20:31:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-88jf-7rch-32qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>golang.org/x/crypto before v0.0.0-20200220183623-bac4c82f6975 for Go allows a panic during signature verification in the golang.org/x/crypto/ssh package. A client can attack an SSH server that accepts public keys. Also, a server can attack any SSH client.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-9283\">https://nvd.nist.gov/vuln/detail/CVE-2020-9283</a></li>\n<li><a href=\"https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236\">https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY\">https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html\">https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/11/msg00027.html\">https://lists.debian.org/debian-lts-announce/2020/11/msg00027.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/11/msg00031.html\">https://lists.debian.org/debian-lts-announce/2020/11/msg00031.html</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/48121\">https://www.exploit-db.com/exploits/48121</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/156480/Go-SSH-0.0.2-Denial-Of-Service.html\">http://packetstormsecurity.com/files/156480/Go-SSH-0.0.2-Denial-Of-Service.html</a></li>\n<li><a href=\"https://go.dev/cl/220357\">https://go.dev/cl/220357</a></li>\n<li><a href=\"https://go.googlesource.com/crypto/+/bac4c82f69751a6dd76e702d54b3ceb88adab236\">https://go.googlesource.com/crypto/+/bac4c82f69751a6dd76e702d54b3ceb88adab236</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/3L45YRc91SY\">https://groups.google.com/g/golang-announce/c/3L45YRc91SY</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0012\">https://pkg.go.dev/vuln/GO-2020-0012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffhg-7mh4-33c4\">https://github.com/advisories/GHSA-ffhg-7mh4-33c4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffhg-7mh4-33c4",
            "title": "[golang.org/x/crypto] Improper Verification of Cryptographic Signature in golang.org/x/crypto",
            "date_modified": "2023-02-16T00:14:19.000Z",
            "date_published": "2021-05-18T15:29:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffhg-7mh4-33c4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>Tendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, <a href=\"https://github.com/tendermint/tendermint/pull/5219\">we added a new <code>Timestamp</code> field to <code>Evidence</code> structs</a>. This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) </p>\n<p>In Tendermint Core v0.34.0-v0.34.2, the <code>consensus</code> reactor is responsible for forming <code>DuplicateVoteEvidence</code> whenever double signs are observed. However, the current block is still “in flight” when it is being formed by the <code>consensus</code> reactor. It hasn’t been finalized through network consensus yet. This means that different nodes in the network may observe different “last commits” when assigning a timestamp to <code>DuplicateVoteEvidence.</code></p>\n<p>In turn, different nodes could form <code>DuplicateVoteEvidence</code> objects at the same height but with different timestamps. One <code>DuplicateVoteEvidence</code> object (with one timestamp) will then eventually get finalized in the block, but this means that any <code>DuplicateVoteEvidence</code> with a different timestamp is considered invalid. Any node that formed invalid <code>DuplicateVoteEvidence</code> will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. </p>\n<p>Tendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, <code>DuplicateVoteEvidence</code> is no longer formed by the <code>consensus</code> reactor; rather, the <code>consensus</code> reactor passes the <code>Vote</code>s themselves into the <code>EvidencePool</code>, which is now responsible for forming <code>DuplicateVoteEvidence</code>. The <code>EvidencePool</code> has timestamp info that should be consistent across the network, which means that <code>DuplicateVoteEvidence</code> formed in this reactor should have consistent timestamps. </p>\n<p>This release changes the API between the <code>consensus</code> and <code>evidence</code> reactors. </p>\n<h3 id=\"impact\">Impact</h3>\n<p>This is a denial-of-service vector which impacts networks running Tendermint Core v0.34.0 - v0.34.2.</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>This problem has been patched in Tendermint Core v0.34.3. Networks running impacted versions of Tendermint Core should update immediately.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds, other than upgrading to a patched version of Tendermint Core.</p>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Crypto.com (@cyril-crypto, @brianatcrypto, @tomtau and  @yihuang) for finding and submitting this vulnerability</li>\n<li>@melekes and @cmwaters for identifying the root cause and patching the problem</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/tendermint/tendermint\">tendermint/tendermint</a></li>\n<li>Email us at <a href=\"mailto:security@tendermint.com\">security@tendermint.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tendermint/tendermint/security/advisories/GHSA-p658-8693-mhvg\">https://github.com/tendermint/tendermint/security/advisories/GHSA-p658-8693-mhvg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21271\">https://nvd.nist.gov/vuln/detail/CVE-2021-21271</a></li>\n<li><a href=\"https://github.com/tendermint/tendermint/commit/a2a6852ab99e4a0f9e79f0ea8c1726e262e25c76\">https://github.com/tendermint/tendermint/commit/a2a6852ab99e4a0f9e79f0ea8c1726e262e25c76</a></li>\n<li><a href=\"https://github.com/tendermint/tendermint/blob/v0.34.3/CHANGELOG.md#v0.34.3\">https://github.com/tendermint/tendermint/blob/v0.34.3/CHANGELOG.md#v0.34.3</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1052\">https://pkg.go.dev/vuln/GO-2022-1052</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p658-8693-mhvg\">https://github.com/advisories/GHSA-p658-8693-mhvg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p658-8693-mhvg",
            "title": "[github.com/tendermint/tendermint] Tendermint Core vulnerable to Uncontrolled Resource Consumption",
            "date_modified": "2023-02-15T19:32:30.000Z",
            "date_published": "2022-10-07T07:23:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p658-8693-mhvg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have <code>applications, create</code> or <code>applications, update</code> RBAC access to reach the code which may produce the error.</p>\n<p>The user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. </p>\n<p>If the user has <code>repositories, update</code> access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD version:</p>\n<ul>\n<li>v2.6.1</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only way to completely resolve the issue is to upgrade.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<p>To mitigate the issue, make sure that your repo credentials have only least necessary privileges. For example, the credentials should not have push access, and they should not have access to more resources than what Argo CD actually needs (for example, a whole GitHub org when only one repo is needed).</p>\n<p>To further mitigate the impact of a leaked write-capable repo credential, you could <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/gpg-verification/#enforcing-signature-verification\">enable commit signature verification</a>. Even if someone could push a malicious commit, the commit would not by synced.</p>\n<p>You should also enforce least privileges in Argo CD RBAC. Make sure users only have <code>repositories, update</code>, <code>applications, update</code>, or <code>applications, create</code> access if they absolutely need it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>The problem was initially reported in a <a href=\"https://github.com/argoproj/argo-cd/issues/12309\">GitHub issue</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">Argo CD RBAC configuration documentation</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-mv6w-j4xc-qpfw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-mv6w-j4xc-qpfw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25163\">https://nvd.nist.gov/vuln/detail/CVE-2023-25163</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/issues/12309\">https://github.com/argoproj/argo-cd/issues/12309</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/pull/12320\">https://github.com/argoproj/argo-cd/pull/12320</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1548\">https://pkg.go.dev/vuln/GO-2023-1548</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv6w-j4xc-qpfw\">https://github.com/advisories/GHSA-mv6w-j4xc-qpfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv6w-j4xc-qpfw",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD leaks repository credentials in user-facing error messages and in logs",
            "date_modified": "2023-02-15T18:36:49.000Z",
            "date_published": "2023-02-08T22:37:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv6w-j4xc-qpfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package github.com/usememos/memos/server are vulnerable to Cross-site Scripting (XSS) due to insufficient checks on external resources, which allows malicious actors to introduce links starting with a javascript: scheme.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25978\">https://nvd.nist.gov/vuln/detail/CVE-2022-25978</a></li>\n<li><a href=\"https://github.com/usememos/memos/issues/1026\">https://github.com/usememos/memos/issues/1026</a></li>\n<li><a href=\"https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8\">https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1566\">https://pkg.go.dev/vuln/GO-2023-1566</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9w8x-5hv5-r6gw\">https://github.com/advisories/GHSA-9w8x-5hv5-r6gw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9w8x-5hv5-r6gw",
            "title": "[github.com/usememos/memos] Cross Site Scripting in usememos/memos",
            "date_modified": "2023-02-16T00:34:40.000Z",
            "date_published": "2023-02-15T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9w8x-5hv5-r6gw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Caddy v2.4.6 was discovered to contain an open redirection vulnerability which allows attackers to redirect users to phishing websites via crafted URLs</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28923\">https://nvd.nist.gov/vuln/detail/CVE-2022-28923</a></li>\n<li><a href=\"https://lednerb.de/en/publications/responsible-disclosure/caddy-open-redirect-vulnerability/\">https://lednerb.de/en/publications/responsible-disclosure/caddy-open-redirect-vulnerability/</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/commit/78b5356f2b1945a90de1ef7f2c7669d82098edbd\">https://github.com/caddyserver/caddy/commit/78b5356f2b1945a90de1ef7f2c7669d82098edbd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpm3-vr34-h8w8\">https://github.com/advisories/GHSA-qpm3-vr34-h8w8</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1567\">https://pkg.go.dev/vuln/GO-2023-1567</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpm3-vr34-h8w8",
            "title": "[github.com/caddyserver/caddy/v2] Open Redirect in Caddy",
            "date_modified": "2023-02-16T21:55:15.000Z",
            "date_published": "2023-02-07T00:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpm3-vr34-h8w8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>dhowden tag before 0.0.0-20201120070457-d52dcb253c63 allows <code>panic: runtime error: slice bounds out of range</code> via <code>readTextWithDescrFrame</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-29244\">https://nvd.nist.gov/vuln/detail/CVE-2020-29244</a></li>\n<li><a href=\"https://github.com/dhowden/tag/issues/79\">https://github.com/dhowden/tag/issues/79</a></li>\n<li><a href=\"https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e\">https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e</a></li>\n<li><a href=\"https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d\">https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d</a></li>\n<li><a href=\"https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e\">https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e</a></li>\n<li><a href=\"https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96\">https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0097\">https://pkg.go.dev/vuln/GO-2021-0097</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-27mh-3343-6hg5\">https://github.com/advisories/GHSA-27mh-3343-6hg5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-27mh-3343-6hg5",
            "title": "[github.com/dhowden/tag] dhowden tag Improper Validation of Array Index vulnerability",
            "date_modified": "2023-02-15T05:06:29.000Z",
            "date_published": "2022-05-24T17:37:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-27mh-3343-6hg5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A DTLS Client could provide a Certificate that it doesn't posses the private key for and Pion DTLS wouldn't reject it. </p>\n<p>This issue affects users that are using Client certificates only. The connection itself is still secure. The Certificate provided by clients can't be trusted when using a Pion DTLS server prior to v2.1.5</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to Pion DTLS v2.1.5</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds available, upgrade to Pion DTLS v2.1.5</p>\n<h3 id=\"references\">References</h3>\n<p>Thank you to <a href=\"https://github.com/jupenur\">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/pion/dtls\">Pion DTLS</a></li>\n<li>Email us at <a href=\"mailto:team@pion.ly\">team@pion.ly</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh\">https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29222\">https://nvd.nist.gov/vuln/detail/CVE-2022-29222</a></li>\n<li><a href=\"https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412\">https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412</a></li>\n<li><a href=\"https://github.com/pion/dtls/releases/tag/v2.1.5\">https://github.com/pion/dtls/releases/tag/v2.1.5</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0462\">https://pkg.go.dev/vuln/GO-2022-0462</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w45j-f832-hxvh\">https://github.com/advisories/GHSA-w45j-f832-hxvh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w45j-f832-hxvh",
            "title": "[github.com/pion/dtls/v2] Client Certificates are accepted without CertificateVerify",
            "date_modified": "2023-02-15T01:44:14.000Z",
            "date_published": "2022-05-25T19:26:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w45j-f832-hxvh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}