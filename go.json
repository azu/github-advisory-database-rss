{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"xcrisis-does-not-cause-chain-halt\">x/crisis does NOT cause chain halt</h1>\n<h3 id=\"impact\">Impact</h3>\n<p>If an invariant check fails on a Cosmos SDK network and a transaction is sent to the <code>x/crisis</code> module to halt the chain, the chain does not halt. All versions of the <code>x/crisis</code> module is affected on all versions of the Cosmos SDK.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>x/crisis</code> module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a <code>MsgVerifyInvariant</code> with the name of the invariant. Processing this message is supposed to cause the nodes to panic. However, because the panic is within a transaction, it is caught by the SDK’s built-in panic-recovery machinery and just treated as a normal “invalid” transaction (ie. it returns a non-zero abci Code). Thus the <code>x/crisis</code> transactions don’t actually cause chains to halt. If there is an invariant violation, it can be confirmed with an <code>x/crisis</code> transaction, but it won’t cause any nodes to halt, they will just continue processing blocks.</p>\n<p>That said, any node running with <code>start --inv-check-period X</code> will actually panic when it runs the periodic check (though it will still not panic just by processing an <code>x/crisis</code> transaction). Since this panic is located in EndBlock, it is not caught by the panic-recovery machinery and does actually crash the node. Presumably few if any nodes actually run with this in production because of how long the invariant checks take, and this runs all of them every <code>X</code> blocks.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>No patches will be released.</p>\n<p>The <code>x/crisis</code> module was originally intended to allow chains to halt rather than continue with some unknown behaviour in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential <a href=\"https://github.com/osmosis-labs/osmosis/issues/570\">cost of halting increases</a>, chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks, but may not be worth halting for.</p>\n<p>In some cases, chains have already broken the invariant calculations but have dealt with the consequences off-chain or during development. Halting these chains would be counter-productive.</p>\n<p>The SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.</p>\n<p>Hence, the decision was made that the <code>x/crisis</code> module will not be patched for chain halts. The module will be deprecated when new modules take over its responsibilities.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In case of a valid invariant check failure that requires a chain halt, the network validators are encouraged to coordinate off-chain for network halts. This has been an already established process for security patches.</p>\n<h3 id=\"references\">References</h3>\n<p>SDK developer epic about invariant checking: <a href=\"https://github.com/cosmos/cosmos-sdk/issues/15706\">https://github.com/cosmos/cosmos-sdk/issues/15706</a>\nPublic report: <a href=\"https://github.com/cosmos/cosmos-sdk/issues/15325\">https://github.com/cosmos/cosmos-sdk/issues/15325</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/issues/15325\">https://github.com/cosmos/cosmos-sdk/issues/15325</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/issues/15706\">https://github.com/cosmos/cosmos-sdk/issues/15706</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qfc5-6r3j-jj22\">https://github.com/advisories/GHSA-qfc5-6r3j-jj22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
            "title": "[github.com/cosmos/cosmos-sdk] Go package github.com/cosmos/cosmos-sdk module x/crisis does NOT cause chain halt",
            "date_modified": "2023-06-02T17:11:59.000Z",
            "date_published": "2023-06-02T17:11:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qfc5-6r3j-jj22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat\";x=.txt\" will be sent as a file named \"setup.bat\".</p>\n<p>If the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gin-gonic/gin/issues/3555\">https://github.com/gin-gonic/gin/issues/3555</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/pull/3556\">https://github.com/gin-gonic/gin/pull/3556</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1737\">https://pkg.go.dev/vuln/GO-2023-1737</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/releases/tag/v1.9.1\">https://github.com/gin-gonic/gin/releases/tag/v1.9.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c4m-59x9-fr2g\">https://github.com/advisories/GHSA-2c4m-59x9-fr2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c4m-59x9-fr2g",
            "title": "[github.com/gin-gonic/gin] Gin Web Framework does not properly sanitize filename parameter of Context.FileAttachment function",
            "date_modified": "2023-06-01T19:48:53.000Z",
            "date_published": "2023-05-12T20:19:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c4m-59x9-fr2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<blockquote>\n<p><strong>Note</strong></p>\n<p>The official templates of Lima, and the well-known third party products (Colima, Rancher Desktop, and Finch) are <em>unlikely</em> to be affected by this issue.</p>\n</blockquote>\n<h3 id=\"impact\">Impact</h3>\n<p>A virtual machine instance with a malicious disk image could read a single file on the host filesystem, even when no filesystem is mounted from the host.</p>\n<p>To exploit this issue, the attacker has to embed the target file path (an absolute or a relative path from the instance directory) in a malicious disk image, as the <a href=\"https://gitlab.com/qemu-project/qemu/-/blob/v8.0.0/docs/interop/qcow2.txt#L23-L34\">qcow2 (or vmdk) backing file path string</a>.\nAs Lima refuses to run as the root, it is practically impossible for the attacker to read the entire host disk via <code>/dev/rdiskN</code>.\nAlso, practically, the attacker cannot read at least the first 512 bytes (MBR) of the target file.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in Lima v0.16.0, by prohibiting using a backing file path in the VM base image.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not use an untrusted disk image.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lima-vm/lima/security/advisories/GHSA-f7qw-jj9c-rpq9\">https://github.com/lima-vm/lima/security/advisories/GHSA-f7qw-jj9c-rpq9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32684\">https://nvd.nist.gov/vuln/detail/CVE-2023-32684</a></li>\n<li><a href=\"https://github.com/lima-vm/lima/commit/01dbd4d9cabe692afa4517be3995771f0ebb38a5\">https://github.com/lima-vm/lima/commit/01dbd4d9cabe692afa4517be3995771f0ebb38a5</a></li>\n<li><a href=\"https://github.com/lima-vm/lima/releases/tag/v0.16.0\">https://github.com/lima-vm/lima/releases/tag/v0.16.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f7qw-jj9c-rpq9\">https://github.com/advisories/GHSA-f7qw-jj9c-rpq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f7qw-jj9c-rpq9",
            "title": "[github.com/lima-vm/lima] In Lima, a malicious disk image could read a single file on the host filesystem as a qcow2/vmdk backing file",
            "date_modified": "2023-05-31T23:38:28.000Z",
            "date_published": "2023-05-31T23:38:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f7qw-jj9c-rpq9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Abstrium Pydio Cells 4.2.0. It has been rated as problematic. Affected by this issue is some unknown functionality of the component Change Subscription Handler. The manipulation leads to authorization bypass. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component. VDB-230210 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2978\">https://nvd.nist.gov/vuln/detail/CVE-2023-2978</a></li>\n<li><a href=\"https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421\">https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.230210\">https://vuldb.com/?ctiid.230210</a></li>\n<li><a href=\"https://vuldb.com/?id.230210\">https://vuldb.com/?id.230210</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv7x-27pc-8c96\">https://github.com/advisories/GHSA-mv7x-27pc-8c96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv7x-27pc-8c96",
            "title": "[github.com/pydio/cells] Go package pydio/cells vulnerable to authorization bypass",
            "date_modified": "2023-05-31T18:26:18.000Z",
            "date_published": "2023-05-30T15:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv7x-27pc-8c96"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, has been found in Abstrium Pydio Cells 4.2.0. This issue affects some unknown processing of the component Chat. The manipulation leads to basic cross site scripting. The attack may be initiated remotely. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component. The identifier VDB-230213 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2981\">https://nvd.nist.gov/vuln/detail/CVE-2023-2981</a></li>\n<li><a href=\"https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421\">https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.230213\">https://vuldb.com/?ctiid.230213</a></li>\n<li><a href=\"https://vuldb.com/?id.230213\">https://vuldb.com/?id.230213</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wmfc-g86p-fjvr\">https://github.com/advisories/GHSA-wmfc-g86p-fjvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wmfc-g86p-fjvr",
            "title": "[github.com/pydio/cells] go package pydio cells vulnerable to cross-site scripting ",
            "date_modified": "2023-05-31T18:26:13.000Z",
            "date_published": "2023-05-30T15:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wmfc-g86p-fjvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Insecure 3DES ciphers are used which may lead to exploitation of the <a href=\"https://sweet32.info/\">Sweet32 vulnerability</a>. Specifically, the ciphers TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (secp256r1) and TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) are allowed. See CVE-2016-2183. This is fixed in Kyverno v1.9.5 and v1.10.0 and no known users have been affected.</p>\n<h3 id=\"details\">Details</h3>\n<p>The ciphers in affected versions can be read using the following command which uses <code>nmap</code>:</p>\n<pre><code class=\"language-sh\">$ kubectl exec -it mypod -n kyverno sh \nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n**nmap -sV --script ssl-enum-ciphers -p 443 kyverno-cleanup-controller** or  \n**nmap -sV --script ssl-enum-ciphers -p 443 kyverno-svc**\nStarting Nmap 7.92 ( https://nmap.org ) at 2023-05-26 10:55 UTC\nNmap scan report for kyverno-cleanup-controller (10.103.199.233)\nHost is up (0.000058s latency).\nrDNS record for 10.103.199.233: kyverno-cleanup-controller.kyverno.svc.cluster.local\n\nPORT    STATE SERVICE  VERSION\n443/tcp open  ssl/http Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n| ssl-enum-ciphers: \n|   TLSv1.2: \n|     ciphers: \n**|       TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (secp256r1) - C**\n|       TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (secp256r1) - A\n**|       TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) - C**\n|       TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A\n|       TLS_RSA_WITH_AES_128_GCM_SHA256 (rsa 2048) - A\n|       TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A\n|       TLS_RSA_WITH_AES_256_GCM_SHA384 (rsa 2048) - A\n|     compressors: \n|       NULL\n|     cipher preference: client\n|     warnings: \n|       64-bit block cipher 3DES vulnerable to SWEET32 attack\n|   TLSv1.3: \n|     ciphers: \n|       TLS_AKE_WITH_AES_128_GCM_SHA256 (ecdh_x25519) - A\n|       TLS_AKE_WITH_AES_256_GCM_SHA384 (ecdh_x25519) - A\n|       TLS_AKE_WITH_CHACHA20_POLY1305_SHA256 (ecdh_x25519) - A\n|     cipher preference: server\n|_  least strength: C\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 12.72 seconds\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-hgv6-w7r3-w4qw\">https://github.com/kyverno/kyverno/security/advisories/GHSA-hgv6-w7r3-w4qw</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/7308\">https://github.com/kyverno/kyverno/pull/7308</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/releases/tag/v1.9.5\">https://github.com/kyverno/kyverno/releases/tag/v1.9.5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hgv6-w7r3-w4qw\">https://github.com/advisories/GHSA-hgv6-w7r3-w4qw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hgv6-w7r3-w4qw",
            "title": "[github.com/kyverno/kyverno] Kyverno vulnerable due to usage of insecure cipher",
            "date_modified": "2023-05-30T20:07:07.000Z",
            "date_published": "2023-05-30T20:07:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hgv6-w7r3-w4qw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>With specially crafted requests, incorrect authorization decisions may be made by Pomerium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We are releasing patch fixes to address this vulnerability going back to <code>v0.17.X</code>. Please upgrade to:</p>\n<ul>\n<li>v0.22.2</li>\n<li>v0.21.4</li>\n<li>v0.20.1</li>\n<li>v0.19.2</li>\n<li>v0.18.1</li>\n<li>v0.17.4</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a></li>\n<li>Email us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb\">https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33189\">https://nvd.nist.gov/vuln/detail/CVE-2023-33189</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.17.4\">https://github.com/pomerium/pomerium/releases/tag/v0.17.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.18.1\">https://github.com/pomerium/pomerium/releases/tag/v0.18.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.19.2\">https://github.com/pomerium/pomerium/releases/tag/v0.19.2</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.20.1\">https://github.com/pomerium/pomerium/releases/tag/v0.20.1</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.21.4\">https://github.com/pomerium/pomerium/releases/tag/v0.21.4</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.22.2\">https://github.com/pomerium/pomerium/releases/tag/v0.22.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrc-wvj2-f59p\">https://github.com/advisories/GHSA-pvrc-wvj2-f59p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p",
            "title": "[github.com/pomerium/pomerium] Pomerium vulnerable to Incorrect Authorization with specially crafted requests",
            "date_modified": "2023-05-30T06:40:53.000Z",
            "date_published": "2023-05-26T22:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrc-wvj2-f59p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malformed proposed entry of the <code>intoto/v0.0.2</code> type can cause a panic on a thread within the Rekor process. The thread is recovered so the client receives a 500 error message and service still continues, so the availability impact of this is minimal.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in v1.2.0 of Rekor.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<p>Discovered by OSS-Fuzz</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr\">https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr</a></li>\n<li><a href=\"https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4\">https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33199\">https://nvd.nist.gov/vuln/detail/CVE-2023-33199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-frqx-jfcm-6jjr\">https://github.com/advisories/GHSA-frqx-jfcm-6jjr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-frqx-jfcm-6jjr",
            "title": "[github.com/sigstore/rekor] malformed proposed intoto entries can cause a panic",
            "date_modified": "2023-05-30T06:48:04.000Z",
            "date_published": "2023-05-26T19:39:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-frqx-jfcm-6jjr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in secrets-store-csi-driver where an actor with access to the driver logs could observe service account tokens.  These tokens could then potentially be exchanged with external cloud providers to access secrets stored in cloud vault solutions.  Tokens are only logged when <a href=\"https://kubernetes-csi.github.io/docs/token-requests.html\">TokenRequests is configured in the CSIDriver object</a> and the driver is set to run at log level 2 or greater via the -v flag.</p>\n<p>This issue has been rated MEDIUM <a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N\">CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N</a> (6.5), and assigned CVE-2023-2878</p>\n<h3 id=\"am-i-vulnerable\">Am I vulnerable?</h3>\n<p>You may be vulnerable if <a href=\"https://kubernetes-csi.github.io/docs/token-requests.html\">TokenRequests is configured in the CSIDriver object</a> and the driver is set to run at log level 2 or greater via the -v flag.</p>\n<p>To check if token requests are configured, run the following command:</p>\n<pre><code class=\"language-bash\">kubectl get csidriver secrets-store.csi.k8s.io -o jsonpath=\"{.spec.tokenRequests}\"\n</code></pre>\n<p>To check if tokens are being logged, examine the secrets-store container log:</p>\n<pre><code class=\"language-bash\">kubectl logs -l app=secrets-store-csi-driver -c secrets-store -f | grep --line-buffered \"csi.storage.k8s.io/serviceAccount.tokens\"\n</code></pre>\n<h3 id=\"affected-versions\">Affected Versions</h3>\n<ul>\n<li>secrets-store-csi-driver &lt; 1.3.3</li>\n</ul>\n<h3 id=\"how-do-i-mitigate-this-vulnerability\">How do I mitigate this vulnerability?</h3>\n<p>Prior to upgrading, this vulnerability can be mitigated by running secrets-store-csi-driver at log level 0 or 1 via the -v flag.</p>\n<h3 id=\"fixed-versions\">Fixed Versions</h3>\n<ul>\n<li>secrets-store-csi-driver &gt;= 1.3.3</li>\n</ul>\n<p>To upgrade, refer to the documentation: <a href=\"https://secrets-store-csi-driver.sigs.k8s.io/getting-started/upgrades.html#upgrades\">https://secrets-store-csi-driver.sigs.k8s.io/getting-started/upgrades.html#upgrades</a></p>\n<h3 id=\"detection\">Detection</h3>\n<p>Examine cloud provider logs for unexpected token exchanges, as well as unexpected access to cloud vault secrets.</p>\n<p>If you find evidence that this vulnerability has been exploited, please contact <a href=\"https://groups.google.com/\">security@kubernetes.io</a></p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This vulnerability was reported by Tomer Shaiman @tshaiman from Microsoft.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes-sigs/secrets-store-csi-driver/security/advisories/GHSA-g82w-58jf-gcxx\">https://github.com/kubernetes-sigs/secrets-store-csi-driver/security/advisories/GHSA-g82w-58jf-gcxx</a></li>\n<li><a href=\"https://github.com/kubernetes-sigs/secrets-store-csi-driver/releases/tag/v1.3.3\">https://github.com/kubernetes-sigs/secrets-store-csi-driver/releases/tag/v1.3.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g82w-58jf-gcxx\">https://github.com/advisories/GHSA-g82w-58jf-gcxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g82w-58jf-gcxx",
            "title": "[sigs.k8s.io/secrets-store-csi-driver] secrets-store-csi-driver discloses service account tokens in logs",
            "date_modified": "2023-05-26T13:59:22.000Z",
            "date_published": "2023-05-26T13:59:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g82w-58jf-gcxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Unicode RIGHT-TO-LEFT OVERRIDE characters can be used to mask the original filename.</p>\n<h3 id=\"reported-by\">Reported-By</h3>\n<p>Thanks to the report from Mio Li <a href=\"mailto:wulilixi1@gmail.com\">wulilixi1@gmail.com</a></p>\n<h3 id=\"patches\">Patches</h3>\n<pre><code>commit 17e791afb90c9ad27c65f63c6be14f2f6a3a9d60\nAuthor: Daniel Valdivia &lt;18384552+dvaldivia@users.noreply.github.com&gt;\nDate:   Tue May 23 08:47:12 2023 -0700\n\n    Replace RIGHT-TO-LEFT OVERRIDE unicode (#2828)\n    \n    Signed-off-by: Daniel Valdivia &lt;18384552+dvaldivia@users.noreply.github.com&gt;\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Workarounds are to remove the concerned file and rewrite it properly with the right file and extensions.  Avoid using RTLO characters in your filenames.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/minio/console/security/advisories/GHSA-jv3f-7m33-qp65\">https://github.com/minio/console/security/advisories/GHSA-jv3f-7m33-qp65</a></li>\n<li><a href=\"https://github.com/minio/console/commit/17e791afb90c9ad27c65f63c6be14f2f6a3a9d60\">https://github.com/minio/console/commit/17e791afb90c9ad27c65f63c6be14f2f6a3a9d60</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33955\">https://nvd.nist.gov/vuln/detail/CVE-2023-33955</a></li>\n<li><a href=\"https://github.com/minio/console/releases/tag/v0.28.0\">https://github.com/minio/console/releases/tag/v0.28.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jv3f-7m33-qp65\">https://github.com/advisories/GHSA-jv3f-7m33-qp65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jv3f-7m33-qp65",
            "title": "[github.com/minio/console] Minio console object names with RIGHT-TO-LEFT OVERRIDE unicode character can be exploited",
            "date_modified": "2023-06-01T14:51:42.000Z",
            "date_published": "2023-05-26T13:57:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jv3f-7m33-qp65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of the podSecurity (<code>validate.podSecurity</code>) subrule in Kyverno versions v1.9.2 and v1.9.3 may be unable to enforce the check for the Seccomp control at the baseline level when using a <code>version</code> value of <code>latest</code>. There is no effect if a version number is referenced instead. See the <a href=\"https://kyverno.io/docs/writing-policies/validate/#pod-security\">documentation</a> for information on this subrule type. Users of Kyverno v1.9.2 and v1.9.3 are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v1.9.4\nv1.10.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around this issue without upgrading to v1.9.4, temporarily install individual policies for the respective Seccomp checks in baseline <a href=\"https://kyverno.io/policies/pod-security/baseline/restrict-seccomp/restrict-seccomp/\">here</a> and restricted <a href=\"https://kyverno.io/policies/pod-security/restricted/restrict-seccomp-strict/restrict-seccomp-strict/\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://kyverno.io/docs/writing-policies/validate/#pod-security\">https://kyverno.io/docs/writing-policies/validate/#pod-security</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/7263\">https://github.com/kyverno/kyverno/pull/7263</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-33hq-f2mf-jm3c\">https://github.com/kyverno/kyverno/security/advisories/GHSA-33hq-f2mf-jm3c</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/7263\">https://github.com/kyverno/kyverno/pull/7263</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/releases/tag/v1.9.4\">https://github.com/kyverno/kyverno/releases/tag/v1.9.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33191\">https://nvd.nist.gov/vuln/detail/CVE-2023-33191</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33hq-f2mf-jm3c\">https://github.com/advisories/GHSA-33hq-f2mf-jm3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33hq-f2mf-jm3c",
            "title": "[github.com/kyverno/kyverno] kyverno seccomp control can be circumvented",
            "date_modified": "2023-06-01T04:07:21.000Z",
            "date_published": "2023-05-25T16:58:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33hq-f2mf-jm3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use a newline character to bypass the sanitization of the <code>spec.rules[].http.paths[].path</code> field of an Ingress object (in the <code>networking.k8s.io</code> or <code>extensions</code> API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25748\">https://nvd.nist.gov/vuln/detail/CVE-2021-25748</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/issues/8686\">https://github.com/kubernetes/ingress-nginx/issues/8686</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/avaRYa9c7I8\">https://groups.google.com/g/kubernetes-security-announce/c/avaRYa9c7I8</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/pull/8623\">https://github.com/kubernetes/ingress-nginx/pull/8623</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1\">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-863x-868h-968x\">https://github.com/advisories/GHSA-863x-868h-968x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-863x-868h-968x",
            "title": "[k8s.io/ingress-nginx] Ingress-nginx `path` sanitization can be bypassed with newline character",
            "date_modified": "2023-05-24T21:55:35.000Z",
            "date_published": "2023-05-24T18:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-863x-868h-968x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. </p>\n<h3 id=\"details\">Details</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. When nfpm packaged the files (without extra config for enforcing its own permissions) files could go out with bad permissions (chmod 666 or 777).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Create a default nfpm structure. </p>\n<p>Within the test folder, create 3 files named <code>chmod-XXX.sh</code>. Each script has file \npermissions set corresponding with their file names (<code>chmod-777.sh</code> = <code>chmod 777</code>). Below each \nfile and permissions can be seen.</p>\n<pre><code class=\"language-console\">$ ls -lart test \ntotal 24\n-rwxrwxrwx   1 user  group   11 May 19 13:15 chmod-777.sh\n-rw-rw-rw-   1 user  group   11 May 19 13:16 chmod-666.sh\ndrwxr-xr-x   5 user  group  160 May 19 13:19 .\n-rw-rw-r--   1 user  group   11 May 19 13:19 chmod-664.sh\ndrwxr-xr-x  10 user  group  320 May 19 13:29 ..\n</code></pre>\n<p>Below is the snippet nfpm configuration file of the contents of the package. The test folder \nand files has no extra config for enforcing permissions. </p>\n<pre><code class=\"language-yaml\">contents:\n- src: foo-binary\n  dst: /usr/bin/bar\n- src: bar-config.conf\n  dst: /etc/foo-binary/bar-config.conf\n  type: config\n- src: test\n  dst: /etc/test/scripts\n</code></pre>\n<p>The next step is to create a deb package.</p>\n<pre><code class=\"language-console\">$ nfpm package -p deb # Create dep package\nusing deb packager...\ncreated package: foo_1.0.0_arm64.deb\n</code></pre>\n<p>When on a Ubuntu VM, install the foo package which was created</p>\n<pre><code class=\"language-console\">$ sudo dpkg -i foo_1.0.0_arm64.deb # Installing deb package within Ubuntu\nSelecting previously unselected package foo.\n(Reading database ... 67540 files and directories currently installed.)\nPreparing to unpack foo_1.0.0_arm64.deb ...\nUnpacking foo (1.0.0) ...\nSetting up foo (1.0.0) ...\n</code></pre>\n<p>Looking at <code>/etc/test/scripts</code> and viewing the permissions. Permissions are passed exactly the same as the source.</p>\n<pre><code class=\"language-console\">$ ls -lart /etc/test/scripts\ntotal 20\n-rwxrwxrwx 1 root root   11 May 22 12:15 chmod-777.sh\n-rw-rw-rw- 1 root root   11 May 22 12:16 chmod-666.sh\n-rw-rw-r-- 1 root root   11 May 22 12:19 chmod-664.sh\ndrwxr-xr-x 3 root root 4096 May 22 13:00 ..\ndrwxr-xr-x 2 root root 4096 May 22 13:00 .\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>To prevent world-writable files from making it into the packages, add the ability to override the default permissions of packaged files using a umask config option in the packaging spec file. This feature in nfpm would allow applying a global umask across any files being packaged, therefore, with the correct configuration, preventing world-writable files without needing to list permissions on each and every file in the package</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Vulnerability is <a href=\"https://cwe.mitre.org/data/definitions/276.html\">https://cwe.mitre.org/data/definitions/276.html</a>\n<a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N\">https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N</a></p>\n<p>Anyone using nfpm for creating packages and not checking/setting file permissions before packaging could result in bad permissions for files/folders.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30\">https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/releases/tag/v2.29.0\">https://github.com/goreleaser/nfpm/releases/tag/v2.29.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32698\">https://nvd.nist.gov/vuln/detail/CVE-2023-32698</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c",
            "title": "[github.com/goreleaser/nfpm] nfpm has incorrect default permissions",
            "date_modified": "2023-05-30T06:41:46.000Z",
            "date_published": "2023-05-24T17:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. </p>\n<h3 id=\"details\">Details</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. When nfpm packaged the files (without extra config for enforcing its own permissions) files could go out with bad permissions (chmod 666 or 777).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Create a default nfpm structure. </p>\n<p>Within the test folder, create 3 files named <code>chmod-XXX.sh</code>. Each script has file \npermissions set corresponding with their file names (<code>chmod-777.sh</code> = <code>chmod 777</code>). Below each \nfile and permissions can be seen.</p>\n<pre><code class=\"language-console\">$ ls -lart test \ntotal 24\n-rwxrwxrwx   1 user  group   11 May 19 13:15 chmod-777.sh\n-rw-rw-rw-   1 user  group   11 May 19 13:16 chmod-666.sh\ndrwxr-xr-x   5 user  group  160 May 19 13:19 .\n-rw-rw-r--   1 user  group   11 May 19 13:19 chmod-664.sh\ndrwxr-xr-x  10 user  group  320 May 19 13:29 ..\n</code></pre>\n<p>Below is the snippet nfpm configuration file of the contents of the package. The test folder \nand files has no extra config for enforcing permissions. </p>\n<pre><code class=\"language-yaml\">contents:\n- src: foo-binary\n  dst: /usr/bin/bar\n- src: bar-config.conf\n  dst: /etc/foo-binary/bar-config.conf\n  type: config\n- src: test\n  dst: /etc/test/scripts\n</code></pre>\n<p>The next step is to create a deb package.</p>\n<pre><code class=\"language-console\">$ nfpm package -p deb # Create dep package\nusing deb packager...\ncreated package: foo_1.0.0_arm64.deb\n</code></pre>\n<p>When on a Ubuntu VM, install the foo package which was created</p>\n<pre><code class=\"language-console\">$ sudo dpkg -i foo_1.0.0_arm64.deb # Installing deb package within Ubuntu\nSelecting previously unselected package foo.\n(Reading database ... 67540 files and directories currently installed.)\nPreparing to unpack foo_1.0.0_arm64.deb ...\nUnpacking foo (1.0.0) ...\nSetting up foo (1.0.0) ...\n</code></pre>\n<p>Looking at <code>/etc/test/scripts</code> and viewing the permissions. Permissions are passed exactly the same as the source.</p>\n<pre><code class=\"language-console\">$ ls -lart /etc/test/scripts\ntotal 20\n-rwxrwxrwx 1 root root   11 May 22 12:15 chmod-777.sh\n-rw-rw-rw- 1 root root   11 May 22 12:16 chmod-666.sh\n-rw-rw-r-- 1 root root   11 May 22 12:19 chmod-664.sh\ndrwxr-xr-x 3 root root 4096 May 22 13:00 ..\ndrwxr-xr-x 2 root root 4096 May 22 13:00 .\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>To prevent world-writable files from making it into the packages, add the ability to override the default permissions of packaged files using a umask config option in the packaging spec file. This feature in nfpm would allow applying a global umask across any files being packaged, therefore, with the correct configuration, preventing world-writable files without needing to list permissions on each and every file in the package</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Vulnerability is <a href=\"https://cwe.mitre.org/data/definitions/276.html\">https://cwe.mitre.org/data/definitions/276.html</a>\n<a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N\">https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N</a></p>\n<p>Anyone using nfpm for creating packages and not checking/setting file permissions before packaging could result in bad permissions for files/folders.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30\">https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/releases/tag/v2.29.0\">https://github.com/goreleaser/nfpm/releases/tag/v2.29.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32698\">https://nvd.nist.gov/vuln/detail/CVE-2023-32698</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c",
            "title": "[github.com/goreleaser/nfpm/v2] nfpm has incorrect default permissions",
            "date_modified": "2023-05-30T06:41:46.000Z",
            "date_published": "2023-05-24T17:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only impacts users who:</p>\n<ul>\n<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>\n<li>Have an allow-all rule in place that affects only one of those endpoints</li>\n</ul>\n<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<p>It should be rewritten to:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.16\">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.12.9\">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.13.2\">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30851\">https://nvd.nist.gov/vuln/detail/CVE-2023-30851</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4",
            "title": "[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium",
            "date_modified": "2023-05-25T19:07:27.000Z",
            "date_published": "2023-05-22T20:33:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}