{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<blockquote>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n</blockquote>\n<p>The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program.</p>\n<p>When using <code>github.com/gagliardetto/binary</code> to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size.</p>\n<p>When <code>dec.Decode(&amp;val)</code> method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value.</p>\n<p>Example:</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"github.com/gagliardetto/binary\" // any version before v0.7.1 is vulnerable\n    \"log\"\n)\n\ntype MyStruct struct {\n    Field1 []byte // field is a slice (could be a slice of any type)\n}\n\nfunc main() {\n    // Let's assume that the data is coming from the blockchain:\n    data := []byte{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10}\n    \n    var val MyStruct\n    // - To determine the size of the val.Field1 slice, the decoder will read the length\n    //   of the slice from the data itself without any checks on the size of it.\n    //\n    // - This could lead to an allocation of memory with excessive size value.\n    //   Which means: []byte{0x01, 0x02, 0x03, 0x04} will be read as the length\n    //   of the slice (= 67305985) and then an allocation of memory with 67305985 bytes will be made.\n    //\n    dec := binary.NewBorshDecoder(data)\n    err := dec.Decode(&amp;val)  // or binary.UnmarshalBorsh(&amp;val, data) or binary.UnmarshalBin(&amp;val, data) etc.\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<blockquote>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n</blockquote>\n<p>The vulnerability has been patched in <code>github.com/gagliardetto/binary</code> <code>v0.7.1</code></p>\n<p>Users should upgrade to <code>v0.7.1</code> or higher.</p>\n<p>To upgrade to <code>v0.7.1</code> or higher, run:</p>\n<pre><code class=\"language-bash\">go get github.com/gagliardetto/binary@v0.7.1\n\n# or\n\ngo get github.com/gagliardetto/binary@latest\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<blockquote>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n</blockquote>\n<p>A workaround is not to rely on the <code>dec.Decode(&amp;val)</code> function to parse the data, but to use a custom <code>UnmarshalWithDecoder()</code> method that reads and checks the length of any slice.</p>\n<h3 id=\"references\">References</h3>\n<blockquote>\n<p><em>Are there any links users can visit to find out more?</em></p>\n</blockquote>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/gagliardetto/binary\">github.com/gagliardetto/binary</a></li>\n<li>DM me on <a href=\"https://twitter.com/immaterial_ink\">twitter</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88\">https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36078\">https://nvd.nist.gov/vuln/detail/CVE-2022-36078</a></li>\n<li><a href=\"https://github.com/gagliardetto/binary/pull/7\">https://github.com/gagliardetto/binary/pull/7</a></li>\n<li><a href=\"https://github.com/gagliardetto/binary/releases/tag/v0.7.1\">https://github.com/gagliardetto/binary/releases/tag/v0.7.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p6f-m4f9-ch88\">https://github.com/advisories/GHSA-4p6f-m4f9-ch88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4p6f-m4f9-ch88",
            "title": "[github.com/gagliardetto/binary] Binary vulnerable to Slice Memory Allocation with Excessive Size Value",
            "date_modified": "2022-09-16T21:25:04.000Z",
            "date_published": "2022-09-16T21:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4p6f-m4f9-ch88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Read only calls between contracts can generate smart contracts results. For example, if contract A calls in read only mode contract B and the called function will make changes upon the contract's B state, the state will be altered for contract B as if the call was not made in the read-only mode. This can lead to some effects not designed by the original smart contracts programmers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch v1.3.35 or higher</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround</p>\n<h3 id=\"references\">References</h3>\n<p>For future reference and understanding of this issue, anyone can check this integration test <a href=\"https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452\">https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452</a> that proves the fix and prevents a future code regression. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in elrond-go (<a href=\"https://github.com/ElrondNetwork/elrond-go/issues\">http://github.com/ElrondNetwork/elrond-go/issues</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-mv8x-668m-53fg\">https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-mv8x-668m-53fg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36061\">https://nvd.nist.gov/vuln/detail/CVE-2022-36061</a></li>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452\">https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452</a></li>\n<li><a href=\"https://github.com/ElrondNetwork/elrond-go/releases/tag/v1.3.35\">https://github.com/ElrondNetwork/elrond-go/releases/tag/v1.3.35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv8x-668m-53fg\">https://github.com/advisories/GHSA-mv8x-668m-53fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv8x-668m-53fg",
            "title": "[github.com/ElrondNetwork/elrond-go] Elrond-go has improper initialization",
            "date_modified": "2022-09-16T21:21:44.000Z",
            "date_published": "2022-09-16T21:21:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv8x-668m-53fg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SFTPGo WebAdmin and WebClient support login using TOTP (Time-based One Time Passwords) as a seconday authentication factor. Because TOTPs are often configured on mobile devices that can be lost, stolen or damaged, SFTPGo also supports recovery codes. These are a set of one time use codes that can be used instead of the TOTP.</p>\n<p>In SFTPGo versions from v2.2.0 to v2.3.3 recovery codes can be generated before enabling two-factor authentication.\nAn attacker who knows the user's password could potentially generate some recovery codes and then bypass two-factor authentication after it is enabled on the account at a later time.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v2.3.4.\nRecovery codes can now only be generated after enabling two-factor authentication and are deleted after disabling it.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Regenerate recovery codes after enabling two-factor authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/drakkan/sftpgo/issues/965\">https://github.com/drakkan/sftpgo/issues/965</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-54qx-8p8w-xhg8\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-54qx-8p8w-xhg8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36071\">https://nvd.nist.gov/vuln/detail/CVE-2022-36071</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/issues/965\">https://github.com/drakkan/sftpgo/issues/965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-54qx-8p8w-xhg8\">https://github.com/advisories/GHSA-54qx-8p8w-xhg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-54qx-8p8w-xhg8",
            "title": "[github.com/drakkan/sftpgo/v2] SFTPGo vulnerable to recovery codes abuse",
            "date_modified": "2022-09-16T21:05:29.000Z",
            "date_published": "2022-09-16T21:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-54qx-8p8w-xhg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the <code>\"USER $USERNAME\"</code> Dockerfile instruction. Instead by calling <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> the supplementary groups will be set up properly.</p>\n<p>Thanks to Steven Murdoch for reporting this issue.</p>\n<hr>\n<h3 id=\"impact\">Impact</h3>\n<p>If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. </p>\n<h3 id=\"patches\">Patches</h3>\n<p> This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This problem can be worked around by not using the <code>\"USER $USERNAME\"</code> Dockerfile instruction. Instead by calling <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> the supplementary groups will be set up properly.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/moby/moby/issues/new\">Open an issue</a></li>\n<li>Email us at <a href=\"mailto:security@docker.com\">security@docker.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36109\">https://nvd.nist.gov/vuln/detail/CVE-2022-36109</a></li>\n<li><a href=\"https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32\">https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32</a></li>\n<li><a href=\"https://github.com/moby/moby/releases/tag/v20.10.18\">https://github.com/moby/moby/releases/tag/v20.10.18</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rc4r-wh2q-q6c4",
            "title": "[github.com/moby/moby] Moby supplementary group permissions not set up properly, allowing attackers to bypass primary group restrictions",
            "date_modified": "2022-09-19T20:23:40.000Z",
            "date_published": "2022-09-16T21:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rc4r-wh2q-q6c4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When a full CVSS v2.0 vector string is parsed using <code>ParseVector</code>, an Out-of-Bounds Read is possible due to a lack of tests. The Go module will then panic.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in tag <code>v0.4.0</code>, by the commit <code>d9d478ff0c13b8b09ace030db9262f3c2fe031f4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only way to avoid it is by parsing CVSS v2.0 vector strings that does not have all attributes defined (e.g. <code>AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M</code>).</p>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"cpe-v23\">CPE v2.3</h3>\n<p>As stated in <a href=\"https://github.com/pandatix/go-cvss/blob/master/SECURITY.md\">SECURITY.md</a>, the CPE v2.3 to refer to this Go module is <code>cpe:2.3:a:pandatix:go_cvss:*:*:*:*:*:*:*:*</code>.\nThe entry has already been requested to the NVD CPE dictionnary.</p>\n<h3 id=\"exploit-example\">Exploit example</h3>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"log\"\n\n    gocvss20 \"github.com/pandatix/go-cvss/20\"\n)\n\nfunc main() {\n    _, err := gocvss20.ParseVector(\"AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M\")\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n</code></pre>\n<p>When ran, the following trace is returned.</p>\n<pre><code>panic: runtime error: index out of range [3] with length 3\n\ngoroutine 1 [running]:\ngithub.com/pandatix/go-cvss/20.ParseVector({0x4aed6c?, 0x0?})\n        /home/lucas/go/pkg/mod/github.com/pandatix/go-cvss@v0.2.0/20/cvss20.go:54 +0x578\nmain.main()\n        /media/lucas/HDD-K/Documents/cve-2022-xxxxx/main.go:10 +0x25\nexit status 2\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/pandatix/go-cvss/issues\">pandatix/go-cvss</a></li>\n<li>Email me at <a href=\"mailto:lucastesson@protonmail.com\">lucastesson@protonmail.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pandatix/go-cvss/security/advisories/GHSA-xhmf-mmv2-4hhx\">https://github.com/pandatix/go-cvss/security/advisories/GHSA-xhmf-mmv2-4hhx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39213\">https://nvd.nist.gov/vuln/detail/CVE-2022-39213</a></li>\n<li><a href=\"https://github.com/pandatix/go-cvss/commit/d9d478ff0c13b8b09ace030db9262f3c2fe031f4\">https://github.com/pandatix/go-cvss/commit/d9d478ff0c13b8b09ace030db9262f3c2fe031f4</a></li>\n<li><a href=\"https://github.com/pandatix/go-cvss/blob/master/SECURITY.md\">https://github.com/pandatix/go-cvss/blob/master/SECURITY.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xhmf-mmv2-4hhx\">https://github.com/advisories/GHSA-xhmf-mmv2-4hhx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xhmf-mmv2-4hhx",
            "title": "[github.com/pandatix/go-cvss] Go-CVSS has Out-of-bounds Read vulnerability in ParseVector function",
            "date_modified": "2022-09-16T20:59:44.000Z",
            "date_published": "2022-09-16T20:59:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xhmf-mmv2-4hhx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating a robot account that\nbelongs to a project that the authenticated user doesn’t have access to. API call:</p>\n<p>PUT /robots/{robot_id}</p>\n<p>By sending a request that attempts to update a robot account, and specifying a robot\naccount id and robot account name that belongs to a different project that the user\ndoesn’t have access to, it was possible to revoke the robot account permissions.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/advisories/GHSA-xx9w-464f-7h6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f",
            "title": "[github.com/goharbor/harbor]  Harbor fails to validate the user permissions when updating a robot account",
            "date_modified": "2022-09-16T20:27:15.000Z",
            "date_published": "2022-09-16T20:27:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating a robot account that\nbelongs to a project that the authenticated user doesn’t have access to. API call:</p>\n<p>PUT /robots/{robot_id}</p>\n<p>By sending a request that attempts to update a robot account, and specifying a robot\naccount id and robot account name that belongs to a different project that the user\ndoesn’t have access to, it was possible to revoke the robot account permissions.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/advisories/GHSA-xx9w-464f-7h6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f",
            "title": "[github.com/goharbor/harbor]  Harbor fails to validate the user permissions when updating a robot account",
            "date_modified": "2022-09-16T20:27:15.000Z",
            "date_published": "2022-09-16T20:27:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating a robot account that\nbelongs to a project that the authenticated user doesn’t have access to. API call:</p>\n<p>PUT /robots/{robot_id}</p>\n<p>By sending a request that attempts to update a robot account, and specifying a robot\naccount id and robot account name that belongs to a different project that the user\ndoesn’t have access to, it was possible to revoke the robot account permissions.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xx9w-464f-7h6f\">https://github.com/advisories/GHSA-xx9w-464f-7h6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f",
            "title": "[github.com/goharbor/harbor]  Harbor fails to validate the user permissions when updating a robot account",
            "date_modified": "2022-09-16T20:27:15.000Z",
            "date_published": "2022-09-16T20:27:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xx9w-464f-7h6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating tag immutability policies - API call:</p>\n<p>  PUT /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id}</p>\n<p>By sending a request to update a tag immutability policy with an id that belongs to a\nproject that the currently authenticated user doesn’t have access to, the attacker could\nmodify tag immutability policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6\">https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c6p-v837-77f6\">https://github.com/advisories/GHSA-8c6p-v837-77f6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag immutability policies",
            "date_modified": "2022-09-16T19:38:16.000Z",
            "date_published": "2022-09-16T19:38:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating tag immutability policies - API call:</p>\n<p>  PUT /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id}</p>\n<p>By sending a request to update a tag immutability policy with an id that belongs to a\nproject that the currently authenticated user doesn’t have access to, the attacker could\nmodify tag immutability policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6\">https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c6p-v837-77f6\">https://github.com/advisories/GHSA-8c6p-v837-77f6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag immutability policies",
            "date_modified": "2022-09-16T19:38:16.000Z",
            "date_published": "2022-09-16T19:38:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions when updating tag immutability policies - API call:</p>\n<p>  PUT /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id}</p>\n<p>By sending a request to update a tag immutability policy with an id that belongs to a\nproject that the currently authenticated user doesn’t have access to, the attacker could\nmodify tag immutability policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6\">https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c6p-v837-77f6\">https://github.com/advisories/GHSA-8c6p-v837-77f6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag immutability policies",
            "date_modified": "2022-09-16T19:38:16.000Z",
            "date_published": "2022-09-16T19:38:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c6p-v837-77f6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions to view Webhook policies including relevant credentials configured in different projects the user doesn’t have access to, resulting in malicious users being able to read Webhook policies of other users/projects. API call is</p>\n<p>&nbsp; GET /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}</p>\n<p>By sending the below request and specifying different Webhook policy ids in the last part of the URL, the malicious user may disclose Webhook policies related to other repositories/projects.: none;\"&gt;</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when viewing Webhook policies",
            "date_modified": "2022-09-16T19:35:47.000Z",
            "date_published": "2022-09-16T19:35:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions to view Webhook policies including relevant credentials configured in different projects the user doesn’t have access to, resulting in malicious users being able to read Webhook policies of other users/projects. API call is</p>\n<p>&nbsp; GET /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}</p>\n<p>By sending the below request and specifying different Webhook policy ids in the last part of the URL, the malicious user may disclose Webhook policies related to other repositories/projects.: none;\"&gt;</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when viewing Webhook policies",
            "date_modified": "2022-09-16T19:35:47.000Z",
            "date_published": "2022-09-16T19:35:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Harbor fails to validate the user permissions to view Webhook policies including relevant credentials configured in different projects the user doesn’t have access to, resulting in malicious users being able to read Webhook policies of other users/projects. API call is</p>\n<p>&nbsp; GET /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}</p>\n<p>By sending the below request and specifying different Webhook policy ids in the last part of the URL, the malicious user may disclose Webhook policies related to other repositories/projects.: none;\"&gt;</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf8p-3vjh-pq94\">https://github.com/advisories/GHSA-jf8p-3vjh-pq94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when viewing Webhook policies",
            "date_modified": "2022-09-16T19:35:47.000Z",
            "date_published": "2022-09-16T19:35:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf8p-3vjh-pq94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p> Harbor fails to validate the user permissions when updating tag retention policies. API call:</p>\n<p>  PUT /retentions/{id}</p>\n<p>By sending a request to update a tag retention policy with an id that belongs to a project\nthat the currently authenticated user doesn’t have access to, the attacker could modify\ntag retention policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/advisories/GHSA-3637-v6vq-xqqw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag retention policies",
            "date_modified": "2022-09-16T19:29:41.000Z",
            "date_published": "2022-09-16T19:29:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p> Harbor fails to validate the user permissions when updating tag retention policies. API call:</p>\n<p>  PUT /retentions/{id}</p>\n<p>By sending a request to update a tag retention policy with an id that belongs to a project\nthat the currently authenticated user doesn’t have access to, the attacker could modify\ntag retention policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/advisories/GHSA-3637-v6vq-xqqw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag retention policies",
            "date_modified": "2022-09-16T19:29:41.000Z",
            "date_published": "2022-09-16T19:29:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p> Harbor fails to validate the user permissions when updating tag retention policies. API call:</p>\n<p>  PUT /retentions/{id}</p>\n<p>By sending a request to update a tag retention policy with an id that belongs to a project\nthat the currently authenticated user doesn’t have access to, the attacker could modify\ntag retention policies configured in other projects.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/goharbor/harbor\">the Harbor GitHub repository</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to <a href=\"https://www.linkedin.com/in/gal-goldshtein/\">Gal Goldstein</a> and <a href=\"https://www.linkedin.com/in/daniel-abeles/\">Daniel Abeles</a> from <a href=\"https://www.oxeye.io/\">Oxeye Security</a> for reporting this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3637-v6vq-xqqw\">https://github.com/advisories/GHSA-3637-v6vq-xqqw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw",
            "title": "[github.com/goharbor/harbor] Harbor fails to validate the user permissions when updating tag retention policies",
            "date_modified": "2022-09-16T19:29:41.000Z",
            "date_published": "2022-09-16T19:29:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3637-v6vq-xqqw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>A number of vulnerabilities have been found in <code>cosign verify-blob</code>, where Cosign would successfully verify an artifact when verification should have failed.</p>\n<h2 id=\"vulnerability-1-bundle-mismatch-causes-invalid-verification\">Vulnerability 1: Bundle mismatch causes invalid verification.</h2>\n<h3 id=\"summary-1\">Summary</h3>\n<p>A cosign bundle can be crafted to successfully verify a blob even if the embedded rekorBundle does not reference the given signature.</p>\n<h3 id=\"details\">Details</h3>\n<p>Cosign supports \"bundles\" which intend to allow offline verification of the signature and rekor inclusion. By using the --bundle flag in cosign sign-blob, cosign will create a JSON file called a \"bundle\". These bundles include three fields: base64Signature, cert, and rekorBundle. The desired behavior is that the verification of these bundles would:</p>\n<ul>\n<li>verify the provided blob using the included signature and certificate</li>\n<li>verify the rekorBundle SET</li>\n<li>verify the rekorBundle payload references the given artifact.</li>\n</ul>\n<p>It appears that step three is not being performed, allowing \"any old rekorBundle\" to pass validation, even if the rekorBundle payload does not reference the provided blob or the certificate and signature in the rekorBundle do not match those at the top level.</p>\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\n<p>Enable keyless signing:</p>\n<pre><code>export COSIGN_EXPERIMENTAL=1\n</code></pre>\n<p>Create two random blobs:</p>\n<pre><code>dd bs=1 count=50 &lt;/dev/urandom &gt;blob1\ndd bs=1 count=50 &lt;/dev/urandom &gt;blob2\n</code></pre>\n<p>Sign each blob:</p>\n<pre><code>cosign sign-blob blob1 --bundle bundle1\ncosign sign-blob blob2 --bundle bundle2\n</code></pre>\n<p>Create a falsified bundle including the base64Signature and cert fields from bundle1 and the rekorBundle from bundle2:</p>\n<pre><code>jq --slurpfile bundle2 bundle2 '.rekorBundle = $bundle2[0].rekorBundle' bundle1 &gt; invalidBundle\n</code></pre>\n<p>Now, the falsified bundle can be used to verify blob1:</p>\n<pre><code>$ cosign verify-blob blob1 --bundle invalidBundle\ntlog entry verified offline\nVerified OK\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should update to the latest version of Cosign, <code>1.12.0</code>.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>If you extract the signature and certificate from the <code>bundle</code>, you may use it for verification as follows and avoid using an invalid bundle:</p>\n<pre><code>$ cosign verify-blob blob1 --signature $(jq -r '.base64Signature' bundle1) --certificate $(jq -r '.cert' bundle1)\n</code></pre>\n<p>Note that this will make a network call to Rekor to fetch the Rekor entry. However, you may then be subject to Vulnerability 4.</p>\n<h2 id=\"vulnerability-2-certificate-identities-are-not-checked-in-some-cases\">Vulnerability 2: Certificate Identities are not checked in some cases</h2>\n<h3 id=\"summary-2\">Summary</h3>\n<p>When providing identity flags, the email and issuer of a certificate is not checked when verifying a Rekor bundle, and the GitHub Actions identity is never checked.</p>\n<h3 id=\"details-1\">Details</h3>\n<p>Users who provide an offline Rekor bundle (<code>--bundle</code>) when verifying a blob using <code>cosign verify-blob</code> and include flags that check identity such as <code>--certificate-email</code> and <code>--certificate-oidc-issuer</code> are impacted. Additionally, users who provide the GitHub Actions verification flags such as <code>--certificate-github-workflow-name</code> when running <code>cosign verify-blob</code> without a bundle, key reference, or certificate are impacted. </p>\n<p>When providing these flags, Cosign ignored their values. If a certificate's identity did not match the provided flags, Cosign would still successfully verify the blob.</p>\n<h3 id=\"patches-1\">Patches</h3>\n<p>Users should update to the latest version of Cosign, <code>1.12.0</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds, users should update.</p>\n<h2 id=\"vulnerability-3-invalid-rekor-bundle-without-the-experimental-flag-will-result-in-successful-verification\">Vulnerability 3: Invalid Rekor bundle without the experimental flag will result in successful verification</h2>\n<h3 id=\"summary-3\">Summary</h3>\n<p>Providing an invalid Rekor bundle without the experimental flag results in a successful verification.</p>\n<h3 id=\"details-2\">Details</h3>\n<p>Users who provide an offline Rekor bundle (<code>--bundle</code>) that was invalid (invalid signed entry timestamp, expired certificate, or malformed) when verifying a blob with <code>cosign verify-blob</code> and do not set the <code>COSIGN_EXPERIMENTAL=1</code> flag are impacted.</p>\n<p>When an invalid bundle was provided, Cosign would fallback to checking Rekor log inclusion by requesting proof of inclusion from the log. However, without the <code>COSIGN_EXPERIMENTAL</code> flag, Cosign would exit early and successfully verify the blob. </p>\n<h3 id=\"patches-2\">Patches</h3>\n<p>Users should update to the latest version of Cosign, <code>1.12.0</code>.</p>\n<h3 id=\"workarounds-1\">Workarounds</h3>\n<p>There are no workarounds, users should update.</p>\n<h2 id=\"vulnerability-4-invalid-transparency-log-entry-will-result-in-successful-verification\">Vulnerability 4: Invalid transparency log entry will result in successful verification</h2>\n<h3 id=\"summary-4\">Summary</h3>\n<p>An invalid transparency log entry will result in immediate success for verification.</p>\n<h3 id=\"details-3\">Details</h3>\n<p>Users who provide a signature and certificate to <code>verify-blob</code> will fetch the associated Rekor entry for verification. If the returned entry was invalid (invalid signed entry timestamp, invalid inclusion proof, malformed entry with missing verification), then <code>cosign</code> <a href=\"https://github.com/sigstore/cosign/blob/42c6e2a6dd9d92d19077c8e6b7d66d155a5ea28c/cmd/cosign/cli/verify/verify_blob.go#L357\">exits</a> early and succeeds unconditionally.</p>\n<h3 id=\"patches-3\">Patches</h3>\n<p>Users should update to the latest version of Cosign, <code>1.12.0</code>.</p>\n<h3 id=\"workarounds-2\">Workarounds</h3>\n<p>There are no workarounds, users should update.</p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/sigstore/cosign\">cosign</a></li>\n<li>Send us a message on <a href=\"https://sigstore.slack.com/\">Slack</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/cosign/security/advisories/GHSA-8gw7-4j42-w388\">https://github.com/sigstore/cosign/security/advisories/GHSA-8gw7-4j42-w388</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36056\">https://nvd.nist.gov/vuln/detail/CVE-2022-36056</a></li>\n<li><a href=\"https://github.com/sigstore/cosign/commit/80b79ed8b4d28ccbce3d279fd273606b5cddcc25\">https://github.com/sigstore/cosign/commit/80b79ed8b4d28ccbce3d279fd273606b5cddcc25</a></li>\n<li><a href=\"https://github.com/sigstore/cosign/releases/tag/v1.12.0\">https://github.com/sigstore/cosign/releases/tag/v1.12.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gw7-4j42-w388\">https://github.com/advisories/GHSA-8gw7-4j42-w388</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gw7-4j42-w388",
            "title": "[github.com/sigstore/cosign] Cosign bundle can be crafted to successfully verify a blob even if the embedded rekorBundle does not reference the given signature",
            "date_modified": "2022-09-16T19:13:14.000Z",
            "date_published": "2022-09-16T19:13:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gw7-4j42-w388"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Helm controller is tightly integrated with the Helm SDK. <a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">A vulnerability</a> found in the Helm SDK allows for specific data inputs to cause high memory consumption, which in some platforms could cause the controller to panic and stop processing reconciliations.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The initial crash bug was reported by <a href=\"https://github.com/google/oss-fuzz\">oss-fuzz</a>. The Flux Security team produced the first exploit and worked together with the Helm Security team to ensure that both projects were patched timely.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux Channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996</a></li>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-p2g7-xwvr-rrw3\">https://github.com/fluxcd/flux2/security/advisories/GHSA-p2g7-xwvr-rrw3</a></li>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36049\">https://nvd.nist.gov/vuln/detail/CVE-2022-36049</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2g7-xwvr-rrw3\">https://github.com/advisories/GHSA-p2g7-xwvr-rrw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2g7-xwvr-rrw3",
            "title": "[github.com/fluxcd/flux2] Helm Controller denial of service",
            "date_modified": "2022-09-16T18:49:52.000Z",
            "date_published": "2022-09-16T18:49:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2g7-xwvr-rrw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Helm controller is tightly integrated with the Helm SDK. <a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">A vulnerability</a> found in the Helm SDK allows for specific data inputs to cause high memory consumption, which in some platforms could cause the controller to panic and stop processing reconciliations.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The initial crash bug was reported by <a href=\"https://github.com/google/oss-fuzz\">oss-fuzz</a>. The Flux Security team produced the first exploit and worked together with the Helm Security team to ensure that both projects were patched timely.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux Channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996</a></li>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-p2g7-xwvr-rrw3\">https://github.com/fluxcd/flux2/security/advisories/GHSA-p2g7-xwvr-rrw3</a></li>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36049\">https://nvd.nist.gov/vuln/detail/CVE-2022-36049</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2g7-xwvr-rrw3\">https://github.com/advisories/GHSA-p2g7-xwvr-rrw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2g7-xwvr-rrw3",
            "title": "[github.com/fluxcd/helm-controller] Helm Controller denial of service",
            "date_modified": "2022-09-16T18:49:52.000Z",
            "date_published": "2022-09-16T18:49:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2g7-xwvr-rrw3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}