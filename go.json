{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the improper URL protocols filtering of links specified in the <code>link.argocd.argoproj.io</code> annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin).</p>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.10.3</li>\n<li>v2.9.8</li>\n<li>v2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no completely-safe workarounds besides <strong>upgrading</strong>. The safest alternative, if upgrading is not possible, would be to create a <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/\">Kubernetes admission controller</a> to reject any resources with an annotation starting with <code>link.argocd.argoproj.io</code> or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<ol>\n<li>Avoid clicking external links presented in the UI.\nThe link's title is user-configurable. So even if you hover the link, and the tooltip looks safe, the link might be malicious. The only way to be certain that the link is safe is to inspect the page's source.</li>\n<li>Carefully limit who has permissions to edit Kubernetes resource manifests (this is configured in <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC</a> for ArgoCD). \nThe external-links are set as annotations on Kubernetes resources. Any persona with write access to resources managed by ArgoCD could be an actor.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/\">Documentation for the external links feature</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by <a href=\"https://ryotak.net\">RyotaK</a> (@Ry0taK)</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28175\">https://nvd.nist.gov/vuln/detail/CVE-2024-28175</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71\">https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/advisories/GHSA-jwv5-8mqv-g387</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387",
            "title": "[github.com/argoproj/argo-cd/v2] Cross-site scripting on application summary component",
            "date_modified": "2024-03-15T19:46:23.000Z",
            "date_published": "2024-03-15T19:46:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the improper URL protocols filtering of links specified in the <code>link.argocd.argoproj.io</code> annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin).</p>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.10.3</li>\n<li>v2.9.8</li>\n<li>v2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no completely-safe workarounds besides <strong>upgrading</strong>. The safest alternative, if upgrading is not possible, would be to create a <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/\">Kubernetes admission controller</a> to reject any resources with an annotation starting with <code>link.argocd.argoproj.io</code> or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<ol>\n<li>Avoid clicking external links presented in the UI.\nThe link's title is user-configurable. So even if you hover the link, and the tooltip looks safe, the link might be malicious. The only way to be certain that the link is safe is to inspect the page's source.</li>\n<li>Carefully limit who has permissions to edit Kubernetes resource manifests (this is configured in <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC</a> for ArgoCD). \nThe external-links are set as annotations on Kubernetes resources. Any persona with write access to resources managed by ArgoCD could be an actor.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/\">Documentation for the external links feature</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by <a href=\"https://ryotak.net\">RyotaK</a> (@Ry0taK)</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28175\">https://nvd.nist.gov/vuln/detail/CVE-2024-28175</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71\">https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/advisories/GHSA-jwv5-8mqv-g387</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387",
            "title": "[github.com/argoproj/argo-cd/v2] Cross-site scripting on application summary component",
            "date_modified": "2024-03-15T19:46:23.000Z",
            "date_published": "2024-03-15T19:46:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the improper URL protocols filtering of links specified in the <code>link.argocd.argoproj.io</code> annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin).</p>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.10.3</li>\n<li>v2.9.8</li>\n<li>v2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no completely-safe workarounds besides <strong>upgrading</strong>. The safest alternative, if upgrading is not possible, would be to create a <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/\">Kubernetes admission controller</a> to reject any resources with an annotation starting with <code>link.argocd.argoproj.io</code> or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<ol>\n<li>Avoid clicking external links presented in the UI.\nThe link's title is user-configurable. So even if you hover the link, and the tooltip looks safe, the link might be malicious. The only way to be certain that the link is safe is to inspect the page's source.</li>\n<li>Carefully limit who has permissions to edit Kubernetes resource manifests (this is configured in <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC</a> for ArgoCD). \nThe external-links are set as annotations on Kubernetes resources. Any persona with write access to resources managed by ArgoCD could be an actor.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/\">Documentation for the external links feature</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by <a href=\"https://ryotak.net\">RyotaK</a> (@Ry0taK)</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28175\">https://nvd.nist.gov/vuln/detail/CVE-2024-28175</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71\">https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/advisories/GHSA-jwv5-8mqv-g387</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387",
            "title": "[github.com/argoproj/argo-cd/v2] Cross-site scripting on application summary component",
            "date_modified": "2024-03-15T19:46:23.000Z",
            "date_published": "2024-03-15T19:46:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the improper URL protocols filtering of links specified in the <code>link.argocd.argoproj.io</code> annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin).</p>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.10.3</li>\n<li>v2.9.8</li>\n<li>v2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no completely-safe workarounds besides <strong>upgrading</strong>. The safest alternative, if upgrading is not possible, would be to create a <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/\">Kubernetes admission controller</a> to reject any resources with an annotation starting with <code>link.argocd.argoproj.io</code> or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<ol>\n<li>Avoid clicking external links presented in the UI.\nThe link's title is user-configurable. So even if you hover the link, and the tooltip looks safe, the link might be malicious. The only way to be certain that the link is safe is to inspect the page's source.</li>\n<li>Carefully limit who has permissions to edit Kubernetes resource manifests (this is configured in <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC</a> for ArgoCD). \nThe external-links are set as annotations on Kubernetes resources. Any persona with write access to resources managed by ArgoCD could be an actor.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/\">Documentation for the external links feature</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by <a href=\"https://ryotak.net\">RyotaK</a> (@Ry0taK)</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jwv5-8mqv-g387</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28175\">https://nvd.nist.gov/vuln/detail/CVE-2024-28175</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71\">https://github.com/argoproj/argo-cd/commit/479b5544b57dc9ef767d49f7003f39602c480b71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwv5-8mqv-g387\">https://github.com/advisories/GHSA-jwv5-8mqv-g387</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387",
            "title": "[github.com/argoproj/argo-cd] Cross-site scripting on application summary component",
            "date_modified": "2024-03-15T19:46:23.000Z",
            "date_published": "2024-03-15T19:46:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwv5-8mqv-g387"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>A significant security oversight was identified in Nuclei v3, involving the execution of unsigned code templates through workflows. This vulnerability specifically affects users utilizing custom workflows, potentially allowing the execution of malicious code on the user's system. This advisory outlines the impacted users, provides details on the security patch, and suggests mitigation strategies.</p>\n<h3 id=\"affected-users\">Affected Users</h3>\n<ol>\n<li><strong>CLI Users:</strong> Those executing custom workflows from untrusted sources. This includes workflows authored by third parties or obtained from unverified repositories.</li>\n<li><strong>SDK Users:</strong> Developers integrating Nuclei into their platforms, particularly if they permit the execution of custom workflows by end-users.</li>\n</ol>\n<h3 id=\"security-patch\">Security Patch</h3>\n<p>The vulnerability is addressed in Nuclei v3.2.0. Users are strongly recommended to update to this version to mitigate the security risk.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<ul>\n<li><strong>Immediate Upgrade:</strong> The primary recommendation is to upgrade to Nuclei v3.2.0, where the vulnerability has been patched.</li>\n<li><strong>Avoid Untrusted Workflows:</strong> As an interim measure, users should refrain from using custom workflows if unable to upgrade immediately. Only trusted, verified workflows should be executed.</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability stems from an oversight in the workflow execution mechanism, where unsigned code templates could be executed, bypassing the security measures intended to authenticate the integrity and source of the templates. This issue is isolated to workflow executions and does not affect direct template executions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only effective workaround, aside from upgrading, is to avoid the use of custom workflows altogether. This approach limits functionality but ensures security until the upgrade can be performed.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We extend our sincere gratitude to @gpc1996 for their diligence in identifying and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Security Patch Pull Request: <a href=\"https://github.com/projectdiscovery/nuclei/pull/4822\">GitHub PR #4822</a></li>\n<li>Workflows Overview: <a href=\"https://docs.projectdiscovery.io/templates/workflows/overview\">Nuclei Workflows Documentation</a></li>\n<li>Code Template Reference: <a href=\"https://docs.projectdiscovery.io/templates/protocols/code\">Nuclei Code Protocols Documentation</a></li>\n<li>Template Signing Reference: <a href=\"https://docs.projectdiscovery.io/templates/reference/template-signing\">Nuclei Template Signing Documentation</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-w5wx-6g2r-r78q\">https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-w5wx-6g2r-r78q</a></li>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/pull/4822\">https://github.com/projectdiscovery/nuclei/pull/4822</a></li>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/commit/e86f38299765b82ad724fdb701557e0eaff3884d\">https://github.com/projectdiscovery/nuclei/commit/e86f38299765b82ad724fdb701557e0eaff3884d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w5wx-6g2r-r78q\">https://github.com/advisories/GHSA-w5wx-6g2r-r78q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w5wx-6g2r-r78q",
            "title": "[github.com/projectdiscovery/nuclei/v3] Nuclei allows unsigned code template execution through workflows",
            "date_modified": "2024-03-15T18:44:29.000Z",
            "date_published": "2024-03-15T18:44:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w5wx-6g2r-r78q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability impacts anyone running the affected versions of Wings.  The vulnerability can potentially be used to access files and directories on the host system.  The full scope of impact is exactly unknown, but reading files outside of a server's base directory (sandbox root) is possible.</p>\n<p>In order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings.  Details on the exploitation of this vulnerability are embargoed until March 27th, 2024 at 18:00 UTC.</p>\n<h3 id=\"resolution\">Resolution</h3>\n<p>In order to mitigate this vulnerability, a full rewrite of the entire server filesystem was necessary.  Because of this, the size of the patch is massive, however effort was made to reduce the amount of breaking changes.  While tests were written to ensure security and functionality, there may be some semantic differences of certain operations, such as different errors being returned for example.  If you notice any major semantic differences, please open an issue on our issue tracker so it can be resolved. <a href=\"https://github.com/pterodactyl/panel/issues/new/choose\">https://github.com/pterodactyl/panel/issues/new/choose</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been resolved in version <code>v1.11.9</code> of Wings.</p>\n<p>Everyone should update to Wings <code>v1.11.9</code> (or newer).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9\">https://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27102\">https://nvd.nist.gov/vuln/detail/CVE-2024-27102</a></li>\n<li><a href=\"https://github.com/pterodactyl/wings/commit/d1c0ca526007113a0f74f56eba99511b4e989287\">https://github.com/pterodactyl/wings/commit/d1c0ca526007113a0f74f56eba99511b4e989287</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-494h-9924-xww9\">https://github.com/advisories/GHSA-494h-9924-xww9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-494h-9924-xww9",
            "title": "[github.com/pterodactyl/wings] Pterodactyl Wings vulnerable to improper isolation of server file access",
            "date_modified": "2024-03-15T16:48:24.000Z",
            "date_published": "2024-03-15T16:48:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-494h-9924-xww9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OS command injection vulnerability within the Fluid project's JuicefsRuntime can potentially allow an authenticated user, who has the authority to create or update the K8s CRD Dataset/JuicefsRuntime, to execute arbitrary OS commands within the juicefs related containers. This could lead to unauthorized access, modification or deletion of data.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For users who're using version &lt; 0.9.3 with JuicefsRuntime， upgrade to v0.9.3.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Special thanks to the discovers of this issue:</p>\n<p>Xiaozheng Zhang <a href=\"xiaozheng_zhang@outlook.com\">xiaozheng_zhang@outlook.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/security/advisories/GHSA-wx8q-4gm9-rj2g\">https://github.com/fluid-cloudnative/fluid/security/advisories/GHSA-wx8q-4gm9-rj2g</a></li>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/commit/02b7cd8b79a26092df95d625664994bda485c722\">https://github.com/fluid-cloudnative/fluid/commit/02b7cd8b79a26092df95d625664994bda485c722</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wx8q-4gm9-rj2g\">https://github.com/advisories/GHSA-wx8q-4gm9-rj2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wx8q-4gm9-rj2g",
            "title": "[github.com/fluid-cloudnative/fluid] Fluid vulnerable to OS Command Injection for Fluid Users with JuicefsRuntime",
            "date_modified": "2024-03-15T16:39:39.000Z",
            "date_published": "2024-03-15T16:35:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wx8q-4gm9-rj2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>\"Local sync\" is an Argo CD feature that allows developers to temporarily override an Application's manifests with locally-defined manifests. Use of the feature should generally be limited to highly-trusted users, since it allows the user to bypass any merge protections in git.</p>\n<p>An improper validation bug allows users who have <code>create</code> privileges but not <code>override</code> privileges to sync local manifests on app creation. All other restrictions, including AppProject restrictions are still enforced. The only restriction which is <em>not</em> enforced is that the manifests come from some approved git/Helm/OCI source.</p>\n<p>The bug was introduced in 1.2.0-rc1 when the local manifest sync feature was added.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The bug has been patched in the following versions:</p>\n<ul>\n<li>2.10.3</li>\n<li>2.9.8</li>\n<li>2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To immediately mitigate the risk of branch protection bypass, remove <code>applications, create</code> RBAC access. The only way to eliminate the issue without removing RBAC access is to upgrade to a patched version.</p>\n<p>Branch protection rules and review requirements are a great way to enforce security constraints in a GitOps environment, but they should be just one layer in a multi-layered approach. Make sure your AppProject and RBAC restrictions are as thorough as possible to prevent a review bypass vulnerability from permitting excessive damage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/\">Argo CD RBAC documentation</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50726\">https://nvd.nist.gov/vuln/detail/CVE-2023-50726</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978\">https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac\">https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/advisories/GHSA-g623-jcgg-mhmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm",
            "title": "[github.com/argoproj/argo-cd/v2] Users with `create` but not `override` privileges can perform local sync",
            "date_modified": "2024-03-15T16:33:21.000Z",
            "date_published": "2024-03-15T16:33:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>\"Local sync\" is an Argo CD feature that allows developers to temporarily override an Application's manifests with locally-defined manifests. Use of the feature should generally be limited to highly-trusted users, since it allows the user to bypass any merge protections in git.</p>\n<p>An improper validation bug allows users who have <code>create</code> privileges but not <code>override</code> privileges to sync local manifests on app creation. All other restrictions, including AppProject restrictions are still enforced. The only restriction which is <em>not</em> enforced is that the manifests come from some approved git/Helm/OCI source.</p>\n<p>The bug was introduced in 1.2.0-rc1 when the local manifest sync feature was added.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The bug has been patched in the following versions:</p>\n<ul>\n<li>2.10.3</li>\n<li>2.9.8</li>\n<li>2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To immediately mitigate the risk of branch protection bypass, remove <code>applications, create</code> RBAC access. The only way to eliminate the issue without removing RBAC access is to upgrade to a patched version.</p>\n<p>Branch protection rules and review requirements are a great way to enforce security constraints in a GitOps environment, but they should be just one layer in a multi-layered approach. Make sure your AppProject and RBAC restrictions are as thorough as possible to prevent a review bypass vulnerability from permitting excessive damage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/\">Argo CD RBAC documentation</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50726\">https://nvd.nist.gov/vuln/detail/CVE-2023-50726</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978\">https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac\">https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/advisories/GHSA-g623-jcgg-mhmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm",
            "title": "[github.com/argoproj/argo-cd/v2] Users with `create` but not `override` privileges can perform local sync",
            "date_modified": "2024-03-15T16:33:21.000Z",
            "date_published": "2024-03-15T16:33:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>\"Local sync\" is an Argo CD feature that allows developers to temporarily override an Application's manifests with locally-defined manifests. Use of the feature should generally be limited to highly-trusted users, since it allows the user to bypass any merge protections in git.</p>\n<p>An improper validation bug allows users who have <code>create</code> privileges but not <code>override</code> privileges to sync local manifests on app creation. All other restrictions, including AppProject restrictions are still enforced. The only restriction which is <em>not</em> enforced is that the manifests come from some approved git/Helm/OCI source.</p>\n<p>The bug was introduced in 1.2.0-rc1 when the local manifest sync feature was added.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The bug has been patched in the following versions:</p>\n<ul>\n<li>2.10.3</li>\n<li>2.9.8</li>\n<li>2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To immediately mitigate the risk of branch protection bypass, remove <code>applications, create</code> RBAC access. The only way to eliminate the issue without removing RBAC access is to upgrade to a patched version.</p>\n<p>Branch protection rules and review requirements are a great way to enforce security constraints in a GitOps environment, but they should be just one layer in a multi-layered approach. Make sure your AppProject and RBAC restrictions are as thorough as possible to prevent a review bypass vulnerability from permitting excessive damage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/\">Argo CD RBAC documentation</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50726\">https://nvd.nist.gov/vuln/detail/CVE-2023-50726</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978\">https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac\">https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/advisories/GHSA-g623-jcgg-mhmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm",
            "title": "[github.com/argoproj/argo-cd/v2] Users with `create` but not `override` privileges can perform local sync",
            "date_modified": "2024-03-15T16:33:21.000Z",
            "date_published": "2024-03-15T16:33:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>\"Local sync\" is an Argo CD feature that allows developers to temporarily override an Application's manifests with locally-defined manifests. Use of the feature should generally be limited to highly-trusted users, since it allows the user to bypass any merge protections in git.</p>\n<p>An improper validation bug allows users who have <code>create</code> privileges but not <code>override</code> privileges to sync local manifests on app creation. All other restrictions, including AppProject restrictions are still enforced. The only restriction which is <em>not</em> enforced is that the manifests come from some approved git/Helm/OCI source.</p>\n<p>The bug was introduced in 1.2.0-rc1 when the local manifest sync feature was added.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The bug has been patched in the following versions:</p>\n<ul>\n<li>2.10.3</li>\n<li>2.9.8</li>\n<li>2.8.12</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To immediately mitigate the risk of branch protection bypass, remove <code>applications, create</code> RBAC access. The only way to eliminate the issue without removing RBAC access is to upgrade to a patched version.</p>\n<p>Branch protection rules and review requirements are a great way to enforce security constraints in a GitOps environment, but they should be just one layer in a multi-layered approach. Make sure your AppProject and RBAC restrictions are as thorough as possible to prevent a review bypass vulnerability from permitting excessive damage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/\">Argo CD RBAC documentation</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50726\">https://nvd.nist.gov/vuln/detail/CVE-2023-50726</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978\">https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978</a></li>\n<li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac\">https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g623-jcgg-mhmm\">https://github.com/advisories/GHSA-g623-jcgg-mhmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm",
            "title": "[github.com/argoproj/argo-cd] Users with `create` but not `override` privileges can perform local sync",
            "date_modified": "2024-03-15T16:33:21.000Z",
            "date_published": "2024-03-15T16:33:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g623-jcgg-mhmm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v2.3.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27304\">https://nvd.nist.gov/vuln/detail/CVE-2024-27304</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
            "title": "[github.com/jackc/pgx/v5] pgproto3 SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:46:08.000Z",
            "date_published": "2024-03-04T20:45:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v2.3.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27304\">https://nvd.nist.gov/vuln/detail/CVE-2024-27304</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
            "title": "[github.com/jackc/pgx/v4] pgproto3 SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:46:08.000Z",
            "date_published": "2024-03-04T20:45:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v2.3.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27304\">https://nvd.nist.gov/vuln/detail/CVE-2024-27304</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
            "title": "[github.com/jackc/pgproto3/v2] pgproto3 SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:46:08.000Z",
            "date_published": "2024-03-04T20:45:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgx/v5] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:45:19.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgx/v4] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:45:19.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgproto3/v2] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-14T21:45:19.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Vela pipelines can use variable substitution combined with insensitive fields like <code>parameters</code>, <code>image</code> and <code>entrypoint</code> to inject secrets into a plugin/image and — by using common substitution string manipulation — can bypass log masking and expose secrets without the use of the commands block. This unexpected behavior primarily impacts secrets restricted by the \"no commands\" option. This can lead to unintended use of the secret value, and increased risk of exposing the secret during image execution bypassing log masking.</p>\n<p>Given by the following substitution examples:\nusing <code>parameters</code></p>\n<pre><code class=\"language-yaml\">steps:\n  - name: example\n    image: &lt;some plugin&gt;\n    secrets: [ example_secret ]\n    parameters:\n      example: $${EXAMPLE_SECRET}\n</code></pre>\n<p>using <code>image</code> tag</p>\n<pre><code class=\"language-yaml\">steps:\n  - name: example\n    image: &lt;some plugin&gt;:latest${EXAMPLE_SECRET}\n    secrets: [ example_secret ]\n</code></pre>\n<p>using <code>entrypoint</code> as a shim for <code>commands</code></p>\n<pre><code class=\"language-yaml\">steps:\n  - name: example\n    image: &lt;some plugin&gt;\n    secrets: [ example_secret ]\n    entrypoint:\n      [\n        \"sh\",\n        \"-c\",\n        \"echo $EXAMPLE_SECRET\",\n      ]\n</code></pre>\n<p><strong>To exploit this</strong> the pipeline author must be supplying the secrets to a plugin that is designed in such a way that will print those parameters in logs. Plugin parameters are not designed for sensitive values and are often intentionally printed throughout execution for informational/debugging purposes. Parameters should therefore be treated as insensitive.</p>\n<p>While Vela provides secrets masking, secrets exposure is not entirely solved by the masking process. A docker image (plugin) can easily expose secrets if they are not handled properly, or altered in some way. There is a responsibility on the end-user to understand how values injected into a plugin are used. This is a risk that exists for many CICD systems (like GitHub Actions) that handle sensitive runtime variables. Rather, the greater risk is that users who restrict a secret to the \"no commands\" option and use image restriction can still have their secret value exposed via substitution tinkering, which turns the image and command restrictions into a false sense of security.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>N/A</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Do not provide sensitive values to plugins that can potentially expose them, especially in <code>parameters</code> that are not intended to be used for sensitive values.</li>\n<li>Ensure plugins (especially those that utilize shared secrets) follow best practices to avoid logging parameters that are expected to be sensitive.</li>\n<li>Minimize secrets with <code>pull_request</code> events enabled, as this allows users to change pipeline configurations and pull in secrets to steps not typically part of the CI process.</li>\n<li>Make use of the build approval setting, restricting builds from untrusted users</li>\n<li>Limit use of shared secrets, as they are less restrictive to access by nature.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-vela/worker\">https://github.com/go-vela/worker</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:vela@target.com\">vela@target.com</a></li>\n</ul>\n<p>Affected products: <code>go-vela/worker</code></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-vela/worker/security/advisories/GHSA-pwx5-6wxg-px5h\">https://github.com/go-vela/worker/security/advisories/GHSA-pwx5-6wxg-px5h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28236\">https://nvd.nist.gov/vuln/detail/CVE-2024-28236</a></li>\n<li><a href=\"https://github.com/go-vela/worker/commit/e1572743b008e4fbce31ebb1dcd23bf6a1a30297\">https://github.com/go-vela/worker/commit/e1572743b008e4fbce31ebb1dcd23bf6a1a30297</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pwx5-6wxg-px5h\">https://github.com/advisories/GHSA-pwx5-6wxg-px5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pwx5-6wxg-px5h",
            "title": "[github.com/go-vela/worker] Insecure Variable Substitution in Vela",
            "date_modified": "2024-03-14T21:17:05.000Z",
            "date_published": "2024-03-14T21:17:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pwx5-6wxg-px5h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24786\">https://nvd.nist.gov/vuln/detail/CVE-2024-24786</a></li>\n<li><a href=\"https://go.dev/cl/569356\">https://go.dev/cl/569356</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2611\">https://pkg.go.dev/vuln/GO-2024-2611</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023\">https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0\">https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8r3f-844c-mc37\">https://github.com/advisories/GHSA-8r3f-844c-mc37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8r3f-844c-mc37",
            "title": "[google.golang.org/protobuf/internal/encoding/json] Golang protojson.Unmarshal function infinite loop when unmarshaling certain forms of invalid JSON",
            "date_modified": "2024-03-13T21:01:29.000Z",
            "date_published": "2024-03-06T00:31:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8r3f-844c-mc37"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24786\">https://nvd.nist.gov/vuln/detail/CVE-2024-24786</a></li>\n<li><a href=\"https://go.dev/cl/569356\">https://go.dev/cl/569356</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2611\">https://pkg.go.dev/vuln/GO-2024-2611</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023\">https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0\">https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8r3f-844c-mc37\">https://github.com/advisories/GHSA-8r3f-844c-mc37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8r3f-844c-mc37",
            "title": "[google.golang.org/protobuf/encoding/protojson] Golang protojson.Unmarshal function infinite loop when unmarshaling certain forms of invalid JSON",
            "date_modified": "2024-03-13T21:01:29.000Z",
            "date_published": "2024-03-06T00:31:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8r3f-844c-mc37"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}