{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16886\">https://nvd.nist.gov/vuln/detail/CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/pull/10366\">https://github.com/etcd-io/etcd/pull/10366</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d\">https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2\">https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0237\">https://access.redhat.com/errata/RHSA-2019:0237</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1352\">https://access.redhat.com/errata/RHSA-2019:1352</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106540\">http://www.securityfocus.com/bid/106540</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0077\">https://pkg.go.dev/vuln/GO-2021-0077</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6xx-pmxh-3wgp\">https://github.com/advisories/GHSA-h6xx-pmxh-3wgp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp",
            "title": "[go.etcd.io/etcd] Improper Authentication in etcd",
            "date_modified": "2023-02-17T21:52:16.000Z",
            "date_published": "2022-04-12T22:41:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Attestation <em>user data</em> (such as the digest of the public key in an aTLS connection) was bound to the issuer's TPM, but not to its PCR state. An attacker could intercept a node initialization, initialize the node themselves, and then impersonate an uninitialized node to the validator. In practice, this meant that a CSP insider with sufficient privileges would have been able to join a node under their control to a Constellation cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/edgelesssys/constellation/releases/tag/v2.5.2\">v2.5.2</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>none</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/edgelesssys/constellation/security/advisories/GHSA-r2h5-3hgw-8j34\">https://github.com/edgelesssys/constellation/security/advisories/GHSA-r2h5-3hgw-8j34</a></li>\n<li><a href=\"https://github.com/edgelesssys/constellation/releases/tag/v2.5.2\">https://github.com/edgelesssys/constellation/releases/tag/v2.5.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r2h5-3hgw-8j34\">https://github.com/advisories/GHSA-r2h5-3hgw-8j34</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r2h5-3hgw-8j34",
            "title": "[github.com/edgelesssys/constellation/v2] User data in TPM attestation vulnerable to MITM",
            "date_modified": "2023-02-17T20:51:24.000Z",
            "date_published": "2023-02-17T20:51:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r2h5-3hgw-8j34"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Authentication vulnerability in MOSN before v.0.23.0 allows attacker to escalate privileges via case-sensitive JWT authorization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32163\">https://nvd.nist.gov/vuln/detail/CVE-2021-32163</a></li>\n<li><a href=\"https://github.com/mosn/mosn/issues/1633\">https://github.com/mosn/mosn/issues/1633</a></li>\n<li><a href=\"https://github.com/mosn/mosn/pull/1637\">https://github.com/mosn/mosn/pull/1637</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5vx9-j5cw-47vq\">https://github.com/advisories/GHSA-5vx9-j5cw-47vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5vx9-j5cw-47vq",
            "title": "[mosn.io/mosn] Privilege escalation in MOSN",
            "date_modified": "2023-02-17T20:47:38.000Z",
            "date_published": "2023-02-17T18:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5vx9-j5cw-47vq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Nomad and Nomad Enterprise 1.2.15 up to 1.3.8, and 1.4.3 jobs using a maliciously compressed artifact stanza source can cause excessive disk usage. Fixed in 1.2.16, 1.3.9, and 1.4.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0821\">https://nvd.nist.gov/vuln/detail/CVE-2023-0821</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292\">https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w479-w22g-cffh\">https://github.com/advisories/GHSA-w479-w22g-cffh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w479-w22g-cffh",
            "title": "[github.com/hashicorp/nomad] Uncontrolled Resource Consumption in Hashicorp Nomad",
            "date_modified": "2023-02-17T14:00:26.000Z",
            "date_published": "2023-02-17T00:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w479-w22g-cffh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Nomad and Nomad Enterprise 1.2.15 up to 1.3.8, and 1.4.3 jobs using a maliciously compressed artifact stanza source can cause excessive disk usage. Fixed in 1.2.16, 1.3.9, and 1.4.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0821\">https://nvd.nist.gov/vuln/detail/CVE-2023-0821</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292\">https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w479-w22g-cffh\">https://github.com/advisories/GHSA-w479-w22g-cffh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w479-w22g-cffh",
            "title": "[github.com/hashicorp/nomad] Uncontrolled Resource Consumption in Hashicorp Nomad",
            "date_modified": "2023-02-17T14:00:26.000Z",
            "date_published": "2023-02-17T00:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w479-w22g-cffh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Nomad and Nomad Enterprise 1.2.15 up to 1.3.8, and 1.4.3 jobs using a maliciously compressed artifact stanza source can cause excessive disk usage. Fixed in 1.2.16, 1.3.9, and 1.4.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0821\">https://nvd.nist.gov/vuln/detail/CVE-2023-0821</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292\">https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w479-w22g-cffh\">https://github.com/advisories/GHSA-w479-w22g-cffh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w479-w22g-cffh",
            "title": "[github.com/hashicorp/nomad] Uncontrolled Resource Consumption in Hashicorp Nomad",
            "date_modified": "2023-02-17T14:00:26.000Z",
            "date_published": "2023-02-17T00:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w479-w22g-cffh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41723\">https://nvd.nist.gov/vuln/detail/CVE-2022-41723</a></li>\n<li><a href=\"https://go.dev/cl/468135\">https://go.dev/cl/468135</a></li>\n<li><a href=\"https://go.dev/issue/57855\">https://go.dev/issue/57855</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E\">https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E</a></li>\n<li><a href=\"https://vuln.go.dev/ID/GO-2023-1571.json\">https://vuln.go.dev/ID/GO-2023-1571.json</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvpx-j8f3-3w6h\">https://github.com/advisories/GHSA-vvpx-j8f3-3w6h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvpx-j8f3-3w6h",
            "title": "[golang.org/x/net] Uncontrolled Resource Consumption",
            "date_modified": "2023-02-17T14:00:03.000Z",
            "date_published": "2023-02-17T14:00:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvpx-j8f3-3w6h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An attacker can craft a malformed TIFF image which will consume a significant amount of memory when passed to DecodeConfig. This could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41727\">https://nvd.nist.gov/vuln/detail/CVE-2022-41727</a></li>\n<li><a href=\"https://go.dev/cl/468195\">https://go.dev/cl/468195</a></li>\n<li><a href=\"https://go.dev/issue/58003\">https://go.dev/issue/58003</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/ag-FiyjlD5o\">https://groups.google.com/g/golang-announce/c/ag-FiyjlD5o</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1572\">https://pkg.go.dev/vuln/GO-2023-1572</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qgc7-mgm3-q253\">https://github.com/advisories/GHSA-qgc7-mgm3-q253</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qgc7-mgm3-q253",
            "title": "[golang.org/x/image] Uncontrolled Resource Consumption",
            "date_modified": "2023-02-17T13:59:45.000Z",
            "date_published": "2023-02-17T13:59:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qgc7-mgm3-q253"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp go-getter up to 1.6.2 and 2.1.1 is vulnerable to decompression bombs. Fixed in 1.7.0 and 2.2.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0475\">https://nvd.nist.gov/vuln/detail/CVE-2023-0475</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125\">https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jpxj-2jvg-6jv9\">https://github.com/advisories/GHSA-jpxj-2jvg-6jv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jpxj-2jvg-6jv9",
            "title": "[github.com/hashicorp/go-getter/v2] Data Amplification in HashiCorp go-getter",
            "date_modified": "2023-02-16T23:34:17.000Z",
            "date_published": "2023-02-16T21:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jpxj-2jvg-6jv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp go-getter up to 1.6.2 and 2.1.1 is vulnerable to decompression bombs. Fixed in 1.7.0 and 2.2.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0475\">https://nvd.nist.gov/vuln/detail/CVE-2023-0475</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125\">https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jpxj-2jvg-6jv9\">https://github.com/advisories/GHSA-jpxj-2jvg-6jv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jpxj-2jvg-6jv9",
            "title": "[github.com/hashicorp/go-getter] Data Amplification in HashiCorp go-getter",
            "date_modified": "2023-02-16T23:34:17.000Z",
            "date_published": "2023-02-16T21:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jpxj-2jvg-6jv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.</p>\n<p>The attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).</p>\n<h4 id=\"how-the-attack-works\">How the Attack Works</h4>\n<p>Argo CD stores <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\">cluster access configurations</a> as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. </p>\n<p>The attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one (<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">non project-scoped</a>) cluster. Then they must craft a malicious request to the Argo CD API server.</p>\n<h4 id=\"removing-deployment-restrictions\">Removing Deployment Restrictions</h4>\n<p>A cluster Secret's <code>clusterResources</code> field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The <code>namespaces</code> field determines the namespaces to which Argo CD users may deploy resources.</p>\n<p>You can use this command to determine whether any of your cluster configurations employ these restrictions (replace <code>argocd</code> with the namespace of your Argo CD installation):</p>\n<pre><code class=\"language-shell\">kubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n</code></pre>\n<p>The <code>clusterResources</code> and <code>namespaces</code> fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.</p>\n<p>If <code>clusterResources: \"false\"</code> or <code>namespaces: \"some,namespaces\"</code> are the <em>only</em> mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).</p>\n<h4 id=\"modifying-connection-parameters\">Modifying Connection Parameters</h4>\n<p>Cluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.</p>\n<p>Alternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.</p>\n<h4 id=\"changing-unscoped-clusters-to-be-scoped\">Changing Unscoped Clusters to be Scoped</h4>\n<p>The vulnerability also allows an attacker to modify a previously-unscoped cluster and make it <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\">scoped</a>. This is important if you are using <code>permitOnlyProjectScopedClusters: true</code> in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.6.2</li>\n<li>v2.5.11</li>\n<li>v2.4.23</li>\n<li>v2.3.17</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.</p>\n<h4 id=\"limit-users-with-cluster-update-access\">Limit Users with Cluster Update Access</h4>\n<p>The only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all <code>clusters, update</code> access.</p>\n<p>To exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/\">RBAC configuration</a>, for lines like this:</p>\n<pre><code>p, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n</code></pre>\n<p>Revoke <code>clusters, update</code> access for any users who do not absolutely need that access.</p>\n<h4 id=\"restrict-resource-management-via-appprojects-and-rbac\">Restrict Resource Management via AppProjects and RBAC</h4>\n<p><a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects\">AppProjects</a> are a primary tool to restrict what resources may be managed via Argo CD.</p>\n<p>You can use the <code>destinations</code> and <code>clusterResourceWhitelist</code> fields to apply similar restrictions as the <code>namespaces</code> and <code>clusterResources</code> fields described above.</p>\n<pre><code class=\"language-yaml\">apiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n</code></pre>\n<p>Along with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.</p>\n<p>For example, limit <code>projects, update</code> access to Argo CD administrators only. Also use the <code>{project}</code> field in <code>applications, *, {project}/{application}</code> field to limit users' access to certain, restricted, AppProjects. </p>\n<p>AppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23947\">https://nvd.nist.gov/vuln/detail/CVE-2023-23947</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945\">https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jfq-742w-xg8j\">https://github.com/advisories/GHSA-3jfq-742w-xg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j",
            "title": "[github.com/argoproj/argo-cd] Users with any cluster secret update access may update out-of-bounds cluster secrets",
            "date_modified": "2023-02-16T20:47:26.000Z",
            "date_published": "2023-02-16T20:47:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jfq-742w-xg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank <a href=\"https://github.com/DavidKorczynski\">David Korczynski</a> and <a href=\"https://github.com/AdamKorcz\">Adam Korczynski</a> of ADA Logics for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a> during a security fuzzing audit sponsored by CNCF.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2\">https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25153\">https://nvd.nist.gov/vuln/detail/CVE-2023-25153</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4\">https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1573\">https://pkg.go.dev/vuln/GO-2023-1573</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259w-8hf6-59c2\">https://github.com/advisories/GHSA-259w-8hf6-59c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2",
            "title": "[github.com/containerd/containerd] OCI image importer memory exhaustion in github.com/containerd/containerd",
            "date_modified": "2023-02-17T21:32:03.000Z",
            "date_published": "2023-02-16T14:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank <a href=\"https://github.com/DavidKorczynski\">David Korczynski</a> and <a href=\"https://github.com/AdamKorcz\">Adam Korczynski</a> of ADA Logics for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a> during a security fuzzing audit sponsored by CNCF.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2\">https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25153\">https://nvd.nist.gov/vuln/detail/CVE-2023-25153</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4\">https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1573\">https://pkg.go.dev/vuln/GO-2023-1573</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259w-8hf6-59c2\">https://github.com/advisories/GHSA-259w-8hf6-59c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2",
            "title": "[github.com/containerd/containerd] OCI image importer memory exhaustion in github.com/containerd/containerd",
            "date_modified": "2023-02-17T21:32:03.000Z",
            "date_published": "2023-02-16T14:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>\n<p>Downstream applications that use the containerd client library may be affected as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that the <code>\"USER $USERNAME\"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>\n<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>\n<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>\n<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>\n</ul>\n<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25173\">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a\">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wjj-jwc9-2x96\">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjm8-m7m6-2fjp\">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1574\">https://pkg.go.dev/vuln/GO-2023-1574</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p",
            "title": "[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd",
            "date_modified": "2023-02-17T21:32:13.000Z",
            "date_published": "2023-02-16T14:11:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>\n<p>Downstream applications that use the containerd client library may be affected as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that the <code>\"USER $USERNAME\"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>\n<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>\n<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>\n<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>\n</ul>\n<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25173\">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a\">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wjj-jwc9-2x96\">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjm8-m7m6-2fjp\">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1574\">https://pkg.go.dev/vuln/GO-2023-1574</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p",
            "title": "[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd",
            "date_modified": "2023-02-17T21:32:13.000Z",
            "date_published": "2023-02-16T14:11:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>go-jose before 1.0.4 suffers from an invalid curve attack for the ECDH-ES algorithm. When deriving a shared key using ECDH-ES for an encrypted message, go-jose neglected to check that the received public key on a message is on the same curve as the static private key of the receiver, thus making it vulnerable to an invalid curve attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9121\">https://nvd.nist.gov/vuln/detail/CVE-2016-9121</a></li>\n<li><a href=\"https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507\">https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507</a></li>\n<li><a href=\"https://hackerone.com/reports/164590\">https://hackerone.com/reports/164590</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2016/11/03/1\">https://www.openwall.com/lists/oss-security/2016/11/03/1</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0010\">https://pkg.go.dev/vuln/GO-2020-0010</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86r9-39j9-99wp\">https://github.com/advisories/GHSA-86r9-39j9-99wp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86r9-39j9-99wp",
            "title": "[github.com/square/go-jose] Elliptic Curve Key Disclosure in go-jose",
            "date_modified": "2023-02-16T02:04:17.000Z",
            "date_published": "2021-06-23T17:17:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86r9-39j9-99wp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The following vulnerabilities have been disclosed, which impact users leveraging the SAML connector:</p>\n<p>Signature Validation Bypass (CVE-2020-15216): <a href=\"https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7\">https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7</a></p>\n<p><code>encoding/xml</code> instabilities:</p>\n<ul>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md\">Element namespace prefix instability (CVE-2020-29511)</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md\">Attribute namespace prefix instability (CVE-2020-29509)</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md\">Directive comment instability (CVE-2020-29510)</a></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Immediately update to <a href=\"https://github.com/dexidp/dex/releases/tag/v2.27.0\">Dex v2.27.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5\">https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5</a></li>\n<li><a href=\"https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7\">https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26290\">https://nvd.nist.gov/vuln/detail/CVE-2020-26290</a></li>\n<li><a href=\"https://github.com/dexidp/dex/commit/324b1c886b407594196113a3dbddebe38eecd4e8\">https://github.com/dexidp/dex/commit/324b1c886b407594196113a3dbddebe38eecd4e8</a></li>\n<li><a href=\"https://github.com/dexidp/dex/releases/tag/v2.27.0\">https://github.com/dexidp/dex/releases/tag/v2.27.0</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md\">https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md</a></li>\n<li><a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/</a></li>\n<li><a href=\"https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64\">https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0050\">https://pkg.go.dev/vuln/GO-2020-0050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9hp-7r99-94h5\">https://github.com/advisories/GHSA-m9hp-7r99-94h5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9hp-7r99-94h5",
            "title": "[github.com/russellhaering/goxmldsig] Critical security issues in XML encoding in github.com/dexidp/dex",
            "date_modified": "2023-02-16T00:31:29.000Z",
            "date_published": "2021-12-20T17:53:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9hp-7r99-94h5"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}