{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When executing the following simple query, the <code>vtgate</code> will go into an endless loop that also keeps consuming memory and eventually will OOM.</p>\n<h3 id=\"details\">Details</h3>\n<p>When running the following query, the <code>evalengine</code> will try evaluate it and runs forever.</p>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<p>The source of the bug lies in the collation logic that we have. The bug applies to all <code>utf16</code>,  <code>utf32</code> and <code>ucs2</code> encodings.  In general, the bug is there for any encoding where the minimal byte length for a single character is more than 1 byte.</p>\n<p>The decoding functions for these collations all implement logic like the following to enforce the minimal character length:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></p>\n<p>The problem is that all the callers of <code>DecodeRune</code> expect progress by returning the number of bytes consumed. This means that if there's only 1 byte left in an input, it will here return still <code>0</code> and the caller(s) don't consume the character. </p>\n<p>One example of such a caller is the following:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></p>\n<p>The logic here moves forward the pointer in the input <code>[]byte</code> but if <code>DecodeRune</code> returns <code>0</code> in case of error, it will keep running forever. The OOM happens since it keeps adding the <code>?</code> as the invalid character to the destination buffer infinitely, growing forever until it runs out of memory.</p>\n<p>The fix here would be to always return forward progress also on invalid strings. </p>\n<p>There's also a separate bug here that even if progress is guaranteed, <code>select _utf16 0xFF</code> will return the wrong result currently. MySQL will pad here the input when the <code>_utf16</code> introducer is used with leading <code>0x00</code> bytes and then decode to UTF-16, resulting in the output of <code>ÿ</code> here. </p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Denial of service attack by triggering unbounded memory usage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2\">https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df\">https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055\">https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d\">https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202\">https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-649x-hxfx-57j2\">https://github.com/advisories/GHSA-649x-hxfx-57j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2",
            "title": "[github.com/vitessio/vitess] Vitess vulnerable to infinite memory consumption and vtgate crash",
            "date_modified": "2024-05-08T16:25:20.000Z",
            "date_published": "2024-05-08T14:32:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When executing the following simple query, the <code>vtgate</code> will go into an endless loop that also keeps consuming memory and eventually will OOM.</p>\n<h3 id=\"details\">Details</h3>\n<p>When running the following query, the <code>evalengine</code> will try evaluate it and runs forever.</p>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<p>The source of the bug lies in the collation logic that we have. The bug applies to all <code>utf16</code>,  <code>utf32</code> and <code>ucs2</code> encodings.  In general, the bug is there for any encoding where the minimal byte length for a single character is more than 1 byte.</p>\n<p>The decoding functions for these collations all implement logic like the following to enforce the minimal character length:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></p>\n<p>The problem is that all the callers of <code>DecodeRune</code> expect progress by returning the number of bytes consumed. This means that if there's only 1 byte left in an input, it will here return still <code>0</code> and the caller(s) don't consume the character. </p>\n<p>One example of such a caller is the following:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></p>\n<p>The logic here moves forward the pointer in the input <code>[]byte</code> but if <code>DecodeRune</code> returns <code>0</code> in case of error, it will keep running forever. The OOM happens since it keeps adding the <code>?</code> as the invalid character to the destination buffer infinitely, growing forever until it runs out of memory.</p>\n<p>The fix here would be to always return forward progress also on invalid strings. </p>\n<p>There's also a separate bug here that even if progress is guaranteed, <code>select _utf16 0xFF</code> will return the wrong result currently. MySQL will pad here the input when the <code>_utf16</code> introducer is used with leading <code>0x00</code> bytes and then decode to UTF-16, resulting in the output of <code>ÿ</code> here. </p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Denial of service attack by triggering unbounded memory usage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2\">https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df\">https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055\">https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d\">https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202\">https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-649x-hxfx-57j2\">https://github.com/advisories/GHSA-649x-hxfx-57j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2",
            "title": "[github.com/vitessio/vitess] Vitess vulnerable to infinite memory consumption and vtgate crash",
            "date_modified": "2024-05-08T16:25:20.000Z",
            "date_published": "2024-05-08T14:32:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When executing the following simple query, the <code>vtgate</code> will go into an endless loop that also keeps consuming memory and eventually will OOM.</p>\n<h3 id=\"details\">Details</h3>\n<p>When running the following query, the <code>evalengine</code> will try evaluate it and runs forever.</p>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<p>The source of the bug lies in the collation logic that we have. The bug applies to all <code>utf16</code>,  <code>utf32</code> and <code>ucs2</code> encodings.  In general, the bug is there for any encoding where the minimal byte length for a single character is more than 1 byte.</p>\n<p>The decoding functions for these collations all implement logic like the following to enforce the minimal character length:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></p>\n<p>The problem is that all the callers of <code>DecodeRune</code> expect progress by returning the number of bytes consumed. This means that if there's only 1 byte left in an input, it will here return still <code>0</code> and the caller(s) don't consume the character. </p>\n<p>One example of such a caller is the following:</p>\n<p><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></p>\n<p>The logic here moves forward the pointer in the input <code>[]byte</code> but if <code>DecodeRune</code> returns <code>0</code> in case of error, it will keep running forever. The OOM happens since it keeps adding the <code>?</code> as the invalid character to the destination buffer infinitely, growing forever until it runs out of memory.</p>\n<p>The fix here would be to always return forward progress also on invalid strings. </p>\n<p>There's also a separate bug here that even if progress is guaranteed, <code>select _utf16 0xFF</code> will return the wrong result currently. MySQL will pad here the input when the <code>_utf16</code> introducer is used with leading <code>0x00</code> bytes and then decode to UTF-16, resulting in the output of <code>ÿ</code> here. </p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code>select _utf16 0xFF\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Denial of service attack by triggering unbounded memory usage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2\">https://github.com/vitessio/vitess/security/advisories/GHSA-649x-hxfx-57j2</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df\">https://github.com/vitessio/vitess/commit/2fd5ba1dbf6e9b32fdfdaf869d130066b1b5c0df</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055\">https://github.com/vitessio/vitess/commit/9df4b66550e46b5d7079e21ed0e1b0f49f92b055</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d\">https://github.com/vitessio/vitess/commit/c46dc5b6a4329a10589ca928392218d96031ac8d</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202\">https://github.com/vitessio/vitess/commit/d438adf7e34a6cf00fe441db80842ec669a99202</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/convert.go#L73-L79</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71\">https://github.com/vitessio/vitess/blob/8f6cfaaa643a08dc111395a75a2d250ee746cfa8/go/mysql/collations/charset/unicode/utf16.go#L69-L71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-649x-hxfx-57j2\">https://github.com/advisories/GHSA-649x-hxfx-57j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2",
            "title": "[github.com/vitessio/vitess] Vitess vulnerable to infinite memory consumption and vtgate crash",
            "date_modified": "2024-05-08T16:25:20.000Z",
            "date_published": "2024-05-08T14:32:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-649x-hxfx-57j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"withdrawn\">Withdrawn</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-j2cr-jc39-wpx5. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>The cosmos-sdk module is affected by the vulnerability codenamed \"Barberry\".</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/pull/16466\">https://github.com/cosmos/cosmos-sdk/pull/16466</a></li>\n<li><a href=\"https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825\">https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w44m-8mv2-v78h\">https://github.com/advisories/GHSA-w44m-8mv2-v78h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w44m-8mv2-v78h",
            "title": "[github.com/cosmos/cosmos-sdk] Duplicate Advisory: Cosmos \"Barberry\" vulnerability in github.com/cosmos/cosmos-sdk",
            "date_modified": "2024-05-07T21:32:38.000Z",
            "date_published": "2023-06-22T20:01:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w44m-8mv2-v78h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"withdrawn\">Withdrawn</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-j2cr-jc39-wpx5. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>The cosmos-sdk module is affected by the vulnerability codenamed \"Barberry\".</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/pull/16466\">https://github.com/cosmos/cosmos-sdk/pull/16466</a></li>\n<li><a href=\"https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825\">https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w44m-8mv2-v78h\">https://github.com/advisories/GHSA-w44m-8mv2-v78h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w44m-8mv2-v78h",
            "title": "[github.com/cosmos/cosmos-sdk] Duplicate Advisory: Cosmos \"Barberry\" vulnerability in github.com/cosmos/cosmos-sdk",
            "date_modified": "2024-05-07T21:32:38.000Z",
            "date_published": "2023-06-22T20:01:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w44m-8mv2-v78h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in tiagorlampert CHAOS before 1b451cf62582295b7225caf5a7b506f0bad56f6b and 24c9e109b5be34df7b2bce8368eae669c481ed5e allows a remote attacker to execute arbitrary code via the unsafe concatenation of the <code>filename</code> argument into the <code>buildStr</code> string without any sanitization or filtering.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33434\">https://nvd.nist.gov/vuln/detail/CVE-2024-33434</a></li>\n<li><a href=\"https://github.com/tiagorlampert/CHAOS/pull/95\">https://github.com/tiagorlampert/CHAOS/pull/95</a></li>\n<li><a href=\"https://gist.github.com/slimwang/d1ec6645ba9012a551ea436679244496\">https://gist.github.com/slimwang/d1ec6645ba9012a551ea436679244496</a></li>\n<li><a href=\"https://github.com/tiagorlampert/CHAOS/commit/1b451cf62582295b7225caf5a7b506f0bad56f6b\">https://github.com/tiagorlampert/CHAOS/commit/1b451cf62582295b7225caf5a7b506f0bad56f6b</a></li>\n<li><a href=\"https://github.com/tiagorlampert/CHAOS/commit/24c9e109b5be34df7b2bce8368eae669c481ed5e\">https://github.com/tiagorlampert/CHAOS/commit/24c9e109b5be34df7b2bce8368eae669c481ed5e</a></li>\n<li><a href=\"https://github.com/tiagorlampert/CHAOS/commit/b47438d36e3ad746de8c009e644f6e5396703f25\">https://github.com/tiagorlampert/CHAOS/commit/b47438d36e3ad746de8c009e644f6e5396703f25</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xfjj-f699-rc79\">https://github.com/advisories/GHSA-xfjj-f699-rc79</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xfjj-f699-rc79",
            "title": "[github.com/tiagorlampert/CHAOS] tiagorlampert CHAOS vulnerable to arbitrary code execution",
            "date_modified": "2024-05-07T16:53:57.000Z",
            "date_published": "2024-05-07T15:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xfjj-f699-rc79"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/kubernetes] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/kubernetes] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/kubernetes] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/apimachinery] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/apimachinery] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.7 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8559\">https://nvd.nist.gov/vuln/detail/CVE-2020-8559</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/92914\">https://github.com/kubernetes/kubernetes/issues/92914</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/92941\">https://github.com/kubernetes/kubernetes/pull/92941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1851422\">https://bugzilla.redhat.com/show_bug.cgi?id=1851422</a></li>\n<li><a href=\"https://github.com/tdwyer/CVE-2020-8559\">https://github.com/tdwyer/CVE-2020-8559</a></li>\n<li><a href=\"https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ\">https://groups.google.com/d/msg/kubernetes-security-announce/JAIGG5yNROs/19nHQ5wkBwAJ</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs\">https://groups.google.com/g/kubernetes-security-announce/c/JAIGG5yNROs</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200810-0004\">https://security.netapp.com/advisory/ntap-20200810-0004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33c5-9fx5-fvjm\">https://github.com/advisories/GHSA-33c5-9fx5-fvjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm",
            "title": "[k8s.io/apimachinery] Privilege Escalation in Kubernetes",
            "date_modified": "2024-05-07T13:08:06.000Z",
            "date_published": "2024-04-24T20:01:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33c5-9fx5-fvjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Minder's <code>HandleGithubWebhook</code> is susceptible to a denial of service attack from an untrusted HTTP request. The vulnerability exists before the request has been validated, and as such the request is still untrusted at the point of failure. This allows an attacker with the ability to send requests to <code>HandleGithubWebhook</code> to crash the Minder controlplane and deny other users from using it.</p>\n<p>One of the first things that <code>HandleGithubWebhook</code> does is to validate the payload signature. This is done by way of the internal helper <code>validatePayloadSignature</code>:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L213-L218\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L213-L218</a></p>\n<p><code>validatePayloadSignature</code> generates a reader from the incoming request by way of the internal helper <code>readerFromRequest</code>:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L337-L342\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L337-L342</a></p>\n<p>To create a reader from the incoming request, <code>readerFromRequest</code> first reads the request body entirely into memory on line 368:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L367-L377\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L367-L377</a></p>\n<p>This is a vulnerability, since an HTTP request with a large body can exhaust the memory of the machine running Minder and cause the Go runtime to crash Minder.</p>\n<p>Note that this occurs before Minder has validated the request, and as such, the request is still untrusted.</p>\n<p>To test this out, we can use the existing <code>TestHandleWebHookRepository</code> unit test and modify the HTTP request body to be large. </p>\n<p>To do that, change these lines:</p>\n<p><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks_test.go#L278-L283\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks_test.go#L278-L283</a></p>\n<p>... to these lines:</p>\n<pre><code class=\"language-go\">    packageJson, err := json.Marshal(event)\n    require.NoError(t, err, \"failed to marshal package event\")\n\n        maliciousBody := strings.NewReader(strings.Repeat(\"1337\", 1000000000))\n        maliciousBodyReader := io.MultiReader(maliciousBody, maliciousBody, maliciousBody, maliciousBody, maliciousBody)\n        _ = packageJson\n\n    client := &amp;http.Client{}\n    req, err := http.NewRequest(\"POST\", fmt.Sprintf(\"http://%s\", addr), maliciousBodyReader)\n    require.NoError(t, err, \"failed to create request\")\n</code></pre>\n<p>Then run the unit test again. WARNING, SAVE ALL WORK BEFORE DOING THIS.</p>\n<p>On my local machine, this causes the machine to freeze, and Go finally performs a sigkill: </p>\n<pre><code>signal: killed\nFAIL      github.com/stacklok/minder/internal/controlplane          30.759s\nFAIL\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stacklok/minder/security/advisories/GHSA-9c5w-9q3f-3hv7\">https://github.com/stacklok/minder/security/advisories/GHSA-9c5w-9q3f-3hv7</a></li>\n<li><a href=\"https://github.com/stacklok/minder/commit/3e5a527d2f1b535159206161d1d519602c75bd0d\">https://github.com/stacklok/minder/commit/3e5a527d2f1b535159206161d1d519602c75bd0d</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L213-L218\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L213-L218</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L337-L342\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L337-L342</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L367-L377\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks.go#L367-L377</a></li>\n<li><a href=\"https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks_test.go#L278-L283\">https://github.com/stacklok/minder/blob/ee66f6c0763212503c898cfefb65ce1450c7f5ac/internal/controlplane/handlers_githubwebhooks_test.go#L278-L283</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34084\">https://nvd.nist.gov/vuln/detail/CVE-2024-34084</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c5w-9q3f-3hv7\">https://github.com/advisories/GHSA-9c5w-9q3f-3hv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c5w-9q3f-3hv7",
            "title": "[github.com/stacklok/minder] Minder's GitHub Webhook Handler vulnerable to DoS from un-validated requests",
            "date_modified": "2024-05-07T15:58:21.000Z",
            "date_published": "2024-05-07T13:02:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c5w-9q3f-3hv7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>btcd before 0.24.0 does not correctly implement the consensus rules outlined in BIP 68 and BIP 112, making it susceptible to consensus failures. Specifically, it uses the transaction version as a signed integer when it is supposed to be treated as unsigned. There can be a chain split and loss of funds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34478\">https://nvd.nist.gov/vuln/detail/CVE-2024-34478</a></li>\n<li><a href=\"https://delvingbitcoin.org/t/disclosure-btcd-consensus-bugs-due-to-usage-of-signed-transaction-version/455\">https://delvingbitcoin.org/t/disclosure-btcd-consensus-bugs-due-to-usage-of-signed-transaction-version/455</a></li>\n<li><a href=\"https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/blockchain/chain.go#L383C1-L392C3\">https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/blockchain/chain.go#L383C1-L392C3</a></li>\n<li><a href=\"https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/txscript/opcode.go#L1172C1-L1178C3\">https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/txscript/opcode.go#L1172C1-L1178C3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jgf-r68h-xfqm\">https://github.com/advisories/GHSA-3jgf-r68h-xfqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jgf-r68h-xfqm",
            "title": "[github.com/btcsuite/btcd] btcd susceptible to consensus failures",
            "date_modified": "2024-05-06T14:28:57.000Z",
            "date_published": "2024-05-05T03:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jgf-r68h-xfqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"withdrawn-advisory\">Withdrawn Advisory</h2>\n<p>This advisory has been withdrawn because it is a bug, not a vulnerability. According to the maintainer, the bug only affects the client side of the request and cannot cause a denial of service on the server.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>An out-of-bounds read in the rewrite function at /modules/caddyhttp/rewrite/rewrite.go in Caddy v2.5.1 allows attackers to cause a Denial of Service (DoS) on the client side via a crafted URI.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34037\">https://nvd.nist.gov/vuln/detail/CVE-2022-34037</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/issues/4775\">https://github.com/caddyserver/caddy/issues/4775</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/commit/693e9b5283e675b56084ecc83d73176cab0ee27c\">https://github.com/caddyserver/caddy/commit/693e9b5283e675b56084ecc83d73176cab0ee27c</a></li>\n<li><a href=\"https://github.com/caddyserver/caddy/issues/4775#issuecomment-1203388116\">https://github.com/caddyserver/caddy/issues/4775#issuecomment-1203388116</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m7gr-5w5g-36jf\">https://github.com/advisories/GHSA-m7gr-5w5g-36jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m7gr-5w5g-36jf",
            "title": "[github.com/caddyserver/caddy] Withdrawn Advisory: Out-of-bounds Read can lead to client side denial of service",
            "date_modified": "2024-05-06T14:22:02.000Z",
            "date_published": "2022-07-23T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m7gr-5w5g-36jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerable node can be made to consume very large amounts of memory when handling specially crafted p2p messages sent from an attacker node.</p>\n<p>More in-depth details will be released at a later time. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix has been included in geth version <code>1.13.15</code> and onwards.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds have been made public. </p>\n<h3 id=\"references\">References</h3>\n<p>No more information is released at this time.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>This issue was disclosed responsibly by DongHan Kim via the Ethereum bug bounty program. Thank you for your cooperation. </p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethereum/go-ethereum/security/advisories/GHSA-4xc9-8hmq-j652\">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-4xc9-8hmq-j652</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/compare/v1.13.14...v1.13.15\">https://github.com/ethereum/go-ethereum/compare/v1.13.14...v1.13.15</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32972\">https://nvd.nist.gov/vuln/detail/CVE-2024-32972</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4xc9-8hmq-j652\">https://github.com/advisories/GHSA-4xc9-8hmq-j652</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4xc9-8hmq-j652",
            "title": "[github.com/ethereum/go-ethereum] go-ethereum vulnerable to DoS via malicious p2p message",
            "date_modified": "2024-05-06T19:19:25.000Z",
            "date_published": "2024-05-06T14:20:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4xc9-8hmq-j652"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in coredns. This issue could lead to invalid cache entries returning due to incorrectly implemented caching.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0874\">https://nvd.nist.gov/vuln/detail/CVE-2024-0874</a></li>\n<li><a href=\"https://github.com/coredns/coredns/issues/6186\">https://github.com/coredns/coredns/issues/6186</a></li>\n<li><a href=\"https://github.com/coredns/coredns/pull/6354\">https://github.com/coredns/coredns/pull/6354</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-0874\">https://access.redhat.com/security/cve/CVE-2024-0874</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2219234\">https://bugzilla.redhat.com/show_bug.cgi?id=2219234</a></li>\n<li><a href=\"https://github.com/coredns/coredns/commit/997c7f953962d47c242273f0e41398fdfb5b0151\">https://github.com/coredns/coredns/commit/997c7f953962d47c242273f0e41398fdfb5b0151</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9w6-wp3h-vq8g\">https://github.com/advisories/GHSA-m9w6-wp3h-vq8g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9w6-wp3h-vq8g",
            "title": "[github.com/coredns/coredns]  CoreDNS may return invalid cache entries",
            "date_modified": "2024-05-05T05:02:30.000Z",
            "date_published": "2024-04-25T18:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9w6-wp3h-vq8g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-ppj4-34rq-v8j9. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>GJSON &lt;= 1.9.2 allows attackers to cause a redos via crafted JSON input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-42248\">https://nvd.nist.gov/vuln/detail/CVE-2021-42248</a></li>\n<li><a href=\"https://github.com/tidwall/gjson/issues/237\">https://github.com/tidwall/gjson/issues/237</a></li>\n<li><a href=\"https://github.com/tidwall/gjson/commit/77a57fda87dca6d0d7d4627d512a630f89a91c96\">https://github.com/tidwall/gjson/commit/77a57fda87dca6d0d7d4627d512a630f89a91c96</a></li>\n<li><a href=\"https://github.com/tidwall/gjson/issues/236\">https://github.com/tidwall/gjson/issues/236</a></li>\n<li><a href=\"https://github.com/tidwall/gjson/commit/590010fdac311cc8990ef5c97448d4fec8f29944\">https://github.com/tidwall/gjson/commit/590010fdac311cc8990ef5c97448d4fec8f29944</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0265\">https://pkg.go.dev/vuln/GO-2021-0265</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c9gm-7rfj-8w5h\">https://github.com/advisories/GHSA-c9gm-7rfj-8w5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c9gm-7rfj-8w5h",
            "title": "[github.com/tidwall/gjson] Duplicate Advisory: ReDoS via crafted JSON input in GJSON",
            "date_modified": "2024-05-03T20:39:37.000Z",
            "date_published": "2022-05-25T00:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c9gm-7rfj-8w5h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a ClusterRole in piraeus-operator v2.5.0 and earlier which has been granted list secrets permission, which allows an attacker to impersonate the service account bound to this ClusterRole and use its high-risk privileges to list confidential information across the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33398\">https://nvd.nist.gov/vuln/detail/CVE-2024-33398</a></li>\n<li><a href=\"https://gist.github.com/HouqiyuA/d0c11fae5ba4789946ae33175d0f9edb\">https://gist.github.com/HouqiyuA/d0c11fae5ba4789946ae33175d0f9edb</a></li>\n<li><a href=\"https://github.com/HouqiyuA/k8s-rbac-poc\">https://github.com/HouqiyuA/k8s-rbac-poc</a></li>\n<li><a href=\"https://piraeus.io\">https://piraeus.io</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fg2-hvj9-832f\">https://github.com/advisories/GHSA-6fg2-hvj9-832f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fg2-hvj9-832f",
            "title": "[github.com/piraeusdatastore/piraeus-operator/v2] piraeus-operator allows attacker to impersonate service account",
            "date_modified": "2024-05-03T20:31:40.000Z",
            "date_published": "2024-05-03T18:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fg2-hvj9-832f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An authenticated user who has access to a game server is able to bypass the previously implemented access control (<a href=\"https://github.com/pterodactyl/wings/security/advisories/GHSA-6rg3-8h8x-5xfv\">https://github.com/pterodactyl/wings/security/advisories/GHSA-6rg3-8h8x-5xfv</a>) that prevents accessing internal endpoints of the node hosting Wings in the pull endpoint. This would allow malicious users to potentially access resources on local networks that would otherwise be inaccessible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Enabling the <code>api.disable_remote_download</code> option or updating to the latest version of Wings are the only known workarounds.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/pterodactyl/wings/commit/c152e36101aba45d8868a9a0eeb890995e8934b8\">https://github.com/pterodactyl/wings/commit/c152e36101aba45d8868a9a0eeb890995e8934b8</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pterodactyl/wings/security/advisories/GHSA-6rg3-8h8x-5xfv\">https://github.com/pterodactyl/wings/security/advisories/GHSA-6rg3-8h8x-5xfv</a></li>\n<li><a href=\"https://github.com/pterodactyl/wings/security/advisories/GHSA-qq22-jj8x-4wwv\">https://github.com/pterodactyl/wings/security/advisories/GHSA-qq22-jj8x-4wwv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34068\">https://nvd.nist.gov/vuln/detail/CVE-2024-34068</a></li>\n<li><a href=\"https://github.com/pterodactyl/wings/commit/c152e36101aba45d8868a9a0eeb890995e8934b8\">https://github.com/pterodactyl/wings/commit/c152e36101aba45d8868a9a0eeb890995e8934b8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq22-jj8x-4wwv\">https://github.com/advisories/GHSA-qq22-jj8x-4wwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq22-jj8x-4wwv",
            "title": "[github.com/pterodactyl/wings] Pterodactyl Wings vulnerable to Server-Side Request Forgery during remote file pull",
            "date_modified": "2024-05-03T20:30:01.000Z",
            "date_published": "2024-05-03T20:29:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq22-jj8x-4wwv"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}