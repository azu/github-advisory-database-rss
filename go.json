{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>\n<h3 id=\"details\">Details</h3>\n<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>\n<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>\n<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>\n<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>\n<p>GitHub authentication and external authentication are not impacted.</p>\n<h3 id=\"was-my-deployment-impacted\">Was my deployment impacted?</h3>\n<p>To check if your deployment was exploited:</p>\n<ul>\n<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>\n<li>Check the users list for unexpected users<ul>\n<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.8.4</li>\n<li>v2.7.3</li>\n<li>v2.6.1</li>\n</ul>\n<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/arcz\">https://github.com/arcz</a></li>\n<li><a href=\"https://www.trailofbits.com\">https://www.trailofbits.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>\n<a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27918\">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0\">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31\">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb\">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf",
            "title": "[github.com/coder/coder] Coder's OIDC authentication allows email with partially matching domain to register",
            "date_modified": "2024-03-04T21:28:54.000Z",
            "date_published": "2024-03-04T20:45:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>\n<h3 id=\"details\">Details</h3>\n<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>\n<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>\n<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>\n<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>\n<p>GitHub authentication and external authentication are not impacted.</p>\n<h3 id=\"was-my-deployment-impacted\">Was my deployment impacted?</h3>\n<p>To check if your deployment was exploited:</p>\n<ul>\n<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>\n<li>Check the users list for unexpected users<ul>\n<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.8.4</li>\n<li>v2.7.3</li>\n<li>v2.6.1</li>\n</ul>\n<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/arcz\">https://github.com/arcz</a></li>\n<li><a href=\"https://www.trailofbits.com\">https://www.trailofbits.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>\n<a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27918\">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0\">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31\">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb\">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf",
            "title": "[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register",
            "date_modified": "2024-03-04T21:28:54.000Z",
            "date_published": "2024-03-04T20:45:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>\n<h3 id=\"details\">Details</h3>\n<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>\n<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>\n<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>\n<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>\n<p>GitHub authentication and external authentication are not impacted.</p>\n<h3 id=\"was-my-deployment-impacted\">Was my deployment impacted?</h3>\n<p>To check if your deployment was exploited:</p>\n<ul>\n<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>\n<li>Check the users list for unexpected users<ul>\n<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.8.4</li>\n<li>v2.7.3</li>\n<li>v2.6.1</li>\n</ul>\n<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/arcz\">https://github.com/arcz</a></li>\n<li><a href=\"https://www.trailofbits.com\">https://www.trailofbits.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>\n<a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27918\">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0\">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31\">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb\">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf",
            "title": "[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register",
            "date_modified": "2024-03-04T21:28:54.000Z",
            "date_published": "2024-03-04T20:45:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>\n<h3 id=\"details\">Details</h3>\n<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>\n<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>\n<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>\n<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>\n<p>GitHub authentication and external authentication are not impacted.</p>\n<h3 id=\"was-my-deployment-impacted\">Was my deployment impacted?</h3>\n<p>To check if your deployment was exploited:</p>\n<ul>\n<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>\n<li>Check the users list for unexpected users<ul>\n<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.8.4</li>\n<li>v2.7.3</li>\n<li>v2.6.1</li>\n</ul>\n<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/arcz\">https://github.com/arcz</a></li>\n<li><a href=\"https://www.trailofbits.com\">https://www.trailofbits.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>\n<a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27918\">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0\">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31\">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb\">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c\">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cc2-r658-7xpf\">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf",
            "title": "[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register",
            "date_modified": "2024-03-04T21:28:54.000Z",
            "date_published": "2024-03-04T20:45:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cc2-r658-7xpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v2.3.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27304\">https://nvd.nist.gov/vuln/detail/CVE-2024-27304</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
            "title": "[github.com/jackc/pgproto3] pgproto3 SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-04T20:45:26.000Z",
            "date_published": "2024-03-04T20:45:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgproto3] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-04T20:43:50.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgx] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-04T20:43:50.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2 and v5.5.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8\">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv\">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>\n<li><a href=\"https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007\">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4\">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8\">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrww-27vc-gghv\">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
            "title": "[github.com/jackc/pgx] pgx SQL Injection via Protocol Message Size Overflow",
            "date_modified": "2024-03-04T20:43:50.000Z",
            "date_published": "2024-03-04T20:43:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrww-27vc-gghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Hello go-zero maintainer team, I would like to report a security concerning your CORS Filter feature.</p>\n<h3 id=\"details\">Details</h3>\n<p>Go-zero allows user to specify a <a href=\"https://github.com/zeromicro/go-zero/blob/master/rest/internal/cors/handlers.go\">CORS Filter</a> with a configurable allows param - which is an array of domains allowed in CORS policy.</p>\n<p>However, the <code>isOriginAllowed</code> uses <code>strings.HasSuffix</code> to check the origin, which leads to bypass via domain like <code>evil-victim.com</code></p>\n<pre><code class=\"language-go\">func isOriginAllowed(allows []string, origin string) bool {\n    for _, o := range allows {\n        if o == allOrigins {\n            return true\n        }\n\n        if strings.HasSuffix(origin, o) {\n            return true\n        }\n    }\n\n    return false\n}\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>Use code below as a PoC. Only requests from <code>safe.com</code> should bypass the CORS Filter</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"errors\"\n    \"net/http\"\n\n    \"github.com/zeromicro/go-zero/rest\"\n)\n\nfunc main() {\n    svr := rest.MustNewServer(rest.RestConf{Port: 8888}, rest.WithRouter(mockedRouter{}), rest.WithCors(\"safe.com\"))\n    svr.Start()\n}\n\ntype mockedRouter struct{}\n\n// some sensitive path\nfunc (m mockedRouter) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n    // check user's cookie\n    // ...\n    // return sensitive data\n    w.Write([]byte(\"social_id: 420101198008292930\"))\n}\n\nfunc (m mockedRouter) Handle(_, _ string, handler http.Handler) error {\n    return errors.New(\"foo\")\n}\n\nfunc (m mockedRouter) SetNotFoundHandler(_ http.Handler) {\n}\n\nfunc (m mockedRouter) SetNotAllowedHandler(_ http.Handler) {\n}\n</code></pre>\n<p>Send a request to localhost:8888 with <code>Origin:not-safe.com</code>\nYou can see the origin reflected in response, which bypass the CORS Filter\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/70683161/221365842-9d76a3a4-a79d-413a-85b7-06b50b0a7807.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability is capable of breaking CORS policy and thus allowing any page to make requests, retrieve data on behalf of other users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq\">https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq</a></li>\n<li><a href=\"https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db\">https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fgxv-gw55-r5fq\">https://github.com/advisories/GHSA-fgxv-gw55-r5fq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fgxv-gw55-r5fq",
            "title": "[github.com/zeromicro/go-zero] Authorization Bypass Through User-Controlled Key in go-zero",
            "date_modified": "2024-03-04T20:43:50.000Z",
            "date_published": "2024-03-04T20:42:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fgxv-gw55-r5fq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SQL injection can occur when all of the following conditions are met:</p>\n<ol>\n<li>The non-default simple protocol is used.</li>\n<li>A placeholder for a numeric value must be immediately preceded by a minus.</li>\n<li>There must be a second placeholder for a string value after the first placeholder; both\nmust be on the same line.</li>\n<li>Both parameter values must be user-controlled.</li>\n</ol>\n<p>e.g. </p>\n<p>Simple mode must be enabled:</p>\n<pre><code class=\"language-go\">// connection string includes \"prefer_simple_protocol=true\"\n// or\n// directly enabled in code\nconfig.ConnConfig.PreferSimpleProtocol = true\n</code></pre>\n<p>Parameterized query:</p>\n<pre><code class=\"language-sql\">SELECT * FROM example WHERE result=-$1 OR name=$2;\n</code></pre>\n<p>Parameter values:</p>\n<p><code>$1</code> =&gt; <code>-42</code>\n<code>$2</code> =&gt; <code>\"foo\\n 1 AND 1=0 UNION SELECT * FROM secrets; --\"</code></p>\n<p>Resulting query after preparation:</p>\n<pre><code class=\"language-sql\">SELECT * FROM example WHERE result=--42 OR name= 'foo\n1 AND 1=0 UNION SELECT * FROM secrets; --';\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is resolved in v4.18.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not use the simple protocol or do not place a minus directly before a placeholder.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p\">https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p</a></li>\n<li><a href=\"https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df\">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m7wr-2xf7-cm9p\">https://github.com/advisories/GHSA-m7wr-2xf7-cm9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m7wr-2xf7-cm9p",
            "title": "[github.com/jackc/pgx] pgx SQL Injection via Line Comment Creation",
            "date_modified": "2024-03-04T20:13:12.000Z",
            "date_published": "2024-03-04T20:13:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m7wr-2xf7-cm9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Allows an attacker to perform a DOS attack consisting of memory exhaustion on the host system.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes. Please upgrade to v1.2.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to restrict the path prefix to the \"GET\" method. As shown below</p>\n<pre><code>func main() {\n    r := mux.NewRouter()\n\n    r.PathPrefix(\"/swagger/\").Handler(httpSwagger.Handler(\n        httpSwagger.URL(\"http://localhost:1323/swagger/doc.json\"), //The url pointing to API definition\n        httpSwagger.DeepLinking(true),\n        httpSwagger.DocExpansion(\"none\"),\n        httpSwagger.DomID(\"#swagger-ui\"),\n    )).Methods(http.MethodGet)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Reporter dongguangli from <a href=\"https://www.huoxian.cn/\">https://www.huoxian.cn/</a> company</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/swaggo/http-swagger/issues\">http-swagger</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv\">https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24863\">https://nvd.nist.gov/vuln/detail/CVE-2022-24863</a></li>\n<li><a href=\"https://github.com/swaggo/http-swagger/pull/62\">https://github.com/swaggo/http-swagger/pull/62</a></li>\n<li><a href=\"https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e\">https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e</a></li>\n<li><a href=\"https://github.com/swaggo/http-swagger/releases/tag/v1.2.6\">https://github.com/swaggo/http-swagger/releases/tag/v1.2.6</a></li>\n<li><a href=\"https://cosmosofcyberspace.github.io/improper_http_method_leads_to_xss/poc.html\">https://cosmosofcyberspace.github.io/improper_http_method_leads_to_xss/poc.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xg75-q3q5-cqmv\">https://github.com/advisories/GHSA-xg75-q3q5-cqmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xg75-q3q5-cqmv",
            "title": "[github.com/swaggo/http-swagger] Denial of Service in http-swagger",
            "date_modified": "2024-03-04T18:35:28.000Z",
            "date_published": "2022-04-22T20:55:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xg75-q3q5-cqmv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Any SpiceDB cluster with any schema where a resource being checked has more than 65535 relationships for the same resource and subject type is affected by this problem.</p>\n<p>The issue may also lead to a panic rendering the server unavailable</p>\n<p>The following API methods are affected:</p>\n<ul>\n<li><a href=\"https://buf.build/authzed/api/docs/main:authzed.api.v1#authzed.api.v1.PermissionsService.CheckPermission\">CheckPermission</a></li>\n<li><a href=\"https://buf.build/authzed/api/docs/main:authzed.api.v1#authzed.api.v1.ExperimentalService.BulkCheckPermission\">BulkCheckPermission</a></li>\n<li><a href=\"https://buf.build/authzed/api/docs/main:authzed.api.v1#authzed.api.v1.PermissionsService.LookupSubjects\">LookupSubjects</a></li>\n</ul>\n<h4 id=\"impact\">Impact</h4>\n<p>Permission checks that are expected to be allowed are instead denied, and lookup subjects will return fewer subjects than expected.</p>\n<h4 id=\"workarounds\">Workarounds</h4>\n<p>There is no workaround other than making sure that the SpiceDB cluster does not have very wide relations, with the maximum value being the maximum value of an 16-bit unsigned integer</p>\n<h4 id=\"remediations\">Remediations</h4>\n<ul>\n<li>AuthZed Dedicated customers: No action. AuthZed has upgraded all deployments.</li>\n<li>AuthZed Serverless customers: No Action. AuthZed has upgraded all deployments.</li>\n<li>AuthZed Enterprise customers: Upgrade to <a href=\"https://github.com/authzed-enterprise/src/pkgs/container/spicedb-enterprise/182719614?tag=v1.29.2-hotfix-enterprise.v1.hotfix.v1\">v1.29.2-hotfix-enterprise.v1.hotfix.v1</a></li>\n<li>Open Source users: Upgrade to v1.29.2</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/authzed/spicedb/security/advisories/GHSA-h3m7-rqc4-7h9p\">https://github.com/authzed/spicedb/security/advisories/GHSA-h3m7-rqc4-7h9p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27101\">https://nvd.nist.gov/vuln/detail/CVE-2024-27101</a></li>\n<li><a href=\"https://github.com/authzed/spicedb/commit/ef443c442b96909694390324a99849b0407007fe\">https://github.com/authzed/spicedb/commit/ef443c442b96909694390324a99849b0407007fe</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3m7-rqc4-7h9p\">https://github.com/advisories/GHSA-h3m7-rqc4-7h9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3m7-rqc4-7h9p",
            "title": "[github.com/authzed/spicedb] Integer overflow in chunking helper causes dispatching to miss elements or panic",
            "date_modified": "2024-03-01T23:32:10.000Z",
            "date_published": "2024-03-01T23:32:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3m7-rqc4-7h9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The jose2go component before 1.6.0 for Go allows attackers to cause a denial of service (CPU consumption) via a large p2c (aka PBES2 Count) value.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50658\">https://nvd.nist.gov/vuln/detail/CVE-2023-50658</a></li>\n<li><a href=\"https://github.com/dvsekhvalnov/jose2go/commit/a4584e9dd7128608fedbc67892eba9697f0d5317\">https://github.com/dvsekhvalnov/jose2go/commit/a4584e9dd7128608fedbc67892eba9697f0d5317</a></li>\n<li><a href=\"https://github.com/dvsekhvalnov/jose2go/compare/v1.5.0...v1.6.0\">https://github.com/dvsekhvalnov/jose2go/compare/v1.5.0...v1.6.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6294-6rgp-fr7r\">https://github.com/advisories/GHSA-6294-6rgp-fr7r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6294-6rgp-fr7r",
            "title": "[github.com/dvsekhvalnov/jose2go] jose2go vulnerable to denial of service via large p2c value",
            "date_modified": "2024-03-01T16:56:03.000Z",
            "date_published": "2024-02-29T03:33:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6294-6rgp-fr7r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker who controls or compromises a registry can make the registry serve an infinite number of signatures for the artifact, causing a denial of service to the host machine running <code>notation verify</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed in the release <a href=\"https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6\">v1.0.0-rc.6</a>. Users should upgrade their notation packages to <a href=\"https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6\">v1.0.0-rc.6</a> or above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>User should use secure and trusted container registries.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The <code>notation</code> project would like to thank Adam Korczynski (@AdamKorcz) for responsibly disclosing the issue found during an security audit (facilitated by OSTIF and sponsored by CNCF) and Shiwei Zhang (@shizhMSFT) for root cause analysis.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/notaryproject/notation/security/advisories/GHSA-9m3v-v4r5-ppx7\">https://github.com/notaryproject/notation/security/advisories/GHSA-9m3v-v4r5-ppx7</a></li>\n<li><a href=\"https://github.com/notaryproject/notation/commit/ed22fde52f6d70ae0b53521bd28c9ccafa868c24\">https://github.com/notaryproject/notation/commit/ed22fde52f6d70ae0b53521bd28c9ccafa868c24</a></li>\n<li><a href=\"https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6\">https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33957\">https://nvd.nist.gov/vuln/detail/CVE-2023-33957</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9m3v-v4r5-ppx7\">https://github.com/advisories/GHSA-9m3v-v4r5-ppx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9m3v-v4r5-ppx7",
            "title": "[github.com/notaryproject/notation] Notation vulnerable to denial of service from high number of artifact signatures",
            "date_modified": "2024-03-01T15:18:49.000Z",
            "date_published": "2023-06-06T16:43:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9m3v-v4r5-ppx7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Macaron csrf and classified as problematic. Affected by this issue is some unknown functionality of the file <code>csrf.go</code>. The manipulation of the argument Generate leads to sensitive cookie without secure attribute. The attack may be launched remotely. The name of the patch is dadd1711a617000b70e5e408a76531b73187031c. It is recommended to apply a patch to fix this issue. VDB-217058 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25060\">https://nvd.nist.gov/vuln/detail/CVE-2018-25060</a></li>\n<li><a href=\"https://github.com/go-macaron/csrf/pull/7\">https://github.com/go-macaron/csrf/pull/7</a></li>\n<li><a href=\"https://github.com/go-macaron/csrf/commit/dadd1711a617000b70e5e408a76531b73187031c\">https://github.com/go-macaron/csrf/commit/dadd1711a617000b70e5e408a76531b73187031c</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217058\">https://vuldb.com/?ctiid.217058</a></li>\n<li><a href=\"https://vuldb.com/?id.217058\">https://vuldb.com/?id.217058</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1213\">https://pkg.go.dev/vuln/GO-2022-1213</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhxg-px5h-jc32\">https://github.com/advisories/GHSA-hhxg-px5h-jc32</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhxg-px5h-jc32",
            "title": "[github.com/go-macaron/csrf] Macaron csrf missing encryption and has sensitive cookies in HTTP session without secure attribute",
            "date_modified": "2024-03-01T14:24:39.000Z",
            "date_published": "2022-12-30T12:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhxg-px5h-jc32"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in docconv up to 1.2.0 and classified as problematic. This issue affects the function <code>ConvertDocx/ConvertODT/ConvertPages/ConvertXML/XMLToText</code>. The manipulation leads to uncontrolled memory allocation. The attack may be initiated remotely. Upgrading to version 1.2.1 can address this issue. The name of the patch is 42bcff666855ab978e67a9041d0cdea552f20301. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216779.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4741\">https://nvd.nist.gov/vuln/detail/CVE-2022-4741</a></li>\n<li><a href=\"https://github.com/sajari/docconv/pull/111\">https://github.com/sajari/docconv/pull/111</a></li>\n<li><a href=\"https://github.com/sajari/docconv/commit/42bcff666855ab978e67a9041d0cdea552f20301\">https://github.com/sajari/docconv/commit/42bcff666855ab978e67a9041d0cdea552f20301</a></li>\n<li><a href=\"https://github.com/sajari/docconv/releases/tag/v1.2.1\">https://github.com/sajari/docconv/releases/tag/v1.2.1</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216779\">https://vuldb.com/?ctiid.216779</a></li>\n<li><a href=\"https://vuldb.com/?id.216779\">https://vuldb.com/?id.216779</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1188\">https://pkg.go.dev/vuln/GO-2022-1188</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvx2-59g8-8hph\">https://github.com/advisories/GHSA-qvx2-59g8-8hph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvx2-59g8-8hph",
            "title": "[code.sajari.com/docconv] docconv vulnerable to Memory Allocation with Excessive Size Value",
            "date_modified": "2024-03-01T14:21:09.000Z",
            "date_published": "2022-12-25T21:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvx2-59g8-8hph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in docconv up to 1.2.0 and classified as problematic. This issue affects the function <code>ConvertDocx/ConvertODT/ConvertPages/ConvertXML/XMLToText</code>. The manipulation leads to uncontrolled memory allocation. The attack may be initiated remotely. Upgrading to version 1.2.1 can address this issue. The name of the patch is 42bcff666855ab978e67a9041d0cdea552f20301. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216779.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4741\">https://nvd.nist.gov/vuln/detail/CVE-2022-4741</a></li>\n<li><a href=\"https://github.com/sajari/docconv/pull/111\">https://github.com/sajari/docconv/pull/111</a></li>\n<li><a href=\"https://github.com/sajari/docconv/commit/42bcff666855ab978e67a9041d0cdea552f20301\">https://github.com/sajari/docconv/commit/42bcff666855ab978e67a9041d0cdea552f20301</a></li>\n<li><a href=\"https://github.com/sajari/docconv/releases/tag/v1.2.1\">https://github.com/sajari/docconv/releases/tag/v1.2.1</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216779\">https://vuldb.com/?ctiid.216779</a></li>\n<li><a href=\"https://vuldb.com/?id.216779\">https://vuldb.com/?id.216779</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1188\">https://pkg.go.dev/vuln/GO-2022-1188</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvx2-59g8-8hph\">https://github.com/advisories/GHSA-qvx2-59g8-8hph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvx2-59g8-8hph",
            "title": "[github.com/sajari/docconv] docconv vulnerable to Memory Allocation with Excessive Size Value",
            "date_modified": "2024-03-01T14:21:09.000Z",
            "date_published": "2022-12-25T21:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvx2-59g8-8hph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, 9.3.0, and 9.4.x before 9.4.2 fail to limit the number of role names requested from the API, allowing an authenticated attacker to cause the server to run out of memory and crash by issuing an unusually large HTTP request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1953\">https://nvd.nist.gov/vuln/detail/CVE-2024-1953</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm9m-57jr-4pxh\">https://github.com/advisories/GHSA-vm9m-57jr-4pxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost fails to limit the number of role names",
            "date_modified": "2024-02-29T22:49:33.000Z",
            "date_published": "2024-02-29T12:31:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, 9.3.0, and 9.4.x before 9.4.2 fail to limit the number of role names requested from the API, allowing an authenticated attacker to cause the server to run out of memory and crash by issuing an unusually large HTTP request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1953\">https://nvd.nist.gov/vuln/detail/CVE-2024-1953</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm9m-57jr-4pxh\">https://github.com/advisories/GHSA-vm9m-57jr-4pxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost fails to limit the number of role names",
            "date_modified": "2024-02-29T22:49:33.000Z",
            "date_published": "2024-02-29T12:31:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 8.1.x before 8.1.9, 9.2.x before 9.2.5, 9.3.0, and 9.4.x before 9.4.2 fail to limit the number of role names requested from the API, allowing an authenticated attacker to cause the server to run out of memory and crash by issuing an unusually large HTTP request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1953\">https://nvd.nist.gov/vuln/detail/CVE-2024-1953</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm9m-57jr-4pxh\">https://github.com/advisories/GHSA-vm9m-57jr-4pxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost fails to limit the number of role names",
            "date_modified": "2024-02-29T22:49:33.000Z",
            "date_published": "2024-02-29T12:31:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm9m-57jr-4pxh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}