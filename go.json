{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>An incorrect sysctls validation vulnerability was found in CRI-O 1.18 and earlier. The sysctls from the list of \"safe\" sysctls specified for the cluster will be applied to the host if an attacker is able to create a pod with a hostIPC and hostNetwork kernel namespace.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0532\">https://nvd.nist.gov/vuln/detail/CVE-2022-0532</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2051730\">https://bugzilla.redhat.com/show_bug.cgi?id=2051730</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls\">https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/pull/5610\">https://github.com/cri-o/cri-o/pull/5610</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/releases/tag/v1.23.1\">https://github.com/cri-o/cri-o/releases/tag/v1.23.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqmc-79gx-7g8p\">https://github.com/advisories/GHSA-jqmc-79gx-7g8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p",
            "title": "[github.com/cri-o/cri-o] Incorrect Permission Assignment for Critical Resource in CRI-O",
            "date_modified": "2022-02-23T22:00:52.000Z",
            "date_published": "2022-02-11T00:00:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqmc-79gx-7g8p"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If no TLS configuration is provided by the user, the websocket package constructs its own TLS configuration using recommended defaults. When looking up a WSS endpoint using the DNS TXT record method described in <a href=\"https://xmpp.org/extensions/xep-0156.html\">XEP-0156: Discovering Alternative XMPP Connection Methods</a> the ServerName field was incorrectly being set to the name of the server returned by the TXT record request, not the name of the initial server we were attempting to connect to. This means that any attacker that can spoof a DNS record (ie. in the absence of DNSSEC, DNS-over-TLS, DNS-over-HTTPS, or similar technologies) could redirect the user to a server of their choosing and as long as it had a valid TLS certificate for itself the connection would succeed, resulting in a MITM situation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>All users should upgrade to v0.21.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around the issue, manually specify a TLS configuration with the correct hostname.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://mellium.im/cve/cve-2022-24968/\">https://mellium.im/cve/cve-2022-24968/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24968\">https://nvd.nist.gov/vuln/detail/CVE-2022-24968</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out on XMPP to <a href=\"xmpp:sam@samwhited.com?msg\">sam@samwhited.com</a></li>\n<li>Email us at <a href=\"mailto:sam@samwhited.com\">sam@samwhited.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mellium/xmpp/security/advisories/GHSA-h289-x5wc-xcv8\">https://github.com/mellium/xmpp/security/advisories/GHSA-h289-x5wc-xcv8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h289-x5wc-xcv8\">https://github.com/advisories/GHSA-h289-x5wc-xcv8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h289-x5wc-xcv8",
            "title": "[mellium.im/xmpp/websocket] Improper Validation of Certificate with Host Mismatch in mellium.im/xmpp/websocket",
            "date_modified": "2022-02-17T14:16:34.000Z",
            "date_published": "2022-02-16T22:56:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h289-x5wc-xcv8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>People that configure mTLS between Traefik and clients.</p>\n<p>For a request, the TLS configuration choice can be different than the router choice, which implies the use of a wrong TLS configuration.</p>\n<ul>\n<li><p>When sending a request using FQDN handled by a router configured with a dedicated TLS configuration, the TLS configuration falls back to the default configuration that might not correspond to the configured one.</p>\n</li>\n<li><p>If the CNAME flattening is enabled, the selected TLS configuration is the SNI one and the routing uses the CNAME value, so this can skip the expected TLS configuration.</p>\n</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Traefik v2.6.x: <a href=\"https://github.com/traefik/traefik/releases/tag/v2.6.1\">https://github.com/traefik/traefik/releases/tag/v2.6.1</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Add the FDQN to the host rule:</p>\n<p>Example:</p>\n<pre><code class=\"language-yml\">  whoami:\n    image: traefik/whoami:v1.7.1\n    labels:\n      traefik.http.routers.whoami.rule: Host(`whoami.example.com`, `whoami.example.com.`)\n      traefik.http.routers.whoami.tls: true\n      traefik.http.routers.whoami.tls.options: mtls@file\n</code></pre>\n<p>There is no workaround if the CNAME flattening is enabled.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-hrhx-6h34-j5hc\">https://github.com/traefik/traefik/security/advisories/GHSA-hrhx-6h34-j5hc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23632\">https://nvd.nist.gov/vuln/detail/CVE-2022-23632</a></li>\n<li><a href=\"https://github.com/traefik/traefik/pull/8764\">https://github.com/traefik/traefik/pull/8764</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.6.1\">https://github.com/traefik/traefik/releases/tag/v2.6.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrhx-6h34-j5hc\">https://github.com/advisories/GHSA-hrhx-6h34-j5hc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrhx-6h34-j5hc",
            "title": "[github.com/traefik/traefik/v2] Skip the router TLS configuration when the host header is an FQDN",
            "date_modified": "2022-02-23T21:52:28.000Z",
            "date_published": "2022-02-16T22:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrhx-6h34-j5hc"
            }
        },
        {
            "content_html": "<p>This is the Go client library for Prometheus. It has two separate parts, one for instrumenting application code, and one for creating clients that talk to the Prometheus HTTP API. client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>HTTP server susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods.</p>\n<h3 id=\"affected-configuration\">Affected Configuration</h3>\n<p>In order to be affected, an instrumented software must</p>\n<ul>\n<li>Use any of <code>promhttp.InstrumentHandler*</code> middleware except <code>RequestsInFlight</code>.</li>\n<li>Do not filter any specific methods (e.g GET) before middleware.</li>\n<li>Pass metric with <code>method</code> label name to our middleware.</li>\n<li>Not have any firewall/LB/proxy that filters away requests with unknown <code>method</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/962\">https://github.com/prometheus/client_golang/pull/962</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/987\">https://github.com/prometheus/client_golang/pull/987</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade to <a href=\"https://github.com/prometheus/client_golang/releases/tag/v1.11.1\">v1.11.1 or above</a>, in order to stop being affected you can:</p>\n<ul>\n<li>Remove <code>method</code> label name from counter/gauge you use in the InstrumentHandler.</li>\n<li>Turn off affected promhttp handlers.</li>\n<li>Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.</li>\n<li>Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/prometheus/client_golang\">https://github.com/prometheus/client_golang</a></li>\n<li>Email us at <code>prometheus-team@googlegroups.com</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21698\">https://nvd.nist.gov/vuln/detail/CVE-2022-21698</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/962\">https://github.com/prometheus/client_golang/pull/962</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/pull/987\">https://github.com/prometheus/client_golang/pull/987</a></li>\n<li><a href=\"https://github.com/prometheus/client_golang/releases/tag/v1.11.1\">https://github.com/prometheus/client_golang/releases/tag/v1.11.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg3q-j54f-5p7p\">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cg3q-j54f-5p7p",
            "title": "[github.com/prometheus/client_golang/prometheus/promhttp] InstrumentHandler* HTTP middleware prone to DoS through method label cardinality",
            "date_modified": "2022-02-17T14:09:40.000Z",
            "date_published": "2022-02-16T22:26:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cg3q-j54f-5p7p"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Under certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.</p>\n<p><strong>All of these</strong> three conditions have to be met to create an adverse effect:</p>\n<ol>\n<li>An AST of Rego had to be <strong>created programmatically</strong> such that it ends up containing terms without a location (such as wildcard variables).</li>\n<li>The AST had to be <strong>pretty-printed</strong> using the <code>github.com/open-policy-agent/opa/format</code> package.</li>\n<li>The result of the pretty-printing had to be <strong>parsed and evaluated again</strong> via an OPA instance using the bundles, or the Golang packages.</li>\n</ol>\n<p>If any of these three conditions are not met, you are not affected.</p>\n<p>Notably, all three would be true if using <strong>optimized bundles</strong>, i.e. bundles created with <code>opa build -O=1</code> or higher.\nIn that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).</p>\n<h4 id=\"example\">Example</h4>\n<p>For example, the process outlined above could turn \nthis rule</p>\n<pre><code class=\"language-rego\">hello {\n    [\"foo\", _] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>into</p>\n<pre><code class=\"language-rego\">hello {\n    [_, \"foo\"] = split(input.resource, \"/\")\n}\n</code></pre>\n<p>with an input of</p>\n<pre><code class=\"language-rego\">{\n    \"resource\": \"foo/bar\"\n}\n</code></pre>\n<p>the result would change from</p>\n<pre><code class=\"language-rego\">{\n    \"hello\": true\n}\n</code></pre>\n<p>to (no default value of hello)</p>\n<pre><code class=\"language-rego\">{}\n</code></pre>\n<p>The severity was determined to be <em>moderate</em> because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in version 0.37.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Disabling optimization when creating bundles.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Introduced in <a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li>Backported for the 0.33.1 patch release: <a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li>Fixed by <a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a> and <a href=\"https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055\">https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego\">Community Discussions</a></li>\n<li>Ask in Slack: <a href=\"https://slack.openpolicyagent.org/\">https://slack.openpolicyagent.org/</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/pull/3851\">https://github.com/open-policy-agent/opa/pull/3851</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239\">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a></li>\n<li><a href=\"https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23628\">https://nvd.nist.gov/vuln/detail/CVE-2022-23628</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hcw3-j74m-qc58\">https://github.com/advisories/GHSA-hcw3-j74m-qc58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58",
            "title": "[github.com/open-policy-agent/opa] Incorrect Calculation in github.com/open-policy-agent/opa",
            "date_modified": "2022-02-23T22:04:26.000Z",
            "date_published": "2022-02-09T22:17:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hcw3-j74m-qc58"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt/v2] Import token permissions checking not enforced",
            "date_modified": "2022-02-15T00:42:57.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            }
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt] Import token permissions checking not enforced",
            "date_modified": "2022-02-15T00:42:57.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            }
        },
        {
            "content_html": "<p>Cross Site Scripting (XSS) vulnerability exists in Gitea before 1.5.1 via the repository settings inside the external wiki/issue tracker URL field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45329\">https://nvd.nist.gov/vuln/detail/CVE-2021-45329</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/4710\">https://github.com/go-gitea/gitea/pull/4710</a></li>\n<li><a href=\"https://blog.gitea.io/2018/09/gitea-1.5.1-is-released/\">https://blog.gitea.io/2018/09/gitea-1.5.1-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3gq-wxqf-q4gh\">https://github.com/advisories/GHSA-r3gq-wxqf-q4gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3gq-wxqf-q4gh",
            "title": "[github.com/go-gitea/gitea] Cross-site Scripting in Gitea",
            "date_modified": "2022-02-15T00:18:14.000Z",
            "date_published": "2022-02-10T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3gq-wxqf-q4gh"
            }
        },
        {
            "content_html": "<p>Gitea is a project to help users set up a self-hosted Git service. Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. This could allow a remote malicious user to execute arbitrary code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45327\">https://nvd.nist.gov/vuln/detail/CVE-2021-45327</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10462\">https://github.com/go-gitea/gitea/pull/10462</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10465\">https://github.com/go-gitea/gitea/pull/10465</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/10582\">https://github.com/go-gitea/gitea/pull/10582</a></li>\n<li><a href=\"https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/\">https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrpg-35hw-m4p9\">https://github.com/advisories/GHSA-jrpg-35hw-m4p9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrpg-35hw-m4p9",
            "title": "[github.com/go-gitea/gitea] Capture-replay in Gitea",
            "date_modified": "2022-02-15T00:17:58.000Z",
            "date_published": "2022-02-09T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrpg-35hw-m4p9"
            }
        },
        {
            "content_html": "<p>Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45326\">https://nvd.nist.gov/vuln/detail/CVE-2021-45326</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/issues/4838\">https://github.com/go-gitea/gitea/issues/4838</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/4840\">https://github.com/go-gitea/gitea/pull/4840</a></li>\n<li><a href=\"https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/\">https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wp3-8q92-mh8w\">https://github.com/advisories/GHSA-4wp3-8q92-mh8w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wp3-8q92-mh8w",
            "title": "[github.com/go-gitea/gitea] Cross Site Request Forgery in Gitea",
            "date_modified": "2022-02-15T00:18:10.000Z",
            "date_published": "2022-02-09T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wp3-8q92-mh8w"
            }
        },
        {
            "content_html": "<p>Gitea before 1.4.3 is affected by URL Redirection to Untrusted Site ('Open Redirect') via internal URLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45328\">https://nvd.nist.gov/vuln/detail/CVE-2021-45328</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/issues/4332\">https://github.com/go-gitea/gitea/issues/4332</a></li>\n<li><a href=\"https://blog.gitea.io/2018/06/release-of-1.4.3/\">https://blog.gitea.io/2018/06/release-of-1.4.3/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36h2-95gj-w488\">https://github.com/advisories/GHSA-36h2-95gj-w488</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36h2-95gj-w488",
            "title": "[github.com/go-gitea/gitea] Open redirect in Gitea",
            "date_modified": "2022-02-15T00:18:11.000Z",
            "date_published": "2022-02-09T00:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36h2-95gj-w488"
            }
        },
        {
            "content_html": "<p>In Apache Traffic Control Traffic Ops prior to 6.1.0 or 5.1.6, an unprivileged user who can reach Traffic Ops over HTTPS can send a specially-crafted POST request to /user/login/oauth to scan a port of a server that Traffic Ops can reach.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23206\">https://nvd.nist.gov/vuln/detail/CVE-2022-23206</a></li>\n<li><a href=\"https://lists.apache.org/thread/lsrd2mqj29vrvwsh8g0d560vvz8n126f\">https://lists.apache.org/thread/lsrd2mqj29vrvwsh8g0d560vvz8n126f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wp47-9r3h-xfgq\">https://github.com/advisories/GHSA-wp47-9r3h-xfgq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wp47-9r3h-xfgq",
            "title": "[github.com/apache/trafficcontrol] Server-Side Request Forgery in Apache Traffic Control",
            "date_modified": "2022-02-15T00:18:47.000Z",
            "date_published": "2022-02-07T00:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wp47-9r3h-xfgq"
            }
        },
        {
            "content_html": "<p>In Apache Traffic Control Traffic Ops prior to 6.1.0 or 5.1.6, an unprivileged user who can reach Traffic Ops over HTTPS can send a specially-crafted POST request to /user/login/oauth to scan a port of a server that Traffic Ops can reach.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23206\">https://nvd.nist.gov/vuln/detail/CVE-2022-23206</a></li>\n<li><a href=\"https://lists.apache.org/thread/lsrd2mqj29vrvwsh8g0d560vvz8n126f\">https://lists.apache.org/thread/lsrd2mqj29vrvwsh8g0d560vvz8n126f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wp47-9r3h-xfgq\">https://github.com/advisories/GHSA-wp47-9r3h-xfgq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wp47-9r3h-xfgq",
            "title": "[github.com/apache/trafficcontrol] Server-Side Request Forgery in Apache Traffic Control",
            "date_modified": "2022-02-15T00:18:47.000Z",
            "date_published": "2022-02-07T00:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wp47-9r3h-xfgq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In the case that a malicious TAL file is parsed pointing to a repository that provides a malicious ROA file which octorpki downloads, it is possible to bypass the current directory traversal mitigation to allow writing outside of the current directory. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>No patch release has been made</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cloudflare/cfrpki/security/advisories/GHSA-8459-6rc9-8vf8\">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-8459-6rc9-8vf8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8459-6rc9-8vf8\">https://github.com/advisories/GHSA-8459-6rc9-8vf8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8459-6rc9-8vf8",
            "title": "[github.com/cloudflare/cfrpki/cmd/octorpki] Path traversal in github.com/cloudflare/cfrpki/cmd/octorpki",
            "date_modified": "2022-02-15T00:14:52.000Z",
            "date_published": "2022-02-14T22:52:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8459-6rc9-8vf8"
            }
        },
        {
            "content_html": "<p>In Mellium mellium.im/xmpp through 0.21.0, an attacker capable of spoofing DNS TXT records can redirect a WebSocket connection request to a server under their control without causing TLS certificate verification to fail. This occurs because the wrong host name is selected during this verification.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24968\">https://nvd.nist.gov/vuln/detail/CVE-2022-24968</a></li>\n<li><a href=\"https://mellium.im/cve/cve-2022-24968/\">https://mellium.im/cve/cve-2022-24968/</a></li>\n<li><a href=\"https://mellium.im/xmpp/\">https://mellium.im/xmpp/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m658-p24x-p74r\">https://github.com/advisories/GHSA-m658-p24x-p74r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m658-p24x-p74r",
            "title": "[mellium.im/xmpp] TLS certificate validation error in Mellium",
            "date_modified": "2022-02-15T00:17:04.000Z",
            "date_published": "2022-02-12T00:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m658-p24x-p74r"
            }
        },
        {
            "content_html": "<p>Gitea is a project to help users set up a self-hosted Git service. Server Side Request Forgery (SSRF) vulnerability exists in Gitea before 1.7.0 using the OpenID URL. Gitea can leak sensitive information about the local network through the error provided by the UI. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45325\">https://nvd.nist.gov/vuln/detail/CVE-2021-45325</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/5705\">https://github.com/go-gitea/gitea/pull/5705</a></li>\n<li><a href=\"https://blog.gitea.io/2019/01/gitea-1.7.0-is-released/\">https://blog.gitea.io/2019/01/gitea-1.7.0-is-released/</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/issues/4973\">https://github.com/go-gitea/gitea/issues/4973</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/5712\">https://github.com/go-gitea/gitea/pull/5712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8h8p-x289-vvqr\">https://github.com/advisories/GHSA-8h8p-x289-vvqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8h8p-x289-vvqr",
            "title": "[github.com/go-gitea/gitea] Gitea displaying raw OpenID error in UI",
            "date_modified": "2022-02-15T00:18:07.000Z",
            "date_published": "2022-02-09T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8h8p-x289-vvqr"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to issues in Go's standard library XML parsing, a valid SAML response may be mutated by an attacker to modify the trusted document. This can result in allowing unverified logins from a SAML IdP.</p>\n<p>Users that configure Fleet with SSO login may be vulnerable to this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is patched in 3.5.1 using <a href=\"https://github.com/mattermost/xml-roundtrip-validator\">https://github.com/mattermost/xml-roundtrip-validator</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrade to 3.5.1 is not possible, users should disable SSO authentication in Fleet.</p>\n<h3 id=\"references\">References</h3>\n<p>See <a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/</a> for more information about the underlying vulnerabilities.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-w3wf-cfx3-6gcx\">https://github.com/fleetdm/fleet/security/advisories/GHSA-w3wf-cfx3-6gcx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26276\">https://nvd.nist.gov/vuln/detail/CVE-2020-26276</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/57812a532e5f749c8e18c6f6a652eca65c083607\">https://github.com/fleetdm/fleet/commit/57812a532e5f749c8e18c6f6a652eca65c083607</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/blob/master/CHANGELOG.md#fleet-351-dec-14-2020\">https://github.com/fleetdm/fleet/blob/master/CHANGELOG.md#fleet-351-dec-14-2020</a></li>\n<li><a href=\"https://github.com/mattermost/xml-roundtrip-validator\">https://github.com/mattermost/xml-roundtrip-validator</a></li>\n<li><a href=\"https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities\">https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w3wf-cfx3-6gcx\">https://github.com/advisories/GHSA-w3wf-cfx3-6gcx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w3wf-cfx3-6gcx",
            "title": "[github.com/fleetdm/fleet/v4] SAML authentication vulnerability due to stdlib XML parsing",
            "date_modified": "2022-02-11T23:59:21.000Z",
            "date_published": "2022-02-11T23:59:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w3wf-cfx3-6gcx"
            }
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS account system has an Operator trusted by the servers, which signs Accounts, and each Account can then create and sign Users within their account.  The Operator should be able to safely issue Accounts to other entities which it does not fully trust.</p>\n<p>A malicious Account could create and sign a User JWT with a state not created by the normal tooling, such that decoding by the NATS JWT library (written in Go) would attempt a nil dereference, aborting execution.</p>\n<p>The NATS Server is known to be impacted by this.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<h4 id=\"jwt-library-1\">JWT library</h4>\n<ul>\n<li>Programs would nil dereference and panic, aborting execution by default.</li>\n</ul>\n<h4 id=\"nats-server-1\">NATS server</h4>\n<ul>\n<li>Denial of Service caused by process termination</li>\n</ul>\n<h2 id=\"workaround\">Workaround</h2>\n<p>If your NATS servers do not trust any accounts which are managed by untrusted entities, then malformed User credentials are unlikely to be encountered.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-h2fg-54x9-5qhq\">https://github.com/nats-io/jwt/security/advisories/GHSA-h2fg-54x9-5qhq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26521\">https://nvd.nist.gov/vuln/detail/CVE-2020-26521</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/9ff8bcde2e46009e98bd9e88f598af355f62c168\">https://github.com/nats-io/nats-server/commit/9ff8bcde2e46009e98bd9e88f598af355f62c168</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26521.txt\">https://advisories.nats.io/CVE/CVE-2020-26521.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/11/02/2\">http://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h2fg-54x9-5qhq\">https://github.com/advisories/GHSA-h2fg-54x9-5qhq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h2fg-54x9-5qhq",
            "title": "[github.com/nats-io/nats-server/v2] Nil dereference in NATS JWT, DoS of nats-server",
            "date_modified": "2022-02-11T23:43:22.000Z",
            "date_published": "2022-02-11T23:43:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h2fg-54x9-5qhq"
            }
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26892\">https://nvd.nist.gov/vuln/detail/CVE-2020-26892</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f\">https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/11/02/2\">https://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/advisories/GHSA-4w5x-x539-ppf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5",
            "title": "[github.com/nats-io/nats-server/v2] Incorrect handling of credential expiry by NATS Server",
            "date_modified": "2022-02-11T23:42:49.000Z",
            "date_published": "2022-02-11T23:42:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>On Windows, if Git LFS operates on a malicious repository with a <code>git.bat</code> or <code>git.exe</code> file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code.  This does not affect Unix systems.</p>\n<p>This occurs because on Windows, Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This version should be patched in v2.12.1, which will be released in coordination with this security advisory.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Other than avoiding untrusted repositories, there is no workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Start a discussion in <a href=\"https://github.com/git-lfs/git-lfs/discussions\">the Git LFS discussion page</a>.</li>\n<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m\">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-27955\">https://nvd.nist.gov/vuln/detail/CVE-2020-27955</a></li>\n<li><a href=\"https://github.com/git-lfs/git-lfs/releases\">https://github.com/git-lfs/git-lfs/releases</a></li>\n<li><a href=\"https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html\">https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2020/Nov/1\">http://seclists.org/fulldisclosure/2020/Nov/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4g4p-42wc-9f3m\">https://github.com/advisories/GHSA-4g4p-42wc-9f3m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4g4p-42wc-9f3m",
            "title": "[github.com/git-lfs/git-lfs] Git LFS can execute a Git binary from the current directory",
            "date_modified": "2022-02-11T23:39:28.000Z",
            "date_published": "2022-02-11T23:39:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4g4p-42wc-9f3m"
            }
        }
    ]
}