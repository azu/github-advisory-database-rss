{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Web Sockets do not execute any AuthenticateMethod methods which may be set, leading to a nil pointer dereference if the returned UserData pointer is assumed to be non-nil, or authentication bypass. This issue only affects WebSockets with an AuthenticateMethod hook. Request handlers that do not explicitly use WebSockets are not vulnerable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4236\">https://nvd.nist.gov/vuln/detail/CVE-2021-4236</a></li>\n<li><a href=\"https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f\">https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0107\">https://pkg.go.dev/vuln/GO-2021-0107</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jpgg-cp2x-qrw3\">https://github.com/advisories/GHSA-jpgg-cp2x-qrw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jpgg-cp2x-qrw3",
            "title": "[github.com/ecnepsnai/web] ecnepsnai/web vulnerable to Uncontrolled Resource Consumption",
            "date_modified": "2023-08-29T18:58:37.000Z",
            "date_published": "2022-12-28T00:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jpgg-cp2x-qrw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer, via the <code>snap/1</code> protocol. The crash can be triggered by sending a malicious <code>snap/1</code> <code>GetTrieNodes</code> package. </p>\n<h3 id=\"details\">Details</h3>\n<p>On September 21, 2021, geth-team member Gary Rong (@rjl493456442) found a way to crash the snap request handler . \nBy using this vulnerability, a peer connected on the <code>snap/1</code> protocol could cause a vulnerable node to crash with a <code>panic</code>.</p>\n<p>In the <code>trie.TryGetNode</code> implementation, if the requested path is reached, the associated node will be returned. However the nilness is\nnot checked there.</p>\n<pre><code class=\"language-golang\">func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {\n    // If we reached the requested path, return the current node\n    if pos &gt;= len(path) {\n        // Although we most probably have the original node expanded, encoding\n        // that into consensus form can be nasty (needs to cascade down) and\n        // time consuming. Instead, just pull the hash up from disk directly.\n        var hash hashNode\n        if node, ok := origNode.(hashNode); ok {\n            hash = node\n        } else {\n            hash, _ = origNode.cache()\n        }\n</code></pre>\n<p>More specifically the <code>origNode</code> can be nil(e.g. the child of fullnode) and system can panic at line <code>hash, _ = origNode.cache()</code>. </p>\n<p>When investigating this, @holiman tried to find it via fuzzing, which uncovered a second crasher, also related to the snap <code>GetTrieNodes</code> package. If the caller requests a storage trie:</p>\n<pre><code class=\"language-golang\">                // Storage slots requested, open the storage trie and retrieve from there\n                account, err := snap.Account(common.BytesToHash(pathset[0]))\n                loads++ // always account database reads, even for failures\n                if account == nil {\n                    break\n                }\n                stTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)\n</code></pre>\n<p>The code assumes that <code>snap.Account</code> returns <em>either</em> a non-nil response unless <code>error</code> is also provided. This is however not the case, since <code>snap.Account</code> can return <code>nil, nil</code>. </p>\n<h3 id=\"patches\">Patches</h3>\n<pre><code class=\"language-diff\">--- a/eth/protocols/snap/handler.go\n+++ b/eth/protocols/snap/handler.go\n@@ -469,7 +469,7 @@ func handleMessage(backend Backend, peer *Peer) error {\n                 // Storage slots requested, open the storage trie and retrieve from there\n                 account, err := snap.Account(common.BytesToHash(pathset[0]))\n                 loads++ // always account database reads, even for failures\n-\t\t\t\tif err != nil {\n+\t\t\t\tif err != nil || account == nil {\n                     break\n                 }\n                 stTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)\ndiff --git a/trie/trie.go b/trie/trie.go\nindex 7ea7efa835..d0f0d4e2bc 100644\n--- a/trie/trie.go\n+++ b/trie/trie.go\n@@ -174,6 +174,10 @@ func (t *Trie) TryGetNode(path []byte) ([]byte, int, error) {\n }\n \n func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {\n+\t// If non-existent path requested, abort\n+\tif origNode == nil {\n+\t\treturn nil, nil, 0, nil\n+\t}\n     // If we reached the requested path, return the current node\n     if pos &gt;= len(path) {\n         // Although we most probably have the original node expanded, encoding\n@@ -193,10 +197,6 @@ func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, new\n     }\n     // Path still needs to be traversed, descend into children\n     switch n := (origNode).(type) {\n-\tcase nil:\n-\t\t// Non-existent path requested, abort\n-\t\treturn nil, nil, 0, nil\n-\n     case valueNode:\n         // Path prematurely ended, abort\n         return nil, nil, 0, nil\n</code></pre>\n<p>The fixes were merged into <a href=\"https://github.com/ethereum/go-ethereum/pull/23657\">#23657</a>, with commit <a href=\"https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8\">f1fd963</a>, and released as part of Geth <a href=\"https://github.com/ethereum/go-ethereum/tree/v1.10.9\">v1.10.9</a> on Sept 29, 2021. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Apply the patch above or upgrade to a version which is not vulnerable.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/ethereum/go-ethereum/\">go-ethereum</a></li>\n<li>Email us at <a href=\"mailto:security@ethereum.org\">security@ethereum.org</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethereum/go-ethereum/security/advisories/GHSA-59hh-656j-3p7v\">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-59hh-656j-3p7v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41173\">https://nvd.nist.gov/vuln/detail/CVE-2021-41173</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/pull/23801\">https://github.com/ethereum/go-ethereum/pull/23801</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/commit/e40b37718326b8b4873b3b00a0db2e6c6d9ea738\">https://github.com/ethereum/go-ethereum/commit/e40b37718326b8b4873b3b00a0db2e6c6d9ea738</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9\">https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8\">https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0256\">https://pkg.go.dev/vuln/GO-2022-0256</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-59hh-656j-3p7v\">https://github.com/advisories/GHSA-59hh-656j-3p7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-59hh-656j-3p7v",
            "title": "[github.com/ethereum/go-ethereum] Geth Node Vulnerable to DoS via maliciously crafted p2p message ",
            "date_modified": "2023-08-29T18:55:40.000Z",
            "date_published": "2021-10-25T19:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-59hh-656j-3p7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability in the Geth EVM could cause a node to reject the canonical chain. </p>\n<h3 id=\"description\">Description</h3>\n<p>A memory-corruption bug within the EVM can cause a consensus error, where vulnerable nodes obtain a different <code>stateRoot</code> when processing a maliciously crafted transaction. This, in turn, would lead to the chain being split in two forks.</p>\n<p>All Geth versions supporting the London hard fork are vulnerable (which predates London), so all users should update.</p>\n<p>This bug was exploited on Mainnet at block 13107518, leading to a minority chain split. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch is included in the <code>v1.10.8</code> release.\nThe exact patch to fix the issue is contained within this <a href=\"https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f\">commit</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds exist, save to update and/or apply the patch commit. </p>\n<h3 id=\"references\">References.</h3>\n<p>Post-mortem <a href=\"https://github.com/ethereum/go-ethereum/blob/master/docs/postmortems/2021-08-22-split-postmortem.md\">write-up</a>.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The bug was found by @guidovranken (working for <a href=\"https://sentnl.io/\">Sentnl</a> during an audit of the <a href=\"https://www.telos.net/evm\">Telos EVM</a>) and reported via <a href=\"mailto:bounty@ethereum.org\">bounty@ethereum.org</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/ethereum/go-ethereum/\">go-ethereum</a></li>\n<li>Email us at <a href=\"mailto:security@ethereum.org\">security@ethereum.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethereum/go-ethereum/security/advisories/GHSA-9856-9gg9-qcmq\">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-9856-9gg9-qcmq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-39137\">https://nvd.nist.gov/vuln/detail/CVE-2021-39137</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/releases/tag/v1.10.8\">https://github.com/ethereum/go-ethereum/releases/tag/v1.10.8</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f\">https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0254\">https://pkg.go.dev/vuln/GO-2022-0254</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9856-9gg9-qcmq\">https://github.com/advisories/GHSA-9856-9gg9-qcmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9856-9gg9-qcmq",
            "title": "[github.com/ethereum/go-ethereum] Ethereum Contains Consensus Flaw During Block Processing",
            "date_modified": "2023-08-29T18:53:27.000Z",
            "date_published": "2021-08-30T16:15:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9856-9gg9-qcmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1227\">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>\n<li><a href=\"https://github.com/containers/podman/issues/10941\">https://github.com/containers/podman/issues/10941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2070368\">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>\n<li><a href=\"https://github.com/containers/psgo/pull/92\">https://github.com/containers/psgo/pull/92</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0558\">https://pkg.go.dev/vuln/GO-2022-0558</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862\">https://github.com/containers/podman/pull/13862</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09\">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66vw-v2x9-hw75\">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75",
            "title": "[github.com/containers/podman/v3] Podman publishes a malicious image to public registries",
            "date_modified": "2023-08-29T18:51:21.000Z",
            "date_published": "2022-04-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1227\">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>\n<li><a href=\"https://github.com/containers/podman/issues/10941\">https://github.com/containers/podman/issues/10941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2070368\">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>\n<li><a href=\"https://github.com/containers/psgo/pull/92\">https://github.com/containers/psgo/pull/92</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0558\">https://pkg.go.dev/vuln/GO-2022-0558</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862\">https://github.com/containers/podman/pull/13862</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09\">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66vw-v2x9-hw75\">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75",
            "title": "[github.com/containers/psgo/internal/proc] Podman publishes a malicious image to public registries",
            "date_modified": "2023-08-29T18:51:21.000Z",
            "date_published": "2022-04-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1227\">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>\n<li><a href=\"https://github.com/containers/podman/issues/10941\">https://github.com/containers/podman/issues/10941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2070368\">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>\n<li><a href=\"https://github.com/containers/psgo/pull/92\">https://github.com/containers/psgo/pull/92</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0558\">https://pkg.go.dev/vuln/GO-2022-0558</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862\">https://github.com/containers/podman/pull/13862</a></li>\n<li><a href=\"https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09\">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66vw-v2x9-hw75\">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75",
            "title": "[github.com/containers/psgo] Podman publishes a malicious image to public registries",
            "date_modified": "2023-08-29T18:51:21.000Z",
            "date_published": "2022-04-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The containers/image library used by the container tools Podman, Buildah, and Skopeo in Red Hat Enterprise Linux version 8 and CRI-O in OpenShift Container Platform, does not enforce TLS connections to the container registry authorization service. An attacker could use this vulnerability to launch a MiTM attack and steal login credentials or bearer tokens.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10214\">https://nvd.nist.gov/vuln/detail/CVE-2019-10214</a></li>\n<li><a href=\"https://github.com/containers/image/pull/655\">https://github.com/containers/image/pull/655</a></li>\n<li><a href=\"https://github.com/containers/image/pull/669\">https://github.com/containers/image/pull/669</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1732508\">https://bugzilla.redhat.com/show_bug.cgi?id=1732508</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html\">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html\">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html</a></li>\n<li><a href=\"https://github.com/containers/image/issues/654\">https://github.com/containers/image/issues/654</a></li>\n<li><a href=\"https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf\">https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0081\">https://pkg.go.dev/vuln/GO-2021-0081</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85p9-j7c9-v4gr\">https://github.com/advisories/GHSA-85p9-j7c9-v4gr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85p9-j7c9-v4gr",
            "title": "[github.com/containers/image] containers/image library Insufficiently Protects Credentials",
            "date_modified": "2023-08-29T18:49:36.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85p9-j7c9-v4gr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>jwt-go allows attackers to bypass intended access restrictions in situations with <code>[]string{}</code> for <code>m[\"aud\"]</code> (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to <a href=\"https://github.com/golang-jwt/jwt\">golang-jwt</a> at version 3.2.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26160\">https://nvd.nist.gov/vuln/detail/CVE-2020-26160</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/issues/422\">https://github.com/dgrijalva/jwt-go/issues/422</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/pull/426\">https://github.com/dgrijalva/jwt-go/pull/426</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/issues/462\">https://github.com/dgrijalva/jwt-go/issues/462</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab\">https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0017\">https://pkg.go.dev/vuln/GO-2020-0017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w73w-5m7g-f7qc\">https://github.com/advisories/GHSA-w73w-5m7g-f7qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w73w-5m7g-f7qc",
            "title": "[github.com/dgrijalva/jwt-go/v4] Authorization bypass in github.com/dgrijalva/jwt-go",
            "date_modified": "2023-08-29T18:46:19.000Z",
            "date_published": "2021-05-18T21:08:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w73w-5m7g-f7qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>jwt-go allows attackers to bypass intended access restrictions in situations with <code>[]string{}</code> for <code>m[\"aud\"]</code> (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to <a href=\"https://github.com/golang-jwt/jwt\">golang-jwt</a> at version 3.2.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26160\">https://nvd.nist.gov/vuln/detail/CVE-2020-26160</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/issues/422\">https://github.com/dgrijalva/jwt-go/issues/422</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/pull/426\">https://github.com/dgrijalva/jwt-go/pull/426</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/issues/462\">https://github.com/dgrijalva/jwt-go/issues/462</a></li>\n<li><a href=\"https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab\">https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0017\">https://pkg.go.dev/vuln/GO-2020-0017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w73w-5m7g-f7qc\">https://github.com/advisories/GHSA-w73w-5m7g-f7qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w73w-5m7g-f7qc",
            "title": "[github.com/dgrijalva/jwt-go] Authorization bypass in github.com/dgrijalva/jwt-go",
            "date_modified": "2023-08-29T18:46:19.000Z",
            "date_published": "2021-05-18T21:08:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w73w-5m7g-f7qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When running processes using \"chroot\" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containers/buildah/issues\">buildah</a></li>\n<li>Email us at <a href=\"mailto:buildah@lists.buildah.io\">the buildah general mailing list</a>, or <a href=\"mailto:security@lists.podman.io\">the podman security mailing list</a> if it's sensitive.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3602\">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>\n<li><a href=\"https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0\">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969264\">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2021-3602\">https://ubuntu.com/security/CVE-2021-3602</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0345\">https://pkg.go.dev/vuln/GO-2022-0345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj",
            "title": "[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes",
            "date_modified": "2023-08-29T18:32:54.000Z",
            "date_published": "2021-07-19T15:19:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When running processes using \"chroot\" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containers/buildah/issues\">buildah</a></li>\n<li>Email us at <a href=\"mailto:buildah@lists.buildah.io\">the buildah general mailing list</a>, or <a href=\"mailto:security@lists.podman.io\">the podman security mailing list</a> if it's sensitive.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3602\">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>\n<li><a href=\"https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0\">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969264\">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2021-3602\">https://ubuntu.com/security/CVE-2021-3602</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0345\">https://pkg.go.dev/vuln/GO-2022-0345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj",
            "title": "[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes",
            "date_modified": "2023-08-29T18:32:54.000Z",
            "date_published": "2021-07-19T15:19:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When running processes using \"chroot\" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containers/buildah/issues\">buildah</a></li>\n<li>Email us at <a href=\"mailto:buildah@lists.buildah.io\">the buildah general mailing list</a>, or <a href=\"mailto:security@lists.podman.io\">the podman security mailing list</a> if it's sensitive.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3602\">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>\n<li><a href=\"https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0\">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969264\">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2021-3602\">https://ubuntu.com/security/CVE-2021-3602</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0345\">https://pkg.go.dev/vuln/GO-2022-0345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj",
            "title": "[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes",
            "date_modified": "2023-08-29T18:32:54.000Z",
            "date_published": "2021-07-19T15:19:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When running processes using \"chroot\" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containers/buildah/issues\">buildah</a></li>\n<li>Email us at <a href=\"mailto:buildah@lists.buildah.io\">the buildah general mailing list</a>, or <a href=\"mailto:security@lists.podman.io\">the podman security mailing list</a> if it's sensitive.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3602\">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>\n<li><a href=\"https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0\">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969264\">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2021-3602\">https://ubuntu.com/security/CVE-2021-3602</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0345\">https://pkg.go.dev/vuln/GO-2022-0345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7638-r9r3-rmjj\">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj",
            "title": "[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes",
            "date_modified": "2023-08-29T18:32:54.000Z",
            "date_published": "2021-07-19T15:19:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7638-r9r3-rmjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package <code>github.com/containrrr/shoutrrr/pkg/util</code> before 0.6.0 are vulnerable to Denial of Service (DoS) via the <code>util.PartitionMessage</code> function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25891\">https://nvd.nist.gov/vuln/detail/CVE-2022-25891</a></li>\n<li><a href=\"https://github.com/containrrr/shoutrrr/issues/240\">https://github.com/containrrr/shoutrrr/issues/240</a></li>\n<li><a href=\"https://github.com/containrrr/shoutrrr/pull/242\">https://github.com/containrrr/shoutrrr/pull/242</a></li>\n<li><a href=\"https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42\">https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42</a></li>\n<li><a href=\"https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0\">https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0528\">https://pkg.go.dev/vuln/GO-2022-0528</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-477v-w82m-634j\">https://github.com/advisories/GHSA-477v-w82m-634j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-477v-w82m-634j",
            "title": "[github.com/containrrr/shoutrrr] Shoutrrr util package DoS via sending 2000, 4000, or 6000 character messages",
            "date_modified": "2023-08-29T17:58:26.000Z",
            "date_published": "2022-07-16T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-477v-w82m-634j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The route lookup process in beego prior to 1.12.9 and 2.x prior to 2.0.3 allows attackers to bypass access control. When a /<code>p1</code>/<code>p2</code>/<code>:name</code> route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31259\">https://nvd.nist.gov/vuln/detail/CVE-2022-31259</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4946\">https://github.com/beego/beego/issues/4946</a></li>\n<li><a href=\"https://github.com/beego/beego/tree/v2.0.2\">https://github.com/beego/beego/tree/v2.0.2</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4958\">https://github.com/beego/beego/pull/4958</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4954\">https://github.com/beego/beego/pull/4954</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009\">https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd\">https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0463\">https://pkg.go.dev/vuln/GO-2022-0463</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qx32-f6g6-fcfr\">https://github.com/advisories/GHSA-qx32-f6g6-fcfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr",
            "title": "[github.com/beego/beego] Access control bypass in beego",
            "date_modified": "2023-08-29T17:55:22.000Z",
            "date_published": "2022-05-22T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The route lookup process in beego prior to 1.12.9 and 2.x prior to 2.0.3 allows attackers to bypass access control. When a /<code>p1</code>/<code>p2</code>/<code>:name</code> route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31259\">https://nvd.nist.gov/vuln/detail/CVE-2022-31259</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4946\">https://github.com/beego/beego/issues/4946</a></li>\n<li><a href=\"https://github.com/beego/beego/tree/v2.0.2\">https://github.com/beego/beego/tree/v2.0.2</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4958\">https://github.com/beego/beego/pull/4958</a></li>\n<li><a href=\"https://github.com/beego/beego/pull/4954\">https://github.com/beego/beego/pull/4954</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009\">https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd\">https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0463\">https://pkg.go.dev/vuln/GO-2022-0463</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qx32-f6g6-fcfr\">https://github.com/advisories/GHSA-qx32-f6g6-fcfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr",
            "title": "[github.com/beego/beego/v2] Access control bypass in beego",
            "date_modified": "2023-08-29T17:55:22.000Z",
            "date_published": "2022-05-22T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ONLY IMPACTS those use GitHub Status Notifications</p>\n<p>Log output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch is in progress.  <a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable GH Status Notifications.  Filter your logs for Echo log data.  Use read-only tokens that are limited in scope.</p>\n<h3 id=\"references\">References</h3>\n<p>sig-security in slack: <a href=\"https://spinnakerteam.slack.com/archives/CFN8F5UR2\">https://spinnakerteam.slack.com/archives/CFN8F5UR2</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39348\">https://nvd.nist.gov/vuln/detail/CVE-2023-39348</a></li>\n<li><a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7",
            "title": "[github.com/spinnaker/spinnaker] Improper log output when using GitHub Status Notifications in spinnaker",
            "date_modified": "2023-08-29T17:35:55.000Z",
            "date_published": "2023-08-29T17:35:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ONLY IMPACTS those use GitHub Status Notifications</p>\n<p>Log output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch is in progress.  <a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable GH Status Notifications.  Filter your logs for Echo log data.  Use read-only tokens that are limited in scope.</p>\n<h3 id=\"references\">References</h3>\n<p>sig-security in slack: <a href=\"https://spinnakerteam.slack.com/archives/CFN8F5UR2\">https://spinnakerteam.slack.com/archives/CFN8F5UR2</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39348\">https://nvd.nist.gov/vuln/detail/CVE-2023-39348</a></li>\n<li><a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7",
            "title": "[github.com/spinnaker/spinnaker] Improper log output when using GitHub Status Notifications in spinnaker",
            "date_modified": "2023-08-29T17:35:55.000Z",
            "date_published": "2023-08-29T17:35:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ONLY IMPACTS those use GitHub Status Notifications</p>\n<p>Log output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch is in progress.  <a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable GH Status Notifications.  Filter your logs for Echo log data.  Use read-only tokens that are limited in scope.</p>\n<h3 id=\"references\">References</h3>\n<p>sig-security in slack: <a href=\"https://spinnakerteam.slack.com/archives/CFN8F5UR2\">https://spinnakerteam.slack.com/archives/CFN8F5UR2</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39348\">https://nvd.nist.gov/vuln/detail/CVE-2023-39348</a></li>\n<li><a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7",
            "title": "[github.com/spinnaker/spinnaker] Improper log output when using GitHub Status Notifications in spinnaker",
            "date_modified": "2023-08-29T17:35:55.000Z",
            "date_published": "2023-08-29T17:35:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ONLY IMPACTS those use GitHub Status Notifications</p>\n<p>Log output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patch is in progress.  <a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable GH Status Notifications.  Filter your logs for Echo log data.  Use read-only tokens that are limited in scope.</p>\n<h3 id=\"references\">References</h3>\n<p>sig-security in slack: <a href=\"https://spinnakerteam.slack.com/archives/CFN8F5UR2\">https://spinnakerteam.slack.com/archives/CFN8F5UR2</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39348\">https://nvd.nist.gov/vuln/detail/CVE-2023-39348</a></li>\n<li><a href=\"https://github.com/spinnaker/echo/pull/1316\">https://github.com/spinnaker/echo/pull/1316</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq5c-hvw6-8pr7\">https://github.com/advisories/GHSA-rq5c-hvw6-8pr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7",
            "title": "[github.com/spinnaker/spinnaker] Improper log output when using GitHub Status Notifications in spinnaker",
            "date_modified": "2023-08-29T17:35:55.000Z",
            "date_published": "2023-08-29T17:35:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq5c-hvw6-8pr7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}