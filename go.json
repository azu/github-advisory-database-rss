{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>The BCP 47 tag parser has quadratic time complexity due to inherent aspects of its design. Since the parser is, by design, exposed to untrusted user input, this can be leveraged to force a program to consume significant time parsing Accept-Language headers. The parser cannot be easily rewritten to fix this behavior for various reasons. Instead the solution implemented in this CL is to limit the total complexity of tags passed into ParseAcceptLanguage by limiting the number of dashes in the string to 1000. This should be more than enough for the majority of real world use cases, where the number of tags being sent is likely to be in the single digits.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-32149\">https://nvd.nist.gov/vuln/detail/CVE-2022-32149</a></li>\n<li><a href=\"https://go.dev/cl/442235\">https://go.dev/cl/442235</a></li>\n<li><a href=\"https://go.dev/issue/56152\">https://go.dev/issue/56152</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ\">https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1059\">https://pkg.go.dev/vuln/GO-2022-1059</a></li>\n<li><a href=\"https://github.com/golang/go/issues/56152\">https://github.com/golang/go/issues/56152</a></li>\n<li><a href=\"https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c\">https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-69ch-w2m2-3vjp\">https://github.com/advisories/GHSA-69ch-w2m2-3vjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-69ch-w2m2-3vjp",
            "title": "[golang.org/x/text/language] Denial of service in golang.org/x/text/language",
            "date_modified": "2022-10-28T20:11:27.000Z",
            "date_published": "2022-10-14T19:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-69ch-w2m2-3vjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hashicorp Boundary is vulnerable to Clickjacking which allow for the interception of login credentials, re-direction of users to malicious sites, or causing users to perform malicious actions on the site.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36182\">https://nvd.nist.gov/vuln/detail/CVE-2022-36182</a></li>\n<li><a href=\"https://owasp.org/www-community/attacks/Clickjacking\">https://owasp.org/www-community/attacks/Clickjacking</a></li>\n<li><a href=\"https://packetstormsecurity.com/files/168654/Hashicorp-Boundary-Clickjacking.html\">https://packetstormsecurity.com/files/168654/Hashicorp-Boundary-Clickjacking.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xqv2-3vvq-qg6r\">https://github.com/advisories/GHSA-xqv2-3vvq-qg6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xqv2-3vvq-qg6r",
            "title": "[github.com/hashicorp/boundary] Hashicorp Boundary vulnerable to clickjacking",
            "date_modified": "2022-10-28T19:18:55.000Z",
            "date_published": "2022-10-27T19:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xqv2-3vvq-qg6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Gin-vue-admin &lt; 2.5.4 has File upload vulnerabilities。\nFile upload vulnerabilities are when a web server allows users to upload files to its filesystem without sufficiently validating things like their name, type, contents, or size. Failing to properly enforce restrictions on these could mean that even a basic image upload function can be used to upload arbitrary and potentially dangerous files instead. This could even include server-side script files that enable remote code execution.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/flipped-aurora/gin-vue-admin/pull/1264\">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><a href=\"https://github.com/flipped-aurora/gin-vue-admin/pull/1264\">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></p>\n<h3 id=\"references\">References</h3>\n<p>#1263 </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>The plugin installation function of Gin-Vue-Admin allows users to download zip packages from the plugin market and upload them for installation. This function has an arbitrary file upload vulnerability. A malicious attacker can upload a constructed zip package to traverse the directory and upload or overwrite arbitrary files on the server side.</p>\n<p>The affected code <a href=\"https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go\">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go</a> line 880 called the <code>utils.Unzip</code> method</p>\n<pre><code>paths, err := utils.Unzip(GVAPLUGPINATH+file.Filename, GVAPLUGPINATH)\n    paths = filterFile(paths)\n    var webIndex = -1\n    var serverIndex = -1\n    for i := range paths {\n        paths[i] = filepath.ToSlash(paths[i])\n        pathArr := strings.Split(paths[i], \"/\")\n        ln := len(pathArr)\n        if ln &lt; 2 {\n            continue\n        }\n        if pathArr[ln-2] == \"server\" &amp;&amp; pathArr[ln-1] == \"plugin\" {\n            serverIndex = i\n        }\n        if pathArr[ln-2] == \"web\" &amp;&amp; pathArr[ln-1] == \"plugin\" {\n            webIndex = i\n        }\n    }\n    if webIndex == -1 &amp;&amp; serverIndex == -1 {\n        zap.L().Error(\"非标准插件，请按照文档自动迁移使用\")\n        return webIndex, serverIndex, errors.New(\"非标准插件，请按照文档自动迁移使用\")\n    }\n...\n</code></pre>\n<p>The <a href=\"https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/utils/zip.go\">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/utils/zip.go</a> code defines the <code>utils.Unzip</code> method</p>\n<pre><code>//解压\nfunc Unzip(zipFile string, destDir string) ([]string, error) {\n    zipReader, err := zip.OpenReader(zipFile)\n    var paths []string\n    if err != nil {\n        return []string{}, err\n    }\n    defer zipReader.Close()\n\n    for _, f := range zipReader.File {\n        fpath := filepath.Join(destDir, f.Name)\n        paths = append(paths, fpath)\n        if f.FileInfo().IsDir() {\n            os.MkdirAll(fpath, os.ModePerm)\n...\n</code></pre>\n<p>It can be analyzed that after uploading a zip compressed file, the <code>Unzip</code> method will be called to decompress the compressed file, and then judge whether the compressed file contains the fixed directory structure of server, web, and plugin.</p>\n<p>Whether the zip file is correct or not, it will be decompressed first. If the directory does not exist, it will be created automatically. Therefore, malicious zip packages can be constructed, and directory traversal can be performed during automatic decompression to upload or overwrite any file.</p>\n<p>Use the Zip Slip vulnerability to construct a malicious zip package with <code>../../../../</code> filenames, and upload the malicious zip package to trigger the vulnerability.</p>\n<p><img alt=\"1\" src=\"https://user-images.githubusercontent.com/113822259/197387942-e40c188d-cff0-4da3-84ba-7ca670d9bf72.png\">\n<img alt=\"2\" src=\"https://user-images.githubusercontent.com/113822259/197387956-cef8fd0d-978a-47ae-a65e-e28367f6a0b8.png\"></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-7gc4-r5jr-9hxv\">https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-7gc4-r5jr-9hxv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39345\">https://nvd.nist.gov/vuln/detail/CVE-2022-39345</a></li>\n<li><a href=\"https://github.com/flipped-aurora/gin-vue-admin/issues/1263\">https://github.com/flipped-aurora/gin-vue-admin/issues/1263</a></li>\n<li><a href=\"https://github.com/flipped-aurora/gin-vue-admin/pull/1264\">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></li>\n<li><a href=\"https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go\">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7gc4-r5jr-9hxv\">https://github.com/advisories/GHSA-7gc4-r5jr-9hxv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7gc4-r5jr-9hxv",
            "title": "[github.com/flipped-aurora/gin-vue-admin/server] Gin-vue-admin subject to Remote Code Execution via file upload vulnerability",
            "date_modified": "2022-10-27T18:38:33.000Z",
            "date_published": "2022-10-25T21:02:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7gc4-r5jr-9hxv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Skipper prior to version v0.13.236 is vulnerable to server-side request forgery (SSRF). An attacker can exploit a vulnerable version of proxy to access the internal metadata server or other unauthenticated URLs by adding an specific header (X-Skipper-Proxy) to the http request.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem was patched in version <a href=\"https://github.com/zalando/skipper/releases/tag/v0.13.237\">https://github.com/zalando/skipper/releases/tag/v0.13.237</a>.\nUsers need to upgrade to skipper <code>&gt;=v0.13.237</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use <code>dropRequestHeader(\"X-Skipper-Proxy\")</code> filter</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/zalando/skipper/releases/tag/v0.13.237\">https://github.com/zalando/skipper/releases/tag/v0.13.237</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/zalando/skipper/issues/new/choose\">https://github.com/zalando/skipper/issues/new/choose</a></li>\n<li>Chat with us in slack: <a href=\"https://app.slack.com/client/T029RQSE6/C82Q5JNH5\">https://app.slack.com/client/T029RQSE6/C82Q5JNH5</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zalando/skipper/security/advisories/GHSA-f2rj-m42r-6jm2\">https://github.com/zalando/skipper/security/advisories/GHSA-f2rj-m42r-6jm2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38580\">https://nvd.nist.gov/vuln/detail/CVE-2022-38580</a></li>\n<li><a href=\"https://gist.github.com/Fadavvi/9fffcfa4aaa9e25b77cfe7b3044b2857#file-cve-2022-38580\">https://gist.github.com/Fadavvi/9fffcfa4aaa9e25b77cfe7b3044b2857#file-cve-2022-38580</a></li>\n<li><a href=\"https://pastebin.com/dXxpgPAK\">https://pastebin.com/dXxpgPAK</a></li>\n<li><a href=\"http://skipper.com\">http://skipper.com</a></li>\n<li><a href=\"http://zalando.com\">http://zalando.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f2rj-m42r-6jm2\">https://github.com/advisories/GHSA-f2rj-m42r-6jm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f2rj-m42r-6jm2",
            "title": "[github.com/zalando/skipper] Skipper vulnerable to SSRF via X-Skipper-Proxy",
            "date_modified": "2022-10-25T20:22:31.000Z",
            "date_published": "2022-10-25T20:22:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f2rj-m42r-6jm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>During our internal security assessment, it was discovered that OpenFGA versions <code>v0.2.3</code> and prior are vulnerable to authorization bypass under certain conditions.</p>\n<h3 id=\"am-i-affected\">Am I affected?</h3>\n<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> and you added a tuple with a wildcard (*) assigned to a tupleset relation (the right hand side of a ‘from’ statement).</p>\n<h3 id=\"how-to-fix-that\">How to fix that?</h3>\n<p>Upgrade to version <code>v0.2.4</code>.</p>\n<h3 id=\"backward-compatibility\">Backward Compatibility</h3>\n<p>This update is not backward compatible with any authorization model that uses wildcard on a tupleset relation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openfga/openfga/security/advisories/GHSA-vj4m-83m8-xpw5\">https://github.com/openfga/openfga/security/advisories/GHSA-vj4m-83m8-xpw5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39341\">https://nvd.nist.gov/vuln/detail/CVE-2022-39341</a></li>\n<li><a href=\"https://github.com/openfga/openfga/commit/b466769cc100b2065047786578718d313f52695b\">https://github.com/openfga/openfga/commit/b466769cc100b2065047786578718d313f52695b</a></li>\n<li><a href=\"https://github.com/openfga/openfga/releases/tag/v0.2.4\">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vj4m-83m8-xpw5\">https://github.com/advisories/GHSA-vj4m-83m8-xpw5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vj4m-83m8-xpw5",
            "title": "[github.com/openfga/openfga] OpenFGA Authorization Bypass via tupleset wildcard",
            "date_modified": "2022-10-27T18:36:33.000Z",
            "date_published": "2022-10-25T20:21:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vj4m-83m8-xpw5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>During our internal security assessment, it was discovered that OpenFGA versions <code>v0.2.3</code> and prior are vulnerable to authorization bypass under certain conditions.</p>\n<h3 id=\"am-i-affected\">Am I Affected?</h3>\n<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> or prior, and your model has a relation defined as a tupleset (the right hand side of a ‘from’ statement) that involves anything other than a direct relationship (e.g. ‘as self’)</p>\n<h3 id=\"how-to-fix-that\">How to fix that?</h3>\n<p>Upgrade to version <code>v0.2.4</code>.</p>\n<h3 id=\"backward-compatibility\">Backward Compatibility</h3>\n<p>This update is not backward compatible.\nAny model involving rewritten tupleset relations will no longer be acceptable and has to be modified.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openfga/openfga/security/advisories/GHSA-f4mm-2r69-mg5f\">https://github.com/openfga/openfga/security/advisories/GHSA-f4mm-2r69-mg5f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39342\">https://nvd.nist.gov/vuln/detail/CVE-2022-39342</a></li>\n<li><a href=\"https://github.com/openfga/openfga/commit/c8db1ee3d2a366f18e585dd33236340e76e784c4\">https://github.com/openfga/openfga/commit/c8db1ee3d2a366f18e585dd33236340e76e784c4</a></li>\n<li><a href=\"https://github.com/openfga/openfga/releases/tag/v0.2.4\">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4mm-2r69-mg5f\">https://github.com/advisories/GHSA-f4mm-2r69-mg5f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4mm-2r69-mg5f",
            "title": "[github.com/openfga/openfga] OpenFGA Authorization Bypass",
            "date_modified": "2022-10-27T18:37:26.000Z",
            "date_published": "2022-10-25T20:21:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4mm-2r69-mg5f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>During our internal security assessment, it was discovered that <code>streamed-list-objects</code> endpoint was not validating the authorization header resulting in the disclosure of objects in the store.</p>\n<h3 id=\"am-i-affected\">Am I Affected?</h3>\n<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> or prior and you are exposing the OpenFGA service to the internet.</p>\n<h3 id=\"how-to-fix-that\">How to fix that?</h3>\n<p>Upgrade to version <code>v0.2.4</code>.</p>\n<h3 id=\"backward-compatibility\">Backward Compatibility</h3>\n<p>This update is backward compatible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openfga/openfga/security/advisories/GHSA-95x7-mh78-7w2r\">https://github.com/openfga/openfga/security/advisories/GHSA-95x7-mh78-7w2r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39340\">https://nvd.nist.gov/vuln/detail/CVE-2022-39340</a></li>\n<li><a href=\"https://github.com/openfga/openfga/commit/779d73d4b6d067ee042ec9b59fec707eed71e42f\">https://github.com/openfga/openfga/commit/779d73d4b6d067ee042ec9b59fec707eed71e42f</a></li>\n<li><a href=\"https://github.com/openfga/openfga/releases/tag/v0.2.4\">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-95x7-mh78-7w2r\">https://github.com/advisories/GHSA-95x7-mh78-7w2r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-95x7-mh78-7w2r",
            "title": "[github.com/openfga/openfga] OpenFGA subject to Information Disclosure via streamed-list-objects endpoint",
            "date_modified": "2022-10-27T18:35:10.000Z",
            "date_published": "2022-10-25T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-95x7-mh78-7w2r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In free5GC 3.2.1, a malformed NGAP message can crash the AMF and NGAP decoders via an index-out-of-range panic in <code>aper.GetBitString</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-43677\">https://nvd.nist.gov/vuln/detail/CVE-2022-43677</a></li>\n<li><a href=\"https://github.com/free5gc/free5gc/issues/402\">https://github.com/free5gc/free5gc/issues/402</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-59hj-62f5-fgmc\">https://github.com/advisories/GHSA-59hj-62f5-fgmc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-59hj-62f5-fgmc",
            "title": "[github.com/free5gc/free5gc] free5GC vulnerable to malformed NGAP message crashing the AMF and NGAP decoders",
            "date_modified": "2022-10-25T19:59:38.000Z",
            "date_published": "2022-10-24T19:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-59hj-62f5-fgmc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>For some Post/Put Concourse endpoint containing <code>:team_name</code> in the URL, a Concourse user can send a request with body including <code>:team_name=team2</code> to bypass team scope check to gain access to certain resources belong to any other team. The user only needs a valid user session and belongs to team2.</p>\n<p>Exploitable endpoints:</p>\n<pre><code>{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/builds/:build_name\", Method: \"POST\", Name: RerunJobBuild},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/pause\", Method: \"PUT\", Name: PauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/unpause\", Method: \"PUT\", Name: UnpauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/schedule\", Method: \"PUT\", Name: ScheduleJob},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/pause\", Method: \"PUT\", Name: PausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/unpause\", Method: \"PUT\", Name: UnpausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/expose\", Method: \"PUT\", Name: ExposePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/hide\", Method: \"PUT\", Name: HidePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/rename\", Method: \"PUT\", Name: RenamePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/archive\", Method: \"PUT\", Name: ArchivePipeline},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/enable\", Method: \"PUT\", Name: EnableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/disable\", Method: \"PUT\", Name: DisableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/pin\", Method: \"PUT\", Name: PinResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/unpin\", Method: \"PUT\", Name: UnpinResource},\n    \n{Path: \"/api/v1/teams/:team_name/artifacts\", Method: \"POST\", Name: CreateArtifact},\n</code></pre>\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\n<ol>\n<li>Set up a Concourse deployment with team 1 (with pipeline 1) and team 2. User is in team 2 but not team 1.</li>\n<li>Login as user to team 2.</li>\n</ol>\n<pre><code>fly -t ci login -n team2 -u user -p password\n</code></pre>\n<ol start=\"3\">\n<li>Try pausing pipeline 1 in team 1 using fly. Verify the command output is <code>pipeline 'pipeline1' not found</code>.</li>\n</ol>\n<pre><code>fly -t ci pause-pipeline -p pipeline1\n</code></pre>\n<ol start=\"4\">\n<li>Send a customized request through <code>fly curl</code> command intend to pause pipeline 1 again.</li>\n</ol>\n<pre><code>fly -t ci curl /api/v1/teams/team1/pipelines/pipeline1/pause -- -X PUT -d \":team_name=team2\" -H \"Content-type: application/x-www-form-urlencoded\"\n</code></pre>\n<ol start=\"5\">\n<li>pipeline 1 in team 1 will be paused.</li>\n</ol>\n<p>In step 4, the parameter pollution would allow an user from any team to pause a pipeline that belongs to other team.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Concourse <a href=\"https://github.com/concourse/concourse/releases/tag/v6.7.9\">v6.7.9</a> and <a href=\"https://github.com/concourse/concourse/releases/tag/v7.8.3\">v7.8.3</a> were both released with a fix on October 12, 2022.</p>\n<p>Instead of using <a href=\"https://pkg.go.dev/net/http#Request.FormValue\"><code>FormValue</code></a> to parse team_name in the request, where allows body parameters to take precedence over URL query string values, both patch versions are now using <code>URL.Query().Get()</code> over multiple scope handlers to prevent the parameter pollution.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds for existing versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/concourse/concourse/pull/8566\">https://github.com/concourse/concourse/pull/8566</a>: PR with the fix</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, you may reach us privately at <a href=\"mailto:security@concourse-ci.org\">security@concourse-ci.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf\">https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf</a></li>\n<li><a href=\"https://github.com/concourse/concourse/pull/8566\">https://github.com/concourse/concourse/pull/8566</a></li>\n<li><a href=\"https://github.com/concourse/concourse/pull/8580\">https://github.com/concourse/concourse/pull/8580</a></li>\n<li><a href=\"https://github.com/concourse/concourse/releases/tag/v6.7.9\">https://github.com/concourse/concourse/releases/tag/v6.7.9</a></li>\n<li><a href=\"https://github.com/concourse/concourse/releases/tag/v7.8.3\">https://github.com/concourse/concourse/releases/tag/v7.8.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jp2-vwrj-99rf\">https://github.com/advisories/GHSA-5jp2-vwrj-99rf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jp2-vwrj-99rf",
            "title": "[github.com/concourse/concourse] Team scope authorization bypass when Post/Put request with :team_name in body, allows HTTP parameter pollution ",
            "date_modified": "2022-10-19T20:26:06.000Z",
            "date_published": "2022-10-19T20:26:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jp2-vwrj-99rf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>For some Post/Put Concourse endpoint containing <code>:team_name</code> in the URL, a Concourse user can send a request with body including <code>:team_name=team2</code> to bypass team scope check to gain access to certain resources belong to any other team. The user only needs a valid user session and belongs to team2.</p>\n<p>Exploitable endpoints:</p>\n<pre><code>{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/builds/:build_name\", Method: \"POST\", Name: RerunJobBuild},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/pause\", Method: \"PUT\", Name: PauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/unpause\", Method: \"PUT\", Name: UnpauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/schedule\", Method: \"PUT\", Name: ScheduleJob},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/pause\", Method: \"PUT\", Name: PausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/unpause\", Method: \"PUT\", Name: UnpausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/expose\", Method: \"PUT\", Name: ExposePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/hide\", Method: \"PUT\", Name: HidePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/rename\", Method: \"PUT\", Name: RenamePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/archive\", Method: \"PUT\", Name: ArchivePipeline},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/enable\", Method: \"PUT\", Name: EnableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/disable\", Method: \"PUT\", Name: DisableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/pin\", Method: \"PUT\", Name: PinResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/unpin\", Method: \"PUT\", Name: UnpinResource},\n    \n{Path: \"/api/v1/teams/:team_name/artifacts\", Method: \"POST\", Name: CreateArtifact},\n</code></pre>\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\n<ol>\n<li>Set up a Concourse deployment with team 1 (with pipeline 1) and team 2. User is in team 2 but not team 1.</li>\n<li>Login as user to team 2.</li>\n</ol>\n<pre><code>fly -t ci login -n team2 -u user -p password\n</code></pre>\n<ol start=\"3\">\n<li>Try pausing pipeline 1 in team 1 using fly. Verify the command output is <code>pipeline 'pipeline1' not found</code>.</li>\n</ol>\n<pre><code>fly -t ci pause-pipeline -p pipeline1\n</code></pre>\n<ol start=\"4\">\n<li>Send a customized request through <code>fly curl</code> command intend to pause pipeline 1 again.</li>\n</ol>\n<pre><code>fly -t ci curl /api/v1/teams/team1/pipelines/pipeline1/pause -- -X PUT -d \":team_name=team2\" -H \"Content-type: application/x-www-form-urlencoded\"\n</code></pre>\n<ol start=\"5\">\n<li>pipeline 1 in team 1 will be paused.</li>\n</ol>\n<p>In step 4, the parameter pollution would allow an user from any team to pause a pipeline that belongs to other team.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Concourse <a href=\"https://github.com/concourse/concourse/releases/tag/v6.7.9\">v6.7.9</a> and <a href=\"https://github.com/concourse/concourse/releases/tag/v7.8.3\">v7.8.3</a> were both released with a fix on October 12, 2022.</p>\n<p>Instead of using <a href=\"https://pkg.go.dev/net/http#Request.FormValue\"><code>FormValue</code></a> to parse team_name in the request, where allows body parameters to take precedence over URL query string values, both patch versions are now using <code>URL.Query().Get()</code> over multiple scope handlers to prevent the parameter pollution.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds for existing versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/concourse/concourse/pull/8566\">https://github.com/concourse/concourse/pull/8566</a>: PR with the fix</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, you may reach us privately at <a href=\"mailto:security@concourse-ci.org\">security@concourse-ci.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf\">https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf</a></li>\n<li><a href=\"https://github.com/concourse/concourse/pull/8566\">https://github.com/concourse/concourse/pull/8566</a></li>\n<li><a href=\"https://github.com/concourse/concourse/pull/8580\">https://github.com/concourse/concourse/pull/8580</a></li>\n<li><a href=\"https://github.com/concourse/concourse/releases/tag/v6.7.9\">https://github.com/concourse/concourse/releases/tag/v6.7.9</a></li>\n<li><a href=\"https://github.com/concourse/concourse/releases/tag/v7.8.3\">https://github.com/concourse/concourse/releases/tag/v7.8.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jp2-vwrj-99rf\">https://github.com/advisories/GHSA-5jp2-vwrj-99rf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jp2-vwrj-99rf",
            "title": "[github.com/concourse/concourse] Team scope authorization bypass when Post/Put request with :team_name in body, allows HTTP parameter pollution ",
            "date_modified": "2022-10-19T20:26:06.000Z",
            "date_published": "2022-10-19T20:26:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jp2-vwrj-99rf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/image-reflector-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/image-automation-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/notification-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/helm-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/kustomize-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/source-controller] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>\n<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href=\"https://github.com/kubernetes/apimachinery/issues/131\">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href=\"https://fluxcd.io/security/#report-a-vulnerability\">recommended</a>).</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in any of the affected repositories.</li>\n<li>Contact us at the CNCF Flux channel.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n<li><a href=\"https://github.com/kubernetes/apimachinery/issues/131\">https://github.com/kubernetes/apimachinery/issues/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39272\">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4p5-x4vc-mh4v\">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v",
            "title": "[github.com/fluxcd/flux2] Improper use of metav1.Duration allows for Denial of Service",
            "date_modified": "2022-10-25T20:37:24.000Z",
            "date_published": "2022-10-19T18:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The admin and monitor user groups need to be authenticated by username and password. If we delete the X-Requested-With: XMLHttpRequest field in the request header,the authentication will be bypassed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/brockercap/Bifrost/pull/201\">https://github.com/brockercap/Bifrost/pull/201</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade to the latest version</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/brokercap/Bifrost/security/advisories/GHSA-mxrx-fg8p-5p5j\">https://github.com/brokercap/Bifrost/security/advisories/GHSA-mxrx-fg8p-5p5j</a></li>\n<li><a href=\"https://github.com/brockercap/Bifrost/pull/201\">https://github.com/brockercap/Bifrost/pull/201</a></li>\n<li><a href=\"https://github.com/brokercap/Bifrost/commit/63da5c8eb7eb21639ea7ac199fe10b5e07b03a8a\">https://github.com/brokercap/Bifrost/commit/63da5c8eb7eb21639ea7ac199fe10b5e07b03a8a</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39267\">https://nvd.nist.gov/vuln/detail/CVE-2022-39267</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mxrx-fg8p-5p5j\">https://github.com/advisories/GHSA-mxrx-fg8p-5p5j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mxrx-fg8p-5p5j",
            "title": "[github.com/brokercap/Bifrost] Bifrost vulnerable to authentication check flaw that leads to authentication bypass",
            "date_modified": "2022-10-21T13:03:48.000Z",
            "date_published": "2022-10-18T19:57:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mxrx-fg8p-5p5j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability affects IBC transfers due to a security vulnerability dubbed \"Dragonberry\" upstream in <a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9\">Cosmos SDK</a>. The vulnerability could allow malicious attackers to compromise chain-to-chain IBC transfers.</p>\n<p>There is no vulnerability in the DID/resource modules for cheqd-node.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Node operators are requested to upgrade to <a href=\"https://github.com/cheqd/cheqd-node/releases/tag/0.6.9\">cheqd-node v0.6.9</a> as soon as possible. Installation instructions are in the release notes. Please do not install any beta/pre-release versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No. The patch takes effect when more than 2/3rds of the voting power of the cheqd network has upgraded to this patch.</p>\n<p>An emergency hotfix was released previously under v0.6.8 but this is now deprecated since <a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9\">Cosmos SDK v0.45.9</a> officially fixes this upstream.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://forum.cosmos.network/t/ibc-security-advisory-dragonberry/7702/1\">IBC Security Advisory on \"Dragonberry\"</a> (and <a href=\"https://forum.cosmos.network/t/cosmos-sdk-security-advisory-dragonfruit/7614\">associated security vulnerability \"Dragonfruit\"</a>)</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/cheqd/cheqd-node/issues\">cheqd-node repo</a></li>\n<li>Email us at <a href=\"mailto:security-github@cheqd.io\">security-github@cheqd.io</a></li>\n<li>Message us on our community <a href=\"http://cheqd.link/join-cheqd-slack\">Slack</a> or <a href=\"http://cheqd.link/discord-github\">Discord</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cheqd/cheqd-node/security/advisories/GHSA-j92c-mmf7-j5x5\">https://github.com/cheqd/cheqd-node/security/advisories/GHSA-j92c-mmf7-j5x5</a></li>\n<li><a href=\"https://forum.cosmos.network/t/ibc-security-advisory-dragonberry/7702/1\">https://forum.cosmos.network/t/ibc-security-advisory-dragonberry/7702/1</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9\">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j92c-mmf7-j5x5\">https://github.com/advisories/GHSA-j92c-mmf7-j5x5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j92c-mmf7-j5x5",
            "title": "[github.com/cheqd/cheqd-node] Potential inter-blockchain communication (IBC) protocol compromise via \"Dragonberry\" vulnerability in cheqd",
            "date_modified": "2022-10-18T17:27:37.000Z",
            "date_published": "2022-10-18T17:27:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j92c-mmf7-j5x5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If a gateway client application sends a malformed request to a gateway peer it may crash the peer node.\nThis fix checks for the malformed gateway request and returns an error to the gateway client.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v2.4.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None, users must upgrade to v2.4.6.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/hyperledger/fabric/releases/tag/v2.4.6\">https://github.com/hyperledger/fabric/releases/tag/v2.4.6</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/hyperledger/fabric\">Fabric</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thank you to Haosheng Wang of OPPO ZIWU Security Lab for this disclosure.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hyperledger/fabric/security/advisories/GHSA-qj6r-fhrc-jj5r\">https://github.com/hyperledger/fabric/security/advisories/GHSA-qj6r-fhrc-jj5r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36023\">https://nvd.nist.gov/vuln/detail/CVE-2022-36023</a></li>\n<li><a href=\"https://github.com/hyperledger/fabric/releases/tag/v2.4.6\">https://github.com/hyperledger/fabric/releases/tag/v2.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qj6r-fhrc-jj5r\">https://github.com/advisories/GHSA-qj6r-fhrc-jj5r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qj6r-fhrc-jj5r",
            "title": "[github.com/hyperledger/fabric] Remote denial of service in Hyperledger Fabric Gateway",
            "date_modified": "2022-10-13T19:12:06.000Z",
            "date_published": "2022-10-13T19:12:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qj6r-fhrc-jj5r"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}