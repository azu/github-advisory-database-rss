{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3294\">https://nvd.nist.gov/vuln/detail/CVE-2022-3294</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113757\">https://github.com/kubernetes/kubernetes/issues/113757</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA\">https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh36-q97c-9928\">https://github.com/advisories/GHSA-jh36-q97c-9928</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh36-q97c-9928",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to validation bypass",
            "date_modified": "2023-03-13T13:25:39.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh36-q97c-9928"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3294\">https://nvd.nist.gov/vuln/detail/CVE-2022-3294</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113757\">https://github.com/kubernetes/kubernetes/issues/113757</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA\">https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh36-q97c-9928\">https://github.com/advisories/GHSA-jh36-q97c-9928</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh36-q97c-9928",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to validation bypass",
            "date_modified": "2023-03-13T13:25:39.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh36-q97c-9928"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified a <a href=\"https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532\">vulnerability</a> in the <code>fieldpath</code> package from <code>crossplane/crossplane-runtime</code> that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.</p>\n<h3 id=\"details\">Details</h3>\n<p>Compositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>Users can restrict write privileges on Compositions to only admin users as a workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27484\">https://nvd.nist.gov/vuln/detail/CVE-2023-27484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/advisories/GHSA-v829-x6hh-cqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq",
            "title": "[github.com/crossplane/crossplane] Crossplane-runtime contains Improper Input Validation via Compositions",
            "date_modified": "2023-03-10T23:47:55.000Z",
            "date_published": "2023-03-10T23:47:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified a <a href=\"https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532\">vulnerability</a> in the <code>fieldpath</code> package from <code>crossplane/crossplane-runtime</code> that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.</p>\n<h3 id=\"details\">Details</h3>\n<p>Compositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>Users can restrict write privileges on Compositions to only admin users as a workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27484\">https://nvd.nist.gov/vuln/detail/CVE-2023-27484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/advisories/GHSA-v829-x6hh-cqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq",
            "title": "[github.com/crossplane/crossplane] Crossplane-runtime contains Improper Input Validation via Compositions",
            "date_modified": "2023-03-10T23:47:55.000Z",
            "date_published": "2023-03-10T23:47:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified a <a href=\"https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532\">vulnerability</a> in the <code>fieldpath</code> package from <code>crossplane/crossplane-runtime</code> that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.</p>\n<h3 id=\"details\">Details</h3>\n<p>Compositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>Users can restrict write privileges on Compositions to only admin users as a workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27484\">https://nvd.nist.gov/vuln/detail/CVE-2023-27484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v829-x6hh-cqfq\">https://github.com/advisories/GHSA-v829-x6hh-cqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq",
            "title": "[github.com/crossplane/crossplane] Crossplane-runtime contains Improper Input Validation via Compositions",
            "date_modified": "2023-03-10T23:47:55.000Z",
            "date_published": "2023-03-10T23:47:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v829-x6hh-cqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3294\">https://nvd.nist.gov/vuln/detail/CVE-2022-3294</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113757\">https://github.com/kubernetes/kubernetes/issues/113757</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA\">https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh36-q97c-9928\">https://github.com/advisories/GHSA-jh36-q97c-9928</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh36-q97c-9928",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to validation bypass",
            "date_modified": "2023-03-13T13:25:39.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh36-q97c-9928"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3294\">https://nvd.nist.gov/vuln/detail/CVE-2022-3294</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113757\">https://github.com/kubernetes/kubernetes/issues/113757</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA\">https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh36-q97c-9928\">https://github.com/advisories/GHSA-jh36-q97c-9928</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh36-q97c-9928",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to validation bypass",
            "date_modified": "2023-03-13T13:25:39.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh36-q97c-9928"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3162\">https://nvd.nist.gov/vuln/detail/CVE-2022-3162</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113756\">https://github.com/kubernetes/kubernetes/issues/113756</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA\">https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2394-5535-8j88\">https://github.com/advisories/GHSA-2394-5535-8j88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2394-5535-8j88",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to path traversal",
            "date_modified": "2023-03-10T22:38:23.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2394-5535-8j88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3162\">https://nvd.nist.gov/vuln/detail/CVE-2022-3162</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113756\">https://github.com/kubernetes/kubernetes/issues/113756</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA\">https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2394-5535-8j88\">https://github.com/advisories/GHSA-2394-5535-8j88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2394-5535-8j88",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to path traversal",
            "date_modified": "2023-03-10T22:38:23.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2394-5535-8j88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3162\">https://nvd.nist.gov/vuln/detail/CVE-2022-3162</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113756\">https://github.com/kubernetes/kubernetes/issues/113756</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA\">https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2394-5535-8j88\">https://github.com/advisories/GHSA-2394-5535-8j88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2394-5535-8j88",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to path traversal",
            "date_modified": "2023-03-10T22:38:23.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2394-5535-8j88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3162\">https://nvd.nist.gov/vuln/detail/CVE-2022-3162</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/113756\">https://github.com/kubernetes/kubernetes/issues/113756</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA\">https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2394-5535-8j88\">https://github.com/advisories/GHSA-2394-5535-8j88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2394-5535-8j88",
            "title": "[github.com/kubernetes/kubernetes] Kubernetes vulnerable to path traversal",
            "date_modified": "2023-03-10T22:38:23.000Z",
            "date_published": "2023-03-01T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2394-5535-8j88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability identified in the Tailscale Windows client allows a malicious website to reconfigure the Tailscale daemon <code>tailscaled</code>, which can then be used to remotely execute code.</p>\n<p><strong>Affected platforms:</strong> Windows\n<strong>Patched Tailscale client versions:</strong> v1.32.3 or later, v1.33.257 or later (unstable)</p>\n<h3 id=\"what-happened\">What happened?</h3>\n<p>In the Tailscale Windows client, the local API was bound to a local TCP socket, and communicated with the Windows client GUI in cleartext with no Host header verification. This allowed an attacker-controlled website visited by the node to rebind DNS to an attacker-controlled DNS server, and then make local API requests in the client, including changing the coordination server to an attacker-controlled coordination server.</p>\n<h3 id=\"who-is-affected\">Who is affected?</h3>\n<p>All Windows clients prior to version v.1.32.3 are affected.</p>\n<h3 id=\"what-should-i-do\">What should I do?</h3>\n<p>If you are running Tailscale on Windows, upgrade to v1.32.3 or later to remediate the issue.</p>\n<h3 id=\"what-is-the-impact\">What is the impact?</h3>\n<p>An attacker-controlled coordination server can send malicious URL responses to the client, including pushing executables or installing an SMB share. These allow the attacker to remotely execute code on the node.</p>\n<p>Reviewing all logs confirms this vulnerability was not triggered or exploited. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to thank <a href=\"https://github.com/emilytrau\">Emily Trau</a> and <a href=\"https://twitter.com/JJJollyjim\">Jamie McClymont (CyberCX)</a> for reporting this issue. Further detail is available in <a href=\"https://emily.id.au/tailscale\">their blog post</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://tailscale.com/security-bulletins/#ts-2022-004\">TS-2022-004</a></li>\n<li><a href=\"https://emily.id.au/tailscale\">Researcher blog post</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, <a href=\"https://tailscale.com/contact/support/\">contact Tailscale support</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp\">https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41924\">https://nvd.nist.gov/vuln/detail/CVE-2022-41924</a></li>\n<li><a href=\"https://emily.id.au/tailscale\">https://emily.id.au/tailscale</a></li>\n<li><a href=\"https://tailscale.com/security-bulletins/#ts-2022-004\">https://tailscale.com/security-bulletins/#ts-2022-004</a></li>\n<li><a href=\"https://github.com/tailscale/tailscale/releases/tag/v1.32.3\">https://github.com/tailscale/tailscale/releases/tag/v1.32.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqp6-rc3h-83cp\">https://github.com/advisories/GHSA-vqp6-rc3h-83cp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqp6-rc3h-83cp",
            "title": "[tailscale.com] Tailscale Windows daemon is vulnerable to RCE via CSRF",
            "date_modified": "2023-03-10T05:05:44.000Z",
            "date_published": "2022-11-21T22:34:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqp6-rc3h-83cp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An active attacker could let the boot fail on purpose in the initramfs, dropping the serial console into an emergency shell. This gives attackers with access to the serial console full control over the VM.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/edgelesssys/constellation/releases/tag/v2.6.0\">v2.6.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>none</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/edgelesssys/constellation/security/advisories/GHSA-6w5f-5wgr-qjg5\">https://github.com/edgelesssys/constellation/security/advisories/GHSA-6w5f-5wgr-qjg5</a></li>\n<li><a href=\"https://github.com/edgelesssys/constellation/releases/tag/v2.6.0\">https://github.com/edgelesssys/constellation/releases/tag/v2.6.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6w5f-5wgr-qjg5\">https://github.com/advisories/GHSA-6w5f-5wgr-qjg5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6w5f-5wgr-qjg5",
            "title": "[github.com/edgelesssys/constellation/v2] Constellation allows Emergency shell access during initramfs boot phase",
            "date_modified": "2023-03-09T20:21:37.000Z",
            "date_published": "2023-03-09T20:21:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6w5f-5wgr-qjg5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1237\">https://nvd.nist.gov/vuln/detail/CVE-2023-1237</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8\">https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8</a></li>\n<li><a href=\"https://huntr.dev/bounties/cc2aa618-05da-495d-a5cd-51c40557d481\">https://huntr.dev/bounties/cc2aa618-05da-495d-a5cd-51c40557d481</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v4v-9fj5-p982\">https://github.com/advisories/GHSA-9v4v-9fj5-p982</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v4v-9fj5-p982",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:32:36.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v4v-9fj5-p982"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1238\">https://nvd.nist.gov/vuln/detail/CVE-2023-1238</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8\">https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8</a></li>\n<li><a href=\"https://huntr.dev/bounties/52f97267-1439-4bb6-862b-89b8fafce50d\">https://huntr.dev/bounties/52f97267-1439-4bb6-862b-89b8fafce50d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5w78-v688-cx9q\">https://github.com/advisories/GHSA-5w78-v688-cx9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5w78-v688-cx9q",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:32:37.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5w78-v688-cx9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Reflected in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1239\">https://nvd.nist.gov/vuln/detail/CVE-2023-1239</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106\">https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106</a></li>\n<li><a href=\"https://huntr.dev/bounties/3a22c609-d2d8-4613-815d-58f5990b8bd8\">https://huntr.dev/bounties/3a22c609-d2d8-4613-815d-58f5990b8bd8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vxhr-p2vp-7gf8\">https://github.com/advisories/GHSA-vxhr-p2vp-7gf8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vxhr-p2vp-7gf8",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:32:37.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vxhr-p2vp-7gf8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1240\">https://nvd.nist.gov/vuln/detail/CVE-2023-1240</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9\">https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9</a></li>\n<li><a href=\"https://huntr.dev/bounties/a24f57a4-22e3-4a17-8227-6a410a11498a\">https://huntr.dev/bounties/a24f57a4-22e3-4a17-8227-6a410a11498a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55vm-3vq3-4jpc\">https://github.com/advisories/GHSA-55vm-3vq3-4jpc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55vm-3vq3-4jpc",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:32:42.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55vm-3vq3-4jpc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1241\">https://nvd.nist.gov/vuln/detail/CVE-2023-1241</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9\">https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9</a></li>\n<li><a href=\"https://huntr.dev/bounties/e0e9b1bb-3025-4b9f-acb4-16a5da28aa3c\">https://huntr.dev/bounties/e0e9b1bb-3025-4b9f-acb4-16a5da28aa3c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ff27-hrmr-ggpj\">https://github.com/advisories/GHSA-ff27-hrmr-ggpj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ff27-hrmr-ggpj",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:32:47.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ff27-hrmr-ggpj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1242\">https://nvd.nist.gov/vuln/detail/CVE-2023-1242</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9\">https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9</a></li>\n<li><a href=\"https://huntr.dev/bounties/71c24c5e-ceb2-45cf-bda7-fa195d37e289\">https://huntr.dev/bounties/71c24c5e-ceb2-45cf-bda7-fa195d37e289</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrwm-xqfr-4vhv\">https://github.com/advisories/GHSA-qrwm-xqfr-4vhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrwm-xqfr-4vhv",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:33:02.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrwm-xqfr-4vhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1243\">https://nvd.nist.gov/vuln/detail/CVE-2023-1243</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106\">https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106</a></li>\n<li><a href=\"https://huntr.dev/bounties/1d62d35a-b096-4b76-a021-347c3f1c570c\">https://huntr.dev/bounties/1d62d35a-b096-4b76-a021-347c3f1c570c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8jh8-33f5-cgfp\">https://github.com/advisories/GHSA-8jh8-33f5-cgfp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8jh8-33f5-cgfp",
            "title": "[github.com/answerdev/answer] Answer vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-13T15:33:07.000Z",
            "date_published": "2023-03-07T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8jh8-33f5-cgfp"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}