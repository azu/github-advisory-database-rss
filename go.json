{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>A flaw was found in Podman. This issue may allow an attacker to create a specially crafted container that, when configured to share the same IPC with at least one other container, can create a large number of IPC resources in /dev/shm. The malicious container will continue to exhaust resources until it is out-of-memory (OOM) killed. While the malicious container's cgroup will be removed, the IPC resources it created are not. Those resources are tied to the IPC namespace that will not be removed until all containers using it are stopped, and one non-malicious container is holding the namespace open. The malicious container is restarted, either automatically or by attacker control, repeating the process and increasing the amount of memory consumed. With a container configured to restart always, such as <code>podman run --restart=always</code>, this can result in a memory-based denial of service of the system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3056\">https://nvd.nist.gov/vuln/detail/CVE-2024-3056</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-3056\">https://access.redhat.com/security/cve/CVE-2024-3056</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2270717\">https://bugzilla.redhat.com/show_bug.cgi?id=2270717</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3042\">https://pkg.go.dev/vuln/GO-2024-3042</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rpcc-p8xm-rc6p\">https://github.com/advisories/GHSA-rpcc-p8xm-rc6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p",
            "title": "[github.com/containers/podman/v4] Podman vulnerable to memory-based denial of service",
            "date_modified": "2024-08-07T19:39:42.000Z",
            "date_published": "2024-08-02T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Podman. This issue may allow an attacker to create a specially crafted container that, when configured to share the same IPC with at least one other container, can create a large number of IPC resources in /dev/shm. The malicious container will continue to exhaust resources until it is out-of-memory (OOM) killed. While the malicious container's cgroup will be removed, the IPC resources it created are not. Those resources are tied to the IPC namespace that will not be removed until all containers using it are stopped, and one non-malicious container is holding the namespace open. The malicious container is restarted, either automatically or by attacker control, repeating the process and increasing the amount of memory consumed. With a container configured to restart always, such as <code>podman run --restart=always</code>, this can result in a memory-based denial of service of the system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3056\">https://nvd.nist.gov/vuln/detail/CVE-2024-3056</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-3056\">https://access.redhat.com/security/cve/CVE-2024-3056</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2270717\">https://bugzilla.redhat.com/show_bug.cgi?id=2270717</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3042\">https://pkg.go.dev/vuln/GO-2024-3042</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rpcc-p8xm-rc6p\">https://github.com/advisories/GHSA-rpcc-p8xm-rc6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p",
            "title": "[github.com/containers/podman/v3] Podman vulnerable to memory-based denial of service",
            "date_modified": "2024-08-07T19:39:42.000Z",
            "date_published": "2024-08-02T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Podman. This issue may allow an attacker to create a specially crafted container that, when configured to share the same IPC with at least one other container, can create a large number of IPC resources in /dev/shm. The malicious container will continue to exhaust resources until it is out-of-memory (OOM) killed. While the malicious container's cgroup will be removed, the IPC resources it created are not. Those resources are tied to the IPC namespace that will not be removed until all containers using it are stopped, and one non-malicious container is holding the namespace open. The malicious container is restarted, either automatically or by attacker control, repeating the process and increasing the amount of memory consumed. With a container configured to restart always, such as <code>podman run --restart=always</code>, this can result in a memory-based denial of service of the system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3056\">https://nvd.nist.gov/vuln/detail/CVE-2024-3056</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-3056\">https://access.redhat.com/security/cve/CVE-2024-3056</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2270717\">https://bugzilla.redhat.com/show_bug.cgi?id=2270717</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3042\">https://pkg.go.dev/vuln/GO-2024-3042</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rpcc-p8xm-rc6p\">https://github.com/advisories/GHSA-rpcc-p8xm-rc6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p",
            "title": "[github.com/containers/podman/v2] Podman vulnerable to memory-based denial of service",
            "date_modified": "2024-08-07T19:39:42.000Z",
            "date_published": "2024-08-02T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Podman. This issue may allow an attacker to create a specially crafted container that, when configured to share the same IPC with at least one other container, can create a large number of IPC resources in /dev/shm. The malicious container will continue to exhaust resources until it is out-of-memory (OOM) killed. While the malicious container's cgroup will be removed, the IPC resources it created are not. Those resources are tied to the IPC namespace that will not be removed until all containers using it are stopped, and one non-malicious container is holding the namespace open. The malicious container is restarted, either automatically or by attacker control, repeating the process and increasing the amount of memory consumed. With a container configured to restart always, such as <code>podman run --restart=always</code>, this can result in a memory-based denial of service of the system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3056\">https://nvd.nist.gov/vuln/detail/CVE-2024-3056</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-3056\">https://access.redhat.com/security/cve/CVE-2024-3056</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2270717\">https://bugzilla.redhat.com/show_bug.cgi?id=2270717</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3042\">https://pkg.go.dev/vuln/GO-2024-3042</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rpcc-p8xm-rc6p\">https://github.com/advisories/GHSA-rpcc-p8xm-rc6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p",
            "title": "[github.com/containers/podman] Podman vulnerable to memory-based denial of service",
            "date_modified": "2024-08-07T19:39:42.000Z",
            "date_published": "2024-08-02T21:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rpcc-p8xm-rc6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insecure permissions in volcano v1.8.2 allows attackers to access sensitive data and escalate privileges by obtaining the service account's token.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36533\">https://nvd.nist.gov/vuln/detail/CVE-2024-36533</a></li>\n<li><a href=\"https://gist.github.com/HouqiyuA/a0e05a26ecc80bd970ac4649faecc930\">https://gist.github.com/HouqiyuA/a0e05a26ecc80bd970ac4649faecc930</a></li>\n<li><a href=\"https://github.com/volcano-sh/volcano/issues/3446\">https://github.com/volcano-sh/volcano/issues/3446</a></li>\n<li><a href=\"https://github.com/volcano-sh/volcano/pull/3449\">https://github.com/volcano-sh/volcano/pull/3449</a></li>\n<li><a href=\"https://github.com/volcano-sh/volcano/commit/55963f71c76cb85cea1cdb9582ea7d58cfbedcf8\">https://github.com/volcano-sh/volcano/commit/55963f71c76cb85cea1cdb9582ea7d58cfbedcf8</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3034\">https://pkg.go.dev/vuln/GO-2024-3034</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5g3x-8g2v-r8x8\">https://github.com/advisories/GHSA-5g3x-8g2v-r8x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5g3x-8g2v-r8x8",
            "title": "[volcano.sh/volcano] Volcano has insecure permissions",
            "date_modified": "2024-08-07T15:09:36.000Z",
            "date_published": "2024-07-24T21:31:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5g3x-8g2v-r8x8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3006\">https://pkg.go.dev/vuln/GO-2024-3006</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd/v2] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-08-07T14:24:25.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3006\">https://pkg.go.dev/vuln/GO-2024-3006</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd/v2] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-08-07T14:24:25.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Argo CD v2.11.3 and before, discovering that even if the user's <code>p, role:myrole, exec, create, */*, allow</code> permissions are revoked, the user can still send any Websocket message, which allows the user to view sensitive information. Even though they shouldn't have such access.</p>\n<h2 id=\"description\">Description</h2>\n<p>Argo CD has a Web-based terminal that allows you to get a shell inside a running pod, just like you would with kubectl exec. However, when the administrator enables this function and grants permission to the user <code>p, role:myrole, exec, create, */*, allow</code>, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. CVE-2023-40025 Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user <code>p, role:myrole, exec, create, */*, allow</code> permissions, which may still lead to the leakage of sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.7\nv2.10.16\nv2.9.21</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was found &amp; reported by \nShengjie Li, Huazhong University of Science and Technology\nZhi Li, Huazhong University of Science and Technology\nWeijie Liu, Nankai University</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41666\">https://nvd.nist.gov/vuln/detail/CVE-2024-41666</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476\">https://github.com/argoproj/argo-cd/commit/05edb2a9ca48f0f10608c1b49fbb0cf7164f6476</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6\">https://github.com/argoproj/argo-cd/commit/e96f32d233504101ddac028a5bf8117433d333d6</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4\">https://github.com/argoproj/argo-cd/commit/ef535230d8bd8ad7b18aab1ea1063e9751d348c4</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing\">https://drive.google.com/file/d/1Fynj5Sho8Lf8CETqsNXZyPKlTDdmgJuN/view?usp=sharing</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3006\">https://pkg.go.dev/vuln/GO-2024-3006</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8wx-v5jq-qhhw\">https://github.com/advisories/GHSA-v8wx-v5jq-qhhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw",
            "title": "[github.com/argoproj/argo-cd/v2] The Argo CD web terminal session does not handle the revocation of user permissions properly",
            "date_modified": "2024-08-07T14:24:25.000Z",
            "date_published": "2024-07-24T20:54:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8wx-v5jq-qhhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue discovered in the RunHTTPServer function in Gorush v1.18.4 allows attackers to intercept and manipulate data due to use of deprecated TLS version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41270\">https://nvd.nist.gov/vuln/detail/CVE-2024-41270</a></li>\n<li><a href=\"https://gist.github.com/nyxfqq/cfae38fada582a0f576d154be1aeb1fc\">https://gist.github.com/nyxfqq/cfae38fada582a0f576d154be1aeb1fc</a></li>\n<li><a href=\"https://github.com/appleboy/gorush/issues/792\">https://github.com/appleboy/gorush/issues/792</a></li>\n<li><a href=\"https://github.com/appleboy/gorush/commit/067cb597e485e40b790a267187bf7f00730b1c4b\">https://github.com/appleboy/gorush/commit/067cb597e485e40b790a267187bf7f00730b1c4b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p3pf-mff8-3h47\">https://github.com/advisories/GHSA-p3pf-mff8-3h47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p3pf-mff8-3h47",
            "title": "[github.com/appleboy/gorush] Gorush uses deprecated TLS versions",
            "date_modified": "2024-08-07T14:17:12.000Z",
            "date_published": "2024-08-06T21:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p3pf-mff8-3h47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A static initialization vector (IV) in the encrypt function of netbird v0.28.4 allows attackers to obtain sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41260\">https://nvd.nist.gov/vuln/detail/CVE-2024-41260</a></li>\n<li><a href=\"https://gist.github.com/nyxfqq/92232108ac153e95d538bb17fc5ad636\">https://gist.github.com/nyxfqq/92232108ac153e95d538bb17fc5ad636</a></li>\n<li><a href=\"https://github.com/netbirdio/netbird/issues/2246\">https://github.com/netbirdio/netbird/issues/2246</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v35-4xcr-w9ph\">https://github.com/advisories/GHSA-9v35-4xcr-w9ph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v35-4xcr-w9ph",
            "title": "[github.com/netbirdio/netbird] NetBird uses a static initialization vector (IV)",
            "date_modified": "2024-08-07T14:16:59.000Z",
            "date_published": "2024-08-01T18:32:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v35-4xcr-w9ph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629\">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220225-0002\">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2024-08-06T23:53:55.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629\">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220225-0002\">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2024-08-06T23:53:55.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629\">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220225-0002\">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2024-08-06T23:53:55.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8562\">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493\">https://github.com/kubernetes/kubernetes/issues/101493</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY\">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629\">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220225-0002\">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh36-44jv-c8xj\">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj",
            "title": "[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes",
            "date_modified": "2024-08-06T23:53:55.000Z",
            "date_published": "2022-02-02T00:01:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh36-44jv-c8xj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Gitea Gitea Open Source Git Server allows Stored XSS.This issue affects Gitea Open Source Git Server: 1.22.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6886\">https://nvd.nist.gov/vuln/detail/CVE-2024-6886</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/31200\">https://github.com/go-gitea/gitea/pull/31200</a></li>\n<li><a href=\"https://blog.gitea.com/release-of-1.22.1\">https://blog.gitea.com/release-of-1.22.1</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/commit/b6280f4d21309cfae7cc07f74173354c664d5e10\">https://github.com/go-gitea/gitea/commit/b6280f4d21309cfae7cc07f74173354c664d5e10</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3056\">https://pkg.go.dev/vuln/GO-2024-3056</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4h4p-553m-46qh\">https://github.com/advisories/GHSA-4h4p-553m-46qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4h4p-553m-46qh",
            "title": "[code.gitea.io/gitea] Gitea Cross-site Scripting Vulnerability",
            "date_modified": "2024-08-07T19:41:40.000Z",
            "date_published": "2024-08-06T06:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4h4p-553m-46qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CasaOS is an open-source personal cloud system. Prior to version 0.4.4, if an authenticated user using CasaOS is able to successfully connect to a controlled SMB server, they are able to execute arbitrary commands. Version 0.4.4 contains a patch for the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-37469\">https://nvd.nist.gov/vuln/detail/CVE-2023-37469</a></li>\n<li><a href=\"https://github.com/github/pe-security-lab/issues/1871\">https://github.com/github/pe-security-lab/issues/1871</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/commit/af440eac5563644854ff33f72041e52d3fd1f47c\">https://github.com/IceWhaleTech/CasaOS/commit/af440eac5563644854ff33f72041e52d3fd1f47c</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/route/v1/samba.go#L121\">https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/route/v1/samba.go#L121</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/service/connections.go#L58\">https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/service/connections.go#L58</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/releases/tag/v0.4.4\">https://github.com/IceWhaleTech/CasaOS/releases/tag/v0.4.4</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-119_CasaOS\">https://securitylab.github.com/advisories/GHSL-2022-119_CasaOS</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92vc-4fcw-g68q\">https://github.com/advisories/GHSA-92vc-4fcw-g68q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92vc-4fcw-g68q",
            "title": "[github.com/IceWhaleTech/CasaOS] CasaOS Command Injection vulnerability",
            "date_modified": "2024-08-05T21:50:07.000Z",
            "date_published": "2024-08-05T21:50:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92vc-4fcw-g68q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>rudder-server is part of RudderStack, an open source Customer Data Platform (CDP). Versions of rudder-server prior to 1.3.0-rc.1 are vulnerable to SQL injection. This issue may lead to Remote Code Execution (RCE) due to the <code>rudder</code> role in PostgresSQL having superuser permissions by default. Version 1.3.0-rc.1 contains patches for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30625\">https://nvd.nist.gov/vuln/detail/CVE-2023-30625</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/pull/2652\">https://github.com/rudderlabs/rudder-server/pull/2652</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/pull/2663\">https://github.com/rudderlabs/rudder-server/pull/2663</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/pull/2664\">https://github.com/rudderlabs/rudder-server/pull/2664</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/commit/0d061ff2d8c16845179d215bf8012afceba12a30\">https://github.com/rudderlabs/rudder-server/commit/0d061ff2d8c16845179d215bf8012afceba12a30</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/commit/2f956b7eb3d5eb2de3e79d7df2c87405af25071e\">https://github.com/rudderlabs/rudder-server/commit/2f956b7eb3d5eb2de3e79d7df2c87405af25071e</a></li>\n<li><a href=\"https://github.com/rudderlabs/rudder-server/commit/9c009d9775abc99e72fc470f4c4c8e8f1775e82a\">https://github.com/rudderlabs/rudder-server/commit/9c009d9775abc99e72fc470f4c4c8e8f1775e82a</a></li>\n<li><a href=\"https://securitylab.github.com/advisories\">https://securitylab.github.com/advisories</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-097_rudder-server\">https://securitylab.github.com/advisories/GHSL-2022-097_rudder-server</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/173837/Rudder-Server-SQL-Injection-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/173837/Rudder-Server-SQL-Injection-Remote-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jmm-f6jj-rcc3\">https://github.com/advisories/GHSA-3jmm-f6jj-rcc3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jmm-f6jj-rcc3",
            "title": "[github.com/rudderlabs/rudder-server] rudder-server is vulnerable to SQL injection",
            "date_modified": "2024-08-05T21:50:07.000Z",
            "date_published": "2024-08-05T21:50:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jmm-f6jj-rcc3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function <code>GetAllEvents</code> at the API URL <code>/api/v2/events</code>. The sort query parameter read in <code>events_streamer.go</code> is directly used to build a SQL query in <code>events_persister.go</code>. Version 0.7.22 fixes this issue by using the <code>SanitizeOrderInput</code> function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35182\">https://nvd.nist.gov/vuln/detail/CVE-2024-35182</a></li>\n<li><a href=\"https://github.com/meshery/meshery/pull/10280\">https://github.com/meshery/meshery/pull/10280</a></li>\n<li><a href=\"https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c\">https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c</a></li>\n<li><a href=\"https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52\">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52</a></li>\n<li><a href=\"https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47\">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery\">https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7cm-jvpp-69xf\">https://github.com/advisories/GHSA-h7cm-jvpp-69xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7cm-jvpp-69xf",
            "title": "[github.com/layer5io/meshery] Meshery SQL Injection vulnerability",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7cm-jvpp-69xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function <code>GetMeshSyncResourcesKinds</code> at the API URL <code>/api/system/meshsync/resources/kinds</code>. The order query parameter is directly used to build a SQL query in <code>meshync_handler.go</code>. Version 0.7.22 fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35181\">https://nvd.nist.gov/vuln/detail/CVE-2024-35181</a></li>\n<li><a href=\"https://github.com/meshery/meshery/pull/10207\">https://github.com/meshery/meshery/pull/10207</a></li>\n<li><a href=\"https://github.com/meshery/meshery/pull/10280\">https://github.com/meshery/meshery/pull/10280</a></li>\n<li><a href=\"https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13\">https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13</a></li>\n<li><a href=\"https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c\">https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c</a></li>\n<li><a href=\"https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/meshsync_handler.go#L187\">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/meshsync_handler.go#L187</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery\">https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9f24-jrv4-f8g5\">https://github.com/advisories/GHSA-9f24-jrv4-f8g5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9f24-jrv4-f8g5",
            "title": "[github.com/layer5io/meshery] Meshery SQL Injection vulnerability",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9f24-jrv4-f8g5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gotortc is a camera streaming application. Versions 1.8.5 and prior are vulnerable to Cross-Site Request Forgery. The <code>/api/config</code> endpoint allows one to modify the existing configuration with user-supplied values. While the API is only allowing localhost to interact without authentication, an attacker may be able to achieve that depending on how go2rtc is set up on the upstream application, and given that this endpoint is not protected against CSRF, it allows requests from any origin (e.g. a \"drive-by\" attack) . The <code>exec</code> handler allows for any stream to execute arbitrary commands. An attacker may add a custom stream through <code>api/config</code>, which may lead to arbitrary command execution. In the event of a victim visiting the server in question, their browser will execute the requests against the go2rtc instance. Commit 8793c3636493c5efdda08f3b5ed5c6e1ea594fd9 adds a warning about secure API access.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29192\">https://nvd.nist.gov/vuln/detail/CVE-2024-29192</a></li>\n<li><a href=\"https://github.com/AlexxIT/go2rtc/commit/8793c3636493c5efdda08f3b5ed5c6e1ea594fd9\">https://github.com/AlexxIT/go2rtc/commit/8793c3636493c5efdda08f3b5ed5c6e1ea594fd9</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc\">https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qgj8-g9q4-7f2p\">https://github.com/advisories/GHSA-qgj8-g9q4-7f2p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qgj8-g9q4-7f2p",
            "title": "[github.com/AlexxIT/go2rtc] gotortc vulnerable to Cross-Site Request Forgery",
            "date_modified": "2024-08-05T21:29:27.000Z",
            "date_published": "2024-08-05T21:29:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qgj8-g9q4-7f2p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}