{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16886\">https://nvd.nist.gov/vuln/detail/CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/pull/10366\">https://github.com/etcd-io/etcd/pull/10366</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d\">https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2\">https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0237\">https://access.redhat.com/errata/RHSA-2019:0237</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1352\">https://access.redhat.com/errata/RHSA-2019:1352</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106540\">http://www.securityfocus.com/bid/106540</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6xx-pmxh-3wgp\">https://github.com/advisories/GHSA-h6xx-pmxh-3wgp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp",
            "title": "[go.etcd.io/etcd/v3] Improper Authentication in etcd",
            "date_modified": "2022-04-12T22:41:39.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp"
            }
        },
        {
            "content_html": "<p>etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16886\">https://nvd.nist.gov/vuln/detail/CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/pull/10366\">https://github.com/etcd-io/etcd/pull/10366</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d\">https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2\">https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0237\">https://access.redhat.com/errata/RHSA-2019:0237</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1352\">https://access.redhat.com/errata/RHSA-2019:1352</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication\">https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106540\">http://www.securityfocus.com/bid/106540</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6xx-pmxh-3wgp\">https://github.com/advisories/GHSA-h6xx-pmxh-3wgp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp",
            "title": "[go.etcd.io/etcd/v3] Improper Authentication in etcd",
            "date_modified": "2022-04-12T22:41:39.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6xx-pmxh-3wgp"
            }
        },
        {
            "content_html": "<p>Kubernetes before 1.2.0-alpha.5 allows remote attackers to read arbitrary pod logs via a container name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-7528\">https://nvd.nist.gov/vuln/detail/CVE-2015-7528</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/17886\">https://github.com/kubernetes/kubernetes/pull/17886</a></li>\n<li><a href=\"https://github.com/openshift/origin/pull/6113\">https://github.com/openshift/origin/pull/6113</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/afd56495a1052a3387b81df1786a8d0f51bc8671\">https://github.com/kubernetes/kubernetes/commit/afd56495a1052a3387b81df1786a8d0f51bc8671</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2015:2544\">https://access.redhat.com/errata/RHSA-2015:2544</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/releases/tag/v1.2.0-alpha.5\">https://github.com/kubernetes/kubernetes/releases/tag/v1.2.0-alpha.5</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-2615.html\">http://rhn.redhat.com/errata/RHSA-2015-2615.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mqf3-28j7-3mj6\">https://github.com/advisories/GHSA-mqf3-28j7-3mj6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mqf3-28j7-3mj6",
            "title": "[github.com/kubernetes/kubernetes] Information Exposure in Kubernetes",
            "date_modified": "2022-04-12T22:40:23.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mqf3-28j7-3mj6"
            }
        },
        {
            "content_html": "<p>A vulnerability in Kubernetes <code>kube-apiserver</code> could allow node updates to bypass a <em>Validating Admission Webhook</em> and allow unauthorized node updates. The information that is provided to the admission controller could contain old configurations that overwrite values used for validation. Since the overwriting takes place before the validation, this could lead the admission controller to accept requests that should be blocked. The vulnerability can be exploited when an update action on node resources is performed and an admission controller is in place and configured to validate the action.</p>\n<p>Users are only affected by this vulnerability if they are running a <em>Validating Admission Webhook</em> for Nodes that denies admission based partially on the old state of the Node object. It only impacts validating admission plugins that rely on old values in certain fields and does not impact calls from kubelets that go through the built-in NodeRestriction admission plugin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25735\">https://nvd.nist.gov/vuln/detail/CVE-2021-25735</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/100096\">https://github.com/kubernetes/kubernetes/issues/100096</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/99946\">https://github.com/kubernetes/kubernetes/pull/99946</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90\">https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1937562\">https://bugzilla.redhat.com/show_bug.cgi?id=1937562</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y\">https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y</a></li>\n<li><a href=\"https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver\">https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver</a></li>\n<li><a href=\"https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/\">https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g42g-737j-qx6j\">https://github.com/advisories/GHSA-g42g-737j-qx6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j",
            "title": "[k8s.io/kubernetes] Access Restriction Bypass in kube-apiserver",
            "date_modified": "2022-04-12T22:19:17.000Z",
            "date_published": "2021-12-16T19:55:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j"
            }
        },
        {
            "content_html": "<p>A vulnerability in Kubernetes <code>kube-apiserver</code> could allow node updates to bypass a <em>Validating Admission Webhook</em> and allow unauthorized node updates. The information that is provided to the admission controller could contain old configurations that overwrite values used for validation. Since the overwriting takes place before the validation, this could lead the admission controller to accept requests that should be blocked. The vulnerability can be exploited when an update action on node resources is performed and an admission controller is in place and configured to validate the action.</p>\n<p>Users are only affected by this vulnerability if they are running a <em>Validating Admission Webhook</em> for Nodes that denies admission based partially on the old state of the Node object. It only impacts validating admission plugins that rely on old values in certain fields and does not impact calls from kubelets that go through the built-in NodeRestriction admission plugin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25735\">https://nvd.nist.gov/vuln/detail/CVE-2021-25735</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/100096\">https://github.com/kubernetes/kubernetes/issues/100096</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/99946\">https://github.com/kubernetes/kubernetes/pull/99946</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90\">https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1937562\">https://bugzilla.redhat.com/show_bug.cgi?id=1937562</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y\">https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y</a></li>\n<li><a href=\"https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver\">https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver</a></li>\n<li><a href=\"https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/\">https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g42g-737j-qx6j\">https://github.com/advisories/GHSA-g42g-737j-qx6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j",
            "title": "[k8s.io/kubernetes] Access Restriction Bypass in kube-apiserver",
            "date_modified": "2022-04-12T22:19:17.000Z",
            "date_published": "2021-12-16T19:55:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j"
            }
        },
        {
            "content_html": "<p>A vulnerability in Kubernetes <code>kube-apiserver</code> could allow node updates to bypass a <em>Validating Admission Webhook</em> and allow unauthorized node updates. The information that is provided to the admission controller could contain old configurations that overwrite values used for validation. Since the overwriting takes place before the validation, this could lead the admission controller to accept requests that should be blocked. The vulnerability can be exploited when an update action on node resources is performed and an admission controller is in place and configured to validate the action.</p>\n<p>Users are only affected by this vulnerability if they are running a <em>Validating Admission Webhook</em> for Nodes that denies admission based partially on the old state of the Node object. It only impacts validating admission plugins that rely on old values in certain fields and does not impact calls from kubelets that go through the built-in NodeRestriction admission plugin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25735\">https://nvd.nist.gov/vuln/detail/CVE-2021-25735</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/100096\">https://github.com/kubernetes/kubernetes/issues/100096</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/99946\">https://github.com/kubernetes/kubernetes/pull/99946</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90\">https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1937562\">https://bugzilla.redhat.com/show_bug.cgi?id=1937562</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y\">https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y</a></li>\n<li><a href=\"https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver\">https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver</a></li>\n<li><a href=\"https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/\">https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g42g-737j-qx6j\">https://github.com/advisories/GHSA-g42g-737j-qx6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j",
            "title": "[k8s.io/kubernetes] Access Restriction Bypass in kube-apiserver",
            "date_modified": "2022-04-12T22:19:17.000Z",
            "date_published": "2021-12-16T19:55:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g42g-737j-qx6j"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>go-ipfs nodes with versions 0.10.0, 0.11.0, 0.12.0, or 0.12.1 can crash when trying to traverse certain malformed graphs due to an issue in the go-codec-dagpb dependency.  Vulnerable nodes that work with these malformed graphs may crash leading to denial-of-service risks.</p>\n<p>This particularly impacts nodes that download or export data that is controlled by external user input as there is the possibility that a malicious user of those services could (intentionally or unintentionally) cause the node to traverse a malformed graph. Some notable use cases include public gateways and pinning services which fetch data on behalf of users, as well as applications such as IPFS Companion which load data based on a user visiting a website with links to IPFS URLs.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Versions v0.11.1 and v0.12.2 both resolve this issue. This should make it easy to upgrade, even if you have not yet performed the v0.12.0 migration.</p>\n<p>For those running on forked versions of go-ipfs or who are on v0.10.0 and are having trouble with the v0.11.0 breaking changes, simply updating the version of <code>go-codec-dagpb</code> you are using to &gt;=v1.3.2 should resolve the issue.</p>\n<p>Any users of libraries within the go-ipfs ecosystem, even if not the go-ipfs package or binary itself, may be affected and should upgrade their dependency on go-codec-dagpb. You can check if your Go module has a dependency on <code>go-codec-dagpb</code> by running a command such as <code>go mod graph | grep go-codec-dagpb</code> in your module root.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to workaround this issue is to control exposure to any endpoints that allow for arbitrary IPLD traversals. This primarily includes the HTTP RPC API (<a href=\"https://docs.ipfs.io/reference/http/api\">https://docs.ipfs.io/reference/http/api</a> ) and the Gateway API.  If you are exposing those APIs, then do so within an environment where only trusted users and applications you control have access to it.  You should be safe as long as your users and applications do not create malformed graphs, which should not happen using standard <code>go-ipfs</code> tooling.</p>\n<p>If you previously had a more open access environment, then closing off access will only be sufficient if both of the following are true:</p>\n<ul>\n<li>The experimental GraphSync feature is disabled (<a href=\"https://github.com/ipfs/go-ipfs/blob/master/docs/experimental-features.md#graphsync\">https://github.com/ipfs/go-ipfs/blob/master/docs/experimental-features.md#graphsync</a>) </li>\n<li>The only data being accessed is non-malformed data</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>See also the <a href=\"https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2\">go-codec-dagpb security advisory</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Ask in <a href=\"https://discord.gg/ipfs\">IPFS Discord #ipfs-chatter</a></li>\n<li>Open an issue in <a href=\"https://github.com/ipld/go-ipfs\">go-ipfs</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-ipfs/security/advisories/GHSA-mcq2-w56r-5w2w\">https://github.com/ipfs/go-ipfs/security/advisories/GHSA-mcq2-w56r-5w2w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcq2-w56r-5w2w\">https://github.com/advisories/GHSA-mcq2-w56r-5w2w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcq2-w56r-5w2w",
            "title": "[github.com/ipld/go-ipfs] Daemon panics when processing certain blocks",
            "date_modified": "2022-04-12T21:40:52.000Z",
            "date_published": "2022-04-08T22:09:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcq2-w56r-5w2w"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>go-ipfs nodes with versions 0.10.0, 0.11.0, 0.12.0, or 0.12.1 can crash when trying to traverse certain malformed graphs due to an issue in the go-codec-dagpb dependency.  Vulnerable nodes that work with these malformed graphs may crash leading to denial-of-service risks.</p>\n<p>This particularly impacts nodes that download or export data that is controlled by external user input as there is the possibility that a malicious user of those services could (intentionally or unintentionally) cause the node to traverse a malformed graph. Some notable use cases include public gateways and pinning services which fetch data on behalf of users, as well as applications such as IPFS Companion which load data based on a user visiting a website with links to IPFS URLs.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Versions v0.11.1 and v0.12.2 both resolve this issue. This should make it easy to upgrade, even if you have not yet performed the v0.12.0 migration.</p>\n<p>For those running on forked versions of go-ipfs or who are on v0.10.0 and are having trouble with the v0.11.0 breaking changes, simply updating the version of <code>go-codec-dagpb</code> you are using to &gt;=v1.3.2 should resolve the issue.</p>\n<p>Any users of libraries within the go-ipfs ecosystem, even if not the go-ipfs package or binary itself, may be affected and should upgrade their dependency on go-codec-dagpb. You can check if your Go module has a dependency on <code>go-codec-dagpb</code> by running a command such as <code>go mod graph | grep go-codec-dagpb</code> in your module root.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best way to workaround this issue is to control exposure to any endpoints that allow for arbitrary IPLD traversals. This primarily includes the HTTP RPC API (<a href=\"https://docs.ipfs.io/reference/http/api\">https://docs.ipfs.io/reference/http/api</a> ) and the Gateway API.  If you are exposing those APIs, then do so within an environment where only trusted users and applications you control have access to it.  You should be safe as long as your users and applications do not create malformed graphs, which should not happen using standard <code>go-ipfs</code> tooling.</p>\n<p>If you previously had a more open access environment, then closing off access will only be sufficient if both of the following are true:</p>\n<ul>\n<li>The experimental GraphSync feature is disabled (<a href=\"https://github.com/ipfs/go-ipfs/blob/master/docs/experimental-features.md#graphsync\">https://github.com/ipfs/go-ipfs/blob/master/docs/experimental-features.md#graphsync</a>) </li>\n<li>The only data being accessed is non-malformed data</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>See also the <a href=\"https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2\">go-codec-dagpb security advisory</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Ask in <a href=\"https://discord.gg/ipfs\">IPFS Discord #ipfs-chatter</a></li>\n<li>Open an issue in <a href=\"https://github.com/ipld/go-ipfs\">go-ipfs</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-ipfs/security/advisories/GHSA-mcq2-w56r-5w2w\">https://github.com/ipfs/go-ipfs/security/advisories/GHSA-mcq2-w56r-5w2w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcq2-w56r-5w2w\">https://github.com/advisories/GHSA-mcq2-w56r-5w2w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcq2-w56r-5w2w",
            "title": "[github.com/ipld/go-ipfs] Daemon panics when processing certain blocks",
            "date_modified": "2022-04-12T21:40:52.000Z",
            "date_published": "2022-04-08T22:09:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcq2-w56r-5w2w"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Decoding certain blocks using the go-ipld-prime version of the dag-pb codec (go-codec-dagpb) can cause a panic.  The panic comes from an assumption that the reported link length is accurate, but if the block ends before that reported length then it’s a buffer overread.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in v1.3.1 and above.</p>\n<p>Consumers can discover the versions of <code>go-codec-dagpb</code> in a module's dependency graph using the following command in the module root:</p>\n<p><code>go mod graph | grep go-codec-dagpb</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You can work around this issue without upgrading by recovering panics higher in the call stack of the goroutine that calls the defective code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Ask in <a href=\"https://discord.gg/ipfs\">IPFS Discord #ipld-chatter</a></li>\n<li>Open an issue in <a href=\"https://github.com/ipld/go-codec-dagpb\">go-codec-dagpb</a><h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2\">https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g3vv-g2j5-45f2\">https://github.com/advisories/GHSA-g3vv-g2j5-45f2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g3vv-g2j5-45f2",
            "title": "[github.com/ipld/go-codec-dagpb] Panic when processing certain blocks",
            "date_modified": "2022-04-12T21:41:41.000Z",
            "date_published": "2022-04-08T22:08:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g3vv-g2j5-45f2"
            }
        },
        {
            "content_html": "<p>The primary use case for Smokescreen is to prevent server-side request forgery (SSRF) attacks in which external attackers leverage the behavior of applications to connect to or scan internal infrastructure.</p>\n<p>Smokescreen also offers an option to deny access to additional (e.g., external) URLs by way of a deny list. There was an issue in Smokescreen that made it possible to bypass the deny list feature by appending a dot to the end of user-supplied URLs, or by providing input in a different letter case.</p>\n<h3 id=\"recommendation\">Recommendation</h3>\n<p>Upgrade Smokescreen to version 0.0.3 or later.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Thanks to <a href=\"https://twitter.com/gregxsunday\">Grzegorz Niedziela</a> for reporting the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@stripe.com\">security@stripe.com</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stripe/smokescreen/security/advisories/GHSA-gcj7-j438-hjj2\">https://github.com/stripe/smokescreen/security/advisories/GHSA-gcj7-j438-hjj2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gcj7-j438-hjj2\">https://github.com/advisories/GHSA-gcj7-j438-hjj2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gcj7-j438-hjj2",
            "title": "[github.com/stripe/smokescreen] Smokescreen SSRF via deny list bypass",
            "date_modified": "2022-04-12T21:47:40.000Z",
            "date_published": "2022-04-07T22:10:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gcj7-j438-hjj2"
            }
        },
        {
            "content_html": "<p>beego is an open-source, high-performance web framework for the Go programming language. An issue was discovered in file profile.go in function GetCPUProfile in beego through 2.0.2, allows attackers to launch symlink attacks locally.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27117\">https://nvd.nist.gov/vuln/detail/CVE-2021-27117</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4484\">https://github.com/beego/beego/issues/4484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2v6v-q994-xvxx\">https://github.com/advisories/GHSA-2v6v-q994-xvxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2v6v-q994-xvxx",
            "title": "[github.com/beego/beego] Privilege escalation in beego",
            "date_modified": "2022-04-15T03:08:39.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2v6v-q994-xvxx"
            }
        },
        {
            "content_html": "<p>beego is an open-source, high-performance web framework for the Go programming language. An issue was discovered in file profile.go in function GetCPUProfile in beego through 2.0.2, allows attackers to launch symlink attacks locally.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27117\">https://nvd.nist.gov/vuln/detail/CVE-2021-27117</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4484\">https://github.com/beego/beego/issues/4484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2v6v-q994-xvxx\">https://github.com/advisories/GHSA-2v6v-q994-xvxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2v6v-q994-xvxx",
            "title": "[github.com/beego/beego/v2] Privilege escalation in beego",
            "date_modified": "2022-04-15T03:08:39.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2v6v-q994-xvxx"
            }
        },
        {
            "content_html": "<p>An issue was discovered in file profile.go. The MemProf and GetCPUProfile functions do not correctly check whether the created file exists. As a result attackers can launch attacks symlink attacks locally. Attackers can use this vulnerability to escalate privileges.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27116\">https://nvd.nist.gov/vuln/detail/CVE-2021-27116</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4484\">https://github.com/beego/beego/issues/4484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffjp-66mx-3qpj\">https://github.com/advisories/GHSA-ffjp-66mx-3qpj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffjp-66mx-3qpj",
            "title": "[github.com/beego/beego] Privilege escalation in beego",
            "date_modified": "2022-04-12T21:53:27.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffjp-66mx-3qpj"
            }
        },
        {
            "content_html": "<p>An issue was discovered in file profile.go. The MemProf and GetCPUProfile functions do not correctly check whether the created file exists. As a result attackers can launch attacks symlink attacks locally. Attackers can use this vulnerability to escalate privileges.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27116\">https://nvd.nist.gov/vuln/detail/CVE-2021-27116</a></li>\n<li><a href=\"https://github.com/beego/beego/issues/4484\">https://github.com/beego/beego/issues/4484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffjp-66mx-3qpj\">https://github.com/advisories/GHSA-ffjp-66mx-3qpj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffjp-66mx-3qpj",
            "title": "[github.com/beego/beego/v2] Privilege escalation in beego",
            "date_modified": "2022-04-12T21:53:27.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffjp-66mx-3qpj"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the route lookup process in beego through 2.0.1, allows attackers to bypass access control.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30080\">https://nvd.nist.gov/vuln/detail/CVE-2021-30080</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/d5df5e470d0a8ed291930ae802fd7e6b95226519\">https://github.com/beego/beego/commit/d5df5e470d0a8ed291930ae802fd7e6b95226519</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28r6-jm5h-mrgg\">https://github.com/advisories/GHSA-28r6-jm5h-mrgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28r6-jm5h-mrgg",
            "title": "[github.com/beego/beego] Access control bypass in Beego",
            "date_modified": "2022-04-12T21:53:25.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28r6-jm5h-mrgg"
            }
        },
        {
            "content_html": "<p>An issue was discovered in the route lookup process in beego through 2.0.1, allows attackers to bypass access control.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30080\">https://nvd.nist.gov/vuln/detail/CVE-2021-30080</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/d5df5e470d0a8ed291930ae802fd7e6b95226519\">https://github.com/beego/beego/commit/d5df5e470d0a8ed291930ae802fd7e6b95226519</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28r6-jm5h-mrgg\">https://github.com/advisories/GHSA-28r6-jm5h-mrgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28r6-jm5h-mrgg",
            "title": "[github.com/beego/beego/v2] Access control bypass in Beego",
            "date_modified": "2022-04-12T21:53:25.000Z",
            "date_published": "2022-04-06T00:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28r6-jm5h-mrgg"
            }
        },
        {
            "content_html": "<p>Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26245\">https://nvd.nist.gov/vuln/detail/CVE-2022-26245</a></li>\n<li><a href=\"https://github.com/open-falcon/falcon-plus/issues/951\">https://github.com/open-falcon/falcon-plus/issues/951</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76j4-gggq-7rg9\">https://github.com/advisories/GHSA-76j4-gggq-7rg9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76j4-gggq-7rg9",
            "title": "[github.com/open-falcon/falcon-plus] SQLinjection in falcon-plus",
            "date_modified": "2022-04-12T21:59:37.000Z",
            "date_published": "2022-03-28T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76j4-gggq-7rg9"
            }
        },
        {
            "content_html": "<p>When ORT (now via atstccfg) generates ip_allow.config files in Apache Traffic Control 3.0.0 to 3.1.0 and 4.0.0 to 4.1.0, those files include permissions that allow bad actors to push arbitrary content into and remove arbitrary content from CDN cache servers. Additionally, these permissions are potentially extended to IP addresses outside the desired range, resulting in them being granted to clients possibly outside the CDN arcitechture.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-17522\">https://nvd.nist.gov/vuln/detail/CVE-2020-17522</a></li>\n<li><a href=\"https://github.com/apache/trafficcontrol/commit/492290d810e9608afb5d265b98cd3f3e153e776b\">https://github.com/apache/trafficcontrol/commit/492290d810e9608afb5d265b98cd3f3e153e776b</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3c675031ac220b5eae64a9c84a03ee60045c6045738607dca4a96cb8@%3Ccommits.trafficcontrol.apache.org%3E\">https://lists.apache.org/thread.html/r3c675031ac220b5eae64a9c84a03ee60045c6045738607dca4a96cb8@%3Ccommits.trafficcontrol.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3de212a3da73bcf98fa2db7eafb75b2eb8e131ff466e6efc4284df09%40%3Cdev.trafficcontrol.apache.org%3E\">https://lists.apache.org/thread.html/r3de212a3da73bcf98fa2db7eafb75b2eb8e131ff466e6efc4284df09%40%3Cdev.trafficcontrol.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rc8bfd7d4f71d61e9193efcd4699eccbab3c202ec1d75ed9d502f08bf@%3Ccommits.trafficcontrol.apache.org%3E\">https://lists.apache.org/thread.html/rc8bfd7d4f71d61e9193efcd4699eccbab3c202ec1d75ed9d502f08bf@%3Ccommits.trafficcontrol.apache.org%3E</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw59-4qgf-jxr8\">https://github.com/advisories/GHSA-pw59-4qgf-jxr8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw59-4qgf-jxr8",
            "title": "[github.com/apache/trafficcontrol] Cache Manipulation Attack in Apache Traffic Control",
            "date_modified": "2022-04-12T22:17:55.000Z",
            "date_published": "2021-12-16T19:20:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw59-4qgf-jxr8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Allows admin API access to the IPFS node.</p>\n<h3 id=\"who-\">Who ?</h3>\n<p>This affects people running the  <a href=\"https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml\">docker-compose.yaml</a> service in an environment where the docker host is directly attached to a public or untrusted IP.  In the vulnerable version, the private API endpoint is publicly forwarded by exposing it as <code>0.0.0.0:5001</code> on the host machine.  </p>\n<p>If the host machine is hidden behind a firewall or NAT (and the LAN is trusted for NAT), this is not an immediate issue because of the protection from the firewall or NAT.  That said, we still recommend users update to follow security best practices of not putting unnecessary dependency on a working firewall.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is in <a href=\"https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml\">docker-compose.yaml</a>.  Users need to replace their current <code>docker-compose.yaml</code> file with a version <code>0.12.1</code> or later.</p>\n<p>There is no need to update any of the binaries. Users running previous versions like <code>0.12.0</code> or earlier can download the <code>0.12.1</code> <code>docker-compose.yaml</code> file.  You can replace a vulnerable <code>docker-compose.yaml</code> file with a the new one with:</p>\n<pre><code>curl https://raw.githubusercontent.com/ipfs/go-ipfs/v0.12.1/docker-compose.yaml &gt; docker-compose.yaml\n</code></pre>\n<h3 id=\"how-to-test-if-you-are-vulnerable\">How to test if you are vulnerable</h3>\n<h4 id=\"binding-check-on-the-host\">Binding check on the host</h4>\n<p>On the host machine, while IPFS is running, run as root:</p>\n<pre><code class=\"language-bash\">netstat -lnp | grep \":5001\"\n</code></pre>\n<p>The output will be a list of listeners bound to <code>:5001</code>.\nYou then need to check that those listeners are private and preferably even localhost IPs.\n⚠️ If this listener is on <code>0.0.0.0</code> or a public IP you are very likely vulnerable.</p>\n<h4 id=\"remote-hailing\">Remote hailing</h4>\n<p>While IPFS is running, you can try to contact the API from a remote machine. (Replace <code>1.2.3.4</code> with your node public IP.  Or if you want to test in an untrusted NAT, then substitute the LAN IP instead.)</p>\n<pre><code class=\"language-bash\">curl -X POST http://1.2.3.4:5001/api/v0/version\n</code></pre>\n<p>⚠️ If you see any json outputted (e.g.,  <code>{\"Commit\": \"&lt;string&gt;\",\"Golang\": \"&lt;string&gt;\",\"Repo\": \"&lt;string&gt;\",\"System\": \"&lt;string&gt;\",\"Version\": \"&lt;string&gt;\"}</code>), then you are vulnerable.</p>\n<p>If it <strong>fails</strong>, then you are safe.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Please first read <a href=\"https://docs.ipfs.io/reference/http/api/\">https://docs.ipfs.io/reference/http/api/</a> about best practices</li>\n<li>Ask in <a href=\"https://discord.gg/ipfs\">IPFS Discord #ipfs-chatter</a></li>\n<li>Open an issue in <a href=\"https://github.com/ipfs/go-ipfs\">go-ipfs</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc\">https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc</a></li>\n<li><a href=\"https://github.com/ipfs/go-ipfs/pull/8773\">https://github.com/ipfs/go-ipfs/pull/8773</a></li>\n<li><a href=\"https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1\">https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1</a></li>\n<li><a href=\"https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1\">https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fx5p-f64h-93xc\">https://github.com/advisories/GHSA-fx5p-f64h-93xc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fx5p-f64h-93xc",
            "title": "[github.com/ipfs/go-ipfs]  Opened exploitable ports in default docker-compose.yaml in go-ipfs",
            "date_modified": "2022-04-06T14:45:19.000Z",
            "date_published": "2022-04-04T21:23:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fx5p-f64h-93xc"
            }
        },
        {
            "content_html": "<p>Nomad and Nomad Enterprise allows operators with job-submit capabilities to use the spread stanza in a way such that it can cause panic in Nomad servers. This vulnerability, CVE-2022-24684, was fixed in Nomad 1.0.18, 1.1.12, and 1.2.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24684\">https://nvd.nist.gov/vuln/detail/CVE-2022-24684</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562\">https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220318-0008/\">https://security.netapp.com/advisory/ntap-20220318-0008/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6jm6-cmcp-fqjq\">https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6jm6-cmcp-fqjq",
            "title": "[github.com/hashicorp/nomad] Nomad Spread Job Stanza May Trigger Panic in Servers",
            "date_modified": "2022-04-05T21:09:26.000Z",
            "date_published": "2022-02-16T00:01:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6jm6-cmcp-fqjq"
            }
        }
    ]
}