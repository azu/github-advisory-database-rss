{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In runc, <a href=\"https://www.man7.org/linux/man-pages/man7/netlink.7.html\">netlink</a> is used internally as a serialization system for specifying the relevant container configuration to the C portion of our code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration.</p>\n<p>This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces.</p>\n<p>Prior to 9c444070ec7bb83995dbc0185da68284da71c554, in practice it was fairly difficult to specify an arbitrary-length netlink message with most container runtimes. The only user-controlled byte array was the namespace paths attributes which can be specified in runc's <code>config.json</code>, but as far as we can tell no container runtime gives raw access to that configuration setting -- and having raw access to that setting <strong>would allow the attacker to disable namespace protections entirely anyway</strong> (setting them to <code>/proc/1/ns/...</code> for instance). In addition, each namespace path is limited to 4096 bytes (with only 7 namespaces supported by runc at the moment) meaning that even with custom namespace paths it appears an attacker still cannot shove enough bytes into the netlink bytemsg in order to overflow the uint16 counter.</p>\n<p>However, out of an abundance of caution (given how old this bug is) we decided to treat it as a potentially exploitable vulnerability with a low severity. After 9c444070ec7bb83995dbc0185da68284da71c554 (which was not present in any release of runc prior to the discovery of this bug), all mount paths are included as a giant netlink message which means that this bug becomes significantly more exploitable in more reasonable threat scenarios.</p>\n<p>The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure), though as mentioned above it appears this bug was not practically exploitable on any released version of runc to date.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patch for this is d72d057ba794164c3cce9451a00b72a78b25e1ae and runc 1.0.3 was released with this bug fixed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To the extent this is exploitable, disallowing untrusted namespace paths in container configuration should eliminate all practical ways of exploiting this bug. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>commit d72d057ba794 (\"runc init: avoid netlink message length overflows\")</li>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2241\">https://bugs.chromium.org/p/project-zero/issues/detail?id=2241</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Felix Wilhelm from Google Project Zero for discovering and reporting this vulnerability. In particular, the fact they found this vulnerability so quickly, before we made a 1.1 release of runc (which would've been vulnerable) was quite impressive.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/opencontainers/runc\">our repo</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f\">https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43784\">https://nvd.nist.gov/vuln/detail/CVE-2021-43784</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554\">https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae\">https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed\">https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed</a></li>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2241\">https://bugs.chromium.org/p/project-zero/issues/detail?id=2241</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html\">https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/dde509df4e28cec33b3c99c6cda3d4fd5beafc77\">https://github.com/opencontainers/runc/commit/dde509df4e28cec33b3c99c6cda3d4fd5beafc77</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0274\">https://pkg.go.dev/vuln/GO-2022-0274</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v95c-p5hm-xq8f\">https://github.com/advisories/GHSA-v95c-p5hm-xq8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v95c-p5hm-xq8f",
            "title": "[github.com/opencontainers/runc] Overflow in netlink bytemsg length field allows attacker to override netlink-based container configuration in RunC",
            "date_modified": "2023-08-29T22:55:58.000Z",
            "date_published": "2021-12-07T21:22:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v95c-p5hm-xq8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>\n<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>\n<p>This issue is patched in 1.5.9 and 1.6.2.</p>\n<h3 id=\"references\">References</h3>\n<p>Fix by: #5000 </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/kubevela/kubevela\">KubeVela repo</a></li>\n<li>Email us at <a href=\"https://github.com/kubevela/kubevela#contact-us\">here</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39383\">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>\n<li><a href=\"https://github.com/kubevela/kubevela/pull/5000\">https://github.com/kubevela/kubevela/pull/5000</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1113\">https://pkg.go.dev/vuln/GO-2022-1113</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7",
            "title": "[github.com/oam-dev/kubevela] KubeVela VelaUX APIserver has SSRF vulnerability ",
            "date_modified": "2023-08-29T22:52:27.000Z",
            "date_published": "2022-11-18T17:14:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>\n<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>\n<p>This issue is patched in 1.5.9 and 1.6.2.</p>\n<h3 id=\"references\">References</h3>\n<p>Fix by: #5000 </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/kubevela/kubevela\">KubeVela repo</a></li>\n<li>Email us at <a href=\"https://github.com/kubevela/kubevela#contact-us\">here</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39383\">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>\n<li><a href=\"https://github.com/kubevela/kubevela/pull/5000\">https://github.com/kubevela/kubevela/pull/5000</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1113\">https://pkg.go.dev/vuln/GO-2022-1113</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5xf-x7q6-3rm7\">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7",
            "title": "[github.com/oam-dev/kubevela] KubeVela VelaUX APIserver has SSRF vulnerability ",
            "date_modified": "2023-08-29T22:52:27.000Z",
            "date_published": "2022-11-18T17:14:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>libcontainer/user/user.go in runC before 0.1.0, as used in Docker before 1.11.2, improperly treats a numeric UID as a potential username, which allows local users to gain privileges via a numeric username in the password file in a container.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-3697\">https://nvd.nist.gov/vuln/detail/CVE-2016-3697</a></li>\n<li><a href=\"https://github.com/docker/docker/issues/21436\">https://github.com/docker/docker/issues/21436</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/pull/708\">https://github.com/opencontainers/runc/pull/708</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091\">https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/releases/tag/v0.1.0\">https://github.com/opencontainers/runc/releases/tag/v0.1.0</a></li>\n<li><a href=\"https://lists.opensuse.org/opensuse-updates/2016-05/msg00111.html\">https://lists.opensuse.org/opensuse-updates/2016-05/msg00111.html</a></li>\n<li><a href=\"https://rhn.redhat.com/errata/RHSA-2016-1034.html\">https://rhn.redhat.com/errata/RHSA-2016-1034.html</a></li>\n<li><a href=\"https://rhn.redhat.com/errata/RHSA-2016-2634.html\">https://rhn.redhat.com/errata/RHSA-2016-2634.html</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-28\">https://security.gentoo.org/glsa/201612-28</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2021-0070\">https://pkg.go.dev/vuln/GO-2021-0070</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2016-1034.html\">http://rhn.redhat.com/errata/RHSA-2016-1034.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2016-2634.html\">http://rhn.redhat.com/errata/RHSA-2016-2634.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q3j5-32m5-58c2\">https://github.com/advisories/GHSA-q3j5-32m5-58c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q3j5-32m5-58c2",
            "title": "[github.com/opencontainers/runc] Privilege Elevation in runc",
            "date_modified": "2023-08-29T22:43:33.000Z",
            "date_published": "2021-12-20T18:21:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q3j5-32m5-58c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of Kyverno on versions 1.8.3 or 1.8.4 who use <code>verifyImages</code> rules to verify container image signatures, and do not prevent use of unknown registries.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been fixed in version <a href=\"https://github.com/kyverno/kyverno/releases/tag/v1.8.5\">1.8.5</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configure a Kyverno policy to restrict registries to a set of secure trusted image registries (<a href=\"https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/\">sample</a>).</p>\n<h3 id=\"references\">References</h3>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-m3cq-xcx9-3gvm\">https://github.com/kyverno/kyverno/security/advisories/GHSA-m3cq-xcx9-3gvm</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/5713\">https://github.com/kyverno/kyverno/pull/5713</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/releases/tag/v1.8.5\">https://github.com/kyverno/kyverno/releases/tag/v1.8.5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-47633\">https://nvd.nist.gov/vuln/detail/CVE-2022-47633</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/compare/v1.8.4...v1.8.5\">https://github.com/kyverno/kyverno/compare/v1.8.4...v1.8.5</a></li>\n<li><a href=\"https://kyverno.io/docs/writing-policies/verify-images/\">https://kyverno.io/docs/writing-policies/verify-images/</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1180\">https://pkg.go.dev/vuln/GO-2022-1180</a></li>\n<li><a href=\"https://web.archive.org/web/20230426095744/https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/\">https://web.archive.org/web/20230426095744/https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m3cq-xcx9-3gvm\">https://github.com/advisories/GHSA-m3cq-xcx9-3gvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m3cq-xcx9-3gvm",
            "title": "[github.com/kyverno/kyverno] kyverno verifyImages rule bypass possible with malicious proxy/registry",
            "date_modified": "2023-08-29T22:40:41.000Z",
            "date_published": "2022-12-21T17:24:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m3cq-xcx9-3gvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16250\">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp52-qw33-mfmw\">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw",
            "title": "[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault",
            "date_modified": "2023-08-29T22:39:29.000Z",
            "date_published": "2021-08-02T17:11:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16250\">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp52-qw33-mfmw\">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw",
            "title": "[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault",
            "date_modified": "2023-08-29T22:39:29.000Z",
            "date_published": "2021-08-02T17:11:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16250\">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp52-qw33-mfmw\">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw",
            "title": "[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault",
            "date_modified": "2023-08-29T22:39:29.000Z",
            "date_published": "2021-08-02T17:11:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16250\">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151\">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/vault/\">https://www.hashicorp.com/blog/category/vault/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html\">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp52-qw33-mfmw\">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw",
            "title": "[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault",
            "date_modified": "2023-08-29T22:39:29.000Z",
            "date_published": "2021-08-02T17:11:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp52-qw33-mfmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The miekg Go DNS package before 1.1.25, as used in CoreDNS before 1.6.6 and other products, improperly generates random numbers because math/rand is used. The TXID becomes predictable, leading to response forgeries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19794\">https://nvd.nist.gov/vuln/detail/CVE-2019-19794</a></li>\n<li><a href=\"https://github.com/coredns/coredns/issues/3519\">https://github.com/coredns/coredns/issues/3519</a></li>\n<li><a href=\"https://github.com/coredns/coredns/issues/3547\">https://github.com/coredns/coredns/issues/3547</a></li>\n<li><a href=\"https://github.com/miekg/dns/issues/1043\">https://github.com/miekg/dns/issues/1043</a></li>\n<li><a href=\"https://github.com/miekg/dns/pull/1044\">https://github.com/miekg/dns/pull/1044</a></li>\n<li><a href=\"https://github.com/miekg/dns/commit/8ebf2e419df7857ac8919baa05248789a8ffbf33\">https://github.com/miekg/dns/commit/8ebf2e419df7857ac8919baa05248789a8ffbf33</a></li>\n<li><a href=\"https://github.com/miekg/dns/compare/v1.1.24...v1.1.25\">https://github.com/miekg/dns/compare/v1.1.24...v1.1.25</a></li>\n<li><a href=\"https://github.com/miekg/dns/issues/1037\">https://github.com/miekg/dns/issues/1037</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0008\">https://pkg.go.dev/vuln/GO-2020-0008</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44r7-7p62-q3fr\">https://github.com/advisories/GHSA-44r7-7p62-q3fr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44r7-7p62-q3fr",
            "title": "[github.com/miekg/dns] miekg/dns insecurely generates random numbers",
            "date_modified": "2023-08-29T22:33:25.000Z",
            "date_published": "2021-05-18T21:09:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44r7-7p62-q3fr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26892\">https://nvd.nist.gov/vuln/detail/CVE-2020-26892</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f\">https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/11/02/2\">https://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a\">https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0380\">https://pkg.go.dev/vuln/GO-2022-0380</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/advisories/GHSA-4w5x-x539-ppf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5",
            "title": "[github.com/nats-io/nats-server/v2] Incorrect handling of credential expiry by /nats-io/nats-server",
            "date_modified": "2023-08-29T22:09:22.000Z",
            "date_published": "2022-02-11T23:42:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26892\">https://nvd.nist.gov/vuln/detail/CVE-2020-26892</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f\">https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commits/master\">https://github.com/nats-io/nats-server/commits/master</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/11/02/2\">https://www.openwall.com/lists/oss-security/2020/11/02/2</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a\">https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0380\">https://pkg.go.dev/vuln/GO-2022-0380</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w5x-x539-ppf5\">https://github.com/advisories/GHSA-4w5x-x539-ppf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5",
            "title": "[github.com/nats-io/jwt] Incorrect handling of credential expiry by /nats-io/nats-server",
            "date_modified": "2023-08-29T22:09:22.000Z",
            "date_published": "2022-02-11T23:42:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w5x-x539-ppf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a> )</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-2c64-vj8g-vwrq\">https://github.com/nats-io/nats-server/security/advisories/GHSA-2c64-vj8g-vwrq</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a\">https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c64-vj8g-vwrq\">https://github.com/advisories/GHSA-2c64-vj8g-vwrq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c64-vj8g-vwrq",
            "title": "[github.com/nats-io/jwt] Incorrect handling of credential expiry by /nats-io/nats-server",
            "date_modified": "2023-08-29T22:08:20.000Z",
            "date_published": "2021-05-21T16:11:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c64-vj8g-vwrq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a> )</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>NATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.</p>\n<p>The NATS accounts system has expiration timestamps on credentials; the <a href=\"https://github.com/nats-io/jwt\">https://github.com/nats-io/jwt</a> library had an API which encouraged misuse and an <code>IsRevoked()</code> method which misused its own API.</p>\n<p>A new <code>IsClaimRevoked()</code> method has correct handling and the nats-server has been updated to use this.  The old <code>IsRevoked()</code> method now always returns true and other client code will have to be updated to avoid calling it.</p>\n<p>The CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 1.1.0</li>\n<li>fixed after nats-io/jwt PR 103 landed (2020-10-06)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.1.9<ul>\n<li>2.0.0 through and including 2.1.8 are vulnerable.</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server PRs 1632, 1635, 1645</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>Time-based credential expiry did not work.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Have credentials which only expire after fixes can be deployed.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-2c64-vj8g-vwrq\">https://github.com/nats-io/nats-server/security/advisories/GHSA-2c64-vj8g-vwrq</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a\">https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2020-26892.txt\">https://advisories.nats.io/CVE/CVE-2020-26892.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c64-vj8g-vwrq\">https://github.com/advisories/GHSA-2c64-vj8g-vwrq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c64-vj8g-vwrq",
            "title": "[github.com/nats-io/nats-server/v2] Incorrect handling of credential expiry by /nats-io/nats-server",
            "date_modified": "2023-08-29T22:08:20.000Z",
            "date_published": "2021-05-21T16:11:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c64-vj8g-vwrq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/pull/149\">https://github.com/nats-io/jwt/pull/149</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt/v2] nats-io/jwt not enforcing checking of Import token permissions",
            "date_modified": "2023-08-29T22:07:01.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a>)</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.</p>\n<p>The JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.</p>\n<p>As a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import <em>any</em> Subject from the Exporting account, not just the Subject referenced in the Import Token.</p>\n<p>The NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.</p>\n<p>The CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<h4 id=\"jwt-library\">JWT library</h4>\n<ul>\n<li>all versions prior to 2.0.1</li>\n<li>fixed after nats-io/jwt#149 landed (2021-03-14)</li>\n</ul>\n<h4 id=\"nats-server\">NATS Server</h4>\n<ul>\n<li>Version 2 prior to 2.2.0<ul>\n<li>2.0.0 through and including 2.1.9 are vulnerable</li>\n</ul>\n</li>\n<li>fixed with nats-io/nats-server@423b79440c (2021-03-14)</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>In deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.</p>\n<p>Abuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.</p>\n<h2 id=\"workaround\">Workaround</h2>\n<p>Deny access to clients to update their account JWT in the account server.</p>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the JWT dependency in any application using it.</p>\n<p>Upgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).</p>\n<p>Audit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <a href=\"https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a\">https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c</a></li>\n<li><a href=\"https://github.com/nats-io/jwt/pull/149\">https://github.com/nats-io/jwt/pull/149</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2021-3127.txt\">https://advisories.nats.io/CVE/CVE-2021-3127.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62mh-w5cv-p88c\">https://github.com/advisories/GHSA-62mh-w5cv-p88c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c",
            "title": "[github.com/nats-io/jwt] nats-io/jwt not enforcing checking of Import token permissions",
            "date_modified": "2023-08-29T22:07:01.000Z",
            "date_published": "2022-02-15T00:42:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62mh-w5cv-p88c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Decoding certain blocks using the go-ipld-prime version of the dag-pb codec (go-codec-dagpb) can cause a panic.  The panic comes from an assumption that the reported link length is accurate, but if the block ends before that reported length then it’s a buffer overread.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in v1.3.1 and above.</p>\n<p>Consumers can discover the versions of <code>go-codec-dagpb</code> in a module's dependency graph using the following command in the module root:</p>\n<p><code>go mod graph | grep go-codec-dagpb</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You can work around this issue without upgrading by recovering panics higher in the call stack of the goroutine that calls the defective code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Ask in <a href=\"https://discord.gg/ipfs\">IPFS Discord #ipld-chatter</a></li>\n<li>Open an issue in <a href=\"https://github.com/ipld/go-codec-dagpb\">go-codec-dagpb</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2\">https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2</a></li>\n<li><a href=\"https://github.com/ipld/go-codec-dagpb/commit/a17ace35cc760a2698645c09868f9050fa219f57\">https://github.com/ipld/go-codec-dagpb/commit/a17ace35cc760a2698645c09868f9050fa219f57</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0422\">https://pkg.go.dev/vuln/GO-2022-0422</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g3vv-g2j5-45f2\">https://github.com/advisories/GHSA-g3vv-g2j5-45f2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g3vv-g2j5-45f2",
            "title": "[github.com/ipld/go-codec-dagpb] Panic when processing certain blocks",
            "date_modified": "2023-08-29T22:02:00.000Z",
            "date_published": "2022-04-08T22:08:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g3vv-g2j5-45f2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Labstack Echo v4.8.0 was discovered to contain an open redirect vulnerability via the Static Handler component. This vulnerability can be leveraged by attackers to cause a Server-Side Request Forgery (SSRF). Version 4.9.0 contains a patch for the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40083\">https://nvd.nist.gov/vuln/detail/CVE-2022-40083</a></li>\n<li><a href=\"https://github.com/labstack/echo/issues/2259\">https://github.com/labstack/echo/issues/2259</a></li>\n<li><a href=\"https://github.com/labstack/echo/pull/2260\">https://github.com/labstack/echo/pull/2260</a></li>\n<li><a href=\"https://github.com/labstack/echo/releases/tag/v4.9.0\">https://github.com/labstack/echo/releases/tag/v4.9.0</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-1031\">https://pkg.go.dev/vuln/GO-2022-1031</a></li>\n<li><a href=\"https://github.com/labstack/echo/pull/2260/commits/3154abd1401554fe4d1c09ec550506d8625fc042\">https://github.com/labstack/echo/pull/2260/commits/3154abd1401554fe4d1c09ec550506d8625fc042</a></li>\n<li><a href=\"https://github.com/labstack/echo/commit/0ac4d74402391912ff6da733bb09fd4c3980b4e1\">https://github.com/labstack/echo/commit/0ac4d74402391912ff6da733bb09fd4c3980b4e1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crxj-hrmp-4rwf\">https://github.com/advisories/GHSA-crxj-hrmp-4rwf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crxj-hrmp-4rwf",
            "title": "[github.com/labstack/echo/v4] Labstack Echo Open Redirect vulnerability",
            "date_modified": "2023-08-29T21:54:54.000Z",
            "date_published": "2022-09-29T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crxj-hrmp-4rwf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in <code>setTA</code> in <code>scan_rr.go</code> in the Miek Gieben DNS library before 1.0.10 for Go. A <code>dns.ParseZone()</code> parsing error causes a segmentation violation, leading to denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-17419\">https://nvd.nist.gov/vuln/detail/CVE-2018-17419</a></li>\n<li><a href=\"https://github.com/miekg/dns/issues/742\">https://github.com/miekg/dns/issues/742</a></li>\n<li><a href=\"https://github.com/miekg/dns/commit/501e858f679edecd4a38a86317ce50271014a80d\">https://github.com/miekg/dns/commit/501e858f679edecd4a38a86317ce50271014a80d</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2020-0028\">https://pkg.go.dev/vuln/GO-2020-0028</a></li>\n<li><a href=\"https://github.com/miekg/dns/pull/745/commits/f71d7d9d77d439b30a5e50900df5b1f988a50e5e\">https://github.com/miekg/dns/pull/745/commits/f71d7d9d77d439b30a5e50900df5b1f988a50e5e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9jcx-pr2f-qvq5\">https://github.com/advisories/GHSA-9jcx-pr2f-qvq5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9jcx-pr2f-qvq5",
            "title": "[github.com/miekg/dns] miekg/dns parsing error leads to nil pointer dereference and DoS",
            "date_modified": "2023-08-29T21:48:24.000Z",
            "date_published": "2021-05-18T18:34:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9jcx-pr2f-qvq5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>go-ipld-prime</code> is a series of Go interfaces for manipulating IPLD data and a Go module that contains the <code>go-ipld-prime/codec/json</code> codec.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Encoding data which contains a <code>Bytes</code> kind Node will pass a <code>Bytes</code> token to the JSON encoder which will panic as it doesn't expect to receive <code>Bytes</code> tokens. Such an encoding should be treated as an error, as plain JSON should not be able to encode Bytes.</p>\n<p><strong>This only impacts uses of the \"json\" codec, \"dag-json\" is not impacted.</strong> Use of \"json\" as a decoder is not impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in v0.19.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prefer the \"dag-json\" codec which has the ability to <a href=\"https://ipld.io/specs/codecs/dag-json/spec/#bytes\">encode bytes</a>.</p>\n<h3 id=\"references\">References</h3>\n<p>See fix in <a href=\"https://github.com/ipld/go-ipld-prime/pull/472\">#472</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipld/go-ipld-prime/security/advisories/GHSA-c653-6hhg-9x92\">https://github.com/ipld/go-ipld-prime/security/advisories/GHSA-c653-6hhg-9x92</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22460\">https://nvd.nist.gov/vuln/detail/CVE-2023-22460</a></li>\n<li><a href=\"https://github.com/ipld/go-ipld-prime/pull/472\">https://github.com/ipld/go-ipld-prime/pull/472</a></li>\n<li><a href=\"https://github.com/ipld/go-ipld-prime/releases/tag/v0.19.0\">https://github.com/ipld/go-ipld-prime/releases/tag/v0.19.0</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1269\">https://pkg.go.dev/vuln/GO-2023-1269</a></li>\n<li><a href=\"https://github.com/ipld/go-ipld-prime/commit/146d1c8529676fe9ee0604f014656af2395505fc\">https://github.com/ipld/go-ipld-prime/commit/146d1c8529676fe9ee0604f014656af2395505fc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c653-6hhg-9x92\">https://github.com/advisories/GHSA-c653-6hhg-9x92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c653-6hhg-9x92",
            "title": "[github.com/ipld/go-ipld-prime] go-ipld-prime/codec/json may panic if asked to encode bytes",
            "date_modified": "2023-08-29T21:14:17.000Z",
            "date_published": "2023-01-05T12:04:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c653-6hhg-9x92"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}