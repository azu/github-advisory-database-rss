{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malformed proposed entry of the <code>intoto/v0.0.2</code> type can cause a panic on a thread within the Rekor process. The thread is recovered so the client receives a 500 error message and service still continues, so the availability impact of this is minimal.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in v1.2.0 of Rekor.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<p>Discovered by OSS-Fuzz</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr\">https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr</a></li>\n<li><a href=\"https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4\">https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-frqx-jfcm-6jjr\">https://github.com/advisories/GHSA-frqx-jfcm-6jjr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-frqx-jfcm-6jjr",
            "title": "[github.com/sigstore/rekor] malformed proposed intoto entries can cause a panic",
            "date_modified": "2023-05-26T19:39:03.000Z",
            "date_published": "2023-05-26T19:39:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-frqx-jfcm-6jjr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in secrets-store-csi-driver where an actor with access to the driver logs could observe service account tokens.  These tokens could then potentially be exchanged with external cloud providers to access secrets stored in cloud vault solutions.  Tokens are only logged when <a href=\"https://kubernetes-csi.github.io/docs/token-requests.html\">TokenRequests is configured in the CSIDriver object</a> and the driver is set to run at log level 2 or greater via the -v flag.</p>\n<p>This issue has been rated MEDIUM <a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N\">CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N</a> (6.5), and assigned CVE-2023-2878</p>\n<h3 id=\"am-i-vulnerable\">Am I vulnerable?</h3>\n<p>You may be vulnerable if <a href=\"https://kubernetes-csi.github.io/docs/token-requests.html\">TokenRequests is configured in the CSIDriver object</a> and the driver is set to run at log level 2 or greater via the -v flag.</p>\n<p>To check if token requests are configured, run the following command:</p>\n<pre><code class=\"language-bash\">kubectl get csidriver secrets-store.csi.k8s.io -o jsonpath=\"{.spec.tokenRequests}\"\n</code></pre>\n<p>To check if tokens are being logged, examine the secrets-store container log:</p>\n<pre><code class=\"language-bash\">kubectl logs -l app=secrets-store-csi-driver -c secrets-store -f | grep --line-buffered \"csi.storage.k8s.io/serviceAccount.tokens\"\n</code></pre>\n<h3 id=\"affected-versions\">Affected Versions</h3>\n<ul>\n<li>secrets-store-csi-driver &lt; 1.3.3</li>\n</ul>\n<h3 id=\"how-do-i-mitigate-this-vulnerability\">How do I mitigate this vulnerability?</h3>\n<p>Prior to upgrading, this vulnerability can be mitigated by running secrets-store-csi-driver at log level 0 or 1 via the -v flag.</p>\n<h3 id=\"fixed-versions\">Fixed Versions</h3>\n<ul>\n<li>secrets-store-csi-driver &gt;= 1.3.3</li>\n</ul>\n<p>To upgrade, refer to the documentation: <a href=\"https://secrets-store-csi-driver.sigs.k8s.io/getting-started/upgrades.html#upgrades\">https://secrets-store-csi-driver.sigs.k8s.io/getting-started/upgrades.html#upgrades</a></p>\n<h3 id=\"detection\">Detection</h3>\n<p>Examine cloud provider logs for unexpected token exchanges, as well as unexpected access to cloud vault secrets.</p>\n<p>If you find evidence that this vulnerability has been exploited, please contact <a href=\"https://groups.google.com/\">security@kubernetes.io</a></p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This vulnerability was reported by Tomer Shaiman @tshaiman from Microsoft.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kubernetes-sigs/secrets-store-csi-driver/security/advisories/GHSA-g82w-58jf-gcxx\">https://github.com/kubernetes-sigs/secrets-store-csi-driver/security/advisories/GHSA-g82w-58jf-gcxx</a></li>\n<li><a href=\"https://github.com/kubernetes-sigs/secrets-store-csi-driver/releases/tag/v1.3.3\">https://github.com/kubernetes-sigs/secrets-store-csi-driver/releases/tag/v1.3.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g82w-58jf-gcxx\">https://github.com/advisories/GHSA-g82w-58jf-gcxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g82w-58jf-gcxx",
            "title": "[sigs.k8s.io/secrets-store-csi-driver] secrets-store-csi-driver discloses service account tokens in logs",
            "date_modified": "2023-05-26T13:59:22.000Z",
            "date_published": "2023-05-26T13:59:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g82w-58jf-gcxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Unicode RIGHT-TO-LEFT OVERRIDE characters can be used to mask the original filename.</p>\n<h3 id=\"reported-by\">Reported-By</h3>\n<p>Thanks to the report from Mio Li <a href=\"mailto:wulilixi1@gmail.com\">wulilixi1@gmail.com</a></p>\n<h3 id=\"patches\">Patches</h3>\n<pre><code>commit 17e791afb90c9ad27c65f63c6be14f2f6a3a9d60\nAuthor: Daniel Valdivia &lt;18384552+dvaldivia@users.noreply.github.com&gt;\nDate:   Tue May 23 08:47:12 2023 -0700\n\n    Replace RIGHT-TO-LEFT OVERRIDE unicode (#2828)\n    \n    Signed-off-by: Daniel Valdivia &lt;18384552+dvaldivia@users.noreply.github.com&gt;\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Workarounds are to remove the concerned file and rewrite it properly with the right file and extensions.  Avoid using RTLO characters in your filenames.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/minio/console/security/advisories/GHSA-jv3f-7m33-qp65\">https://github.com/minio/console/security/advisories/GHSA-jv3f-7m33-qp65</a></li>\n<li><a href=\"https://github.com/minio/console/commit/17e791afb90c9ad27c65f63c6be14f2f6a3a9d60\">https://github.com/minio/console/commit/17e791afb90c9ad27c65f63c6be14f2f6a3a9d60</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jv3f-7m33-qp65\">https://github.com/advisories/GHSA-jv3f-7m33-qp65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jv3f-7m33-qp65",
            "title": "[github.com/minio/console] Minio console object names with RIGHT-TO-LEFT OVERRIDE unicode character can be exploited",
            "date_modified": "2023-05-26T13:57:28.000Z",
            "date_published": "2023-05-26T13:57:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jv3f-7m33-qp65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of the podSecurity (<code>validate.podSecurity</code>) subrule in Kyverno versions v1.9.2 and v1.9.3 may be unable to enforce the check for the Seccomp control at the baseline level when using a <code>version</code> value of <code>latest</code>. There is no effect if a version number is referenced instead. See the <a href=\"https://kyverno.io/docs/writing-policies/validate/#pod-security\">documentation</a> for information on this subrule type. Users of Kyverno v1.9.2 and v1.9.3 are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v1.9.4\nv1.10.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around this issue without upgrading to v1.9.4, temporarily install individual policies for the respective Seccomp checks in baseline <a href=\"https://kyverno.io/policies/pod-security/baseline/restrict-seccomp/restrict-seccomp/\">here</a> and restricted <a href=\"https://kyverno.io/policies/pod-security/restricted/restrict-seccomp-strict/restrict-seccomp-strict/\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://kyverno.io/docs/writing-policies/validate/#pod-security\">https://kyverno.io/docs/writing-policies/validate/#pod-security</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/7263\">https://github.com/kyverno/kyverno/pull/7263</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-33hq-f2mf-jm3c\">https://github.com/kyverno/kyverno/security/advisories/GHSA-33hq-f2mf-jm3c</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/pull/7263\">https://github.com/kyverno/kyverno/pull/7263</a></li>\n<li><a href=\"https://github.com/kyverno/kyverno/releases/tag/v1.9.4\">https://github.com/kyverno/kyverno/releases/tag/v1.9.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33hq-f2mf-jm3c\">https://github.com/advisories/GHSA-33hq-f2mf-jm3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33hq-f2mf-jm3c",
            "title": "[github.com/kyverno/kyverno] kyverno seccomp control can be circumvented",
            "date_modified": "2023-05-26T21:00:44.000Z",
            "date_published": "2023-05-25T16:58:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33hq-f2mf-jm3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use a newline character to bypass the sanitization of the <code>spec.rules[].http.paths[].path</code> field of an Ingress object (in the <code>networking.k8s.io</code> or <code>extensions</code> API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25748\">https://nvd.nist.gov/vuln/detail/CVE-2021-25748</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/issues/8686\">https://github.com/kubernetes/ingress-nginx/issues/8686</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/avaRYa9c7I8\">https://groups.google.com/g/kubernetes-security-announce/c/avaRYa9c7I8</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/pull/8623\">https://github.com/kubernetes/ingress-nginx/pull/8623</a></li>\n<li><a href=\"https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1\">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-863x-868h-968x\">https://github.com/advisories/GHSA-863x-868h-968x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-863x-868h-968x",
            "title": "[k8s.io/ingress-nginx] Ingress-nginx `path` sanitization can be bypassed with newline character",
            "date_modified": "2023-05-24T21:55:35.000Z",
            "date_published": "2023-05-24T18:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-863x-868h-968x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat\";x=.txt\" will be sent as a file named \"setup.bat\".</p>\n<p>If the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gin-gonic/gin/issues/3555\">https://github.com/gin-gonic/gin/issues/3555</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/pull/3556\">https://github.com/gin-gonic/gin/pull/3556</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1737\">https://pkg.go.dev/vuln/GO-2023-1737</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c4m-59x9-fr2g\">https://github.com/advisories/GHSA-2c4m-59x9-fr2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c4m-59x9-fr2g",
            "title": "[github.com/gin-gonic/gin] Gin Web Framework does not properly sanitize filename parameter of Context.FileAttachment function",
            "date_modified": "2023-05-24T18:33:08.000Z",
            "date_published": "2023-05-12T20:19:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c4m-59x9-fr2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. </p>\n<h3 id=\"details\">Details</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. When nfpm packaged the files (without extra config for enforcing its own permissions) files could go out with bad permissions (chmod 666 or 777).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Create a default nfpm structure. </p>\n<p>Within the test folder, create 3 files named <code>chmod-XXX.sh</code>. Each script has file \npermissions set corresponding with their file names (<code>chmod-777.sh</code> = <code>chmod 777</code>). Below each \nfile and permissions can be seen.</p>\n<pre><code class=\"language-console\">$ ls -lart test \ntotal 24\n-rwxrwxrwx   1 user  group   11 May 19 13:15 chmod-777.sh\n-rw-rw-rw-   1 user  group   11 May 19 13:16 chmod-666.sh\ndrwxr-xr-x   5 user  group  160 May 19 13:19 .\n-rw-rw-r--   1 user  group   11 May 19 13:19 chmod-664.sh\ndrwxr-xr-x  10 user  group  320 May 19 13:29 ..\n</code></pre>\n<p>Below is the snippet nfpm configuration file of the contents of the package. The test folder \nand files has no extra config for enforcing permissions. </p>\n<pre><code class=\"language-yaml\">contents:\n- src: foo-binary\n  dst: /usr/bin/bar\n- src: bar-config.conf\n  dst: /etc/foo-binary/bar-config.conf\n  type: config\n- src: test\n  dst: /etc/test/scripts\n</code></pre>\n<p>The next step is to create a deb package.</p>\n<pre><code class=\"language-console\">$ nfpm package -p deb # Create dep package\nusing deb packager...\ncreated package: foo_1.0.0_arm64.deb\n</code></pre>\n<p>When on a Ubuntu VM, install the foo package which was created</p>\n<pre><code class=\"language-console\">$ sudo dpkg -i foo_1.0.0_arm64.deb # Installing deb package within Ubuntu\nSelecting previously unselected package foo.\n(Reading database ... 67540 files and directories currently installed.)\nPreparing to unpack foo_1.0.0_arm64.deb ...\nUnpacking foo (1.0.0) ...\nSetting up foo (1.0.0) ...\n</code></pre>\n<p>Looking at <code>/etc/test/scripts</code> and viewing the permissions. Permissions are passed exactly the same as the source.</p>\n<pre><code class=\"language-console\">$ ls -lart /etc/test/scripts\ntotal 20\n-rwxrwxrwx 1 root root   11 May 22 12:15 chmod-777.sh\n-rw-rw-rw- 1 root root   11 May 22 12:16 chmod-666.sh\n-rw-rw-r-- 1 root root   11 May 22 12:19 chmod-664.sh\ndrwxr-xr-x 3 root root 4096 May 22 13:00 ..\ndrwxr-xr-x 2 root root 4096 May 22 13:00 .\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>To prevent world-writable files from making it into the packages, add the ability to override the default permissions of packaged files using a umask config option in the packaging spec file. This feature in nfpm would allow applying a global umask across any files being packaged, therefore, with the correct configuration, preventing world-writable files without needing to list permissions on each and every file in the package</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Vulnerability is <a href=\"https://cwe.mitre.org/data/definitions/276.html\">https://cwe.mitre.org/data/definitions/276.html</a>\n<a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N\">https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N</a></p>\n<p>Anyone using nfpm for creating packages and not checking/setting file permissions before packaging could result in bad permissions for files/folders.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30\">https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/releases/tag/v2.29.0\">https://github.com/goreleaser/nfpm/releases/tag/v2.29.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c",
            "title": "[github.com/goreleaser/nfpm] nfpm has incorrect default permissions",
            "date_modified": "2023-05-24T17:30:18.000Z",
            "date_published": "2023-05-24T17:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. </p>\n<h3 id=\"details\">Details</h3>\n<p>When building packages directly from source control, file permissions on the checked-in files are not maintained. When nfpm packaged the files (without extra config for enforcing its own permissions) files could go out with bad permissions (chmod 666 or 777).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Create a default nfpm structure. </p>\n<p>Within the test folder, create 3 files named <code>chmod-XXX.sh</code>. Each script has file \npermissions set corresponding with their file names (<code>chmod-777.sh</code> = <code>chmod 777</code>). Below each \nfile and permissions can be seen.</p>\n<pre><code class=\"language-console\">$ ls -lart test \ntotal 24\n-rwxrwxrwx   1 user  group   11 May 19 13:15 chmod-777.sh\n-rw-rw-rw-   1 user  group   11 May 19 13:16 chmod-666.sh\ndrwxr-xr-x   5 user  group  160 May 19 13:19 .\n-rw-rw-r--   1 user  group   11 May 19 13:19 chmod-664.sh\ndrwxr-xr-x  10 user  group  320 May 19 13:29 ..\n</code></pre>\n<p>Below is the snippet nfpm configuration file of the contents of the package. The test folder \nand files has no extra config for enforcing permissions. </p>\n<pre><code class=\"language-yaml\">contents:\n- src: foo-binary\n  dst: /usr/bin/bar\n- src: bar-config.conf\n  dst: /etc/foo-binary/bar-config.conf\n  type: config\n- src: test\n  dst: /etc/test/scripts\n</code></pre>\n<p>The next step is to create a deb package.</p>\n<pre><code class=\"language-console\">$ nfpm package -p deb # Create dep package\nusing deb packager...\ncreated package: foo_1.0.0_arm64.deb\n</code></pre>\n<p>When on a Ubuntu VM, install the foo package which was created</p>\n<pre><code class=\"language-console\">$ sudo dpkg -i foo_1.0.0_arm64.deb # Installing deb package within Ubuntu\nSelecting previously unselected package foo.\n(Reading database ... 67540 files and directories currently installed.)\nPreparing to unpack foo_1.0.0_arm64.deb ...\nUnpacking foo (1.0.0) ...\nSetting up foo (1.0.0) ...\n</code></pre>\n<p>Looking at <code>/etc/test/scripts</code> and viewing the permissions. Permissions are passed exactly the same as the source.</p>\n<pre><code class=\"language-console\">$ ls -lart /etc/test/scripts\ntotal 20\n-rwxrwxrwx 1 root root   11 May 22 12:15 chmod-777.sh\n-rw-rw-rw- 1 root root   11 May 22 12:16 chmod-666.sh\n-rw-rw-r-- 1 root root   11 May 22 12:19 chmod-664.sh\ndrwxr-xr-x 3 root root 4096 May 22 13:00 ..\ndrwxr-xr-x 2 root root 4096 May 22 13:00 .\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>To prevent world-writable files from making it into the packages, add the ability to override the default permissions of packaged files using a umask config option in the packaging spec file. This feature in nfpm would allow applying a global umask across any files being packaged, therefore, with the correct configuration, preventing world-writable files without needing to list permissions on each and every file in the package</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Vulnerability is <a href=\"https://cwe.mitre.org/data/definitions/276.html\">https://cwe.mitre.org/data/definitions/276.html</a>\n<a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N\">https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N</a></p>\n<p>Anyone using nfpm for creating packages and not checking/setting file permissions before packaging could result in bad permissions for files/folders.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30\">https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30</a></li>\n<li><a href=\"https://github.com/goreleaser/nfpm/releases/tag/v2.29.0\">https://github.com/goreleaser/nfpm/releases/tag/v2.29.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7jw-q4fg-qc4c\">https://github.com/advisories/GHSA-w7jw-q4fg-qc4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c",
            "title": "[github.com/goreleaser/nfpm/v2] nfpm has incorrect default permissions",
            "date_modified": "2023-05-24T17:30:18.000Z",
            "date_published": "2023-05-24T17:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only impacts users who:</p>\n<ul>\n<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>\n<li>Have an allow-all rule in place that affects only one of those endpoints</li>\n</ul>\n<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<p>It should be rewritten to:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.16\">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.12.9\">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.13.2\">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30851\">https://nvd.nist.gov/vuln/detail/CVE-2023-30851</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4",
            "title": "[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium",
            "date_modified": "2023-05-25T19:07:27.000Z",
            "date_published": "2023-05-22T20:33:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only impacts users who:</p>\n<ul>\n<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>\n<li>Have an allow-all rule in place that affects only one of those endpoints</li>\n</ul>\n<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<p>It should be rewritten to:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.16\">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.12.9\">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.13.2\">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30851\">https://nvd.nist.gov/vuln/detail/CVE-2023-30851</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4",
            "title": "[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium",
            "date_modified": "2023-05-25T19:07:27.000Z",
            "date_published": "2023-05-22T20:33:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only impacts users who:</p>\n<ul>\n<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>\n<li>Have an allow-all rule in place that affects only one of those endpoints</li>\n</ul>\n<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<p>It should be rewritten to:</p>\n<pre><code>  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.16\">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.12.9\">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.13.2\">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30851\">https://nvd.nist.gov/vuln/detail/CVE-2023-30851</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h44-x2wx-49f4\">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4",
            "title": "[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium",
            "date_modified": "2023-05-25T19:07:27.000Z",
            "date_published": "2023-05-22T20:33:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h44-x2wx-49f4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><a href=\"https://en.wikipedia.org/wiki/Timing_attack\">Timing attacks</a> occur when an attacker can guess a secret by observing a difference in processing time for valid and invalid inputs. Sensitive secrets such as passwords, token and API keys should be compared only using a constant-time comparision function.\nMore information on this attack type can be found in <a href=\"https://verboselogging.com/2012/08/20/a-timing-attack-in-action\">this blog post</a>. </p>\n<h1 id=\"root-cause-analysis\">Root Cause Analysis</h1>\n<p>In this case, the vulnerability occurs due to the following code.</p>\n<p><a href=\"https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46-L46\">https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46-L46</a></p>\n<p>Here, a untrusted input, sourced from a HTTP header, is compared directly with a secret. \nSince, this comparision is not secure, an attacker can mount a side-channel timing attack to guess the password.</p>\n<h1 id=\"remediation\">Remediation</h1>\n<p>This can be easily fixed using a constant time comparing function such as <code>crypto/subtle</code>'s <code>ConstantTimeCompare</code>. \nAn example fix can be found in <a href=\"https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820\">https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820</a> Alternatively, one can apply the patch below</p>\n<pre><code>From d18cff85e1a565f688f717fd8f2cacea62ff9dbf Mon Sep 17 00:00:00 2001\nFrom: Porcupiney Hairs &lt;porcupiney.hairs@protonmail.com&gt;\nDate: Sun, 7 May 2023 01:03:33 +0530\nSubject: [PATCH] Fix : Timing attack\n\n---\n auth.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/auth.go b/auth.go\nindex 1be96e9..be13f23 100644\n--- a/auth.go\n+++ b/auth.go\n@@ -2,6 +2,7 @@ package gost\n \n import (\n     \"bufio\"\n+\t\"crypto/subtle\"\n     \"io\"\n     \"strings\"\n     \"sync\"\n@@ -43,7 +44,8 @@ func (au *LocalAuthenticator) Authenticate(user, password string) bool {\n     }\n \n     v, ok := au.kvs[user]\n-\treturn ok &amp;&amp; (v == \"\" || password == v)\n+\tpassOk := subtle.ConstantTimeCompare([]byte(password), []byte(v)) == 0\n+\treturn ok &amp;&amp; (v == \"\" || passOk)\n }\n \n // Add adds a key-value pair to the Authenticator.\n-- \n2.25.1\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ginuerzh/gost/security/advisories/GHSA-qjrq-hm79-49ww\">https://github.com/ginuerzh/gost/security/advisories/GHSA-qjrq-hm79-49ww</a></li>\n<li><a href=\"https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46\">https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjrq-hm79-49ww\">https://github.com/advisories/GHSA-qjrq-hm79-49ww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjrq-hm79-49ww",
            "title": "[github.com/ginuerzh/gost] ginuerzh/gost vulnerable to Timing Attack",
            "date_modified": "2023-05-23T16:23:06.000Z",
            "date_published": "2023-05-22T19:47:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjrq-hm79-49ww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>unarr.go in go-unarr (aka Go bindings for unarr) 0.1.1 allows Directory Traversal via ../ in a pathname within a TAR archive.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-38197\">https://nvd.nist.gov/vuln/detail/CVE-2021-38197</a></li>\n<li><a href=\"https://github.com/gen2brain/go-unarr/issues/21\">https://github.com/gen2brain/go-unarr/issues/21</a></li>\n<li><a href=\"https://github.com/gen2brain/go-unarr/commit/239ec404d348280b50bbf671327709e8857fc5f4\">https://github.com/gen2brain/go-unarr/commit/239ec404d348280b50bbf671327709e8857fc5f4</a></li>\n<li><a href=\"https://github.com/gen2brain/go-unarr/releases/tag/v0.1.4\">https://github.com/gen2brain/go-unarr/releases/tag/v0.1.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9j4-cp63-qv62\">https://github.com/advisories/GHSA-v9j4-cp63-qv62</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9j4-cp63-qv62",
            "title": "[github.com/gen2brain/go-unarr] Tarslip in go-unarr",
            "date_modified": "2023-05-22T15:19:59.000Z",
            "date_published": "2021-09-01T18:32:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9j4-cp63-qv62"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Existing Dgraph audit logs are vulnerable to brute force attacks due to nonce collisions.  All audit logs generated by versions of Dgraph &lt;v23.0.0 are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue was patched in <a href=\"https://github.com/dgraph-io/dgraph/pull/8323\">https://github.com/dgraph-io/dgraph/pull/8323</a>.  Dgraph users should upgrade to v23.0.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Store existing audit logs in a secure location.  For extra security, encrypt using a tool like <code>gpg</code>.</p>\n<h3 id=\"references\">References</h3>\n<p>See <a href=\"https://github.com/dgraph-io/dgraph/pull/8323\">https://github.com/dgraph-io/dgraph/pull/8323</a> for more context on the vulnerability.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dgraph-io/dgraph/security/advisories/GHSA-92wq-q9pq-gw47\">https://github.com/dgraph-io/dgraph/security/advisories/GHSA-92wq-q9pq-gw47</a></li>\n<li><a href=\"https://github.com/dgraph-io/dgraph/pull/8323\">https://github.com/dgraph-io/dgraph/pull/8323</a></li>\n<li><a href=\"https://github.com/dgraph-io/dgraph/releases/tag/v23.0.0\">https://github.com/dgraph-io/dgraph/releases/tag/v23.0.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-31135\">https://nvd.nist.gov/vuln/detail/CVE-2023-31135</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Cryptographic_nonce\">https://en.wikipedia.org/wiki/Cryptographic_nonce</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92wq-q9pq-gw47\">https://github.com/advisories/GHSA-92wq-q9pq-gw47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92wq-q9pq-gw47",
            "title": "[github.com/dgraph-io/dgraph] Dgraph Audit Log Encryption Vulnerability",
            "date_modified": "2023-05-17T18:48:32.000Z",
            "date_published": "2023-05-17T17:07:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92wq-q9pq-gw47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>LeaseTimeToLive API allows access to key names (not value) associated to a lease when <code>Keys</code> parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>&lt; v3.4.26 and &lt; v3.5.9 are affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No.</p>\n<h3 id=\"reporter\">Reporter</h3>\n<p>Yoni Rozenshein</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298\">https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32082\">https://nvd.nist.gov/vuln/detail/CVE-2023-32082</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/pull/15656\">https://github.com/etcd-io/etcd/pull/15656</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md\">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md\">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p4g-rcw5-8298\">https://github.com/advisories/GHSA-3p4g-rcw5-8298</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p4g-rcw5-8298",
            "title": "[github.com/etcd-io/etcd] etcd Key name can be accessed via LeaseTimeToLive API",
            "date_modified": "2023-05-12T20:19:51.000Z",
            "date_published": "2023-05-12T20:19:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p4g-rcw5-8298"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>LeaseTimeToLive API allows access to key names (not value) associated to a lease when <code>Keys</code> parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>&lt; v3.4.26 and &lt; v3.5.9 are affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No.</p>\n<h3 id=\"reporter\">Reporter</h3>\n<p>Yoni Rozenshein</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298\">https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32082\">https://nvd.nist.gov/vuln/detail/CVE-2023-32082</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/pull/15656\">https://github.com/etcd-io/etcd/pull/15656</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md\">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md\">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p4g-rcw5-8298\">https://github.com/advisories/GHSA-3p4g-rcw5-8298</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p4g-rcw5-8298",
            "title": "[github.com/etcd-io/etcd] etcd Key name can be accessed via LeaseTimeToLive API",
            "date_modified": "2023-05-12T20:19:51.000Z",
            "date_published": "2023-05-12T20:19:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p4g-rcw5-8298"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2515\">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g2v-2frm-rg94\">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2023-05-23T22:39:23.000Z",
            "date_published": "2023-05-12T09:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2515\">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g2v-2frm-rg94\">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2023-05-23T22:39:23.000Z",
            "date_published": "2023-05-12T09:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2515\">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g2v-2frm-rg94\">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2023-05-23T22:39:23.000Z",
            "date_published": "2023-05-12T09:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2515\">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g2v-2frm-rg94\">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2023-05-23T22:39:23.000Z",
            "date_published": "2023-05-12T09:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g2v-2frm-rg94"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}