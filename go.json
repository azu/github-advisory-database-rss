{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>\n<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>\n<li>A <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy\">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\nname: sysctl-psp\nspec:\nforbiddenSysctls:\n  - \"*\"\n</code></pre>\nHowever, this option will not work if any sysctls are required by any pods in the cluster.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>\n<li><a href=\"https://bugs.gentoo.org/835336\">https://bugs.gentoo.org/835336</a></li>\n<li><a href=\"https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/\">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0811\">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-0811\">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2059475\">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7",
            "title": "[github.com/cri-o/cri-o] Code Injection in CRI-O",
            "date_modified": "2022-03-18T17:53:33.000Z",
            "date_published": "2022-03-15T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>\n<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>\n<li>A <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy\">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\nname: sysctl-psp\nspec:\nforbiddenSysctls:\n  - \"*\"\n</code></pre>\nHowever, this option will not work if any sysctls are required by any pods in the cluster.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>\n<li><a href=\"https://bugs.gentoo.org/835336\">https://bugs.gentoo.org/835336</a></li>\n<li><a href=\"https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/\">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0811\">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-0811\">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2059475\">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7",
            "title": "[github.com/cri-o/cri-o] Code Injection in CRI-O",
            "date_modified": "2022-03-18T17:53:33.000Z",
            "date_published": "2022-03-15T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>\n<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>\n<li>A <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy\">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\nname: sysctl-psp\nspec:\nforbiddenSysctls:\n  - \"*\"\n</code></pre>\nHowever, this option will not work if any sysctls are required by any pods in the cluster.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>\n<li><a href=\"https://bugs.gentoo.org/835336\">https://bugs.gentoo.org/835336</a></li>\n<li><a href=\"https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/\">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0811\">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-0811\">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2059475\">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7",
            "title": "[github.com/cri-o/cri-o] Code Injection in CRI-O",
            "date_modified": "2022-03-18T17:53:33.000Z",
            "date_published": "2022-03-15T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>\n<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>\n<li>A <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy\">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\nname: sysctl-psp\nspec:\nforbiddenSysctls:\n  - \"*\"\n</code></pre>\nHowever, this option will not work if any sysctls are required by any pods in the cluster.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>\n<li><a href=\"https://bugs.gentoo.org/835336\">https://bugs.gentoo.org/835336</a></li>\n<li><a href=\"https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/\">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0811\">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-0811\">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2059475\">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7",
            "title": "[github.com/cri-o/cri-o] Code Injection in CRI-O",
            "date_modified": "2022-03-18T17:53:33.000Z",
            "date_published": "2022-03-15T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>\n<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>\n<li>A <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy\">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\nname: sysctl-psp\nspec:\nforbiddenSysctls:\n  - \"*\"\n</code></pre>\nHowever, this option will not work if any sysctls are required by any pods in the cluster.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>\n<li><a href=\"https://bugs.gentoo.org/835336\">https://bugs.gentoo.org/835336</a></li>\n<li><a href=\"https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/\">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0811\">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-0811\">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2059475\">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x2m-w449-qwx7\">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7",
            "title": "[github.com/cri-o/cri-o] Code Injection in CRI-O",
            "date_modified": "2022-03-18T17:53:33.000Z",
            "date_published": "2022-03-15T20:13:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x2m-w449-qwx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href=\"https://github.com/cri-o/cri-o/tree/main/pinns/\">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>\n<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x",
            "title": "[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host",
            "date_modified": "2022-03-18T13:40:52.000Z",
            "date_published": "2022-03-15T20:02:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href=\"https://github.com/cri-o/cri-o/tree/main/pinns/\">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>\n<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x",
            "title": "[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host",
            "date_modified": "2022-03-18T13:40:52.000Z",
            "date_published": "2022-03-15T20:02:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href=\"https://github.com/cri-o/cri-o/tree/main/pinns/\">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>\n<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x",
            "title": "[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host",
            "date_modified": "2022-03-18T13:40:52.000Z",
            "date_published": "2022-03-15T20:02:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href=\"https://github.com/cri-o/cri-o/tree/main/pinns/\">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>\n<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x",
            "title": "[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host",
            "date_modified": "2022-03-18T13:40:52.000Z",
            "date_published": "2022-03-15T20:02:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href=\"https://github.com/cri-o/cri-o/tree/main/pinns/\">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>\n<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/cri-o/cri-o/issues\">the CRI-O repo</a></li>\n<li>To make a report, email your vulnerability to the private\n<a href=\"mailto:cncf-crio-security@lists.cncf.io\">cncf-crio-security@lists.cncf.io</a> list\nwith the security details and the details expected for <a href=\"https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml\">all CRI-O bug\nreports</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j5-3rcx-vx7x\">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x",
            "title": "[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host",
            "date_modified": "2022-03-18T13:40:52.000Z",
            "date_published": "2022-03-15T20:02:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"
            }
        },
        {
            "content_html": "<p>CasaOS before v0.2.7 was discovered to contain a command injection vulnerability via the component leave or join zerotier api.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24193\">https://nvd.nist.gov/vuln/detail/CVE-2022-24193</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/issues/84\">https://github.com/IceWhaleTech/CasaOS/issues/84</a></li>\n<li><a href=\"https://github.com/IceWhaleTech/CasaOS/commit/d060968b7ab08e7f8cbfe7ca9ccdfa47afe9bb06\">https://github.com/IceWhaleTech/CasaOS/commit/d060968b7ab08e7f8cbfe7ca9ccdfa47afe9bb06</a></li>\n<li><a href=\"https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/\">https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh63-28gx-7p26\">https://github.com/advisories/GHSA-jh63-28gx-7p26</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh63-28gx-7p26",
            "title": "[github.com/IceWhaleTech/CasaOS] Command Injection in CasaOS",
            "date_modified": "2022-03-17T21:39:45.000Z",
            "date_published": "2022-03-11T00:02:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh63-28gx-7p26"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Expired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Expired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In addition to marking PAM accounts as expired, also disable/lock them. Running <code>usermod -L &lt;username&gt;</code> will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. </p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/\">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please post on <a href=\"https://github.com/gogs/gogs/issues/6810\">https://github.com/gogs/gogs/issues/6810</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gogs/gogs/security/advisories/GHSA-gw5h-h6hj-f56g\">https://github.com/gogs/gogs/security/advisories/GHSA-gw5h-h6hj-f56g</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78\">https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78</a></li>\n<li><a href=\"https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62\">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gw5h-h6hj-f56g\">https://github.com/advisories/GHSA-gw5h-h6hj-f56g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gw5h-h6hj-f56g",
            "title": "[gogs.io/gogs] Improper Authorization in Gogs",
            "date_modified": "2022-03-18T13:33:47.000Z",
            "date_published": "2022-03-14T22:58:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gw5h-h6hj-f56g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Expired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Expired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In addition to marking PAM accounts as expired, also disable/lock them. Running <code>usermod -L &lt;username&gt;</code> will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. </p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/\">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please post on <a href=\"https://github.com/gogs/gogs/issues/6810\">https://github.com/gogs/gogs/issues/6810</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0871\">https://nvd.nist.gov/vuln/detail/CVE-2022-0871</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78\">https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78</a></li>\n<li><a href=\"https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62\">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65f3-3278-7m65\">https://github.com/advisories/GHSA-65f3-3278-7m65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65f3-3278-7m65",
            "title": "[gogs.io/gogs] Improper Authorization in Gogs",
            "date_modified": "2022-03-17T21:53:21.000Z",
            "date_published": "2022-03-12T00:00:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65f3-3278-7m65"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The malicious user is able to discover services in the internal network through repository migration functionality. All installations accepting public traffic are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Internal network CIDRs are prohibited to be used as repository migration targets. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Run Gogs in its own private network.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/\">https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please post on #6754.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0870\">https://nvd.nist.gov/vuln/detail/CVE-2022-0870</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/91f2cde5e95f146bfe4765e837e7282df6c7cabb\">https://github.com/gogs/gogs/commit/91f2cde5e95f146bfe4765e837e7282df6c7cabb</a></li>\n<li><a href=\"https://huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531\">https://huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7v5r-r995-q2x2\">https://github.com/advisories/GHSA-7v5r-r995-q2x2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7v5r-r995-q2x2",
            "title": "[gogs.io/gogs] SSRF in repository migration",
            "date_modified": "2022-03-17T21:53:31.000Z",
            "date_published": "2022-03-12T00:00:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7v5r-r995-q2x2"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The malicious user is able to discover services in the internal network through repository migration functionality. All installations accepting public traffic are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Internal network CIDRs are prohibited to be used as repository migration targets. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Run Gogs in its own private network.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/\">https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please post on #6754.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gogs/gogs/security/advisories/GHSA-q347-cg56-pcq4\">https://github.com/gogs/gogs/security/advisories/GHSA-q347-cg56-pcq4</a></li>\n<li><a href=\"https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/\">https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q347-cg56-pcq4\">https://github.com/advisories/GHSA-q347-cg56-pcq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q347-cg56-pcq4",
            "title": "[gogs.io/gogs] SSRF in repository migration",
            "date_modified": "2022-03-18T13:33:22.000Z",
            "date_published": "2022-03-14T22:57:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q347-cg56-pcq4"
            }
        },
        {
            "content_html": "<p>Path traversal vulnerability in Docker before 1.3.3 allows remote attackers to write to arbitrary files and bypass a container protection mechanism via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-9356\">https://nvd.nist.gov/vuln/detail/CVE-2014-9356</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2014-9356\">https://access.redhat.com/security/cve/cve-2014-9356</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1172761\">https://bugzilla.redhat.com/show_bug.cgi?id=1172761</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ\">https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ</a></li>\n<li><a href=\"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356\">https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded\">http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vj3f-3286-r4pf\">https://github.com/advisories/GHSA-vj3f-3286-r4pf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vj3f-3286-r4pf",
            "title": "[github.com/moby/moby] Path Traversal in Docker",
            "date_modified": "2022-03-11T22:58:23.000Z",
            "date_published": "2021-05-18T21:09:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vj3f-3286-r4pf"
            }
        },
        {
            "content_html": "<p>Path traversal vulnerability in Docker before 1.3.3 allows remote attackers to write to arbitrary files and bypass a container protection mechanism via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-9356\">https://nvd.nist.gov/vuln/detail/CVE-2014-9356</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2014-9356\">https://access.redhat.com/security/cve/cve-2014-9356</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1172761\">https://bugzilla.redhat.com/show_bug.cgi?id=1172761</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ\">https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ</a></li>\n<li><a href=\"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356\">https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded\">http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vj3f-3286-r4pf\">https://github.com/advisories/GHSA-vj3f-3286-r4pf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vj3f-3286-r4pf",
            "title": "[github.com/docker/docker] Path Traversal in Docker",
            "date_modified": "2022-03-11T22:58:23.000Z",
            "date_published": "2021-05-18T21:09:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vj3f-3286-r4pf"
            }
        },
        {
            "content_html": "<p>Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0905\">https://nvd.nist.gov/vuln/detail/CVE-2022-0905</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/commit/1314f38b59748397b3429fb9bc9f9d6bac85d2f2\">https://github.com/go-gitea/gitea/commit/1314f38b59748397b3429fb9bc9f9d6bac85d2f2</a></li>\n<li><a href=\"https://huntr.dev/bounties/8d221f92-b2b1-4878-bc31-66ff272e5ceb\">https://huntr.dev/bounties/8d221f92-b2b1-4878-bc31-66ff272e5ceb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jr9c-h74f-2v28\">https://github.com/advisories/GHSA-jr9c-h74f-2v28</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jr9c-h74f-2v28",
            "title": "[code.gitea.io/gitea] Improper Authorization in Gitea",
            "date_modified": "2022-03-11T23:16:31.000Z",
            "date_published": "2022-03-11T00:02:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jr9c-h74f-2v28"
            }
        },
        {
            "content_html": "<p>(This document is canonically: <a href=\"https://advisories.nats.io/CVE/CVE-2022-26652.txt\">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a>)</p>\n<h2 id=\"background\">Background</h2>\n<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>\n<p>JetStream is the optional RAFT-based resilient persistent feature of NATS.</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The JetStream streams can be backed up and restored via NATS. The backup format is a tar archive file.  Inadequate checks on the filenames within the archive file permit a so-called \"Zip Slip\" attack in the stream restore.</p>\n<p>NATS nats-server through 2022-03-09 (fixed in release 2.7.4) did not correctly sanitize elements of the archive file, thus a user of NATS\ncould cause the NATS server to write arbitrary content to an attacker-controlled filename.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<p>NATS Server:</p>\n<ul>\n<li>2.2.0 up to and including 2.7.3.<ul>\n<li>Introduced with JetStream Restore functionality</li>\n</ul>\n</li>\n<li>Fixed with nats-io/nats-server: 2.7.4</li>\n<li>Docker image:  nats <a href=\"https://hub.docker.com/_/nats\">https://hub.docker.com/_/nats</a></li>\n<li>NB users of OS package files from our releases: a change in goreleaser defaults, discovered late in the release process, moved the install directory from /usr/local/bin to /usr/bin; we are evaluating the correct solution for subsequent releases, but not recutting this release.</li>\n</ul>\n<p>NATS Streaming Server</p>\n<ul>\n<li>0.15.0 up to and including 0.24.2</li>\n<li>Fixed with nats-io/nats-streaming-server: 0.24.3</li>\n<li>Embeds a nats-server, but this server is the old approach which JetStream replaces, so unlikely (but not impossible) to be\nconfigured with JS support</li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<ul>\n<li>Disable JetStream for untrusted users.</li>\n<li>If only one NATS account uses JetStream, such that cross-user attacks are not an issue, and any user in that account with access to the JetStream API is fully trusted anyway, then appropriate sandboxing techniques will prevent exploit.<ul>\n<li>Eg, with systemd, the supplied util/nats-server-hardened.service example configuration demonstrates that NATS runs fine as an unprivileged user under ProtectSystem=strict and PrivateTmp=true restrictions; by only opening a ReadWritePaths hole for the JetStream storage area, the impact of this vulnerability is limited.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the NATS server to at least 2.7.4.</p>\n<p>We fully support the util/nats-server-hardened.service configuration for running a NATS server and encourage this approach.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>This issue was reported (on 2022-03-07) to the NATS Maintainers by\nYiming Xiang, TIANJI LAB of NSFOCUS.<br>Thank you / 谢谢你！</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68\">https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/pull/2917\">https://github.com/nats-io/nats-server/pull/2917</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.7.4\">https://github.com/nats-io/nats-server/releases/tag/v2.7.4</a></li>\n<li><a href=\"https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3\">https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26652\">https://nvd.nist.gov/vuln/detail/CVE-2022-26652</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2022-26652.txt\">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases\">https://github.com/nats-io/nats-server/releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/03/10/1\">http://www.openwall.com/lists/oss-security/2022/03/10/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6h3m-36w8-hv68\">https://github.com/advisories/GHSA-6h3m-36w8-hv68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6h3m-36w8-hv68",
            "title": "[github.com/nats-io/nats-streaming-server] Arbitrary file write in nats-server",
            "date_modified": "2022-03-11T23:18:10.000Z",
            "date_published": "2022-03-10T22:07:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6h3m-36w8-hv68"
            }
        },
        {
            "content_html": "<p>(This document is canonically: <a href=\"https://advisories.nats.io/CVE/CVE-2022-26652.txt\">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a>)</p>\n<h2 id=\"background\">Background</h2>\n<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>\n<p>JetStream is the optional RAFT-based resilient persistent feature of NATS.</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>The JetStream streams can be backed up and restored via NATS. The backup format is a tar archive file.  Inadequate checks on the filenames within the archive file permit a so-called \"Zip Slip\" attack in the stream restore.</p>\n<p>NATS nats-server through 2022-03-09 (fixed in release 2.7.4) did not correctly sanitize elements of the archive file, thus a user of NATS\ncould cause the NATS server to write arbitrary content to an attacker-controlled filename.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<p>NATS Server:</p>\n<ul>\n<li>2.2.0 up to and including 2.7.3.<ul>\n<li>Introduced with JetStream Restore functionality</li>\n</ul>\n</li>\n<li>Fixed with nats-io/nats-server: 2.7.4</li>\n<li>Docker image:  nats <a href=\"https://hub.docker.com/_/nats\">https://hub.docker.com/_/nats</a></li>\n<li>NB users of OS package files from our releases: a change in goreleaser defaults, discovered late in the release process, moved the install directory from /usr/local/bin to /usr/bin; we are evaluating the correct solution for subsequent releases, but not recutting this release.</li>\n</ul>\n<p>NATS Streaming Server</p>\n<ul>\n<li>0.15.0 up to and including 0.24.2</li>\n<li>Fixed with nats-io/nats-streaming-server: 0.24.3</li>\n<li>Embeds a nats-server, but this server is the old approach which JetStream replaces, so unlikely (but not impossible) to be\nconfigured with JS support</li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<ul>\n<li>Disable JetStream for untrusted users.</li>\n<li>If only one NATS account uses JetStream, such that cross-user attacks are not an issue, and any user in that account with access to the JetStream API is fully trusted anyway, then appropriate sandboxing techniques will prevent exploit.<ul>\n<li>Eg, with systemd, the supplied util/nats-server-hardened.service example configuration demonstrates that NATS runs fine as an unprivileged user under ProtectSystem=strict and PrivateTmp=true restrictions; by only opening a ReadWritePaths hole for the JetStream storage area, the impact of this vulnerability is limited.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"solution\">Solution</h2>\n<p>Upgrade the NATS server to at least 2.7.4.</p>\n<p>We fully support the util/nats-server-hardened.service configuration for running a NATS server and encourage this approach.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>This issue was reported (on 2022-03-07) to the NATS Maintainers by\nYiming Xiang, TIANJI LAB of NSFOCUS.<br>Thank you / 谢谢你！</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68\">https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/pull/2917\">https://github.com/nats-io/nats-server/pull/2917</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.7.4\">https://github.com/nats-io/nats-server/releases/tag/v2.7.4</a></li>\n<li><a href=\"https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3\">https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26652\">https://nvd.nist.gov/vuln/detail/CVE-2022-26652</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/CVE-2022-26652.txt\">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases\">https://github.com/nats-io/nats-server/releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/03/10/1\">http://www.openwall.com/lists/oss-security/2022/03/10/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6h3m-36w8-hv68\">https://github.com/advisories/GHSA-6h3m-36w8-hv68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6h3m-36w8-hv68",
            "title": "[github.com/nats-io/nats-server/v2] Arbitrary file write in nats-server",
            "date_modified": "2022-03-11T23:18:10.000Z",
            "date_published": "2022-03-10T22:07:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6h3m-36w8-hv68"
            }
        }
    ]
}