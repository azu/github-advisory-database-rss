{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>The UI in DevSpace 4.13.0 allows web sites to execute actions on pods (on behalf of a victim) because of a lack of authentication for the WebSocket protocol. This leads to remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15391\">https://nvd.nist.gov/vuln/detail/CVE-2020-15391</a></li>\n<li><a href=\"https://github.com/devspace-cloud/devspace/releases/tag/v4.14.0\">https://github.com/devspace-cloud/devspace/releases/tag/v4.14.0</a></li>\n<li><a href=\"https://github.com/devspace-sh/devspace/issues/1128\">https://github.com/devspace-sh/devspace/issues/1128</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6h8c-gw33-cjm2\">https://github.com/advisories/GHSA-6h8c-gw33-cjm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6h8c-gw33-cjm2",
            "title": "[github.com/loft-sh/devspace] DevSpace vulnerable to remote code execution",
            "date_modified": "2023-10-19T18:23:23.000Z",
            "date_published": "2022-05-24T17:24:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6h8c-gw33-cjm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Istio 1.3.x before 1.3.5 is vulnerable to denial of service because <code>continue_on_listener_filters_timeout</code> is set to True, a related issue to CVE-2019-18836.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-18817\">https://nvd.nist.gov/vuln/detail/CVE-2019-18817</a></li>\n<li><a href=\"https://github.com/istio/istio/issues/18229\">https://github.com/istio/istio/issues/18229</a></li>\n<li><a href=\"https://istio.io/news/2019/announcing-1.3.5/\">https://istio.io/news/2019/announcing-1.3.5/</a></li>\n<li><a href=\"https://github.com/istio/istio/issues/18229#issuecomment-553190142\">https://github.com/istio/istio/issues/18229#issuecomment-553190142</a></li>\n<li><a href=\"https://github.com/istio/istio/commit/7570a1f5b56c108aed6ecfa5d2a6048f444bfb37\">https://github.com/istio/istio/commit/7570a1f5b56c108aed6ecfa5d2a6048f444bfb37</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vc7h-cmp3-4hw5\">https://github.com/advisories/GHSA-vc7h-cmp3-4hw5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vc7h-cmp3-4hw5",
            "title": "[istio.io/istio] Istio vulnerable to denial of service",
            "date_modified": "2023-10-19T18:09:29.000Z",
            "date_published": "2022-05-24T22:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vc7h-cmp3-4hw5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Since <a href=\"https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71\">ydb-go-sdk/v3.48.6</a> if you use a custom credentials object (implementation of interface <a href=\"https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10\">Credentials</a>) it may leak into logs. This happens because this object could be serialized into an error message using <code>fmt.Errorf(\"something went wrong (credentials: %q)\", credentials)</code> during connection to the YDB server. Printf func use placeholder <code>%q</code> for string representation of argument with quotes. If an argument implements interface <code>fmt.Stringer</code>, it will used through <code>String()</code> func. In other cases used fallback - serialization with reflection.</p>\n<p>If such logging occurred, a  malicious user with access to logs could read sensitive information (i.e. credentials) information and use it to get access to the database.</p>\n<p>Who is impacted: applications with custom credentials object with an explicit token field.</p>\n<p>A leak could have occurred if all of these conditions were met simultaneously:</p>\n<ol>\n<li>The credentials object does not implement the <code>fmt.Stringer</code> interface (does not have a <code>String()</code> method) - potentially these are custom credentials. Official credentials have a <code>String()</code> method.</li>\n<li>There was an error connecting to YDB during driver creation via <code>ydb.Open(...)</code>.</li>\n<li>Some logging system was configured (<code>ydb-go-sdk</code> does not log such errors by default).</li>\n<li>The connection error was logged into a system that a malicious user had access to.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p><code>ydb-go-sdk</code> contains this problem in versions from v3.48.6 to v3.53.2. The fix for this problem has been released in version v3.53.3 (<a href=\"https://github.com/ydb-platform/ydb-go-sdk/pull/859\">PR</a>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Implement the <code>fmt.Stringer</code> interface in your custom credentials type with explicit stringify of object state.</p>\n<h3 id=\"references\">References</h3>\n<p>No public references.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ydb-platform/ydb-go-sdk/security/advisories/GHSA-q24m-6h38-5xj8\">https://github.com/ydb-platform/ydb-go-sdk/security/advisories/GHSA-q24m-6h38-5xj8</a></li>\n<li><a href=\"https://github.com/ydb-platform/ydb-go-sdk/pull/859\">https://github.com/ydb-platform/ydb-go-sdk/pull/859</a></li>\n<li><a href=\"https://github.com/ydb-platform/ydb-go-sdk/commit/a0d92057c4e1bbdc5e85ae8d649edb0232b8fd4c\">https://github.com/ydb-platform/ydb-go-sdk/commit/a0d92057c4e1bbdc5e85ae8d649edb0232b8fd4c</a></li>\n<li><a href=\"https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10\">https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10</a></li>\n<li><a href=\"https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71\">https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45825\">https://nvd.nist.gov/vuln/detail/CVE-2023-45825</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q24m-6h38-5xj8\">https://github.com/advisories/GHSA-q24m-6h38-5xj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q24m-6h38-5xj8",
            "title": "[github.com/ydb-platform/ydb-go-sdk/v3] ydb-go-sdk token in custom credentials object can leak through logs",
            "date_modified": "2023-10-19T21:56:43.000Z",
            "date_published": "2023-10-19T17:10:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q24m-6h38-5xj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During a security audit of Artifact Hub's code base, a security researcher at <a href=\"https://www.offsec.com/\">OffSec</a> identified a bug in which by using symbolic links in certain kinds of repositories loaded into Artifact Hub, it was possible to read internal files.</p>\n<p>Artifact Hub indexes content from a variety of sources, including git repositories. When processing git based repositories, Artifact Hub clones the repository and, depending on the artifact kind, reads some files from it. During this process, in some cases, no validation was done to check if the file was a symbolic link. This made possible to read arbitrary files in the system, potentially leaking sensitive information.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been resolved in version <a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">1.16.0</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/artifacthub/hub/security/advisories/GHSA-hmq4-c2r4-5q8h\">https://github.com/artifacthub/hub/security/advisories/GHSA-hmq4-c2r4-5q8h</a></li>\n<li><a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45823\">https://nvd.nist.gov/vuln/detail/CVE-2023-45823</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmq4-c2r4-5q8h\">https://github.com/advisories/GHSA-hmq4-c2r4-5q8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmq4-c2r4-5q8h",
            "title": "[github.com/artifacthub/hub] Artifact Hub arbitrary file read vulnerability",
            "date_modified": "2023-10-19T21:56:30.000Z",
            "date_published": "2023-10-19T17:06:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmq4-c2r4-5q8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During a security audit of Artifact Hub's code base, a security researcher at <a href=\"https://www.offsec.com/\">OffSec</a> identified a bug in which a default unsafe rego built-in was allowed to be used when defining authorization policies.</p>\n<p>Artifact Hub includes a fine-grained authorization mechanism that allows organizations to define what actions can be performed by their members. It is based on customizable authorization policies that are enforced by the <a href=\"https://www.openpolicyagent.org/\">Open Policy Agent</a>. Policies are written using <a href=\"https://www.openpolicyagent.org/docs/latest/#rego\">rego</a> and their data files are expected to be json documents. By default, <code>rego</code> allows policies to make HTTP requests, which can be abused to send requests to internal resources and forward the responses to an external entity. In the context of Artifact Hub, this capability should have been disabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been resolved in version <a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">1.16.0</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/artifacthub/hub/security/advisories/GHSA-9pc8-m4vp-ggvf\">https://github.com/artifacthub/hub/security/advisories/GHSA-9pc8-m4vp-ggvf</a></li>\n<li><a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45822\">https://nvd.nist.gov/vuln/detail/CVE-2023-45822</a></li>\n<li><a href=\"https://www.openpolicyagent.org/\">https://www.openpolicyagent.org/</a></li>\n<li><a href=\"https://www.openpolicyagent.org/docs/latest/#rego\">https://www.openpolicyagent.org/docs/latest/#rego</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pc8-m4vp-ggvf\">https://github.com/advisories/GHSA-9pc8-m4vp-ggvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pc8-m4vp-ggvf",
            "title": "[github.com/artifacthub/hub] Artifact Hub allows unsafe rego built-in",
            "date_modified": "2023-10-19T21:56:25.000Z",
            "date_published": "2023-10-19T17:05:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pc8-m4vp-ggvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During a security audit of Artifact Hub's code base, a security researcher at <a href=\"https://www.offsec.com/\">OffSec</a> identified a bug in which the <code>registryIsDockerHub</code> function was only checking that the registry domain had the <code>docker.io</code> suffix.</p>\n<p>Artifact Hub allows providing some Docker credentials that are used to increase the rate limit applied when interacting with the Docker Hub registry API to read publicly available content. Due to the incorrect check described above, it'd be possible to hijack those credentials by purchasing a domain which ends with <code>docker.io</code> and deploying a fake OCI registry on it.</p>\n<p><a href=\"https://artifacthub.io/\">https://artifacthub.io/</a> uses some credentials that only have permissions to read public content available in the Docker Hub. However, even though credentials for private repositories (disabled on <code>artifacthub.io</code>) are handled in a different way, other Artifact Hub deployments could have been using them for a different purpose.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been resolved in version <a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">1.16.0</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/artifacthub/hub/security/advisories/GHSA-g6pq-x539-7w4j\">https://github.com/artifacthub/hub/security/advisories/GHSA-g6pq-x539-7w4j</a></li>\n<li><a href=\"https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0\">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45821\">https://nvd.nist.gov/vuln/detail/CVE-2023-45821</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g6pq-x539-7w4j\">https://github.com/advisories/GHSA-g6pq-x539-7w4j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g6pq-x539-7w4j",
            "title": "[github.com/artifacthub/hub] Artifact Hub has Incorrect Docker Hub registry check",
            "date_modified": "2023-10-19T21:56:18.000Z",
            "date_published": "2023-10-19T17:04:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g6pq-x539-7w4j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/secnote-2023-01.txt\">https://advisories.nats.io/CVE/secnote-2023-01.txt</a>)</p>\n<h2 id=\"background\">Background</h2>\n<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>\n<p>NATS users exist within accounts, and once using accounts, the old authorization block is not applicable.</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>Without any authorization rules in the nats-server, users can connect without authentication.</p>\n<p>Before nats-server 2.2.0, all authentication and authorization rules for a nats-server lived in an \"authorization\" block, defining users.  With nats-server 2.2.0 all users live inside accounts.  When using the authorization block, whose syntax predates this, those users will be placed into the implicit global account, \"$G\".  Users inside accounts go into the newer \"accounts\" block.</p>\n<p>If an \"accounts\" block is defined, in simple deployment scenarios this is often used only to enable client access to the system account.  When the only account added is the system account \"$SYS\", the nats-server would create an implicit user in \"$G\" and set it as the <code>no_auth_user</code> account, enabling the same \"without authentication\" logic as without any rules.</p>\n<p>This preserved the ability to connect simply, and then add one authenticated login for system access.</p>\n<p>But with an \"authorization\" block, this is wrong.  Users exist in the global account, with login rules.  And in simple testing, they might still connect fine without administrators seeing that authentication has been disabled.</p>\n<p>The blind-spot on our part came from encouraging and documenting a switch to using only \"accounts\", instead of \"authorization\".</p>\n<p>In the fixed versions, using an \"authorization\" block will inhibit the implicit creation of a \"$G\" user and setting it as the <code>no_auth_user</code> target.  In unfixed versions, just creating a second account, with no users, will also inhibit this behavior.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<p>NATS Server:</p>\n<ul>\n<li>2.2.0 up to and including 2.9.22 and 2.10.1</li>\n<li>Fixed with nats-io/nats-server: 2.10.2 and backported to 2.9.23</li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>In the \"accounts\" block, define a second non-system account, leave it empty.</p>\n<pre><code>accounts {\n    SYS: {\n        users: [\n            { user: sysuser, password: makemeasandwich }\n        ]\n    }\n    DUMMY: {}  # for security, before 2.10.2\n}\nsystem_account: SYS\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>Any one of these:</p>\n<ol>\n<li>Upgrade the NATS server to at least 2.10.2 (or 2.9.23)</li>\n<li>Or define a dummy account</li>\n<li>Or complete the migration of authorization entries to be inside a named account in the \"accounts\" block</li>\n</ol>\n<h2 id=\"credits\">Credits</h2>\n<p>Problem reported by Alex Herrington.<br>Addressed publicly in a GitHub Discussion prior to this advisory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23\">https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/pull/4605\">https://github.com/nats-io/nats-server/pull/4605</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478\">https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/secnote-2023-01.txt\">https://advisories.nats.io/CVE/secnote-2023-01.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/discussions/4535\">https://github.com/nats-io/nats-server/discussions/4535</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.10.2\">https://github.com/nats-io/nats-server/releases/tag/v2.10.2</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.9.23\">https://github.com/nats-io/nats-server/releases/tag/v2.9.23</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr2g-9hjm-wr23\">https://github.com/advisories/GHSA-fr2g-9hjm-wr23</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr2g-9hjm-wr23",
            "title": "[github.com/nats-io/nats-server/v2] NATS.io: Adding accounts for just the system account adds auth bypass",
            "date_modified": "2023-10-19T16:13:04.000Z",
            "date_published": "2023-10-19T16:13:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr2g-9hjm-wr23"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>(This advisory is canonically <a href=\"https://advisories.nats.io/CVE/secnote-2023-01.txt\">https://advisories.nats.io/CVE/secnote-2023-01.txt</a>)</p>\n<h2 id=\"background\">Background</h2>\n<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>\n<p>NATS users exist within accounts, and once using accounts, the old authorization block is not applicable.</p>\n<h2 id=\"problem-description\">Problem Description</h2>\n<p>Without any authorization rules in the nats-server, users can connect without authentication.</p>\n<p>Before nats-server 2.2.0, all authentication and authorization rules for a nats-server lived in an \"authorization\" block, defining users.  With nats-server 2.2.0 all users live inside accounts.  When using the authorization block, whose syntax predates this, those users will be placed into the implicit global account, \"$G\".  Users inside accounts go into the newer \"accounts\" block.</p>\n<p>If an \"accounts\" block is defined, in simple deployment scenarios this is often used only to enable client access to the system account.  When the only account added is the system account \"$SYS\", the nats-server would create an implicit user in \"$G\" and set it as the <code>no_auth_user</code> account, enabling the same \"without authentication\" logic as without any rules.</p>\n<p>This preserved the ability to connect simply, and then add one authenticated login for system access.</p>\n<p>But with an \"authorization\" block, this is wrong.  Users exist in the global account, with login rules.  And in simple testing, they might still connect fine without administrators seeing that authentication has been disabled.</p>\n<p>The blind-spot on our part came from encouraging and documenting a switch to using only \"accounts\", instead of \"authorization\".</p>\n<p>In the fixed versions, using an \"authorization\" block will inhibit the implicit creation of a \"$G\" user and setting it as the <code>no_auth_user</code> target.  In unfixed versions, just creating a second account, with no users, will also inhibit this behavior.</p>\n<h2 id=\"affected-versions\">Affected versions</h2>\n<p>NATS Server:</p>\n<ul>\n<li>2.2.0 up to and including 2.9.22 and 2.10.1</li>\n<li>Fixed with nats-io/nats-server: 2.10.2 and backported to 2.9.23</li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>In the \"accounts\" block, define a second non-system account, leave it empty.</p>\n<pre><code>accounts {\n    SYS: {\n        users: [\n            { user: sysuser, password: makemeasandwich }\n        ]\n    }\n    DUMMY: {}  # for security, before 2.10.2\n}\nsystem_account: SYS\n</code></pre>\n<h2 id=\"solution\">Solution</h2>\n<p>Any one of these:</p>\n<ol>\n<li>Upgrade the NATS server to at least 2.10.2 (or 2.9.23)</li>\n<li>Or define a dummy account</li>\n<li>Or complete the migration of authorization entries to be inside a named account in the \"accounts\" block</li>\n</ol>\n<h2 id=\"credits\">Credits</h2>\n<p>Problem reported by Alex Herrington.<br>Addressed publicly in a GitHub Discussion prior to this advisory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23\">https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/pull/4605\">https://github.com/nats-io/nats-server/pull/4605</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478\">https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/secnote-2023-01.txt\">https://advisories.nats.io/CVE/secnote-2023-01.txt</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/discussions/4535\">https://github.com/nats-io/nats-server/discussions/4535</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.10.2\">https://github.com/nats-io/nats-server/releases/tag/v2.10.2</a></li>\n<li><a href=\"https://github.com/nats-io/nats-server/releases/tag/v2.9.23\">https://github.com/nats-io/nats-server/releases/tag/v2.9.23</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr2g-9hjm-wr23\">https://github.com/advisories/GHSA-fr2g-9hjm-wr23</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr2g-9hjm-wr23",
            "title": "[github.com/nats-io/nats-server/v2] NATS.io: Adding accounts for just the system account adds auth bypass",
            "date_modified": "2023-10-19T16:13:04.000Z",
            "date_published": "2023-10-19T16:13:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr2g-9hjm-wr23"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects all versions up to and including version 0.7.0 of package github.com/u-root/u-root/pkg/tarutil. It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7669\">https://nvd.nist.gov/vuln/detail/CVE-2020-7669</a></li>\n<li><a href=\"https://github.com/u-root/u-root/pull/1817\">https://github.com/u-root/u-root/pull/1817</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428</a></li>\n<li><a href=\"https://github.com/u-root/u-root/issues/2449\">https://github.com/u-root/u-root/issues/2449</a></li>\n<li><a href=\"https://github.com/u-root/u-root/pull/2344\">https://github.com/u-root/u-root/pull/2344</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75qf-wgfj-v652\">https://github.com/advisories/GHSA-75qf-wgfj-v652</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75qf-wgfj-v652",
            "title": "[github.com/u-root/u-root] github.com/u-root/u-root/pkg/tarutil Arbitrary File Write via Archive Extraction (Zip Slip)",
            "date_modified": "2023-10-18T22:18:14.000Z",
            "date_published": "2021-05-18T18:28:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75qf-wgfj-v652"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1943\">https://nvd.nist.gov/vuln/detail/CVE-2023-1943</a></li>\n<li><a href=\"https://github.com/kubernetes/kops/issues/15539\">https://github.com/kubernetes/kops/issues/15539</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU\">https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gwj-m6vh-2g6j\">https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gwj-m6vh-2g6j",
            "title": "[k8s.io/kops] kOps privilege escalation vulnerability",
            "date_modified": "2023-10-18T18:29:02.000Z",
            "date_published": "2023-10-12T00:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gwj-m6vh-2g6j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1943\">https://nvd.nist.gov/vuln/detail/CVE-2023-1943</a></li>\n<li><a href=\"https://github.com/kubernetes/kops/issues/15539\">https://github.com/kubernetes/kops/issues/15539</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU\">https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gwj-m6vh-2g6j\">https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gwj-m6vh-2g6j",
            "title": "[k8s.io/kops] kOps privilege escalation vulnerability",
            "date_modified": "2023-10-18T18:29:02.000Z",
            "date_published": "2023-10-12T00:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gwj-m6vh-2g6j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Geth (aka go-ethereum) through 1.13.4, when <code>--http --graphql</code> is used, allows remote attackers to cause a denial of service (memory consumption and daemon hang) via a crafted GraphQL query.</p>\n<p>NOTE: the vendor's position is that the \"graphql endpoint [is not] designed to withstand attacks by hostile clients, nor handle huge amounts of clients/traffic.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42319\">https://nvd.nist.gov/vuln/detail/CVE-2023-42319</a></li>\n<li><a href=\"https://blog.mevsec.com/posts/geth-dos-with-graphql/\">https://blog.mevsec.com/posts/geth-dos-with-graphql/</a></li>\n<li><a href=\"https://geth.ethereum.org/docs/fundamentals/security\">https://geth.ethereum.org/docs/fundamentals/security</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9jh-j8px-98vq\">https://github.com/advisories/GHSA-v9jh-j8px-98vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9jh-j8px-98vq",
            "title": "[github.com/ethereum/go-ethereum] go-ethereum vulnerable to denial of service via crafted GraphQL query",
            "date_modified": "2023-10-18T18:28:25.000Z",
            "date_published": "2023-10-18T06:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9jh-j8px-98vq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"overview\">Overview</h2>\n<p>OpenFGA is vulnerable to a DoS attack. When a number of ListObjects calls are executed, in some scenarios, those calls are not releasing resources even after a response has been sent, and the service as a whole becomes unresponsive.</p>\n<h2 id=\"fix\">Fix</h2>\n<p>Upgrade to v1.3.4. This upgrade is backwards compatible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openfga/openfga/security/advisories/GHSA-hr4f-6jh8-f2vq\">https://github.com/openfga/openfga/security/advisories/GHSA-hr4f-6jh8-f2vq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45810\">https://nvd.nist.gov/vuln/detail/CVE-2023-45810</a></li>\n<li><a href=\"https://github.com/openfga/openfga/releases/tag/v1.3.4\">https://github.com/openfga/openfga/releases/tag/v1.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr4f-6jh8-f2vq\">https://github.com/advisories/GHSA-hr4f-6jh8-f2vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr4f-6jh8-f2vq",
            "title": "[github.com/openfga/openfga] OpenFGA DoS vulnerability",
            "date_modified": "2023-10-18T18:25:59.000Z",
            "date_published": "2023-10-18T18:25:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr4f-6jh8-f2vq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability affects the endpoint <code>/v2/pkgs/tools/installed</code> and the way it handles plugin names supplied as user input.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can delete arbitrary files or folders belonging to the user that runs the Arduino Create Agent via a crafted HTTP POST request.\nFurther details are available in the references.</p>\n<h3 id=\"fixed-version\">Fixed Version</h3>\n<ul>\n<li><code>1.3.3</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>The issue was reported by Nozomi Networks Labs. Further details on the issue will soon be published and this advisory updated.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-m5jc-r4gf-c6p8\">https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-m5jc-r4gf-c6p8</a></li>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3\">https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43803\">https://nvd.nist.gov/vuln/detail/CVE-2023-43803</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5jc-r4gf-c6p8\">https://github.com/advisories/GHSA-m5jc-r4gf-c6p8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5jc-r4gf-c6p8",
            "title": "[github.com/arduino/arduino-create-agent] Arduino Create Agent path traversal - arbitrary file deletion vulnerability",
            "date_modified": "2023-10-19T00:10:08.000Z",
            "date_published": "2023-10-18T18:25:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5jc-r4gf-c6p8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability affects the endpoint <code>/upload</code> which handles request with the <code>filename</code> parameter.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can escalate his privileges to those of the user running the Arduino Create Agent service via a crafted HTTP POST request.\nFurther details are available in the references.</p>\n<h3 id=\"fixed-version\">Fixed Version</h3>\n<ul>\n<li><code>1.3.3</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>The issue was reported by Nozomi Networks Labs. Further details on the issue will soon be published and this advisory updated.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-75j7-w798-cwwx\">https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-75j7-w798-cwwx</a></li>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3\">https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43802\">https://nvd.nist.gov/vuln/detail/CVE-2023-43802</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75j7-w798-cwwx\">https://github.com/advisories/GHSA-75j7-w798-cwwx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75j7-w798-cwwx",
            "title": "[github.com/arduino/arduino-create-agent] Arduino Create Agent path traversal - local privilege escalation vulnerability",
            "date_modified": "2023-10-19T00:10:02.000Z",
            "date_published": "2023-10-18T18:21:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75j7-w798-cwwx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability affects the endpoint <code>/v2/pkgs/tools/installed</code> and the way it handles plugin names supplied as user input.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can delete arbitrary files or folders belonging to the user that runs the Arduino Create Agent via a crafted HTTP DELETE request.\nFurther details are available in the references.</p>\n<h3 id=\"fixed-version\">Fixed Version</h3>\n<ul>\n<li><code>1.3.3</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>The issue was reported by Nozomi Networks Labs. Further details on the issue will soon be published and this advisory updated.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-mjq6-pv9c-qppq\">https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-mjq6-pv9c-qppq</a></li>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3\">https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43801\">https://nvd.nist.gov/vuln/detail/CVE-2023-43801</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mjq6-pv9c-qppq\">https://github.com/advisories/GHSA-mjq6-pv9c-qppq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mjq6-pv9c-qppq",
            "title": "[github.com/arduino/arduino-create-agent] Arduino Create Agent path traversal - arbitrary file deletion vulnerability",
            "date_modified": "2023-10-19T13:23:03.000Z",
            "date_published": "2023-10-18T17:34:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mjq6-pv9c-qppq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability affects the endpoint <code>/v2/pkgs/tools/installed</code>. A user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can escalate his privileges to those of the user running the Arduino Create Agent service via a crafted HTTP POST request.\nFurther details are available in the references.</p>\n<h3 id=\"fixed-version\">Fixed Version</h3>\n<ul>\n<li><code>1.3.3</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>The issue was reported by Nozomi Networks Labs. Further details on the issue will soon be published and this advisory updated.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-4x5q-q7wc-q22p\">https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-4x5q-q7wc-q22p</a></li>\n<li><a href=\"https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3\">https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43800\">https://nvd.nist.gov/vuln/detail/CVE-2023-43800</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4x5q-q7wc-q22p\">https://github.com/advisories/GHSA-4x5q-q7wc-q22p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4x5q-q7wc-q22p",
            "title": "[github.com/arduino/arduino-create-agent] Arduino Create Agent Insufficient Verification of Data Authenticity vulnerability",
            "date_modified": "2023-10-19T13:22:57.000Z",
            "date_published": "2023-10-18T15:54:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4x5q-q7wc-q22p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Grafana is an open-source platform for monitoring and observability. The vulnerability impacts instances with several organizations, and allows a user with Organization Admin permissions in one organization to change the permissions associated with Organization Viewer, Organization Editor and Organization Admin roles in all organizations.</p>\n<p>It also allows an Organization Admin to assign or revoke any permissions that they have to any user globally.</p>\n<p>This means that any Organization Admin can elevate their own permissions in any organization that they are already a member of, or elevate or restrict the permissions of any other user.</p>\n<p>The vulnerability does not allow a user to become a member of an organization that they are not already a member of, or to add any other users to an organization that the current user is not a member of.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4822\">https://nvd.nist.gov/vuln/detail/CVE-2023-4822</a></li>\n<li><a href=\"https://grafana.com/security/security-advisories/cve-2023-4822\">https://grafana.com/security/security-advisories/cve-2023-4822</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fw9c-75hh-89p6\">https://github.com/advisories/GHSA-fw9c-75hh-89p6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fw9c-75hh-89p6",
            "title": "[github.com/grafana/grafana] Grafana privilege escalation vulnerability",
            "date_modified": "2023-10-17T20:23:51.000Z",
            "date_published": "2023-10-16T09:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fw9c-75hh-89p6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability allows a third party to derive a valid proof from a valid initial tuple {proof, public_inputs}, corresponding to the same public inputs as the initial proof. It is due to a randomness being generated using a small part of the scratch memory describing the state, allowing for degrees of freedom in the transcript.</p>\n<p>Note that the impact is limited to the PlonK verifier smart contract.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We still use a hash function on some data to have a pseudo rng, but instead of hashing the first 32 bytes of the state (\n<code> let random := mod(keccak256(state, 0x20), r_mod)</code> )</p>\n<p>we hash the whole state at this point of the verifier as if it was a Fiat Shamir transcript:</p>\n<pre><code>        mstore(mPtr, mload(add(state, STATE_FOLDED_DIGESTS_X)))\n        mstore(add(mPtr, 0x20), mload(add(state, STATE_FOLDED_DIGESTS_Y)))\n        mstore(add(mPtr, 0x40), calldataload(add(aproof, PROOF_BATCH_OPENING_AT_ZETA_X)))\n        mstore(add(mPtr, 0x60), calldataload(add(aproof, PROOF_BATCH_OPENING_AT_ZETA_Y)))\n        mstore(add(mPtr, 0x80), calldataload(add(aproof, PROOF_GRAND_PRODUCT_COMMITMENT_X)))\n        mstore(add(mPtr, 0xa0), calldataload(add(aproof, PROOF_GRAND_PRODUCT_COMMITMENT_Y)))\n        mstore(add(mPtr, 0xc0), calldataload(add(aproof, PROOF_OPENING_AT_ZETA_OMEGA_X)))\n        mstore(add(mPtr, 0xe0), calldataload(add(aproof, PROOF_OPENING_AT_ZETA_OMEGA_Y)))\n        mstore(add(mPtr, 0x100), mload(add(state, STATE_ZETA)))\n        mstore(add(mPtr, 0x120), mload(add(state, STATE_GAMMA_KZG)))\n        let random := staticcall(gas(), 0x2, mPtr, 0x140, mPtr, 0x20)\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In the function <code>batch_verify_multi_points</code>, the variable <code>random</code> (corresponding to <code>u</code> in the paper, step 12 of the <a href=\"https://eprint.iacr.org/2019/953.pdf\">plonk</a> verification process) should depend on <code>state_folded_digests_x</code>, <code>state_folded_digests_y</code>, <code>proof_grand_product_commitment_x</code>, <code>proof_grand_product_commitment_y</code> and <code>state_zeta</code> (by hashing those values for instance).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Consensys/gnark/security/advisories/GHSA-7p92-x423-vwj6\">https://github.com/Consensys/gnark/security/advisories/GHSA-7p92-x423-vwj6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p92-x423-vwj6\">https://github.com/advisories/GHSA-7p92-x423-vwj6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p92-x423-vwj6",
            "title": "[github.com/consensys/gnark] Plonk verifier KZG multi point verification",
            "date_modified": "2023-10-17T14:24:17.000Z",
            "date_published": "2023-10-17T14:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p92-x423-vwj6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package does not validate the ACS Location URI according to the SAML binding being parsed.</p>\n<p>If abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS endpoint definition, achieving Cross-Site-Scripting (XSS) in the IdP context during the redirection at the end of a SAML SSO Flow.</p>\n<p>Consequently, an attacker may perform any authenticated action as the victim once the victim’s browser loaded the SAML IdP initiated SSO link for the malicious service provider.</p>\n<p>Note: The severity is considered “High” because the SP registration is commonly an unrestricted operation in IdPs, hence not requiring particular permissions or publicly accessible to ease the IdP interoperability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in 0.4.14</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users of the package can perform external validation of URLs provided in SAML metadata, or restrict the ability for end-users to upload arbitrary metadata. </p>\n<h3 id=\"references\">References</h3>\n<p>This issue was reported by Francesco Lacerenza from Doyensec</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crewjam/saml/security/advisories/GHSA-267v-3v32-g6q5\">https://github.com/crewjam/saml/security/advisories/GHSA-267v-3v32-g6q5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45683\">https://nvd.nist.gov/vuln/detail/CVE-2023-45683</a></li>\n<li><a href=\"https://github.com/crewjam/saml/commit/b07b16cf83c4171d16da4d85608cb827f183cd79\">https://github.com/crewjam/saml/commit/b07b16cf83c4171d16da4d85608cb827f183cd79</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-267v-3v32-g6q5\">https://github.com/advisories/GHSA-267v-3v32-g6q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-267v-3v32-g6q5",
            "title": "[github.com/crewjam/saml] Cross-site Scripting via missing Binding syntax validation",
            "date_modified": "2023-10-17T14:20:59.000Z",
            "date_published": "2023-10-17T14:20:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-267v-3v32-g6q5"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}