{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>The kustomize-controller enables the use of Kustomize’s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use a specially crafted <code>kustomization.yaml</code> to cause Denial of Service at controller level.</p>\n<p>In multi-tenancy deployments this can lead to multiple tenants not being able to apply their Kustomizations until the malicious <code>kustomization.yaml</code> is removed and the controller restarted.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Within the affected versions, users with write access to a Flux source are able to craft a malicious <code>kustomization.yaml</code> file which causes the controller to enter an endless loop.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce better handling of Kustomization files blocking references that could lead to endless loops.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Flux engineering team found and patched this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please open an issue in the <a href=\"http://github.com/fluxcd/flux2\">flux2 repository</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-7pwf-jg34-hxwp\">https://github.com/fluxcd/flux2/security/advisories/GHSA-7pwf-jg34-hxwp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24878\">https://nvd.nist.gov/vuln/detail/CVE-2022-24878</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7pwf-jg34-hxwp\">https://github.com/advisories/GHSA-7pwf-jg34-hxwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7pwf-jg34-hxwp",
            "title": "[github.com/fluxcd/flux2] Improper path handling in Kustomization files allows for denial of service",
            "date_modified": "2022-05-20T16:58:39.000Z",
            "date_published": "2022-05-20T16:58:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7pwf-jg34-hxwp"
            }
        },
        {
            "content_html": "<p>The kustomize-controller enables the use of Kustomize’s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use a specially crafted <code>kustomization.yaml</code> to cause Denial of Service at controller level.</p>\n<p>In multi-tenancy deployments this can lead to multiple tenants not being able to apply their Kustomizations until the malicious <code>kustomization.yaml</code> is removed and the controller restarted.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Within the affected versions, users with write access to a Flux source are able to craft a malicious <code>kustomization.yaml</code> file which causes the controller to enter an endless loop.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce better handling of Kustomization files blocking references that could lead to endless loops.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The Flux engineering team found and patched this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please open an issue in the <a href=\"http://github.com/fluxcd/flux2\">flux2 repository</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-7pwf-jg34-hxwp\">https://github.com/fluxcd/flux2/security/advisories/GHSA-7pwf-jg34-hxwp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24878\">https://nvd.nist.gov/vuln/detail/CVE-2022-24878</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7pwf-jg34-hxwp\">https://github.com/advisories/GHSA-7pwf-jg34-hxwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7pwf-jg34-hxwp",
            "title": "[github.com/fluxcd/kustomize-controller] Improper path handling in Kustomization files allows for denial of service",
            "date_modified": "2022-05-20T16:58:39.000Z",
            "date_published": "2022-05-20T16:58:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7pwf-jg34-hxwp"
            }
        },
        {
            "content_html": "<p>Flux2 can reconcile the state of a remote cluster when provided with a <a href=\"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#file-references\">kubeconfig</a> with the correct access rights. <code>Kubeconfig</code> files can define <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\">commands</a> to be executed to generate on-demand authentication tokens. A malicious user with write access to a Flux source or direct access to the target cluster, could craft a <code>kubeconfig</code> to execute arbitrary code inside the controller’s container.</p>\n<p>In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Within the affected versions range, one of the permissions set below would be required for the vulnerability to be exploited:</p>\n<ul>\n<li>Direct access to the cluster to create Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and Kubernetes Secrets.</li>\n<li>Direct access to the cluster to modify existing Kubernetes secrets being used as <code>kubeconfig</code> in existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects.</li>\n<li>Direct access to the cluster to modify existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and access to create or modify existing Kubernetes secrets.</li>\n<li>Access rights to make changes to a configured Flux Source (i.e. Git repository).</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was fixed in kustomize-controller <a href=\"https://github.com/fluxcd/kustomize-controller/releases/tag/v0.23.0\">v0.23.0</a> and helm-controller <a href=\"https://github.com/fluxcd/helm-controller/releases/tag/v0.19.0\">v0.19.0</a>, both included in flux2 <a href=\"https://github.com/fluxcd/flux2/releases/tag/v0.29.0\">v0.29.0</a>. Starting from the fixed versions, both controllers disable the use of command execution from <code>kubeconfig</code> files by default, users have to opt-in by adding the flag <code>--insecure-kubeconfig-exec</code> to the controller’s command arguments. Users are no longer allowed to refer to files in the controller’s filesystem in the <code>kubeconfig</code> files provided for the remote apply feature.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>The functionality can be disabled via Validating Admission webhooks (e.g. OPA Gatekeeper, Kyverno) by restricting users from being able to set the <code>spec.kubeConfig</code> field in Flux <code>Kustomization</code> and <code>HelmRelease</code> objects.</li>\n<li>Applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>The Flux engineering team found and patched this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please open an issue in the <a href=\"http://github.com/fluxcd/flux2\">flux2 repository</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24817\">https://nvd.nist.gov/vuln/detail/CVE-2022-24817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc",
            "title": "[github.com/fluxcd/helm-controller] Improper kubeconfig validation allows arbitrary code execution",
            "date_modified": "2022-05-16T18:13:51.000Z",
            "date_published": "2022-05-16T18:13:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc"
            }
        },
        {
            "content_html": "<p>Flux2 can reconcile the state of a remote cluster when provided with a <a href=\"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#file-references\">kubeconfig</a> with the correct access rights. <code>Kubeconfig</code> files can define <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\">commands</a> to be executed to generate on-demand authentication tokens. A malicious user with write access to a Flux source or direct access to the target cluster, could craft a <code>kubeconfig</code> to execute arbitrary code inside the controller’s container.</p>\n<p>In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Within the affected versions range, one of the permissions set below would be required for the vulnerability to be exploited:</p>\n<ul>\n<li>Direct access to the cluster to create Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and Kubernetes Secrets.</li>\n<li>Direct access to the cluster to modify existing Kubernetes secrets being used as <code>kubeconfig</code> in existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects.</li>\n<li>Direct access to the cluster to modify existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and access to create or modify existing Kubernetes secrets.</li>\n<li>Access rights to make changes to a configured Flux Source (i.e. Git repository).</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was fixed in kustomize-controller <a href=\"https://github.com/fluxcd/kustomize-controller/releases/tag/v0.23.0\">v0.23.0</a> and helm-controller <a href=\"https://github.com/fluxcd/helm-controller/releases/tag/v0.19.0\">v0.19.0</a>, both included in flux2 <a href=\"https://github.com/fluxcd/flux2/releases/tag/v0.29.0\">v0.29.0</a>. Starting from the fixed versions, both controllers disable the use of command execution from <code>kubeconfig</code> files by default, users have to opt-in by adding the flag <code>--insecure-kubeconfig-exec</code> to the controller’s command arguments. Users are no longer allowed to refer to files in the controller’s filesystem in the <code>kubeconfig</code> files provided for the remote apply feature.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>The functionality can be disabled via Validating Admission webhooks (e.g. OPA Gatekeeper, Kyverno) by restricting users from being able to set the <code>spec.kubeConfig</code> field in Flux <code>Kustomization</code> and <code>HelmRelease</code> objects.</li>\n<li>Applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>The Flux engineering team found and patched this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please open an issue in the <a href=\"http://github.com/fluxcd/flux2\">flux2 repository</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24817\">https://nvd.nist.gov/vuln/detail/CVE-2022-24817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc",
            "title": "[github.com/fluxcd/kustomize-controller] Improper kubeconfig validation allows arbitrary code execution",
            "date_modified": "2022-05-16T18:13:51.000Z",
            "date_published": "2022-05-16T18:13:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc"
            }
        },
        {
            "content_html": "<p>Flux2 can reconcile the state of a remote cluster when provided with a <a href=\"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#file-references\">kubeconfig</a> with the correct access rights. <code>Kubeconfig</code> files can define <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\">commands</a> to be executed to generate on-demand authentication tokens. A malicious user with write access to a Flux source or direct access to the target cluster, could craft a <code>kubeconfig</code> to execute arbitrary code inside the controller’s container.</p>\n<p>In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Within the affected versions range, one of the permissions set below would be required for the vulnerability to be exploited:</p>\n<ul>\n<li>Direct access to the cluster to create Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and Kubernetes Secrets.</li>\n<li>Direct access to the cluster to modify existing Kubernetes secrets being used as <code>kubeconfig</code> in existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects.</li>\n<li>Direct access to the cluster to modify existing Flux <code>Kustomization</code> or <code>HelmRelease</code> objects and access to create or modify existing Kubernetes secrets.</li>\n<li>Access rights to make changes to a configured Flux Source (i.e. Git repository).</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was fixed in kustomize-controller <a href=\"https://github.com/fluxcd/kustomize-controller/releases/tag/v0.23.0\">v0.23.0</a> and helm-controller <a href=\"https://github.com/fluxcd/helm-controller/releases/tag/v0.19.0\">v0.19.0</a>, both included in flux2 <a href=\"https://github.com/fluxcd/flux2/releases/tag/v0.29.0\">v0.29.0</a>. Starting from the fixed versions, both controllers disable the use of command execution from <code>kubeconfig</code> files by default, users have to opt-in by adding the flag <code>--insecure-kubeconfig-exec</code> to the controller’s command arguments. Users are no longer allowed to refer to files in the controller’s filesystem in the <code>kubeconfig</code> files provided for the remote apply feature.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>The functionality can be disabled via Validating Admission webhooks (e.g. OPA Gatekeeper, Kyverno) by restricting users from being able to set the <code>spec.kubeConfig</code> field in Flux <code>Kustomization</code> and <code>HelmRelease</code> objects.</li>\n<li>Applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>The Flux engineering team found and patched this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please open an issue in the <a href=\"http://github.com/fluxcd/flux2\">flux2 repository</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24817\">https://nvd.nist.gov/vuln/detail/CVE-2022-24817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmq-fwmg-2gjc\">https://github.com/advisories/GHSA-vvmq-fwmg-2gjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc",
            "title": "[github.com/fluxcd/flux2] Improper kubeconfig validation allows arbitrary code execution",
            "date_modified": "2022-05-16T18:13:51.000Z",
            "date_published": "2022-05-16T18:13:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmq-fwmg-2gjc"
            }
        },
        {
            "content_html": "<p>ProxyScotch is a simple proxy server created for hoppscotch.io. The package github.com/hoppscotch/proxyscotch before 1.0.0 are vulnerable to Server-side Request Forgery (SSRF) when interceptor mode is set to proxy. It occurs when an HTTP request is made by a backend server to an untrusted URL submitted by a user. It leads to a leakage of sensitive information from the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25850\">https://nvd.nist.gov/vuln/detail/CVE-2022-25850</a></li>\n<li><a href=\"https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7\">https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228\">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hjh-c26m-xw8w\">https://github.com/advisories/GHSA-5hjh-c26m-xw8w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hjh-c26m-xw8w",
            "title": "[github.com/hoppscotch/proxyscotch] ProxyScotch is vulnerable to a server-side Request Forgery (SSRF)",
            "date_modified": "2022-05-04T20:14:03.000Z",
            "date_published": "2022-05-03T00:00:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hjh-c26m-xw8w"
            }
        },
        {
            "content_html": "<p>The kustomize-controller enables the use of Kustomize’s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use built-in features and a specially crafted <code>kustomization.yaml</code> to expose sensitive data from the controller’s pod filesystem. In multi-tenancy deployments this can lead to privilege escalation if the controller's service account has elevated permissions.</p>\n<p>Within the affected versions, users with write access to a Flux source are able to use built-in features to expose sensitive data from the controller’s pod filesystem using a malicious <code>kustomization.yaml</code> file.</p>\n<p>This vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce a new Kustomize file system implementation which ensures that all files being handled are contained within the Kustomization working directory, blocking references to any files that do not meet that requirement.</p>\n<p>Automated tooling (e.g. conftest) could be employed as a workaround, as part of a user's CI/CD pipeline to ensure that their <code>kustomization.yaml</code> files conform with specific policies, blocking access to sensitive path locations.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-j77r-2fxf-5jrw\">https://github.com/fluxcd/flux2/security/advisories/GHSA-j77r-2fxf-5jrw</a></li>\n<li><a href=\"https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f\">https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f</a></li>\n<li><a href=\"https://github.com/fluxcd/pkg/commit/0ec014baf417fd3879d366a45503a548b9267d2a\">https://github.com/fluxcd/pkg/commit/0ec014baf417fd3879d366a45503a548b9267d2a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j77r-2fxf-5jrw\">https://github.com/advisories/GHSA-j77r-2fxf-5jrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j77r-2fxf-5jrw",
            "title": "[github.com/fluxcd/flux2] Improper path handling in kustomization files allows path traversal",
            "date_modified": "2022-05-05T21:49:52.000Z",
            "date_published": "2022-05-04T18:04:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j77r-2fxf-5jrw"
            }
        },
        {
            "content_html": "<p>The kustomize-controller enables the use of Kustomize’s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use built-in features and a specially crafted <code>kustomization.yaml</code> to expose sensitive data from the controller’s pod filesystem. In multi-tenancy deployments this can lead to privilege escalation if the controller's service account has elevated permissions.</p>\n<p>Within the affected versions, users with write access to a Flux source are able to use built-in features to expose sensitive data from the controller’s pod filesystem using a malicious <code>kustomization.yaml</code> file.</p>\n<p>This vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce a new Kustomize file system implementation which ensures that all files being handled are contained within the Kustomization working directory, blocking references to any files that do not meet that requirement.</p>\n<p>Automated tooling (e.g. conftest) could be employed as a workaround, as part of a user's CI/CD pipeline to ensure that their <code>kustomization.yaml</code> files conform with specific policies, blocking access to sensitive path locations.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluxcd/flux2/security/advisories/GHSA-j77r-2fxf-5jrw\">https://github.com/fluxcd/flux2/security/advisories/GHSA-j77r-2fxf-5jrw</a></li>\n<li><a href=\"https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f\">https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f</a></li>\n<li><a href=\"https://github.com/fluxcd/pkg/commit/0ec014baf417fd3879d366a45503a548b9267d2a\">https://github.com/fluxcd/pkg/commit/0ec014baf417fd3879d366a45503a548b9267d2a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j77r-2fxf-5jrw\">https://github.com/advisories/GHSA-j77r-2fxf-5jrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j77r-2fxf-5jrw",
            "title": "[github.com/fluxcd/kustomize-controller] Improper path handling in kustomization files allows path traversal",
            "date_modified": "2022-05-05T21:49:52.000Z",
            "date_published": "2022-05-04T18:04:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j77r-2fxf-5jrw"
            }
        },
        {
            "content_html": "<p>The Hashicorp go-getter library before 1.5.11 could write SSH credentials into its logfile, exposing sensitive credentials to local users able to read the logfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29810\">https://nvd.nist.gov/vuln/detail/CVE-2022-29810</a></li>\n<li><a href=\"https://github.com/hashicorp/go-getter/pull/348\">https://github.com/hashicorp/go-getter/pull/348</a></li>\n<li><a href=\"https://github.com/hashicorp/go-getter/commit/36b68b2f68a3ed10ee7ecbb0cb9f6b1dc5da49cc\">https://github.com/hashicorp/go-getter/commit/36b68b2f68a3ed10ee7ecbb0cb9f6b1dc5da49cc</a></li>\n<li><a href=\"https://github.com/hashicorp/go-getter/releases/tag/v1.5.11\">https://github.com/hashicorp/go-getter/releases/tag/v1.5.11</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-27rq-4943-qcwp\">https://github.com/advisories/GHSA-27rq-4943-qcwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-27rq-4943-qcwp",
            "title": "[github.com/hashicorp/go-getter] Insertion of Sensitive Information into Log File in Hashicorp go-getter",
            "date_modified": "2022-05-03T20:19:27.000Z",
            "date_published": "2022-04-28T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-27rq-4943-qcwp"
            }
        },
        {
            "content_html": "<p>Woodpecker before 0.15.1 allows XSS via build logs because web/src/components/repo/build/BuildLog.vue lacks escaping.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29947\">https://nvd.nist.gov/vuln/detail/CVE-2022-29947</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/pull/879\">https://github.com/woodpecker-ci/woodpecker/pull/879</a></li>\n<li><a href=\"https://github.com/woodpecker-ci/woodpecker/releases/tag/v0.15.1\">https://github.com/woodpecker-ci/woodpecker/releases/tag/v0.15.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vmp5-c5hp-6c65\">https://github.com/advisories/GHSA-vmp5-c5hp-6c65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vmp5-c5hp-6c65",
            "title": "[github.com/woodpecker-ci/woodpecker] Woodpecker allows cross-site scripting (XSS) via build logs",
            "date_modified": "2022-05-03T20:18:09.000Z",
            "date_published": "2022-04-30T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vmp5-c5hp-6c65"
            }
        },
        {
            "content_html": "<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1227\">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>\n<li><a href=\"https://github.com/containers/podman/issues/10941\">https://github.com/containers/podman/issues/10941</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2070368\">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66vw-v2x9-hw75\">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75",
            "title": "[github.com/containers/podman] Podman publishes a malicious image to public registries",
            "date_modified": "2022-05-03T06:15:17.000Z",
            "date_published": "2022-04-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66vw-v2x9-hw75"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability affects customers who utilize non-admin users that are able to create or edit <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/\">Global Roles</a>. The most common use case for this scenario is the <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\"><code>restricted-admin</code></a> role.</p>\n<p>A flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 which allows users who have create or update permissions on Global Roles to escalate their permissions, or those of another user, to admin-level permissions. Global Roles grant users Rancher-wide permissions, such as the ability to create clusters. In the identified versions of Rancher, when users are given permission to edit or create Global Roles, they are not restricted to only granting permissions which they already posses.</p>\n<p>The privilege escalation can be taken advantage of in two ways by users with create or update permissions on Global Roles (including the <code>restricted-admin</code>):</p>\n<ol>\n<li>Editing the global <code>admin</code> role to make it the default for new users, then creating a new user that will be elevated to the global <code>admin</code> role.</li>\n<li>Creating a new global role with permissions already possessed by the <code>restricted-admin</code>, assigning this new role to a user, then modifying the global role to grant additional administrive like permissions (<code>'*'</code>) to the elevated user.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.13, 2.6.4 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Note:</strong> If you have users who have create or edit permissions on Global Roles but are not admin users (for example, the <code>restricted-admin</code>), it is highly advised to review the roles and users created by those users for possible privilege escalations.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-jwvr-vv7p-gpwq\">https://github.com/rancher/rancher/security/advisories/GHSA-jwvr-vv7p-gpwq</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.5.13\">https://github.com/rancher/rancher/releases/tag/v2.5.13</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.6.4\">https://github.com/rancher/rancher/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36784\">https://nvd.nist.gov/vuln/detail/CVE-2021-36784</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193991\">https://bugzilla.suse.com/show_bug.cgi?id=1193991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwvr-vv7p-gpwq\">https://github.com/advisories/GHSA-jwvr-vv7p-gpwq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwvr-vv7p-gpwq",
            "title": "[github.com/rancher/rancher] Privilege escalation for users with create/update permissions in Global Roles in Rancher",
            "date_modified": "2022-05-10T14:10:19.000Z",
            "date_published": "2022-05-02T19:39:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwvr-vv7p-gpwq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability affects customers who utilize non-admin users that are able to create or edit <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/\">Global Roles</a>. The most common use case for this scenario is the <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\"><code>restricted-admin</code></a> role.</p>\n<p>A flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 which allows users who have create or update permissions on Global Roles to escalate their permissions, or those of another user, to admin-level permissions. Global Roles grant users Rancher-wide permissions, such as the ability to create clusters. In the identified versions of Rancher, when users are given permission to edit or create Global Roles, they are not restricted to only granting permissions which they already posses.</p>\n<p>The privilege escalation can be taken advantage of in two ways by users with create or update permissions on Global Roles (including the <code>restricted-admin</code>):</p>\n<ol>\n<li>Editing the global <code>admin</code> role to make it the default for new users, then creating a new user that will be elevated to the global <code>admin</code> role.</li>\n<li>Creating a new global role with permissions already possessed by the <code>restricted-admin</code>, assigning this new role to a user, then modifying the global role to grant additional administrive like permissions (<code>'*'</code>) to the elevated user.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.13, 2.6.4 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Note:</strong> If you have users who have create or edit permissions on Global Roles but are not admin users (for example, the <code>restricted-admin</code>), it is highly advised to review the roles and users created by those users for possible privilege escalations.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-jwvr-vv7p-gpwq\">https://github.com/rancher/rancher/security/advisories/GHSA-jwvr-vv7p-gpwq</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.5.13\">https://github.com/rancher/rancher/releases/tag/v2.5.13</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.6.4\">https://github.com/rancher/rancher/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36784\">https://nvd.nist.gov/vuln/detail/CVE-2021-36784</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193991\">https://bugzilla.suse.com/show_bug.cgi?id=1193991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwvr-vv7p-gpwq\">https://github.com/advisories/GHSA-jwvr-vv7p-gpwq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwvr-vv7p-gpwq",
            "title": "[github.com/rancher/rancher] Privilege escalation for users with create/update permissions in Global Roles in Rancher",
            "date_modified": "2022-05-10T14:10:19.000Z",
            "date_published": "2022-05-02T19:39:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwvr-vv7p-gpwq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only happens when the user configures access credentials to a private repository in Rancher inside <code>Apps &amp; Marketplace &gt; Repositories</code>. It affects Rancher versions 2.5.0 up to and including 2.5.11 and from 2.6.0 up to and including 2.6.2.</p>\n<p>An insufficient check of the same-origin policy when downloading Helm charts from a configured private repository can lead to exposure of the repository credentials to a third-party provider. This exposure happens when the private repository:</p>\n<ol>\n<li>Does an HTTP redirect to a third-party repository or external storage provider.</li>\n<li>Downloads an icon resource for the chart hosted on a third-party provider.</li>\n</ol>\n<p>The address of the private repository is not leaked, only the credentials are leaked in the HTTP <code>Authorization</code> header in base64 format.</p>\n<p>With the patched versions, the default behavior now is to only send the private repository credentials when subdomain or domain hostname match when following the redirect or downloading external resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.12, 2.6.3 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Update Rancher to a patched version.</li>\n<li>Check the Helm charts in your configured private repository for possible redirects to third-party storage, and for Helm chart icons from third-party sources.</li>\n<li>Evaluate any Helm chart that might lead to the mentioned scenario and change affected credentials if deemed necessary.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p>Information about the same-origin check and how to disable it is available in Rancher <a href=\"https://rancher.com/docs/rancher/v2.6/en/helm-charts/#repositories\">documentation</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-4fc7-hc63-7fjg\">https://github.com/rancher/rancher/security/advisories/GHSA-4fc7-hc63-7fjg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4fc7-hc63-7fjg\">https://github.com/advisories/GHSA-4fc7-hc63-7fjg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4fc7-hc63-7fjg",
            "title": "[github.com/rancher/rancher] Exposure of repository credentials to external third-party sources in Rancher",
            "date_modified": "2022-05-13T18:50:28.000Z",
            "date_published": "2022-05-02T19:33:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4fc7-hc63-7fjg"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue only happens when the user configures access credentials to a private repository in Rancher inside <code>Apps &amp; Marketplace &gt; Repositories</code>. It affects Rancher versions 2.5.0 up to and including 2.5.11 and from 2.6.0 up to and including 2.6.2.</p>\n<p>An insufficient check of the same-origin policy when downloading Helm charts from a configured private repository can lead to exposure of the repository credentials to a third-party provider. This exposure happens when the private repository:</p>\n<ol>\n<li>Does an HTTP redirect to a third-party repository or external storage provider.</li>\n<li>Downloads an icon resource for the chart hosted on a third-party provider.</li>\n</ol>\n<p>The address of the private repository is not leaked, only the credentials are leaked in the HTTP <code>Authorization</code> header in base64 format.</p>\n<p>With the patched versions, the default behavior now is to only send the private repository credentials when subdomain or domain hostname match when following the redirect or downloading external resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.12, 2.6.3 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Update Rancher to a patched version.</li>\n<li>Check the Helm charts in your configured private repository for possible redirects to third-party storage, and for Helm chart icons from third-party sources.</li>\n<li>Evaluate any Helm chart that might lead to the mentioned scenario and change affected credentials if deemed necessary.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p>Information about the same-origin check and how to disable it is available in Rancher <a href=\"https://rancher.com/docs/rancher/v2.6/en/helm-charts/#repositories\">documentation</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-4fc7-hc63-7fjg\">https://github.com/rancher/rancher/security/advisories/GHSA-4fc7-hc63-7fjg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4fc7-hc63-7fjg\">https://github.com/advisories/GHSA-4fc7-hc63-7fjg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4fc7-hc63-7fjg",
            "title": "[github.com/rancher/rancher] Exposure of repository credentials to external third-party sources in Rancher",
            "date_modified": "2022-05-13T18:50:28.000Z",
            "date_published": "2022-05-02T19:33:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4fc7-hc63-7fjg"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability only affects customers using the <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\"><code>restricted-admin</code></a> role in Rancher. For this role to be active, Rancher must be bootstrapped with the environment variable <code>CATTLE_RESTRICTED_DEFAULT_ADMIN=true</code> or the configuration flag <code>restrictedAdmin=true</code>.</p>\n<p>A flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 where the <code>global-data</code> role in <code>cattle-global-data</code> namespace grants write access to the Catalogs. Since each user with any level of catalog access was bound to the <code>global-data</code> role, this grants write access to templates (<code>CatalogTemplates</code>) and template versions (<code>CatalogTemplateVersions</code>) for any user with any level of catalog access. New users created in Rancher are by default assigned to the <code>user</code> role (standard user), which is not designed to grant write catalog access. This vulnerability effectively elevates the privilege of any user to write access for the catalog template and catalog template version resources.</p>\n<p>A malicious user could abuse this vulnerability to:</p>\n<ol>\n<li>Make applications or individual versions of applications visible or hidden on the UI, by modifying <code>version</code> and <code>rancherMaxVersion</code> fields.</li>\n<li>Change the logo (field <code>icon</code>) of an application or template to an arbitrary image.</li>\n<li>Make a chart appear as a trusted or partner chart. This can be abused to make less trusted charts, such as customer defined charts, appear more legitimate than they are, by adding the label <code>io.rancher.certified: partner</code>.</li>\n<li>Swap template versions between templates of charts inside the same catalog. This can be exploited to swap the files from one chart or version to another, by changing <code>versionDir</code> field. When a user on the target cluster deploys their chart, it will deploy the modified version.</li>\n</ol>\n<p>This vulnerability does not allow to modify the base64 encoded <code>files</code> fields of the <code>templateVersions</code>, so one cannot inject arbitrary data to charts that have already been pulled from their respective catalog.</p>\n<p>Without access to the Catalog, malicious users are limited to injecting apps which already exist in a registered catalog. They would need write access to the catalog or external write access to a source repo to inject arbitrary code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.13, 2.6.4 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Note:</strong> If you use the <code>restricted-admin</code> as the default admin role in your environment, it's highly advised to review <code>CatalogTemplates</code> and <code>CatalogTemplateVersions</code> for possible malicious modifications.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-hx8w-ghh8-r4xf\">https://github.com/rancher/rancher/security/advisories/GHSA-hx8w-ghh8-r4xf</a></li>\n<li><a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\">https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4200\">https://nvd.nist.gov/vuln/detail/CVE-2021-4200</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193992\">https://bugzilla.suse.com/show_bug.cgi?id=1193992</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx8w-ghh8-r4xf\">https://github.com/advisories/GHSA-hx8w-ghh8-r4xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx8w-ghh8-r4xf",
            "title": "[github.com/rancher/rancher] Write access to the Catalog for any user when restricted-admin role is enabled in Rancher",
            "date_modified": "2022-05-10T15:15:51.000Z",
            "date_published": "2022-05-02T19:26:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx8w-ghh8-r4xf"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability only affects customers using the <a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\"><code>restricted-admin</code></a> role in Rancher. For this role to be active, Rancher must be bootstrapped with the environment variable <code>CATTLE_RESTRICTED_DEFAULT_ADMIN=true</code> or the configuration flag <code>restrictedAdmin=true</code>.</p>\n<p>A flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 where the <code>global-data</code> role in <code>cattle-global-data</code> namespace grants write access to the Catalogs. Since each user with any level of catalog access was bound to the <code>global-data</code> role, this grants write access to templates (<code>CatalogTemplates</code>) and template versions (<code>CatalogTemplateVersions</code>) for any user with any level of catalog access. New users created in Rancher are by default assigned to the <code>user</code> role (standard user), which is not designed to grant write catalog access. This vulnerability effectively elevates the privilege of any user to write access for the catalog template and catalog template version resources.</p>\n<p>A malicious user could abuse this vulnerability to:</p>\n<ol>\n<li>Make applications or individual versions of applications visible or hidden on the UI, by modifying <code>version</code> and <code>rancherMaxVersion</code> fields.</li>\n<li>Change the logo (field <code>icon</code>) of an application or template to an arbitrary image.</li>\n<li>Make a chart appear as a trusted or partner chart. This can be abused to make less trusted charts, such as customer defined charts, appear more legitimate than they are, by adding the label <code>io.rancher.certified: partner</code>.</li>\n<li>Swap template versions between templates of charts inside the same catalog. This can be exploited to swap the files from one chart or version to another, by changing <code>versionDir</code> field. When a user on the target cluster deploys their chart, it will deploy the modified version.</li>\n</ol>\n<p>This vulnerability does not allow to modify the base64 encoded <code>files</code> fields of the <code>templateVersions</code>, so one cannot inject arbitrary data to charts that have already been pulled from their respective catalog.</p>\n<p>Without access to the Catalog, malicious users are limited to injecting apps which already exist in a registered catalog. They would need write access to the catalog or external write access to a source repo to inject arbitrary code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases 2.5.13, 2.6.4 and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>\n<p><strong>Note:</strong> If you use the <code>restricted-admin</code> as the default admin role in your environment, it's highly advised to review <code>CatalogTemplates</code> and <code>CatalogTemplateVersions</code> for possible malicious modifications.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-hx8w-ghh8-r4xf\">https://github.com/rancher/rancher/security/advisories/GHSA-hx8w-ghh8-r4xf</a></li>\n<li><a href=\"https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin\">https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4200\">https://nvd.nist.gov/vuln/detail/CVE-2021-4200</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193992\">https://bugzilla.suse.com/show_bug.cgi?id=1193992</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx8w-ghh8-r4xf\">https://github.com/advisories/GHSA-hx8w-ghh8-r4xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx8w-ghh8-r4xf",
            "title": "[github.com/rancher/rancher] Write access to the Catalog for any user when restricted-admin role is enabled in Rancher",
            "date_modified": "2022-05-10T15:15:51.000Z",
            "date_published": "2022-05-02T19:26:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx8w-ghh8-r4xf"
            }
        },
        {
            "content_html": "<p> A vulnerability was identified in Consul and Consul Enterprise (“Consul”) such that HTTP health check endpoints returning an HTTP redirect may be abused as a vector for server-side request forgery (SSRF). This vulnerability, CVE-2022-29153, was fixed in Consul 1.9.17, 1.10.10, and 1.11.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29153\">https://nvd.nist.gov/vuln/detail/CVE-2022-29153</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393\">https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6h7-4qgw-2j9p\">https://github.com/advisories/GHSA-q6h7-4qgw-2j9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p",
            "title": "[github.com/hashicorp/consul] Server side request forgery in Hashicorp Consul",
            "date_modified": "2022-04-28T21:13:57.000Z",
            "date_published": "2022-04-20T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p"
            }
        },
        {
            "content_html": "<p> A vulnerability was identified in Consul and Consul Enterprise (“Consul”) such that HTTP health check endpoints returning an HTTP redirect may be abused as a vector for server-side request forgery (SSRF). This vulnerability, CVE-2022-29153, was fixed in Consul 1.9.17, 1.10.10, and 1.11.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29153\">https://nvd.nist.gov/vuln/detail/CVE-2022-29153</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393\">https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6h7-4qgw-2j9p\">https://github.com/advisories/GHSA-q6h7-4qgw-2j9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p",
            "title": "[github.com/hashicorp/consul] Server side request forgery in Hashicorp Consul",
            "date_modified": "2022-04-28T21:13:57.000Z",
            "date_published": "2022-04-20T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p"
            }
        },
        {
            "content_html": "<p> A vulnerability was identified in Consul and Consul Enterprise (“Consul”) such that HTTP health check endpoints returning an HTTP redirect may be abused as a vector for server-side request forgery (SSRF). This vulnerability, CVE-2022-29153, was fixed in Consul 1.9.17, 1.10.10, and 1.11.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29153\">https://nvd.nist.gov/vuln/detail/CVE-2022-29153</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393\">https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6h7-4qgw-2j9p\">https://github.com/advisories/GHSA-q6h7-4qgw-2j9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p",
            "title": "[github.com/hashicorp/consul] Server side request forgery in Hashicorp Consul",
            "date_modified": "2022-04-28T21:13:57.000Z",
            "date_published": "2022-04-20T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6h7-4qgw-2j9p"
            }
        }
    ]
}