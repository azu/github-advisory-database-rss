{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Blst versions v0.3.0 through 0.3.10 failed to perform a signature group-check if the call to <code>SigValidate</code> in the Go bindings was complemented with a check for infinity. Formally speaking, infinity, or the identity element of the elliptic curve group, is a member of the group, and the group-check should allow it. An initial review of blst users on GitHub did not uncover any use of this function with the complementary infinity check. This optional check was added as a convenience feature because despite infinity being a legitimate member of the group, individual signatures should never be infinite (as it is equivalent to having zero for the secret key), and observing one should raise a flag.</p>\n<h3 id=\"description\">Description</h3>\n<p>The vulnerable function is declared as <code>SigValidate(sigInfcheck bool) bool</code> and if called with <code>sigInfcheck</code> argument set to <code>true</code>, the group-check was omitted. The group-check is required to be performed on untrusted input, because the pairing, the corner-stone operation of the signature scheme, is defined only on points that are members of a specific cyclic group, which is a subset of all the possible points on elliptic curves in question. Submitting an untrusted point outside the group opens up the possibility of accepting an alternative signature for a chosen message.</p>\n<p>It should be noted that the SigValidate call is not the only way to perform the group-checks. There are optional checks integrated into various other verification methods, such as <code>Verify</code>, <code>AggregateVerify</code>, etc., as well as signature aggregation methods, such as <code>PairingAggregate*</code>. The reason why there are multiple options is that the group-check is a relatively expensive operation, and application developers are arguably entitled the freedom to choose when it's performed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been resolved in the v0.3.11 release and users are advised to update if their application is affected or alternatively omit the complementary infinity check.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>A special thanks to Yunjong Jeong (@blukat29) for the discovery and disclosure of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/supranational/blst/security/advisories/GHSA-8c37-7qx3-4c4p\">https://github.com/supranational/blst/security/advisories/GHSA-8c37-7qx3-4c4p</a></li>\n<li><a href=\"https://github.com/supranational/blst/commit/fb91221c91c82f65bfc7f243256308977a06d48b\">https://github.com/supranational/blst/commit/fb91221c91c82f65bfc7f243256308977a06d48b</a></li>\n<li><a href=\"https://github.com/supranational/blst/releases/tag/v0.3.11\">https://github.com/supranational/blst/releases/tag/v0.3.11</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c37-7qx3-4c4p\">https://github.com/advisories/GHSA-8c37-7qx3-4c4p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c37-7qx3-4c4p",
            "title": "[github.com/supranational/blst] Blst has logical error in SigValidate in Go bindings",
            "date_modified": "2023-08-09T20:57:58.000Z",
            "date_published": "2023-08-09T20:57:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c37-7qx3-4c4p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Gitea through 1.17.1, repo cloning can occur in the migration function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38795\">https://nvd.nist.gov/vuln/detail/CVE-2022-38795</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/20869\">https://github.com/go-gitea/gitea/pull/20869</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/20892\">https://github.com/go-gitea/gitea/pull/20892</a></li>\n<li><a href=\"https://blog.gitea.com/release-of-1.17.2/\">https://blog.gitea.com/release-of-1.17.2/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j3v-68w3-3848\">https://github.com/advisories/GHSA-8j3v-68w3-3848</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j3v-68w3-3848",
            "title": "[code.gitea.io/gitea] Gitea erroneous repo clones",
            "date_modified": "2023-08-09T20:38:29.000Z",
            "date_published": "2023-08-07T15:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j3v-68w3-3848"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious peer can use large RSA keys to run a resource exhaustion attack &amp; force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step.\nTo prevent this attack, go-libp2p now restricts RSA keys to &lt;= 8192 bits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade their go-libp2p versions to &gt;=v0.27.8, &gt;= v0.28.2, or &gt;=v0.29.1\nTo protect your application, it's necessary to update to these patch releases <strong>AND</strong> to use the updated Go compiler (1.20.7 or 1.19.12, respectively)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds</p>\n<h3 id=\"references\">References</h3>\n<p>The Golang crypto/tls package also had this vulnerability (\"verifying certificate chains containing large RSA keys is slow” <a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a>)\nFix in golang/go crypto/tls: <a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a>\nFix in quic-go <a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg\">https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39533\">https://nvd.nist.gov/vuln/detail/CVE-2023-39533</a></li>\n<li><a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/pull/2454\">https://github.com/libp2p/go-libp2p/pull/2454</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></li>\n<li><a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb\">https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00\">https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d\">https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-876p-8259-xjgg\">https://github.com/advisories/GHSA-876p-8259-xjgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-876p-8259-xjgg",
            "title": "[github.com/libp2p/go-libp2p] libp2p nodes vulnerable to attack using large RSA keys",
            "date_modified": "2023-08-09T13:18:18.000Z",
            "date_published": "2023-08-09T13:18:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-876p-8259-xjgg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious peer can use large RSA keys to run a resource exhaustion attack &amp; force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step.\nTo prevent this attack, go-libp2p now restricts RSA keys to &lt;= 8192 bits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade their go-libp2p versions to &gt;=v0.27.8, &gt;= v0.28.2, or &gt;=v0.29.1\nTo protect your application, it's necessary to update to these patch releases <strong>AND</strong> to use the updated Go compiler (1.20.7 or 1.19.12, respectively)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds</p>\n<h3 id=\"references\">References</h3>\n<p>The Golang crypto/tls package also had this vulnerability (\"verifying certificate chains containing large RSA keys is slow” <a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a>)\nFix in golang/go crypto/tls: <a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a>\nFix in quic-go <a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg\">https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39533\">https://nvd.nist.gov/vuln/detail/CVE-2023-39533</a></li>\n<li><a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/pull/2454\">https://github.com/libp2p/go-libp2p/pull/2454</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></li>\n<li><a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb\">https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00\">https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d\">https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-876p-8259-xjgg\">https://github.com/advisories/GHSA-876p-8259-xjgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-876p-8259-xjgg",
            "title": "[github.com/libp2p/go-libp2p] libp2p nodes vulnerable to attack using large RSA keys",
            "date_modified": "2023-08-09T13:18:18.000Z",
            "date_published": "2023-08-09T13:18:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-876p-8259-xjgg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious peer can use large RSA keys to run a resource exhaustion attack &amp; force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step.\nTo prevent this attack, go-libp2p now restricts RSA keys to &lt;= 8192 bits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade their go-libp2p versions to &gt;=v0.27.8, &gt;= v0.28.2, or &gt;=v0.29.1\nTo protect your application, it's necessary to update to these patch releases <strong>AND</strong> to use the updated Go compiler (1.20.7 or 1.19.12, respectively)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds</p>\n<h3 id=\"references\">References</h3>\n<p>The Golang crypto/tls package also had this vulnerability (\"verifying certificate chains containing large RSA keys is slow” <a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a>)\nFix in golang/go crypto/tls: <a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a>\nFix in quic-go <a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg\">https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39533\">https://nvd.nist.gov/vuln/detail/CVE-2023-39533</a></li>\n<li><a href=\"https://github.com/golang/go/issues/61460\">https://github.com/golang/go/issues/61460</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/pull/2454\">https://github.com/libp2p/go-libp2p/pull/2454</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/pull/4012\">https://github.com/quic-go/quic-go/pull/4012</a></li>\n<li><a href=\"https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\">https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb\">https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00\">https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00</a></li>\n<li><a href=\"https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d\">https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-876p-8259-xjgg\">https://github.com/advisories/GHSA-876p-8259-xjgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-876p-8259-xjgg",
            "title": "[github.com/libp2p/go-libp2p] libp2p nodes vulnerable to attack using large RSA keys",
            "date_modified": "2023-08-09T13:18:18.000Z",
            "date_published": "2023-08-09T13:18:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-876p-8259-xjgg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Weak Password Requirements in GitHub repository answerdev/answer prior to v1.1.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4125\">https://nvd.nist.gov/vuln/detail/CVE-2023-4125</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/7d23b17cdbbefcd2e7b5c3150f0b5ec908dc835f\">https://github.com/answerdev/answer/commit/7d23b17cdbbefcd2e7b5c3150f0b5ec908dc835f</a></li>\n<li><a href=\"https://huntr.dev/bounties/85bfd18f-8d3b-4154-8b7b-1f8fcf704e28\">https://huntr.dev/bounties/85bfd18f-8d3b-4154-8b7b-1f8fcf704e28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j63x-f657-2m9g\">https://github.com/advisories/GHSA-j63x-f657-2m9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j63x-f657-2m9g",
            "title": "[github.com/answerdev/answer] Answer has Weak Password Requirements",
            "date_modified": "2023-08-08T22:15:02.000Z",
            "date_published": "2023-08-03T06:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j63x-f657-2m9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"overview\">Overview</h2>\n<p>We have identified and addressed a security issue in the Nuclei project that affected users utilizing Nuclei as <strong>Go code (SDK)</strong> running <strong>custom templates</strong>. This issue did not affect CLI users. The problem was related to sanitization issues with payloads loading in <code>sandbox</code> mode.</p>\n<h2 id=\"details\">Details</h2>\n<p>In the previous versions, there was a potential risk with payloads loading in sandbox mode. The issue occurred due to relative paths not being converted to absolute paths before doing the check for <code>sandbox</code> flag allowing arbitrary files to be read on the filesystem in certain cases when using Nuclei from <code>Go</code> SDK implementation. </p>\n<p>This issue has been fixed in the latest release, v2.9.9. We have also enabled sandbox by default for filesystem loading. This can be optionally disabled if required.</p>\n<p>The <code>-sandbox</code> option has been <strong>deprecated</strong> and is now divided into two new options: <code>-lfa</code> (allow local file access) which is enabled by default and <code>-lna</code> (restrict local network access) which can be enabled by users optionally. The <code>-lfa</code> allows file (payload) access anywhere on the system (disabling sandbox effectively), and <code>-lna</code> blocks connections to the local/private network.</p>\n<h2 id=\"affected-versions\">Affected Versions</h2>\n<p>This issue affected all versions of Nuclei prior to v2.9.9.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>We recommend all users upgrade to the latest version, <a href=\"https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9\">v2.9.9</a>, which includes the security fix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/pull/3927\">patch</a></li>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9\">releases</a></li>\n</ul>\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n<p>We would like to thank <strong>keomutchoiboi</strong> who reported this issue to us via our security email, <a href=\"mailto:security@projectdiscovery.io\">security@projectdiscovery.io</a>. We appreciate the responsible disclosure of this issue.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-2xx4-jj5v-6mff\">https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-2xx4-jj5v-6mff</a></li>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/pull/3927\">https://github.com/projectdiscovery/nuclei/pull/3927</a></li>\n<li><a href=\"https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9\">https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-37896\">https://nvd.nist.gov/vuln/detail/CVE-2023-37896</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2xx4-jj5v-6mff\">https://github.com/advisories/GHSA-2xx4-jj5v-6mff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2xx4-jj5v-6mff",
            "title": "[github.com/projectdiscovery/nuclei/v2] Nuclei Path Traversal vulnerability",
            "date_modified": "2023-08-04T18:40:52.000Z",
            "date_published": "2023-08-04T17:27:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2xx4-jj5v-6mff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Rancher allows remote attackers to execute JavaScript via malicious links. This issue affects: SUSE Rancher Rancher versions prior to 2.5.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25313\">https://nvd.nist.gov/vuln/detail/CVE-2021-25313</a></li>\n<li><a href=\"https://github.com/rancher/rancher/issues/31583\">https://github.com/rancher/rancher/issues/31583</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1181852\">https://bugzilla.suse.com/show_bug.cgi?id=1181852</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.5.6\">https://github.com/rancher/rancher/releases/tag/v2.5.6</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.3.11\">https://github.com/rancher/rancher/releases/tag/v2.3.11</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.4.14\">https://github.com/rancher/rancher/releases/tag/v2.4.14</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m8r-jh89-rq7h\">https://github.com/advisories/GHSA-6m8r-jh89-rq7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h",
            "title": "[github.com/rancher/rancher] Rancher Cross-site Scripting Vulnerability",
            "date_modified": "2023-08-03T18:49:14.000Z",
            "date_published": "2022-05-24T17:43:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Rancher allows remote attackers to execute JavaScript via malicious links. This issue affects: SUSE Rancher Rancher versions prior to 2.5.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25313\">https://nvd.nist.gov/vuln/detail/CVE-2021-25313</a></li>\n<li><a href=\"https://github.com/rancher/rancher/issues/31583\">https://github.com/rancher/rancher/issues/31583</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1181852\">https://bugzilla.suse.com/show_bug.cgi?id=1181852</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.5.6\">https://github.com/rancher/rancher/releases/tag/v2.5.6</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.3.11\">https://github.com/rancher/rancher/releases/tag/v2.3.11</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.4.14\">https://github.com/rancher/rancher/releases/tag/v2.4.14</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m8r-jh89-rq7h\">https://github.com/advisories/GHSA-6m8r-jh89-rq7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h",
            "title": "[github.com/rancher/rancher] Rancher Cross-site Scripting Vulnerability",
            "date_modified": "2023-08-03T18:49:14.000Z",
            "date_published": "2022-05-24T17:43:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Rancher allows remote attackers to execute JavaScript via malicious links. This issue affects: SUSE Rancher Rancher versions prior to 2.5.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25313\">https://nvd.nist.gov/vuln/detail/CVE-2021-25313</a></li>\n<li><a href=\"https://github.com/rancher/rancher/issues/31583\">https://github.com/rancher/rancher/issues/31583</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1181852\">https://bugzilla.suse.com/show_bug.cgi?id=1181852</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.5.6\">https://github.com/rancher/rancher/releases/tag/v2.5.6</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.3.11\">https://github.com/rancher/rancher/releases/tag/v2.3.11</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.4.14\">https://github.com/rancher/rancher/releases/tag/v2.4.14</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m8r-jh89-rq7h\">https://github.com/advisories/GHSA-6m8r-jh89-rq7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h",
            "title": "[github.com/rancher/rancher] Rancher Cross-site Scripting Vulnerability",
            "date_modified": "2023-08-03T18:49:14.000Z",
            "date_published": "2022-05-24T17:43:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m8r-jh89-rq7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Race Condition within a Thread in GitHub repository answerdev/answer prior to v1.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4127\">https://nvd.nist.gov/vuln/detail/CVE-2023-4127</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/47661dc8a356ce6aa7793f1bd950399292180182\">https://github.com/answerdev/answer/commit/47661dc8a356ce6aa7793f1bd950399292180182</a></li>\n<li><a href=\"https://huntr.dev/bounties/cf7d19e3-1318-4c77-8366-d8d04a0b41ba\">https://huntr.dev/bounties/cf7d19e3-1318-4c77-8366-d8d04a0b41ba</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52h8-c876-989c\">https://github.com/advisories/GHSA-52h8-c876-989c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52h8-c876-989c",
            "title": "[github.com/answerdev/answer] Answer has Race Condition within a Thread",
            "date_modified": "2023-08-03T16:42:43.000Z",
            "date_published": "2023-08-03T06:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52h8-c876-989c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insufficient Session Expiration in GitHub repository answerdev/answer prior to v1.1.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4126\">https://nvd.nist.gov/vuln/detail/CVE-2023-4126</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/4f468b58d0dea51290bfbdd3e96332b0014c8730\">https://github.com/answerdev/answer/commit/4f468b58d0dea51290bfbdd3e96332b0014c8730</a></li>\n<li><a href=\"https://huntr.dev/bounties/7f50bf1c-bcb9-46ca-8cec-211493d280c5\">https://huntr.dev/bounties/7f50bf1c-bcb9-46ca-8cec-211493d280c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ggcf-hwxp-rc77\">https://github.com/advisories/GHSA-ggcf-hwxp-rc77</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ggcf-hwxp-rc77",
            "title": "[github.com/answerdev/answer] Answer Insufficient Session Expiration vulnerability",
            "date_modified": "2023-08-03T16:42:38.000Z",
            "date_published": "2023-08-03T06:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ggcf-hwxp-rc77"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Missing Authorization in GitHub repository answerdev/answer prior to v1.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4124\">https://nvd.nist.gov/vuln/detail/CVE-2023-4124</a></li>\n<li><a href=\"https://github.com/answerdev/answer/commit/964195fd859ee5d7171fac847374dfa31893e793\">https://github.com/answerdev/answer/commit/964195fd859ee5d7171fac847374dfa31893e793</a></li>\n<li><a href=\"https://huntr.dev/bounties/2c684f99-d181-4106-8ee2-64a76ae6a348\">https://huntr.dev/bounties/2c684f99-d181-4106-8ee2-64a76ae6a348</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9vc-7x69-c2x8\">https://github.com/advisories/GHSA-v9vc-7x69-c2x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9vc-7x69-c2x8",
            "title": "[github.com/answerdev/answer] Answer Missing Authorization vulnerability",
            "date_modified": "2023-08-03T16:42:29.000Z",
            "date_published": "2023-08-03T06:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9vc-7x69-c2x8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Docker Notary before 0.1, gotuf/signed/verify.go has a Signature Algorithm Not Matched to Key vulnerability. Because an attacker controls the field specifying the signature algorithm, they might (for example) be able to forge a signature by forcing a misinterpretation of an RSA-PSS key as Ed25519 elliptic-curve data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-9258\">https://nvd.nist.gov/vuln/detail/CVE-2015-9258</a></li>\n<li><a href=\"https://github.com/theupdateframework/notary/blob/master/docs/resources/ncc_docker_notary_audit_2015_07_31.pdf\">https://github.com/theupdateframework/notary/blob/master/docs/resources/ncc_docker_notary_audit_2015_07_31.pdf</a></li>\n<li><a href=\"https://web.archive.org/web/20160305015752/https://docs.docker.com/notary/changelog/\">https://web.archive.org/web/20160305015752/https://docs.docker.com/notary/changelog/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-785h-hrf7-gqxc\">https://github.com/advisories/GHSA-785h-hrf7-gqxc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-785h-hrf7-gqxc",
            "title": "[github.com/docker/notary] Docker Notary Signature Algorithm Not Matched to Key vulnerability",
            "date_modified": "2023-08-02T20:53:09.000Z",
            "date_published": "2022-05-14T03:28:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-785h-hrf7-gqxc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A message-forgery issue was discovered in crypto/openpgp/clearsign/clearsign.go in supplementary Go cryptography libraries 2019-03-25. According to the OpenPGP Message Format specification in RFC 4880 chapter 7, a cleartext signed message can contain one or more optional \"Hash\" Armor Headers. The \"Hash\" Armor Header specifies the message digest algorithm(s) used for the signature. However, the Go clearsign package ignores the value of this header, which allows an attacker to spoof it. Consequently, an attacker can lead a victim to believe the signature was generated using a different message digest algorithm than what was actually used. Moreover, since the library skips Armor Header parsing in general, an attacker can not only embed arbitrary Armor Headers, but also prepend arbitrary text to cleartext messages without invalidating the signatures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-11841\">https://nvd.nist.gov/vuln/detail/CVE-2019-11841</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/09/msg00011.html\">https://lists.debian.org/debian-lts-announce/2019/09/msg00011.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html\">https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152840/Go-Cryptography-Libraries-Cleartext-Message-Spoofing.html\">http://packetstormsecurity.com/files/152840/Go-Cryptography-Libraries-Cleartext-Message-Spoofing.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html\">https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html</a></li>\n<li><a href=\"https://github.com/golang/crypto/commit/c05e17bb3b2dca130fc919668a96b4bec9eb9442\">https://github.com/golang/crypto/commit/c05e17bb3b2dca130fc919668a96b4bec9eb9442</a></li>\n<li><a href=\"https://groups.google.com/d/msg/golang-openpgp/6vdgZoTgbIY/K6bBY9z3DAAJ\">https://groups.google.com/d/msg/golang-openpgp/6vdgZoTgbIY/K6bBY9z3DAAJ</a></li>\n<li><a href=\"https://web.archive.org/web/20201207161832/https://sec-consult.com/en/blog/advisories/cleartext-message-spoofing-in-go-cryptography-libraries-cve-2019-11841/\">https://web.archive.org/web/20201207161832/https://sec-consult.com/en/blog/advisories/cleartext-message-spoofing-in-go-cryptography-libraries-cve-2019-11841/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3jr-pf6g-c48f\">https://github.com/advisories/GHSA-x3jr-pf6g-c48f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3jr-pf6g-c48f",
            "title": "[golang.org/x/crypto/openpgp/clearsign] Golang/crypto message forgery vulnerability",
            "date_modified": "2023-08-01T23:32:28.000Z",
            "date_published": "2022-05-24T16:46:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3jr-pf6g-c48f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Rancher 1 and 2 through 2.2.3, unprivileged users (if allowed to deploy nodes) can gain admin access to the Rancher management plane because node driver options intentionally allow posting certain data to the cloud. The problem is that a user could choose to post a sensitive file such as /root/.kube/config or /var/lib/rancher/management-state/cred/kubeconfig-system.yaml.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12274\">https://nvd.nist.gov/vuln/detail/CVE-2019-12274</a></li>\n<li><a href=\"https://forums.rancher.com/t/rancher-release-v2-2-4-addresses-rancher-cve-2019-12274-and-cve-2019-12303/14466\">https://forums.rancher.com/t/rancher-release-v2-2-4-addresses-rancher-cve-2019-12274-and-cve-2019-12303/14466</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gc62-j469-9gjm\">https://github.com/advisories/GHSA-gc62-j469-9gjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gc62-j469-9gjm",
            "title": "[github.com/rancher/rancher] Rancher Privilege Escalation Vulnerability",
            "date_modified": "2023-08-01T23:31:43.000Z",
            "date_published": "2022-05-24T16:47:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gc62-j469-9gjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Rancher 1 and 2 through 2.2.3, unprivileged users (if allowed to deploy nodes) can gain admin access to the Rancher management plane because node driver options intentionally allow posting certain data to the cloud. The problem is that a user could choose to post a sensitive file such as /root/.kube/config or /var/lib/rancher/management-state/cred/kubeconfig-system.yaml.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12274\">https://nvd.nist.gov/vuln/detail/CVE-2019-12274</a></li>\n<li><a href=\"https://forums.rancher.com/t/rancher-release-v2-2-4-addresses-rancher-cve-2019-12274-and-cve-2019-12303/14466\">https://forums.rancher.com/t/rancher-release-v2-2-4-addresses-rancher-cve-2019-12274-and-cve-2019-12303/14466</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gc62-j469-9gjm\">https://github.com/advisories/GHSA-gc62-j469-9gjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gc62-j469-9gjm",
            "title": "[github.com/rancher/rancher] Rancher Privilege Escalation Vulnerability",
            "date_modified": "2023-08-01T23:31:43.000Z",
            "date_published": "2022-05-24T16:47:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gc62-j469-9gjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>helm Before 2.7.2 is affected by: CWE-295: Improper Certificate Validation. The impact is: Unauthorized clients could connect to the server because self-signed client certs were aloowed. The component is: helm (many files updated, see <a href=\"https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50\">https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50</a>). The attack vector is: A malicious client could connect to the server over the network. The fixed version is: 2.7.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-1010275\">https://nvd.nist.gov/vuln/detail/CVE-2019-1010275</a></li>\n<li><a href=\"https://github.com/helm/helm/pull/3152\">https://github.com/helm/helm/pull/3152</a></li>\n<li><a href=\"https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50\">https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50</a></li>\n<li><a href=\"https://github.com/helm/helm/releases/tag/v2.7.2\">https://github.com/helm/helm/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/1096813bf9a425e2aa4ac755b6c991b626dfab50\">https://github.com/helm/helm/commit/1096813bf9a425e2aa4ac755b6c991b626dfab50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x6r5-vxfg-gq3v\">https://github.com/advisories/GHSA-x6r5-vxfg-gq3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x6r5-vxfg-gq3v",
            "title": "[helm.sh/helm] Helm Improper Certificate Validation",
            "date_modified": "2023-08-01T23:17:42.000Z",
            "date_published": "2022-05-24T16:50:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x6r5-vxfg-gq3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp's Vault and Vault Enterprise are vulnerable to user enumeration when using the LDAP auth method. An attacker may submit requests of existent and non-existent LDAP users and observe the response from Vault to check if the account is valid on the LDAP server. This vulnerability is fixed in Vault 1.14.1 and 1.13.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3462\">https://nvd.nist.gov/vuln/detail/CVE-2023-3462</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-24-vaults-ldap-auth-method-allows-for-user-enumeration/56714\">https://discuss.hashicorp.com/t/hcsec-2023-24-vaults-ldap-auth-method-allows-for-user-enumeration/56714</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v3w-w2jh-4hff\">https://github.com/advisories/GHSA-9v3w-w2jh-4hff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v3w-w2jh-4hff",
            "title": "[github.com/hashicorp/vault] HashiCorp Vault and Vault Enterprise vulnerable to user enumeration",
            "date_modified": "2023-08-01T16:58:50.000Z",
            "date_published": "2023-08-01T00:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v3w-w2jh-4hff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>HashiCorp's Vault and Vault Enterprise are vulnerable to user enumeration when using the LDAP auth method. An attacker may submit requests of existent and non-existent LDAP users and observe the response from Vault to check if the account is valid on the LDAP server. This vulnerability is fixed in Vault 1.14.1 and 1.13.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3462\">https://nvd.nist.gov/vuln/detail/CVE-2023-3462</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2023-24-vaults-ldap-auth-method-allows-for-user-enumeration/56714\">https://discuss.hashicorp.com/t/hcsec-2023-24-vaults-ldap-auth-method-allows-for-user-enumeration/56714</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v3w-w2jh-4hff\">https://github.com/advisories/GHSA-9v3w-w2jh-4hff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v3w-w2jh-4hff",
            "title": "[github.com/hashicorp/vault] HashiCorp Vault and Vault Enterprise vulnerable to user enumeration",
            "date_modified": "2023-08-01T16:58:50.000Z",
            "date_published": "2023-08-01T00:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v3w-w2jh-4hff"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}