{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>An arbitrary file deletion vulnerability in Gitea v1.16.3 allows attackers to cause a Denial of Service (DoS) via deleting the configuration file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27313\">https://nvd.nist.gov/vuln/detail/CVE-2022-27313</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/pull/19072\">https://github.com/go-gitea/gitea/pull/19072</a></li>\n<li><a href=\"https://github.com/go-gitea/gitea/releases/tag/v1.16.4\">https://github.com/go-gitea/gitea/releases/tag/v1.16.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7p7-x6w7-w6qg\">https://github.com/advisories/GHSA-g7p7-x6w7-w6qg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7p7-x6w7-w6qg",
            "title": "[code.gitea.io/gitea] Arbitrary file deletion in gitea",
            "date_modified": "2022-05-24T22:19:58.000Z",
            "date_published": "2022-05-04T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7p7-x6w7-w6qg"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can send packets that will send Pion DTLS into an infinite loop when processing.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to Pion DTLS v2.1.4</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>\n<h3 id=\"references\">References</h3>\n<p>Thank you to <a href=\"https://github.com/jupenur\">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/pion/dtls\">Pion DTLS</a></li>\n<li>Email us at <a href=\"mailto:team@pion.ly\">team@pion.ly</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c\">https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29190\">https://nvd.nist.gov/vuln/detail/CVE-2022-29190</a></li>\n<li><a href=\"https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf\">https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf</a></li>\n<li><a href=\"https://github.com/pion/dtls/releases/tag/v2.1.4\">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm8f-h6j3-p25c\">https://github.com/advisories/GHSA-cm8f-h6j3-p25c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm8f-h6j3-p25c",
            "title": "[github.com/pion/dtls] Header reconstruction method can be thrown into an infinite loop",
            "date_modified": "2022-05-24T22:05:01.000Z",
            "date_published": "2022-05-24T22:05:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm8f-h6j3-p25c"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A buffer that was used for inbound network traffic had no upper limit. Pion DTLS would buffer all network traffic from the remote user until the handshake completes or times out. An attacker could exploit this to cause excessive memory usage.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to Pion DTLS v2.1.4</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>\n<h3 id=\"references\">References</h3>\n<p>Thank you to <a href=\"https://github.com/jupenur\">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/pion/dtls\">Pion DTLS</a></li>\n<li>Email us at <a href=\"mailto:team@pion.ly\">team@pion.ly</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j\">https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29189\">https://nvd.nist.gov/vuln/detail/CVE-2022-29189</a></li>\n<li><a href=\"https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de\">https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de</a></li>\n<li><a href=\"https://github.com/pion/dtls/releases/tag/v2.1.4\">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx94-mrg9-rq4j\">https://github.com/advisories/GHSA-cx94-mrg9-rq4j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx94-mrg9-rq4j",
            "title": "[github.com/pion/dtls] Buffer for inbound DTLS fragments has no limit",
            "date_modified": "2022-05-24T22:04:41.000Z",
            "date_published": "2022-05-24T22:04:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx94-mrg9-rq4j"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The primary use case for Smokescreen is to prevent server-side request forgery (SSRF) attacks in which external attackers leverage the behavior of applications to connect to or scan internal infrastructure.</p>\n<p>Smokescreen also offers an option to deny access to additional (e.g., external) URLs by way of a deny list. There was an issue in Smokescreen that made it possible to bypass the deny list feature by surrounding the hostname with square brackets (e.g. <code>[example.com]</code>). </p>\n<h3 id=\"recommendation\">Recommendation</h3>\n<p>Upgrade Smokescreen to version 0.0.4 or later.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Thanks to <a href=\"https://github.com/haxatron\">Axel Chong</a> for reporting the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@stripe.com\">security@stripe.com</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stripe/smokescreen/security/advisories/GHSA-qwrf-gfpj-qvj6\">https://github.com/stripe/smokescreen/security/advisories/GHSA-qwrf-gfpj-qvj6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29188\">https://nvd.nist.gov/vuln/detail/CVE-2022-29188</a></li>\n<li><a href=\"https://github.com/stripe/smokescreen/commit/dea7b3c89df000f4072ff9866d61d78e30df6a36\">https://github.com/stripe/smokescreen/commit/dea7b3c89df000f4072ff9866d61d78e30df6a36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qwrf-gfpj-qvj6\">https://github.com/advisories/GHSA-qwrf-gfpj-qvj6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qwrf-gfpj-qvj6",
            "title": "[github.com/stripe/smokescreen] Smokescreen SSRF via deny list bypass (square brackets)",
            "date_modified": "2022-05-24T22:04:06.000Z",
            "date_published": "2022-05-24T22:04:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qwrf-gfpj-qvj6"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If an attacker is able to perform a container escape of a container running as root on a host where Cilium is installed, the attacker can leverage Cilium's Kubernetes service account to gain access to cluster privileges that are more permissive than what is minimally required to operate Cilium. In affected releases, this service account had access to modify and delete <code>Pod</code> and <code>Node</code> resources. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed and is available on versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent, Amazon and Palo Alto Networks to prepare these mitigations.  Special thanks to Micah Hausler, Robert Clark, Yuval Avrahami, and Shaul Ben Hai for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29179\">https://nvd.nist.gov/vuln/detail/CVE-2022-29179</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g",
            "title": "[github.com/cilium/cilium] Cilium enables rogue node to cluster admin privilege escalation",
            "date_modified": "2022-05-24T21:15:18.000Z",
            "date_published": "2022-05-24T21:15:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If an attacker is able to perform a container escape of a container running as root on a host where Cilium is installed, the attacker can leverage Cilium's Kubernetes service account to gain access to cluster privileges that are more permissive than what is minimally required to operate Cilium. In affected releases, this service account had access to modify and delete <code>Pod</code> and <code>Node</code> resources. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed and is available on versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent, Amazon and Palo Alto Networks to prepare these mitigations.  Special thanks to Micah Hausler, Robert Clark, Yuval Avrahami, and Shaul Ben Hai for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29179\">https://nvd.nist.gov/vuln/detail/CVE-2022-29179</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g",
            "title": "[github.com/cilium/cilium] Cilium enables rogue node to cluster admin privilege escalation",
            "date_modified": "2022-05-24T21:15:18.000Z",
            "date_published": "2022-05-24T21:15:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If an attacker is able to perform a container escape of a container running as root on a host where Cilium is installed, the attacker can leverage Cilium's Kubernetes service account to gain access to cluster privileges that are more permissive than what is minimally required to operate Cilium. In affected releases, this service account had access to modify and delete <code>Pod</code> and <code>Node</code> resources. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed and is available on versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds available.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent, Amazon and Palo Alto Networks to prepare these mitigations.  Special thanks to Micah Hausler, Robert Clark, Yuval Avrahami, and Shaul Ben Hai for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29179\">https://nvd.nist.gov/vuln/detail/CVE-2022-29179</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmrf-gvjp-5j5g\">https://github.com/advisories/GHSA-fmrf-gvjp-5j5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g",
            "title": "[github.com/cilium/cilium] Cilium enables rogue node to cluster admin privilege escalation",
            "date_modified": "2022-05-24T21:15:18.000Z",
            "date_published": "2022-05-24T21:15:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmrf-gvjp-5j5g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users with host file system access on a node and the privileges to run as group ID 1000 can gain access to the per node API of Cilium via Unix domain socket on the host where Cilium is running. If a malicious user is able to gain unprivileged access to a user corresponding to this group, then they can leverage this access to compromise the integrity as well as system availability on that host. Operating Systems that have unprivileged users <strong>not</strong> belonging the group ID 1000 are <strong>not</strong> affected by this vulnerability.</p>\n<p>Best practices for managing the secure deployment of Kubernetes clusters will typically limit the ability for a malicious user to deploy pods with access to this group or to access the host filesystem, and limit user access to the nodes for users belonging to this group. These best practices include (but are not limited to) enforcing Admission Control policies to limit the configuration of Kubernetes Pod <a href=\"https://kubernetes.io/docs/concepts/storage/volumes/#hostpath\">hostPath</a> and <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\">SecurityContext</a> fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Cilium versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5 mitigate this issue by setting the default group to 0 (root).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prevent Cilium from running with group 1000 by modifying Cilium's DaemonSet to run with the following command:</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - -c\n        - \"groupdel cilium &amp;&amp; cilium-agent --config-dir=/tmp/cilium/config-map\"\n        command:\n        - bash\n</code></pre>\n<p>instead of</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        command:\n        - cilium-agent\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent and Form 3 to prepare these mitigations.  Special thanks to Daniel Iziourov and Daniel Teixeira for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29178\">https://nvd.nist.gov/vuln/detail/CVE-2022-29178</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3",
            "title": "[github.com/cilium/cilium] Access to Unix domain socket can lead to privileges escalation in Cilium",
            "date_modified": "2022-05-24T21:14:49.000Z",
            "date_published": "2022-05-24T21:14:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users with host file system access on a node and the privileges to run as group ID 1000 can gain access to the per node API of Cilium via Unix domain socket on the host where Cilium is running. If a malicious user is able to gain unprivileged access to a user corresponding to this group, then they can leverage this access to compromise the integrity as well as system availability on that host. Operating Systems that have unprivileged users <strong>not</strong> belonging the group ID 1000 are <strong>not</strong> affected by this vulnerability.</p>\n<p>Best practices for managing the secure deployment of Kubernetes clusters will typically limit the ability for a malicious user to deploy pods with access to this group or to access the host filesystem, and limit user access to the nodes for users belonging to this group. These best practices include (but are not limited to) enforcing Admission Control policies to limit the configuration of Kubernetes Pod <a href=\"https://kubernetes.io/docs/concepts/storage/volumes/#hostpath\">hostPath</a> and <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\">SecurityContext</a> fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Cilium versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5 mitigate this issue by setting the default group to 0 (root).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prevent Cilium from running with group 1000 by modifying Cilium's DaemonSet to run with the following command:</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - -c\n        - \"groupdel cilium &amp;&amp; cilium-agent --config-dir=/tmp/cilium/config-map\"\n        command:\n        - bash\n</code></pre>\n<p>instead of</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        command:\n        - cilium-agent\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent and Form 3 to prepare these mitigations.  Special thanks to Daniel Iziourov and Daniel Teixeira for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29178\">https://nvd.nist.gov/vuln/detail/CVE-2022-29178</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3",
            "title": "[github.com/cilium/cilium] Access to Unix domain socket can lead to privileges escalation in Cilium",
            "date_modified": "2022-05-24T21:14:49.000Z",
            "date_published": "2022-05-24T21:14:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users with host file system access on a node and the privileges to run as group ID 1000 can gain access to the per node API of Cilium via Unix domain socket on the host where Cilium is running. If a malicious user is able to gain unprivileged access to a user corresponding to this group, then they can leverage this access to compromise the integrity as well as system availability on that host. Operating Systems that have unprivileged users <strong>not</strong> belonging the group ID 1000 are <strong>not</strong> affected by this vulnerability.</p>\n<p>Best practices for managing the secure deployment of Kubernetes clusters will typically limit the ability for a malicious user to deploy pods with access to this group or to access the host filesystem, and limit user access to the nodes for users belonging to this group. These best practices include (but are not limited to) enforcing Admission Control policies to limit the configuration of Kubernetes Pod <a href=\"https://kubernetes.io/docs/concepts/storage/volumes/#hostpath\">hostPath</a> and <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\">SecurityContext</a> fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Cilium versions &gt;=1.9.16, &gt;=1.10.11, &gt;=1.11.5 mitigate this issue by setting the default group to 0 (root).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prevent Cilium from running with group 1000 by modifying Cilium's DaemonSet to run with the following command:</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - -c\n        - \"groupdel cilium &amp;&amp; cilium-agent --config-dir=/tmp/cilium/config-map\"\n        command:\n        - bash\n</code></pre>\n<p>instead of</p>\n<pre><code class=\"language-yaml\">      containers:\n      - name: cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        command:\n        - cilium-agent\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent and Form 3 to prepare these mitigations.  Special thanks to Daniel Iziourov and Daniel Teixeira for their cooperation.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@cilium.io\">security@cilium.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29178\">https://nvd.nist.gov/vuln/detail/CVE-2022-29178</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.10.11\">https://github.com/cilium/cilium/releases/tag/v1.10.11</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.11.5\">https://github.com/cilium/cilium/releases/tag/v1.11.5</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.9.16\">https://github.com/cilium/cilium/releases/tag/v1.9.16</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p8v-8cq8-v2r3\">https://github.com/advisories/GHSA-6p8v-8cq8-v2r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3",
            "title": "[github.com/cilium/cilium] Access to Unix domain socket can lead to privileges escalation in Cilium",
            "date_modified": "2022-05-24T21:14:49.000Z",
            "date_published": "2022-05-24T21:14:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p8v-8cq8-v2r3"
            }
        },
        {
            "content_html": "<p>We've discovered a vulnerability in which attackers could forge HTTP requests to manipulate the <code>charm</code> data directory to access or delete anything on the server. This has been patched in <a href=\"https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3\">https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3</a> and is available in release <a href=\"https://github.com/charmbracelet/charm/releases/tag/v0.12.1\">v0.12.1</a>. We recommend that all users running self-hosted <code>charm</code> instances update immediately.</p>\n<p>This vulnerability was found in-house and we haven't been notified of any potential exploiters.</p>\n<h3 id=\"additional-notes\">Additional notes</h3>\n<ul>\n<li>Encrypted user data uploaded to the Charm server is safe as Charm servers cannot decrypt user data. This includes filenames, paths, and all key-value data.</li>\n<li>Users running the official Charm <a href=\"https://github.com/charmbracelet/charm/blob/main/docker.md\">Docker images</a> are at minimal risk because the exploit is limited to the containerized filesystem.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a <a href=\"https://github.com/charmbracelet/charm/discussions\">discussion</a></li>\n<li>Email us at <a href=\"mailto:vt100@charm.sh\">vt100@charm.sh</a></li>\n<li>Chat with us on <a href=\"https://charm.sh/slack\">Slack</a></li>\n</ul>\n<hr>\n<p><a href=\"https://charm.sh/\"><img width=\"400\" src=\"https://stuff.charm.sh/charm-badge.jpg\" alt=\"the Charm logo\"></a></p>\n<p>Charm热爱开源 • Charm loves open source</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/charmbracelet/charm/security/advisories/GHSA-4wpp-w5r4-7v5v\">https://github.com/charmbracelet/charm/security/advisories/GHSA-4wpp-w5r4-7v5v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29180\">https://nvd.nist.gov/vuln/detail/CVE-2022-29180</a></li>\n<li><a href=\"https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3\">https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wpp-w5r4-7v5v\">https://github.com/advisories/GHSA-4wpp-w5r4-7v5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wpp-w5r4-7v5v",
            "title": "[github.com/charmbracelet/charm] Server-Side Request Forgery in charm",
            "date_modified": "2022-05-24T20:55:25.000Z",
            "date_published": "2022-05-24T20:55:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wpp-w5r4-7v5v"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerable node, if configured to use high verbosity logging, can be made to crash when handling specially crafted p2p messages sent from an attacker node. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The following PR addresses the problem: <a href=\"https://github.com/ethereum/go-ethereum/pull/24507\">https://github.com/ethereum/go-ethereum/pull/24507</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Aside from applying the PR linked above, setting loglevel to default level (<code>INFO</code>) makes the node not vulnerable to this attack.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This bug was reported by <code>nrv</code> via <a href=\"mailto:bounty@ethereum.org\">bounty@ethereum.org</a>, who has gracefully requested that the bounty rewards be donated to Médecins sans frontières.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/ethereum/go-ethereum\">go-ethereum</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethereum/go-ethereum/security/advisories/GHSA-wjxw-gh3m-7pm5\">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-wjxw-gh3m-7pm5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29177\">https://nvd.nist.gov/vuln/detail/CVE-2022-29177</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/pull/24507\">https://github.com/ethereum/go-ethereum/pull/24507</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjxw-gh3m-7pm5\">https://github.com/advisories/GHSA-wjxw-gh3m-7pm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjxw-gh3m-7pm5",
            "title": "[github.com/ethereum/go-ethereum] DoS via malicious p2p message",
            "date_modified": "2022-05-24T20:54:56.000Z",
            "date_published": "2022-05-24T20:54:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjxw-gh3m-7pm5"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><a href=\"https://github.com/theupdateframework/go-tuf\">go-tuf</a> does not correctly implement the <a href=\"https://theupdateframework.github.io/specification/v1.0.28/index.html#detailed-client-workflow\">client workflow</a> for updating the metadata files for roles other than the root role. Specifically, checks for rollback attacks are not implemented correctly meaning an attacker can cause clients to install software that is older than the software which the client previously knew to be available, and may include software with known vulnerabilities.</p>\n<p>In more detail, the client code of go-tuf has several issues in regards to preventing rollback attacks:</p>\n<ol>\n<li>It does not take into account the content of any previously trusted metadata, if available, before proceeding with updating roles other than the root role (i.e., steps 5.4.3.1 and 5.5.5 of the detailed client workflow). This means that any form of version verification done on the newly-downloaded metadata is made using the default value of zero, which always passes. </li>\n<li>For both timestamp and snapshot roles, go-tuf saves these metadata files as trusted before verifying if the version of the metafiles they refer to is correct (i.e., steps 5.5.4 and 5.6.4 of the detailed client workflow).</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>A fix is available in version 0.3.0 or newer.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds are known for this issue apart from upgrading.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Commit resolving the issue <a href=\"https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d\">https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d</a></li>\n<li>TUF specification version against which this vulnerability is observed is <a href=\"https://theupdateframework.github.io/specification/v1.0.28/index.html#detailed-client-workflow\">v.1.0.28</a>. For more details, refer to Section 5.</li>\n<li>Codebase that is affected is <a href=\"https://github.com/theupdateframework/go-tuf/tree/f0c3294f63b9145029464164f9bce49553b77cbb\">go-tuf@f0c3294f63b9145029464164f9bce49553b77cbb</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/theupdateframework/go-tuf/issues\">go-tuf</a></li>\n<li>Email us at TUF's <a href=\"mailto:theupdateframework@googlegroups.com\">mailing list</a></li>\n<li>The <a href=\"https://cloud-native.slack.com/archives/C8NMD3QJ3\">#tuf</a> channel on <a href=\"https://slack.cncf.io/\">CNCF Slack</a>.<h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-66x3-6cw3-v5gj\">https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-66x3-6cw3-v5gj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29173\">https://nvd.nist.gov/vuln/detail/CVE-2022-29173</a></li>\n<li><a href=\"https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d\">https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66x3-6cw3-v5gj\">https://github.com/advisories/GHSA-66x3-6cw3-v5gj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66x3-6cw3-v5gj",
            "title": "[github.com/theupdateframework/go-tuf] Improper Validation of Integrity Check Value in go-tuf",
            "date_modified": "2022-05-24T20:50:48.000Z",
            "date_published": "2022-05-24T20:50:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66x3-6cw3-v5gj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations <a href=\"https://github.com/gogs/gogs/blob/e51e01683408e10b3dcd2ace65e259ca7f0fd61b/conf/app.ini#L283-L284\">allow uploading SVG (<code>text/xml</code>) files as issue attachments (non-default)</a> are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Correctly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><a href=\"https://github.com/gogs/gogs/blob/e51e01683408e10b3dcd2ace65e259ca7f0fd61b/conf/app.ini#L283-L284\">Disable uploading SVG files (<code>text/xml</code>) as issue attachments</a>.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d/\">https://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please post on <a href=\"https://github.com/gogs/gogs/issues/6919\">https://github.com/gogs/gogs/issues/6919</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gogs/gogs/security/advisories/GHSA-ff28-f46g-r9g8\">https://github.com/gogs/gogs/security/advisories/GHSA-ff28-f46g-r9g8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1464\">https://nvd.nist.gov/vuln/detail/CVE-2022-1464</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/bc77440b301ac8780698be91dff1ac33b7cee850\">https://github.com/gogs/gogs/commit/bc77440b301ac8780698be91dff1ac33b7cee850</a></li>\n<li><a href=\"https://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d\">https://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ff28-f46g-r9g8\">https://github.com/advisories/GHSA-ff28-f46g-r9g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ff28-f46g-r9g8",
            "title": "[gogs.io/gogs] Cross-site Scripting in Gogs",
            "date_modified": "2022-05-24T20:48:17.000Z",
            "date_published": "2022-05-24T20:48:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ff28-f46g-r9g8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A critical vulnerability has been discovered in Argo CD which would allow unauthenticated users to impersonate as any Argo CD user or role, including the <code>admin</code> user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#anonymous-access\">anonymous access</a> to the Argo CD instance must have been enabled. </p>\n<p>In a default Argo CD installation, anonymous access is disabled. To find out if anonymous access is enabled in your instance, please see the <em>Workarounds</em> section of this advisory below.</p>\n<p>The vulnerability can be exploited to impersonate as any user or role, including the built-in <code>admin</code> account regardless of whether that account is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this.</p>\n<p>If anonymous access to the instance is enabled, an attacker can:</p>\n<ul>\n<li><p>Escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster.</p>\n</li>\n<li><p>Exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API</p>\n</li>\n</ul>\n<p>We <strong>strongly recommend</strong> that all users of Argo CD update to a version containing this patch as soon as possible, regardless of whether or not anonymous access is enabled in your instance.</p>\n<p>Please see below for a list of versions containing a fix for this vulnerability and any possible workarounds existing for this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.4</li>\n<li>v2.2.9</li>\n<li>v2.1.15</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h4 id=\"disable-anonymous-access\">Disable anonymous access</h4>\n<p>If you are not able to upgrade to a patched version quickly, we highly suggest disabling anonymous access if it is enabled. </p>\n<p>To find out whether anonymous access is enabled for your Argo CD instance, you can query the <code>argocd-cm</code> ConfigMap in the Argo CD's installation namespace. The below example assumes you have installed Argo CD to the <code>argocd</code> namespace:</p>\n<pre><code class=\"language-shell\">$ kubectl get -n argocd cm argocd-cm -o jsonpath='{.data.users\\.anonymous\\.enabled}'\n</code></pre>\n<p>If the result of this command is either empty or <code>\"false\"</code>, anonymous access to that instance is not enabled. If the result is <code>\"true\"</code>, your instance is vulnerable.</p>\n<p>To disable anonymous access, patch the <code>argocd-cm</code> ConfigMap to either remove the <code>users.anonymous.enabled</code> field or set this field to <code>\"false\"</code>. </p>\n<p>To set the field to <code>\"false\"</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"add\", \"path\":\"/data/users.anonymous.enabled\", \"value\":\"false\"}]'\n</code></pre>\n<p>Or you can remove the field completely, thus disabling anonymous access because the default is <code>false</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"remove\", \"path\":\"/data/users.anonymous.enabled\"}]'\n</code></pre>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to thank Mark Pim and Andrzej Hajto, who discovered this vulnerability and reported it in a responsible way to us.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29165\">https://nvd.nist.gov/vuln/detail/CVE-2022-29165</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.15\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.15</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.3.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/advisories/GHSA-r642-gv9p-2wjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj",
            "title": "[github.com/argoproj/argo-cd] Argo CD will blindly trust JWT claims if anonymous access is enabled",
            "date_modified": "2022-05-24T20:47:35.000Z",
            "date_published": "2022-05-24T20:47:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A critical vulnerability has been discovered in Argo CD which would allow unauthenticated users to impersonate as any Argo CD user or role, including the <code>admin</code> user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#anonymous-access\">anonymous access</a> to the Argo CD instance must have been enabled. </p>\n<p>In a default Argo CD installation, anonymous access is disabled. To find out if anonymous access is enabled in your instance, please see the <em>Workarounds</em> section of this advisory below.</p>\n<p>The vulnerability can be exploited to impersonate as any user or role, including the built-in <code>admin</code> account regardless of whether that account is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this.</p>\n<p>If anonymous access to the instance is enabled, an attacker can:</p>\n<ul>\n<li><p>Escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster.</p>\n</li>\n<li><p>Exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API</p>\n</li>\n</ul>\n<p>We <strong>strongly recommend</strong> that all users of Argo CD update to a version containing this patch as soon as possible, regardless of whether or not anonymous access is enabled in your instance.</p>\n<p>Please see below for a list of versions containing a fix for this vulnerability and any possible workarounds existing for this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.4</li>\n<li>v2.2.9</li>\n<li>v2.1.15</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h4 id=\"disable-anonymous-access\">Disable anonymous access</h4>\n<p>If you are not able to upgrade to a patched version quickly, we highly suggest disabling anonymous access if it is enabled. </p>\n<p>To find out whether anonymous access is enabled for your Argo CD instance, you can query the <code>argocd-cm</code> ConfigMap in the Argo CD's installation namespace. The below example assumes you have installed Argo CD to the <code>argocd</code> namespace:</p>\n<pre><code class=\"language-shell\">$ kubectl get -n argocd cm argocd-cm -o jsonpath='{.data.users\\.anonymous\\.enabled}'\n</code></pre>\n<p>If the result of this command is either empty or <code>\"false\"</code>, anonymous access to that instance is not enabled. If the result is <code>\"true\"</code>, your instance is vulnerable.</p>\n<p>To disable anonymous access, patch the <code>argocd-cm</code> ConfigMap to either remove the <code>users.anonymous.enabled</code> field or set this field to <code>\"false\"</code>. </p>\n<p>To set the field to <code>\"false\"</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"add\", \"path\":\"/data/users.anonymous.enabled\", \"value\":\"false\"}]'\n</code></pre>\n<p>Or you can remove the field completely, thus disabling anonymous access because the default is <code>false</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"remove\", \"path\":\"/data/users.anonymous.enabled\"}]'\n</code></pre>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to thank Mark Pim and Andrzej Hajto, who discovered this vulnerability and reported it in a responsible way to us.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29165\">https://nvd.nist.gov/vuln/detail/CVE-2022-29165</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.15\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.15</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.3.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/advisories/GHSA-r642-gv9p-2wjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD will blindly trust JWT claims if anonymous access is enabled",
            "date_modified": "2022-05-24T20:47:35.000Z",
            "date_published": "2022-05-24T20:47:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A critical vulnerability has been discovered in Argo CD which would allow unauthenticated users to impersonate as any Argo CD user or role, including the <code>admin</code> user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#anonymous-access\">anonymous access</a> to the Argo CD instance must have been enabled. </p>\n<p>In a default Argo CD installation, anonymous access is disabled. To find out if anonymous access is enabled in your instance, please see the <em>Workarounds</em> section of this advisory below.</p>\n<p>The vulnerability can be exploited to impersonate as any user or role, including the built-in <code>admin</code> account regardless of whether that account is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this.</p>\n<p>If anonymous access to the instance is enabled, an attacker can:</p>\n<ul>\n<li><p>Escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster.</p>\n</li>\n<li><p>Exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API</p>\n</li>\n</ul>\n<p>We <strong>strongly recommend</strong> that all users of Argo CD update to a version containing this patch as soon as possible, regardless of whether or not anonymous access is enabled in your instance.</p>\n<p>Please see below for a list of versions containing a fix for this vulnerability and any possible workarounds existing for this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.4</li>\n<li>v2.2.9</li>\n<li>v2.1.15</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h4 id=\"disable-anonymous-access\">Disable anonymous access</h4>\n<p>If you are not able to upgrade to a patched version quickly, we highly suggest disabling anonymous access if it is enabled. </p>\n<p>To find out whether anonymous access is enabled for your Argo CD instance, you can query the <code>argocd-cm</code> ConfigMap in the Argo CD's installation namespace. The below example assumes you have installed Argo CD to the <code>argocd</code> namespace:</p>\n<pre><code class=\"language-shell\">$ kubectl get -n argocd cm argocd-cm -o jsonpath='{.data.users\\.anonymous\\.enabled}'\n</code></pre>\n<p>If the result of this command is either empty or <code>\"false\"</code>, anonymous access to that instance is not enabled. If the result is <code>\"true\"</code>, your instance is vulnerable.</p>\n<p>To disable anonymous access, patch the <code>argocd-cm</code> ConfigMap to either remove the <code>users.anonymous.enabled</code> field or set this field to <code>\"false\"</code>. </p>\n<p>To set the field to <code>\"false\"</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"add\", \"path\":\"/data/users.anonymous.enabled\", \"value\":\"false\"}]'\n</code></pre>\n<p>Or you can remove the field completely, thus disabling anonymous access because the default is <code>false</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"remove\", \"path\":\"/data/users.anonymous.enabled\"}]'\n</code></pre>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to thank Mark Pim and Andrzej Hajto, who discovered this vulnerability and reported it in a responsible way to us.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29165\">https://nvd.nist.gov/vuln/detail/CVE-2022-29165</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.15\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.15</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.3.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/advisories/GHSA-r642-gv9p-2wjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD will blindly trust JWT claims if anonymous access is enabled",
            "date_modified": "2022-05-24T20:47:35.000Z",
            "date_published": "2022-05-24T20:47:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A critical vulnerability has been discovered in Argo CD which would allow unauthenticated users to impersonate as any Argo CD user or role, including the <code>admin</code> user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#anonymous-access\">anonymous access</a> to the Argo CD instance must have been enabled. </p>\n<p>In a default Argo CD installation, anonymous access is disabled. To find out if anonymous access is enabled in your instance, please see the <em>Workarounds</em> section of this advisory below.</p>\n<p>The vulnerability can be exploited to impersonate as any user or role, including the built-in <code>admin</code> account regardless of whether that account is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this.</p>\n<p>If anonymous access to the instance is enabled, an attacker can:</p>\n<ul>\n<li><p>Escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster.</p>\n</li>\n<li><p>Exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API</p>\n</li>\n</ul>\n<p>We <strong>strongly recommend</strong> that all users of Argo CD update to a version containing this patch as soon as possible, regardless of whether or not anonymous access is enabled in your instance.</p>\n<p>Please see below for a list of versions containing a fix for this vulnerability and any possible workarounds existing for this issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.4</li>\n<li>v2.2.9</li>\n<li>v2.1.15</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h4 id=\"disable-anonymous-access\">Disable anonymous access</h4>\n<p>If you are not able to upgrade to a patched version quickly, we highly suggest disabling anonymous access if it is enabled. </p>\n<p>To find out whether anonymous access is enabled for your Argo CD instance, you can query the <code>argocd-cm</code> ConfigMap in the Argo CD's installation namespace. The below example assumes you have installed Argo CD to the <code>argocd</code> namespace:</p>\n<pre><code class=\"language-shell\">$ kubectl get -n argocd cm argocd-cm -o jsonpath='{.data.users\\.anonymous\\.enabled}'\n</code></pre>\n<p>If the result of this command is either empty or <code>\"false\"</code>, anonymous access to that instance is not enabled. If the result is <code>\"true\"</code>, your instance is vulnerable.</p>\n<p>To disable anonymous access, patch the <code>argocd-cm</code> ConfigMap to either remove the <code>users.anonymous.enabled</code> field or set this field to <code>\"false\"</code>. </p>\n<p>To set the field to <code>\"false\"</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"add\", \"path\":\"/data/users.anonymous.enabled\", \"value\":\"false\"}]'\n</code></pre>\n<p>Or you can remove the field completely, thus disabling anonymous access because the default is <code>false</code>:</p>\n<pre><code class=\"language-shell\">$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"remove\", \"path\":\"/data/users.anonymous.enabled\"}]'\n</code></pre>\n<h3 id=\"credits\">Credits</h3>\n<p>The Argo CD team would like to thank Mark Pim and Andrzej Hajto, who discovered this vulnerability and reported it in a responsible way to us.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29165\">https://nvd.nist.gov/vuln/detail/CVE-2022-29165</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.15\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.15</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.3.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r642-gv9p-2wjj\">https://github.com/advisories/GHSA-r642-gv9p-2wjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD will blindly trust JWT claims if anonymous access is enabled",
            "date_modified": "2022-05-24T20:47:35.000Z",
            "date_published": "2022-05-24T20:47:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r642-gv9p-2wjj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in runc where <code>runc exec --cap</code> executed processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).</p>\n<p>This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in runc 1.1.2. Users should update to this version as soon as possible.</p>\n<p>This fix changes <code>runc exec --cap</code> behavior such that the additional capabilities granted to the process being executed (as specified via <code>--cap</code> arguments) do not include inheritable capabilities.</p>\n<p>In addition, <code>runc spec</code> is changed to not set any inheritable capabilities in the created example OCI spec (<code>config.json</code>) file.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The opencontainers project would like to thank <a href=\"https://github.com/AndrewGMorgan\">Andrew G. Morgan</a> for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/opencontainers/.github/blob/master/SECURITY.md\">opencontainers org security policy</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/opencontainers/runc/issues/new\">Open an issue</a></li>\n<li>Email us at <a href=\"mailto:security@opencontainers.org\">security@opencontainers.org</a> if you think you’ve found a security bug<h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66\">https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29162\">https://nvd.nist.gov/vuln/detail/CVE-2022-29162</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/commit/d04de3a9b72d7a2455c1885fc75eb36d02cd17b5\">https://github.com/opencontainers/runc/commit/d04de3a9b72d7a2455c1885fc75eb36d02cd17b5</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/releases/tag/v1.1.2\">https://github.com/opencontainers/runc/releases/tag/v1.1.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3fp-gc8g-vw66\">https://github.com/advisories/GHSA-f3fp-gc8g-vw66</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3fp-gc8g-vw66",
            "title": "[github.com/opencontainers/runc] Default inheritable capabilities for linux container should be empty",
            "date_modified": "2022-05-24T17:36:58.000Z",
            "date_published": "2022-05-24T17:36:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3fp-gc8g-vw66"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability was found in Argo CD that allows an attacker to spoof error messages on the login screen when SSO is enabled.</p>\n<p>In order to exploit this vulnerability, an attacker would have to trick the victim to visit a specially crafted URL which contains the message to be displayed.</p>\n<p>As far as the research of the Argo CD team concluded, it is not possible to specify any active content (e.g. Javascript) or other HTML fragments (e.g. clickable links) in the spoofed message.</p>\n<h3 id=\"patched-versions\">Patched versions</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v2.3.4</li>\n<li>v2.2.9</li>\n<li>v2.1.15</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround available.</p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<p>It is advised to update to an Argo CD version containing a fix for this issue (see <em>Patched versions</em> above).</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered by Naufal Septiadi (<a href=\"mailto:naufal@horangi.com\">naufal@horangi.com</a>) and reported to us in a responsible way. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n\n\n\n\n<ul>\n<li>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a></li>\n<li>Join us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-xmg8-99r8-jc2j\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-xmg8-99r8-jc2j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24905\">https://nvd.nist.gov/vuln/detail/CVE-2022-24905</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.1.15\">https://github.com/argoproj/argo-cd/releases/tag/v2.1.15</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.2.9\">https://github.com/argoproj/argo-cd/releases/tag/v2.2.9</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.3.4\">https://github.com/argoproj/argo-cd/releases/tag/v2.3.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xmg8-99r8-jc2j\">https://github.com/advisories/GHSA-xmg8-99r8-jc2j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xmg8-99r8-jc2j",
            "title": "[github.com/argoproj/argo-cd] Login screen allows message spoofing if SSO is enabled",
            "date_modified": "2022-05-24T12:27:00.000Z",
            "date_published": "2022-05-24T12:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xmg8-99r8-jc2j"
            }
        }
    ]
}