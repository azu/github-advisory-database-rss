{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If a malicious user gains control of a Kubernetes node running fluid csi pod (controlled by the <code>csi-nodeplugin-fluid</code> node-daemonset), he/she can leverage the fluid-csi service account to modify specs of all the nodes in the cluster. However, since this service account lacks \"list node\" permissions, the attacker may need to use other techniques to identify vulnerable nodes.</p>\n<p>Once the attacker identifies and modifies the node specs, he/she can manipulate system-level-privileged components to access all secrets in the cluster or execute pods on other nodes. This allows he/she to elevate privileges beyond the compromised node and potentially gain full privileged access to the whole cluster.</p>\n<p>To exploit this vulnerability, the attacker can make all other nodes unschedulable (for example, patch node with taints) and wait for system-critical components with high privilege to appear on the compromised node. However, this attack requires two prerequisites: a compromised node and identifying all vulnerable nodes through other means. Additionally, since the attack is passive and requires patience and luck, the severity of this finding is considered medium.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For users who're using version &lt; 0.8.6, &gt;= 0.7.0, upgrade to v0.8.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Delete the <code>csi-nodeplugin-fluid</code> daemonset in <code>fluid-system</code> namespace and avoid using CSI mode to mount FUSE file systems. Alternatively using sidecar mode to mount FUSE file systems is recommended. Refer to <a href=\"https://github.com/fluid-cloudnative/fluid/blob/master/docs/en/samples/knative.md\">the doc</a> to get a full example of how to use sidecar mode.</p>\n<h3 id=\"references\">References</h3>\n<p>Fixed by <a href=\"https://github.com/fluid-cloudnative/fluid/commit/77c8110a3d1ec077ae2bce6bd88d296505db1550\">Fix rbacs and limit CSI Plugin's node related access</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Special thanks to the discoverers of this issue:</p>\n<p>Nanzi Yang (<a href=\"mailto:nzyang@stu.xidian.edu.cn\">nzyang@stu.xidian.edu.cn</a>)</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/security/advisories/GHSA-93xx-cvmc-9w3v\">https://github.com/fluid-cloudnative/fluid/security/advisories/GHSA-93xx-cvmc-9w3v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30840\">https://nvd.nist.gov/vuln/detail/CVE-2023-30840</a></li>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/commit/77c8110a3d1ec077ae2bce6bd88d296505db1550\">https://github.com/fluid-cloudnative/fluid/commit/77c8110a3d1ec077ae2bce6bd88d296505db1550</a></li>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/commit/91c05c32db131997b5ca065e869c9918a125c149\">https://github.com/fluid-cloudnative/fluid/commit/91c05c32db131997b5ca065e869c9918a125c149</a></li>\n<li><a href=\"https://github.com/fluid-cloudnative/fluid/releases/tag/v0.8.6\">https://github.com/fluid-cloudnative/fluid/releases/tag/v0.8.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93xx-cvmc-9w3v\">https://github.com/advisories/GHSA-93xx-cvmc-9w3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93xx-cvmc-9w3v",
            "title": "[github.com/fluid-cloudnative/fluid] On a compromised node, the fluid-csi service account can be used to modify node specs",
            "date_modified": "2023-05-09T19:58:47.000Z",
            "date_published": "2023-05-09T19:58:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93xx-cvmc-9w3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Mutagen command line operations, as well as the log output from <code>mutagen daemon run</code>, are susceptible to control characters that could be provided by remote endpoints.  This can cause terminal corruption, either intentional or unintentional, if these characters are present in error messages, file paths/names, and/or log output.  This could be used as an attack vector if synchronizing with an untrusted remote endpoint, synchronizing files not under control of the user, or forwarding to/from an untrusted remote endpoint.  On very old systems with terminals susceptible to issues such as <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2003-0069\">CVE-2003-0069</a>, the issue could theoretically cause code execution.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in Mutagen v0.16.6 and v0.17.1.  Earlier versions of Mutagen are no longer supported and will not be patched.  Versions of Mutagen after v0.18.0 will also have the patch merged.</p>\n<p>One caveat is that the templating functionality of Mutagen's <code>list</code> and <code>monitor</code> commands has been only partially patched.  In particular, the <code>json</code> template function already provided escaping and no patching was necessary.  However, raw template output has been left unescaped because this raw output may be necessary for commands which embed Mutagen.  To aid these commands, a new <code>shellSanitize</code> template function has been added which provides control character neutralization in strings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Avoiding synchronization of untrusted files or interaction with untrusted remote endpoints should mitigate any risk.</p>\n<h3 id=\"references\">References</h3>\n<p>A similar issue can be seen in kubernetes/kubernetes#101695.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30844\">https://nvd.nist.gov/vuln/detail/CVE-2023-30844</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6\">https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1\">https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2",
            "title": "[github.com/mutagen-io/mutagen] Mutagen list and monitor operations do not neutralize control characters in text controlled by remote endpoints",
            "date_modified": "2023-05-09T16:39:03.000Z",
            "date_published": "2023-05-05T02:25:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Mutagen command line operations, as well as the log output from <code>mutagen daemon run</code>, are susceptible to control characters that could be provided by remote endpoints.  This can cause terminal corruption, either intentional or unintentional, if these characters are present in error messages, file paths/names, and/or log output.  This could be used as an attack vector if synchronizing with an untrusted remote endpoint, synchronizing files not under control of the user, or forwarding to/from an untrusted remote endpoint.  On very old systems with terminals susceptible to issues such as <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2003-0069\">CVE-2003-0069</a>, the issue could theoretically cause code execution.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in Mutagen v0.16.6 and v0.17.1.  Earlier versions of Mutagen are no longer supported and will not be patched.  Versions of Mutagen after v0.18.0 will also have the patch merged.</p>\n<p>One caveat is that the templating functionality of Mutagen's <code>list</code> and <code>monitor</code> commands has been only partially patched.  In particular, the <code>json</code> template function already provided escaping and no patching was necessary.  However, raw template output has been left unescaped because this raw output may be necessary for commands which embed Mutagen.  To aid these commands, a new <code>shellSanitize</code> template function has been added which provides control character neutralization in strings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Avoiding synchronization of untrusted files or interaction with untrusted remote endpoints should mitigate any risk.</p>\n<h3 id=\"references\">References</h3>\n<p>A similar issue can be seen in kubernetes/kubernetes#101695.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30844\">https://nvd.nist.gov/vuln/detail/CVE-2023-30844</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6\">https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1\">https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2",
            "title": "[github.com/mutagen-io/mutagen-compose] Mutagen list and monitor operations do not neutralize control characters in text controlled by remote endpoints",
            "date_modified": "2023-05-09T16:39:03.000Z",
            "date_published": "2023-05-05T02:25:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Mutagen command line operations, as well as the log output from <code>mutagen daemon run</code>, are susceptible to control characters that could be provided by remote endpoints.  This can cause terminal corruption, either intentional or unintentional, if these characters are present in error messages, file paths/names, and/or log output.  This could be used as an attack vector if synchronizing with an untrusted remote endpoint, synchronizing files not under control of the user, or forwarding to/from an untrusted remote endpoint.  On very old systems with terminals susceptible to issues such as <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2003-0069\">CVE-2003-0069</a>, the issue could theoretically cause code execution.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in Mutagen v0.16.6 and v0.17.1.  Earlier versions of Mutagen are no longer supported and will not be patched.  Versions of Mutagen after v0.18.0 will also have the patch merged.</p>\n<p>One caveat is that the templating functionality of Mutagen's <code>list</code> and <code>monitor</code> commands has been only partially patched.  In particular, the <code>json</code> template function already provided escaping and no patching was necessary.  However, raw template output has been left unescaped because this raw output may be necessary for commands which embed Mutagen.  To aid these commands, a new <code>shellSanitize</code> template function has been added which provides control character neutralization in strings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Avoiding synchronization of untrusted files or interaction with untrusted remote endpoints should mitigate any risk.</p>\n<h3 id=\"references\">References</h3>\n<p>A similar issue can be seen in kubernetes/kubernetes#101695.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30844\">https://nvd.nist.gov/vuln/detail/CVE-2023-30844</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6\">https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6</a></li>\n<li><a href=\"https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1\">https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp2-wc4p-wfh2\">https://github.com/advisories/GHSA-jmp2-wc4p-wfh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2",
            "title": "[github.com/mutagen-io/mutagen] Mutagen list and monitor operations do not neutralize control characters in text controlled by remote endpoints",
            "date_modified": "2023-05-09T16:39:03.000Z",
            "date_published": "2023-05-05T02:25:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp2-wc4p-wfh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package github.com/gin-gonic/gin before 1.9.0 are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.</p>\n<p><strong>Note:</strong> Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26125\">https://nvd.nist.gov/vuln/detail/CVE-2023-26125</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/pull/3500\">https://github.com/gin-gonic/gin/pull/3500</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/pull/3503\">https://github.com/gin-gonic/gin/pull/3503</a></li>\n<li><a href=\"https://github.com/t0rchwo0d/gin/commit/fd9f98e70fb4107ee68c783482d231d35e60507b\">https://github.com/t0rchwo0d/gin/commit/fd9f98e70fb4107ee68c783482d231d35e60507b</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/releases/tag/v1.9.0\">https://github.com/gin-gonic/gin/releases/tag/v1.9.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-3324285\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-3324285</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3vp4-m3rf-835h\">https://github.com/advisories/GHSA-3vp4-m3rf-835h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3vp4-m3rf-835h",
            "title": "[github.com/gin-gonic/gin] Improper input validation in github.com/gin-gonic/gin",
            "date_modified": "2023-05-05T02:20:00.000Z",
            "date_published": "2023-05-04T06:30:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3vp4-m3rf-835h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Mutagen projects offer shell-based execution functionality.  On Windows, the shell is resolved using the standard <code>%ComSpec%</code> mechanism, with a fallback to a <code>%PATH%</code>-based search for <code>cmd.exe</code>.  While this is the standard practice on Windows systems, it presents somewhat risky behavior.</p>\n<p>Firstly, <code>%ComSpec%</code> could, in theory, be set maliciously.  Unfortunately, there's not much that can be done to prevent this attack surface, because <code>%ComSpec%</code> is the official mechanism for shell specification on Windows.  We can, however, validate that it points to an absolute path, which one would expect for a properly set value.</p>\n<p>Secondly, a fallback to a relative <code>cmd.exe</code> path, resolved via <code>%PATH%</code>, could be risky.  The risk is largely mitigated by changes in Go 1.19 and later, but prior to that a malicious <code>cmd.exe</code> could been resolved in the current working directory.  To mitigate this issue, Mutagen now uses the <code>%SystemRoot%</code> environment variable (also validated to be an absolute path) to resolve <code>cmd.exe</code> in the event that <code>%ComSpec%</code> is not set correctly.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in Mutagen v0.16.6 and v0.17.1. Earlier versions of Mutagen are no longer supported and will not be patched. Versions of Mutagen after v0.18.0 will also have the patch merged.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Maintain control of the environment variable settings on your system, in particular the <code>ComSpec</code> environment variable.</p>\n<h3 id=\"references\">References</h3>\n<p>More information on <code>%ComSpec%</code> can be found <a href=\"https://en.wikipedia.org/wiki/COMSPEC\">online</a>.</p>\n<p>More information on Go's <code>PATH</code>-based lookup changes can be found <a href=\"https://go.dev/blog/path-security\">here</a>, <a href=\"https://go.dev/doc/go1.19#os-exec-path\">here</a>, and <a href=\"https://github.com/golang/go/issues/43947\">here</a>.</p>\n<p>A <a href=\"https://github.com/python/cpython/issues/101283\">similar issue</a> that was addressed within the Python subprocess module also provides additional discussion.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mutagen-io/mutagen/security/advisories/GHSA-fwj4-72fm-c93g\">https://github.com/mutagen-io/mutagen/security/advisories/GHSA-fwj4-72fm-c93g</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwj4-72fm-c93g\">https://github.com/advisories/GHSA-fwj4-72fm-c93g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwj4-72fm-c93g",
            "title": "[github.com/mutagen-io/mutagen] Under-validated ComSpec and cmd.exe resolution in Mutagen projects",
            "date_modified": "2023-05-05T02:18:27.000Z",
            "date_published": "2023-05-05T02:18:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwj4-72fm-c93g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Mutagen projects offer shell-based execution functionality.  On Windows, the shell is resolved using the standard <code>%ComSpec%</code> mechanism, with a fallback to a <code>%PATH%</code>-based search for <code>cmd.exe</code>.  While this is the standard practice on Windows systems, it presents somewhat risky behavior.</p>\n<p>Firstly, <code>%ComSpec%</code> could, in theory, be set maliciously.  Unfortunately, there's not much that can be done to prevent this attack surface, because <code>%ComSpec%</code> is the official mechanism for shell specification on Windows.  We can, however, validate that it points to an absolute path, which one would expect for a properly set value.</p>\n<p>Secondly, a fallback to a relative <code>cmd.exe</code> path, resolved via <code>%PATH%</code>, could be risky.  The risk is largely mitigated by changes in Go 1.19 and later, but prior to that a malicious <code>cmd.exe</code> could been resolved in the current working directory.  To mitigate this issue, Mutagen now uses the <code>%SystemRoot%</code> environment variable (also validated to be an absolute path) to resolve <code>cmd.exe</code> in the event that <code>%ComSpec%</code> is not set correctly.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in Mutagen v0.16.6 and v0.17.1. Earlier versions of Mutagen are no longer supported and will not be patched. Versions of Mutagen after v0.18.0 will also have the patch merged.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Maintain control of the environment variable settings on your system, in particular the <code>ComSpec</code> environment variable.</p>\n<h3 id=\"references\">References</h3>\n<p>More information on <code>%ComSpec%</code> can be found <a href=\"https://en.wikipedia.org/wiki/COMSPEC\">online</a>.</p>\n<p>More information on Go's <code>PATH</code>-based lookup changes can be found <a href=\"https://go.dev/blog/path-security\">here</a>, <a href=\"https://go.dev/doc/go1.19#os-exec-path\">here</a>, and <a href=\"https://github.com/golang/go/issues/43947\">here</a>.</p>\n<p>A <a href=\"https://github.com/python/cpython/issues/101283\">similar issue</a> that was addressed within the Python subprocess module also provides additional discussion.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mutagen-io/mutagen/security/advisories/GHSA-fwj4-72fm-c93g\">https://github.com/mutagen-io/mutagen/security/advisories/GHSA-fwj4-72fm-c93g</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwj4-72fm-c93g\">https://github.com/advisories/GHSA-fwj4-72fm-c93g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwj4-72fm-c93g",
            "title": "[github.com/mutagen-io/mutagen] Under-validated ComSpec and cmd.exe resolution in Mutagen projects",
            "date_modified": "2023-05-05T02:18:27.000Z",
            "date_published": "2023-05-05T02:18:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwj4-72fm-c93g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Two vulnerabilities have been found in Rekor types for archive files JARs and APKs, where Rekor would crash due to out of memory conditions caused by reading archive metadata files into memory without checking their sizes first causing a Denial of Service of Rekor.</p>\n<p>These vulnerabilities were found through fuzzing with <a href=\"https://google.github.io/oss-fuzz/\">OSS-Fuzz</a>.</p>\n<h2 id=\"vulnerability-1-oom-due-to-large-files-in-meta-inf-directory-of-jar-files\">Vulnerability 1: OOM due to large files in META-INF directory of JAR files.</h2>\n<h3 id=\"summary-1\">Summary</h3>\n<p>Verification of a JAR file submitted to Rekor can cause an out of memory crash if files within the META-INF directory of the JAR are sufficiently large.</p>\n<h3 id=\"details\">Details</h3>\n<p>As part of verifying a JAR file, Rekor uses the <a href=\"http://github.com/sassoftware/relic\">relic library</a> to check that the JAR is signed, the signature verifies, and that the hashes in the signed manifest are all valid. This library function reads files within META-INF/ into memory without checking their sizes, resulting in an OOM if the uncompressed file is sufficiently large. Rekor is also not performing any such checks prior to passing the JAR to this library function.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should update to the latest version of Rekor, 1.1.1.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>There are no workarounds, users should update.</p>\n<h2 id=\"vulnerability-2-oom-due-to-large-sign-and-pkginfo-files-in-apk-files\">Vulnerability 2: OOM due to large .SIGN and .PKGINFO files in APK files.</h2>\n<h3 id=\"summary-2\">Summary</h3>\n<p>Parsing of an APK file submitted to Rekor can cause an out of memory crash if the .SIGN or .PKGINFO files within the APK are sufficiently large.</p>\n<h3 id=\"details-1\">Details</h3>\n<p>When parsing an APK file, Rekor allocates byte slices to read both the .SIGN and .PKGINFO files into memory in order to verify the signature and hashes in the APK. These byte slices are allocated based on the size included in the tar header for each file, with no checks performed on that size. If the size in the header is sufficiently large, either because the uncompressed file is large or the size in the header has been artificially set to a large value, Rekor will crash due to an out of memory panic.</p>\n<h3 id=\"patches-1\">Patches</h3>\n<p>Users should update to the latest version of Rekor, 1.1.1.</p>\n<h3 id=\"workaround-1\">Workaround</h3>\n<p>There are no workarounds, users should update.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/rekor/security/advisories/GHSA-2h5h-59f5-c5x9\">https://github.com/sigstore/rekor/security/advisories/GHSA-2h5h-59f5-c5x9</a></li>\n<li><a href=\"https://github.com/sigstore/rekor/commit/cf42ace82667025fe128f7a50cf6b4cdff51cc48\">https://github.com/sigstore/rekor/commit/cf42ace82667025fe128f7a50cf6b4cdff51cc48</a></li>\n<li><a href=\"https://github.com/sigstore/rekor/releases/tag/v1.1.1\">https://github.com/sigstore/rekor/releases/tag/v1.1.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30551\">https://nvd.nist.gov/vuln/detail/CVE-2023-30551</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h5h-59f5-c5x9\">https://github.com/advisories/GHSA-2h5h-59f5-c5x9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h5h-59f5-c5x9",
            "title": "[github.com/sigstore/rekor] Rekor's compressed archives can result in OOM conditions",
            "date_modified": "2023-05-09T16:40:13.000Z",
            "date_published": "2023-05-03T21:56:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h5h-59f5-c5x9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A failure in the update logic of Rancher's admission Webhook may lead to the misconfiguration of the Webhook. This component enforces validation rules and security checks before resources are admitted into the Kubernetes cluster.</p>\n<p>When the Webhook is operating in a degraded state, it no longer validates any resources, which may result in severe privilege escalations and data corruption.</p>\n<p>The issue only affects users that upgrade from <code>2.6.x</code> or <code>2.7.x</code> to <code>2.7.2</code>. Users that did a fresh install of 2.7.2 (and did not follow an upgrade path) are not affected.</p>\n<p>The command below can be executed on the <code>local</code> cluster to determine whether the cluster is affected by this issue:</p>\n<pre><code class=\"language-sh\">$ kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io\n\nNAME                WEBHOOKS   AGE\nrancher.cattle.io   0         19h\n</code></pre>\n<p>If the resulting webhook quantity is <code>0</code>, the Rancher instance is affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include release <code>2.7.3</code> and later versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are affected and cannot update to a patched Rancher version, the recommended workaround is to manually reconfigure the Webhook with the script below. Please note that the script must be run from inside the <code>local</code> cluster or with a kubeconfig pointing to the <code>local</code> cluster which has admin permissions.</p>\n<pre><code class=\"language-yaml\">#!/bin/bash\n\nset -euo pipefail\n\nfunction prereqs() {\n    if ! [ -x \"$(command -v kubectl)\" ]; then\n      echo \"error: kubectl is not installed.\" &gt;&amp;2\n      exit 1\n    fi\n\n    if [[ -z \"$(kubectl config view -o jsonpath='{.clusters[].cluster.server}')\" ]]; then\n        echo \"error: No kubernetes cluster found on kubeconfig.\" &gt;&amp;2\n        exit 1\n    fi\n}\n\nfunction restart_deployment(){\n    kubectl rollout restart deployment rancher-webhook -n cattle-system\n    kubectl rollout status deployment rancher-webhook -n cattle-system --timeout=30s\n}\n\nfunction workaround() {\n    echo \"Cluster: $(kubectl config view -o jsonpath='{.clusters[].cluster.server}')\"\n\n    if ! kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io &gt; /dev/null 2&gt;&amp;1; then\n        echo \"webhook rancher.cattle.io not found, restarting deployment:\"\n        restart_deployment\n\n        echo \"waiting for webhook configuration\"\n        sleep 15s\n    fi\n\n    local -i webhooks\n    webhooks=\"$(kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io --no-headers | awk '{ print $2 }')\"\n\n    if [ \"${webhooks}\" == \"0\" ]; then\n        echo \"Webhook misconfiguration status: Cluster is affected by CVE-2023-22651\"\n        \n        echo \"Running workaround:\"\n        kubectl delete validatingwebhookconfiguration rancher.cattle.io\n        restart_deployment\n\n        ret=$?\n        if [ $ret -eq 0 ]; then\n            echo \"Webhook restored, CVE-2023-22651 is fixed\"\n        else\n            echo \"error trying to restart deployment. try again in a few seconds.\"\n        fi\n    else\n        echo \"Webhook misconfiguration status: not present (skipping)\"\n    fi\n\n    echo \"Done\"\n}\n\nfunction main() {\n    prereqs\n    workaround\n}\n\nmain\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/webhook/pull/216/commits/a4a498613b43a3ee93c5ab06742a3bc8adace45d\">https://github.com/rancher/webhook/pull/216/commits/a4a498613b43a3ee93c5ab06742a3bc8adace45d</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-6m9f-pj6w-w87g\">https://github.com/rancher/rancher/security/advisories/GHSA-6m9f-pj6w-w87g</a></li>\n<li><a href=\"https://github.com/rancher/rancher/releases/tag/v2.7.3\">https://github.com/rancher/rancher/releases/tag/v2.7.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m9f-pj6w-w87g\">https://github.com/advisories/GHSA-6m9f-pj6w-w87g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m9f-pj6w-w87g",
            "title": "[github.com/rancher/rancher] Rancher Webhook is misconfigured during upgrade process",
            "date_modified": "2023-04-28T20:02:08.000Z",
            "date_published": "2023-04-24T22:34:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m9f-pj6w-w87g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Ironic and ironic-inspector deployed within Baremetal Operator using the included <code>deploy.sh</code> store their <code>.htpasswd</code> files as ConfigMaps instead of Secrets. This causes the plain-text username and hashed password to be readable by anyone having a cluster-wide read-access to the management cluster, or access to the management cluster's Etcd storage.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is patched in <a href=\"https://github.com/metal3-io/baremetal-operator/pull/1241\">baremetal-operator PR#1241</a>, and is included in BMO release 0.3.0 onwards.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>User may modify the kustomizations and redeploy the BMO, or recreate the required ConfigMaps as Secrets per instructions in <a href=\"https://github.com/metal3-io/baremetal-operator/pull/1241\">baremetal-operator PR#1241</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-9wh7-397j-722m\">https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-9wh7-397j-722m</a></li>\n<li><a href=\"https://github.com/metal3-io/baremetal-operator/pull/1241\">https://github.com/metal3-io/baremetal-operator/pull/1241</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30841\">https://nvd.nist.gov/vuln/detail/CVE-2023-30841</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wh7-397j-722m\">https://github.com/advisories/GHSA-9wh7-397j-722m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wh7-397j-722m",
            "title": "[github.com/metal3-io/baremetal-operator] Ironic and ironic-inspector may expose as ConfigMaps",
            "date_modified": "2023-05-09T16:22:54.000Z",
            "date_published": "2023-04-26T19:46:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wh7-397j-722m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Downstream services relying on the presence of headers set by the <code>header</code> mutator could be exploited. A client can drop the header set by the <code>header</code> mutator by including that header's name in the <code>Connection</code> header. Example minimal config:</p>\n<pre><code class=\"language-yaml\">- id: 'example'\n  upstream:\n    url: 'https://example.com'\n  match:\n    url: 'http://127.0.0.1:4455/'\n    methods:\n      - GET\n  authenticators:\n    - handler: anonymous\n  authorizer:\n    handler: allow\n  mutators:\n    - handler: header\n      config:\n        headers:\n          X-Subject: {{ .Subject }}\n</code></pre>\n<pre><code>curl -H \"Connection: close,x-subject\" http://127.0.0.1:4455/\n</code></pre>\n<p>The <code>X-Subject</code> header will not arrive at the downstream server. It is completely dropped. In case the downstream server handles such a request in an unexpected way, an attacker can exploit this, assuming they know or guess the internal header name.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>c5cc7f736dc84185034be4356057d1c7a656d797</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The downstream server should handle the case that an expected header is not set by responding with an appropriate error.</p>\n<h3 id=\"references\">References</h3>\n<p>See background info in <a href=\"https://github.com/golang/go/issues/50580\">https://github.com/golang/go/issues/50580</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ory/oathkeeper/security/advisories/GHSA-w9mr-28mw-j8hg\">https://github.com/ory/oathkeeper/security/advisories/GHSA-w9mr-28mw-j8hg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w9mr-28mw-j8hg\">https://github.com/advisories/GHSA-w9mr-28mw-j8hg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w9mr-28mw-j8hg",
            "title": "[github.com/ory/oathkeeper] Hop-by-hop abuse to malform header mutator",
            "date_modified": "2023-04-27T15:52:26.000Z",
            "date_published": "2023-04-26T19:44:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w9mr-28mw-j8hg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>blackbox_exporter v0.23.0 was discovered to contain an access control issue in its probe interface. This vulnerability allows attackers to detect intranet ports and services, as well as download resources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26735\">https://nvd.nist.gov/vuln/detail/CVE-2023-26735</a></li>\n<li><a href=\"https://github.com/prometheus/blackbox_exporter/issues/1024\">https://github.com/prometheus/blackbox_exporter/issues/1024</a></li>\n<li><a href=\"https://github.com/prometheus/blackbox_exporter/issues/1025\">https://github.com/prometheus/blackbox_exporter/issues/1025</a></li>\n<li><a href=\"https://github.com/prometheus/blackbox_exporter/issues/1026\">https://github.com/prometheus/blackbox_exporter/issues/1026</a></li>\n<li><a href=\"http://blackboxexporter.com\">http://blackboxexporter.com</a></li>\n<li><a href=\"http://prometheus.com\">http://prometheus.com</a></li>\n<li><a href=\"https://github.com/prometheus/blackbox_exporter#tls-and-basic-authentication\">https://github.com/prometheus/blackbox_exporter#tls-and-basic-authentication</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-939c-3g97-vpvv\">https://github.com/advisories/GHSA-939c-3g97-vpvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-939c-3g97-vpvv",
            "title": "[github.com/prometheus/blackbox_exporter] Access control issues in blackbox_exporter",
            "date_modified": "2023-04-28T20:05:20.000Z",
            "date_published": "2023-04-26T00:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-939c-3g97-vpvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is an ext4 use-after-free flaw described in CVE-2022-1184 that is exploitable through versions of Apptainer &lt; 1.1.0, installations that include apptainer-suid &lt; 1.1.8, and all versions of Singularity in their default configurations on older operating systems where that CVE has not been patched.  That includes Red Hat Enterprise Linux 7, Debian 10 buster (unless the linux-5.10 package is installed), Ubuntu 18.04 bionic and Ubuntu 20.04 focal.  Use-after-free flaws in the kernel can be used to attack the kernel for denial of service and potentially for privilege escalation.</p>\n<h3 id=\"background\">Background</h3>\n<p>Historically there have been many CVEs published for extfs and a smaller number for squashfs, including serious use-after-free and buffer overrun vulnerabilities, that are scored as \"Moderate\" or \"Low\" impact only because unprivileged users were assumed to not have write access to the raw data.  Because of those ratings, vendors treat such CVEs as low urgency and either delay a patch until their next major release or never patch older but still supported operating systems at all.  Many Linux distributions automatically mount user-writable USB-drive volumes, but those are considered low risk because they require physical access to the machine.  However, since setuid-root installations of Apptainer and Singularity by default allow all users to mount any extfs (specifically, ext3, which is implemented by the ext4 driver) and squashfs filesystem using kernel drivers even though the users have write access to the raw data, the setuid-root installations raise the severity of such unpatched CVEs.  </p>\n<p>CVE-2022-1184 is currently such an unpatched CVE, at least on the above listed operating systems.  The descriptions from the operating system vendors about the CVE (referenced below) are incomplete, saying only that it allows a local attacker with user privilege to cause a denial of service.  Normally users would not be able to cause it because they cannot modify the filesystem image, and normally vulnerabilities that involve kernel memory corruption by unprivileged users are considered high severity even when there is not yet a known privilege escalation because someone with sufficient kernel knowledge can usually turn such a corruption into a privilege escalation. </p>\n<p>Red Hat did not list RHEL7 as vulnerable, but they also did not list it as unaffected, and testing confirmed that a filesystem image could be corrupted to get past the check inserted into the filesystem driver to fix the vulnerability (patches linked below).</p>\n<p>All published squashfs CVEs have been patched in currently supported major operating systems.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Apptainer 1.1.8 includes a patch that by default disables mounting of extfs filesystem types in setuid-root mode, while continuing to allow mounting of extfs filesystems in non-setuid \"rootless\" mode using fuse2fs.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>These workarounds are possible:</p>\n<ol>\n<li>Either do not install apptainer-suid (for versions 1.1.0 through 1.1.7) or set <code>allow setuid = no</code> in apptainer.conf (or singularity.conf for singularity versions).  This requires having unprivileged user namespaces enabled and except for apptainer 1.1.x versions will disallow mounting of sif files, extfs files, and squashfs files in addition to other, less significant impacts.  (Encrypted sif files are also not supported unprivileged in apptainer 1.1.x.)</li>\n<li>Alternatively, use the <code>limit containers</code> options in apptainer.conf/singularity.conf to limit sif files to trusted users, groups, and/or paths.  (The option <code>allow container extfs = no</code> disallows mounting extfs overlay files but does not disallow mounting of extfs overlay partitions inside SIF files, so it does not help work around the problem.)</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/apptainer/apptainer/security/advisories/GHSA-j4rf-7357-f4cg\">https://github.com/apptainer/apptainer/security/advisories/GHSA-j4rf-7357-f4cg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1184\">https://nvd.nist.gov/vuln/detail/CVE-2022-1184</a></li>\n<li><a href=\"https://github.com/torvalds/linux/commit/61a1d87a324ad5e3ed27c6699dfc93218fcf3201\">https://github.com/torvalds/linux/commit/61a1d87a324ad5e3ed27c6699dfc93218fcf3201</a></li>\n<li><a href=\"https://github.com/torvalds/linux/commit/65f8ea4cd57dbd46ea13b41dc8bac03176b04233\">https://github.com/torvalds/linux/commit/65f8ea4cd57dbd46ea13b41dc8bac03176b04233</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2022-1184\">https://access.redhat.com/security/cve/cve-2022-1184</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2022-1184\">https://security-tracker.debian.org/tracker/CVE-2022-1184</a></li>\n<li><a href=\"https://ubuntu.com/security/CVE-2022-1184\">https://ubuntu.com/security/CVE-2022-1184</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30549\">https://nvd.nist.gov/vuln/detail/CVE-2023-30549</a></li>\n<li><a href=\"https://github.com/apptainer/apptainer/commit/5a4964f5ba9c8d89a0e353b97f51fd607670a9f7\">https://github.com/apptainer/apptainer/commit/5a4964f5ba9c8d89a0e353b97f51fd607670a9f7</a></li>\n<li><a href=\"https://github.com/apptainer/apptainer/releases/tag/v1.1.8\">https://github.com/apptainer/apptainer/releases/tag/v1.1.8</a></li>\n<li><a href=\"https://www.suse.com/security/cve/CVE-2022-1184.html\">https://www.suse.com/security/cve/CVE-2022-1184.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j4rf-7357-f4cg\">https://github.com/advisories/GHSA-j4rf-7357-f4cg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j4rf-7357-f4cg",
            "title": "[github.com/apptainer/apptainer] Unpatched extfs vulnerabilities are exploitable through suid-mode Apptainer and Singularity",
            "date_modified": "2023-04-25T21:48:30.000Z",
            "date_published": "2023-04-25T19:48:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j4rf-7357-f4cg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary:</h2>\n<p>A potential risk in clusternet which can be leveraged to make a cluster-level privilege escalation.</p>\n<h2 id=\"detailed-analysis\">Detailed analysis:</h2>\n<p>The clusternet has a deployment called cluster-hub inside the clusternet-system Kubernetes namespace, which runs on worker nodes\nrandomly. The deployment has a service account called clusternet-hub, which has a cluster role called clusternet:hub via cluster role binding. The clusternet:hub cluster role has \"<em>\" verbs of \"</em>.*\" resources. Thus, if a malicious user can access the worker node which runs the clusternet, he/she can leverage the service account to do malicious actions to critical system resources. For example, he/she can leverage the service account to get ALL secrets in the entire cluster, resulting in cluster-level privilege escalation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/clusternet/clusternet/security/advisories/GHSA-833c-xh79-p429\">https://github.com/clusternet/clusternet/security/advisories/GHSA-833c-xh79-p429</a></li>\n<li><a href=\"https://github.com/clusternet/clusternet/releases/tag/v0.15.2\">https://github.com/clusternet/clusternet/releases/tag/v0.15.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30622\">https://nvd.nist.gov/vuln/detail/CVE-2023-30622</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-833c-xh79-p429\">https://github.com/advisories/GHSA-833c-xh79-p429</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-833c-xh79-p429",
            "title": "[github.com/clusternet/clusternet] A potential risk in clusternet which can be leveraged to make a cluster-level privilege escalation",
            "date_modified": "2023-04-24T22:04:05.000Z",
            "date_published": "2023-04-21T19:42:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-833c-xh79-p429"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When run in debug mode, Cilium may log sensitive information.</p>\n<p>In particular, Cilium running in debug mode will log the values of headers if they match HTTP network policy rules. This issue affects Cilium versions:</p>\n<ul>\n<li>1.7.* to 1.10.* inclusive</li>\n<li>1.11.* before 1.11.16</li>\n<li>1.12.* before 1.12.9</li>\n<li>1.13.* before 1.13.2</li>\n</ul>\n<p>In addition, Cilium 1.12.* before 1.12.9 and 1.13.* before 1.13.2., when running in debug mode, might log secrets used by the Cilium agent. This includes TLS private keys for Ingress and GatewayAPI resources, depending on the configuration of the affected cluster. Output of the confidential data would occur at Cilium agent restart, when the secrets are modified, and on creation of Ingress or GatewayAPI resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is fixed in Cilium releases 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable debug mode.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29002\">https://nvd.nist.gov/vuln/detail/CVE-2023-29002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8",
            "title": "[github.com/cilium/cilium] Debug mode leaks confidential data in Cilium",
            "date_modified": "2023-04-19T18:16:52.000Z",
            "date_published": "2023-04-19T18:16:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When run in debug mode, Cilium may log sensitive information.</p>\n<p>In particular, Cilium running in debug mode will log the values of headers if they match HTTP network policy rules. This issue affects Cilium versions:</p>\n<ul>\n<li>1.7.* to 1.10.* inclusive</li>\n<li>1.11.* before 1.11.16</li>\n<li>1.12.* before 1.12.9</li>\n<li>1.13.* before 1.13.2</li>\n</ul>\n<p>In addition, Cilium 1.12.* before 1.12.9 and 1.13.* before 1.13.2., when running in debug mode, might log secrets used by the Cilium agent. This includes TLS private keys for Ingress and GatewayAPI resources, depending on the configuration of the affected cluster. Output of the confidential data would occur at Cilium agent restart, when the secrets are modified, and on creation of Ingress or GatewayAPI resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is fixed in Cilium releases 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable debug mode.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29002\">https://nvd.nist.gov/vuln/detail/CVE-2023-29002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8",
            "title": "[github.com/cilium/cilium] Debug mode leaks confidential data in Cilium",
            "date_modified": "2023-04-19T18:16:52.000Z",
            "date_published": "2023-04-19T18:16:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When run in debug mode, Cilium may log sensitive information.</p>\n<p>In particular, Cilium running in debug mode will log the values of headers if they match HTTP network policy rules. This issue affects Cilium versions:</p>\n<ul>\n<li>1.7.* to 1.10.* inclusive</li>\n<li>1.11.* before 1.11.16</li>\n<li>1.12.* before 1.12.9</li>\n<li>1.13.* before 1.13.2</li>\n</ul>\n<p>In addition, Cilium 1.12.* before 1.12.9 and 1.13.* before 1.13.2., when running in debug mode, might log secrets used by the Cilium agent. This includes TLS private keys for Ingress and GatewayAPI resources, depending on the configuration of the affected cluster. Output of the confidential data would occur at Cilium agent restart, when the secrets are modified, and on creation of Ingress or GatewayAPI resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is fixed in Cilium releases 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable debug mode.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29002\">https://nvd.nist.gov/vuln/detail/CVE-2023-29002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8",
            "title": "[github.com/cilium/cilium] Debug mode leaks confidential data in Cilium",
            "date_modified": "2023-04-19T18:16:52.000Z",
            "date_published": "2023-04-19T18:16:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When run in debug mode, Cilium may log sensitive information.</p>\n<p>In particular, Cilium running in debug mode will log the values of headers if they match HTTP network policy rules. This issue affects Cilium versions:</p>\n<ul>\n<li>1.7.* to 1.10.* inclusive</li>\n<li>1.11.* before 1.11.16</li>\n<li>1.12.* before 1.12.9</li>\n<li>1.13.* before 1.13.2</li>\n</ul>\n<p>In addition, Cilium 1.12.* before 1.12.9 and 1.13.* before 1.13.2., when running in debug mode, might log secrets used by the Cilium agent. This includes TLS private keys for Ingress and GatewayAPI resources, depending on the configuration of the affected cluster. Output of the confidential data would occur at Cilium agent restart, when the secrets are modified, and on creation of Ingress or GatewayAPI resources.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is fixed in Cilium releases 1.11.16, 1.12.9, and 1.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable debug mode.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29002\">https://nvd.nist.gov/vuln/detail/CVE-2023-29002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg5p-wwp8-97g8\">https://github.com/advisories/GHSA-pg5p-wwp8-97g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8",
            "title": "[github.com/cilium/cilium] Debug mode leaks confidential data in Cilium",
            "date_modified": "2023-04-19T18:16:52.000Z",
            "date_published": "2023-04-19T18:16:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg5p-wwp8-97g8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Nomad before version 0.9.5, when rendering a task template, all environment variables were available to the rendering task.  As a fix, only task environment variables are used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hashicorp/nomad/pull/6055\">https://github.com/hashicorp/nomad/pull/6055</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14802\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14802</a></li>\n<li><a href=\"https://github.com/hashicorp/nomad/releases/tag/v0.9.5\">https://github.com/hashicorp/nomad/releases/tag/v0.9.5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-14802\">https://nvd.nist.gov/vuln/detail/CVE-2019-14802</a></li>\n<li><a href=\"https://advisories.gitlab.com/advisory/advgo_github_com_hashicorp_nomad_client_allocrunner_taskrunner_template_GMS_2022_818.html\">https://advisories.gitlab.com/advisory/advgo_github_com_hashicorp_nomad_client_allocrunner_taskrunner_template_GMS_2022_818.html</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/category/nomad\">https://www.hashicorp.com/blog/category/nomad</a></li>\n<li><a href=\"https://github.com/hashicorp/nomad/commit/e8238305ef0b9ef37be3efd86a8d34bfbed5f63f\">https://github.com/hashicorp/nomad/commit/e8238305ef0b9ef37be3efd86a8d34bfbed5f63f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6hv3-7c34-4hx8\">https://github.com/advisories/GHSA-6hv3-7c34-4hx8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6hv3-7c34-4hx8",
            "title": "[github.com/hashicorp/nomad] Hashicorp Nomad Information Exposure Through Environmental Variables",
            "date_modified": "2023-04-17T19:21:10.000Z",
            "date_published": "2022-02-15T01:57:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6hv3-7c34-4hx8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When processing an email invite to a private channel on a team, Mattermost fails to validate the inviter's permission to that channel, allowing an attacker to invite themselves to a private channel.</p>\n<p><a href=\"https://mattermost.com/security-updates/\">Issue Identifier</a>: MMSA-2023-00137</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1774\">https://nvd.nist.gov/vuln/detail/CVE-2023-1774</a></li>\n<li><a href=\"https://mattermost.com/security-updates/\">https://mattermost.com/security-updates/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9hj7-v56g-rhf6\">https://github.com/advisories/GHSA-9hj7-v56g-rhf6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9hj7-v56g-rhf6",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost fails to properly authentication inviter's permissions to private channel",
            "date_modified": "2023-04-15T05:07:52.000Z",
            "date_published": "2023-03-31T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9hj7-v56g-rhf6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}