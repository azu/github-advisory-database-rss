{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>\n<p><strong>Note:</strong></p>\n<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26154\">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119\">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>\n<li><a href=\"https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0\">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384\">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372\">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690\">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376\">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385\">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375\">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377\">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378\">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381\">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379\">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70\">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5844-q3fc-56rh\">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh",
            "title": "[github.com/pubnub/go/v5] pubnub Insufficient Entropy vulnerability",
            "date_modified": "2023-12-06T17:40:03.000Z",
            "date_published": "2023-12-06T06:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>\n<p><strong>Note:</strong></p>\n<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26154\">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119\">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>\n<li><a href=\"https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0\">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384\">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372\">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690\">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376\">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385\">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375\">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377\">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378\">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381\">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379\">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70\">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5844-q3fc-56rh\">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh",
            "title": "[github.com/pubnub/go/v6] pubnub Insufficient Entropy vulnerability",
            "date_modified": "2023-12-06T17:40:03.000Z",
            "date_published": "2023-12-06T06:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>\n<p><strong>Note:</strong></p>\n<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26154\">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119\">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>\n<li><a href=\"https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0\">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384\">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372\">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690\">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376\">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385\">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375\">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377\">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378\">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381\">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379\">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70\">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5844-q3fc-56rh\">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh",
            "title": "[github.com/pubnub/go] pubnub Insufficient Entropy vulnerability",
            "date_modified": "2023-12-06T17:40:03.000Z",
            "date_published": "2023-12-06T06:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>\n<p><strong>Note:</strong></p>\n<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26154\">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119\">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>\n<li><a href=\"https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0\">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384\">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372\">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374\">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380\">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690\">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376\">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385\">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375\">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377\">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378\">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381\">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379\">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>\n<li><a href=\"https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70\">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5844-q3fc-56rh\">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh",
            "title": "[github.com/pubnub/go/v7] pubnub Insufficient Entropy vulnerability",
            "date_modified": "2023-12-06T17:40:03.000Z",
            "date_published": "2023-12-06T06:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5844-q3fc-56rh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>If a user has restricted access to a project that is configured with <code>restricted=true</code>, they can gain root access on the system by creating a disk device with <code>shift=true</code> and creating a setuid root executable. This is possible because the <code>shift</code> property is not restricted unless <code>restricted.devices.disk.paths</code> is set.</p>\n<h3 id=\"details\">Details</h3>\n<p>The following patch shows the offending code with a possible fix:</p>\n<pre><code class=\"language-patch\">--- a/lxd/device/disk.go\n+++ b/lxd/device/disk.go\n@@ -429,17 +429,19 @@ func (d *disk) validateEnvironmentSourcePath() error {\n        if instProject.Name != api.ProjectDefaultName {\n                // If restricted disk paths are in force, then check the disk's source is allowed, and record the\n                // allowed parent path for later user during device start up sequence.\n-               if shared.IsTrue(instProject.Config[\"restricted\"]) &amp;&amp; instProject.Config[\"restricted.devices.disk.paths\"] != \"\" {\n-                       allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config[\"source\"])\n-                       if !allowed {\n-                               return fmt.Errorf(\"Disk source path %q not allowed by project for disk %q\", d.config[\"source\"], d.name)\n+               if shared.IsTrue(instProject.Config[\"restricted\"]) {\n+                       if instProject.Config[\"restricted.devices.disk.paths\"] != \"\" {\n+                               allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config[\"source\"])\n+                               if !allowed {\n+                                       return fmt.Errorf(\"Disk source path %q not allowed by project for disk %q\", d.config[\"source\"], d.name)\n+                               }\n+\n+                               d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)\n                        }\n\n                        if shared.IsTrue(d.config[\"shift\"]) {\n                                return fmt.Errorf(`The \"shift\" property cannot be used with a restricted source path`)\n                        }\n-\n-                       d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)\n                }\n        }\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-bash\">$ lxc project create restricted -c restricted=true -c restricted.devices.disk=allow\n$ lxc project switch restricted\n$ lxc profile device add default root disk path=/ pool=default\n$ lxc init ubuntu:22.04 c1\n$ lxc config device add c1 d1 disk source=/ path=/mnt shift=true\n$ lxc start c1  # no error\n\n$ lxc project set restricted restricted.devices.disk.paths=/  # explicitly allow mounting /\n$ lxc restart c1\nError: Failed to start device \"d1\": The \"shift\" property cannot be used with a restricted source path\n</code></pre>\n<p>Created <a href=\"https://github.com/canonical/lxd/issues/12606\">https://github.com/canonical/lxd/issues/12606</a> to improve the documentation as per <a href=\"https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918\">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97\">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97</a></li>\n<li><a href=\"https://github.com/canonical/lxd/issues/12606\">https://github.com/canonical/lxd/issues/12606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x9qq-236j-gj97\">https://github.com/advisories/GHSA-x9qq-236j-gj97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x9qq-236j-gj97",
            "title": "[github.com/canonical/lxd] Canonical LXD documentation improvement to make clear restricted.devices.disk=allow without restricted.devices.disk.paths also allows shift=true",
            "date_modified": "2023-12-05T23:32:59.000Z",
            "date_published": "2023-12-05T23:32:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x9qq-236j-gj97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If functions <code>Encapsulate()</code>, <code>Decapsulate()</code> and <code>ECDH()</code> could be called by an attacker, he could recover any private key that he interacts with.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in v2.0.8</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You could manually check public key by calling <code>IsOnCurve()</code> function from secp256k1 libraries.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md\">https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ecies/go/security/advisories/GHSA-8j98-cjfr-qx3h\">https://github.com/ecies/go/security/advisories/GHSA-8j98-cjfr-qx3h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49292\">https://nvd.nist.gov/vuln/detail/CVE-2023-49292</a></li>\n<li><a href=\"https://github.com/ecies/go/commit/c6e775163866d6ea5233eb8ec8530a9122101ebd\">https://github.com/ecies/go/commit/c6e775163866d6ea5233eb8ec8530a9122101ebd</a></li>\n<li><a href=\"https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md\">https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md</a></li>\n<li><a href=\"https://github.com/ecies/go/releases/tag/v2.0.8\">https://github.com/ecies/go/releases/tag/v2.0.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j98-cjfr-qx3h\">https://github.com/advisories/GHSA-8j98-cjfr-qx3h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j98-cjfr-qx3h",
            "title": "[github.com/ecies/go/v2] github.com/ecies/go vulnerable to possible private key restoration",
            "date_modified": "2023-12-05T23:30:58.000Z",
            "date_published": "2023-12-05T23:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j98-cjfr-qx3h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>too high p2c parameter in JWE's alg PBES2-* could lead to a DOS attack</p>\n<h3 id=\"details\">Details</h3>\n<p>The JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive.\nTherefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a DOS attack</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"github.com/lestrrat-go/jwx/v2/jwa\"\n    \"github.com/lestrrat-go/jwx/v2/jwe\"\n    \"github.com/lestrrat-go/jwx/v2/jwk\"\n)\n\nfunc main() {\n    token := []byte(\"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJlbmMiOiJBMjU2R0NNIiwicDJjIjoyMDAwMDAwMDAwLCJwMnMiOiJNNzczSnlmV2xlX2FsSXNrc0NOTU9BIn0=.S8B1kXdIR7BM6i_TaGsgqEOxU-1Sgdakp4mHq7UVhn-_REzOiGz2gg.gU_LfzhBXtQdwYjh.9QUIS-RWkLc.m9TudmzUoCzDhHsGGfzmCA\")\n    key, err := jwk.FromRaw([]byte(`abcdefg`))\n    payload, err := jwe.Decrypt(token, jwe.WithKey(jwa.PBES2_HS256_A128KW, key))\n    if err == nil {\n        fmt.Println(string(payload))\n    }\n}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>It's a kind of Dos attack, the user's environment could potentially utilize an excessive amount of CPU resources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf\">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49290\">https://nvd.nist.gov/vuln/detail/CVE-2023-49290</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c\">https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7f9x-gw85-8grf\">https://github.com/advisories/GHSA-7f9x-gw85-8grf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7f9x-gw85-8grf",
            "title": "[github.com/lestrrat-go/jwx/jwe] lestrrat-go/jwx's malicious parameters in JWE can cause a DOS",
            "date_modified": "2023-12-05T23:29:27.000Z",
            "date_published": "2023-12-05T23:29:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7f9x-gw85-8grf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>too high p2c parameter in JWE's alg PBES2-* could lead to a DOS attack</p>\n<h3 id=\"details\">Details</h3>\n<p>The JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive.\nTherefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a DOS attack</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"github.com/lestrrat-go/jwx/v2/jwa\"\n    \"github.com/lestrrat-go/jwx/v2/jwe\"\n    \"github.com/lestrrat-go/jwx/v2/jwk\"\n)\n\nfunc main() {\n    token := []byte(\"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJlbmMiOiJBMjU2R0NNIiwicDJjIjoyMDAwMDAwMDAwLCJwMnMiOiJNNzczSnlmV2xlX2FsSXNrc0NOTU9BIn0=.S8B1kXdIR7BM6i_TaGsgqEOxU-1Sgdakp4mHq7UVhn-_REzOiGz2gg.gU_LfzhBXtQdwYjh.9QUIS-RWkLc.m9TudmzUoCzDhHsGGfzmCA\")\n    key, err := jwk.FromRaw([]byte(`abcdefg`))\n    payload, err := jwe.Decrypt(token, jwe.WithKey(jwa.PBES2_HS256_A128KW, key))\n    if err == nil {\n        fmt.Println(string(payload))\n    }\n}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>It's a kind of Dos attack, the user's environment could potentially utilize an excessive amount of CPU resources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf\">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49290\">https://nvd.nist.gov/vuln/detail/CVE-2023-49290</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c\">https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7f9x-gw85-8grf\">https://github.com/advisories/GHSA-7f9x-gw85-8grf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7f9x-gw85-8grf",
            "title": "[github.com/lestrrat-go/jwx/v2/jwe] lestrrat-go/jwx's malicious parameters in JWE can cause a DOS",
            "date_modified": "2023-12-05T23:29:27.000Z",
            "date_published": "2023-12-05T23:29:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7f9x-gw85-8grf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.</p>\n<h3 id=\"details\">Details</h3>\n<p>While attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:</p>\n<p><code>Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service</code></p>\n<p>I assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.</p>\n<p>So I have send a request with that hostname with <code>curl -v --resolve \"traefik-service:80:xxx.xxx.xxx.xxx\" http://traefik-service</code>. That made my whole server unresponsive.</p>\n<p>I assume the name comes from a docker container with that name, traefik itself:</p>\n<pre><code>localhost ~ # docker ps\nCONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES\nd1414e74aec7   traefik:v2.10                                           \"/entrypoint.sh trae…\"   4 minutes ago       Up 4 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, :::443-&gt;443/tcp, 127.0.0.1:8080-&gt;8080/tcp   traefik.service\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li><p>Start traefik with <code>docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker</code></p>\n</li>\n<li><p><code>curl -v --resolve \"foo:80:127.0.0.1\" http://foo</code></p>\n</li>\n</ol>\n<p>looks like this creates an endless loop of request.</p>\n<p>Knowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Server is unreachable and uses 100% CPU</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p\">https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47633\">https://nvd.nist.gov/vuln/detail/CVE-2023-47633</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fwg-jrfw-ff7p\">https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fwg-jrfw-ff7p",
            "title": "[github.com/traefik/traefik/v3] Traefik docker container using 100% CPU",
            "date_modified": "2023-12-05T18:13:55.000Z",
            "date_published": "2023-12-05T18:13:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fwg-jrfw-ff7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.</p>\n<h3 id=\"details\">Details</h3>\n<p>While attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:</p>\n<p><code>Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service</code></p>\n<p>I assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.</p>\n<p>So I have send a request with that hostname with <code>curl -v --resolve \"traefik-service:80:xxx.xxx.xxx.xxx\" http://traefik-service</code>. That made my whole server unresponsive.</p>\n<p>I assume the name comes from a docker container with that name, traefik itself:</p>\n<pre><code>localhost ~ # docker ps\nCONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES\nd1414e74aec7   traefik:v2.10                                           \"/entrypoint.sh trae…\"   4 minutes ago       Up 4 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, :::443-&gt;443/tcp, 127.0.0.1:8080-&gt;8080/tcp   traefik.service\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li><p>Start traefik with <code>docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker</code></p>\n</li>\n<li><p><code>curl -v --resolve \"foo:80:127.0.0.1\" http://foo</code></p>\n</li>\n</ol>\n<p>looks like this creates an endless loop of request.</p>\n<p>Knowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Server is unreachable and uses 100% CPU</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p\">https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47633\">https://nvd.nist.gov/vuln/detail/CVE-2023-47633</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fwg-jrfw-ff7p\">https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fwg-jrfw-ff7p",
            "title": "[github.com/traefik/traefik/v2] Traefik docker container using 100% CPU",
            "date_modified": "2023-12-05T18:13:55.000Z",
            "date_published": "2023-12-05T18:13:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fwg-jrfw-ff7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>There is a potential vulnerability in Traefik managing the ACME HTTP challenge.</p>\n<p>When Traefik is configured to use the <a href=\"https://doc.traefik.io/traefik/https/acme/#httpchallenge\">HTTPChallenge</a> to generate and renew the Let's Encrypt TLS certificates, the delay authorized to solve the challenge (50 seconds) can be exploited by attackers (<a href=\"https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/\">slowloris attack</a>).</p>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Replace the HTTPChallenge with the <a href=\"https://doc.traefik.io/traefik/https/acme/#tlschallenge\">TLSChallenge</a> or the <a href=\"https://doc.traefik.io/traefik/https/acme/#dnschallenge\">DNSChallenge</a>.</p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-8g85-whqh-cr2f\">https://github.com/traefik/traefik/security/advisories/GHSA-8g85-whqh-cr2f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47124\">https://nvd.nist.gov/vuln/detail/CVE-2023-47124</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#dnschallenge\">https://doc.traefik.io/traefik/https/acme/#dnschallenge</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#httpchallenge\">https://doc.traefik.io/traefik/https/acme/#httpchallenge</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#tlschallenge\">https://doc.traefik.io/traefik/https/acme/#tlschallenge</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/\">https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8g85-whqh-cr2f\">https://github.com/advisories/GHSA-8g85-whqh-cr2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8g85-whqh-cr2f",
            "title": "[github.com/traefik/traefik/v3] Traefik vulnerable to potential DDoS via ACME HTTPChallenge",
            "date_modified": "2023-12-05T18:12:39.000Z",
            "date_published": "2023-12-05T18:12:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8g85-whqh-cr2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>There is a potential vulnerability in Traefik managing the ACME HTTP challenge.</p>\n<p>When Traefik is configured to use the <a href=\"https://doc.traefik.io/traefik/https/acme/#httpchallenge\">HTTPChallenge</a> to generate and renew the Let's Encrypt TLS certificates, the delay authorized to solve the challenge (50 seconds) can be exploited by attackers (<a href=\"https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/\">slowloris attack</a>).</p>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Replace the HTTPChallenge with the <a href=\"https://doc.traefik.io/traefik/https/acme/#tlschallenge\">TLSChallenge</a> or the <a href=\"https://doc.traefik.io/traefik/https/acme/#dnschallenge\">DNSChallenge</a>.</p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-8g85-whqh-cr2f\">https://github.com/traefik/traefik/security/advisories/GHSA-8g85-whqh-cr2f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47124\">https://nvd.nist.gov/vuln/detail/CVE-2023-47124</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#dnschallenge\">https://doc.traefik.io/traefik/https/acme/#dnschallenge</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#httpchallenge\">https://doc.traefik.io/traefik/https/acme/#httpchallenge</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/https/acme/#tlschallenge\">https://doc.traefik.io/traefik/https/acme/#tlschallenge</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/\">https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8g85-whqh-cr2f\">https://github.com/advisories/GHSA-8g85-whqh-cr2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8g85-whqh-cr2f",
            "title": "[github.com/traefik/traefik/v2] Traefik vulnerable to potential DDoS via ACME HTTPChallenge",
            "date_modified": "2023-12-05T18:12:39.000Z",
            "date_published": "2023-12-05T18:12:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8g85-whqh-cr2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When a request is sent to Traefik with a URL fragment, Traefik automatically URL encodes and forwards the fragment to the backend server. This violates the RFC because in the origin-form the URL should only contain the absolute path and the query.</p>\n<p>When this is combined with another frontend proxy like Nginx, it can be used to bypass frontend proxy URI-based access control\nrestrictions. </p>\n<h3 id=\"details\">Details</h3>\n<p>For example, we have this Nginx configuration:</p>\n<pre><code>location /admin {\n     deny all;\n     return 403;\n}\n</code></pre>\n<p>This can be bypassed when the attacker is requesting to /#/../admin</p>\n<p>This won’t be vulnerable if the backend server follows the RFC and ignores any characters after the fragment.</p>\n<p>However, if Nginx is chained with another reverse proxy which automatically URL encode the character # (Traefik) the URL will become</p>\n<p>/%23/../admin</p>\n<p>And allow the attacker to completely bypass the Access Restriction from the Nginx Front-End proxy.</p>\n<p>Here is a diagram to summarize the attack:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/47447167/278849578-34ca0546-99b4-44c8-8fc8-8e799c1f5069.png\"></p>\n<h3 id=\"poc\">PoC</h3>\n<p><img alt=\"image (1)\" src=\"https://user-images.githubusercontent.com/47447167/278849597-280f2e80-f2d7-4dd9-9662-b8f488fd5ff2.png\"></p>\n<p>This is the POC docker I've set up.  It contains Nginx, Traefik proxies and a backend server running PHP.</p>\n<p><a href=\"https://drive.google.com/file/d/1vLnA0g7N7ZKhLNmHmuJ4JJjV_J2akNMt/view?usp=sharing\">https://drive.google.com/file/d/1vLnA0g7N7ZKhLNmHmuJ4JJjV_J2akNMt/view?usp=sharing</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This allows the attacker to completely bypass the Access Restriction from Front-End proxy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-fvhj-4qfh-q2hm\">https://github.com/traefik/traefik/security/advisories/GHSA-fvhj-4qfh-q2hm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47106\">https://nvd.nist.gov/vuln/detail/CVE-2023-47106</a></li>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc7230#section-5.3.1\">https://datatracker.ietf.org/doc/html/rfc7230#section-5.3.1</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvhj-4qfh-q2hm\">https://github.com/advisories/GHSA-fvhj-4qfh-q2hm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvhj-4qfh-q2hm",
            "title": "[github.com/traefik/traefik/v3] Traefik incorrectly processes fragment in the URL, leads to Authorization Bypass",
            "date_modified": "2023-12-05T18:11:49.000Z",
            "date_published": "2023-12-05T18:11:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvhj-4qfh-q2hm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When a request is sent to Traefik with a URL fragment, Traefik automatically URL encodes and forwards the fragment to the backend server. This violates the RFC because in the origin-form the URL should only contain the absolute path and the query.</p>\n<p>When this is combined with another frontend proxy like Nginx, it can be used to bypass frontend proxy URI-based access control\nrestrictions. </p>\n<h3 id=\"details\">Details</h3>\n<p>For example, we have this Nginx configuration:</p>\n<pre><code>location /admin {\n     deny all;\n     return 403;\n}\n</code></pre>\n<p>This can be bypassed when the attacker is requesting to /#/../admin</p>\n<p>This won’t be vulnerable if the backend server follows the RFC and ignores any characters after the fragment.</p>\n<p>However, if Nginx is chained with another reverse proxy which automatically URL encode the character # (Traefik) the URL will become</p>\n<p>/%23/../admin</p>\n<p>And allow the attacker to completely bypass the Access Restriction from the Nginx Front-End proxy.</p>\n<p>Here is a diagram to summarize the attack:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/47447167/278849578-34ca0546-99b4-44c8-8fc8-8e799c1f5069.png\"></p>\n<h3 id=\"poc\">PoC</h3>\n<p><img alt=\"image (1)\" src=\"https://user-images.githubusercontent.com/47447167/278849597-280f2e80-f2d7-4dd9-9662-b8f488fd5ff2.png\"></p>\n<p>This is the POC docker I've set up.  It contains Nginx, Traefik proxies and a backend server running PHP.</p>\n<p><a href=\"https://drive.google.com/file/d/1vLnA0g7N7ZKhLNmHmuJ4JJjV_J2akNMt/view?usp=sharing\">https://drive.google.com/file/d/1vLnA0g7N7ZKhLNmHmuJ4JJjV_J2akNMt/view?usp=sharing</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This allows the attacker to completely bypass the Access Restriction from Front-End proxy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-fvhj-4qfh-q2hm\">https://github.com/traefik/traefik/security/advisories/GHSA-fvhj-4qfh-q2hm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47106\">https://nvd.nist.gov/vuln/detail/CVE-2023-47106</a></li>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc7230#section-5.3.1\">https://datatracker.ietf.org/doc/html/rfc7230#section-5.3.1</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.10.6\">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvhj-4qfh-q2hm\">https://github.com/advisories/GHSA-fvhj-4qfh-q2hm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvhj-4qfh-q2hm",
            "title": "[github.com/traefik/traefik/v2] Traefik incorrectly processes fragment in the URL, leads to Authorization Bypass",
            "date_modified": "2023-12-05T18:11:49.000Z",
            "date_published": "2023-12-05T18:11:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvhj-4qfh-q2hm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Any CLI command issued to a Coordinator after the Manifest has been set, is susceptible to be redirected to another MarbleRun Coordinator instance, which runs the same binary, but potentially a different manifest.</p>\n<h3 id=\"patches\">Patches</h3>\n<p> The issue has been patched in <a href=\"https://github.com/edgelesssys/marblerun/releases/tag/v1.4.0\"><code>v1.4.0</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Directly using the REST API of the Coordinator and manually verifying and pinning the certificate to a set Manifest avoids the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/edgelesssys/marblerun/security/advisories/GHSA-j3rq-4xjw-xg63\">https://github.com/edgelesssys/marblerun/security/advisories/GHSA-j3rq-4xjw-xg63</a></li>\n<li><a href=\"https://github.com/edgelesssys/marblerun/releases/tag/v1.4.0\">https://github.com/edgelesssys/marblerun/releases/tag/v1.4.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j3rq-4xjw-xg63\">https://github.com/advisories/GHSA-j3rq-4xjw-xg63</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j3rq-4xjw-xg63",
            "title": "[github.com/edgelesssys/marblerun] Go package github.com/edgelesssys/marblerun CLI commands susceptible to MITM attacks",
            "date_modified": "2023-12-04T23:13:43.000Z",
            "date_published": "2023-12-04T23:13:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j3rq-4xjw-xg63"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ZITADEL uses the notification triggering requests Forwarded or X-Forwarded-Host header to build the button link sent in emails for confirming a password reset with the emailed code. If this header is overwritten and a user clicks the link to a malicious site in the email, the secret code can be retrieved and used to reset the users password and take over his account.</p>\n<p>Accounts with MFA or Passwordless enabled can not be taken over by this attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patched ZITADEL versions verify, that the auth requests instance is retrieved by the requests original domain (from the Forwarded or X-Forwarded-Host headers if available). If the instance can't be found using the original host or the auth request can't be found within that instance, ZITADEL throws an error.</p>\n<p>2.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.41.6\">2.41.6</a>\n2.40.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.40.10\">2.40.10</a>\n2.39.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.39.9\">2.39.9</a></p>\n<p>The vulnerablility was introduced with 2.39.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"references\">References</h3>\n<p>None</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49097\">https://nvd.nist.gov/vuln/detail/CVE-2023-49097</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w",
            "title": "[github.com/zitadel/zitadel] ZITADEL Account Takeover via Malicious Host Header Injection",
            "date_modified": "2023-11-30T15:03:21.000Z",
            "date_published": "2023-11-29T21:32:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ZITADEL uses the notification triggering requests Forwarded or X-Forwarded-Host header to build the button link sent in emails for confirming a password reset with the emailed code. If this header is overwritten and a user clicks the link to a malicious site in the email, the secret code can be retrieved and used to reset the users password and take over his account.</p>\n<p>Accounts with MFA or Passwordless enabled can not be taken over by this attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patched ZITADEL versions verify, that the auth requests instance is retrieved by the requests original domain (from the Forwarded or X-Forwarded-Host headers if available). If the instance can't be found using the original host or the auth request can't be found within that instance, ZITADEL throws an error.</p>\n<p>2.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.41.6\">2.41.6</a>\n2.40.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.40.10\">2.40.10</a>\n2.39.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.39.9\">2.39.9</a></p>\n<p>The vulnerablility was introduced with 2.39.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"references\">References</h3>\n<p>None</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49097\">https://nvd.nist.gov/vuln/detail/CVE-2023-49097</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w",
            "title": "[github.com/zitadel/zitadel] ZITADEL Account Takeover via Malicious Host Header Injection",
            "date_modified": "2023-11-30T15:03:21.000Z",
            "date_published": "2023-11-29T21:32:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ZITADEL uses the notification triggering requests Forwarded or X-Forwarded-Host header to build the button link sent in emails for confirming a password reset with the emailed code. If this header is overwritten and a user clicks the link to a malicious site in the email, the secret code can be retrieved and used to reset the users password and take over his account.</p>\n<p>Accounts with MFA or Passwordless enabled can not be taken over by this attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patched ZITADEL versions verify, that the auth requests instance is retrieved by the requests original domain (from the Forwarded or X-Forwarded-Host headers if available). If the instance can't be found using the original host or the auth request can't be found within that instance, ZITADEL throws an error.</p>\n<p>2.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.41.6\">2.41.6</a>\n2.40.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.40.10\">2.40.10</a>\n2.39.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.39.9\">2.39.9</a></p>\n<p>The vulnerablility was introduced with 2.39.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"references\">References</h3>\n<p>None</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49097\">https://nvd.nist.gov/vuln/detail/CVE-2023-49097</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2wmj-46rj-qm2w\">https://github.com/advisories/GHSA-2wmj-46rj-qm2w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w",
            "title": "[github.com/zitadel/zitadel] ZITADEL Account Takeover via Malicious Host Header Injection",
            "date_modified": "2023-11-30T15:03:21.000Z",
            "date_published": "2023-11-29T21:32:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2wmj-46rj-qm2w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to perform proper authorization in the <code>/plugins/focalboard/api/v2/users</code> endpoint allowing an attacker who is a guest user and knows the ID of another user&nbsp;to get their information (e.g. name, surname, nickname) via Mattermost Boards.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6202\">https://nvd.nist.gov/vuln/detail/CVE-2023-6202</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85jj-c9jr-9jhx\">https://github.com/advisories/GHSA-85jj-c9jr-9jhx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85jj-c9jr-9jhx",
            "title": "[github.com/mattermost/mattermost-server/v6] Mattermost Improper Access Control vulnerability",
            "date_modified": "2023-11-28T20:53:17.000Z",
            "date_published": "2023-11-27T12:30:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85jj-c9jr-9jhx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost fails to perform proper authorization in the <code>/plugins/focalboard/api/v2/users</code> endpoint allowing an attacker who is a guest user and knows the ID of another user&nbsp;to get their information (e.g. name, surname, nickname) via Mattermost Boards.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6202\">https://nvd.nist.gov/vuln/detail/CVE-2023-6202</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85jj-c9jr-9jhx\">https://github.com/advisories/GHSA-85jj-c9jr-9jhx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85jj-c9jr-9jhx",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Improper Access Control vulnerability",
            "date_modified": "2023-11-28T20:53:17.000Z",
            "date_published": "2023-11-27T12:30:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85jj-c9jr-9jhx"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}