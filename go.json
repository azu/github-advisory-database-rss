{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Casdoor v1.331.0 and below was discovered to contain a Cross-Site Request Forgery (CSRF) in the endpoint <code>/api/set-password</code>. This vulnerability allows attackers to arbitrarily change the victim user's password via supplying a crafted URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34927\">https://nvd.nist.gov/vuln/detail/CVE-2023-34927</a></li>\n<li><a href=\"https://github.com/casdoor/casdoor/issues/1531\">https://github.com/casdoor/casdoor/issues/1531</a></li>\n<li><a href=\"https://casdoor.org/\">https://casdoor.org/</a></li>\n<li><a href=\"https://gist.github.com/omriman067/4e90a3a4ffa40984f011d8777a995469\">https://gist.github.com/omriman067/4e90a3a4ffa40984f011d8777a995469</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rwcp-qrwg-56cg\">https://github.com/advisories/GHSA-rwcp-qrwg-56cg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rwcp-qrwg-56cg",
            "title": "[github.com/casdoor/casdoor] Casdoor Cross-Site Request Forgery vulnerability",
            "date_modified": "2023-06-22T20:01:22.000Z",
            "date_published": "2023-06-22T15:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rwcp-qrwg-56cg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The current cryptography implementation in Sliver up to version 1.5.39 allows a MitM with access to the corresponding implant binary to execute arbitrary codes on implanted devices via intercepted and crafted responses. (Reserved CVE ID: CVE-2023-34758)</p>\n<h3 id=\"details\">Details</h3>\n<p>Please see <a href=\"https://github.com/tangent65536/Slivjacker\">the PoC repo</a>.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Please also see <a href=\"https://github.com/tangent65536/Slivjacker\">the PoC repo</a>.\nTo setup a simple PoC environment,  </p>\n<ol>\n<li>Generate an implant with its C2 set to the PoC server's address and copy the embedded private implant key and public server key into the config json.  </li>\n<li>Run the implant on a separate VM and a <code>notepad.exe</code> window should pop up on the implanted VM.</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>A successful attack grants the attacker permission to execute arbitrary code on the implanted device.  </p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go\">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go</a><br><a href=\"https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go\">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go</a><br><a href=\"https://github.com/tangent65536/Slivjacker\">https://github.com/tangent65536/Slivjacker</a>  </p>\n<h3 id=\"credits\">Credits</h3>\n<p><a href=\"https://github.com/tangent65536\">Ting-Wei Hsieh</a> from <a href=\"https://www.chtsecurity.com/?lang=en\">CHT Security Co. Ltd.</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/BishopFox/sliver/security/advisories/GHSA-8jxm-xp43-qh3q\">https://github.com/BishopFox/sliver/security/advisories/GHSA-8jxm-xp43-qh3q</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/commit/2d1ea6192cac2ff9d6450b2d96043fdbf8561516\">https://github.com/BishopFox/sliver/commit/2d1ea6192cac2ff9d6450b2d96043fdbf8561516</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go\">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go\">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go</a></li>\n<li><a href=\"https://github.com/BishopFox/sliver/releases/tag/v1.5.40\">https://github.com/BishopFox/sliver/releases/tag/v1.5.40</a></li>\n<li><a href=\"https://github.com/tangent65536/Slivjacker\">https://github.com/tangent65536/Slivjacker</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8jxm-xp43-qh3q\">https://github.com/advisories/GHSA-8jxm-xp43-qh3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8jxm-xp43-qh3q",
            "title": "[github.com/bishopfox/sliver] Silver vulnerable to MitM attack against implants due to a cryptography vulnerability",
            "date_modified": "2023-06-21T22:08:36.000Z",
            "date_published": "2023-06-21T22:08:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8jxm-xp43-qh3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists that allows a malicious validator to trick the Vega network into re-processing past Ethereum events from Vega’s Ethereum bridge. For example, a deposit to the collateral bridge for 100USDT that credits a party’s general account on Vega, can be re-processed 50 times resulting in 5000USDT in that party’s general account. This is without depositing any more than the original 100USDT on the bridge.</p>\n<p>Despite this exploit requiring access to a validator's Vega key, a validator key can be obtained at the small cost of 3000VEGA, the amount needed to announce a new node onto the network.</p>\n<p>The steps to carry out this exploit are as follows:</p>\n<ol>\n<li>Cause an Ethereum event on one of the bridge contracts e.g a deposit to the collateral bridge, or the staking bridge</li>\n<li>This will result in the Ethereum-event-forwarder of each node to submit a ChainEvent transaction to the Vega network corresponding to that event</li>\n<li>Scrape the valid chain event transaction from the Tendermint block data using a node’s Tendermint API</li>\n<li>Change the value of the <code>txId</code> field of the ChainEvent to any valid, but different, value</li>\n<li>Bundle the tweaked ChainEvent into a new transaction, sign it with a validator key and resubmit to the Vega network</li>\n<li>The fraudulent ChainEvent will be processed by Vega as if it were a new ChainEvent even though it did not occur on Ethereum</li>\n</ol>\n<p>The key to this exploit is in step 4. The <code>txId</code> field of the ChainEvent is used when checking for ChainEvent resubmission, but NOT during the subsequent on-chain verification of the event. Therefore changing the <code>txId</code> of an existing ChainEvent is enough to by-pass the duplication check and for it to still be verified as a real event.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The impact of this exploit is dependent on the ChainEvent being manipulated. The below table describes each one:</p>\n<table>\n<thead>\n<tr>\n<th>Chain Event</th>\n<th>Allows</th>\n<th>Consequence</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Deposit</td>\n<td>Generation of unlimited funds of any asset</td>\n<td>Withdrawal of all assets</td>\n</tr>\n<tr>\n<td>Stake Deposit</td>\n<td>Delegate unlimited Vega to a single node</td>\n<td>A single node has controlling amount of voting power</td>\n</tr>\n<tr>\n<td>Stake Removed</td>\n<td>Force a Validator node to drop below self-stake requirements</td>\n<td>Prevents reward payouts</td>\n</tr>\n<tr>\n<td>Bridge Stop</td>\n<td>The Vega network to think the bridge is stopped</td>\n<td>Prevent anyone from withdrawing funds</td>\n</tr>\n<tr>\n<td>Signer Removed</td>\n<td>The Vega network to think a validator nodes is not on the multisig contract</td>\n<td>Prevent reward payouts</td>\n</tr>\n</tbody></table>\n<h3 id=\"patches\">Patches</h3>\n<p>v0.71.6</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No work around known, however there are mitigations in place should this vulnerability be exploited:</p>\n<ul>\n<li>there are monitoring alerts, for <code>mainnet1</code>, in place to identify any issues of this nature including this vulnerability being exploited</li>\n<li>the validators have the ability to stop the bridge thus stopping any withdrawals should this vulnerability be exploited</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vegaprotocol/vega/security/advisories/GHSA-8rc9-vxjh-qjf2\">https://github.com/vegaprotocol/vega/security/advisories/GHSA-8rc9-vxjh-qjf2</a></li>\n<li><a href=\"https://github.com/vegaprotocol/vega/commit/56b09bf57af8cd9eca5996252d86f469a3e34c68\">https://github.com/vegaprotocol/vega/commit/56b09bf57af8cd9eca5996252d86f469a3e34c68</a></li>\n<li><a href=\"https://github.com/vegaprotocol/vega/releases/tag/v0.71.6\">https://github.com/vegaprotocol/vega/releases/tag/v0.71.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8rc9-vxjh-qjf2\">https://github.com/advisories/GHSA-8rc9-vxjh-qjf2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8rc9-vxjh-qjf2",
            "title": "[code.vegaprotocol.io/vega] Vega's validators able to submit duplicate transactions ",
            "date_modified": "2023-06-20T16:36:19.000Z",
            "date_published": "2023-06-20T16:36:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8rc9-vxjh-qjf2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the <a href=\"https://docs.cilium.io/en/v1.13/network/servicemesh/gateway-api/gateway-api/\">Gateway API</a> is enabled in Cilium, the absence of a check on the namespace in which a <a href=\"https://gateway-api.sigs.k8s.io/api-types/referencegrant/\">ReferenceGrant</a> is created could result in Cilium gaining visibility of secrets (including certificates) and services across namespaces.</p>\n<p>An attacker on an affected cluster can configure Cilium to use cluster secrets or communicate with services that it should not have access to.</p>\n<p>Gateway API functionality is disabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability is fixed in Cilium release 1.13.4.</p>\n<p>Cilium versions &lt;1.13 are not affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround to this issue.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please reach out on <a href=\"https://docs.cilium.io/en/latest/community/community/#slack\">Slack</a>.</p>\n<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href=\"mailto:security@cilium.io\">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cilium/cilium/security/advisories/GHSA-r7wr-4w5q-55m6\">https://github.com/cilium/cilium/security/advisories/GHSA-r7wr-4w5q-55m6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34242\">https://nvd.nist.gov/vuln/detail/CVE-2023-34242</a></li>\n<li><a href=\"https://github.com/cilium/cilium/releases/tag/v1.13.4\">https://github.com/cilium/cilium/releases/tag/v1.13.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r7wr-4w5q-55m6\">https://github.com/advisories/GHSA-r7wr-4w5q-55m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r7wr-4w5q-55m6",
            "title": "[github.com/cilium/cilium] Cilium vulnerable to information leakage via incorrect ReferenceGrant handling",
            "date_modified": "2023-06-19T19:46:04.000Z",
            "date_published": "2023-06-16T17:47:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r7wr-4w5q-55m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2431\">https://nvd.nist.gov/vuln/detail/CVE-2023-2431</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118690\">https://github.com/kubernetes/kubernetes/issues/118690</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10\">https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117020\">https://github.com/kubernetes/kubernetes/pull/117020</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117116\">https://github.com/kubernetes/kubernetes/pull/117116</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117117\">https://github.com/kubernetes/kubernetes/pull/117117</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117118\">https://github.com/kubernetes/kubernetes/pull/117118</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117147\">https://github.com/kubernetes/kubernetes/pull/117147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc8m-28vv-4pjc\">https://github.com/advisories/GHSA-xc8m-28vv-4pjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc",
            "title": "[k8s.io/kubernetes] Kubelet vulnerable to bypass of seccomp profile enforcement",
            "date_modified": "2023-06-16T19:42:19.000Z",
            "date_published": "2023-06-16T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2431\">https://nvd.nist.gov/vuln/detail/CVE-2023-2431</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118690\">https://github.com/kubernetes/kubernetes/issues/118690</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10\">https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117020\">https://github.com/kubernetes/kubernetes/pull/117020</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117116\">https://github.com/kubernetes/kubernetes/pull/117116</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117117\">https://github.com/kubernetes/kubernetes/pull/117117</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117118\">https://github.com/kubernetes/kubernetes/pull/117118</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117147\">https://github.com/kubernetes/kubernetes/pull/117147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc8m-28vv-4pjc\">https://github.com/advisories/GHSA-xc8m-28vv-4pjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc",
            "title": "[k8s.io/kubernetes] Kubelet vulnerable to bypass of seccomp profile enforcement",
            "date_modified": "2023-06-16T19:42:19.000Z",
            "date_published": "2023-06-16T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2431\">https://nvd.nist.gov/vuln/detail/CVE-2023-2431</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118690\">https://github.com/kubernetes/kubernetes/issues/118690</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10\">https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117020\">https://github.com/kubernetes/kubernetes/pull/117020</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117116\">https://github.com/kubernetes/kubernetes/pull/117116</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117117\">https://github.com/kubernetes/kubernetes/pull/117117</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117118\">https://github.com/kubernetes/kubernetes/pull/117118</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117147\">https://github.com/kubernetes/kubernetes/pull/117147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc8m-28vv-4pjc\">https://github.com/advisories/GHSA-xc8m-28vv-4pjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc",
            "title": "[k8s.io/kubernetes] Kubelet vulnerable to bypass of seccomp profile enforcement",
            "date_modified": "2023-06-16T19:42:19.000Z",
            "date_published": "2023-06-16T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2431\">https://nvd.nist.gov/vuln/detail/CVE-2023-2431</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/118690\">https://github.com/kubernetes/kubernetes/issues/118690</a></li>\n<li><a href=\"https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10\">https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117020\">https://github.com/kubernetes/kubernetes/pull/117020</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117116\">https://github.com/kubernetes/kubernetes/pull/117116</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117117\">https://github.com/kubernetes/kubernetes/pull/117117</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117118\">https://github.com/kubernetes/kubernetes/pull/117118</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/pull/117147\">https://github.com/kubernetes/kubernetes/pull/117147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc8m-28vv-4pjc\">https://github.com/advisories/GHSA-xc8m-28vv-4pjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc",
            "title": "[k8s.io/kubernetes] Kubelet vulnerable to bypass of seccomp profile enforcement",
            "date_modified": "2023-06-16T19:42:19.000Z",
            "date_published": "2023-06-16T09:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc8m-28vv-4pjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many <code>WANT_BLOCK</code> and or <code>WANT_HAVE</code> requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.\nThis affects users accepting untrusted connections with the Bitswap server, this also affects users using the old API stubs at <code>github.com/ipfs/boxo/bitswap</code> because it transitively uses <code>github.com/ipfs/boxo/bitswap/server</code>.</p>\n<p>We have <a href=\"https://github.com/ipfs/boxo/issues/215\">renamed go-libipfs to boxo</a>; this document uses both terms interchangeably. The version numbers for both are applicable, as they share the same historical timeline.</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>Apply one of:</p>\n<ul>\n<li>Update <code>boxo</code> to <a href=\"https://github.com/ipfs/boxo/releases/tag/v0.6.0\"><code>v0.6.0</code></a> or later</li>\n<li>Update <code>boxo</code> to <a href=\"https://github.com/ipfs/boxo/releases/tag/v0.4.1\"><code>v0.4.1</code></a>\n Note that <em><strong><code>v0.5.0</code> is NOT safe</strong></em>, <code>v0.4.1</code> is a backport of the <code>v0.6.0</code> security fixes on top of <code>v0.4.0</code>.</li>\n</ul>\n<h3 id=\"mitigations\">Mitigations</h3>\n<ol>\n<li>The server now limits how many wantlist entries per peer it knows.\n The <code>MaxQueuedWantlistEntriesPerPeer</code> option allows configuring how many wantlist entries the server remembers; if a peer sends a wantlist bigger than this (including a sum of multiple delta updates) the server will truncate the wantlist to the match the limit.\n This defaults to <code>1024</code> entries per peer.</li>\n<li>The server now properly clears state about peers when they disconnect.\n Peer state is more lazily allocated (only when a wantlist is received in the first place) and is properly cleared when the <code>PeerDisconnected</code> callback is received.</li>\n<li>The server now ignores CIDs above some size.\n Clients were able to send any CID as long as the total protobuf message were bellow the 4MiB limit. This is allowed to allocate lots of memory with very little entries.\n This can be configured using the <code>MaxCidSize</code> option and defaults to <code>168 bytes</code>.</li>\n<li>The server now closes the connection if an inline CID is requested (either as <code>WANT_*</code> or <code>CANCEL</code>).\n The attack were more effective if done with CIDs that are present in target's blockstore, this is because this will push longer-lasting jobs on some priority queue.\n Since inline CID are literal data (instead of hashes of data), everyone always \"has\" any inline CID (since instead of loading the data from disk, it can be extracted from the CID). It makes no sense for anyone to ever ask you about an inline CID since they could also just parse it themselves. Thus, as a defensive measure, we kill the connection with peers that ask about an inline CID.</li>\n</ol>\n<h3 id=\"vulnerable-symbols\">Vulnerable symbols</h3>\n<ul>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).MessageReceived</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).NotifyNewBlocks</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).findOrCreate</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).PeerConnected</code></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197\">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a> (mitigations 1 and 2)</li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916\">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a> (mitigations 3 and 4)</li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974\">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a> (tests)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the stubs at <code>github.com/ipfs/go-libipfs/bitswap</code> and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allow you to run in a client-only mode using: <a href=\"https://pkg.go.dev/github.com/ipfs/boxo/bitswap/client\"><code>github.com/ipfs/boxo/bitswap/client</code></a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25568\">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916\">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197\">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974\">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/advisories/GHSA-m974-xj4j-7qv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m974-xj4j-7qv5",
            "title": "[github.com/ipfs/go-libipfs] Boxo bitswap/server: DOS unbounded persistent memory leak",
            "date_modified": "2023-06-16T17:42:48.000Z",
            "date_published": "2023-05-11T20:32:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m974-xj4j-7qv5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many <code>WANT_BLOCK</code> and or <code>WANT_HAVE</code> requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.\nThis affects users accepting untrusted connections with the Bitswap server, this also affects users using the old API stubs at <code>github.com/ipfs/boxo/bitswap</code> because it transitively uses <code>github.com/ipfs/boxo/bitswap/server</code>.</p>\n<p>We have <a href=\"https://github.com/ipfs/boxo/issues/215\">renamed go-libipfs to boxo</a>; this document uses both terms interchangeably. The version numbers for both are applicable, as they share the same historical timeline.</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>Apply one of:</p>\n<ul>\n<li>Update <code>boxo</code> to <a href=\"https://github.com/ipfs/boxo/releases/tag/v0.6.0\"><code>v0.6.0</code></a> or later</li>\n<li>Update <code>boxo</code> to <a href=\"https://github.com/ipfs/boxo/releases/tag/v0.4.1\"><code>v0.4.1</code></a>\n Note that <em><strong><code>v0.5.0</code> is NOT safe</strong></em>, <code>v0.4.1</code> is a backport of the <code>v0.6.0</code> security fixes on top of <code>v0.4.0</code>.</li>\n</ul>\n<h3 id=\"mitigations\">Mitigations</h3>\n<ol>\n<li>The server now limits how many wantlist entries per peer it knows.\n The <code>MaxQueuedWantlistEntriesPerPeer</code> option allows configuring how many wantlist entries the server remembers; if a peer sends a wantlist bigger than this (including a sum of multiple delta updates) the server will truncate the wantlist to the match the limit.\n This defaults to <code>1024</code> entries per peer.</li>\n<li>The server now properly clears state about peers when they disconnect.\n Peer state is more lazily allocated (only when a wantlist is received in the first place) and is properly cleared when the <code>PeerDisconnected</code> callback is received.</li>\n<li>The server now ignores CIDs above some size.\n Clients were able to send any CID as long as the total protobuf message were bellow the 4MiB limit. This is allowed to allocate lots of memory with very little entries.\n This can be configured using the <code>MaxCidSize</code> option and defaults to <code>168 bytes</code>.</li>\n<li>The server now closes the connection if an inline CID is requested (either as <code>WANT_*</code> or <code>CANCEL</code>).\n The attack were more effective if done with CIDs that are present in target's blockstore, this is because this will push longer-lasting jobs on some priority queue.\n Since inline CID are literal data (instead of hashes of data), everyone always \"has\" any inline CID (since instead of loading the data from disk, it can be extracted from the CID). It makes no sense for anyone to ever ask you about an inline CID since they could also just parse it themselves. Thus, as a defensive measure, we kill the connection with peers that ask about an inline CID.</li>\n</ol>\n<h3 id=\"vulnerable-symbols\">Vulnerable symbols</h3>\n<ul>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).MessageReceived</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).NotifyNewBlocks</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).findOrCreate</code></li>\n<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).PeerConnected</code></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197\">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a> (mitigations 1 and 2)</li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916\">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a> (mitigations 3 and 4)</li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974\">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a> (tests)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the stubs at <code>github.com/ipfs/go-libipfs/bitswap</code> and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allow you to run in a client-only mode using: <a href=\"https://pkg.go.dev/github.com/ipfs/boxo/bitswap/client\"><code>github.com/ipfs/boxo/bitswap/client</code></a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25568\">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916\">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197\">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974\">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/advisories/GHSA-m974-xj4j-7qv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m974-xj4j-7qv5",
            "title": "[github.com/ipfs/go-libipfs] Boxo bitswap/server: DOS unbounded persistent memory leak",
            "date_modified": "2023-06-16T17:42:48.000Z",
            "date_published": "2023-05-11T20:32:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m974-xj4j-7qv5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This package has been moved to <a href=\"https://pkg.go.dev/github.com/ipfs/boxo/bitswap\"><code>github.com/ipfs/boxo/bitswap</code></a>, this vulnerability is tracked there: <a href=\"https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a> (<code>CVE-2023-25568</code>)</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>This is a two step process:</p>\n<ol>\n<li>Apply one of:<ul>\n<li>(<strong>recommended</strong>) upgrade from <code>github.com/ipfs/go-bitswap</code> to <code>github.com/ipfs/boxo/bitswap</code>.</li>\n<li>If you are still using <code>github.com/ipfs/go-bitswap</code> and cannot upgrade to <code>boxo</code>, you can upgrade to <code>github.com/ipfs/go-bitswap@v0.12.0</code>, this will replace the <code>go-bitswap</code> implementation by stubs which points to <code>boxo</code>.</li>\n</ul>\n</li>\n<li>Open <a href=\"https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a> and then follow <code>boxo</code>'s remediation section.</li>\n</ol>\n<h3 id=\"vulnerable-symbols\">Vulnerable symbols</h3>\n<ul>\n<li><code>&gt;= v0.9.0; &lt; v0.12.0</code><ul>\n<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).MessageReceived</code></li>\n<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).NotifyNewBlocks</code></li>\n<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).findOrCreate</code></li>\n<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).PeerConnected</code></li>\n</ul>\n</li>\n<li><code>v0.8.0</code><ul>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).NotifyNewBlocks</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected</code></li>\n</ul>\n</li>\n<li><code>&lt; v0.8.0</code><ul>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).receiveBlocksFrom</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate</code></li>\n<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the stubs at <code>github.com/ipfs/go-bitswap</code> and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allows you to run in a client-only mode using: <a href=\"https://pkg.go.dev/github.com/ipfs/go-bitswap/client\"><code>github.com/ipfs/go-bitswap/client</code></a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://github.com/ipfs/go-bitswap/security/advisories/GHSA-q3j6-22wf-3jh9\">https://github.com/ipfs/go-bitswap/security/advisories/GHSA-q3j6-22wf-3jh9</a></li>\n<li><a href=\"https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5\">https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25568\">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916\">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a></li>\n<li><a href=\"https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197\">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q3j6-22wf-3jh9\">https://github.com/advisories/GHSA-q3j6-22wf-3jh9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q3j6-22wf-3jh9",
            "title": "[github.com/ipfs/go-bitswap] github.com/ipfs/go-bitswap vulnerable to DOS unbounded persistent memory leak",
            "date_modified": "2023-06-16T17:42:10.000Z",
            "date_published": "2023-05-11T20:39:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q3j6-22wf-3jh9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Decrypting AES-CBC encrypted JWE has Potential Padding Oracle Attack Vulnerability.</p>\n<h3 id=\"details\">Details</h3>\n<p>On <a href=\"https://github.com/lestrrat-go/jwx/releases/tag/v2.0.10\">v2.0.10</a>, decrypting AES-CBC encrypted JWE may return an error \"failed to generate plaintext from decrypted blocks: invalid padding\":</p>\n<p><a href=\"https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213\">https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213</a></p>\n<p>Reporting padding error causes <a href=\"https://en.wikipedia.org/wiki/Padding_oracle_attack\">Padding Oracle Attack</a> Vulnerability.\nRFC 7516 JSON Web Encryption (JWE) says that we <strong>MUST NOT</strong> do this.</p>\n<blockquote>\n<p>11.5.  Timing Attacks\nTo mitigate the attacks described in RFC 3218 [RFC3218], the\nrecipient MUST NOT distinguish between format, padding, and length\nerrors of encrypted keys.  It is strongly recommended, in the event\nof receiving an improperly formatted key, that the recipient\nsubstitute a randomly generated CEK and proceed to the next step, to\nmitigate timing attacks.</p>\n</blockquote>\n<p>In addition, the time to remove padding depends on the length of the padding.\nIt may leak the length of the padding by Timing Attacks.</p>\n<p><a href=\"https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66\">https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66</a></p>\n<p>To mitigate Timing Attacks, it MUST be done in constant time.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The authentication tag is verified, so it is not an immediate attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lestrrat-go/jwx/security/advisories/GHSA-rm8v-mxj3-5rmq\">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-rm8v-mxj3-5rmq</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/6c41e3822485fc7e11dd70b4b0524b075d66b103\">https://github.com/lestrrat-go/jwx/commit/6c41e3822485fc7e11dd70b4b0524b075d66b103</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/d9ddbc8e5009cfdd8c28413390b67afa7f576dd6\">https://github.com/lestrrat-go/jwx/commit/d9ddbc8e5009cfdd8c28413390b67afa7f576dd6</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66\">https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213\">https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rm8v-mxj3-5rmq\">https://github.com/advisories/GHSA-rm8v-mxj3-5rmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rm8v-mxj3-5rmq",
            "title": "[github.com/lestrrat-go/jwx] github.com/lestrrat-go/jwx vulnerable to Potential Padding Oracle Attack",
            "date_modified": "2023-06-14T17:24:37.000Z",
            "date_published": "2023-06-14T17:24:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rm8v-mxj3-5rmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Decrypting AES-CBC encrypted JWE has Potential Padding Oracle Attack Vulnerability.</p>\n<h3 id=\"details\">Details</h3>\n<p>On <a href=\"https://github.com/lestrrat-go/jwx/releases/tag/v2.0.10\">v2.0.10</a>, decrypting AES-CBC encrypted JWE may return an error \"failed to generate plaintext from decrypted blocks: invalid padding\":</p>\n<p><a href=\"https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213\">https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213</a></p>\n<p>Reporting padding error causes <a href=\"https://en.wikipedia.org/wiki/Padding_oracle_attack\">Padding Oracle Attack</a> Vulnerability.\nRFC 7516 JSON Web Encryption (JWE) says that we <strong>MUST NOT</strong> do this.</p>\n<blockquote>\n<p>11.5.  Timing Attacks\nTo mitigate the attacks described in RFC 3218 [RFC3218], the\nrecipient MUST NOT distinguish between format, padding, and length\nerrors of encrypted keys.  It is strongly recommended, in the event\nof receiving an improperly formatted key, that the recipient\nsubstitute a randomly generated CEK and proceed to the next step, to\nmitigate timing attacks.</p>\n</blockquote>\n<p>In addition, the time to remove padding depends on the length of the padding.\nIt may leak the length of the padding by Timing Attacks.</p>\n<p><a href=\"https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66\">https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66</a></p>\n<p>To mitigate Timing Attacks, it MUST be done in constant time.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The authentication tag is verified, so it is not an immediate attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lestrrat-go/jwx/security/advisories/GHSA-rm8v-mxj3-5rmq\">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-rm8v-mxj3-5rmq</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/6c41e3822485fc7e11dd70b4b0524b075d66b103\">https://github.com/lestrrat-go/jwx/commit/6c41e3822485fc7e11dd70b4b0524b075d66b103</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/commit/d9ddbc8e5009cfdd8c28413390b67afa7f576dd6\">https://github.com/lestrrat-go/jwx/commit/d9ddbc8e5009cfdd8c28413390b67afa7f576dd6</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66\">https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66</a></li>\n<li><a href=\"https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213\">https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rm8v-mxj3-5rmq\">https://github.com/advisories/GHSA-rm8v-mxj3-5rmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rm8v-mxj3-5rmq",
            "title": "[github.com/lestrrat-go/jwx/v2] github.com/lestrrat-go/jwx vulnerable to Potential Padding Oracle Attack",
            "date_modified": "2023-06-14T17:24:37.000Z",
            "date_published": "2023-06-14T17:24:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rm8v-mxj3-5rmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Olivier Poitrey Go CORS handler through 1.3.0 actively converts a wildcard CORS policy into reflecting an arbitrary Origin header value, which is incompatible with the CORS security design, and could lead to CORS misconfiguration security problems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-20744\">https://nvd.nist.gov/vuln/detail/CVE-2018-20744</a></li>\n<li><a href=\"https://github.com/rs/cors/issues/55\">https://github.com/rs/cors/issues/55</a></li>\n<li><a href=\"https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-chen.pdf\">https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-chen.pdf</a></li>\n<li><a href=\"https://github.com/gofiber/fiber/issues/2338\">https://github.com/gofiber/fiber/issues/2338</a></li>\n<li><a href=\"https://github.com/gofiber/fiber/pull/2339\">https://github.com/gofiber/fiber/pull/2339</a></li>\n<li><a href=\"https://web.archive.org/web/20200227091122/http://www.securityfocus.com/bid/106834\">https://web.archive.org/web/20200227091122/http://www.securityfocus.com/bid/106834</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-927h-x4qj-r242\">https://github.com/advisories/GHSA-927h-x4qj-r242</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-927h-x4qj-r242",
            "title": "[github.com/gofiber/fiber/v2] github.com/gofiber/fiber/v2 vulnerable to Origin Validation Error",
            "date_modified": "2023-06-14T14:53:21.000Z",
            "date_published": "2022-05-14T01:33:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-927h-x4qj-r242"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank <a href=\"https://github.com/DavidKorczynski\">David Korczynski</a> and <a href=\"https://github.com/AdamKorcz\">Adam Korczynski</a> of ADA Logics for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a> during a security fuzzing audit sponsored by CNCF.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2\">https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25153\">https://nvd.nist.gov/vuln/detail/CVE-2023-25153</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4\">https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1573\">https://pkg.go.dev/vuln/GO-2023-1573</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259w-8hf6-59c2\">https://github.com/advisories/GHSA-259w-8hf6-59c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2",
            "title": "[github.com/containerd/containerd] OCI image importer memory exhaustion in github.com/containerd/containerd",
            "date_modified": "2023-06-13T23:55:09.000Z",
            "date_published": "2023-02-16T14:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259w-8hf6-59c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>\n<p>Downstream applications that use the containerd client library may be affected as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that the <code>\"USER $USERNAME\"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT [\"su\", \"-\", \"user\"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>\n<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>\n<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>\n<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>\n</ul>\n<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>\n<li><a href=\"https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4\">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25173\">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a\">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wjj-jwc9-2x96\">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjm8-m7m6-2fjp\">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phjr-8j92-w5v7\">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.5.18\">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v1.6.18\">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>\n<li><a href=\"https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1574\">https://pkg.go.dev/vuln/GO-2023-1574</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmfx-3pcx-653p\">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p",
            "title": "[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd",
            "date_modified": "2023-06-13T23:54:56.000Z",
            "date_published": "2023-02-16T14:11:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmfx-3pcx-653p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When feeding untrusted user input into the size parameter of <code>NewBitfield</code> and <code>FromBytes</code> functions, an attacker can trigger <code>panic</code>s.</p>\n<p>This happen when the <code>size</code> is a not a multiple of <code>8</code> or is negative.\nThere were already a note in the <code>NewBitfield</code> documentation:</p>\n<blockquote>\n<pre><code>Panics if size is not a multiple of 8.\n</code></pre>\n</blockquote>\n<p>But it incomplete and missing from <code>FromBytes</code>'s documentation.</p>\n<p>This has been replaced by returning an <code>(Bitfield, error)</code> and returning a non nil error if the size is wrong.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579\">https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Ensure <code>size%8 == 0 &amp;&amp; size &gt;= 0</code> yourself before calling <code>NewBitfield</code> or <code>FromBytes</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-unixfs/security/advisories/GHSA-q264-w97q-q778\">https://github.com/ipfs/go-unixfs/security/advisories/GHSA-q264-w97q-q778</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r\">https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23626\">https://nvd.nist.gov/vuln/detail/CVE-2023-23626</a></li>\n<li><a href=\"https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579\">https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1558\">https://pkg.go.dev/vuln/GO-2023-1558</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h6c-j3gf-xp9r\">https://github.com/advisories/GHSA-2h6c-j3gf-xp9r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h6c-j3gf-xp9r",
            "title": "[github.com/ipfs/go-bitfield] IPFS go-bitfield vulnerable to DoS via malformed size arguments",
            "date_modified": "2023-06-13T23:53:07.000Z",
            "date_published": "2023-02-10T19:52:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h6c-j3gf-xp9r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31249\">https://nvd.nist.gov/vuln/detail/CVE-2022-31249</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1200299\">https://bugzilla.suse.com/show_bug.cgi?id=1200299</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1519\">https://pkg.go.dev/vuln/GO-2023-1519</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/12397eec50155cb2d24aa70bdf9e90c5f3b9a727\">https://github.com/rancher/wrangler/commit/12397eec50155cb2d24aa70bdf9e90c5f3b9a727</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287\">https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/5a387e13e8d51e3340d9e5012a1951f0cca5fc90\">https://github.com/rancher/wrangler/commit/5a387e13e8d51e3340d9e5012a1951f0cca5fc90</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/8649ecc062204f28764fd80157a621cbae89c9cf\">https://github.com/rancher/wrangler/commit/8649ecc062204f28764fd80157a621cbae89c9cf</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/compare/v0.7.2...v0.7.4-security1\">https://github.com/rancher/wrangler/compare/v0.7.2...v0.7.4-security1</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/compare/v0.8.4...v0.8.5-security1\">https://github.com/rancher/wrangler/compare/v0.8.4...v0.8.5-security1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-06-13T23:49:44.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including <code>v1.0.0</code>.</p>\n<p>Wrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include <code>v1.0.1</code> and later and the backported tags - <code>v0.7.4-security1</code>, <code>v0.8.5-security1</code> and <code>v0.8.11</code>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> or <a href=\"https://github.com/rancher/wrangler/issues/new\">Wrangler</a> repository.</li>\n<li>Verify our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31249\">https://nvd.nist.gov/vuln/detail/CVE-2022-31249</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1200299\">https://bugzilla.suse.com/show_bug.cgi?id=1200299</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2023-1519\">https://pkg.go.dev/vuln/GO-2023-1519</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/12397eec50155cb2d24aa70bdf9e90c5f3b9a727\">https://github.com/rancher/wrangler/commit/12397eec50155cb2d24aa70bdf9e90c5f3b9a727</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287\">https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/5a387e13e8d51e3340d9e5012a1951f0cca5fc90\">https://github.com/rancher/wrangler/commit/5a387e13e8d51e3340d9e5012a1951f0cca5fc90</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/commit/8649ecc062204f28764fd80157a621cbae89c9cf\">https://github.com/rancher/wrangler/commit/8649ecc062204f28764fd80157a621cbae89c9cf</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/compare/v0.7.2...v0.7.4-security1\">https://github.com/rancher/wrangler/compare/v0.7.2...v0.7.4-security1</a></li>\n<li><a href=\"https://github.com/rancher/wrangler/compare/v0.8.4...v0.8.5-security1\">https://github.com/rancher/wrangler/compare/v0.8.4...v0.8.5-security1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qrg7-hfx7-95c5\">https://github.com/advisories/GHSA-qrg7-hfx7-95c5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5",
            "title": "[github.com/rancher/wrangler] Command injection in Git package in Wrangler",
            "date_modified": "2023-06-13T23:49:44.000Z",
            "date_published": "2023-01-25T19:40:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>sjqzhang go-fastdfs up to 1.4.3 is vulnerable to path traversal in the function upload of the file <code>/group1/upload</code> of the component <code>File Upload Handler</code>. The attack may be launched remotely and the exploit has been disclosed to the public and may be used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1800\">https://nvd.nist.gov/vuln/detail/CVE-2023-1800</a></li>\n<li><a href=\"https://github.com/yangyanglo/ForCVE/blob/main/2023-0x05.md\">https://github.com/yangyanglo/ForCVE/blob/main/2023-0x05.md</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.224768\">https://vuldb.com/?ctiid.224768</a></li>\n<li><a href=\"https://vuldb.com/?id.224768\">https://vuldb.com/?id.224768</a></li>\n<li><a href=\"https://github.com/sjqzhang/go-fastdfs/commit/61cbff5124c61e292994099372b11c06cdb5b80b\">https://github.com/sjqzhang/go-fastdfs/commit/61cbff5124c61e292994099372b11c06cdb5b80b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xq3x-grrj-fj6x\">https://github.com/advisories/GHSA-xq3x-grrj-fj6x</a></li>\n<li><a href=\"https://github.com/yangyanglo/ForCVE/blob/93a16663cd32a36d37d8a0f0102e1592254d0279/2023-0x05.md\">https://github.com/yangyanglo/ForCVE/blob/93a16663cd32a36d37d8a0f0102e1592254d0279/2023-0x05.md</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xq3x-grrj-fj6x",
            "title": "[github.com/sjqzhang/go-fastdfs] sjqzhang go-fastdfs vulnerable to path traversal",
            "date_modified": "2023-06-13T23:48:48.000Z",
            "date_published": "2023-04-02T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xq3x-grrj-fj6x"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}