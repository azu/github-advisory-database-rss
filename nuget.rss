<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/nuget.rss</id>
    <title>Security Advisory for .NET packages hosted at the NuGet Gallery</title>
    <updated>2022-11-30T08:01:31.597Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anuget"/>
    <subtitle>Security Advisory for .NET packages hosted at the NuGet Gallery on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[net.sf.mpxj-for-vb] Temporary File Information Disclosure vulnerability in MPXJ]]></title>
        <id>https://github.com/advisories/GHSA-jf2p-4gqj-849g</id>
        <link href="https://github.com/advisories/GHSA-jf2p-4gqj-849g"/>
        <updated>2022-11-28T22:09:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/joniles/mpxj">https://github.com/joniles/mpxj</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41954">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>
<li><a href="https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd">https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd</a></li>
<li><a href="https://github.com/advisories/GHSA-jf2p-4gqj-849g">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf2p-4gqj-849g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.sf.mpxj-for-csharp] Temporary File Information Disclosure vulnerability in MPXJ]]></title>
        <id>https://github.com/advisories/GHSA-jf2p-4gqj-849g</id>
        <link href="https://github.com/advisories/GHSA-jf2p-4gqj-849g"/>
        <updated>2022-11-28T22:09:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/joniles/mpxj">https://github.com/joniles/mpxj</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41954">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>
<li><a href="https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd">https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd</a></li>
<li><a href="https://github.com/advisories/GHSA-jf2p-4gqj-849g">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf2p-4gqj-849g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net.sf.mpxj] Temporary File Information Disclosure vulnerability in MPXJ]]></title>
        <id>https://github.com/advisories/GHSA-jf2p-4gqj-849g</id>
        <link href="https://github.com/advisories/GHSA-jf2p-4gqj-849g"/>
        <updated>2022-11-28T22:09:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/joniles/mpxj">https://github.com/joniles/mpxj</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41954">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>
<li><a href="https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd">https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd</a></li>
<li><a href="https://github.com/advisories/GHSA-jf2p-4gqj-849g">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf2p-4gqj-849g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[DotNetCasClient] Jasig Java CAS Client, .NET CAS Client, and phpCAS contain URL parameter injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9fc5-q25c-r2wr</id>
        <link href="https://github.com/advisories/GHSA-9fc5-q25c-r2wr"/>
        <updated>2022-11-22T19:02:32.000Z</updated>
        <content type="html"><![CDATA[<p>A URL parameter injection vulnerability was found in the back-channel ticket validation step of the CAS protocol in Jasig Java CAS Client before 3.3.2, .NET CAS Client before 1.0.2, and phpCAS before 1.3.3 that allow remote attackers to inject arbitrary web script or HTML via the (1) service parameter to validation/AbstractUrlBasedTicketValidator.java or (2) pgtUrl parameter to validation/Cas20ServiceTicketValidator.java.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-4172">https://nvd.nist.gov/vuln/detail/CVE-2014-4172</a></li>
<li><a href="https://github.com/Jasig/phpCAS/pull/125">https://github.com/Jasig/phpCAS/pull/125</a></li>
<li><a href="https://github.com/Jasig/dotnet-cas-client/commit/f0e030014fb7a39e5f38469f43199dc590fd0e8d">https://github.com/Jasig/dotnet-cas-client/commit/f0e030014fb7a39e5f38469f43199dc590fd0e8d</a></li>
<li><a href="https://github.com/Jasig/java-cas-client/commit/ae37092100c8eaec610dab6d83e5e05a8ee58814">https://github.com/Jasig/java-cas-client/commit/ae37092100c8eaec610dab6d83e5e05a8ee58814</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=759718">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=759718</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1131350">https://bugzilla.redhat.com/show_bug.cgi?id=1131350</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/95673">https://exchange.xforce.ibmcloud.com/vulnerabilities/95673</a></li>
<li><a href="https://github.com/Jasig/phpCAS/blob/master/docs/ChangeLog">https://github.com/Jasig/phpCAS/blob/master/docs/ChangeLog</a></li>
<li><a href="https://issues.jasig.org/browse/CASC-228">https://issues.jasig.org/browse/CASC-228</a></li>
<li><a href="https://www.debian.org/security/2014/dsa-3017.en.html">https://www.debian.org/security/2014/dsa-3017.en.html</a></li>
<li><a href="https://www.mail-archive.com/cas-user@lists.jasig.org/msg17338.html">https://www.mail-archive.com/cas-user@lists.jasig.org/msg17338.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2014-August/137182.html">http://lists.fedoraproject.org/pipermail/package-announce/2014-August/137182.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9fc5-q25c-r2wr">https://github.com/advisories/GHSA-9fc5-q25c-r2wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fc5-q25c-r2wr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T19:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Akka] Remote code execution vulnerability in dependency System.Drawing.Common]]></title>
        <id>https://github.com/advisories/GHSA-gpv5-rp6w-58r8</id>
        <link href="https://github.com/advisories/GHSA-gpv5-rp6w-58r8"/>
        <updated>2022-11-22T00:13:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The core Akka module depended on an old System.Configuration.ConfigurationManager version 4.7.0 which transitively depends on System.Common.Drawing v4.7.0. The System.Common.Drawing v4.7.0 is affected by a remote code execution vulnerability <a href="https://github.com/advisories/GHSA-ghhp-997w-qr28">https://github.com/advisories/GHSA-ghhp-997w-qr28</a>.</p>
<p>The real-world impact of this should be low, but users should be advised to upgrade to later versions of Akka.NET.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue is resolved in Akka.NET v1.4.46 and Akka.NET v1.5.0-alpha3.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>You might be able to explicitly reference System.Configuration.ConfigurationManager's NuGet package and upgrade to 6.0.1 or later without upgrading Akka.NET, but it's probably best to upgrade Akka.NET itself.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Original issue: <a href="https://github.com/akkadotnet/akka.net/issues/6226">https://github.com/akkadotnet/akka.net/issues/6226</a>
MSFT advisory: <a href="https://github.com/advisories/GHSA-ghhp-997w-qr28">https://github.com/advisories/GHSA-ghhp-997w-qr28</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/akkadotnet/akka.net/issues/new">the Akka.NET repository</a></li>
<li>Contact us on <a href="https://discord.gg/GSCfPwhbWP">the Akka.NET Discord</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/akkadotnet/akka.net/security/advisories/GHSA-gpv5-rp6w-58r8">https://github.com/akkadotnet/akka.net/security/advisories/GHSA-gpv5-rp6w-58r8</a></li>
<li><a href="https://github.com/advisories/GHSA-gpv5-rp6w-58r8">https://github.com/advisories/GHSA-gpv5-rp6w-58r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gpv5-rp6w-58r8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-22T00:13:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Akka] Remote code execution vulnerability in dependency System.Drawing.Common]]></title>
        <id>https://github.com/advisories/GHSA-gpv5-rp6w-58r8</id>
        <link href="https://github.com/advisories/GHSA-gpv5-rp6w-58r8"/>
        <updated>2022-11-22T00:13:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The core Akka module depended on an old System.Configuration.ConfigurationManager version 4.7.0 which transitively depends on System.Common.Drawing v4.7.0. The System.Common.Drawing v4.7.0 is affected by a remote code execution vulnerability <a href="https://github.com/advisories/GHSA-ghhp-997w-qr28">https://github.com/advisories/GHSA-ghhp-997w-qr28</a>.</p>
<p>The real-world impact of this should be low, but users should be advised to upgrade to later versions of Akka.NET.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue is resolved in Akka.NET v1.4.46 and Akka.NET v1.5.0-alpha3.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>You might be able to explicitly reference System.Configuration.ConfigurationManager's NuGet package and upgrade to 6.0.1 or later without upgrading Akka.NET, but it's probably best to upgrade Akka.NET itself.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Original issue: <a href="https://github.com/akkadotnet/akka.net/issues/6226">https://github.com/akkadotnet/akka.net/issues/6226</a>
MSFT advisory: <a href="https://github.com/advisories/GHSA-ghhp-997w-qr28">https://github.com/advisories/GHSA-ghhp-997w-qr28</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/akkadotnet/akka.net/issues/new">the Akka.NET repository</a></li>
<li>Contact us on <a href="https://discord.gg/GSCfPwhbWP">the Akka.NET Discord</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/akkadotnet/akka.net/security/advisories/GHSA-gpv5-rp6w-58r8">https://github.com/akkadotnet/akka.net/security/advisories/GHSA-gpv5-rp6w-58r8</a></li>
<li><a href="https://github.com/advisories/GHSA-gpv5-rp6w-58r8">https://github.com/advisories/GHSA-gpv5-rp6w-58r8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gpv5-rp6w-58r8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-22T00:13:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.Data.SqlClient] .NET Information Disclosure Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</id>
        <link href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc"/>
        <updated>2022-11-10T12:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>Microsoft is releasing this security advisory to provide information about a vulnerability in .NET, .NET Core and .NET Framework's System.Data.SqlClient and Microsoft.Data.SqlClient NuGet Packages.</p>
<p>A vulnerability exists in System.Data.SqlClient and Microsoft.Data.SqlClient libraries where a timeout occurring under high load can cause incorrect data to be returned as the result of an asynchronously executed query.</p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>If you are not talking to Microsoft SQL Server from your application you are not affected by this vulnerability.</p>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>.NET has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package. </p>
<p>For example, the Microsoft.AspNetCore.Mvc package depends on the Microsoft.AspNetCore.Mvc.Core package. When you add a dependency on Microsoft.AspNetCore.Mvc in your project, you're taking a transitive dependency on Microsoft.AspNetCore.Mvc.Core. </p>
<p>Any application that has a direct or transitive dependency on the  <a href="#affected-packages">affected packages</a> listed above are vulnerable.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ul>
<li>If you are using System.Data.SqlClient on .NET Framework you must install the November update for .NET Framework</li>
<li>If you are using System.Data.SqlClient on .NET Core, .NET 5 or .NET 6 you must update the nuget package to an updated version as listed in the <a href="#affected-packages">affected packages</a>.</li>
<li>If you are using Microsoft.Data.SqlClient, anywhere (.NET Core, .NET 5/6, .NET Framework) and you are using a version that is vulnerable you must update as listed in the <a href="#affected-packages">affected packages</a>.</li>
</ul>
<p><strong>Additional Details</strong></p>
<p>.NET and .NET Framework projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency. </p>
<p>Additionally, .NET Framework users must also install the November 2022 security patch to be protected. </p>
<h4 id="direct-dependencies">Direct dependencies</h4>
<p>Direct dependencies are discoverable by examining your csproj file. They can be fixed by editing the project file or using nuget command line to update the dependency. </p>
<h4 id="transitive-dependencies">Transitive dependencies</h4>
<p>Transitive dependencies occur when you add a package to your project that in turn relies on another package. Transitive dependencies can be discovered by searching the project.assets.json file for each of your projects. This file is produced on each build and is in the obj directory for each project. </p>
<p>The project.assets.json files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies. </p>
<h4 id="fixing-direct-dependencies">Fixing direct dependencies</h4>
<p>Direct dependencies are nuget packages that have been specifically added to a project, rather than being pulled in because a nuget package added requires it. They can be seen in the solution explorer in Visual Studio or by opening the csproj for the project and examining the packageReference nodes for the package name, specified by the Include parameter, and its version, specified by the Version parameter.  </p>
<p>For example, the following project file has a direct dependency on version 2.1.1 of Microsoft.Data.SqlClient. </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<h4 id="fixing-direct-dependencies-with-the-nuget-command-line">Fixing direct dependencies with the nuget command line</h4>
<p>Open a command line to the directory holding your project </p>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient between 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you are using a version of System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<h4 id="fixing-direct-dependencies-by-editing-the-project-file">Fixing direct dependencies by editing the project file</h4>
<p>Open projectname.csproj in your editor. If you're using Visual Studio, right-click the project and choose Edit projectname.csproj from the context menu, where projectname is the name of your project.  </p>
<p>Look for PackageReference elements. The following shows an example project file: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>The preceding example has a reference tone of the vulnerable packages as seen by the single PackageReference element. The name of the package is in the Include attribute. 
The package version number is in the Version attribute. </p>
<p>To update the version to the secure package, change the version number to the updated package version as listed in the Affected software section of this document. </p>
<p>In this example, update Microsoft.Data.SqlClient to the appropriate fixed version for your major version. Save the csproj file. The example csproj now looks as follows: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt;
</code></pre>
<p>If you're using Visual Studio and you save your updated csproj file, Visual Studio will restore the new package version. </p>
<p>You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the updated dependencies. </p>
<p>Now recompile your application. If after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to versions that take a dependency on the updated package. </p>
<h4 id="discovering-and-fixing-transitive-dependencies">Discovering and fixing transitive dependencies</h4>
<p>Rebuild your solution and then open the project.assets.json file from in each of your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Both Visual Studio and Visual Studio Code provide JSON friendly editing. </p>
<p>Search the project.assets.json file for the vulnerable packages above using the format packagename/ for each of the package names from the preceding table. If you find the assembly name in your search: </p>
<p>Examine the line on which they are found, the version number is after the /. </p>
<p>Compare to the vulnerable versions </p>
<p>For example, a search result that shows "Microsoft.Data.SqlClient": "2.1.0" is a reference to version 2.1.0 of Microsoft.Data.SqlClient If your project.assets.json file includes vulnerable versions of the nuget packages then you need to fix the transitive dependencies. </p>
<p>If you have not found any reference to any vulnerable packages, this means either </p>
<p>None of your direct dependencies depend on any vulnerable packages, or </p>
<p>You have already fixed the problem by updating the direct dependencies. </p>
<p>If your transitive dependency review found references to the vulnerable package, you must add a direct dependency to the updated package to your csproj file to override the transitive dependency. </p>
<h4 id="editing-projects-to-fix-transitive-dependencies">Editing projects to fix transitive dependencies</h4>
<p>Open projectname.csproj in your editor. Look for PackageReference nodes, for example: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>You must add a direct dependency to the updated, matching major/minor version of the vulnerable by adding it to the csproj file. This is done by adding a new line to the dependencies section, referencing the fixed version. For example,  </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>After you've added the direct dependency reference, save your csproj file. </p>
<p>If you're using Visual Studio, save your updated csproj file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="using-the-nuget-command-line-to-fix-transitive-dependencies">Using the nuget command line to fix transitive dependencies</h4>
<p>Open a command window and change directory to your project directory.  </p>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient between versions 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<p>Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="rebuilding-your-application">Rebuilding your application</h4>
<p>Finally, you must rebuild your application, test, and redeploy. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (November 8, 2022): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2022-11-08</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/78042">https://github.com/dotnet/runtime/issues/78042</a></li>
<li><a href="https://www.nuget.org/packages/Microsoft.Data.SqlClient/">https://www.nuget.org/packages/Microsoft.Data.SqlClient/</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41064">https://nvd.nist.gov/vuln/detail/CVE-2022-41064</a></li>
<li><a href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T23:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[System.Data.SqlClient] .NET Information Disclosure Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</id>
        <link href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc"/>
        <updated>2022-11-10T12:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>Microsoft is releasing this security advisory to provide information about a vulnerability in .NET, .NET Core and .NET Framework's System.Data.SqlClient and Microsoft.Data.SqlClient NuGet Packages.</p>
<p>A vulnerability exists in System.Data.SqlClient and Microsoft.Data.SqlClient libraries where a timeout occurring under high load can cause incorrect data to be returned as the result of an asynchronously executed query.</p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>If you are not talking to Microsoft SQL Server from your application you are not affected by this vulnerability.</p>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>.NET has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package. </p>
<p>For example, the Microsoft.AspNetCore.Mvc package depends on the Microsoft.AspNetCore.Mvc.Core package. When you add a dependency on Microsoft.AspNetCore.Mvc in your project, you're taking a transitive dependency on Microsoft.AspNetCore.Mvc.Core. </p>
<p>Any application that has a direct or transitive dependency on the  <a href="#affected-packages">affected packages</a> listed above are vulnerable.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ul>
<li>If you are using System.Data.SqlClient on .NET Framework you must install the November update for .NET Framework</li>
<li>If you are using System.Data.SqlClient on .NET Core, .NET 5 or .NET 6 you must update the nuget package to an updated version as listed in the <a href="#affected-packages">affected packages</a>.</li>
<li>If you are using Microsoft.Data.SqlClient, anywhere (.NET Core, .NET 5/6, .NET Framework) and you are using a version that is vulnerable you must update as listed in the <a href="#affected-packages">affected packages</a>.</li>
</ul>
<p><strong>Additional Details</strong></p>
<p>.NET and .NET Framework projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency. </p>
<p>Additionally, .NET Framework users must also install the November 2022 security patch to be protected. </p>
<h4 id="direct-dependencies">Direct dependencies</h4>
<p>Direct dependencies are discoverable by examining your csproj file. They can be fixed by editing the project file or using nuget command line to update the dependency. </p>
<h4 id="transitive-dependencies">Transitive dependencies</h4>
<p>Transitive dependencies occur when you add a package to your project that in turn relies on another package. Transitive dependencies can be discovered by searching the project.assets.json file for each of your projects. This file is produced on each build and is in the obj directory for each project. </p>
<p>The project.assets.json files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies. </p>
<h4 id="fixing-direct-dependencies">Fixing direct dependencies</h4>
<p>Direct dependencies are nuget packages that have been specifically added to a project, rather than being pulled in because a nuget package added requires it. They can be seen in the solution explorer in Visual Studio or by opening the csproj for the project and examining the packageReference nodes for the package name, specified by the Include parameter, and its version, specified by the Version parameter.  </p>
<p>For example, the following project file has a direct dependency on version 2.1.1 of Microsoft.Data.SqlClient. </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<h4 id="fixing-direct-dependencies-with-the-nuget-command-line">Fixing direct dependencies with the nuget command line</h4>
<p>Open a command line to the directory holding your project </p>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient between 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you are using a version of System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<h4 id="fixing-direct-dependencies-by-editing-the-project-file">Fixing direct dependencies by editing the project file</h4>
<p>Open projectname.csproj in your editor. If you're using Visual Studio, right-click the project and choose Edit projectname.csproj from the context menu, where projectname is the name of your project.  </p>
<p>Look for PackageReference elements. The following shows an example project file: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>The preceding example has a reference tone of the vulnerable packages as seen by the single PackageReference element. The name of the package is in the Include attribute. 
The package version number is in the Version attribute. </p>
<p>To update the version to the secure package, change the version number to the updated package version as listed in the Affected software section of this document. </p>
<p>In this example, update Microsoft.Data.SqlClient to the appropriate fixed version for your major version. Save the csproj file. The example csproj now looks as follows: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt;
</code></pre>
<p>If you're using Visual Studio and you save your updated csproj file, Visual Studio will restore the new package version. </p>
<p>You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the updated dependencies. </p>
<p>Now recompile your application. If after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to versions that take a dependency on the updated package. </p>
<h4 id="discovering-and-fixing-transitive-dependencies">Discovering and fixing transitive dependencies</h4>
<p>Rebuild your solution and then open the project.assets.json file from in each of your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Both Visual Studio and Visual Studio Code provide JSON friendly editing. </p>
<p>Search the project.assets.json file for the vulnerable packages above using the format packagename/ for each of the package names from the preceding table. If you find the assembly name in your search: </p>
<p>Examine the line on which they are found, the version number is after the /. </p>
<p>Compare to the vulnerable versions </p>
<p>For example, a search result that shows "Microsoft.Data.SqlClient": "2.1.0" is a reference to version 2.1.0 of Microsoft.Data.SqlClient If your project.assets.json file includes vulnerable versions of the nuget packages then you need to fix the transitive dependencies. </p>
<p>If you have not found any reference to any vulnerable packages, this means either </p>
<p>None of your direct dependencies depend on any vulnerable packages, or </p>
<p>You have already fixed the problem by updating the direct dependencies. </p>
<p>If your transitive dependency review found references to the vulnerable package, you must add a direct dependency to the updated package to your csproj file to override the transitive dependency. </p>
<h4 id="editing-projects-to-fix-transitive-dependencies">Editing projects to fix transitive dependencies</h4>
<p>Open projectname.csproj in your editor. Look for PackageReference nodes, for example: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>You must add a direct dependency to the updated, matching major/minor version of the vulnerable by adding it to the csproj file. This is done by adding a new line to the dependencies section, referencing the fixed version. For example,  </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>After you've added the direct dependency reference, save your csproj file. </p>
<p>If you're using Visual Studio, save your updated csproj file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="using-the-nuget-command-line-to-fix-transitive-dependencies">Using the nuget command line to fix transitive dependencies</h4>
<p>Open a command window and change directory to your project directory.  </p>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient between versions 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<p>Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="rebuilding-your-application">Rebuilding your application</h4>
<p>Finally, you must rebuild your application, test, and redeploy. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (November 8, 2022): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2022-11-08</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/78042">https://github.com/dotnet/runtime/issues/78042</a></li>
<li><a href="https://www.nuget.org/packages/Microsoft.Data.SqlClient/">https://www.nuget.org/packages/Microsoft.Data.SqlClient/</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41064">https://nvd.nist.gov/vuln/detail/CVE-2022-41064</a></li>
<li><a href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T23:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.Data.SqlClient] .NET Information Disclosure Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</id>
        <link href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc"/>
        <updated>2022-11-10T12:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>Microsoft is releasing this security advisory to provide information about a vulnerability in .NET, .NET Core and .NET Framework's System.Data.SqlClient and Microsoft.Data.SqlClient NuGet Packages.</p>
<p>A vulnerability exists in System.Data.SqlClient and Microsoft.Data.SqlClient libraries where a timeout occurring under high load can cause incorrect data to be returned as the result of an asynchronously executed query.</p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>If you are not talking to Microsoft SQL Server from your application you are not affected by this vulnerability.</p>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>.NET has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package. </p>
<p>For example, the Microsoft.AspNetCore.Mvc package depends on the Microsoft.AspNetCore.Mvc.Core package. When you add a dependency on Microsoft.AspNetCore.Mvc in your project, you're taking a transitive dependency on Microsoft.AspNetCore.Mvc.Core. </p>
<p>Any application that has a direct or transitive dependency on the  <a href="#affected-packages">affected packages</a> listed above are vulnerable.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ul>
<li>If you are using System.Data.SqlClient on .NET Framework you must install the November update for .NET Framework</li>
<li>If you are using System.Data.SqlClient on .NET Core, .NET 5 or .NET 6 you must update the nuget package to an updated version as listed in the <a href="#affected-packages">affected packages</a>.</li>
<li>If you are using Microsoft.Data.SqlClient, anywhere (.NET Core, .NET 5/6, .NET Framework) and you are using a version that is vulnerable you must update as listed in the <a href="#affected-packages">affected packages</a>.</li>
</ul>
<p><strong>Additional Details</strong></p>
<p>.NET and .NET Framework projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency. </p>
<p>Additionally, .NET Framework users must also install the November 2022 security patch to be protected. </p>
<h4 id="direct-dependencies">Direct dependencies</h4>
<p>Direct dependencies are discoverable by examining your csproj file. They can be fixed by editing the project file or using nuget command line to update the dependency. </p>
<h4 id="transitive-dependencies">Transitive dependencies</h4>
<p>Transitive dependencies occur when you add a package to your project that in turn relies on another package. Transitive dependencies can be discovered by searching the project.assets.json file for each of your projects. This file is produced on each build and is in the obj directory for each project. </p>
<p>The project.assets.json files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies. </p>
<h4 id="fixing-direct-dependencies">Fixing direct dependencies</h4>
<p>Direct dependencies are nuget packages that have been specifically added to a project, rather than being pulled in because a nuget package added requires it. They can be seen in the solution explorer in Visual Studio or by opening the csproj for the project and examining the packageReference nodes for the package name, specified by the Include parameter, and its version, specified by the Version parameter.  </p>
<p>For example, the following project file has a direct dependency on version 2.1.1 of Microsoft.Data.SqlClient. </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<h4 id="fixing-direct-dependencies-with-the-nuget-command-line">Fixing direct dependencies with the nuget command line</h4>
<p>Open a command line to the directory holding your project </p>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient between 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you are using a version of Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you are using a version of System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<h4 id="fixing-direct-dependencies-by-editing-the-project-file">Fixing direct dependencies by editing the project file</h4>
<p>Open projectname.csproj in your editor. If you're using Visual Studio, right-click the project and choose Edit projectname.csproj from the context menu, where projectname is the name of your project.  </p>
<p>Look for PackageReference elements. The following shows an example project file: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.1" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>The preceding example has a reference tone of the vulnerable packages as seen by the single PackageReference element. The name of the package is in the Include attribute. 
The package version number is in the Version attribute. </p>
<p>To update the version to the secure package, change the version number to the updated package version as listed in the Affected software section of this document. </p>
<p>In this example, update Microsoft.Data.SqlClient to the appropriate fixed version for your major version. Save the csproj file. The example csproj now looks as follows: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt;
</code></pre>
<p>If you're using Visual Studio and you save your updated csproj file, Visual Studio will restore the new package version. </p>
<p>You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the updated dependencies. </p>
<p>Now recompile your application. If after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to versions that take a dependency on the updated package. </p>
<h4 id="discovering-and-fixing-transitive-dependencies">Discovering and fixing transitive dependencies</h4>
<p>Rebuild your solution and then open the project.assets.json file from in each of your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Both Visual Studio and Visual Studio Code provide JSON friendly editing. </p>
<p>Search the project.assets.json file for the vulnerable packages above using the format packagename/ for each of the package names from the preceding table. If you find the assembly name in your search: </p>
<p>Examine the line on which they are found, the version number is after the /. </p>
<p>Compare to the vulnerable versions </p>
<p>For example, a search result that shows "Microsoft.Data.SqlClient": "2.1.0" is a reference to version 2.1.0 of Microsoft.Data.SqlClient If your project.assets.json file includes vulnerable versions of the nuget packages then you need to fix the transitive dependencies. </p>
<p>If you have not found any reference to any vulnerable packages, this means either </p>
<p>None of your direct dependencies depend on any vulnerable packages, or </p>
<p>You have already fixed the problem by updating the direct dependencies. </p>
<p>If your transitive dependency review found references to the vulnerable package, you must add a direct dependency to the updated package to your csproj file to override the transitive dependency. </p>
<h4 id="editing-projects-to-fix-transitive-dependencies">Editing projects to fix transitive dependencies</h4>
<p>Open projectname.csproj in your editor. Look for PackageReference nodes, for example: </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>You must add a direct dependency to the updated, matching major/minor version of the vulnerable by adding it to the csproj file. This is done by adding a new line to the dependencies section, referencing the fixed version. For example,  </p>
<pre><code>&lt;Project Sdk="Microsoft.NET.Sdk.Web"&gt; 

  &lt;PropertyGroup&gt; 
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt; 
    &lt;Nullable&gt;enable&lt;/Nullable&gt; 
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt; 
  &lt;/PropertyGroup&gt; 

  &lt;ItemGroup&gt; 
    &lt;PackageReference Include="IndirectDependency" Version="1.0.0" /&gt; 
    &lt;PackageReference Include="Microsoft.Data.SqlClient" Version="2.1.2" /&gt; 
  &lt;/ItemGroup&gt; 

&lt;/Project&gt; 
</code></pre>
<p>After you've added the direct dependency reference, save your csproj file. </p>
<p>If you're using Visual Studio, save your updated csproj file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager. </p>
<p>If you're not using Visual Studio, open a command line and change to your project directory. Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="using-the-nuget-command-line-to-fix-transitive-dependencies">Using the nuget command line to fix transitive dependencies</h4>
<p>Open a command window and change directory to your project directory.  </p>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient between versions 2.0.0 and 2.1.1 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 2.1.2 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on Microsoft.Data.SqlClient below 1.1.4 </p>
<blockquote>
<p>dotnet add package Microsoft.Data.SqlClient --version 1.1.4 </p>
</blockquote>
<p>Run the following command if you have an indirect dependency on System.Data.SqlClient below 4.8.4 </p>
<blockquote>
<p>dotnet add package System.Data.SqlClient --version 4.8.5 </p>
</blockquote>
<p>Execute the dotnet restore command to restore the new dependencies. </p>
<h4 id="rebuilding-your-application">Rebuilding your application</h4>
<p>Finally, you must rebuild your application, test, and redeploy. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (November 8, 2022): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2022-11-08</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/dotnet/corefx/security/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/78042">https://github.com/dotnet/runtime/issues/78042</a></li>
<li><a href="https://www.nuget.org/packages/Microsoft.Data.SqlClient/">https://www.nuget.org/packages/Microsoft.Data.SqlClient/</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41064</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41064">https://nvd.nist.gov/vuln/detail/CVE-2022-41064</a></li>
<li><a href="https://github.com/advisories/GHSA-8g2p-5pqh-5jmc">https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g2p-5pqh-5jmc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T23:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.AspNetCore.App.Runtime.linux-musl-arm] ASP.NET Core and Visual Studio Denial of Service Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-242j-2gm6-5rwx</id>
        <link href="https://github.com/advisories/GHSA-242j-2gm6-5rwx"/>
        <updated>2022-11-03T18:38:09.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability exists in the way Kestrel parses HTTP/2 requests. The security update addresses the vulnerability by fixing the way the Kestrel parses HTTP/2 requests. Users are advised to upgrade.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1723">https://nvd.nist.gov/vuln/detail/CVE-2021-1723</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3L27CGRVEWUPELNJOGTCW6GLEDBECB4B/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3L27CGRVEWUPELNJOGTCW6GLEDBECB4B/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RRXHERXW4KR5WCP76UDW5PC7GX3YQLUW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RRXHERXW4KR5WCP76UDW5PC7GX3YQLUW/</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1723">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1723</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/170">https://github.com/dotnet/announcements/issues/170</a></li>
<li><a href="https://github.com/advisories/GHSA-242j-2gm6-5rwx">https://github.com/advisories/GHSA-242j-2gm6-5rwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-242j-2gm6-5rwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:38:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.AspNetCore.Http] Cookie parsing failure]]></title>
        <id>https://github.com/advisories/GHSA-hxrm-9w7p-39cc</id>
        <link href="https://github.com/advisories/GHSA-hxrm-9w7p-39cc"/>
        <updated>2022-11-23T18:46:46.000Z</updated>
        <content type="html"><![CDATA[<p>A security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.The ASP.NET Core cookie parser decodes entire cookie strings which could allow a malicious attacker to set a second cookie with the name being percent encoded.The security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names., aka 'Microsoft ASP.NET Core Security Feature Bypass Vulnerability'.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1045">https://nvd.nist.gov/vuln/detail/CVE-2020-1045</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5LN2FUVBSVPGK7AU3NMLO3YR6CGONQPB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5LN2FUVBSVPGK7AU3NMLO3YR6CGONQPB/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ASICXQXS4M7MTAF6SGQMCLCA63DLCUT3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ASICXQXS4M7MTAF6SGQMCLCA63DLCUT3/</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1045">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1045</a></li>
<li><a href="https://github.com/github/advisory-database/issues/302">https://github.com/github/advisory-database/issues/302</a></li>
<li><a href="https://github.com/dotnet/aspnetcore/pull/24264">https://github.com/dotnet/aspnetcore/pull/24264</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/165">https://github.com/dotnet/announcements/issues/165</a></li>
<li><a href="https://github.com/dotnet/aspnetcore/issues/25701">https://github.com/dotnet/aspnetcore/issues/25701</a></li>
<li><a href="https://github.com/dotnet/aspnetcore/issues/25701#issuecomment-689434477">https://github.com/dotnet/aspnetcore/issues/25701#issuecomment-689434477</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:3699">https://access.redhat.com/errata/RHSA-2020:3699</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.8/3.1.8.md#changes-in-318">https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.8/3.1.8.md#changes-in-318</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RHEL8-DOTNET-1439600">https://security.snyk.io/vuln/SNYK-RHEL8-DOTNET-1439600</a></li>
<li><a href="https://github.com/advisories/GHSA-hxrm-9w7p-39cc">https://github.com/advisories/GHSA-hxrm-9w7p-39cc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hxrm-9w7p-39cc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:27:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.win-x86] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.win-x64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.win-arm64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.win-arm] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.tvos-x64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.tvos-arm64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.osx-x64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.linux-x64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Microsoft.NETCore.App.Runtime.linux-musl-x64] Denial of service in .NET core]]></title>
        <id>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</id>
        <link href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw"/>
        <updated>2022-11-01T21:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>.NET Core and Visual Studio Denial of Service Vulnerability due to a vulnerability which exists when creating HTTPS web request during X509 certificate chain building.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-1721">https://nvd.nist.gov/vuln/detail/CVE-2021-1721</a></li>
<li><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1721</a></li>
<li><a href="https://github.com/dotnet/announcements/issues/175">https://github.com/dotnet/announcements/issues/175</a></li>
<li><a href="https://github.com/dotnet/runtime/issues/48067">https://github.com/dotnet/runtime/issues/48067</a></li>
<li><a href="https://github.com/advisories/GHSA-3gp9-h8hw-pxpw">https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gp9-h8hw-pxpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:43:10.000Z</published>
    </entry>
</feed>