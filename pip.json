{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>TensorFlow before 1.7.0 has an integer overflow that causes an out-of-bounds read, possibly causing disclosure of the contents of process memory. This occurs in the DecodeBmp feature of the BMP decoder in <code>core/kernels/decode_bmp_op.cc</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-21233\">https://nvd.nist.gov/vuln/detail/CVE-2018-21233</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/49f73c55d56edffebde4bca4a407ad69c1cae433\">https://github.com/tensorflow/tensorflow/commit/49f73c55d56edffebde4bca4a407ad69c1cae433</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-001.md\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-001.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h98h-8mxr-m8gx\">https://github.com/advisories/GHSA-h98h-8mxr-m8gx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h98h-8mxr-m8gx",
            "title": "[tensorflow-gpu] Out-of-bounds read in TensorFlow possibly causing disclosure of the contents of process memory.",
            "date_modified": "2024-08-28T13:31:37.000Z",
            "date_published": "2020-05-13T16:01:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h98h-8mxr-m8gx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>TensorFlow before 1.7.0 has an integer overflow that causes an out-of-bounds read, possibly causing disclosure of the contents of process memory. This occurs in the DecodeBmp feature of the BMP decoder in <code>core/kernels/decode_bmp_op.cc</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-21233\">https://nvd.nist.gov/vuln/detail/CVE-2018-21233</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/49f73c55d56edffebde4bca4a407ad69c1cae433\">https://github.com/tensorflow/tensorflow/commit/49f73c55d56edffebde4bca4a407ad69c1cae433</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-001.md\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-001.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h98h-8mxr-m8gx\">https://github.com/advisories/GHSA-h98h-8mxr-m8gx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h98h-8mxr-m8gx",
            "title": "[tensorflow] Out-of-bounds read in TensorFlow possibly causing disclosure of the contents of process memory.",
            "date_modified": "2024-08-28T13:31:37.000Z",
            "date_published": "2020-05-13T16:01:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h98h-8mxr-m8gx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow-gpu] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow-gpu] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow-cpu] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow-cpu] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow-gpu] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow-gpu] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow-cpu] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow-cpu] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow-gpu] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow-gpu] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow-cpu] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow-cpu] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<p>This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15214\">https://nvd.nist.gov/vuln/detail/CVE-2020-15214</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2cq-cprg-frvm\">https://github.com/advisories/GHSA-p2cq-cprg-frvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm",
            "title": "[tensorflow] Out of bounds write in tensorflow-lite",
            "date_modified": "2024-08-28T13:24:11.000Z",
            "date_published": "2020-09-25T18:28:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps.</p>\n<p>However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15213\">https://nvd.nist.gov/vuln/detail/CVE-2020-15213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjmq-236j-8m87\">https://github.com/advisories/GHSA-hjmq-236j-8m87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87",
            "title": "[tensorflow] Denial of service in tensorflow-lite",
            "date_modified": "2024-08-28T13:27:32.000Z",
            "date_published": "2020-09-25T18:28:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjmq-236j-8m87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In TensorFlow Lite models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor:\n<a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></p>\n<p>Users having access to <code>segment_ids_data</code> can alter <code>output_index</code> and then write to outside of <code>output_data</code> buffer.</p>\n<p>This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in 204945b and will release patch releases for all affected versions.</p>\n<p>We recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A potential workaround would be to add a custom <code>Verifier</code> to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model.</p>\n<p>A similar validation could be done if the segment ids are generated at runtime between inference steps.</p>\n<p>If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been discovered from a variant analysis of <a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm\">GHSA-p2cq-cprg-frvm</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a\">https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15212\">https://nvd.nist.gov/vuln/detail/CVE-2020-15212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a\">https://github.com/tensorflow/tensorflow/commit/00c7ed7ce81c2126ebc17dfe7073b5c0efd5ec0a</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827\">https://github.com/tensorflow/tensorflow/commit/a4030d8ba3692c438997c27be2dd95f3d5f54827</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\">https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx2x-85gr-wrpq\">https://github.com/advisories/GHSA-hx2x-85gr-wrpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq",
            "title": "[tensorflow] Out of bounds access in tensorflow-lite",
            "date_modified": "2024-08-28T13:25:38.000Z",
            "date_published": "2020-09-25T18:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx2x-85gr-wrpq"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}