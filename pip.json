{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33664\">https://nvd.nist.gov/vuln/detail/CVE-2024-33664</a></li>\n<li><a href=\"https://github.com/mpdavis/python-jose/issues/344\">https://github.com/mpdavis/python-jose/issues/344</a></li>\n<li><a href=\"https://github.com/mpdavis/python-jose/pull/345\">https://github.com/mpdavis/python-jose/pull/345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cjwg-qfpm-7377\">https://github.com/advisories/GHSA-cjwg-qfpm-7377</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cjwg-qfpm-7377",
            "title": "[python-jose] python-jose denial of service via compressed JWT tokens",
            "date_modified": "2024-04-26T16:58:05.000Z",
            "date_published": "2024-04-26T00:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cjwg-qfpm-7377"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33663\">https://nvd.nist.gov/vuln/detail/CVE-2024-33663</a></li>\n<li><a href=\"https://github.com/mpdavis/python-jose/issues/346\">https://github.com/mpdavis/python-jose/issues/346</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6c5p-j8vq-pqhj\">https://github.com/advisories/GHSA-6c5p-j8vq-pqhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6c5p-j8vq-pqhj",
            "title": "[python-jose] python-jose algorithm confusion with OpenSSH ECDSA keys",
            "date_modified": "2024-04-26T16:57:59.000Z",
            "date_published": "2024-04-26T00:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6c5p-j8vq-pqhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A path traversal vulnerability exists in the <code>_create_model_version()</code> function within <code>server/handlers.py</code> of the mlflow/mlflow repository, due to improper validation of the <code>source</code> parameter. Attackers can exploit this vulnerability by crafting a <code>source</code> parameter that bypasses the <code>_validate_non_local_source_contains_relative_paths(source)</code> function's checks, allowing for arbitrary file read access on the server. The issue arises from the handling of unquoted URL characters and the subsequent misuse of the original <code>source</code> value for model version creation, leading to the exposure of sensitive files when interacting with the <code>/model-versions/get-artifact</code> handler.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1558\">https://nvd.nist.gov/vuln/detail/CVE-2024-1558</a></li>\n<li><a href=\"https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081\">https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j62r-wxqq-f3gf\">https://github.com/advisories/GHSA-j62r-wxqq-f3gf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j62r-wxqq-f3gf",
            "title": "[mlflow] mlflow vulnerable to Path Traversal",
            "date_modified": "2024-04-26T05:02:10.000Z",
            "date_published": "2024-04-16T00:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j62r-wxqq-f3gf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When looping over a <code>range</code> of the form <code>range(start, start + N)</code>, if <code>start</code> is negative, the execution will always revert.</p>\n<h3 id=\"details\">Details</h3>\n<p>This issue is caused by an incorrect assertion inserted by the code generation of the range (<code>stmt.parse_For_range()</code>):</p>\n<p><a href=\"https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287\">https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287</a></p>\n<p>This assertion was introduced in <a href=\"https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868\">https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868</a> to fix <a href=\"https://github.com/advisories/GHSA-6r8q-pfpv-7cgj\">https://github.com/advisories/GHSA-6r8q-pfpv-7cgj</a>. The issue arises when <code>start</code> is signed, instead of using <code>sle</code>, <code>le</code> is used and <code>start</code> is interpreted as an unsigned integer for the comparison. If it is a negative number, its 255th bit is set to <code>1</code> and is hence interpreted as a very large unsigned integer making the assertion always fail. </p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-Vyper\">@external\ndef foo():\n    x:int256 = min_value(int256)\n    # revert when it should not since we have the following assertion that fails:\n    # [assert, [le, min_value(int256), max_value(int256) + 1 - 10]],\n    for i in range(x, x + 10):\n        pass\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>patched in v0.4.0, specifically, <a href=\"https://github.com/vyperlang/vyper/pull/3679\">https://github.com/vyperlang/vyper/pull/3679</a> disallows this form of <code>range()</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Any contract having a <code>range(start, start + N)</code> where <code>start</code> is a signed integer with the possibility for <code>start</code> to be negative is affected. If a call goes through the loop while supplying a negative <code>start</code> the execution will revert.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj\">https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32481\">https://nvd.nist.gov/vuln/detail/CVE-2024-32481</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868\">https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5\">https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287\">https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ppx5-q359-pvwj\">https://github.com/advisories/GHSA-ppx5-q359-pvwj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ppx5-q359-pvwj",
            "title": "[vyper] vyper's range(start, start + N) reverts for negative numbers",
            "date_modified": "2024-04-25T19:53:45.000Z",
            "date_published": "2024-04-25T19:53:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ppx5-q359-pvwj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Incorrect values can be logged when <code>raw_log</code> builtin is called with memory or storage arguments to be used as topics.</p>\n<p>A contract search was performed and no vulnerable contracts were found in production. In particular, no uses of <code>raw_log()</code> were found at all in production; it is apparently not a well-known function.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>build_IR</code> function of the <code>RawLog</code> class fails to properly unwrap the variables provided as topics. Consequently, incorrect values are logged as topics.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-vyper\">x: bytes32\n\n@external\ndef f():\n    self.x = 0x1234567890123456789012345678901234567890123456789012345678901234\n    raw_log([self.x], b\"\") # LOG1(offset:0x60, size:0x00, topic1:0x00)\n\n    y: bytes32 = 0x1234567890123456789012345678901234567890123456789012345678901234\n    raw_log([y], b\"\") # LOG1(offset:0x80, size:0x00, topic1:0x40)\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Incorrect values can be logged which may result in unexpected behavior in client-side applications relying on these logs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-xchq-w5r3-4wg3\">https://github.com/vyperlang/vyper/security/advisories/GHSA-xchq-w5r3-4wg3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32645\">https://nvd.nist.gov/vuln/detail/CVE-2024-32645</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xchq-w5r3-4wg3\">https://github.com/advisories/GHSA-xchq-w5r3-4wg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xchq-w5r3-4wg3",
            "title": "[vyper] vyper performs incorrect topic logging in raw_log",
            "date_modified": "2024-04-25T19:53:10.000Z",
            "date_published": "2024-04-25T19:53:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xchq-w5r3-4wg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Using the <code>slice</code> builtin can result in a double eval vulnerability when the buffer argument is either <code>msg.data</code>, <code>self.code</code> or <code>&lt;address&gt;.code</code> and either the <code>start</code> or <code>length</code> arguments have side-effects.</p>\n<p>A contract search was performed and no vulnerable contracts were found in production. Having side-effects in the start and length patterns is also an unusual pattern which is not that likely to show up in user code. It is also much harder (but not impossible!) to trigger the bug since <code>0.3.4</code> since the unique symbol fence was introduced (<a href=\"https://github.com/vyperlang/vyper/pull/2914\">https://github.com/vyperlang/vyper/pull/2914</a>).</p>\n<h3 id=\"details\">Details</h3>\n<p>It can be seen that the <code>_build_adhoc_slice_node</code> function of the <code>slice</code> builtin doesn't cache the mentioned arguments to the stack: <a href=\"https://github.com/vyperlang/vyper/blob/4595938734d9988f8e46e8df38049ae0559abedb/vyper/builtins/functions.py#L244\">https://github.com/vyperlang/vyper/blob/4595938734d9988f8e46e8df38049ae0559abedb/vyper/builtins/functions.py#L244</a></p>\n<p>As such, they can be evaluated multiple times (instead of retrieving the value from the stack).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>with Vyper version <code>0.3.3+commit.48e326f</code> the call to <code>foo</code> passes the <code>asserts</code>:</p>\n<pre><code class=\"language-vyper\">l: DynArray[uint256, 10]\n\n@external\ndef foo(cs: String[64]) -&gt; uint256:\n    for i in range(10):\n        self.l.append(1)\n    assert len(self.l) == 10\n    s: Bytes[64] = b\"\"\n    s = slice(msg.data, self.l.pop(), 3)\n    assert len(self.l) == 10 - 2\n    return len(self.l)\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>No vulnerable production contracts were found.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-r56x-j438-vw5m\">https://github.com/vyperlang/vyper/security/advisories/GHSA-r56x-j438-vw5m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32646\">https://nvd.nist.gov/vuln/detail/CVE-2024-32646</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/pull/2914\">https://github.com/vyperlang/vyper/pull/2914</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r56x-j438-vw5m\">https://github.com/advisories/GHSA-r56x-j438-vw5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r56x-j438-vw5m",
            "title": "[vyper] vyper performs double eval of the slice args when buffer from adhoc locations",
            "date_modified": "2024-04-25T19:51:43.000Z",
            "date_published": "2024-04-25T19:51:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r56x-j438-vw5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Using the <code>create_from_blueprint</code> builtin can result in a double eval vulnerability when <code>raw_args=True</code> and the <code>args</code> argument has side-effects. </p>\n<p>A contract search was performed and no vulnerable contracts were found in production. In particular, the <code>raw_args</code> variant of <code>create_from_blueprint</code> was not found to be used in production.</p>\n<h3 id=\"details\">Details</h3>\n<p>It can be seen that the <code>_build_create_IR</code> function of the <code>create_from_blueprint</code> builtin doesn't cache the mentioned <code>args</code> argument to the stack: <a href=\"https://github.com/vyperlang/vyper/blob/cedf7087e68e67c7bfbd47ae95dcb16b81ad2e02/vyper/builtins/functions.py#L1847\">https://github.com/vyperlang/vyper/blob/cedf7087e68e67c7bfbd47ae95dcb16b81ad2e02/vyper/builtins/functions.py#L1847</a></p>\n<p>As such, it can be evaluated multiple times (instead of retrieving the value from the stack).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The vulnerability is demonstrated in the following <code>boa</code> test:</p>\n<pre><code class=\"language-vyper\">src1 = \"\"\"\nc: uint256\n\"\"\"\ndeployer = \"\"\"\ncreated_address: public(address)\ndeployed: public(uint256)\n\n@external\ndef get() -&gt; Bytes[32]:\n    self.deployed += 1\n    return b''\n\n@external\ndef create_(target: address):\n    self.created_address = create_from_blueprint(target, raw_call(self, method_id(\"get()\"), max_outsize=32), raw_args=True, code_offset=3)\n\"\"\"\n\nFactory = b.loads_partial(src1)\nc = Factory.deploy_as_blueprint()\n\nc2 = b.loads(deployer, b'')\nc2.create_(c)\nc2.deployed()\n</code></pre>\n<p>The output of <code>c2.deployed()</code> is <code>2</code> although <code>create_</code> was called only once and the value was initialized to <code>0</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>No vulnerable production contracts were found. Additionally, double evaluation of side-effects should be easily discoverable in client tests. As such, the impact is <code>low</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-3whq-64q2-qfj6\">https://github.com/vyperlang/vyper/security/advisories/GHSA-3whq-64q2-qfj6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32647\">https://nvd.nist.gov/vuln/detail/CVE-2024-32647</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/cedf7087e68e67c7bfbd47ae95dcb16b81ad2e02/vyper/builtins/functions.py#L1847\">https://github.com/vyperlang/vyper/blob/cedf7087e68e67c7bfbd47ae95dcb16b81ad2e02/vyper/builtins/functions.py#L1847</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3whq-64q2-qfj6\">https://github.com/advisories/GHSA-3whq-64q2-qfj6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3whq-64q2-qfj6",
            "title": "[vyper] vyper performs double eval of raw_args in create_from_blueprint",
            "date_modified": "2024-04-25T19:50:56.000Z",
            "date_published": "2024-04-25T19:50:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3whq-64q2-qfj6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Prior to v0.3.0, <code>__default__()</code> functions did not respect the <code>@nonreentrancy</code> decorator and the lock was not emitted. This is a known bug and was already visible in the issue tracker (<a href=\"https://github.com/vyperlang/vyper/issues/2455\">https://github.com/vyperlang/vyper/issues/2455</a>), but it is being re-issued as an advisory so that tools relying on the advisory publication list can incorporate it into their searches.</p>\n<p>A contract search was additionally performed and no vulnerable contracts were found in production.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-vyper\">@external\n@payable\n@nonreentrant(\"default\")\ndef __default__():\n    pass\n</code></pre>\n<p>after codegen:</p>\n<pre><code>[seq,\n  [if, [lt, calldatasize, 4], [goto, fallback]],\n  [mstore, 28, [calldataload, 0]],\n  [with, _func_sig, [mload, 0], seq],\n  [seq_unchecked,\n    [label, fallback],\n    [seq,\n      pass,\n      # Line 5\n      pass,\n      pass,\n      # Line 4\n      stop]]],\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>No vulnerable production contracts were found. Additionally, using a lock on a <code>default</code> function is a very sparsely used pattern. As such, the impact is <code>low</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-m2v9-w374-5hj9\">https://github.com/vyperlang/vyper/security/advisories/GHSA-m2v9-w374-5hj9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32648\">https://nvd.nist.gov/vuln/detail/CVE-2024-32648</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/issues/2455\">https://github.com/vyperlang/vyper/issues/2455</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/93287e5ac184b53b395c907d40701f721daf8177\">https://github.com/vyperlang/vyper/commit/93287e5ac184b53b395c907d40701f721daf8177</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m2v9-w374-5hj9\">https://github.com/advisories/GHSA-m2v9-w374-5hj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m2v9-w374-5hj9",
            "title": "[vyper] vyper default functions don't respect nonreentrancy keys",
            "date_modified": "2024-04-25T19:50:40.000Z",
            "date_published": "2024-04-25T19:50:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m2v9-w374-5hj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Using the <code>sqrt</code> builtin can result in multiple eval evaluation of side effects when the argument has side-effects. The bug is more difficult (but not impossible!) to trigger as of 0.3.4, when the unique symbol fence was introduced (<a href=\"https://github.com/vyperlang/vyper/pull/2914\">https://github.com/vyperlang/vyper/pull/2914</a>).</p>\n<p>A contract search was performed and no vulnerable contracts were found in production.</p>\n<h3 id=\"details\">Details</h3>\n<p>It can be seen that the <code>build_IR</code> function of the <code>sqrt</code> builtin doesn't cache the argument to the stack: \n<a href=\"https://github.com/vyperlang/vyper/blob/4595938734d9988f8e46e8df38049ae0559abedb/vyper/builtins/functions.py#L2151\">https://github.com/vyperlang/vyper/blob/4595938734d9988f8e46e8df38049ae0559abedb/vyper/builtins/functions.py#L2151</a></p>\n<p>As such, it can be evaluated multiple times (instead of retrieving the value from the stack).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>With at least Vyper version <code>0.2.15+commit.6e7dba7</code> the following contract:</p>\n<pre><code class=\"language-vyper\">c: uint256\n\n@internal\ndef some_decimal() -&gt; decimal:\n    self.c += 1\n    return 1.0\n\n@external\ndef foo() -&gt; uint256:\n    k: decimal = sqrt(self.some_decimal())\n    return self.c\n</code></pre>\n<p>passes the following test:</p>\n<pre><code class=\"language-solidity\">// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.8.13;\n\nimport \"../../lib/ds-test/test.sol\";\nimport \"../../lib/utils/Console.sol\";\nimport \"../../lib/utils/VyperDeployer.sol\";\n\nimport \"../ITest.sol\";\n\ncontract ConTest is DSTest {\n    VyperDeployer vyperDeployer = new VyperDeployer();\n\n    ITest t;\n\n    function setUp() public {\n        t = ITest(vyperDeployer.deployContract(\"Test\"));\n    }\n\n    function testFoo() public {\n        uint256 val = t.foo();\n        console.log(val);\n        assert (val == 4);\n    }\n}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>No vulnerable production contracts were found.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-5jrj-52x8-m64h\">https://github.com/vyperlang/vyper/security/advisories/GHSA-5jrj-52x8-m64h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32649\">https://nvd.nist.gov/vuln/detail/CVE-2024-32649</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/pull/2914\">https://github.com/vyperlang/vyper/pull/2914</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jrj-52x8-m64h\">https://github.com/advisories/GHSA-5jrj-52x8-m64h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jrj-52x8-m64h",
            "title": "[vyper] vyper performs double eval of the argument of sqrt",
            "date_modified": "2024-04-25T19:50:17.000Z",
            "date_published": "2024-04-25T19:50:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jrj-52x8-m64h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Regular expression denial of service in Pydantic &lt; 2.4.0, &lt; 1.10.13 allows remote attackers to cause denial of service via a crafted email string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3772\">https://nvd.nist.gov/vuln/detail/CVE-2024-3772</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/pull/7360\">https://github.com/pydantic/pydantic/pull/7360</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/commit/59d8f38fd6220e3917c53785dbc70317d6f8e631\">https://github.com/pydantic/pydantic/commit/59d8f38fd6220e3917c53785dbc70317d6f8e631</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/commit/e4393ae6145c4dadff739990bb0116c6dec3441b\">https://github.com/pydantic/pydantic/commit/e4393ae6145c4dadff739990bb0116c6dec3441b</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JBZLMSH4GAZOVBMT2JUO2LXHY7M2ALI\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JBZLMSH4GAZOVBMT2JUO2LXHY7M2ALI</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mr82-8j83-vxmv\">https://github.com/advisories/GHSA-mr82-8j83-vxmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mr82-8j83-vxmv",
            "title": "[pydantic] Pydantic regular expression denial of service",
            "date_modified": "2024-04-26T03:30:29.000Z",
            "date_published": "2024-04-15T03:31:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mr82-8j83-vxmv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Regular expression denial of service in Pydantic &lt; 2.4.0, &lt; 1.10.13 allows remote attackers to cause denial of service via a crafted email string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3772\">https://nvd.nist.gov/vuln/detail/CVE-2024-3772</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/pull/7360\">https://github.com/pydantic/pydantic/pull/7360</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/commit/59d8f38fd6220e3917c53785dbc70317d6f8e631\">https://github.com/pydantic/pydantic/commit/59d8f38fd6220e3917c53785dbc70317d6f8e631</a></li>\n<li><a href=\"https://github.com/pydantic/pydantic/commit/e4393ae6145c4dadff739990bb0116c6dec3441b\">https://github.com/pydantic/pydantic/commit/e4393ae6145c4dadff739990bb0116c6dec3441b</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JBZLMSH4GAZOVBMT2JUO2LXHY7M2ALI\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JBZLMSH4GAZOVBMT2JUO2LXHY7M2ALI</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mr82-8j83-vxmv\">https://github.com/advisories/GHSA-mr82-8j83-vxmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mr82-8j83-vxmv",
            "title": "[pydantic] Pydantic regular expression denial of service",
            "date_modified": "2024-04-26T03:30:29.000Z",
            "date_published": "2024-04-15T03:31:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mr82-8j83-vxmv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An authenticated user can change the download folder and upload a crafted template to the specified folder lead to remote code execution</p>\n<h3 id=\"details\">Details</h3>\n<p>example version: 0.5\nfile:src/pyload/webui/app/blueprints/app_blueprint.py</p>\n<pre><code class=\"language-python\">@bp.route(\"/render/&lt;path:filename&gt;\", endpoint=\"render\")\ndef render(filename):\n    mimetype = mimetypes.guess_type(filename)[0] or \"text/html\"\n    data = render_template(filename)\n    return flask.Response(data, mimetype=mimetype)\n</code></pre>\n<p>So, if we can control file in the path \"pyload/webui/app/templates\" in latest version and path in \"module/web/media/js\"(the difference is the older version0.4.20 only renders file with  extension name \".js\"), the render_template func will works like SSTI(server-side template injection) when render the evil file we control.</p>\n<p>in /settings page and the choose option general/general, where we can change the download folder. \n<img alt=\"image\" src=\"https://github.com/pyload/pyload/assets/48705773/0b239138-9aaa-45c4-bf84-c1c3103c452a\"></p>\n<p>Also, we can find the pyLoad install folder in /info page\n<img alt=\"image\" src=\"https://github.com/pyload/pyload/assets/48705773/6e9d363a-f0e0-4d25-92b3-b1587188a235\">\nSo, we can change the  value of Download folder to the template path. Then through /json/add_package we can upload a crafted template file to RCE.</p>\n<pre><code class=\"language-python\">@bp.route(\"/json/add_package\", methods=[\"POST\"], endpoint=\"add_package\")\n# @apiver_check\n@login_required(\"ADD\")\ndef add_package():\n    api = flask.current_app.config[\"PYLOAD_API\"]\n\n    package_name = flask.request.form.get(\"add_name\", \"New Package\").strip()\n    queue = int(flask.request.form[\"add_dest\"])\n    links = [l.strip() for l in flask.request.form[\"add_links\"].splitlines()]\n    pw = flask.request.form.get(\"add_password\", \"\").strip(\"\\n\\r\")\n\n    try:\n        file = flask.request.files[\"add_file\"]\n\n        if file.filename:\n            if not package_name or package_name == \"New Package\":\n                package_name = file.filename\n\n            file_path = os.path.join(\n                api.get_config_value(\"general\", \"storage_folder\"), \"tmp_\" + file.filename\n            )\n            file.save(file_path)\n            links.insert(0, file_path)\n\n    except Exception:\n        pass\n\n    urls = [url for url in links if url.strip()]\n    pack = api.add_package(package_name, urls, queue)\n    if pw:\n        data = {\"password\": pw}\n        api.set_package_data(pack, data)\n\n    return jsonify(True)\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>First login into the admin page, then visit the info page to get the path of pyload installation folder.\nSecond, change the download folder to PYLOAD_INSTALL_DIR/ webui/app/templates/\nThird, upload crafted template file through /json/add_package through parameter add_file\nthe content of crafted template file and its filename is \"341.html\":</p>\n<pre><code>{{x.__init__.__globals__['__builtins__']['eval'](\"__import__('os').popen('whoami').read()\")}}\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/pyload/pyload/assets/48705773/a933a95b-bb18-4e2e-a442-973585e7d1fc\">\nLast, visit <a href=\"http://TARGET/render/tmp_341.html\">http://TARGET/render/tmp_341.html</a> to trigger the RCE\n<img alt=\"image\" src=\"https://github.com/pyload/pyload/assets/48705773/80a1ba00-2774-4ce5-bc9e-dd32f189634e\">\n<img alt=\"image\" src=\"https://github.com/pyload/pyload/assets/48705773/136236f2-9b00-4506-a8ac-29a14a537bbe\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>It is a RCE vulnerability and I think it affects all versions. In earlier version 0.4.20, the trigger difference is the pyload installation folder path difference and the upload file must with extension \".js\"  .\nThe render js code in version 0.4.20:</p>\n<pre><code class=\"language-python\">@route(\"/media/js/&lt;path:re:.+\\.js&gt;\")\ndef js_dynamic(path):\n    response.headers['Expires'] = time.strftime(\"%a, %d %b %Y %H:%M:%S GMT\",\n                                                time.gmtime(time.time() + 60 * 60 * 24 * 2))\n    response.headers['Cache-control'] = \"public\"\n    response.headers['Content-Type'] = \"text/javascript; charset=UTF-8\"\n\n    try:\n        # static files are not rendered\n        if \"static\" not in path and \"mootools\" not in path:\n            t = env.get_template(\"js/%s\" % path)\n            return t.render()\n        else:\n            return static_file(path, root=join(PROJECT_DIR, \"media\", \"js\"))\n    except:\n        return HTTPError(404, \"Not Found\")\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/security/advisories/GHSA-3f7w-p8vr-4v5f\">https://github.com/pyload/pyload/security/advisories/GHSA-3f7w-p8vr-4v5f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32880\">https://nvd.nist.gov/vuln/detail/CVE-2024-32880</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3f7w-p8vr-4v5f\">https://github.com/advisories/GHSA-3f7w-p8vr-4v5f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3f7w-p8vr-4v5f",
            "title": "[pyload-ng] pyLoad allows upload to arbitrary folder lead to RCE",
            "date_modified": "2024-04-26T18:51:18.000Z",
            "date_published": "2024-04-24T21:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3f7w-p8vr-4v5f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Certificate Validation vulnerability in Apache Airflow FTP Provider.</p>\n<p>The FTP hook lacks complete certificate validation in FTP_TLS connections, which can potentially be leveraged. Implementing proper certificate validation by passing context=ssl.create_default_context() during FTP_TLS instantiation is used as mitigation to validate the certificates properly.</p>\n<p>This issue affects Apache Airflow FTP Provider: before 3.7.0.</p>\n<p>Users are recommended to upgrade to version 3.7.0, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29733\">https://nvd.nist.gov/vuln/detail/CVE-2024-29733</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/38266\">https://github.com/apache/airflow/pull/38266</a></li>\n<li><a href=\"https://docs.python.org/3/library/ssl.html#best-defaults\">https://docs.python.org/3/library/ssl.html#best-defaults</a></li>\n<li><a href=\"https://github.com/apache/airflow/blob/95e26118b828c364755f3a8c96870f3591b01c31/airflow/providers/ftp/hooks/ftp.py#L280\">https://github.com/apache/airflow/blob/95e26118b828c364755f3a8c96870f3591b01c31/airflow/providers/ftp/hooks/ftp.py#L280</a></li>\n<li><a href=\"https://lists.apache.org/thread/265t5zbmtjs6h9fkw52wtp03nsbplky2\">https://lists.apache.org/thread/265t5zbmtjs6h9fkw52wtp03nsbplky2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3gg8-mc87-cq3h\">https://github.com/advisories/GHSA-3gg8-mc87-cq3h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3gg8-mc87-cq3h",
            "title": "[apache-airflow-providers-ftp] Improper Certificate Validation vulnerability in Apache Airflow FTP Provider",
            "date_modified": "2024-04-24T19:52:03.000Z",
            "date_published": "2024-04-21T18:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3gg8-mc87-cq3h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to default case-insensitive collation in MySQL or MariaDB databases, third-party authentication user IDs are not case-sensitive and could cause different IDs to match.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been addressed by <a href=\"https://github.com/python-social-auth/social-app-django/pull/566\">https://github.com/python-social-auth/social-app-django/pull/566</a> and fix released in 5.4.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>An immediate workaround would be to change collation of the affected field:</p>\n<pre><code class=\"language-mysql\">ALTER TABLE `social_auth_association` MODIFY `uid` varchar(255) COLLATE `utf8_bin`;\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>This issue was discovered by folks at <a href=\"https://opencraft.com/\">https://opencraft.com/</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/python-social-auth/social-app-django/security/advisories/GHSA-2gr8-3wc7-xhj3\">https://github.com/python-social-auth/social-app-django/security/advisories/GHSA-2gr8-3wc7-xhj3</a></li>\n<li><a href=\"https://github.com/python-social-auth/social-app-django/pull/566\">https://github.com/python-social-auth/social-app-django/pull/566</a></li>\n<li><a href=\"https://github.com/python-social-auth/social-app-django/commit/31c3e0c7edb187004d8abbde7e9c4f7ef9098138\">https://github.com/python-social-auth/social-app-django/commit/31c3e0c7edb187004d8abbde7e9c4f7ef9098138</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32879\">https://nvd.nist.gov/vuln/detail/CVE-2024-32879</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gr8-3wc7-xhj3\">https://github.com/advisories/GHSA-2gr8-3wc7-xhj3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gr8-3wc7-xhj3",
            "title": "[social-auth-app-django] social-auth-app-django affected by Improper Handling of Case Sensitivity",
            "date_modified": "2024-04-25T00:18:43.000Z",
            "date_published": "2024-04-24T18:47:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gr8-3wc7-xhj3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package onnx before and including 1.15.0 are vulnerable to Out-of-bounds Read as the ONNX_ASSERT and ONNX_ASSERTM functions have an off by one string copy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27319\">https://nvd.nist.gov/vuln/detail/CVE-2024-27319</a></li>\n<li><a href=\"https://github.com/onnx/onnx/commit/08a399ba75a805b7813ab8936b91d0e274b08287\">https://github.com/onnx/onnx/commit/08a399ba75a805b7813ab8936b91d0e274b08287</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FGTBH5ZYL2LGYHIJDHN2MAUURIR5E7PY\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FGTBH5ZYL2LGYHIJDHN2MAUURIR5E7PY</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TFJJID2IZDOLFDMWVYTBDI75ZJQC6JOL\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TFJJID2IZDOLFDMWVYTBDI75ZJQC6JOL</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h8wv-9h96-m4hr\">https://github.com/advisories/GHSA-h8wv-9h96-m4hr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h8wv-9h96-m4hr",
            "title": "[onnx] Onnx Out-of-bounds Read vulnerability",
            "date_modified": "2024-04-24T14:38:10.000Z",
            "date_published": "2024-02-23T18:30:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h8wv-9h96-m4hr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package onnx before and including 1.15.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory. The vulnerability occurs as a bypass for the patch added for CVE-2022-25882.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27318\">https://nvd.nist.gov/vuln/detail/CVE-2024-27318</a></li>\n<li><a href=\"https://github.com/onnx/onnx/commit/66b7fb630903fdcf3e83b6b6d56d82e904264a20\">https://github.com/onnx/onnx/commit/66b7fb630903fdcf3e83b6b6d56d82e904264a20</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-ONNX-2395479\">https://security.snyk.io/vuln/SNYK-PYTHON-ONNX-2395479</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FGTBH5ZYL2LGYHIJDHN2MAUURIR5E7PY\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FGTBH5ZYL2LGYHIJDHN2MAUURIR5E7PY</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TFJJID2IZDOLFDMWVYTBDI75ZJQC6JOL\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TFJJID2IZDOLFDMWVYTBDI75ZJQC6JOL</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-whh8-fjgc-qp73\">https://github.com/advisories/GHSA-whh8-fjgc-qp73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-whh8-fjgc-qp73",
            "title": "[onnx] Onnx Directory Traversal vulnerability",
            "date_modified": "2024-04-24T14:35:49.000Z",
            "date_published": "2024-02-23T18:30:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-whh8-fjgc-qp73"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote Matrix user with malicious intent, sharing a room with Synapse instances before 1.105.1, can dispatch specially crafted events to exploit a weakness in how the auth chain cover index is calculated. This can induce high CPU consumption and accumulate excessive data in the database of such instances, resulting in a denial of service.</p>\n<p>Servers in private federations, or those that do not federate, are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Server administrators should upgrade to 1.105.1 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>One can:</p>\n<ul>\n<li>ban the malicious users or ACL block servers from the rooms; and/or</li>\n<li>leave the room and purge the room using the admin API</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@element.io\">security AT element.io</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/element-hq/synapse/security/advisories/GHSA-3h7q-rfh9-xm4v\">https://github.com/element-hq/synapse/security/advisories/GHSA-3h7q-rfh9-xm4v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-31208\">https://nvd.nist.gov/vuln/detail/CVE-2024-31208</a></li>\n<li><a href=\"https://github.com/element-hq/synapse/commit/55b0aa847a61774b6a3acdc4b177a20dc019f01a\">https://github.com/element-hq/synapse/commit/55b0aa847a61774b6a3acdc4b177a20dc019f01a</a></li>\n<li><a href=\"https://github.com/element-hq/synapse/releases/tag/v1.105.1\">https://github.com/element-hq/synapse/releases/tag/v1.105.1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/matrix-synapse/PYSEC-2024-50.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/matrix-synapse/PYSEC-2024-50.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3h7q-rfh9-xm4v\">https://github.com/advisories/GHSA-3h7q-rfh9-xm4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3h7q-rfh9-xm4v",
            "title": "[matrix-synapse] Synapse V2 state resolution weakness allows Denial of Service (DoS)",
            "date_modified": "2024-04-24T14:32:56.000Z",
            "date_published": "2024-04-23T21:15:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3h7q-rfh9-xm4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A vulnerability has been discovered in the handling of the referrer header in the application, which could allow an attacker to conduct open redirects. The issue arises from improper validation of the referrer header in certain conditions. By manipulating the referrer header, an attacker could potentially redirect users to malicious websites, phishing pages, or other dangerous destinations.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>If you change the referer header, you will be redirected to that domain without verifying.</p>\n<p><a href=\"https://github.com/Clinical-Genomics/cg/blob/master/cg/server/invoices/views.py#L173\">https://github.com/Clinical-Genomics/cg/blob/master/cg/server/invoices/views.py#L173</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker exploiting this vulnerability could trick users into visiting malicious websites or disclose sensitive information by redirecting them to unintended destinations. This could lead to various attacks including phishing, malware distribution, or further exploitation of other vulnerabilities.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Clinical-Genomics/cg/security/advisories/GHSA-w228-rfpx-fhm4\">https://github.com/Clinical-Genomics/cg/security/advisories/GHSA-w228-rfpx-fhm4</a></li>\n<li><a href=\"https://github.com/Clinical-Genomics/cg/commit/96e6a968a5a3639cc40ad251ad65952e4f38dd25\">https://github.com/Clinical-Genomics/cg/commit/96e6a968a5a3639cc40ad251ad65952e4f38dd25</a></li>\n<li><a href=\"https://github.com/Clinical-Genomics/cg/blob/master/cg/server/invoices/views.py#L173\">https://github.com/Clinical-Genomics/cg/blob/master/cg/server/invoices/views.py#L173</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w228-rfpx-fhm4\">https://github.com/advisories/GHSA-w228-rfpx-fhm4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w228-rfpx-fhm4",
            "title": "[cg] cg vulnerable to an Open Redirect Vulnerability on Referer Header",
            "date_modified": "2024-04-23T16:21:24.000Z",
            "date_published": "2024-04-23T16:21:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w228-rfpx-fhm4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Buffer overflow in the C implementation of the <code>apply_delta</code> function <code>in _pack.c</code> in Dulwich before 0.9.9 allows remote attackers to execute arbitrary code via a crafted pack file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-0838\">https://nvd.nist.gov/vuln/detail/CVE-2015-0838</a></li>\n<li><a href=\"https://lists.launchpad.net/dulwich-users/msg00829.html\">https://lists.launchpad.net/dulwich-users/msg00829.html</a></li>\n<li><a href=\"http://www.debian.org/security/2015/dsa-3206\">http://www.debian.org/security/2015/dsa-3206</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vjjf-3rvg-gv3v\">https://github.com/advisories/GHSA-vjjf-3rvg-gv3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vjjf-3rvg-gv3v",
            "title": "[dulwich] Dulwich Buffer Overflow when handling pack files",
            "date_modified": "2024-04-22T22:58:51.000Z",
            "date_published": "2022-05-17T04:14:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vjjf-3rvg-gv3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9013\">https://nvd.nist.gov/vuln/detail/CVE-2016-9013</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OG5ROMUPS6C7BXELD3TAUUH7OBYV56WQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OG5ROMUPS6C7BXELD3TAUUH7OBYV56WQ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QXDKJYHN74BWY3P7AR2UZDVJREQMRE6S/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QXDKJYHN74BWY3P7AR2UZDVJREQMRE6S/</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2016/nov/01/security-releases/\">https://www.djangoproject.com/weblog/2016/nov/01/security-releases/</a></li>\n<li><a href=\"http://www.debian.org/security/2017/dsa-3835\">http://www.debian.org/security/2017/dsa-3835</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/94069\">http://www.securityfocus.com/bid/94069</a></li>\n<li><a href=\"http://www.securitytracker.com/id/1037159\">http://www.securitytracker.com/id/1037159</a></li>\n<li><a href=\"http://www.ubuntu.com/usn/USN-3115-1\">http://www.ubuntu.com/usn/USN-3115-1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv8g-fhh6-6267\">https://github.com/advisories/GHSA-mv8g-fhh6-6267</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv8g-fhh6-6267",
            "title": "[django] Django user with hardcoded password created when running tests on Oracle",
            "date_modified": "2024-04-22T22:58:35.000Z",
            "date_published": "2022-05-17T00:27:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv8g-fhh6-6267"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}