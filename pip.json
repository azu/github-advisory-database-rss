{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>The Scalyr Agent before 2.1.10 has Missing SSL Certificate Validation because, in some circumstances, native Python code is used that lacks a comparison of the hostname to commonName and subjectAltName.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-24715\">https://nvd.nist.gov/vuln/detail/CVE-2020-24715</a></li>\n<li><a href=\"https://github.com/scalyr/scalyr-agent-2/blob/v2.1.10/CHANGELOG.md\">https://github.com/scalyr/scalyr-agent-2/blob/v2.1.10/CHANGELOG.md</a></li>\n<li><a href=\"https://web.archive.org/web/20211209045826/https://scalyr-static.s3.amazonaws.com/technical-details/index.html\">https://web.archive.org/web/20211209045826/https://scalyr-static.s3.amazonaws.com/technical-details/index.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-738x-v49g-p6hx\">https://github.com/advisories/GHSA-738x-v49g-p6hx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-738x-v49g-p6hx",
            "title": "[scalyr-agent-2] Scalyr Agent 2 Missing SSL Certificate Validation",
            "date_modified": "2023-08-23T18:40:15.000Z",
            "date_published": "2022-05-24T17:26:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-738x-v49g-p6hx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A privilege escalation issue in plone.app.contenttypes in Plone 4.3 through 5.2.1 allows users to PUT (overwrite) some content without needing write permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7941\">https://nvd.nist.gov/vuln/detail/CVE-2020-7941</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20200121\">https://plone.org/security/hotfix/20200121</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20200121/privilege-escalation-for-overwriting-content\">https://plone.org/security/hotfix/20200121/privilege-escalation-for-overwriting-content</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/01/22/1\">https://www.openwall.com/lists/oss-security/2020/01/22/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/01/24/1\">http://www.openwall.com/lists/oss-security/2020/01/24/1</a></li>\n<li><a href=\"https://github.com/plone/plone.app.contenttypes/blob/master/CHANGES.rst?plain=1#L372-L374\">https://github.com/plone/plone.app.contenttypes/blob/master/CHANGES.rst?plain=1#L372-L374</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w6g9-xccc-347h\">https://github.com/advisories/GHSA-w6g9-xccc-347h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w6g9-xccc-347h",
            "title": "[plone.app.contenttypes] Plone Unauthenticated Write Vulnerability",
            "date_modified": "2023-08-23T18:38:11.000Z",
            "date_published": "2022-05-24T17:07:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w6g9-xccc-347h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A privilege escalation issue in plone.app.contenttypes in Plone 4.3 through 5.2.1 allows users to PUT (overwrite) some content without needing write permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7941\">https://nvd.nist.gov/vuln/detail/CVE-2020-7941</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20200121\">https://plone.org/security/hotfix/20200121</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20200121/privilege-escalation-for-overwriting-content\">https://plone.org/security/hotfix/20200121/privilege-escalation-for-overwriting-content</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/01/22/1\">https://www.openwall.com/lists/oss-security/2020/01/22/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/01/24/1\">http://www.openwall.com/lists/oss-security/2020/01/24/1</a></li>\n<li><a href=\"https://github.com/plone/plone.app.contenttypes/blob/master/CHANGES.rst?plain=1#L372-L374\">https://github.com/plone/plone.app.contenttypes/blob/master/CHANGES.rst?plain=1#L372-L374</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w6g9-xccc-347h\">https://github.com/advisories/GHSA-w6g9-xccc-347h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w6g9-xccc-347h",
            "title": "[Plone] Plone Unauthenticated Write Vulnerability",
            "date_modified": "2023-08-23T18:38:11.000Z",
            "date_published": "2022-05-24T17:07:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w6g9-xccc-347h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Twisted Web through 20.3.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10109\">https://nvd.nist.gov/vuln/detail/CVE-2020-10109</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-1/\">https://usn.ubuntu.com/4308-1/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202007-24\">https://security.gentoo.org/glsa/202007-24</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-2/\">https://usn.ubuntu.com/4308-2/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html\">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281\">https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281</a></li>\n<li><a href=\"https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13\">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>\n<li><a href=\"https://know.bishopfox.com/advisories/twisted-version-19.10.0\">https://know.bishopfox.com/advisories/twisted-version-19.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p5xh-vx83-mxcj\">https://github.com/advisories/GHSA-p5xh-vx83-mxcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj",
            "title": "[Twisted] HTTP Request Smuggling in Twisted",
            "date_modified": "2023-08-23T16:45:04.000Z",
            "date_published": "2020-03-31T15:40:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7471\">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>\n<li><a href=\"https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136\">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI\">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2020/feb/03/security-releases/\">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/02/03/1\">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/02/03/1\">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"https://usn.ubuntu.com/4264-1/\">https://usn.ubuntu.com/4264-1/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2020/Feb/30\">https://seclists.org/bugtraq/2020/Feb/30</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202004-17\">https://security.gentoo.org/glsa/202004-17</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200221-0006/\">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>\n<li><a href=\"https://www.debian.org/security/2020/dsa-4629\">https://www.debian.org/security/2020/dsa-4629</a></li>\n<li><a href=\"https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd\">https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd</a></li>\n<li><a href=\"https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b\">https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b</a></li>\n<li><a href=\"https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147\">https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmr4-m2h5-33qx\">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
            "title": "[django] SQL injection in Django",
            "date_modified": "2023-08-23T16:41:37.000Z",
            "date_published": "2020-02-11T21:03:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7471\">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>\n<li><a href=\"https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136\">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI\">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2020/feb/03/security-releases/\">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/02/03/1\">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/02/03/1\">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"https://usn.ubuntu.com/4264-1/\">https://usn.ubuntu.com/4264-1/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2020/Feb/30\">https://seclists.org/bugtraq/2020/Feb/30</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202004-17\">https://security.gentoo.org/glsa/202004-17</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200221-0006/\">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>\n<li><a href=\"https://www.debian.org/security/2020/dsa-4629\">https://www.debian.org/security/2020/dsa-4629</a></li>\n<li><a href=\"https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd\">https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd</a></li>\n<li><a href=\"https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b\">https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b</a></li>\n<li><a href=\"https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147\">https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmr4-m2h5-33qx\">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
            "title": "[django] SQL injection in Django",
            "date_modified": "2023-08-23T16:41:37.000Z",
            "date_published": "2020-02-11T21:03:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7471\">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>\n<li><a href=\"https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136\">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI\">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2020/feb/03/security-releases/\">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2020/02/03/1\">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/02/03/1\">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>\n<li><a href=\"https://usn.ubuntu.com/4264-1/\">https://usn.ubuntu.com/4264-1/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2020/Feb/30\">https://seclists.org/bugtraq/2020/Feb/30</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202004-17\">https://security.gentoo.org/glsa/202004-17</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200221-0006/\">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>\n<li><a href=\"https://www.debian.org/security/2020/dsa-4629\">https://www.debian.org/security/2020/dsa-4629</a></li>\n<li><a href=\"https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd\">https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd</a></li>\n<li><a href=\"https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b\">https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b</a></li>\n<li><a href=\"https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147\">https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmr4-m2h5-33qx\">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
            "title": "[django] SQL injection in Django",
            "date_modified": "2023-08-23T16:41:37.000Z",
            "date_published": "2020-02-11T21:03:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in ClusterLabs crmsh through 4.2.1. Local attackers able to call <code>crm history</code> (when <code>crm</code> is run) were able to execute commands via shell code injection to the crm history commandline, potentially allowing escalation of privileges.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35459\">https://nvd.nist.gov/vuln/detail/CVE-2020-35459</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1179999\">https://bugzilla.suse.com/show_bug.cgi?id=1179999</a></li>\n<li><a href=\"https://github.com/ClusterLabs/crmsh/blob/a403aa15f3ea575adfe5e43bf2a31c9f9094fcda/crmsh/history.py#L476\">https://github.com/ClusterLabs/crmsh/blob/a403aa15f3ea575adfe5e43bf2a31c9f9094fcda/crmsh/history.py#L476</a></li>\n<li><a href=\"https://github.com/ClusterLabs/crmsh/releases\">https://github.com/ClusterLabs/crmsh/releases</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/01/msg00021.html\">https://lists.debian.org/debian-lts-announce/2021/01/msg00021.html</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2021/01/12/3\">https://www.openwall.com/lists/oss-security/2021/01/12/3</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/01/12/3\">http://www.openwall.com/lists/oss-security/2021/01/12/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99xx-83jm-h24m\">https://github.com/advisories/GHSA-99xx-83jm-h24m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99xx-83jm-h24m",
            "title": "[crmsh] ClusterLabs crmsh vulnerable to shell code injection",
            "date_modified": "2023-08-23T13:39:26.000Z",
            "date_published": "2022-05-24T17:38:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99xx-83jm-h24m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in langchain v.0.0.171 allows a remote attacker to execute arbitrary code via the via the a json file to the load_prompt parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36281\">https://nvd.nist.gov/vuln/detail/CVE-2023-36281</a></li>\n<li><a href=\"https://github.com/hwchase17/langchain/issues/4394\">https://github.com/hwchase17/langchain/issues/4394</a></li>\n<li><a href=\"https://aisec.today/LangChain-2e6244a313dd46139c5ef28cbcab9e55\">https://aisec.today/LangChain-2e6244a313dd46139c5ef28cbcab9e55</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7gfq-f96f-g85j\">https://github.com/advisories/GHSA-7gfq-f96f-g85j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7gfq-f96f-g85j",
            "title": "[langchain] langchain vulnerable to arbitrary code execution",
            "date_modified": "2023-08-23T13:22:26.000Z",
            "date_published": "2023-08-22T21:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7gfq-f96f-g85j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Open Redirect vulnerability in Horizon Web Dashboard 19.4.0 thru 20.1.4 via the success_url parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45582\">https://nvd.nist.gov/vuln/detail/CVE-2022-45582</a></li>\n<li><a href=\"https://bugs.launchpad.net/horizon/+bug/1982676\">https://bugs.launchpad.net/horizon/+bug/1982676</a></li>\n<li><a href=\"https://github.com/openstack/horizon/blob/master/horizon/workflows/views.py#L96-L102\">https://github.com/openstack/horizon/blob/master/horizon/workflows/views.py#L96-L102</a></li>\n<li><a href=\"https://opendev.org/openstack/horizon/commit/79d139594290779b2f74ca894332aa7f2f7e4735\">https://opendev.org/openstack/horizon/commit/79d139594290779b2f74ca894332aa7f2f7e4735</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5pv6-rprw-82wv\">https://github.com/advisories/GHSA-5pv6-rprw-82wv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5pv6-rprw-82wv",
            "title": "[horizon] Horizon Web Dashboard Open Redirect vulnerability",
            "date_modified": "2023-08-23T13:21:26.000Z",
            "date_published": "2023-08-22T21:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5pv6-rprw-82wv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The json2xml package for Python allows an error in typecode decoding enabling a remote attack that can lead to an exception, causing a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25024\">https://nvd.nist.gov/vuln/detail/CVE-2022-25024</a></li>\n<li><a href=\"https://github.com/vinitkumar/json2xml/issues/106\">https://github.com/vinitkumar/json2xml/issues/106</a></li>\n<li><a href=\"https://github.com/vinitkumar/json2xml/pull/107\">https://github.com/vinitkumar/json2xml/pull/107</a></li>\n<li><a href=\"https://github.com/vinitkumar/json2xml/commit/a9cd75b61329801b47a8fba7473bce6c85a38b9b\">https://github.com/vinitkumar/json2xml/commit/a9cd75b61329801b47a8fba7473bce6c85a38b9b</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/json2xml/PYSEC-2023-149.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/json2xml/PYSEC-2023-149.yaml</a></li>\n<li><a href=\"https://packaging.python.org/en/latest/guides/analyzing-pypi-package-downloads/\">https://packaging.python.org/en/latest/guides/analyzing-pypi-package-downloads/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8rj5-2857-877j\">https://github.com/advisories/GHSA-8rj5-2857-877j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8rj5-2857-877j",
            "title": "[json2xml] json2xml Uncaught Exception vulnerability",
            "date_modified": "2023-08-23T13:19:55.000Z",
            "date_published": "2023-08-23T13:19:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8rj5-2857-877j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When waitress receives a header that contains invalid characters it will cause the regular expression engine to catastrophically backtrack causing the process to use 100% CPU time and blocking any other interactions.</p>\n<p>This would allow an attacker to send a single request with an invalid header and take the service offline.</p>\n<p>Invalid header example:</p>\n<pre><code>Bad-header: xxxxxxxxxxxxxxx\\x10\n</code></pre>\n<p>Increasing the number of <code>x</code>'s in the header will increase the amount of time Waitress spends in the regular expression engine.</p>\n<p>This issue was introduced in version 1.4.2 when the regular expression was updated to attempt to match the behaviour required by errata associated with RFC7230.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The regular expression that is used to validate incoming headers has been updated in version 1.4.3, it is recommended that people upgrade to the new version of Waitress as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you have deployed a reverse proxy in front of Waitress it may already be rejecting requests that include invalid headers.</p>\n<h3 id=\"thanks\">Thanks</h3>\n<p>The Pylons Project would like to thank <a href=\"https://github.com/fzembow\">Fil Zembowicz</a> for reaching out and disclosing this vulnerability!</p>\n<h3 id=\"references\">References</h3>\n<p>Catastrophic backtracking explained: <a href=\"https://www.regular-expressions.info/catastrophic.html\">https://www.regular-expressions.info/catastrophic.html</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc\">https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f\">https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-5236\">https://nvd.nist.gov/vuln/detail/CVE-2020-5236</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-73m2-3pwg-5fgc\">https://github.com/advisories/GHSA-73m2-3pwg-5fgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-73m2-3pwg-5fgc",
            "title": "[waitress] Catastrophic backtracking in regex allows Denial of Service in Waitress",
            "date_modified": "2023-08-23T00:09:01.000Z",
            "date_published": "2020-02-04T03:07:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-73m2-3pwg-5fgc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-14859\">https://nvd.nist.gov/vuln/detail/CVE-2019-14859</a></li>\n<li><a href=\"https://github.com/warner/python-ecdsa/issues/114\">https://github.com/warner/python-ecdsa/issues/114</a></li>\n<li><a href=\"https://github.com/warner/python-ecdsa/pull/115\">https://github.com/warner/python-ecdsa/pull/115</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14859\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14859</a></li>\n<li><a href=\"https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3\">https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3</a></li>\n<li><a href=\"https://pypi.org/project/ecdsa/0.13.3/\">https://pypi.org/project/ecdsa/0.13.3/</a></li>\n<li><a href=\"https://github.com/tlsfuzzer/python-ecdsa/commit/3427fa29f319b27898a28601955807abb44c0830\">https://github.com/tlsfuzzer/python-ecdsa/commit/3427fa29f319b27898a28601955807abb44c0830</a></li>\n<li><a href=\"https://github.com/tlsfuzzer/python-ecdsa/commit/9080d1d5ac533da0de00466aaffb49bee808bb4e\">https://github.com/tlsfuzzer/python-ecdsa/commit/9080d1d5ac533da0de00466aaffb49bee808bb4e</a></li>\n<li><a href=\"https://github.com/tlsfuzzer/python-ecdsa/commit/b0ea52bb3aa9a16c9a4a91fdc0041edbfed10b31\">https://github.com/tlsfuzzer/python-ecdsa/commit/b0ea52bb3aa9a16c9a4a91fdc0041edbfed10b31</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8qxj-f9rh-9fg2\">https://github.com/advisories/GHSA-8qxj-f9rh-9fg2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8qxj-f9rh-9fg2",
            "title": "[ecdsa] Improper Verification of Cryptographic Signature in Pure-Python ECDSA",
            "date_modified": "2023-08-23T00:07:33.000Z",
            "date_published": "2020-04-01T16:35:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8qxj-f9rh-9fg2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The patches introduced to fix <a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.</p>\n<p>This updates the existing CVE with ID: CVE-2019-16789</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Waitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.</p>\n<h3 id=\"references\">References</h3>\n<p>See <a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> for more information on the security issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74\">https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16789\">https://nvd.nist.gov/vuln/detail/CVE-2019-16789</a></li>\n<li><a href=\"https://github.com/github/advisory-review/pull/14604\">https://github.com/github/advisory-review/pull/14604</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/ddb65b489d01d696afa1695b75fdd5df3e4ffdf8\">https://github.com/Pylons/waitress/commit/ddb65b489d01d696afa1695b75fdd5df3e4ffdf8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-968f-66r5-5v74\">https://github.com/advisories/GHSA-968f-66r5-5v74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-968f-66r5-5v74",
            "title": "[waitress] HTTP Request Smuggling in Waitress: Invalid whitespace characters in headers (Follow-up)",
            "date_modified": "2023-08-23T00:02:16.000Z",
            "date_published": "2020-01-06T18:44:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-968f-66r5-5v74"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.</p>\n<pre><code>Content-Length: 10\nTransfer-Encoding: [\\x0b]chunked\n</code></pre>\n<p>For clarity:</p>\n<pre><code>0x0b == vertical tab\n</code></pre>\n<p>Would get parsed by Waitress as being a <code>chunked</code> request, but a front-end server would use the <code>Content-Length</code> instead as the <code>Transfer-Encoding</code> header is considered invalid due to containing invalid characters.</p>\n<p>If a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.</p>\n<p>Waitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.</p>\n<p>Waitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.</p>\n<h3 id=\"references\">References</h3>\n<p>This was mentioned in <a href=\"https://portswigger.net/research/http-desync-attacks-what-happened-next\">https://portswigger.net/research/http-desync-attacks-what-happened-next</a> and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: <a href=\"https://nathandavison.com/blog/haproxy-http-request-smuggling\">https://nathandavison.com/blog/haproxy-http-request-smuggling</a></p>\n<h3 id=\"thanks\">Thanks</h3>\n<p>The Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017\">https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5ff-3wj3-8ph4",
            "title": "[waitress] HTTP Request Smuggling: Invalid whitespace characters in headers in Waitress",
            "date_modified": "2023-08-23T00:00:31.000Z",
            "date_published": "2019-12-26T16:34:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5ff-3wj3-8ph4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress would header fold a double <code>Content-Length</code> header and due to being unable to cast the now comma separated value to an integer would set the <code>Content-Length</code> to 0 internally.</p>\n<p>So a request with:</p>\n<pre><code>Content-Length: 10\nContent-Length: 10\n</code></pre>\n<p>would get transformed to:</p>\n<pre><code>Content-Length: 10, 10\n</code></pre>\n<p>Which would Waitress would then internally set to <code>Content-Lenght: 0</code>.</p>\n<p>Waitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6\">https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65\">https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j7j6-7hfx-5522\">https://github.com/advisories/GHSA-j7j6-7hfx-5522</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2020-178.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2020-178.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4ppp-gpcr-7qf6\">https://github.com/advisories/GHSA-4ppp-gpcr-7qf6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4ppp-gpcr-7qf6",
            "title": "[waitress] HTTP Request Smuggling: Content-Length Sent Twice in Waitress",
            "date_modified": "2023-08-22T23:58:45.000Z",
            "date_published": "2019-12-20T23:04:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4ppp-gpcr-7qf6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress would parse the <code>Transfer-Encoding</code> header and only look for a single string value, if that value was not <code>chunked</code> it would fall through and use the <code>Content-Length</code> header instead.</p>\n<p>According to the HTTP standard <code>Transfer-Encoding</code> should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with <code>chunked</code>.</p>\n<p>Requests sent with:</p>\n<pre><code>Transfer-Encoding: gzip, chunked\n</code></pre>\n<p>Would incorrectly get ignored, and the request would use a <code>Content-Length</code> header instead to determine the body size of the HTTP message.</p>\n<p>This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>Waitress will now return a 501 Not Implemented error if the <code>Transfer-Encoding</code> is not <code>chunked</code> or contains multiple elements. Waitress does not support any transfer codings such as <code>gzip</code> or <code>deflate</code>.</p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p\">https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16786\">https://nvd.nist.gov/vuln/detail/CVE-2019-16786</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3\">https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g2xc-35jw-c63p\">https://github.com/advisories/GHSA-g2xc-35jw-c63p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g2xc-35jw-c63p",
            "title": "[waitress] HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress",
            "date_modified": "2023-08-22T23:58:07.000Z",
            "date_published": "2019-12-20T23:04:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g2xc-35jw-c63p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (<a href=\"https://tools.ietf.org/html/rfc7230#section-3.5\">https://tools.ietf.org/html/rfc7230#section-3.5</a>) which states:</p>\n<pre><code>  Although the line terminator for the start-line and header fields is\n  the sequence CRLF, a recipient MAY recognize a single LF as a line\n  terminator and ignore any preceding CR.\n</code></pre>\n<p>Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.</p>\n<p>Example:</p>\n<pre><code>Content-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n</code></pre>\n<p>Would get treated by Waitress as if it were:</p>\n<pre><code>Content-Length: 100\nX-Header: x\nContent-Length: 0\n</code></pre>\n<p>This could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>Waitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.</p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16785\">https://nvd.nist.gov/vuln/detail/CVE-2019-16785</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba\">https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/advisories/GHSA-pg36-wpm5-g57p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p",
            "title": "[waitress] HTTP Request Smuggling: LF vs CRLF handling in Waitress",
            "date_modified": "2023-08-22T23:56:56.000Z",
            "date_published": "2019-12-20T23:03:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19844\">https://nvd.nist.gov/vuln/detail/CVE-2019-19844</a></li>\n<li><a href=\"https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\">https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70</a></li>\n<li><a href=\"https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2\">https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0\">https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2020/Jan/9\">https://seclists.org/bugtraq/2020/Jan/9</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200110-0003/\">https://security.netapp.com/advisory/ntap-20200110-0003/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4224-1/\">https://usn.ubuntu.com/4224-1/</a></li>\n<li><a href=\"https://www.debian.org/security/2020/dsa-4598\">https://www.debian.org/security/2020/dsa-4598</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2019/dec/18/security-releases/\">https://www.djangoproject.com/weblog/2019/dec/18/security-releases/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html\">http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202004-17\">https://security.gentoo.org/glsa/202004-17</a></li>\n<li><a href=\"https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26\">https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26</a></li>\n<li><a href=\"https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e\">https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfq6-hq5r-27r6\">https://github.com/advisories/GHSA-vfq6-hq5r-27r6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
            "title": "[django] Potential account hijack via password reset form in Django",
            "date_modified": "2023-08-22T23:55:20.000Z",
            "date_published": "2020-01-16T22:35:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19844\">https://nvd.nist.gov/vuln/detail/CVE-2019-19844</a></li>\n<li><a href=\"https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\">https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70</a></li>\n<li><a href=\"https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2\">https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0\">https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2020/Jan/9\">https://seclists.org/bugtraq/2020/Jan/9</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20200110-0003/\">https://security.netapp.com/advisory/ntap-20200110-0003/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4224-1/\">https://usn.ubuntu.com/4224-1/</a></li>\n<li><a href=\"https://www.debian.org/security/2020/dsa-4598\">https://www.debian.org/security/2020/dsa-4598</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2019/dec/18/security-releases/\">https://www.djangoproject.com/weblog/2019/dec/18/security-releases/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html\">http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202004-17\">https://security.gentoo.org/glsa/202004-17</a></li>\n<li><a href=\"https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26\">https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26</a></li>\n<li><a href=\"https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e\">https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfq6-hq5r-27r6\">https://github.com/advisories/GHSA-vfq6-hq5r-27r6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
            "title": "[django] Potential account hijack via password reset form in Django",
            "date_modified": "2023-08-22T23:55:20.000Z",
            "date_published": "2020-01-16T22:35:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}