{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>api/metadata/handler.py in OpenStack Compute (Nova) before 2013.2.4, 2014.x before 2014.1.2, and Juno before Juno-2, when proxying metadata requests through Neutron, makes it easier for remote attackers to guess instance ID signatures via a brute-force attack that relies on timing differences in responses to instance metadata requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-3517\">https://nvd.nist.gov/vuln/detail/CVE-2014-3517</a></li>\n<li><a href=\"https://bugs.launchpad.net/nova/+bug/1325128\">https://bugs.launchpad.net/nova/+bug/1325128</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2014/07/17/2\">http://www.openwall.com/lists/oss-security/2014/07/17/2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2014:0940\">https://access.redhat.com/errata/RHSA-2014:0940</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2014:1084\">https://access.redhat.com/errata/RHSA-2014:1084</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2014-3517\">https://access.redhat.com/security/cve/CVE-2014-3517</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1112499\">https://bugzilla.redhat.com/show_bug.cgi?id=1112499</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjmj-p278-4jp5\">https://github.com/advisories/GHSA-xjmj-p278-4jp5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjmj-p278-4jp5",
            "title": "[nova] OpenStack Compute (Nova) Exposure of Sensitive Information to an Unauthorized Actor vulnerability",
            "date_modified": "2023-02-13T20:33:47.000Z",
            "date_published": "2022-05-14T01:58:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjmj-p278-4jp5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>api/metadata/handler.py in OpenStack Compute (Nova) before 2013.2.4, 2014.x before 2014.1.2, and Juno before Juno-2, when proxying metadata requests through Neutron, makes it easier for remote attackers to guess instance ID signatures via a brute-force attack that relies on timing differences in responses to instance metadata requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-3517\">https://nvd.nist.gov/vuln/detail/CVE-2014-3517</a></li>\n<li><a href=\"https://bugs.launchpad.net/nova/+bug/1325128\">https://bugs.launchpad.net/nova/+bug/1325128</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2014/07/17/2\">http://www.openwall.com/lists/oss-security/2014/07/17/2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2014:0940\">https://access.redhat.com/errata/RHSA-2014:0940</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2014:1084\">https://access.redhat.com/errata/RHSA-2014:1084</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2014-3517\">https://access.redhat.com/security/cve/CVE-2014-3517</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1112499\">https://bugzilla.redhat.com/show_bug.cgi?id=1112499</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjmj-p278-4jp5\">https://github.com/advisories/GHSA-xjmj-p278-4jp5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjmj-p278-4jp5",
            "title": "[nova] OpenStack Compute (Nova) Exposure of Sensitive Information to an Unauthorized Actor vulnerability",
            "date_modified": "2023-02-13T20:33:47.000Z",
            "date_published": "2022-05-14T01:58:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjmj-p278-4jp5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrapy 1.4 allows remote attackers to cause a denial of service (memory consumption) via large files because arbitrarily many files are read into memory, which is especially problematic if the files are then individually written in a separate thread to a slow storage resource, as demonstrated by interaction between dataReceived (in core/downloader/handlers/http11.py) and S3FilesStore.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-14158\">https://nvd.nist.gov/vuln/detail/CVE-2017-14158</a></li>\n<li><a href=\"https://github.com/scrapy/scrapy/issues/482\">https://github.com/scrapy/scrapy/issues/482</a></li>\n<li><a href=\"http://blog.csdn.net/wangtua/article/details/75228728\">http://blog.csdn.net/wangtua/article/details/75228728</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/blob/8b7a4d62a95e8f605e5dfb4e0b4f299e6403dc12/vulns/scrapy/PYSEC-2017-83.yaml\">https://github.com/pypa/advisory-database/blob/8b7a4d62a95e8f605e5dfb4e0b4f299e6403dc12/vulns/scrapy/PYSEC-2017-83.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7wm-ph43-c39p\">https://github.com/advisories/GHSA-h7wm-ph43-c39p</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/scrapy/PYSEC-2017-83.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/scrapy/PYSEC-2017-83.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7wm-ph43-c39p",
            "title": "[scrapy] Scrapy denial of service vulnerability",
            "date_modified": "2023-02-11T05:05:40.000Z",
            "date_published": "2022-05-17T01:16:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7wm-ph43-c39p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Authentication Bypass by Primary Weakness in GitHub repository modoboa/modoboa prior to 2.0.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0777\">https://nvd.nist.gov/vuln/detail/CVE-2023-0777</a></li>\n<li><a href=\"https://github.com/modoboa/modoboa/commit/47d17ac6643f870719691073956a26e4be0a4806\">https://github.com/modoboa/modoboa/commit/47d17ac6643f870719691073956a26e4be0a4806</a></li>\n<li><a href=\"https://huntr.dev/bounties/a17e7a9f-0fee-4130-a522-5a0466fc17c7\">https://huntr.dev/bounties/a17e7a9f-0fee-4130-a522-5a0466fc17c7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfhw-fm4m-52j6\">https://github.com/advisories/GHSA-rfhw-fm4m-52j6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfhw-fm4m-52j6",
            "title": "[modoboa] Authentication Bypass in modoboa",
            "date_modified": "2023-02-10T22:32:27.000Z",
            "date_published": "2023-02-10T21:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfhw-fm4m-52j6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>IPython provides an interactive Python shell and Jupyter kernel to use Python interactively. Versions prior to 8.10.0 are vulnerable to command injection in the <code>set_term_title</code> <a href=\"https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117\">function</a> under specific conditions. This has been patched in version 8.10.0.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users are only vulnerable when calling this function in Windows in a Python environment where <a href=\"https://docs.python.org/3/library/ctypes.html\">ctypes</a> is not available. The dependency on ctypes in <code>IPython.utils._process_win32</code> prevents the vulnerable code from ever being reached (making it effectively dead code). However, as a library that could be used by another tool, <code>set_term_title</code> could introduce a vulnerability for dependencies. Currently <code>set_term_title</code> is only called with (semi-)trusted input that contain the current working directory of the current IPython session. If an attacker can control directory names, and manage to get a user to <code>cd</code> into this directory, then the attacker can execute arbitrary commands contained in the folder names.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7\">https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f\">https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/991849c247fc208628879e7ca2923b3c218a5a75\">https://github.com/ipython/ipython/commit/991849c247fc208628879e7ca2923b3c218a5a75</a></li>\n<li><a href=\"https://github.com/Carreau/ipython/blob/7557ade0ed927475d5ab5b573d0ea4febfb22683/docs/source/whatsnew/version8.rst#ipython-810\">https://github.com/Carreau/ipython/blob/7557ade0ed927475d5ab5b573d0ea4febfb22683/docs/source/whatsnew/version8.rst#ipython-810</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24816\">https://nvd.nist.gov/vuln/detail/CVE-2023-24816</a></li>\n<li><a href=\"https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117\">https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117</a></li>\n<li><a href=\"https://github.com/ipython/ipython/blob/56e6925dfa50e2c7f4a6471547b8176275db7c25/IPython/utils/_process_win32.py#L20\">https://github.com/ipython/ipython/blob/56e6925dfa50e2c7f4a6471547b8176275db7c25/IPython/utils/_process_win32.py#L20</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-29gw-9793-fvw7\">https://github.com/advisories/GHSA-29gw-9793-fvw7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-29gw-9793-fvw7",
            "title": "[IPython] IPython vulnerable to command injection via set_term_title",
            "date_modified": "2023-02-10T22:08:05.000Z",
            "date_published": "2023-02-10T19:55:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-29gw-9793-fvw7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5306\">https://nvd.nist.gov/vuln/detail/CVE-2015-5306</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2015:1929\">https://access.redhat.com/errata/RHSA-2015:1929</a></li>\n<li><a href=\"https://bugs.launchpad.net/ironic-inspector/+bug/1506419\">https://bugs.launchpad.net/ironic-inspector/+bug/1506419</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1273698\">https://bugzilla.redhat.com/show_bug.cgi?id=1273698</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-2685.html\">http://rhn.redhat.com/errata/RHSA-2015-2685.html</a></li>\n<li><a href=\"https://opendev.org/openstack/ironic-inspector/commit/77d0052c5133034490386fbfadfdb1bdb49aa44f\">https://opendev.org/openstack/ironic-inspector/commit/77d0052c5133034490386fbfadfdb1bdb49aa44f</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2015:2685\">https://access.redhat.com/errata/RHSA-2015:2685</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2015-5306\">https://access.redhat.com/security/cve/CVE-2015-5306</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x64g-wjmw-w328\">https://github.com/advisories/GHSA-x64g-wjmw-w328</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x64g-wjmw-w328",
            "title": "[python-ironic-inspector-client] Injection vulnerability that affects ironic-discoverd",
            "date_modified": "2023-02-09T19:26:21.000Z",
            "date_published": "2019-07-05T21:10:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x64g-wjmw-w328"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of SVDF in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313\">vulnerable to a null pointer error</a>:</p>\n<pre><code class=\"language-cc\">  TfLiteTensor* state = GetVariableInput(context, node, kStateTensor);\n  // ...\n  GetTensorData&lt;float&gt;(state)\n</code></pre>\n<p>The <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119\"><code>GetVariableInput</code> function</a> can return a null pointer but <code>GetTensorData</code> assumes that the argument is always a valid tensor.</p>\n<pre><code class=\"language-cc\">TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,\n                               int index) {\n  TfLiteTensor* tensor = GetMutableInput(context, node, index);\n  return tensor-&gt;is_variable ? tensor : nullptr;\n}\n</code></pre>\n<p>Furthermore, because <code>GetVariableInput</code> calls <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90\"><code>GetMutableInput</code></a> which might return <code>nullptr</code>, the <code>tensor-&gt;is_variable</code> expression can also trigger a null pointer exception.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">5b048e87e4e55990dae6b547add4dae59f4e1c76</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37681\">https://nvd.nist.gov/vuln/detail/CVE-2021-37681</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/advisories/GHSA-7xwj-5r4v-429p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p",
            "title": "[tensorflow] NPE in TFLite",
            "date_modified": "2023-02-09T19:23:51.000Z",
            "date_published": "2021-08-25T14:40:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of SVDF in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313\">vulnerable to a null pointer error</a>:</p>\n<pre><code class=\"language-cc\">  TfLiteTensor* state = GetVariableInput(context, node, kStateTensor);\n  // ...\n  GetTensorData&lt;float&gt;(state)\n</code></pre>\n<p>The <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119\"><code>GetVariableInput</code> function</a> can return a null pointer but <code>GetTensorData</code> assumes that the argument is always a valid tensor.</p>\n<pre><code class=\"language-cc\">TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,\n                               int index) {\n  TfLiteTensor* tensor = GetMutableInput(context, node, index);\n  return tensor-&gt;is_variable ? tensor : nullptr;\n}\n</code></pre>\n<p>Furthermore, because <code>GetVariableInput</code> calls <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90\"><code>GetMutableInput</code></a> which might return <code>nullptr</code>, the <code>tensor-&gt;is_variable</code> expression can also trigger a null pointer exception.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">5b048e87e4e55990dae6b547add4dae59f4e1c76</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37681\">https://nvd.nist.gov/vuln/detail/CVE-2021-37681</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/advisories/GHSA-7xwj-5r4v-429p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p",
            "title": "[tensorflow] NPE in TFLite",
            "date_modified": "2023-02-09T19:23:51.000Z",
            "date_published": "2021-08-25T14:40:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of SVDF in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313\">vulnerable to a null pointer error</a>:</p>\n<pre><code class=\"language-cc\">  TfLiteTensor* state = GetVariableInput(context, node, kStateTensor);\n  // ...\n  GetTensorData&lt;float&gt;(state)\n</code></pre>\n<p>The <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119\"><code>GetVariableInput</code> function</a> can return a null pointer but <code>GetTensorData</code> assumes that the argument is always a valid tensor.</p>\n<pre><code class=\"language-cc\">TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,\n                               int index) {\n  TfLiteTensor* tensor = GetMutableInput(context, node, index);\n  return tensor-&gt;is_variable ? tensor : nullptr;\n}\n</code></pre>\n<p>Furthermore, because <code>GetVariableInput</code> calls <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90\"><code>GetMutableInput</code></a> which might return <code>nullptr</code>, the <code>tensor-&gt;is_variable</code> expression can also trigger a null pointer exception.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">5b048e87e4e55990dae6b547add4dae59f4e1c76</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37681\">https://nvd.nist.gov/vuln/detail/CVE-2021-37681</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76\">https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xwj-5r4v-429p\">https://github.com/advisories/GHSA-7xwj-5r4v-429p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p",
            "title": "[tensorflow] NPE in TFLite",
            "date_modified": "2023-02-09T19:23:51.000Z",
            "date_published": "2021-08-25T14:40:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xwj-5r4v-429p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of division in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">vulnerable to a division by 0 error</a></p>\n<p>There is no check that the divisor tensor does not contain zero elements.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">1e206baedf8bef0334cca3eb92bab134ef525a28</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37683\">https://nvd.nist.gov/vuln/detail/CVE-2021-37683</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h",
            "title": "[tensorflow] FPE in TFLite division operations",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of division in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">vulnerable to a division by 0 error</a></p>\n<p>There is no check that the divisor tensor does not contain zero elements.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">1e206baedf8bef0334cca3eb92bab134ef525a28</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37683\">https://nvd.nist.gov/vuln/detail/CVE-2021-37683</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h",
            "title": "[tensorflow] FPE in TFLite division operations",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of division in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">vulnerable to a division by 0 error</a></p>\n<p>There is no check that the divisor tensor does not contain zero elements.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">1e206baedf8bef0334cca3eb92bab134ef525a28</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37683\">https://nvd.nist.gov/vuln/detail/CVE-2021-37683</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h",
            "title": "[tensorflow] FPE in TFLite division operations",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2023-02-09T19:23:49.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2023-02-09T19:23:46.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2023-02-09T19:23:46.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2023-02-09T19:23:46.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nmodel = tf.keras.models.Sequential()\nmodel.add(tf.keras.Input(shape=(1, 2, 3)))\nmodel.add(tf.keras.layers.Dense(0, activation='relu'))\n\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninterpreter.invoke()\n</code></pre>\n<p>The <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285\">implementation</a> unconditionally dereferences a pointer.</p>\n<pre><code class=\"language-cc\">  if (y4 &gt; 1) {\n    // ...\n  } else {\n    for (int i0 = 0; i0 &lt; y0; ++i0) {\n      const T* input2_data_ptr = nullptr;\n      for (int i1 = 0; i1 &lt; y1; ++i1) {\n        input2_data_ptr = input2_data_reset;\n        for (int i2 = 0; i2 &lt; y2; ++i2) {\n          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,\n                             output_data_ptr);\n        }\n      }\n    }\n  }\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c\">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37688\">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c\">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vcjj-9vg7-vf68\">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vcjj-9vg7-vf68",
            "title": "[tensorflow] Null pointer dereference in TFLite",
            "date_modified": "2023-02-09T19:23:46.000Z",
            "date_published": "2021-08-25T14:39:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vcjj-9vg7-vf68"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nmodel = tf.keras.models.Sequential()\nmodel.add(tf.keras.Input(shape=(1, 2, 3)))\nmodel.add(tf.keras.layers.Dense(0, activation='relu'))\n\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninterpreter.invoke()\n</code></pre>\n<p>The <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285\">implementation</a> unconditionally dereferences a pointer.</p>\n<pre><code class=\"language-cc\">  if (y4 &gt; 1) {\n    // ...\n  } else {\n    for (int i0 = 0; i0 &lt; y0; ++i0) {\n      const T* input2_data_ptr = nullptr;\n      for (int i1 = 0; i1 &lt; y1; ++i1) {\n        input2_data_ptr = input2_data_reset;\n        for (int i2 = 0; i2 &lt; y2; ++i2) {\n          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,\n                             output_data_ptr);\n        }\n      }\n    }\n  }\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c\">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37688\">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c\">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vcjj-9vg7-vf68\">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vcjj-9vg7-vf68",
            "title": "[tensorflow] Null pointer dereference in TFLite",
            "date_modified": "2023-02-09T19:23:46.000Z",
            "date_published": "2021-08-25T14:39:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vcjj-9vg7-vf68"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}