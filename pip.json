{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the <code>ecdsa.SigningKey.sign_digest()</code> API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tlsfuzzer/python-ecdsa/security/advisories/GHSA-wj6h-64fc-37mp\">https://github.com/tlsfuzzer/python-ecdsa/security/advisories/GHSA-wj6h-64fc-37mp</a></li>\n<li><a href=\"https://github.com/tlsfuzzer/python-ecdsa/blob/master/SECURITY.md\">https://github.com/tlsfuzzer/python-ecdsa/blob/master/SECURITY.md</a></li>\n<li><a href=\"https://minerva.crocs.fi.muni.cz/\">https://minerva.crocs.fi.muni.cz/</a></li>\n<li><a href=\"https://securitypitfalls.wordpress.com/2018/08/03/constant-time-compare-in-python/\">https://securitypitfalls.wordpress.com/2018/08/03/constant-time-compare-in-python/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wj6h-64fc-37mp\">https://github.com/advisories/GHSA-wj6h-64fc-37mp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wj6h-64fc-37mp",
            "title": "[ecdsa] Minerva timing attack on P-256 in python-ecdsa",
            "date_modified": "2024-01-22T21:35:29.000Z",
            "date_published": "2024-01-22T21:35:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wj6h-64fc-37mp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using <code>tuitse_html</code> without quoting the input, there is a html injection vulnerability. It should use the django version <code>django.utils.html.format_html</code>, instead of <code>string.format()</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to version 1.3.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Sanitizing Taigi input with HTML quotation.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/i3thuan5/TuiTse-TsuSin/pull/22\">https://github.com/i3thuan5/TuiTse-TsuSin/pull/22</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/i3thuan5/TuiTse-TsuSin/security/advisories/GHSA-m4m5-j36m-8x72\">https://github.com/i3thuan5/TuiTse-TsuSin/security/advisories/GHSA-m4m5-j36m-8x72</a></li>\n<li><a href=\"https://github.com/i3thuan5/TuiTse-TsuSin/pull/22\">https://github.com/i3thuan5/TuiTse-TsuSin/pull/22</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m4m5-j36m-8x72\">https://github.com/advisories/GHSA-m4m5-j36m-8x72</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m4m5-j36m-8x72",
            "title": "[TuiTse-TsuSin] html injection vulnerability in the `tuitse_html` function.",
            "date_modified": "2024-01-22T21:32:54.000Z",
            "date_published": "2024-01-22T21:32:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m4m5-j36m-8x72"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The JSON loader in Embedchain before 0.1.57 allows a ReDoS (regular expression denial of service) via a long string to json.py.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23732\">https://nvd.nist.gov/vuln/detail/CVE-2024-23732</a></li>\n<li><a href=\"https://github.com/embedchain/embedchain/pull/1122\">https://github.com/embedchain/embedchain/pull/1122</a></li>\n<li><a href=\"https://github.com/embedchain/embedchain/compare/0.1.56...0.1.57\">https://github.com/embedchain/embedchain/compare/0.1.56...0.1.57</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/embedchain/PYSEC-2024-8.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/embedchain/PYSEC-2024-8.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r67w-f99w-mgxj\">https://github.com/advisories/GHSA-r67w-f99w-mgxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r67w-f99w-mgxj",
            "title": "[embedchain] ReDoS in Embedchain",
            "date_modified": "2024-01-22T21:29:15.000Z",
            "date_published": "2024-01-21T18:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r67w-f99w-mgxj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50447\">https://nvd.nist.gov/vuln/detail/CVE-2023-50447</a></li>\n<li><a href=\"https://devhub.checkmarx.com/cve-details/CVE-2023-50447/\">https://devhub.checkmarx.com/cve-details/CVE-2023-50447/</a></li>\n<li><a href=\"https://duartecsantos.github.io/2023-01-02-CVE-2023-50447/\">https://duartecsantos.github.io/2023-01-02-CVE-2023-50447/</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/45c726fd4daa63236a8f3653530f297dc87b160a\">https://github.com/python-pillow/Pillow/commit/45c726fd4daa63236a8f3653530f297dc87b160a</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html#security\">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html#security</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/01/20/1\">http://www.openwall.com/lists/oss-security/2024/01/20/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3f63-hfp8-52jq\">https://github.com/advisories/GHSA-3f63-hfp8-52jq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3f63-hfp8-52jq",
            "title": "[Pillow] Arbitrary Code Execution in Pillow",
            "date_modified": "2024-01-22T21:28:20.000Z",
            "date_published": "2024-01-19T21:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3f63-hfp8-52jq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The OpenAPI loader in Embedchain before 0.1.57 allows attackers to execute arbitrary code, related to the openapi.py yaml.load function argument.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23731\">https://nvd.nist.gov/vuln/detail/CVE-2024-23731</a></li>\n<li><a href=\"https://github.com/embedchain/embedchain/pull/1122\">https://github.com/embedchain/embedchain/pull/1122</a></li>\n<li><a href=\"https://github.com/embedchain/embedchain/compare/0.1.56...0.1.57\">https://github.com/embedchain/embedchain/compare/0.1.56...0.1.57</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/embedchain/PYSEC-2024-7.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/embedchain/PYSEC-2024-7.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhhj-5436-95vf\">https://github.com/advisories/GHSA-rhhj-5436-95vf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhhj-5436-95vf",
            "title": "[embedchain] Code execution in Embedchain",
            "date_modified": "2024-01-22T21:27:27.000Z",
            "date_published": "2024-01-21T18:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhhj-5436-95vf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The OpenAPI and ChatGPT plugin loaders in LlamaHub (aka llama-hub) before 0.0.67 allow attackers to execute arbitrary code because safe_load is not used for YAML.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23730\">https://nvd.nist.gov/vuln/detail/CVE-2024-23730</a></li>\n<li><a href=\"https://github.com/run-llama/llama-hub/pull/841/commits/9dc9c21a5c6d0226d1d2101c3121d4f085743d52\">https://github.com/run-llama/llama-hub/pull/841/commits/9dc9c21a5c6d0226d1d2101c3121d4f085743d52</a></li>\n<li><a href=\"https://github.com/run-llama/llama-hub/blob/v0.0.67/CHANGELOG.md\">https://github.com/run-llama/llama-hub/blob/v0.0.67/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/run-llama/llama-hub/releases/tag/v0.0.67\">https://github.com/run-llama/llama-hub/releases/tag/v0.0.67</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-297x-2qf3-jrj3\">https://github.com/advisories/GHSA-297x-2qf3-jrj3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-297x-2qf3-jrj3",
            "title": "[llama-hub] Unsafe yaml deserialization in llama-hub",
            "date_modified": "2024-01-22T21:23:36.000Z",
            "date_published": "2024-01-21T18:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-297x-2qf3-jrj3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MetaGPT through 0.6.4 allows the QaEngineer role to execute arbitrary code because RunCode.run_script() passes shell metacharacters to subprocess.Popen.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23750\">https://nvd.nist.gov/vuln/detail/CVE-2024-23750</a></li>\n<li><a href=\"https://github.com/geekan/MetaGPT/issues/731\">https://github.com/geekan/MetaGPT/issues/731</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/metagpt/PYSEC-2024-9.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/metagpt/PYSEC-2024-9.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7ph-8423-pf4j\">https://github.com/advisories/GHSA-g7ph-8423-pf4j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7ph-8423-pf4j",
            "title": "[metagpt] Code execution in metagpt",
            "date_modified": "2024-01-22T21:20:12.000Z",
            "date_published": "2024-01-22T03:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7ph-8423-pf4j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in openstack-keystone, only the first 72 characters of an application secret are verified allowing attackers bypass some password complexity which administrators may be counting on. The highest threat from this vulnerability is to data confidentiality and integrity. A <a href=\"https://opendev.org/openstack/keystone/commit/7859ed26003858ebfd9a5e866b43f1a6a9e83dca\">patch</a> is available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3563\">https://nvd.nist.gov/vuln/detail/CVE-2021-3563</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2021-3563\">https://access.redhat.com/security/cve/CVE-2021-3563</a></li>\n<li><a href=\"https://bugs.launchpad.net/ossa/+bug/1901891\">https://bugs.launchpad.net/ossa/+bug/1901891</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1962908\">https://bugzilla.redhat.com/show_bug.cgi?id=1962908</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2021-3563\">https://security-tracker.debian.org/tracker/CVE-2021-3563</a></li>\n<li><a href=\"https://review.opendev.org/c/openstack/keystone/+/803641\">https://review.opendev.org/c/openstack/keystone/+/803641</a></li>\n<li><a href=\"https://review.opendev.org/c/openstack/keystone/+/828595\">https://review.opendev.org/c/openstack/keystone/+/828595</a></li>\n<li><a href=\"https://review.opendev.org/c/openstack/keystone/+/856489\">https://review.opendev.org/c/openstack/keystone/+/856489</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2024/01/msg00007.html\">https://lists.debian.org/debian-lts-announce/2024/01/msg00007.html</a></li>\n<li><a href=\"https://opendev.org/openstack/keystone/commit/7859ed26003858ebfd9a5e866b43f1a6a9e83dca\">https://opendev.org/openstack/keystone/commit/7859ed26003858ebfd9a5e866b43f1a6a9e83dca</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cc99-whm5-mmq3\">https://github.com/advisories/GHSA-cc99-whm5-mmq3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cc99-whm5-mmq3",
            "title": "[keystone] Openstack Keystone Incorrect Authorization vulnerability",
            "date_modified": "2024-01-22T20:25:13.000Z",
            "date_published": "2022-08-27T00:00:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cc99-whm5-mmq3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of JupyterLab who click on a malicious link may get their <code>Authorization</code> and <code>XSRFToken</code> tokens exposed to a third party when running an older <code>jupyter-server</code> version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>JupyterLab 4.1.0b2, 4.0.11, and 3.6.7 were patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround has been identified, however users should ensure to upgrade <code>jupyter-server</code> to version 2.7.2 or newer which includes a redirect vulnerability fix.</p>\n<h3 id=\"references\">References</h3>\n<p>Vulnerability reported by user @davwwwx via the <a href=\"https://app.intigriti.com/programs/jupyter/jupyter/detail\">bug bounty program</a> <a href=\"https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en\">sponsored by the European Commission</a> and hosted on the <a href=\"https://www.intigriti.com/\">Intigriti platform</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947\">https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96\">https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa\">https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22421\">https://nvd.nist.gov/vuln/detail/CVE-2024-22421</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6\">https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44cc-43rp-5947\">https://github.com/advisories/GHSA-44cc-43rp-5947</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44cc-43rp-5947",
            "title": "[notebook] JupyterLab vulnerable to potential authentication and CSRF tokens leak",
            "date_modified": "2024-01-22T20:57:53.000Z",
            "date_published": "2024-01-19T20:28:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44cc-43rp-5947"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of JupyterLab who click on a malicious link may get their <code>Authorization</code> and <code>XSRFToken</code> tokens exposed to a third party when running an older <code>jupyter-server</code> version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>JupyterLab 4.1.0b2, 4.0.11, and 3.6.7 were patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround has been identified, however users should ensure to upgrade <code>jupyter-server</code> to version 2.7.2 or newer which includes a redirect vulnerability fix.</p>\n<h3 id=\"references\">References</h3>\n<p>Vulnerability reported by user @davwwwx via the <a href=\"https://app.intigriti.com/programs/jupyter/jupyter/detail\">bug bounty program</a> <a href=\"https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en\">sponsored by the European Commission</a> and hosted on the <a href=\"https://www.intigriti.com/\">Intigriti platform</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947\">https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96\">https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa\">https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22421\">https://nvd.nist.gov/vuln/detail/CVE-2024-22421</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6\">https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44cc-43rp-5947\">https://github.com/advisories/GHSA-44cc-43rp-5947</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44cc-43rp-5947",
            "title": "[jupyterlab] JupyterLab vulnerable to potential authentication and CSRF tokens leak",
            "date_modified": "2024-01-22T20:57:53.000Z",
            "date_published": "2024-01-19T20:28:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44cc-43rp-5947"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of JupyterLab who click on a malicious link may get their <code>Authorization</code> and <code>XSRFToken</code> tokens exposed to a third party when running an older <code>jupyter-server</code> version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>JupyterLab 4.1.0b2, 4.0.11, and 3.6.7 were patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround has been identified, however users should ensure to upgrade <code>jupyter-server</code> to version 2.7.2 or newer which includes a redirect vulnerability fix.</p>\n<h3 id=\"references\">References</h3>\n<p>Vulnerability reported by user @davwwwx via the <a href=\"https://app.intigriti.com/programs/jupyter/jupyter/detail\">bug bounty program</a> <a href=\"https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en\">sponsored by the European Commission</a> and hosted on the <a href=\"https://www.intigriti.com/\">Intigriti platform</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947\">https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96\">https://github.com/jupyterlab/jupyterlab/commit/1ef7a4fa0202ebdf663e1cc0b45c8813a34a0b96</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa\">https://github.com/jupyterlab/jupyterlab/commit/fccd83dc4441da0384ee3fd1322c3b2d9ad4caaa</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22421\">https://nvd.nist.gov/vuln/detail/CVE-2024-22421</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6\">https://github.com/jupyterlab/jupyterlab/commit/19bd9b96cb2e77170a67e43121637d0b5619e8c6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44cc-43rp-5947\">https://github.com/advisories/GHSA-44cc-43rp-5947</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44cc-43rp-5947",
            "title": "[jupyterlab] JupyterLab vulnerable to potential authentication and CSRF tokens leak",
            "date_modified": "2024-01-22T20:57:53.000Z",
            "date_published": "2024-01-19T20:28:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44cc-43rp-5947"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability depends on user interaction by opening a malicious notebook with Markdown cells, or Markdown file using JupyterLab preview feature.</p>\n<p>A malicious user can access any data that the attacked user has access to as well as perform arbitrary requests acting as the attacked user.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>JupyterLab v4.0.11 was patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can either disable the table of contents extension by running:</p>\n<pre><code class=\"language-bash\">jupyter labextension disable @jupyterlab/toc-extension:registry\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Vulnerability reported via the <a href=\"https://app.intigriti.com/programs/jupyter/jupyter/detail\">bug bounty program</a> <a href=\"https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en\">sponsored by the European Commission</a> and hosted on the <a href=\"https://www.intigriti.com/\">Intigriti platform</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4\">https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/dda0033cd49449572d077bbecd33b18d8d05f48a\">https://github.com/jupyterlab/jupyterlab/commit/dda0033cd49449572d077bbecd33b18d8d05f48a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m77-cmpx-vjc4\">https://github.com/advisories/GHSA-4m77-cmpx-vjc4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m77-cmpx-vjc4",
            "title": "[notebook] JupyterLab vulnerable to SXSS in Markdown Preview",
            "date_modified": "2024-01-19T20:24:11.000Z",
            "date_published": "2024-01-19T20:24:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m77-cmpx-vjc4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability depends on user interaction by opening a malicious notebook with Markdown cells, or Markdown file using JupyterLab preview feature.</p>\n<p>A malicious user can access any data that the attacked user has access to as well as perform arbitrary requests acting as the attacked user.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>JupyterLab v4.0.11 was patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can either disable the table of contents extension by running:</p>\n<pre><code class=\"language-bash\">jupyter labextension disable @jupyterlab/toc-extension:registry\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Vulnerability reported via the <a href=\"https://app.intigriti.com/programs/jupyter/jupyter/detail\">bug bounty program</a> <a href=\"https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en\">sponsored by the European Commission</a> and hosted on the <a href=\"https://www.intigriti.com/\">Intigriti platform</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4\">https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4</a></li>\n<li><a href=\"https://github.com/jupyterlab/jupyterlab/commit/dda0033cd49449572d077bbecd33b18d8d05f48a\">https://github.com/jupyterlab/jupyterlab/commit/dda0033cd49449572d077bbecd33b18d8d05f48a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m77-cmpx-vjc4\">https://github.com/advisories/GHSA-4m77-cmpx-vjc4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m77-cmpx-vjc4",
            "title": "[jupyterlab] JupyterLab vulnerable to SXSS in Markdown Preview",
            "date_modified": "2024-01-19T20:24:11.000Z",
            "date_published": "2024-01-19T20:24:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m77-cmpx-vjc4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Appwrite CLI before 3.0.0, when using the login command, the credentials of the Appwrite user are stored in a ~/.appwrite/prefs.json file with 0644 as UNIX permissions. Any user of the local system can access those credentials.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50974\">https://nvd.nist.gov/vuln/detail/CVE-2023-50974</a></li>\n<li><a href=\"https://appwrite.io/docs/tooling/command-line/installation\">https://appwrite.io/docs/tooling/command-line/installation</a></li>\n<li><a href=\"https://gist.github.com/SkypLabs/72ee00ecfa7d1a3494e2d69a24279c1d\">https://gist.github.com/SkypLabs/72ee00ecfa7d1a3494e2d69a24279c1d</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/appwrite/PYSEC-2024-2.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/appwrite/PYSEC-2024-2.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g777-crp9-m27g\">https://github.com/advisories/GHSA-g777-crp9-m27g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g777-crp9-m27g",
            "title": "[appwrite] Apprite CLI makes Use of Hard-coded Credentials",
            "date_modified": "2024-01-19T19:41:17.000Z",
            "date_published": "2024-01-09T09:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g777-crp9-m27g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-40978\">https://nvd.nist.gov/vuln/detail/CVE-2021-40978</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs/issues/2601\">https://github.com/mkdocs/mkdocs/issues/2601</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs\">https://github.com/mkdocs/mkdocs</a></li>\n<li><a href=\"https://github.com/nisdn/CVE-2021-40978/issues/1\">https://github.com/nisdn/CVE-2021-40978/issues/1</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs/pull/2604\">https://github.com/mkdocs/mkdocs/pull/2604</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs/releases/tag/1.2.3\">https://github.com/mkdocs/mkdocs/releases/tag/1.2.3</a></li>\n<li><a href=\"https://github.com/nisdn/CVE-2021-40978\">https://github.com/nisdn/CVE-2021-40978</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b\">https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml</a></li>\n<li><a href=\"https://github.com/mkdocs/mkdocs/commit/1b15412f4caae476c262210315fd068d0521a833\">https://github.com/mkdocs/mkdocs/commit/1b15412f4caae476c262210315fd068d0521a833</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh9q-34h6-hcv9\">https://github.com/advisories/GHSA-qh9q-34h6-hcv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh9q-34h6-hcv9",
            "title": "[mkdocs] Directory traversal in mkdocs",
            "date_modified": "2024-01-19T19:40:37.000Z",
            "date_published": "2021-10-12T18:48:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh9q-34h6-hcv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>skins/plone_templates/default_error_message.pt</code> in Plone before 2.5.3 allows remote attackers to inject arbitrary web script or HTML via the type_name parameter to <code>Members/ipa/createObject</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-1340\">https://nvd.nist.gov/vuln/detail/CVE-2011-1340</a></li>\n<li><a href=\"http://jvn.jp/en/jp/JVN41222793/index.html\">http://jvn.jp/en/jp/JVN41222793/index.html</a></li>\n<li><a href=\"http://jvndb.jvn.jp/jvndb/JVNDB-2011-000056\">http://jvndb.jvn.jp/jvndb/JVNDB-2011-000056</a></li>\n<li><a href=\"https://web.archive.org/web/20110816092954/http://dev.plone.org/plone/changeset/12262\">https://web.archive.org/web/20110816092954/http://dev.plone.org/plone/changeset/12262</a></li>\n<li><a href=\"https://web.archive.org/web/20110817133423/https://dev.plone.org/plone/ticket/6110\">https://web.archive.org/web/20110817133423/https://dev.plone.org/plone/ticket/6110</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cvwc-g7fw-7xrj\">https://github.com/advisories/GHSA-cvwc-g7fw-7xrj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cvwc-g7fw-7xrj",
            "title": "[plone] Plone XSS Vulnerability",
            "date_modified": "2024-01-19T19:24:50.000Z",
            "date_published": "2022-05-17T05:40:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cvwc-g7fw-7xrj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An open redirect vulnerability in the python package Flask-Security-Too &lt;=5.3.2 allows attackers to redirect unsuspecting users to malicious sites via a crafted URL by abusing the ?next parameter on the /login and /register routes.</p>\n<p>Flask-Security-Too contains logic to validate that the URL specified within the next parameter is either relative or has the same network location as the requesting URL in an attempt to prevent open redirections. Previously known examples that bypassed the validation logic such as <code>https://example/login?next=\\\\\\\\\\\\github.com</code> were patched in version 4.1.0</p>\n<p>However, examples such as <code>https://example/login?next=/\\\\github.com</code> and <code>https://example/login?next=\\\\/github.com</code> were discovered due to how web browsers normalize slashes in URLs, which makes the package vulnerable through version &lt;=5.3.2</p>\n<p>Additionally, with Werkzeug &gt;=2.1.0 the autocorrect_location_header configuration was changed to False - which means that location headers in redirects are relative by default. Thus, this issue may impact applications that were previously not impacted, if they are using Werkzeug &gt;=2.1.0 as the WSGI layer.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49438\">https://nvd.nist.gov/vuln/detail/CVE-2023-49438</a></li>\n<li><a href=\"https://github.com/Flask-Middleware/flask-security\">https://github.com/Flask-Middleware/flask-security</a></li>\n<li><a href=\"https://github.com/brandon-t-elliott/CVE-2023-49438\">https://github.com/brandon-t-elliott/CVE-2023-49438</a></li>\n<li><a href=\"https://github.com/Flask-Middleware/flask-security/commit/8b5abc4d4db9926a3d76b34b8b03255effb5e712\">https://github.com/Flask-Middleware/flask-security/commit/8b5abc4d4db9926a3d76b34b8b03255effb5e712</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6HCYH377TPUMUHELPI36PDS2ZM4VFIXM/\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6HCYH377TPUMUHELPI36PDS2ZM4VFIXM/</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/flask-security-too/PYSEC-2023-248.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/flask-security-too/PYSEC-2023-248.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-672h-6x89-76m5\">https://github.com/advisories/GHSA-672h-6x89-76m5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-672h-6x89-76m5",
            "title": "[flask-security-too] Open redirect vulnerability in Flask-Security-Too",
            "date_modified": "2024-01-19T19:22:23.000Z",
            "date_published": "2023-12-27T00:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-672h-6x89-76m5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Fabric before 1.1.0 allows local users to overwrite arbitrary files via a symlink attack on (1) a <code>/tmp/fab.*.tar</code> file or (2) certain other files in the top level of <code>/tmp/</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-2185\">https://nvd.nist.gov/vuln/detail/CVE-2011-2185</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=710462\">https://bugzilla.redhat.com/show_bug.cgi?id=710462</a></li>\n<li><a href=\"http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=629003\">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=629003</a></li>\n<li><a href=\"http://code.fabfile.org/projects/fabric/files/Fabric-1.1.0.tar.gz\">http://code.fabfile.org/projects/fabric/files/Fabric-1.1.0.tar.gz</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2011-July/062534.html\">http://lists.fedoraproject.org/pipermail/package-announce/2011-July/062534.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/06/03/5\">http://www.openwall.com/lists/oss-security/2011/06/03/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/06/06/12\">http://www.openwall.com/lists/oss-security/2011/06/06/12</a></li>\n<li><a href=\"https://github.com/fabric/fabric/commit/3445b5653cd297039443110548fb3cab2e8e25af\">https://github.com/fabric/fabric/commit/3445b5653cd297039443110548fb3cab2e8e25af</a></li>\n<li><a href=\"https://github.com/fabric/fabric/commit/d7470d2db919ffcee80c245cf87e6d8d4ba6909c\">https://github.com/fabric/fabric/commit/d7470d2db919ffcee80c245cf87e6d8d4ba6909c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xwg2-qc6c-7c3q\">https://github.com/advisories/GHSA-xwg2-qc6c-7c3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xwg2-qc6c-7c3q",
            "title": "[fabric] Fabric vulnerable to symlink attack on tmp files",
            "date_modified": "2024-01-19T18:16:50.000Z",
            "date_published": "2022-05-17T05:40:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xwg2-qc6c-7c3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>virtualenv.py in virtualenv before 1.5 allows local users to overwrite arbitrary files via a symlink attack on a certain file in /tmp/.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4617\">https://nvd.nist.gov/vuln/detail/CVE-2011-4617</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071638.html\">http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071638.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071643.html\">http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071643.html</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/2\">http://openwall.com/lists/oss-security/2011/12/19/2</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/4\">http://openwall.com/lists/oss-security/2011/12/19/4</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/5\">http://openwall.com/lists/oss-security/2011/12/19/5</a></li>\n<li><a href=\"https://github.com/pypa/virtualenv/commit/68075ad9ededf7df2c46d385f836c13b729de2ca\">https://github.com/pypa/virtualenv/commit/68075ad9ededf7df2c46d385f836c13b729de2ca</a></li>\n<li><a href=\"https://web.archive.org/web/20200228151935/https://bitbucket.org/ianb/virtualenv/commits/8be37c509fe5\">https://web.archive.org/web/20200228151935/https://bitbucket.org/ianb/virtualenv/commits/8be37c509fe5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jhc-wjqf-5f2c\">https://github.com/advisories/GHSA-3jhc-wjqf-5f2c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jhc-wjqf-5f2c",
            "title": "[virtualenv] Virtualenv Allows Symlink Attack on /tmp/",
            "date_modified": "2024-01-19T17:40:43.000Z",
            "date_published": "2022-05-17T05:35:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jhc-wjqf-5f2c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><code>concat</code> built-in can write over the bounds of the memory buffer that was allocated for it and thus overwrite existing valid data. The root cause is that the <code>build_IR</code> for <code>concat</code> doesn't properly adhere to the API of copy functions (for <code>&gt;=0.3.2</code> the <code>copy_bytes</code> function).</p>\n<p>A contract search was performed and no vulnerable contracts were found in production.</p>\n<p>Tracked in issue <a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>build_IR</code> allocates a new internal variable for the concatenation: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550</a></p>\n<p>Notice that the buffer is allocated for the <code>maxlen</code> + 1 word to actually hold the length of the array.</p>\n<p>Later the <code>copy_bytes</code> function is used to copy the actual source arguments to the destination: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572</a></p>\n<p>The <code>dst_data</code> is defined via:</p>\n<ul>\n<li><code>data ptr</code> - to skip the 1 word that holds the length</li>\n<li><code>offset</code>  - to skip the source arguments that were already written to the buffer<ul>\n<li>the <code>offset</code> is increased via: <code>[\"set\", ofst, [\"add\", ofst, arglen]]</code>, ie it is increased by the length of the source argument</li>\n</ul>\n</li>\n</ul>\n<p>Now, the <code>copy_bytes</code> function has multiple control flow paths, the following ones are of interest:</p>\n<ol>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320</a></li>\n</ol>\n<p>Note that the function itself contains the following note: \n<a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247</a></p>\n<p>That is we can ask for a copy of <code>1B</code> yet a whole word is copied.</p>\n<p>Consider the first interesting path -  if the <code>dst_data</code>'s distance to the end of the concat data buffer is <code>&lt; 32B</code>, the <code>copy_op = STORE(dst, LOAD(src))</code> from <code>copy_bytes</code> will result in buffer overflow as it essentially will <code>mstore</code> to <code>dst_data</code> the <code>mload</code> of the source (mload will load whole word and the distance of the <code>dst_data</code> to the word boundary is <code>&lt;32B</code>).</p>\n<p>From the two mentioned paths in <code>copy_bytes</code> it can be seen that both sources from memory and storage can cause the corruption.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The main attack vector that was found was when the <code>concat</code> is inside an <code>internal</code> function.  Suppose we have an <code>external</code> function that calls <code>internal</code> one. In such case the address space is divided such that the memory for the internal function is in <em>lower</em>  portion of the adr space. As such the buffer overflow can overwrite <em>valid</em> data of the caller.</p>\n<p>Here is a simple example:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\n@internal\ndef bar() -&gt; uint256:\n    sss: String[2] = concat(\"a\", \"b\") \n    return 1\n\n\n@external\ndef foo() -&gt; int256:\n    a: int256 = -1\n    b: uint256 = self.bar()\n    return a \n</code></pre>\n<p><code>foo</code> should clearly return <code>-1</code>, but it returns <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code></p>\n<p><code>-1</code> was used intentionally due to its bit structure but the value here is fairly irelevant. In this example during the second iteration of the for loop in the <code>build_IR</code> <code>mload</code> to <code>dst+1</code> will be executed (because len('a') == 1), thus the function will write <code>1B</code> over the bounds of the buffer. The string 'b' is stored such that its right-most byte is a zero byte. So a zero byte will be written over the bounds.  So when <code>-1</code> is considered it's left-most B will be overwritten to all 0. Therefore it can be seen: <code>452312848583266388373324160190187140051835877600158453279131187530910662655 == (2**248-1)</code> will output <code>True</code>.</p>\n<h4 id=\"ir\">IR</h4>\n<p>If we look at the contract's IR (vyper --no optimize -f ir), we see:</p>\n<pre><code># Line 30\n                          /* a: int256 = -1 */ [mstore, 320, -1 &lt;-1&gt;],\n</code></pre>\n<p>And for the second iteration of the loop in concat:</p>\n<pre><code> len,\n                        [mload, arg],\n                        [seq,\n                          [with,\n                            src,\n                            [add, arg, 32],\n                            [with,\n                              dst,\n                              [add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],\n                              [mstore, dst, [mload, src]]]],\n                          [set, concat_ofst, [add, concat_ofst, len]]]]],\n                    [mstore, 256 &lt;concat destination&gt;, concat_ofst],\n                    256 &lt;concat destination&gt;]],\n</code></pre>\n<p>So the address of the <code>int</code> is 320. </p>\n<p>The <code>dst</code> is defined as: <code>[add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],</code>.\nIn the second iteration the <code>concat_ofst</code> will be 1 because <code>len('a)==1</code> so <code>256+32+1 = 289</code>. Now this address will be <code>mstored</code> to - so the last mstored B will have the address <code>289+32=320</code> which clearly overlaps with the address of the <code>int a</code>.</p>\n<h4 id=\"poc-2\">PoC 2</h4>\n<p>Due to how <code>immutables</code> are handled, they can be corrupted too:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\ni: immutable(int256)\n\n@external\ndef __init__():\n    i = -1\n    s: String[2] = concat(\"a\", \"b\")\n\n@external\ndef foo() -&gt; int256:\n    return i\n</code></pre>\n<p>Output of calling <code>foo()</code> = <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The buffer overflow can result in the change of semantics of the contract. The overflow is length-dependent and thus it might go unnoticed during contract testing.</p>\n<p>However, certainly not all usages of <code>concat</code> will result in overwritten valid data as we require it to be in an <code>internal</code> function and close to the <code>return</code> statement where other memory allocations don't occur. </p>\n<h3 id=\"concluding-remarks\">Concluding remarks</h3>\n<p>The bug based on the fast path in <code>copy_bytes</code> was likely introduced in: <code>548d35d720fb6fd8efbdc0ce525bed259a73f0b9</code>. <code>git bisect</code> was used between v0.3.1 and v0.3.2, <code>forge test</code> was run and the test asserted that the function indeed returns -1.</p>\n<p>For the general case, <code>0.3.0</code> and <code>0.3.1</code> are also affected. This issue has been addressed in commit <code>55e18f6d1</code> which will be included in future releases. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22419\">https://nvd.nist.gov/vuln/detail/CVE-2024-22419</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f\">https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p",
            "title": "[vyper] concat built-in can corrupt memory in vyper",
            "date_modified": "2024-01-19T16:19:52.000Z",
            "date_published": "2024-01-19T16:19:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}