{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the snowflake-connector-python PyPI package, when an attacker is able to supply arbitrary input to the get_file_transfer_type method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-42965\">https://nvd.nist.gov/vuln/detail/CVE-2022-42965</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/snowflake-connector-python-redos-xray-257185/\">https://research.jfrog.com/vulnerabilities/snowflake-connector-python-redos-xray-257185/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4r6j-fwcx-94cf\">https://github.com/advisories/GHSA-4r6j-fwcx-94cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4r6j-fwcx-94cf",
            "title": "[snowflake-connector-python] snowflake-connector-python is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2022-11-10T20:09:28.000Z",
            "date_published": "2022-11-10T12:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4r6j-fwcx-94cf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the pymatgen PyPI package, when an attacker is able to supply arbitrary input to the GaussianInput.from_string method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-42964\">https://nvd.nist.gov/vuln/detail/CVE-2022-42964</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/pymatgen-redos-xray-257184/\">https://research.jfrog.com/vulnerabilities/pymatgen-redos-xray-257184/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jqp-885w-xj32\">https://github.com/advisories/GHSA-5jqp-885w-xj32</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jqp-885w-xj32",
            "title": "[pymatgen] pymatgen is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2022-11-10T20:09:48.000Z",
            "date_published": "2022-11-10T12:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jqp-885w-xj32"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the cleo PyPI package, when an attacker is able to supply arbitrary input to the Table.set_rows method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-42966\">https://nvd.nist.gov/vuln/detail/CVE-2022-42966</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186\">https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2p9h-ccw7-33gf\">https://github.com/advisories/GHSA-2p9h-ccw7-33gf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2p9h-ccw7-33gf",
            "title": "[cleo] cleo is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2022-11-10T20:08:57.000Z",
            "date_published": "2022-11-10T12:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2p9h-ccw7-33gf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It was discovered that the C++ implementation (which underlies the R, Python and Ruby implementations) of Apache Arrow 0.14.0 to 0.14.1 had a uninitialized memory bug when building arrays with null values in some cases. This can lead to uninitialized memory being unintentionally shared if Arrow Arrays are transmitted over the wire (for instance with Flight) or persisted in the streaming IPC and file formats.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12408\">https://nvd.nist.gov/vuln/detail/CVE-2019-12408</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/49f067b1c5fb7493d952580f0d2d032819ba351f7a78743c21126269@%3Cdev.arrow.apache.org%3E\">https://lists.apache.org/thread.html/49f067b1c5fb7493d952580f0d2d032819ba351f7a78743c21126269@%3Cdev.arrow.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/efd8bbf57427d3c303b5316d208a335f8d0c0dbe0dc4c87cfa995073@%3Cannounce.apache.org%3E\">https://lists.apache.org/thread.html/efd8bbf57427d3c303b5316d208a335f8d0c0dbe0dc4c87cfa995073@%3Cannounce.apache.org%3E</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/red-arrow/CVE-2019-12408.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/red-arrow/CVE-2019-12408.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8cw2-jv5c-c825\">https://github.com/advisories/GHSA-8cw2-jv5c-c825</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8cw2-jv5c-c825",
            "title": "[pyarrow] Missing Initialization of Resource in Apache Arrow",
            "date_modified": "2022-11-09T20:59:40.000Z",
            "date_published": "2022-05-24T17:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8cw2-jv5c-c825"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>clickhouse-driver before 0.1.5 allows a malicious clickhouse server to trigger a crash or execute arbitrary code (on a database client) via a crafted server response, due to a buffer overflow.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26759\">https://nvd.nist.gov/vuln/detail/CVE-2020-26759</a></li>\n<li><a href=\"https://github.com/mymarilyn/clickhouse-driver/commit/3e990547e064b8fca916b23a0f7d6fe8c63c7f6b\">https://github.com/mymarilyn/clickhouse-driver/commit/3e990547e064b8fca916b23a0f7d6fe8c63c7f6b</a></li>\n<li><a href=\"https://github.com/mymarilyn/clickhouse-driver/commit/d708ed548e1d6f254ba81a21de8ba543a53b5598\">https://github.com/mymarilyn/clickhouse-driver/commit/d708ed548e1d6f254ba81a21de8ba543a53b5598</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vgv5-cxvh-vfxh\">https://github.com/advisories/GHSA-vgv5-cxvh-vfxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vgv5-cxvh-vfxh",
            "title": "[clickhouse-driver] Arbitrary code execution in clickhouse-driver",
            "date_modified": "2022-11-08T18:16:45.000Z",
            "date_published": "2021-04-07T20:50:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vgv5-cxvh-vfxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache IoTDB versions 0.12.2 through 0.12.6, and 0.13.0 through 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. This issue is patched in 0.13.3. Users should upgrade or use a later version of Java to avoid it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-43766\">https://nvd.nist.gov/vuln/detail/CVE-2022-43766</a></li>\n<li><a href=\"https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn\">https://lists.apache.org/thread/9pgpb82p5brooy41n8l5q0y9h33db2zn</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/apache-iotdb/PYSEC-2022-42972.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g6hg-4v3c-6jq7\">https://github.com/advisories/GHSA-g6hg-4v3c-6jq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g6hg-4v3c-6jq7",
            "title": "[apache-iotdb] Apache IoTDB subject to ReDOS with Java 8",
            "date_modified": "2022-11-08T15:06:41.000Z",
            "date_published": "2022-10-26T19:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g6hg-4v3c-6jq7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Apache Pulsar C++ Client does not verify peer TLS certificates when making HTTPS calls for the OAuth2.0 Client Credential Flow, even when tlsAllowInsecureConnection is disabled via configuration. This vulnerability allows an attacker to perform a man in the middle attack and intercept and/or modify the GET request that is sent to the ClientCredentialFlow 'issuer url'. The intercepted credentials can be used to acquire authentication data from the OAuth2.0 server to then authenticate with an Apache Pulsar cluster. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. The Apache Pulsar Python Client wraps the C++ client, so it is also vulnerable in the same way. This issue affects Apache Pulsar C++ Client and Python Client versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0 to 2.10.1; 2.6.4 and earlier. Any users running affected versions of the C++ Client or the Python Client should rotate vulnerable OAuth2.0 credentials, including client_id and client_secret. 2.7 C++ and Python Client users should upgrade to 2.7.5 and rotate vulnerable OAuth2.0 credentials. 2.8 C++ and Python Client users should upgrade to 2.8.4 and rotate vulnerable OAuth2.0 credentials. 2.9 C++ and Python Client users should upgrade to 2.9.3 and rotate vulnerable OAuth2.0 credentials. 2.10 C++ and Python Client users should upgrade to 2.10.2 and rotate vulnerable OAuth2.0 credentials. 3.0 C++ users are unaffected and 3.0 Python Client users will be unaffected when it is released. Any users running the C++ and Python Client for 2.6 or less should upgrade to one of the above patched versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33684\">https://nvd.nist.gov/vuln/detail/CVE-2022-33684</a></li>\n<li><a href=\"https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv\">https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv</a></li>\n<li><a href=\"https://github.com/apache/pulsar/pull/16064\">https://github.com/apache/pulsar/pull/16064</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5r3h-c3r7-9w4h\">https://github.com/advisories/GHSA-5r3h-c3r7-9w4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h",
            "title": "[pulsar-client] Apache Pulsar: Disabled Certificate Validation for OAuth Client Credential Requests makes C++/Python Clients vulnerable to MITM attack",
            "date_modified": "2022-11-08T14:41:18.000Z",
            "date_published": "2022-11-04T19:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Apache Pulsar C++ Client does not verify peer TLS certificates when making HTTPS calls for the OAuth2.0 Client Credential Flow, even when tlsAllowInsecureConnection is disabled via configuration. This vulnerability allows an attacker to perform a man in the middle attack and intercept and/or modify the GET request that is sent to the ClientCredentialFlow 'issuer url'. The intercepted credentials can be used to acquire authentication data from the OAuth2.0 server to then authenticate with an Apache Pulsar cluster. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. The Apache Pulsar Python Client wraps the C++ client, so it is also vulnerable in the same way. This issue affects Apache Pulsar C++ Client and Python Client versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0 to 2.10.1; 2.6.4 and earlier. Any users running affected versions of the C++ Client or the Python Client should rotate vulnerable OAuth2.0 credentials, including client_id and client_secret. 2.7 C++ and Python Client users should upgrade to 2.7.5 and rotate vulnerable OAuth2.0 credentials. 2.8 C++ and Python Client users should upgrade to 2.8.4 and rotate vulnerable OAuth2.0 credentials. 2.9 C++ and Python Client users should upgrade to 2.9.3 and rotate vulnerable OAuth2.0 credentials. 2.10 C++ and Python Client users should upgrade to 2.10.2 and rotate vulnerable OAuth2.0 credentials. 3.0 C++ users are unaffected and 3.0 Python Client users will be unaffected when it is released. Any users running the C++ and Python Client for 2.6 or less should upgrade to one of the above patched versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33684\">https://nvd.nist.gov/vuln/detail/CVE-2022-33684</a></li>\n<li><a href=\"https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv\">https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv</a></li>\n<li><a href=\"https://github.com/apache/pulsar/pull/16064\">https://github.com/apache/pulsar/pull/16064</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5r3h-c3r7-9w4h\">https://github.com/advisories/GHSA-5r3h-c3r7-9w4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h",
            "title": "[pulsar-client] Apache Pulsar: Disabled Certificate Validation for OAuth Client Credential Requests makes C++/Python Clients vulnerable to MITM attack",
            "date_modified": "2022-11-08T14:41:18.000Z",
            "date_published": "2022-11-04T19:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Apache Pulsar C++ Client does not verify peer TLS certificates when making HTTPS calls for the OAuth2.0 Client Credential Flow, even when tlsAllowInsecureConnection is disabled via configuration. This vulnerability allows an attacker to perform a man in the middle attack and intercept and/or modify the GET request that is sent to the ClientCredentialFlow 'issuer url'. The intercepted credentials can be used to acquire authentication data from the OAuth2.0 server to then authenticate with an Apache Pulsar cluster. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. The Apache Pulsar Python Client wraps the C++ client, so it is also vulnerable in the same way. This issue affects Apache Pulsar C++ Client and Python Client versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0 to 2.10.1; 2.6.4 and earlier. Any users running affected versions of the C++ Client or the Python Client should rotate vulnerable OAuth2.0 credentials, including client_id and client_secret. 2.7 C++ and Python Client users should upgrade to 2.7.5 and rotate vulnerable OAuth2.0 credentials. 2.8 C++ and Python Client users should upgrade to 2.8.4 and rotate vulnerable OAuth2.0 credentials. 2.9 C++ and Python Client users should upgrade to 2.9.3 and rotate vulnerable OAuth2.0 credentials. 2.10 C++ and Python Client users should upgrade to 2.10.2 and rotate vulnerable OAuth2.0 credentials. 3.0 C++ users are unaffected and 3.0 Python Client users will be unaffected when it is released. Any users running the C++ and Python Client for 2.6 or less should upgrade to one of the above patched versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33684\">https://nvd.nist.gov/vuln/detail/CVE-2022-33684</a></li>\n<li><a href=\"https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv\">https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv</a></li>\n<li><a href=\"https://github.com/apache/pulsar/pull/16064\">https://github.com/apache/pulsar/pull/16064</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5r3h-c3r7-9w4h\">https://github.com/advisories/GHSA-5r3h-c3r7-9w4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h",
            "title": "[pulsar-client] Apache Pulsar: Disabled Certificate Validation for OAuth Client Credential Requests makes C++/Python Clients vulnerable to MITM attack",
            "date_modified": "2022-11-08T14:41:18.000Z",
            "date_published": "2022-11-04T19:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Apache Pulsar C++ Client does not verify peer TLS certificates when making HTTPS calls for the OAuth2.0 Client Credential Flow, even when tlsAllowInsecureConnection is disabled via configuration. This vulnerability allows an attacker to perform a man in the middle attack and intercept and/or modify the GET request that is sent to the ClientCredentialFlow 'issuer url'. The intercepted credentials can be used to acquire authentication data from the OAuth2.0 server to then authenticate with an Apache Pulsar cluster. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack. The Apache Pulsar Python Client wraps the C++ client, so it is also vulnerable in the same way. This issue affects Apache Pulsar C++ Client and Python Client versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0 to 2.10.1; 2.6.4 and earlier. Any users running affected versions of the C++ Client or the Python Client should rotate vulnerable OAuth2.0 credentials, including client_id and client_secret. 2.7 C++ and Python Client users should upgrade to 2.7.5 and rotate vulnerable OAuth2.0 credentials. 2.8 C++ and Python Client users should upgrade to 2.8.4 and rotate vulnerable OAuth2.0 credentials. 2.9 C++ and Python Client users should upgrade to 2.9.3 and rotate vulnerable OAuth2.0 credentials. 2.10 C++ and Python Client users should upgrade to 2.10.2 and rotate vulnerable OAuth2.0 credentials. 3.0 C++ users are unaffected and 3.0 Python Client users will be unaffected when it is released. Any users running the C++ and Python Client for 2.6 or less should upgrade to one of the above patched versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33684\">https://nvd.nist.gov/vuln/detail/CVE-2022-33684</a></li>\n<li><a href=\"https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv\">https://lists.apache.org/thread/ky1ssskvkj00y36k7nys9b5gm5jjrzwv</a></li>\n<li><a href=\"https://github.com/apache/pulsar/pull/16064\">https://github.com/apache/pulsar/pull/16064</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5r3h-c3r7-9w4h\">https://github.com/advisories/GHSA-5r3h-c3r7-9w4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h",
            "title": "[pulsar-client] Apache Pulsar: Disabled Certificate Validation for OAuth Client Credential Requests makes C++/Python Clients vulnerable to MITM attack",
            "date_modified": "2022-11-08T14:41:18.000Z",
            "date_published": "2022-11-04T19:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5r3h-c3r7-9w4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrapy 1.4 allows remote attackers to cause a denial of service (memory consumption) via large files because arbitrarily many files are read into memory, which is especially problematic if the files are then individually written in a separate thread to a slow storage resource, as demonstrated by interaction between dataReceived (in core/downloader/handlers/http11.py) and S3FilesStore.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-14158\">https://nvd.nist.gov/vuln/detail/CVE-2017-14158</a></li>\n<li><a href=\"https://github.com/scrapy/scrapy/issues/482\">https://github.com/scrapy/scrapy/issues/482</a></li>\n<li><a href=\"http://blog.csdn.net/wangtua/article/details/75228728\">http://blog.csdn.net/wangtua/article/details/75228728</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/blob/8b7a4d62a95e8f605e5dfb4e0b4f299e6403dc12/vulns/scrapy/PYSEC-2017-83.yaml\">https://github.com/pypa/advisory-database/blob/8b7a4d62a95e8f605e5dfb4e0b4f299e6403dc12/vulns/scrapy/PYSEC-2017-83.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7wm-ph43-c39p\">https://github.com/advisories/GHSA-h7wm-ph43-c39p</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/scrapy/PYSEC-2017-83.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/scrapy/PYSEC-2017-83.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7wm-ph43-c39p",
            "title": "[scrapy] Scrapy denial of service vulnerability",
            "date_modified": "2022-11-07T20:47:34.000Z",
            "date_published": "2022-05-17T01:16:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7wm-ph43-c39p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When the host header does not match a configured host, <code>twisted.web.vhost.NameVirtualHost</code> will return a <code>NoResource</code> resource which renders the Host header unescaped into the 404 response allowing HTML and script injection.</p>\n<p>Example configuration:</p>\n<pre><code class=\"language-python\">from twisted.web.server import Site\nfrom twisted.web.vhost import NameVirtualHost\nfrom twisted.internet import reactor\n\nresource = NameVirtualHost()\nsite = Site(resource)\nreactor.listenTCP(8080, site)\nreactor.run()\n</code></pre>\n<p>Output:</p>\n<pre><code>❯ curl -H\"Host:&lt;h1&gt;HELLO THERE&lt;/h1&gt;\" http://localhost:8080/\n\n&lt;html&gt;\n  &lt;head&gt;&lt;title&gt;404 - No Such Resource&lt;/title&gt;&lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;No Such Resource&lt;/h1&gt;\n    &lt;p&gt;host b'&lt;h1&gt;hello there&lt;/h1&gt;' not in vhost map&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>This vulnerability was introduced in f49041bb67792506d85aeda9cf6157e92f8048f4 and first appeared in the 0.9.4 release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/security/advisories/GHSA-vg46-2rrj-3647\">https://github.com/twisted/twisted/security/advisories/GHSA-vg46-2rrj-3647</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/f2f5e81c03f14e253e85fe457e646130780db40b\">https://github.com/twisted/twisted/commit/f2f5e81c03f14e253e85fe457e646130780db40b</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/f49041bb67792506d85aeda9cf6157e92f8048f4\">https://github.com/twisted/twisted/commit/f49041bb67792506d85aeda9cf6157e92f8048f4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39348\">https://nvd.nist.gov/vuln/detail/CVE-2022-39348</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vg46-2rrj-3647\">https://github.com/advisories/GHSA-vg46-2rrj-3647</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vg46-2rrj-3647",
            "title": "[twisted] Twisted vulnerable to NameVirtualHost Host header injection",
            "date_modified": "2022-11-04T19:03:44.000Z",
            "date_published": "2022-10-26T22:08:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vg46-2rrj-3647"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Apache Airflow versions prior to 2.4.2, the \"Trigger DAG with config\" screen was susceptible to XSS attacks via the <code>origin</code> query argument.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-43982\">https://nvd.nist.gov/vuln/detail/CVE-2022-43982</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27143\">https://github.com/apache/airflow/pull/27143</a></li>\n<li><a href=\"https://lists.apache.org/thread/vqnvdrfsw9z7v7c46qh3psjgr7wy959l\">https://lists.apache.org/thread/vqnvdrfsw9z7v7c46qh3psjgr7wy959l</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2022-42970.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2022-42970.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h63r-9xxf-f2c7\">https://github.com/advisories/GHSA-h63r-9xxf-f2c7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h63r-9xxf-f2c7",
            "title": "[apache-airflow] Apache Airflow Cross-site Scripting vulnerability",
            "date_modified": "2022-11-08T15:03:12.000Z",
            "date_published": "2022-11-02T19:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h63r-9xxf-f2c7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Apache Airflow versions prior to 2.4.2, there was an open redirect in the webserver's <code>/confirm</code> endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-43985\">https://nvd.nist.gov/vuln/detail/CVE-2022-43985</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27143\">https://github.com/apache/airflow/pull/27143</a></li>\n<li><a href=\"https://lists.apache.org/thread/m13y9s5kw92fw9l8j4qd85h0txp4kfcq\">https://lists.apache.org/thread/m13y9s5kw92fw9l8j4qd85h0txp4kfcq</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2022-42971.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2022-42971.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f9fq-78ch-4wmj\">https://github.com/advisories/GHSA-f9fq-78ch-4wmj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f9fq-78ch-4wmj",
            "title": "[apache-airflow] Apache Airflow Open Redirect vulnerability",
            "date_modified": "2022-11-08T15:07:12.000Z",
            "date_published": "2022-11-02T19:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f9fq-78ch-4wmj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-38.0.3 are vulnerable to a number of security issues. More details about the vulnerabilities themselves can be found in <a href=\"https://www.openssl.org/news/secadv/20221101.txt\">https://www.openssl.org/news/secadv/20221101.txt</a>.</p>\n<p>If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x\">https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x</a></li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/382e759bcded5773330eeed748c86b213ec618c5\">https://github.com/pyca/cryptography/commit/382e759bcded5773330eeed748c86b213ec618c5</a></li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/cf2ada625d1188d6cd46396f301b98095da577f7\">https://github.com/pyca/cryptography/commit/cf2ada625d1188d6cd46396f301b98095da577f7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-39hc-v87j-747x\">https://github.com/advisories/GHSA-39hc-v87j-747x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-39hc-v87j-747x",
            "title": "[cryptography] Vulnerable OpenSSL included in cryptography wheels",
            "date_modified": "2022-11-02T18:11:56.000Z",
            "date_published": "2022-11-02T18:11:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-39hc-v87j-747x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"missing-jwt-signature-check-ghsl-2022-078\">Missing JWT signature check (<code>GHSL-2022-078</code>)</h1>\n<p>The <a href=\"https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L30\"><code>StatelessTokenService</code></a> of the DataHub metadata service (GMS) does not verify the signature of JWT tokens. This allows an attacker to connect to DataHub instances as any user if Metadata Service authentication is enabled. This vulnerability occurs because the <code>StatelessTokenService</code> of the Metadata service uses the <a href=\"https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L134\"><code>parse</code></a> method of <code>io.jsonwebtoken.JwtParser</code>, which does not perform a verification of the cryptographic token signature. This means that JWTs are accepted regardless of the used algorithm.</p>\n<h4 id=\"impact\">Impact</h4>\n<p>This issue may lead to an authentication bypass.</p>\n<h4 id=\"resources\">Resources</h4>\n<ul>\n<li><a href=\"https://codeql.github.com/codeql-query-help/java/java-missing-jwt-signature-check/\">CodeQL: Missing JWT signature check</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/datahub-project/datahub/security/advisories/GHSA-r8gm-v65f-c973\">https://github.com/datahub-project/datahub/security/advisories/GHSA-r8gm-v65f-c973</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39366\">https://nvd.nist.gov/vuln/detail/CVE-2022-39366</a></li>\n<li><a href=\"https://codeql.github.com/codeql-query-help/java/java-missing-jwt-signature-check/\">https://codeql.github.com/codeql-query-help/java/java-missing-jwt-signature-check/</a></li>\n<li><a href=\"https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L134\">https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L134</a></li>\n<li><a href=\"https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L30\">https://github.com/datahub-project/datahub/blob/aa146db611e3a4ca3aa17bb740783f789d4444d3/metadata-service/auth-impl/src/main/java/com/datahub/authentication/token/StatelessTokenService.java#L30</a></li>\n<li><a href=\"https://github.com/datahub-project/datahub/releases/tag/v0.8.45\">https://github.com/datahub-project/datahub/releases/tag/v0.8.45</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8gm-v65f-c973\">https://github.com/advisories/GHSA-r8gm-v65f-c973</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8gm-v65f-c973",
            "title": "[acryl-datahub] acryl-datahub missing JWT signature check",
            "date_modified": "2022-10-31T22:42:58.000Z",
            "date_published": "2022-10-31T22:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8gm-v65f-c973"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability creates a false sense of security for keylime users -- i.e. a user could query keylime and conclude that a parcitular node/agent is correctly attested, while attestations are not in fact taking place.</p>\n<p><strong>Short explanation</strong>: the keylime verifier creates periodic reports on the state of each attested agent. The keylime verifier runs a set of python asynchronous processes to challenge attested nodes and create reports on the outcome. </p>\n<p>The vulnerability consists of the above named python asynchronous processes failing silently, i.e. quitting without leaving behind a database entry, raising an error or producing even a mention of an error in a log. The silent failure can be triggered by a small set of transient network failure conditions; recoverable device driver crashes being one such condition we saw in the wild.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is fixed in keylime starting with tag 6.5.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This <a href=\"https://github.com/keylime/keylime/pull/1128/files\">patch</a> can be retroactively applied to any running keylime deployment.\nOnly running verifiers need to be patched.\nAfter the patch is applied, the keylime verifier needs to be restarted.</p>\n<h3 id=\"references\">References</h3>\n<p>The problem, as well as the proposed fix, are described in detail <a href=\"https://github.com/keylime/keylime/pull/1128\">here</a>.\nFurther details about the system where the bug was found, and the conditions in which the bug was found, are available from @galmasi on demand.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this <a href=\"https://github.com/keylime/keylime/security/advisories/GHSA-hff2-x2j9-gxgv\">advisory</a>, please comment at the bottom of the advisory itself.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keylime/keylime/security/advisories/GHSA-hff2-x2j9-gxgv\">https://github.com/keylime/keylime/security/advisories/GHSA-hff2-x2j9-gxgv</a></li>\n<li><a href=\"https://github.com/keylime/keylime/pull/1128/files\">https://github.com/keylime/keylime/pull/1128/files</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hff2-x2j9-gxgv\">https://github.com/advisories/GHSA-hff2-x2j9-gxgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hff2-x2j9-gxgv",
            "title": "[Keylime] Keylime: unhandled exceptions could lead to invalid attestation states",
            "date_modified": "2022-10-28T19:19:43.000Z",
            "date_published": "2022-10-28T19:19:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hff2-x2j9-gxgv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Business Logic Errors in GitHub repository ikus060/rdiffweb prior to 2.5.0a7.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3363\">https://nvd.nist.gov/vuln/detail/CVE-2022-3363</a></li>\n<li><a href=\"https://github.com/ikus060/rdiffweb/commit/c27c46bac656b1da74f28eac1b52dfa5df76e6f2\">https://github.com/ikus060/rdiffweb/commit/c27c46bac656b1da74f28eac1b52dfa5df76e6f2</a></li>\n<li><a href=\"https://huntr.dev/bounties/b8a40ba6-2452-4abe-a80a-2d065ee8891e\">https://huntr.dev/bounties/b8a40ba6-2452-4abe-a80a-2d065ee8891e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jw36-mrvg-j5fx\">https://github.com/advisories/GHSA-jw36-mrvg-j5fx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jw36-mrvg-j5fx",
            "title": "[rdiffweb] Rdiffweb subject to Business Logic Errors",
            "date_modified": "2022-11-01T20:36:54.000Z",
            "date_published": "2022-10-27T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jw36-mrvg-j5fx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em>\nWe’d like to disclose an arbitrary code execution vulnerability in <code>jupyter_core</code> that stems from <code>jupyter_core</code> executing untrusted files in the current working directory. This vulnerability allows one user to run code as another.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em>\nUsers should upgrade to <code>jupyter_core&gt;=4.11.2</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\nNo</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em>\nSimilar advisory in <a href=\"https://github.com/advisories/GHSA-pq7m-3gw7-gq5x\">IPython</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/jupyter_core/security/advisories/GHSA-m678-f26j-3hrp\">https://github.com/jupyter/jupyter_core/security/advisories/GHSA-m678-f26j-3hrp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39286\">https://nvd.nist.gov/vuln/detail/CVE-2022-39286</a></li>\n<li><a href=\"https://github.com/jupyter/jupyter_core/commit/1118c8ce01800cb689d51f655f5ccef19516e283\">https://github.com/jupyter/jupyter_core/commit/1118c8ce01800cb689d51f655f5ccef19516e283</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-core/PYSEC-2022-42974.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-core/PYSEC-2022-42974.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m678-f26j-3hrp\">https://github.com/advisories/GHSA-m678-f26j-3hrp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m678-f26j-3hrp",
            "title": "[jupyter-core] Execution with Unnecessary Privileges in JupyterApp",
            "date_modified": "2022-11-08T15:16:53.000Z",
            "date_published": "2022-10-26T22:07:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m678-f26j-3hrp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The collection remote for pulp_ansible stores tokens in plaintext instead of using pulp's encrypted field and exposes them in read/write mode via the API () instead of marking it as write only. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3644\">https://nvd.nist.gov/vuln/detail/CVE-2022-3644</a></li>\n<li><a href=\"https://github.com/pulp/pulp_ansible/blob/main/pulp_ansible/app/models.py#L234\">https://github.com/pulp/pulp_ansible/blob/main/pulp_ansible/app/models.py#L234</a></li>\n<li><a href=\"https://github.com/pulp/pulp_ansible/issues/1221\">https://github.com/pulp/pulp_ansible/issues/1221</a></li>\n<li><a href=\"https://github.com/pulp/pulp_ansible/commit/d13c427b09482a7f598d8ee597d17a8a34888665\">https://github.com/pulp/pulp_ansible/commit/d13c427b09482a7f598d8ee597d17a8a34888665</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qv37-mfjf-42h8\">https://github.com/advisories/GHSA-qv37-mfjf-42h8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qv37-mfjf-42h8",
            "title": "[pulp-ansible] Plaintext storage of tokens in pulp_ansible",
            "date_modified": "2022-10-31T16:00:21.000Z",
            "date_published": "2022-10-25T19:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qv37-mfjf-42h8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}