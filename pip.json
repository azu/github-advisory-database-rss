{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Reflected in GitHub repository modoboa/modoboa prior to 2.0.45.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0949\">https://nvd.nist.gov/vuln/detail/CVE-2023-0949</a></li>\n<li><a href=\"https://github.com/modoboa/modoboa/commit/aa74e9a4a870162eea169e0a6a2eab841f8811b7\">https://github.com/modoboa/modoboa/commit/aa74e9a4a870162eea169e0a6a2eab841f8811b7</a></li>\n<li><a href=\"https://huntr.dev/bounties/ef87be4e-493b-4ee9-9738-44c55b8acc19\">https://huntr.dev/bounties/ef87be4e-493b-4ee9-9738-44c55b8acc19</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-33.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-33.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mgmm-cmhj-2h5f\">https://github.com/advisories/GHSA-mgmm-cmhj-2h5f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mgmm-cmhj-2h5f",
            "title": "[modoboa] modoboa Cross-site Scripting vulnerability",
            "date_modified": "2024-09-25T20:00:48.000Z",
            "date_published": "2023-02-22T09:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mgmm-cmhj-2h5f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Git before 1.8.5.6, 1.9.x before 1.9.5, 2.0.x before 2.0.5, 2.1.x before 2.1.4, and 2.2.x before 2.2.1 on Windows and OS X; Mercurial before 3.2.3 on Windows and OS X; Apple Xcode before 6.2 beta 3; mine; libgit2; Egit; and JGit allow remote Git servers to execute arbitrary commands via a tree containing a crafted .git/config file with (1) an ignorable Unicode codepoint, (2) a git~1/config representation, or (3) mixed case that is improperly handled on a case-insensitive filesystem.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-9390\">https://nvd.nist.gov/vuln/detail/CVE-2014-9390</a></li>\n<li><a href=\"https://github.com/libgit2/libgit2/commit/928429c5c96a701bcbcafacb2421a82602b36915\">https://github.com/libgit2/libgit2/commit/928429c5c96a701bcbcafacb2421a82602b36915</a></li>\n<li><a href=\"https://github.com/blog/1938-git-client-vulnerability-announced\">https://github.com/blog/1938-git-client-vulnerability-announced</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=8769667\">https://news.ycombinator.com/item?id=8769667</a></li>\n<li><a href=\"http://article.gmane.org/gmane.linux.kernel/1853266\">http://article.gmane.org/gmane.linux.kernel/1853266</a></li>\n<li><a href=\"http://git-blame.blogspot.com/2014/12/git-1856-195-205-214-and-221-and.html\">http://git-blame.blogspot.com/2014/12/git-1856-195-205-214-and-221-and.html</a></li>\n<li><a href=\"http://mercurial.selenic.com/wiki/WhatsNew\">http://mercurial.selenic.com/wiki/WhatsNew</a></li>\n<li><a href=\"http://support.apple.com/kb/HT204147\">http://support.apple.com/kb/HT204147</a></li>\n<li><a href=\"https://projects.eclipse.org/projects/technology.jgit/releases/3.5.3\">https://projects.eclipse.org/projects/technology.jgit/releases/3.5.3</a></li>\n<li><a href=\"https://web.archive.org/web/20211204220400/https://securitytracker.com/id?1031404\">https://web.archive.org/web/20211204220400/https://securitytracker.com/id?1031404</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mercurial/PYSEC-2020-217.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mercurial/PYSEC-2020-217.yaml</a></li>\n<li><a href=\"https://libgit2.org/security\">https://libgit2.org/security</a></li>\n<li><a href=\"http://securitytracker.com/id?1031404\">http://securitytracker.com/id?1031404</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vvc-c2m3-cjf3\">https://github.com/advisories/GHSA-6vvc-c2m3-cjf3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vvc-c2m3-cjf3",
            "title": "[mercurial] JGit Improper Input Validation vulnerability",
            "date_modified": "2024-09-25T19:55:48.000Z",
            "date_published": "2022-05-17T19:57:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vvc-c2m3-cjf3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An unsafe extraction is being performed using <code>tarfile.extractall()</code> from a remotely retrieved tarball. Which may lead to the writing of the extracted files to an unintended location. Sometimes, the vulnerability is called a TarSlip or a ZipSlip variant.</p>\n<h3 id=\"details\">Details</h3>\n<p>I commented the following snippet of code as a vulnerability details. The code is from <a href=\"https://github.com/mindsdb/mindsdb/blob/afedd37c16e579b6dc075b0814e42d0505ccdc07/mindsdb/api/http/namespaces/file.py#L26..L134\">file.py#L26..L134</a></p>\n<pre><code class=\"language-python\">@ns_conf.route('/&lt;name&gt;')\n@ns_conf.param('name', \"MindsDB's name for file\")\nclass File(Resource):\n    @ns_conf.doc('put_file')\n    def put(self, name: str):\n        ''' add new file\n            params in FormData:\n                - file\n                - original_file_name [optional]\n        '''\n\n        data = {}\n\n        ... omitted for brevity\n\n            url = data['source']\n            data['file'] = data['name']\n\n            ... omitted for brevity \n\n            with requests.get(url, stream=True) as r:                   # Source: retrieve the URL which point to a remotely located tarball \n                if r.status_code != 200:\n                    return http_error(\n                        400,\n                        \"Error getting file\",\n                        f\"Got status code: {r.status_code}\"\n                    )\n                file_path = os.path.join(temp_dir_path, data['file'])\n                with open(file_path, 'wb') as f:\n                    for chunk in r.iter_content(chunk_size=8192):   # write with chunks the remote retrieved file into file_path location \n                        f.write(chunk)\n\n        original_file_name = data.get('original_file_name')\n\n        file_path = os.path.join(temp_dir_path, data['file'])      \n        lp = file_path.lower()\n        if lp.endswith(('.zip', '.tar.gz')):\n            if lp.endswith('.zip'):\n                with zipfile.ZipFile(file_path) as f:\n                    f.extractall(temp_dir_path)\n            elif lp.endswith('.tar.gz'):\n                with tarfile.open(file_path) as f:  # Just after \n                    f.extractall(temp_dir_path)  # Sink: the tarball located by file_path is supposed to be extracted to temp_dir_path. \n</code></pre>\n<p>So, a remotely available tarball is being retrieved and written to the server filesystem in chunks, and then, if the extension ends with <code>.tar.gz</code> of a compressed tarball, the mindsdb app applies <code>tarfile.extractall()</code> directly with no checks for the destination. </p>\n<p>However, according to the following <a href=\"https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall\">warning</a> from the official documentation;</p>\n<blockquote>\n<p>Warning: Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of path, e.g. members that have absolute filenames starting with \"/\" or filenames with two dots \"..\". </p>\n</blockquote>\n<h3 id=\"poc\">PoC</h3>\n<p>The following PoC is provided for illustration purposes only. It showcases the risk of extracting a non-harmless text file <code>sim4n6.txt</code> to one of the parent locations rather than the intended current folder.</p>\n<pre><code class=\"language-bash\">&gt; tar --list -v -f archive.tar.gz\ntar: Removing leading \"../../../\" from member names\n../../../sim4n6.txt\n\n&gt; python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tarfile\n&gt;&gt;&gt; with tarfile.open(\"archive.tar.gz\") as tf:\n&gt;&gt;&gt;         tf.extractall()\n&gt;&gt;&gt; exit()\n\n&gt; test -f ../../../sim4n6.txt &amp;&amp; echo \"sim4n6.txt exists\"\nsim4n6.txt exists\n</code></pre>\n<h3 id=\"attack-scenario\">Attack Scenario</h3>\n<p>An attacker could craft a malicious tarball with a filename path, such as ../../../../../../../../etc/passwd, and then serve the archive remotely, proceed to the PUT request of the tarball through mindsdb and overwrite the system files of the hosting server for instance.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Potential mitigation could be to:</p>\n<ul>\n<li>Use a safer module, like <code>zipfile</code>.</li>\n<li>Use an alternative of <code>tarfile</code>, such as <code>tarsafe</code>. </li>\n<li>Validate the location or the absolute path of the extracted files and discard those with malicious paths such as relative path <code>../../..</code> or absolute path such as <code>/etc/password</code>. A simple wrapper could be written to raise an exception when a path traversal may be identified.</li>\n</ul>\n<p>This is similar to the other report <a href=\"https://github.com/mindsdb/mindsdb/security/advisories/GHSA-7x45-phmr-9wqp\">GHSA-7x45-phmr-9wqp</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mindsdb/mindsdb/security/advisories/GHSA-2g5w-29q9-w6hx\">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-2g5w-29q9-w6hx</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/blob/afedd37c16e579b6dc075b0814e42d0505ccdc07/mindsdb/api/http/namespaces/file.py#L26..L134\">https://github.com/mindsdb/mindsdb/blob/afedd37c16e579b6dc075b0814e42d0505ccdc07/mindsdb/api/http/namespaces/file.py#L26..L134</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30620\">https://nvd.nist.gov/vuln/detail/CVE-2023-30620</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/commit/4419b0f0019c000db390b54d8b9d06e1d3670039\">https://github.com/mindsdb/mindsdb/commit/4419b0f0019c000db390b54d8b9d06e1d3670039</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/releases/tag/v23.2.1.0\">https://github.com/mindsdb/mindsdb/releases/tag/v23.2.1.0</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mindsdb/PYSEC-2023-27.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mindsdb/PYSEC-2023-27.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2g5w-29q9-w6hx\">https://github.com/advisories/GHSA-2g5w-29q9-w6hx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2g5w-29q9-w6hx",
            "title": "[mindsdb] mindsdb arbitrary file write when extracting a remotely retrieved Tarball",
            "date_modified": "2024-09-25T19:46:33.000Z",
            "date_published": "2023-03-30T21:42:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2g5w-29q9-w6hx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.23.0. It has been classified as critical. Affected is the function mp_vfs_umount of the file extmod/vfs.c of the component VFS Unmount Handler. The manipulation leads to heap-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 29943546343c92334e8518695a11fc0e2ceea68b. It is recommended to apply a patch to fix this issue. In the VFS unmount process, the comparison between the mounted path string and the unmount requested string is based solely on the length of the unmount string, which can lead to a heap buffer overflow read.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8946\">https://nvd.nist.gov/vuln/detail/CVE-2024-8946</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006\">https://github.com/micropython/micropython/issues/13006</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455\">https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b\">https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277764\">https://vuldb.com/?ctiid.277764</a></li>\n<li><a href=\"https://vuldb.com/?id.277764\">https://vuldb.com/?id.277764</a></li>\n<li><a href=\"https://vuldb.com/?submit.409312\">https://vuldb.com/?submit.409312</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74qm-4v7r-jw2f\">https://github.com/advisories/GHSA-74qm-4v7r-jw2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f",
            "title": "[micropython-string] Heap-based Buffer Overflow in MicroPython",
            "date_modified": "2024-09-25T18:23:42.000Z",
            "date_published": "2024-09-17T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.23.0. It has been classified as critical. Affected is the function mp_vfs_umount of the file extmod/vfs.c of the component VFS Unmount Handler. The manipulation leads to heap-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 29943546343c92334e8518695a11fc0e2ceea68b. It is recommended to apply a patch to fix this issue. In the VFS unmount process, the comparison between the mounted path string and the unmount requested string is based solely on the length of the unmount string, which can lead to a heap buffer overflow read.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8946\">https://nvd.nist.gov/vuln/detail/CVE-2024-8946</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006\">https://github.com/micropython/micropython/issues/13006</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455\">https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b\">https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277764\">https://vuldb.com/?ctiid.277764</a></li>\n<li><a href=\"https://vuldb.com/?id.277764\">https://vuldb.com/?id.277764</a></li>\n<li><a href=\"https://vuldb.com/?submit.409312\">https://vuldb.com/?submit.409312</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74qm-4v7r-jw2f\">https://github.com/advisories/GHSA-74qm-4v7r-jw2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f",
            "title": "[micropython-os-path] Heap-based Buffer Overflow in MicroPython",
            "date_modified": "2024-09-25T18:23:42.000Z",
            "date_published": "2024-09-17T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.23.0. It has been classified as critical. Affected is the function mp_vfs_umount of the file extmod/vfs.c of the component VFS Unmount Handler. The manipulation leads to heap-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 29943546343c92334e8518695a11fc0e2ceea68b. It is recommended to apply a patch to fix this issue. In the VFS unmount process, the comparison between the mounted path string and the unmount requested string is based solely on the length of the unmount string, which can lead to a heap buffer overflow read.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8946\">https://nvd.nist.gov/vuln/detail/CVE-2024-8946</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006\">https://github.com/micropython/micropython/issues/13006</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455\">https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b\">https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277764\">https://vuldb.com/?ctiid.277764</a></li>\n<li><a href=\"https://vuldb.com/?id.277764\">https://vuldb.com/?id.277764</a></li>\n<li><a href=\"https://vuldb.com/?submit.409312\">https://vuldb.com/?submit.409312</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74qm-4v7r-jw2f\">https://github.com/advisories/GHSA-74qm-4v7r-jw2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f",
            "title": "[micropython-io] Heap-based Buffer Overflow in MicroPython",
            "date_modified": "2024-09-25T18:23:42.000Z",
            "date_published": "2024-09-17T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.23.0. It has been classified as critical. Affected is the function mp_vfs_umount of the file extmod/vfs.c of the component VFS Unmount Handler. The manipulation leads to heap-based buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 29943546343c92334e8518695a11fc0e2ceea68b. It is recommended to apply a patch to fix this issue. In the VFS unmount process, the comparison between the mounted path string and the unmount requested string is based solely on the length of the unmount string, which can lead to a heap buffer overflow read.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8946\">https://nvd.nist.gov/vuln/detail/CVE-2024-8946</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006\">https://github.com/micropython/micropython/issues/13006</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455\">https://github.com/micropython/micropython/issues/13006#issuecomment-1820309455</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b\">https://github.com/micropython/micropython/commit/29943546343c92334e8518695a11fc0e2ceea68b</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277764\">https://vuldb.com/?ctiid.277764</a></li>\n<li><a href=\"https://vuldb.com/?id.277764\">https://vuldb.com/?id.277764</a></li>\n<li><a href=\"https://vuldb.com/?submit.409312\">https://vuldb.com/?submit.409312</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-91.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-93.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-os-path/PYSEC-2024-95.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-string/PYSEC-2024-96.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74qm-4v7r-jw2f\">https://github.com/advisories/GHSA-74qm-4v7r-jw2f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f",
            "title": "[micropython-copy] Heap-based Buffer Overflow in MicroPython",
            "date_modified": "2024-09-25T18:23:42.000Z",
            "date_published": "2024-09-17T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74qm-4v7r-jw2f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Multipart file upload support as defined in the <a href=\"https://github.com/jaydenseric/graphql-multipart-request-spec\">GraphQL multipart request specification</a> was enabled by default in all Strawberry HTTP view integrations. This made all Strawberry HTTP view integrations vulnerable to CSRF attacks if users did not explicitly enable CSRF preventing security mechanism for their servers.\nAdditionally, the Django HTTP view integration, in particular, had an exemption for Django's built-in CSRF protection (i.e., the <code>CsrfViewMiddleware</code> middleware) by default.</p>\n<p>In affect, all Strawberry integrations were vulnerable to CSRF attacks by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Version <code>v0.243.0</code> is the first <code>strawberry-graphql</code> including a patch. Check out our <a href=\"https://strawberry.rocks/docs/breaking-changes/0.243.0\">documentation</a> for additional details and upgrade instructions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://strawberry.rocks/docs/breaking-changes/0.243.0\">Strawberry upgrade guide</a></li>\n<li><a href=\"https://github.com/jaydenseric/graphql-multipart-request-spec/blob/master/readme.md#security\">Multipart Upload Security Implications</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li><a href=\"https://github.com/graingert\">Thomas Grainger</a></li>\n<li><a href=\"https://github.com/speedy1991\">Arthur Bayr</a></li>\n<li><a href=\"https://github.com/DoctorJohn\">Jonathan Ehwald</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-79gp-q4wv-33fr\">https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-79gp-q4wv-33fr</a></li>\n<li><a href=\"https://github.com/strawberry-graphql/strawberry/commit/37265b230e511480a9ceace492f9f6a484be1387\">https://github.com/strawberry-graphql/strawberry/commit/37265b230e511480a9ceace492f9f6a484be1387</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47082\">https://nvd.nist.gov/vuln/detail/CVE-2024-47082</a></li>\n<li><a href=\"https://strawberry.rocks/docs/breaking-changes/0.243.0\">https://strawberry.rocks/docs/breaking-changes/0.243.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-79gp-q4wv-33fr\">https://github.com/advisories/GHSA-79gp-q4wv-33fr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-79gp-q4wv-33fr",
            "title": "[strawberry-graphql] Cross-Site Request Forgery (CSRF) in strawberry-graphql",
            "date_modified": "2024-09-25T19:30:16.000Z",
            "date_published": "2024-09-25T18:21:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-79gp-q4wv-33fr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.22.2. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file py/objarray.c. The manipulation leads to use after free. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. Upgrading to version 1.23.0 is able to address this issue. The identifier of the patch is 4bed614e707c0644c06e117f848fa12605c711cd. It is recommended to upgrade the affected component. In micropython objarray component, when a bytes object is resized and copied into itself, it may reference memory that has already been freed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8947\">https://nvd.nist.gov/vuln/detail/CVE-2024-8947</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13283\">https://github.com/micropython/micropython/issues/13283</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13283#issuecomment-1918479709\">https://github.com/micropython/micropython/issues/13283#issuecomment-1918479709</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/4bed614e707c0644c06e117f848fa12605c711cd\">https://github.com/micropython/micropython/commit/4bed614e707c0644c06e117f848fa12605c711cd</a></li>\n<li><a href=\"https://github.com/micropython/micropython/releases/tag/v1.23.0\">https://github.com/micropython/micropython/releases/tag/v1.23.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277765\">https://vuldb.com/?ctiid.277765</a></li>\n<li><a href=\"https://vuldb.com/?id.277765\">https://vuldb.com/?id.277765</a></li>\n<li><a href=\"https://vuldb.com/?submit.409316\">https://vuldb.com/?submit.409316</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-92.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-92.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-94.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-94.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pwwp-3q7j-9mx8\">https://github.com/advisories/GHSA-pwwp-3q7j-9mx8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pwwp-3q7j-9mx8",
            "title": "[micropython-io] Use After Free in MicroPython",
            "date_modified": "2024-09-25T18:18:17.000Z",
            "date_published": "2024-09-17T21:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pwwp-3q7j-9mx8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in MicroPython 1.22.2. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file py/objarray.c. The manipulation leads to use after free. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. Upgrading to version 1.23.0 is able to address this issue. The identifier of the patch is 4bed614e707c0644c06e117f848fa12605c711cd. It is recommended to upgrade the affected component. In micropython objarray component, when a bytes object is resized and copied into itself, it may reference memory that has already been freed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8947\">https://nvd.nist.gov/vuln/detail/CVE-2024-8947</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13283\">https://github.com/micropython/micropython/issues/13283</a></li>\n<li><a href=\"https://github.com/micropython/micropython/issues/13283#issuecomment-1918479709\">https://github.com/micropython/micropython/issues/13283#issuecomment-1918479709</a></li>\n<li><a href=\"https://github.com/micropython/micropython/commit/4bed614e707c0644c06e117f848fa12605c711cd\">https://github.com/micropython/micropython/commit/4bed614e707c0644c06e117f848fa12605c711cd</a></li>\n<li><a href=\"https://github.com/micropython/micropython/releases/tag/v1.23.0\">https://github.com/micropython/micropython/releases/tag/v1.23.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.277765\">https://vuldb.com/?ctiid.277765</a></li>\n<li><a href=\"https://vuldb.com/?id.277765\">https://vuldb.com/?id.277765</a></li>\n<li><a href=\"https://vuldb.com/?submit.409316\">https://vuldb.com/?submit.409316</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-92.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-copy/PYSEC-2024-92.yaml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-94.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/micropython-io/PYSEC-2024-94.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pwwp-3q7j-9mx8\">https://github.com/advisories/GHSA-pwwp-3q7j-9mx8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pwwp-3q7j-9mx8",
            "title": "[micropython-copy] Use After Free in MicroPython",
            "date_modified": "2024-09-25T18:18:17.000Z",
            "date_published": "2024-09-17T21:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pwwp-3q7j-9mx8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>Open redirect vulnerability - a maliciously crafted link to a notebook server could redirect the browser to a different website.</p>\n<p>All notebook servers are technically affected, however, these maliciously crafted links can only be reasonably made for known notebook server hosts. A link to your notebook server may <em>appear</em> safe, but ultimately redirect to a spoofed server on the public internet.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Patched in notebook 6.1.5</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP page on open redirects</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<p>Credit: zhuonan li of Alibaba Application Security Team</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/notebook/security/advisories/GHSA-c7vm-f5p4-8fqh\">https://github.com/jupyter/notebook/security/advisories/GHSA-c7vm-f5p4-8fqh</a></li>\n<li><a href=\"https://github.com/jupyter/notebook/commit/3cec4bbe21756de9f0c4bccf18cf61d840314d74\">https://github.com/jupyter/notebook/commit/3cec4bbe21756de9f0c4bccf18cf61d840314d74</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26215\">https://nvd.nist.gov/vuln/detail/CVE-2020-26215</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/12/msg00004.html\">https://lists.debian.org/debian-lts-announce/2020/12/msg00004.html</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2020-215.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2020-215.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c7vm-f5p4-8fqh\">https://github.com/advisories/GHSA-c7vm-f5p4-8fqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c7vm-f5p4-8fqh",
            "title": "[notebook] Open redirect in Jupyter Notebook",
            "date_modified": "2024-09-25T17:58:44.000Z",
            "date_published": "2020-11-18T21:06:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c7vm-f5p4-8fqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of the MLflow Open Source Project who are hosting the MLflow Model Registry using the <code>mlflow server</code> or <code>mlflow ui</code> commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file existence check exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication / authorization middleware).</p>\n<p>This issue only affects users and integrations that run the <code>mlflow server</code> and <code>mlflow ui</code> commands. Integrations that do not make use of <code>mlflow server</code> or <code>mlflow ui</code> are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.</p>\n<p>The vulnerability detailed in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a> enables an actor to check the existence of arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using <code>mlflow server</code> or <code>mlflow ui</code> with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication / authorization middleware, or another access restriction mechanism of your choosing.</p>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.</p>\n<h3 id=\"references\">References</h3>\n<p>More information about the vulnerability is available at <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265\">https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d\">https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d</a></li>\n<li><a href=\"https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085\">https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-28.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-28.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wp72-7hj9-5265\">https://github.com/advisories/GHSA-wp72-7hj9-5265</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wp72-7hj9-5265",
            "title": "[mlflow] Remote file existence check vulnerability in `mlflow server` and `mlflow ui` CLIs",
            "date_modified": "2024-09-25T17:51:10.000Z",
            "date_published": "2023-03-24T22:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wp72-7hj9-5265"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Relative Path Traversal in GitHub repository mlflow/mlflow prior to 2.3.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2356\">https://nvd.nist.gov/vuln/detail/CVE-2023-2356</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/f73147496e05c09a8b83d95fb4f1bf86696c6342\">https://github.com/mlflow/mlflow/commit/f73147496e05c09a8b83d95fb4f1bf86696c6342</a></li>\n<li><a href=\"https://huntr.dev/bounties/7b5d130d-38eb-4133-8c7d-0dfc9a9d9896\">https://huntr.dev/bounties/7b5d130d-38eb-4133-8c7d-0dfc9a9d9896</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-68.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-68.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x422-6qhv-p29g\">https://github.com/advisories/GHSA-x422-6qhv-p29g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x422-6qhv-p29g",
            "title": "[mlflow] Relative path traversal in mlflow",
            "date_modified": "2024-09-25T17:47:29.000Z",
            "date_published": "2023-04-28T00:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x422-6qhv-p29g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>modoboa prior to 2.1.0 is vulnerable to cross-site request forgery. An attacker must be logged in as admin to exploit this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2228\">https://nvd.nist.gov/vuln/detail/CVE-2023-2228</a></li>\n<li><a href=\"https://github.com/modoboa/modoboa/commit/5d886f3d06373d2c3292911bac0772bcd5102343\">https://github.com/modoboa/modoboa/commit/5d886f3d06373d2c3292911bac0772bcd5102343</a></li>\n<li><a href=\"https://huntr.dev/bounties/619fb490-69ad-4a2a-b686-4c42a62404a9\">https://huntr.dev/bounties/619fb490-69ad-4a2a-b686-4c42a62404a9</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-36.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-36.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pvf-cq4f-hfjp\">https://github.com/advisories/GHSA-6pvf-cq4f-hfjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pvf-cq4f-hfjp",
            "title": "[modoboa] modoboa vulnerable to Cross-Site Request Forgery",
            "date_modified": "2024-09-25T17:14:06.000Z",
            "date_published": "2023-04-21T15:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pvf-cq4f-hfjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In modoboa prior to 2.1.0, sending a GET request to the endpoint <code>/api/v2/parameters/core/</code> returns sensitive information without any authentication or authorization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2227\">https://nvd.nist.gov/vuln/detail/CVE-2023-2227</a></li>\n<li><a href=\"https://github.com/modoboa/modoboa/commit/7bcd3f6eb264d4e3e01071c97c2bac51cdd6fe97\">https://github.com/modoboa/modoboa/commit/7bcd3f6eb264d4e3e01071c97c2bac51cdd6fe97</a></li>\n<li><a href=\"https://huntr.dev/bounties/351f9055-2008-4af0-b820-01ff66678bf3\">https://huntr.dev/bounties/351f9055-2008-4af0-b820-01ff66678bf3</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-35.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-35.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67mg-gm8m-ph5r\">https://github.com/advisories/GHSA-67mg-gm8m-ph5r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67mg-gm8m-ph5r",
            "title": "[modoboa] Improper Authorization in modoboa",
            "date_modified": "2024-09-24T21:26:21.000Z",
            "date_published": "2023-04-21T15:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67mg-gm8m-ph5r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Authentication Bypass by Primary Weakness in GitHub repository modoboa/modoboa prior to 2.0.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0777\">https://nvd.nist.gov/vuln/detail/CVE-2023-0777</a></li>\n<li><a href=\"https://github.com/modoboa/modoboa/commit/47d17ac6643f870719691073956a26e4be0a4806\">https://github.com/modoboa/modoboa/commit/47d17ac6643f870719691073956a26e4be0a4806</a></li>\n<li><a href=\"https://huntr.dev/bounties/a17e7a9f-0fee-4130-a522-5a0466fc17c7\">https://huntr.dev/bounties/a17e7a9f-0fee-4130-a522-5a0466fc17c7</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/171744/modoboa-2.0.4-Admin-Takeover.html\">http://packetstormsecurity.com/files/171744/modoboa-2.0.4-Admin-Takeover.html</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-32.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/modoboa/PYSEC-2023-32.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfhw-fm4m-52j6\">https://github.com/advisories/GHSA-rfhw-fm4m-52j6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfhw-fm4m-52j6",
            "title": "[modoboa] Authentication Bypass in modoboa",
            "date_modified": "2024-09-24T21:22:34.000Z",
            "date_published": "2023-02-10T21:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfhw-fm4m-52j6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>mlflow prior to 2.3.0 is vulnerable to path traversal due to a bypass of the fix for CVE-2023-1177.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2780\">https://nvd.nist.gov/vuln/detail/CVE-2023-2780</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/fae77a525dd908c56d6204a4cef1c1c75b4e9857\">https://github.com/mlflow/mlflow/commit/fae77a525dd908c56d6204a4cef1c1c75b4e9857</a></li>\n<li><a href=\"https://huntr.dev/bounties/b12b0073-0bb0-4bd1-8fc2-ec7f17fd7689\">https://huntr.dev/bounties/b12b0073-0bb0-4bd1-8fc2-ec7f17fd7689</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-69.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mlflow/PYSEC-2023-69.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjq3-7jxx-whj9\">https://github.com/advisories/GHSA-wjq3-7jxx-whj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjq3-7jxx-whj9",
            "title": "[mlflow] mlflow Path Traversal vulnerability",
            "date_modified": "2024-09-24T21:12:16.000Z",
            "date_published": "2023-05-17T21:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjq3-7jxx-whj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>IRRd did not always filter password hashes in query responses relating to <code>mntner</code> objects and database exports. This may have allowed adversaries to retrieve some of these hashes, perform a brute-force search for the clear-text passphrase, and use these to make unauthorised changes to affected IRR objects. This issue only affected instances that process password hashes, which means it is limited to IRRd instances that serve authoritative databases. IRRd instances operating solely as mirrors of other IRR databases are not affected.</p>\n<p>The issue occurred:</p>\n<ul>\n<li>For <code>mntner</code> objects where all password hash names (<code>MD5-PW</code> and <code>CRYPT-PW</code>) were in lower or mixed case in the <code>auth</code> attribute. For these objects, hashes remained in the output of all queries of any method and all database exports made with the <code>export_destination</code> setting. Fortunately, objects in the common public IRR database virtually all use uppercase hash names which means very few of those objects were affected.</li>\n<li>For any GraphQL queries that queried the <code>auth</code> field on <code>mntner</code> objects.</li>\n<li>For any GraphQL queries that queried the <code>objectText</code> field on the <code>journal</code> field on <code>mntner</code> objects, if the <code>nrtm_access_list</code> setting permitted journal access.</li>\n</ul>\n<p>The two GraphQL cases are visible in logs, allowing users to determine whether any existing objects had their hashes exposed.\nThis has been fixed in IRRd 4.2.3 and the main branch. Versions in the 4.1.x series never were affected. Users of the 4.2.x series are strongly recommended to upgrade. All users running a more recent version from the main branch should update to the latest version. Alternatively, but not recommended, apply the patch manually [for 4.2.x]</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/irrdnet/irrd/security/advisories/GHSA-cqxx-66wh-8pjw\">https://github.com/irrdnet/irrd/security/advisories/GHSA-cqxx-66wh-8pjw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24798\">https://nvd.nist.gov/vuln/detail/CVE-2022-24798</a></li>\n<li><a href=\"https://github.com/irrdnet/irrd/commit/0e41bae8d3d27316381a2fc7b466597230e35ec6\">https://github.com/irrdnet/irrd/commit/0e41bae8d3d27316381a2fc7b466597230e35ec6</a></li>\n<li><a href=\"https://github.com/irrdnet/irrd/commit/fdffaf8dd71713f06e99dff417e6aa1e6fa84b70\">https://github.com/irrdnet/irrd/commit/fdffaf8dd71713f06e99dff417e6aa1e6fa84b70</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/irrd/PYSEC-2022-178.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/irrd/PYSEC-2022-178.yaml</a></li>\n<li><a href=\"https://irrd.readthedocs.io/en/stable/releases/4.2.3\">https://irrd.readthedocs.io/en/stable/releases/4.2.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqxx-66wh-8pjw\">https://github.com/advisories/GHSA-cqxx-66wh-8pjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqxx-66wh-8pjw",
            "title": "[irrd] Improper Removal of Sensitive Information Before Storage or Transfer in irrd",
            "date_modified": "2024-09-24T21:11:10.000Z",
            "date_published": "2022-04-01T13:59:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqxx-66wh-8pjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in openstack-mistral. By manipulating the SSH private key filename, the std.ssh action can be used to disclose the presence of arbitrary files within the filesystem of the executor running the action. Since std.ssh private_key_filename can take an absolute path, it can be used to assess whether or not a file exists on the executor's filesystem.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16849\">https://nvd.nist.gov/vuln/detail/CVE-2018-16849</a></li>\n<li><a href=\"https://bugs.launchpad.net/mistral/+bug/1783708\">https://bugs.launchpad.net/mistral/+bug/1783708</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16849\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16849</a></li>\n<li><a href=\"https://github.com/openstack/mistral/commit/c93b45a61f49d4633f76d8e117cd89063e7759c4\">https://github.com/openstack/mistral/commit/c93b45a61f49d4633f76d8e117cd89063e7759c4</a></li>\n<li><a href=\"https://github.com/openstack/mistral/commit/2309e5265a1d5f28480ae872817b5de05f66e83c\">https://github.com/openstack/mistral/commit/2309e5265a1d5f28480ae872817b5de05f66e83c</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mistral/PYSEC-2018-92.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mistral/PYSEC-2018-92.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fqw7-c6vr-q29m\">https://github.com/advisories/GHSA-fqw7-c6vr-q29m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fqw7-c6vr-q29m",
            "title": "[mistral] openstack-mistral Discloses the presence of arbitrary files within the filesystem",
            "date_modified": "2024-09-24T21:06:46.000Z",
            "date_published": "2022-05-13T01:34:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fqw7-c6vr-q29m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>JSNAPy is an open source python version of Junos Snapshot Administrator developed by Juniper available through github. The default configuration and sample files of JSNAPy automation tool versions prior to 1.3.0 are created world writable. This insecure file and directory permission allows unprivileged local users to alter the files under this directory including inserting operations not intended by the package maintainer, system administrator, or other users. This issue only affects users who downloaded and installed JSNAPy from github.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-0023\">https://nvd.nist.gov/vuln/detail/CVE-2018-0023</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc55-vm3j-74gp\">https://github.com/advisories/GHSA-qc55-vm3j-74gp</a></li>\n<li><a href=\"https://kb.juniper.net/JSA10856\">https://kb.juniper.net/JSA10856</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/jsnapy/PYSEC-2018-84.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/jsnapy/PYSEC-2018-84.yaml</a></li>\n<li><a href=\"https://web.archive.org/web/20200227125151/http://www.securityfocus.com/bid/103745\">https://web.archive.org/web/20200227125151/http://www.securityfocus.com/bid/103745</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc55-vm3j-74gp",
            "title": "[jsnapy] JSNAPy allows unprivileged local users to alter files under the directory",
            "date_modified": "2024-09-24T21:02:13.000Z",
            "date_published": "2018-07-12T20:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc55-vm3j-74gp"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}