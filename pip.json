{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability in the /v1/runs API endpoint of lightning-ai/pytorch-lightning v2.2.4 allows attackers to exploit path traversal when extracting tar.gz files. When the LightningApp is running with the plugin_server, attackers can deploy malicious tar.gz plugins that embed arbitrary files with path traversal vulnerabilities. This can result in arbitrary files being written to any directory in the victim's local file system, potentially leading to remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5980\">https://nvd.nist.gov/vuln/detail/CVE-2024-5980</a></li>\n<li><a href=\"https://huntr.com/bounties/55a6ac6f-89c7-42ea-86f3-c6e93a2679f3\">https://huntr.com/bounties/55a6ac6f-89c7-42ea-86f3-c6e93a2679f3</a></li>\n<li><a href=\"https://github.com/Lightning-AI/pytorch-lightning/pull/20039\">https://github.com/Lightning-AI/pytorch-lightning/pull/20039</a></li>\n<li><a href=\"https://github.com/Lightning-AI/pytorch-lightning/releases/tag/2.3.3\">https://github.com/Lightning-AI/pytorch-lightning/releases/tag/2.3.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mr7h-w2qc-ffc2\">https://github.com/advisories/GHSA-mr7h-w2qc-ffc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mr7h-w2qc-ffc2",
            "title": "[lightning] pytorch-lightning vulnerable to Arbitrary File Write via /v1/runs API endpoint",
            "date_modified": "2024-08-05T15:14:06.000Z",
            "date_published": "2024-06-27T21:32:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mr7h-w2qc-ffc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Buffer Overflow vulnerability in PyPXE v.1.8.4 allows a remote attacker to cause a denial of service via the handle function in the tftp module.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46960\">https://nvd.nist.gov/vuln/detail/CVE-2023-46960</a></li>\n<li><a href=\"https://github.com/pypxe/PyPXE/issues/206\">https://github.com/pypxe/PyPXE/issues/206</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-82wx-rxf8-fxch\">https://github.com/advisories/GHSA-82wx-rxf8-fxch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-82wx-rxf8-fxch",
            "title": "[PyPXE] PyPXE Buffer Overflow vulnerability",
            "date_modified": "2024-08-02T16:10:16.000Z",
            "date_published": "2024-04-29T21:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-82wx-rxf8-fxch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A arbitrary code injection vulnerability in TensorFlow's Keras framework (&lt;2.13) allows attackers to execute arbitrary code with the same permissions as the application using a model that allow arbitrary code irrespective of the application.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3660\">https://nvd.nist.gov/vuln/detail/CVE-2024-3660</a></li>\n<li><a href=\"https://kb.cert.org/vuls/id/253266\">https://kb.cert.org/vuls/id/253266</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/253266\">https://www.kb.cert.org/vuls/id/253266</a></li>\n<li><a href=\"https://github.com/keras-team/keras/compare/r2.12...r2.13\">https://github.com/keras-team/keras/compare/r2.12...r2.13</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4wf-678h-2pmq\">https://github.com/advisories/GHSA-x4wf-678h-2pmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4wf-678h-2pmq",
            "title": "[keras] Keras code injection vulnerability",
            "date_modified": "2024-08-02T16:07:46.000Z",
            "date_published": "2024-04-16T21:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4wf-678h-2pmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in the API wait function of NASA AIT-Core v2.5.2 allows attackers to execute arbitrary code via supplying a crafted string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35058\">https://nvd.nist.gov/vuln/detail/CVE-2024-35058</a></li>\n<li><a href=\"https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze\">https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze</a></li>\n<li><a href=\"https://github.com/NASA-AMMOS/AIT-Core/issues/528\">https://github.com/NASA-AMMOS/AIT-Core/issues/528</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gxj-5mmr-7pxq\">https://github.com/advisories/GHSA-4gxj-5mmr-7pxq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gxj-5mmr-7pxq",
            "title": "[ait-core] NASA AIT-Core vulnerable to remote code execution",
            "date_modified": "2024-08-02T15:28:46.000Z",
            "date_published": "2024-05-21T18:31:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gxj-5mmr-7pxq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NASA AIT-Core v2.5.2 was discovered to contain multiple SQL injection vulnerabilities via the <code>query_packets</code> and <code>insert</code> functions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35056\">https://nvd.nist.gov/vuln/detail/CVE-2024-35056</a></li>\n<li><a href=\"https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze\">https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze</a></li>\n<li><a href=\"https://github.com/NASA-AMMOS/AIT-Core/issues/527\">https://github.com/NASA-AMMOS/AIT-Core/issues/527</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gpgj-xrgw-8mx2\">https://github.com/advisories/GHSA-gpgj-xrgw-8mx2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gpgj-xrgw-8mx2",
            "title": "[ait-core] NASA AIT-Core vulnerable to SQL Injection",
            "date_modified": "2024-08-02T13:17:42.000Z",
            "date_published": "2024-05-21T18:31:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gpgj-xrgw-8mx2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in NASA AIT-Core v2.5.2 allows attackers to execute arbitrary code via a crafted packet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35057\">https://nvd.nist.gov/vuln/detail/CVE-2024-35057</a></li>\n<li><a href=\"https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze\">https://www.linkedin.com/pulse/remote-code-execution-via-man-in-the-middle-more-ujkze</a></li>\n<li><a href=\"https://github.com/NASA-AMMOS/AIT-Core/issues/528\">https://github.com/NASA-AMMOS/AIT-Core/issues/528</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf28-v5f6-cvpr\">https://github.com/advisories/GHSA-jf28-v5f6-cvpr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf28-v5f6-cvpr",
            "title": "[ait-core] NASA AIT-Core vulnerable to remote code execution",
            "date_modified": "2024-08-02T01:22:39.000Z",
            "date_published": "2024-05-21T18:31:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf28-v5f6-cvpr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OSU Open Source Lab VNCAuthProxy through 1.1.1 is affected by an vncap/vnc/protocol.py VNCServerAuthenticator authentication-bypass vulnerability that could allow a malicious actor to gain unauthorized access to a VNC session or to disconnect a legitimate user from a VNC session. A remote attacker with network access to the proxy server could leverage this vulnerability to connect to VNC servers protected by the proxy server without providing any authentication credentials. Exploitation of this issue requires that the proxy server is currently accepting connections for the target VNC server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36436\">https://nvd.nist.gov/vuln/detail/CVE-2022-36436</a></li>\n<li><a href=\"https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b\">https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b</a></li>\n<li><a href=\"https://github.com/osuosl/twisted_vncauthproxy/tree/release/1.1.1\">https://github.com/osuosl/twisted_vncauthproxy/tree/release/1.1.1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/vncauthproxy/PYSEC-2022-267.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/vncauthproxy/PYSEC-2022-267.yaml</a></li>\n<li><a href=\"https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass\">https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass</a></li>\n<li><a href=\"https://pypi.org/project/VNCAuthProxy\">https://pypi.org/project/VNCAuthProxy</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-237r-mx84-7x8c\">https://github.com/advisories/GHSA-237r-mx84-7x8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-237r-mx84-7x8c",
            "title": "[vncauthproxy] VNCAuthProxy authentication bypass vulnerability",
            "date_modified": "2024-08-01T21:48:33.000Z",
            "date_published": "2022-09-16T17:11:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-237r-mx84-7x8c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The issue is that the map of encoding/decoding languages are visible in code. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem was patched in 0.2.4.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only known workaround is apply the fix to the code manually.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/AkshuDev/PheonixAppAPI/security/advisories/GHSA-258h-f687-4226\">https://github.com/AkshuDev/PheonixAppAPI/security/advisories/GHSA-258h-f687-4226</a></li>\n<li><a href=\"https://github.com/AkshuDev/PheonixAppAPI/commit/0937419e323f5ea9013d43dc1b82fef9d7e05044\">https://github.com/AkshuDev/PheonixAppAPI/commit/0937419e323f5ea9013d43dc1b82fef9d7e05044</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41951\">https://nvd.nist.gov/vuln/detail/CVE-2024-41951</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-258h-f687-4226\">https://github.com/advisories/GHSA-258h-f687-4226</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-258h-f687-4226",
            "title": "[PheonixAppAPI] PheonixAppAPI has visible Encoding Maps",
            "date_modified": "2024-07-31T22:03:15.000Z",
            "date_published": "2024-07-31T21:04:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-258h-f687-4226"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Weave server API allows remote users to fetch files from a specific directory, but due to a lack of input validation, it is possible to traverse and leak arbitrary files remotely. In various common scenarios, this allows a low-privileged user to assume the role of the server admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7340\">https://nvd.nist.gov/vuln/detail/CVE-2024-7340</a></li>\n<li><a href=\"https://github.com/wandb/weave/pull/1657\">https://github.com/wandb/weave/pull/1657</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/wandb-weave-server-remote-arbitrary-file-leak-jfsa-2024-001039248\">https://research.jfrog.com/vulnerabilities/wandb-weave-server-remote-arbitrary-file-leak-jfsa-2024-001039248</a></li>\n<li><a href=\"https://github.com/wandb/weave/commit/f43d5fb75e0d52933a52ecd9a0ce2f9b082e6c9f\">https://github.com/wandb/weave/commit/f43d5fb75e0d52933a52ecd9a0ce2f9b082e6c9f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r49h-6qxq-624f\">https://github.com/advisories/GHSA-r49h-6qxq-624f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r49h-6qxq-624f",
            "title": "[weave] Weave server API vulnerable to arbitrary file leak",
            "date_modified": "2024-08-02T15:58:25.000Z",
            "date_published": "2024-07-31T15:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r49h-6qxq-624f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>An open redirect vulnerability exist in MobSF authentication view. </p>\n<p>PoC</p>\n<ol>\n<li>Go to <a href=\"http://127.0.0.1:8000/login/?next=//afine.com\">http://127.0.0.1:8000/login/?next=//afine.com</a> in a web browser.</li>\n<li>Enter credentials and press \"Sign In\".</li>\n<li>You will be redirected to <a href=\"http://afine.com/\">afine.com</a></li>\n</ol>\n<p>Users who are not using authentication are not impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Update to MobSF v4.0.5</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>\nDisable Authentication</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em>\nFix: <a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/fdaad81314f393d324c1ede79627e9d47986c8c8\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/fdaad81314f393d324c1ede79627e9d47986c8c8</a></p>\n<h3 id=\"reporter\">Reporter</h3>\n<p>Marcin Węgłowski (AFINE Team)</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-8m9j-2f32-2vx4\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-8m9j-2f32-2vx4</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/fdaad81314f393d324c1ede79627e9d47986c8c8\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/fdaad81314f393d324c1ede79627e9d47986c8c8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41955\">https://nvd.nist.gov/vuln/detail/CVE-2024-41955</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8m9j-2f32-2vx4\">https://github.com/advisories/GHSA-8m9j-2f32-2vx4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8m9j-2f32-2vx4",
            "title": "[mobsf] MobSF vulnerable to Open Redirect in Login Redirect",
            "date_modified": "2024-08-02T15:58:50.000Z",
            "date_published": "2024-07-31T20:54:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8m9j-2f32-2vx4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Haystack clients that let their users create and run Pipelines from scratch are vulnerable to remote code executions.</p>\n<p>Certain Components in Haystack use Jinja2 templates, if anyone can create and render that template on the client machine they run any code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed with PRs deepset-ai/haystack#8095 and deepset-ai/haystack#8096.</p>\n<p>Both have been released with Haystack <code>2.3.1</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prevent users from running the affected Components, or only let users use preselected templates.</p>\n<h3 id=\"references\">References</h3>\n<p>The list of impacted Components can be found in the release notes for <code>2.3.1</code>.\n<a href=\"https://github.com/deepset-ai/haystack/releases/tag/v2.3.1\">https://github.com/deepset-ai/haystack/releases/tag/v2.3.1</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/deepset-ai/haystack/security/advisories/GHSA-hx9v-6r9f-w677\">https://github.com/deepset-ai/haystack/security/advisories/GHSA-hx9v-6r9f-w677</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41950\">https://nvd.nist.gov/vuln/detail/CVE-2024-41950</a></li>\n<li><a href=\"https://github.com/deepset-ai/haystack/pull/8095\">https://github.com/deepset-ai/haystack/pull/8095</a></li>\n<li><a href=\"https://github.com/deepset-ai/haystack/pull/8096\">https://github.com/deepset-ai/haystack/pull/8096</a></li>\n<li><a href=\"https://github.com/deepset-ai/haystack/commit/3fed1366c448b02189851bf08166c1f6477a02b0\">https://github.com/deepset-ai/haystack/commit/3fed1366c448b02189851bf08166c1f6477a02b0</a></li>\n<li><a href=\"https://github.com/deepset-ai/haystack/commit/6c25a5c73e83aa32c3241ba84a5cbb3ac0e8a89e\">https://github.com/deepset-ai/haystack/commit/6c25a5c73e83aa32c3241ba84a5cbb3ac0e8a89e</a></li>\n<li><a href=\"https://github.com/deepset-ai/haystack/releases/tag/v2.3.1\">https://github.com/deepset-ai/haystack/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx9v-6r9f-w677\">https://github.com/advisories/GHSA-hx9v-6r9f-w677</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx9v-6r9f-w677",
            "title": "[haystack-ai] Insecure Jinja2 templates rendered in Haystack Components can lead to RCE",
            "date_modified": "2024-07-31T18:50:42.000Z",
            "date_published": "2024-07-31T18:50:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx9v-6r9f-w677"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>array_ops.upper_bound</code> causes a segfault when not given a rank 2 tensor.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">915884fdf5df34aaedd00fc6ace33a2cfdefa586</a>.</p>\n<p>The fix will be included in TensorFlow 2.13. We will also cherrypick this commit in TensorFlow 2.12.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by dmc1778</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec\">https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33976\">https://nvd.nist.gov/vuln/detail/CVE-2023-33976</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/advisories/GHSA-gjh7-xx4r-x345</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345",
            "title": "[tensorflow-gpu] TensorFlow has segfault in array_ops.upper_bound",
            "date_modified": "2024-07-30T21:36:50.000Z",
            "date_published": "2024-07-30T20:47:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>array_ops.upper_bound</code> causes a segfault when not given a rank 2 tensor.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">915884fdf5df34aaedd00fc6ace33a2cfdefa586</a>.</p>\n<p>The fix will be included in TensorFlow 2.13. We will also cherrypick this commit in TensorFlow 2.12.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by dmc1778</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec\">https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33976\">https://nvd.nist.gov/vuln/detail/CVE-2023-33976</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/advisories/GHSA-gjh7-xx4r-x345</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345",
            "title": "[tensorflow-cpu] TensorFlow has segfault in array_ops.upper_bound",
            "date_modified": "2024-07-30T21:36:50.000Z",
            "date_published": "2024-07-30T20:47:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>array_ops.upper_bound</code> causes a segfault when not given a rank 2 tensor.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">915884fdf5df34aaedd00fc6ace33a2cfdefa586</a>.</p>\n<p>The fix will be included in TensorFlow 2.13. We will also cherrypick this commit in TensorFlow 2.12.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by dmc1778</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec\">https://github.com/tensorflow/tensorflow/commit/6fa05df43b00038b048f4f0e51ef522da6532fec</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586\">https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33976\">https://nvd.nist.gov/vuln/detail/CVE-2023-33976</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gjh7-xx4r-x345\">https://github.com/advisories/GHSA-gjh7-xx4r-x345</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345",
            "title": "[tensorflow] TensorFlow has segfault in array_ops.upper_bound",
            "date_modified": "2024-07-30T21:36:50.000Z",
            "date_published": "2024-07-30T20:47:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gjh7-xx4r-x345"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A stored cross-site scripting (XSS) vulnerability exists in aimhubio/aim version 3.19.3. The vulnerability arises from the improper neutralization of input during web page generation, specifically in the logs-tab for runs. The terminal output logs are displayed using the <code>dangerouslySetInnerHTML</code> function in React, which is susceptible to XSS attacks. An attacker can exploit this vulnerability by injecting malicious scripts into the logs, which will be executed when a user views the logs-tab.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6578\">https://nvd.nist.gov/vuln/detail/CVE-2024-6578</a></li>\n<li><a href=\"https://huntr.com/bounties/5b1ebc67-5346-44aa-b8b8-3c1c09d79680\">https://huntr.com/bounties/5b1ebc67-5346-44aa-b8b8-3c1c09d79680</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p9f2-jg9w-cx69\">https://github.com/advisories/GHSA-p9f2-jg9w-cx69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p9f2-jg9w-cx69",
            "title": "[aim] Aim Stored Cross-site Scripting Vulnerability",
            "date_modified": "2024-07-30T14:57:44.000Z",
            "date_published": "2024-07-29T21:30:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p9f2-jg9w-cx69"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/&nbsp;Three vectors were found that allow the following DOS attacks:</p>\n<ul>\n<li>Unbounded memory buffering in the HPACK parser</li>\n<li>Unbounded CPU consumption in the HPACK parser</li>\n</ul>\n<p>The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.</p>\n<p>The unbounded memory buffering bugs:</p>\n<ul>\n<li>The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.</li>\n<li>HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.</li>\n<li>gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33953\">https://nvd.nist.gov/vuln/detail/CVE-2023-33953</a></li>\n<li><a href=\"https://cloud.google.com/support/bulletins#gcp-2023-022\">https://cloud.google.com/support/bulletins#gcp-2023-022</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442\">https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-496j-2rq6-j6cc\">https://github.com/advisories/GHSA-496j-2rq6-j6cc</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc",
            "title": "[grpcio] Excessive Iteration in gRPC",
            "date_modified": "2024-07-30T21:37:54.000Z",
            "date_published": "2023-08-09T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/&nbsp;Three vectors were found that allow the following DOS attacks:</p>\n<ul>\n<li>Unbounded memory buffering in the HPACK parser</li>\n<li>Unbounded CPU consumption in the HPACK parser</li>\n</ul>\n<p>The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.</p>\n<p>The unbounded memory buffering bugs:</p>\n<ul>\n<li>The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.</li>\n<li>HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.</li>\n<li>gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33953\">https://nvd.nist.gov/vuln/detail/CVE-2023-33953</a></li>\n<li><a href=\"https://cloud.google.com/support/bulletins#gcp-2023-022\">https://cloud.google.com/support/bulletins#gcp-2023-022</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442\">https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-496j-2rq6-j6cc\">https://github.com/advisories/GHSA-496j-2rq6-j6cc</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc",
            "title": "[grpcio] Excessive Iteration in gRPC",
            "date_modified": "2024-07-30T21:37:54.000Z",
            "date_published": "2023-08-09T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/&nbsp;Three vectors were found that allow the following DOS attacks:</p>\n<ul>\n<li>Unbounded memory buffering in the HPACK parser</li>\n<li>Unbounded CPU consumption in the HPACK parser</li>\n</ul>\n<p>The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.</p>\n<p>The unbounded memory buffering bugs:</p>\n<ul>\n<li>The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.</li>\n<li>HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.</li>\n<li>gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33953\">https://nvd.nist.gov/vuln/detail/CVE-2023-33953</a></li>\n<li><a href=\"https://cloud.google.com/support/bulletins#gcp-2023-022\">https://cloud.google.com/support/bulletins#gcp-2023-022</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442\">https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-496j-2rq6-j6cc\">https://github.com/advisories/GHSA-496j-2rq6-j6cc</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc",
            "title": "[grpcio] Excessive Iteration in gRPC",
            "date_modified": "2024-07-30T21:37:54.000Z",
            "date_published": "2023-08-09T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/&nbsp;Three vectors were found that allow the following DOS attacks:</p>\n<ul>\n<li>Unbounded memory buffering in the HPACK parser</li>\n<li>Unbounded CPU consumption in the HPACK parser</li>\n</ul>\n<p>The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.</p>\n<p>The unbounded memory buffering bugs:</p>\n<ul>\n<li>The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.</li>\n<li>HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.</li>\n<li>gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33953\">https://nvd.nist.gov/vuln/detail/CVE-2023-33953</a></li>\n<li><a href=\"https://cloud.google.com/support/bulletins#gcp-2023-022\">https://cloud.google.com/support/bulletins#gcp-2023-022</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442\">https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-496j-2rq6-j6cc\">https://github.com/advisories/GHSA-496j-2rq6-j6cc</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc",
            "title": "[grpcio] Excessive Iteration in gRPC",
            "date_modified": "2024-07-30T21:37:54.000Z",
            "date_published": "2023-08-09T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-496j-2rq6-j6cc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>twisted.web.util.redirectTo</code> function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body.</p>\n<h3 id=\"details\">Details</h3>\n<p>Twisted’s <code>redirectTo</code> function generates an <code>HTTP 302 Redirect</code> response. The response contains an HTML body, built for exceptional cases where the browser doesn’t properly handle the redirect, allowing the user to click a link, navigating them to the specified destination.</p>\n<p>The function reflects the destination URL in the HTML body without any output encoding. </p>\n<pre><code class=\"language-python\"># https://github.com/twisted/twisted/blob/trunk/src/twisted/web/_template_util.py#L88\ndef redirectTo(URL: bytes, request: IRequest) -&gt; bytes:\n    # ---snip---\n    content = b\"\"\"\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=\\\"refresh\\\" content=\\\"0;URL=%(url)s\\\"&gt;\n    &lt;/head&gt;\n    &lt;body bgcolor=\\\"#FFFFFF\\\" text=\\\"#000000\\\"&gt;\n    &lt;a href=\\\"%(url)s\\\"&gt;click here&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\"\"\" % {\n        b\"url\": URL\n    }\n    return content\n</code></pre>\n<p>If an attacker has full or partial control over redirect location due to an application bug, also known as an “Open Redirect”, they may inject arbitrary HTML into the response’s body, ultimately leading to an XSS attack.</p>\n<p>It’s worth noting that the issue is known to maintainers and tracked with GitHub <a href=\"https://github.com/twisted/twisted/issues/9839\">Issue#9839</a>. The issue description, however, does not make any mention of exploitability and simply states: “…Browsers don't seem to actually render that page…”</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The issue can be reproduced by running the following Twisted-based HTTP server locally:</p>\n<pre><code class=\"language-python\">from twisted.web import server, resource\nfrom twisted.internet import reactor\nfrom twisted.web.util import redirectTo\n\nclass Simple(resource.Resource):\n    isLeaf = True\n    def render_GET(self, request):\n        url = request.args[b'url'][0]  # &lt;-- open redirect\n        return redirectTo(url, request)\n\nsite = server.Site(Simple())\nreactor.listenTCP(9009, site)\nreactor.run()\n</code></pre>\n<p>Once running, navigate to the following URL: <code>http://127.0.0.1:9009?url=ws://example.com/\"&gt;&lt;script&gt;alert(document.location)&lt;/script&gt;</code>, and verify that the “alert” dialog was displayed.</p>\n<p><strong>Note</strong>: Due to the different ways browsers validate the redirect Location header, this attack is possible only in <strong>Firefox</strong>. All other tested browsers will display an error message to the user and will not render the HTML body.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If successfully exploited, the issue will allow malicious JavaScript to run in the context of the victim's session. This will in turn lead to unauthorized access/modification to victim's account and information associated with it, or allow for unauthorized operations to be performed within the context of the victim's session.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/security/advisories/GHSA-cf56-g6w6-pqq2\">https://github.com/twisted/twisted/security/advisories/GHSA-cf56-g6w6-pqq2</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/046a164f89a0f08d3239ecebd750360f8914df33\">https://github.com/twisted/twisted/commit/046a164f89a0f08d3239ecebd750360f8914df33</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41810\">https://nvd.nist.gov/vuln/detail/CVE-2024-41810</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf56-g6w6-pqq2\">https://github.com/advisories/GHSA-cf56-g6w6-pqq2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf56-g6w6-pqq2",
            "title": "[twisted] Twisted vulnerable to HTML injection in HTTP redirect body",
            "date_modified": "2024-07-29T19:47:30.000Z",
            "date_published": "2024-07-29T17:29:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf56-g6w6-pqq2"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}