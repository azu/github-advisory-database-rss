{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Versions of the package langchain-experimental from 0.0.15 and before 0.0.21 are vulnerable to Arbitrary Code Execution when retrieving values from the database, the code will attempt to call 'eval' on all values. An attacker can exploit this vulnerability and execute arbitrary python code if they can control the input prompt and the server is configured with VectorSQLDatabaseChain.</p>\n<p><strong>Notes:</strong></p>\n<p>Impact on the Confidentiality, Integrity and Availability of the vulnerable component:</p>\n<p>Confidentiality: Code execution happens within the impacted component, in this case langchain-experimental, so all resources are necessarily accessible.</p>\n<p>Integrity: There is nothing protected by the impacted component inherently. Although anything returned from the component counts as 'information' for which the trustworthiness can be compromised.</p>\n<p>Availability: The loss of availability isn't caused by the attack itself, but it happens as a result during the attacker's post-exploitation steps.</p>\n<p>Impact on the Confidentiality, Integrity and Availability of the subsequent system:</p>\n<p>As a legitimate low-privileged user of the package (PR:L) the attacker does not have more access to data owned by the package as a result of this vulnerability than they did with normal usage (e.g. can query the DB). The unintended action that one can perform by breaking out of the app environment and exfiltrating files, making remote connections etc. happens during the post exploitation phase in the subsequent system - in this case, the OS.</p>\n<p>AT:P: An attacker needs to be able to influence the input prompt, whilst the server is configured with the VectorSQLDatabaseChain plugin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21513\">https://nvd.nist.gov/vuln/detail/CVE-2024-21513</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/7b13292e3544b2f5f2bfb8a27a062ea2b0c34561\">https://github.com/langchain-ai/langchain/commit/7b13292e3544b2f5f2bfb8a27a062ea2b0c34561</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAINEXPERIMENTAL-7278171\">https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAINEXPERIMENTAL-7278171</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/blob/672907bbbb7c38bf19787b78e4ffd7c8a9026fe4/libs/experimental/langchain_experimental/sql/vector_sql.py#L81\">https://github.com/langchain-ai/langchain/blob/672907bbbb7c38bf19787b78e4ffd7c8a9026fe4/libs/experimental/langchain_experimental/sql/vector_sql.py#L81</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-62.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-62.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcg-p68q-3w7v\">https://github.com/advisories/GHSA-cgcg-p68q-3w7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcg-p68q-3w7v",
            "title": "[langchain-experimental] langchain-experimental vulnerable to Arbitrary Code Execution",
            "date_modified": "2024-07-15T16:26:48.000Z",
            "date_published": "2024-07-15T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcg-p68q-3w7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the <code>package_index</code> module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6345\">https://nvd.nist.gov/vuln/detail/CVE-2024-6345</a></li>\n<li><a href=\"https://github.com/pypa/setuptools/commit/88807c7062788254f654ea8c03427adc859321f0\">https://github.com/pypa/setuptools/commit/88807c7062788254f654ea8c03427adc859321f0</a></li>\n<li><a href=\"https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5\">https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5</a></li>\n<li><a href=\"https://github.com/pypa/setuptools/pull/4332\">https://github.com/pypa/setuptools/pull/4332</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx63-2mw6-8hw5\">https://github.com/advisories/GHSA-cx63-2mw6-8hw5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx63-2mw6-8hw5",
            "title": "[setuptools] setuptools vulnerable to Command Injection via package URL",
            "date_modified": "2024-07-15T16:25:39.000Z",
            "date_published": "2024-07-15T03:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx63-2mw6-8hw5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Malicious package. Exfiltrated secrets to a target server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/commit/f8df7b7d0444991716fb449d55adf50067d0ba38\">https://github.com/pypa/advisory-database/commit/f8df7b7d0444991716fb449d55adf50067d0ba38</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/cipherbcrypt/PYSEC-2024-55.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/cipherbcrypt/PYSEC-2024-55.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5grr-72f9-678v\">https://github.com/advisories/GHSA-5grr-72f9-678v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5grr-72f9-678v",
            "title": "[cipherbcrypt] Malware package cipherbcrypt",
            "date_modified": "2024-07-12T21:01:14.000Z",
            "date_published": "2024-07-12T21:01:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5grr-72f9-678v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Local File Inclusion (LFI) vulnerability was identified in widgetti/solara, in version &lt;1.35.1, which was fixed in version 1.35.1. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../' when serving static files. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w\">https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w</a></li>\n<li><a href=\"https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54\">https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39903\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39903</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w\">https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39903\">https://nvd.nist.gov/vuln/detail/CVE-2024-39903</a></li>\n<li><a href=\"https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54\">https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9794-pc4r-438w\">https://github.com/advisories/GHSA-9794-pc4r-438w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9794-pc4r-438w",
            "title": "[solara] Local File Inclusion in Solara",
            "date_modified": "2024-07-12T21:00:23.000Z",
            "date_published": "2024-07-12T21:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9794-pc4r-438w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to a bug in Red's Core API, 3rd-party cogs using the <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.can_manage_channel\"><code>@commands.can_manage_channel()</code></a> command permission check without additional permission controls may authorize a user to run a command even when that user doesn't have permissions to manage a channel.\nNone of the core commands or core cogs are affected. The maintainers of the project are not aware of any <em>public</em> 3rd-party cog utilizing this API at the time of writing this advisory.</p>\n<p>The <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.mod_or_can_manage_channel\"><code>@commands.mod_or_can_manage_channel()</code></a>, <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.admin_or_can_manage_channel\"><code>@commands.admin_or_can_manage_channel()</code></a>, and <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.guildowner_or_can_manage_channel\"><code>@commands.guildowner_or_can_manage_channel()</code></a> command permission checks are unaffected.</p>\n<p>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N\nCVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:L/SA:N/AU:Y/R:U/RE:L</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem was patched in PR #6398 and later released in version <a href=\"https://pypi.org/project/Red-DiscordBot/3.5.10/\">3.5.10</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Any cog using the <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.can_manage_channel\"><code>@commands.can_manage_channel()</code></a> command permission check should be unloaded until an upgrade to a patched version can be performed.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/pull/6398\">https://github.com/Cog-Creators/Red-DiscordBot/pull/6398</a>\n<a href=\"https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.5.10\">https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.5.10</a>\n<a href=\"https://pypi.org/project/Red-DiscordBot/3.5.10/\">https://pypi.org/project/Red-DiscordBot/3.5.10/</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-5jq8-q6rj-9gq4\">https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-5jq8-q6rj-9gq4</a></li>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/pull/6398\">https://github.com/Cog-Creators/Red-DiscordBot/pull/6398</a></li>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/commit/0b0b23b9717b40ed4f8715720b199417c8e89750\">https://github.com/Cog-Creators/Red-DiscordBot/commit/0b0b23b9717b40ed4f8715720b199417c8e89750</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39905\">https://nvd.nist.gov/vuln/detail/CVE-2024-39905</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jq8-q6rj-9gq4\">https://github.com/advisories/GHSA-5jq8-q6rj-9gq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jq8-q6rj-9gq4",
            "title": "[Red-DiscordBot] Red-DiscordBot vulnerable to Incorrect Authorization in commands API",
            "date_modified": "2024-07-11T18:33:36.000Z",
            "date_published": "2024-07-11T17:32:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jq8-q6rj-9gq4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug in Wagtail's <a href=\"https://docs.wagtail.org/en/stable/topics/search/searching.html#wagtailsearch-query-string-parsing\"><code>parse_query_string</code></a> would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, <code>parse_query_string</code> would take an unexpectedly large amount of time to process, resulting in a denial of service.</p>\n<p>In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses <code>parse_query_string</code>, it may be exploitable by other users (e.g. unauthenticated users).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</p>\n<p>This vulnerability affects all unpatched versions from Wagtail 2.0 onwards.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Site owners who are unable to upgrade to a patched version can limit the length of search terms passed to <code>parse_query_string</code>. Whilst the performance characteristics will depend on your hosting environment, 1000 characters has been shown to still be fairly fast, without triggering this vulnerability.</p>\n<p>No workaround is available for the Wagtail admin usage.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Many thanks to <a href=\"https://github.com/RealOrangeOne\">Jake Howard</a> for reporting this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Visit Wagtail's <a href=\"https://docs.wagtail.io/en/stable/support.html\">support channels</a></li>\n<li>Email us at <a href=\"mailto:security@wagtail.org\">security@wagtail.org</a> (view our <a href=\"https://github.com/wagtail/wagtail/security/policy\">security policy</a> for more information).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2\">https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797\">https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2\">https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39317\">https://nvd.nist.gov/vuln/detail/CVE-2024-39317</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8",
            "title": "[wagtail] Wagtail regular expression denial-of-service via search query parsing",
            "date_modified": "2024-07-11T18:33:31.000Z",
            "date_published": "2024-07-11T13:21:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug in Wagtail's <a href=\"https://docs.wagtail.org/en/stable/topics/search/searching.html#wagtailsearch-query-string-parsing\"><code>parse_query_string</code></a> would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, <code>parse_query_string</code> would take an unexpectedly large amount of time to process, resulting in a denial of service.</p>\n<p>In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses <code>parse_query_string</code>, it may be exploitable by other users (e.g. unauthenticated users).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</p>\n<p>This vulnerability affects all unpatched versions from Wagtail 2.0 onwards.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Site owners who are unable to upgrade to a patched version can limit the length of search terms passed to <code>parse_query_string</code>. Whilst the performance characteristics will depend on your hosting environment, 1000 characters has been shown to still be fairly fast, without triggering this vulnerability.</p>\n<p>No workaround is available for the Wagtail admin usage.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Many thanks to <a href=\"https://github.com/RealOrangeOne\">Jake Howard</a> for reporting this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Visit Wagtail's <a href=\"https://docs.wagtail.io/en/stable/support.html\">support channels</a></li>\n<li>Email us at <a href=\"mailto:security@wagtail.org\">security@wagtail.org</a> (view our <a href=\"https://github.com/wagtail/wagtail/security/policy\">security policy</a> for more information).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2\">https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797\">https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2\">https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39317\">https://nvd.nist.gov/vuln/detail/CVE-2024-39317</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8",
            "title": "[wagtail] Wagtail regular expression denial-of-service via search query parsing",
            "date_modified": "2024-07-11T18:33:31.000Z",
            "date_published": "2024-07-11T13:21:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bug in Wagtail's <a href=\"https://docs.wagtail.org/en/stable/topics/search/searching.html#wagtailsearch-query-string-parsing\"><code>parse_query_string</code></a> would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, <code>parse_query_string</code> would take an unexpectedly large amount of time to process, resulting in a denial of service.</p>\n<p>In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses <code>parse_query_string</code>, it may be exploitable by other users (e.g. unauthenticated users).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</p>\n<p>This vulnerability affects all unpatched versions from Wagtail 2.0 onwards.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Site owners who are unable to upgrade to a patched version can limit the length of search terms passed to <code>parse_query_string</code>. Whilst the performance characteristics will depend on your hosting environment, 1000 characters has been shown to still be fairly fast, without triggering this vulnerability.</p>\n<p>No workaround is available for the Wagtail admin usage.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Many thanks to <a href=\"https://github.com/RealOrangeOne\">Jake Howard</a> for reporting this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Visit Wagtail's <a href=\"https://docs.wagtail.io/en/stable/support.html\">support channels</a></li>\n<li>Email us at <a href=\"mailto:security@wagtail.org\">security@wagtail.org</a> (view our <a href=\"https://github.com/wagtail/wagtail/security/policy\">security policy</a> for more information).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/wagtail/wagtail/security/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2\">https://github.com/wagtail/wagtail/commit/31b1e8532dfb1b70d8d37d22aff9cbde9109cdf2</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797\">https://github.com/wagtail/wagtail/commit/3c941136f79c48446e3858df46e5b668d7f83797</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2\">https://github.com/wagtail/wagtail/commit/b783c096b6d4fd2cfc05f9137a0be288850e99a2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39317\">https://nvd.nist.gov/vuln/detail/CVE-2024-39317</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jmp3-39vp-fwg8\">https://github.com/advisories/GHSA-jmp3-39vp-fwg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8",
            "title": "[wagtail] Wagtail regular expression denial-of-service via search query parsing",
            "date_modified": "2024-07-11T18:33:31.000Z",
            "date_published": "2024-07-11T13:21:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jmp3-39vp-fwg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. <code>get_supported_language_variant()</code> was subject to a potential denial-of-service attack when used with very long strings containing specific characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39614\">https://nvd.nist.gov/vuln/detail/CVE-2024-39614</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/17358fb35fb7217423d4c4877ccb6d1a3a40b1c3\">https://github.com/django/django/commit/17358fb35fb7217423d4c4877ccb6d1a3a40b1c3</a></li>\n<li><a href=\"https://github.com/django/django/commit/8e7a44e4bec0f11474699c3111a5e0a45afe7f49\">https://github.com/django/django/commit/8e7a44e4bec0f11474699c3111a5e0a45afe7f49</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-59.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-59.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f6f8-9mx6-9mx2\">https://github.com/advisories/GHSA-f6f8-9mx6-9mx2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2",
            "title": "[Django] Django vulnerable to Denial of Service",
            "date_modified": "2024-07-10T21:43:26.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. <code>get_supported_language_variant()</code> was subject to a potential denial-of-service attack when used with very long strings containing specific characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39614\">https://nvd.nist.gov/vuln/detail/CVE-2024-39614</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/17358fb35fb7217423d4c4877ccb6d1a3a40b1c3\">https://github.com/django/django/commit/17358fb35fb7217423d4c4877ccb6d1a3a40b1c3</a></li>\n<li><a href=\"https://github.com/django/django/commit/8e7a44e4bec0f11474699c3111a5e0a45afe7f49\">https://github.com/django/django/commit/8e7a44e4bec0f11474699c3111a5e0a45afe7f49</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-59.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-59.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f6f8-9mx6-9mx2\">https://github.com/advisories/GHSA-f6f8-9mx6-9mx2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2",
            "title": "[Django] Django vulnerable to Denial of Service",
            "date_modified": "2024-07-10T21:43:26.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The <code>django.contrib.auth.backends.ModelBackend.authenticate()</code> method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39329\">https://nvd.nist.gov/vuln/detail/CVE-2024-39329</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/07cefdee4a9d1fcd9a3a631cbd07c78defd1923b\">https://github.com/django/django/commit/07cefdee4a9d1fcd9a3a631cbd07c78defd1923b</a></li>\n<li><a href=\"https://github.com/django/django/commit/156d3186c96e3ec2ca73b8b25dc2ef366e38df14\">https://github.com/django/django/commit/156d3186c96e3ec2ca73b8b25dc2ef366e38df14</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-57.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-57.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7q2-wr7g-xqmf\">https://github.com/advisories/GHSA-x7q2-wr7g-xqmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf",
            "title": "[Django] Django vulnerable to user enumeration attack",
            "date_modified": "2024-07-11T17:26:09.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The <code>django.contrib.auth.backends.ModelBackend.authenticate()</code> method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39329\">https://nvd.nist.gov/vuln/detail/CVE-2024-39329</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/07cefdee4a9d1fcd9a3a631cbd07c78defd1923b\">https://github.com/django/django/commit/07cefdee4a9d1fcd9a3a631cbd07c78defd1923b</a></li>\n<li><a href=\"https://github.com/django/django/commit/156d3186c96e3ec2ca73b8b25dc2ef366e38df14\">https://github.com/django/django/commit/156d3186c96e3ec2ca73b8b25dc2ef366e38df14</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-57.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-57.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7q2-wr7g-xqmf\">https://github.com/advisories/GHSA-x7q2-wr7g-xqmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf",
            "title": "[Django] Django vulnerable to user enumeration attack",
            "date_modified": "2024-07-11T17:26:09.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the <code>django.core.files.storage.Storage</code> base class, when they override <code>generate_filename()</code> without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a <code>save()</code> call. (Built-in Storage sub-classes are unaffected.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39330\">https://nvd.nist.gov/vuln/detail/CVE-2024-39330</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/2b00edc0151a660d1eb86da4059904a0fc4e095e\">https://github.com/django/django/commit/2b00edc0151a660d1eb86da4059904a0fc4e095e</a></li>\n<li><a href=\"https://github.com/django/django/commit/9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270\">https://github.com/django/django/commit/9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-58.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-58.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9jmf-237g-qf46\">https://github.com/advisories/GHSA-9jmf-237g-qf46</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9jmf-237g-qf46",
            "title": "[Django] Django Path Traversal vulnerability",
            "date_modified": "2024-07-10T21:41:36.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9jmf-237g-qf46"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the <code>django.core.files.storage.Storage</code> base class, when they override <code>generate_filename()</code> without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a <code>save()</code> call. (Built-in Storage sub-classes are unaffected.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39330\">https://nvd.nist.gov/vuln/detail/CVE-2024-39330</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/2b00edc0151a660d1eb86da4059904a0fc4e095e\">https://github.com/django/django/commit/2b00edc0151a660d1eb86da4059904a0fc4e095e</a></li>\n<li><a href=\"https://github.com/django/django/commit/9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270\">https://github.com/django/django/commit/9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-58.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-58.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9jmf-237g-qf46\">https://github.com/advisories/GHSA-9jmf-237g-qf46</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9jmf-237g-qf46",
            "title": "[Django] Django Path Traversal vulnerability",
            "date_modified": "2024-07-10T21:41:36.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9jmf-237g-qf46"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38875\">https://nvd.nist.gov/vuln/detail/CVE-2024-38875</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/7285644640f085f41d60ab0c8ae4e9153f0485db\">https://github.com/django/django/commit/7285644640f085f41d60ab0c8ae4e9153f0485db</a></li>\n<li><a href=\"https://github.com/django/django/commit/79f368764295df109a37192f6182fb6f361d85b5\">https://github.com/django/django/commit/79f368764295df109a37192f6182fb6f361d85b5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-56.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-56.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qg2p-9jwr-mmqf\">https://github.com/advisories/GHSA-qg2p-9jwr-mmqf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf",
            "title": "[Django] Django vulnerable to Denial of Service",
            "date_modified": "2024-07-12T19:04:56.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38875\">https://nvd.nist.gov/vuln/detail/CVE-2024-38875</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jul/09/security-releases\">https://www.djangoproject.com/weblog/2024/jul/09/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/7285644640f085f41d60ab0c8ae4e9153f0485db\">https://github.com/django/django/commit/7285644640f085f41d60ab0c8ae4e9153f0485db</a></li>\n<li><a href=\"https://github.com/django/django/commit/79f368764295df109a37192f6182fb6f361d85b5\">https://github.com/django/django/commit/79f368764295df109a37192f6182fb6f361d85b5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-56.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-56.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qg2p-9jwr-mmqf\">https://github.com/advisories/GHSA-qg2p-9jwr-mmqf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf",
            "title": "[Django] Django vulnerable to Denial of Service",
            "date_modified": "2024-07-12T19:04:56.000Z",
            "date_published": "2024-07-10T06:33:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker who obtains a JWT can arbitrarily forge its contents without knowing the secret key. Depending on the application, this may for example enable the attacker to spoof other user's identities, hijack their sessions, or bypass authentication.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version 3.3.4\nFixed by: <a href=\"https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9\">https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p>Found by <a href=\"Tom.Tervoort@secura.com\">Tom Tervoort</a>\n<a href=\"https://github.com/pypa/advisory-database/blob/main/vulns/python-jwt/PYSEC-2022-259.yaml\">https://github.com/pypa/advisory-database/blob/main/vulns/python-jwt/PYSEC-2022-259.yaml</a></p>\n<h3 id=\"more-information\">More information</h3>\n<p>The vulnerability allows an attacker, who possesses a single valid JWT, to create a new token with forged claims that the verify_jwt function will accept as valid.</p>\n<p>The issue is caused by an inconsistency between the JWT parsers used by python-jwt and its dependency jwcrypto. By mixing compact and JSON representations, an attacker can trick jwcrypto of parsing different claims than those over which a signature is validated by jwcrypto.</p>\n<p>Testing the fix has been added as an <a href=\"https://github.com/davedoesdev/python-jwt/blob/master/test/vulnerability_vows.py\">automated unit test</a> to python-jwt.</p>\n<p>If you have any questions or comments about this advisory, please open an issue in <a href=\"https://github.com/davedoesdev/python-jwt\">python-jwt</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/davedoesdev/python-jwt/security/advisories/GHSA-5p8v-58qm-c7fp\">https://github.com/davedoesdev/python-jwt/security/advisories/GHSA-5p8v-58qm-c7fp</a></li>\n<li><a href=\"https://github.com/davedoesdev/python-jwt/commit/6c5075469847b9e8b6e5336077d989d77a4d2bf1\">https://github.com/davedoesdev/python-jwt/commit/6c5075469847b9e8b6e5336077d989d77a4d2bf1</a></li>\n<li><a href=\"https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9\">https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39227\">https://nvd.nist.gov/vuln/detail/CVE-2022-39227</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/blob/main/vulns/python-jwt/PYSEC-2022-259.yaml\">https://github.com/pypa/advisory-database/blob/main/vulns/python-jwt/PYSEC-2022-259.yaml</a></li>\n<li><a href=\"https://www.vicarius.io/vsociety/posts/authentication-bypass-in-python-jwt\">https://www.vicarius.io/vsociety/posts/authentication-bypass-in-python-jwt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p8v-58qm-c7fp\">https://github.com/advisories/GHSA-5p8v-58qm-c7fp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p8v-58qm-c7fp",
            "title": "[python-jwt] python-jwt vulnerable to token forgery with new claims",
            "date_modified": "2024-07-10T21:32:15.000Z",
            "date_published": "2022-09-21T21:33:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p8v-58qm-c7fp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the <code>Path</code> module in both zipp and zipfile, such as <code>joinpath</code>, the overloaded division operator, and <code>iterdir</code>. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5569\">https://nvd.nist.gov/vuln/detail/CVE-2024-5569</a></li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/fd604bd34f0343472521a36da1fbd22e793e14fd\">https://github.com/jaraco/zipp/commit/fd604bd34f0343472521a36da1fbd22e793e14fd</a></li>\n<li><a href=\"https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae\">https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jfmj-5v4g-7637\">https://github.com/advisories/GHSA-jfmj-5v4g-7637</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jfmj-5v4g-7637",
            "title": "[zipp] zipp Denial of Service vulnerability",
            "date_modified": "2024-07-09T17:25:55.000Z",
            "date_published": "2024-07-09T00:31:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jfmj-5v4g-7637"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in OpenStack Cinder through 24.0.0, Glance before 28.0.2, and Nova before 29.0.3. Arbitrary file access can occur via custom QCOW2 external data. By supplying a crafted QCOW2 image that references a specific data file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data. All Cinder and Nova deployments are affected; only Glance deployments with image conversion enabled are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32498\">https://nvd.nist.gov/vuln/detail/CVE-2024-32498</a></li>\n<li><a href=\"https://launchpad.net/bugs/2059809\">https://launchpad.net/bugs/2059809</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2024/07/02/2\">https://www.openwall.com/lists/oss-security/2024/07/02/2</a></li>\n<li><a href=\"https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e\">https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e</a></li>\n<li><a href=\"https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40\">https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9\">https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175\">https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973\">https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f\">https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df\">https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927\">https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r4v4-w9pv-6fph\">https://github.com/advisories/GHSA-r4v4-w9pv-6fph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r4v4-w9pv-6fph",
            "title": "[nova] OpenStack Cinder, Glance, and Nova vulnerable to arbitrary file access",
            "date_modified": "2024-07-08T19:04:08.000Z",
            "date_published": "2024-07-05T03:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r4v4-w9pv-6fph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in OpenStack Cinder through 24.0.0, Glance before 28.0.2, and Nova before 29.0.3. Arbitrary file access can occur via custom QCOW2 external data. By supplying a crafted QCOW2 image that references a specific data file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data. All Cinder and Nova deployments are affected; only Glance deployments with image conversion enabled are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32498\">https://nvd.nist.gov/vuln/detail/CVE-2024-32498</a></li>\n<li><a href=\"https://launchpad.net/bugs/2059809\">https://launchpad.net/bugs/2059809</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2024/07/02/2\">https://www.openwall.com/lists/oss-security/2024/07/02/2</a></li>\n<li><a href=\"https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e\">https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e</a></li>\n<li><a href=\"https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40\">https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9\">https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175\">https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973\">https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f\">https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f</a></li>\n<li><a href=\"https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df\">https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927\">https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r4v4-w9pv-6fph\">https://github.com/advisories/GHSA-r4v4-w9pv-6fph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r4v4-w9pv-6fph",
            "title": "[glance] OpenStack Cinder, Glance, and Nova vulnerable to arbitrary file access",
            "date_modified": "2024-07-08T19:04:08.000Z",
            "date_published": "2024-07-05T03:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r4v4-w9pv-6fph"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}