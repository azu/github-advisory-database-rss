{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability classified as problematic was found in MindSpore 2.0.0-alpha/2.0.0-rc1. This vulnerability affects the function <code>JsonHelper::UpdateArray</code> of the file <code>mindspore/ccsrc/minddata/dataset/util/json_helper.cc</code>. The manipulation leads to memory corruption. The name of the patch is 30f4729ea2c01e1ed437ba92a81e2fc098d608a9. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-230176.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2970\">https://nvd.nist.gov/vuln/detail/CVE-2023-2970</a></li>\n<li><a href=\"https://gitee.com/mindspore/mindspore/commit/30f4729ea2c01e1ed437ba92a81e2fc098d608a9\">https://gitee.com/mindspore/mindspore/commit/30f4729ea2c01e1ed437ba92a81e2fc098d608a9</a></li>\n<li><a href=\"https://gitee.com/mindspore/mindspore/issues/I73DOS\">https://gitee.com/mindspore/mindspore/issues/I73DOS</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.230176\">https://vuldb.com/?ctiid.230176</a></li>\n<li><a href=\"https://vuldb.com/?id.230176\">https://vuldb.com/?id.230176</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/mindspore/PYSEC-2023-81.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/mindspore/PYSEC-2023-81.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x67g-47p3-rc7f\">https://github.com/advisories/GHSA-x67g-47p3-rc7f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x67g-47p3-rc7f",
            "title": "[mindspore] MindSpore vulnerable to memory corruption",
            "date_modified": "2023-06-06T16:48:08.000Z",
            "date_published": "2023-05-30T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x67g-47p3-rc7f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Kiwi TCMS allows users to upload attachments to test plans, test cases, etc. Earlier versions of Kiwi TCMS had introduced upload validators in order to prevent potentially dangerous files from being uploaded and Content-Security-Policy definition to prevent cross-site-scripting attacks. </p>\n<p>The upload validation checks were not 100% robust which left the possibility to circumvent them and upload a potentially dangerous file which allows execution of arbitrary JavaScript in the browser. Additionally we've discovered that Nginx's <code>proxy_pass</code> directive will strip some headers negating protections built into Kiwi TCMS when served behind a reverse proxy.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li>Improved file upload validation code</li>\n<li>Updated Nginx reverse proxy configuration for ***.tenant.kiwitcms.org**</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If serving Kiwi TCMS behind a reverse proxy make sure that additional header values are still passed to the client browser. If they aren't redefine them inside the proxy configuration. See <a href=\"https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L66-L68\">etc/nginx.conf#L66-L68</a> and <a href=\"https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L87\">etc/nginx.conf#L87</a></p>\n<h3 id=\"references\">References</h3>\n<p>Disclosed by <a href=\"https://huntr.dev/bounties/6aea9a26-e29a-467b-aa5a-f767f0c2ec96/\">M Nadeem Qazi</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2fqm-m4r2-fh98\">https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2fqm-m4r2-fh98</a></li>\n<li><a href=\"https://github.com/kiwitcms/kiwi/commit/d789f4b51025de4f8c747c037d02e1b0da80b034\">https://github.com/kiwitcms/kiwi/commit/d789f4b51025de4f8c747c037d02e1b0da80b034</a></li>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L66-L68\">https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L66-L68</a></li>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L87\">https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf#L87</a></li>\n<li><a href=\"https://huntr.dev/bounties/6aea9a26-e29a-467b-aa5a-f767f0c2ec96/\">https://huntr.dev/bounties/6aea9a26-e29a-467b-aa5a-f767f0c2ec96/</a></li>\n<li><a href=\"https://kiwitcms.org/blog/kiwi-tcms-team/2023/06/06/kiwi-tcms-124/\">https://kiwitcms.org/blog/kiwi-tcms-team/2023/06/06/kiwi-tcms-124/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2fqm-m4r2-fh98\">https://github.com/advisories/GHSA-2fqm-m4r2-fh98</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2fqm-m4r2-fh98",
            "title": "[kiwitcms] kiwitcms vulnerable to stored cross-site scripting via unrestricted file upload",
            "date_modified": "2023-06-06T16:46:18.000Z",
            "date_published": "2023-06-06T16:46:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2fqm-m4r2-fh98"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A discovered oEmbed or image URL can bypass the <code>url_preview_url_blacklist</code> setting potentially allowing server side request forgery or bypassing network policies. Impact is limited to IP addresses allowed by the <code>url_preview_ip_range_blacklist</code> setting (by default this only allows public IPs) and by the limited information returned to the client:</p>\n<ul>\n<li>For discovered oEmbed URLs, any non-JSON response or a JSON response which includes non-oEmbed information is discarded.</li>\n<li>For discovered image URLs, any non-image response is discarded.</li>\n</ul>\n<p>Systems which have URL preview disabled (via the <code>url_preview_enabled</code> setting) or have not configured a <code>url_preview_url_blacklist</code> are not affected.</p>\n<p>Because of the uncommon configuration required, the limited information a malicious user, and the amount of guesses/time the attack would need; the severity is rated as low.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed by #15601.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The default configuration of the <code>url_preview_ip_range_blacklist</code> should protect against requests being made to internal infrastructure, URL previews of public URLs is expected.</p>\n<p>Alternately URL previews could be disabled using the <code>url_preview_enabled</code> setting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-98px-6486-j7qc\">https://github.com/matrix-org/synapse/security/advisories/GHSA-98px-6486-j7qc</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/15601\">https://github.com/matrix-org/synapse/pull/15601</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/releases/tag/v1.85.0\">https://github.com/matrix-org/synapse/releases/tag/v1.85.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-98px-6486-j7qc\">https://github.com/advisories/GHSA-98px-6486-j7qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-98px-6486-j7qc",
            "title": "[matrix-synapse] Synapse has URL deny list bypass via oEmbed and image URLs when generating previews",
            "date_modified": "2023-06-06T16:41:37.000Z",
            "date_published": "2023-06-06T16:41:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-98px-6486-j7qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It may be possible for a deactivated user to login when using uncommon configurations.</p>\n<p>This only applies if any of the following are true:</p>\n<ul>\n<li><a href=\"https://matrix-org.github.io/synapse/latest/jwt.html\">JSON Web Tokens are enabled for login</a> via the <code>jwt_config.enabled</code> configuration setting</li>\n<li>The <a href=\"https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html#password_config\">local password database is enabled</a> via the <code>password_config.enabled</code> and <code>password_config.localdb_enabled</code> configuration settings <em>and</em> a user's password is <a href=\"https://matrix-org.github.io/synapse/latest/admin_api/user_admin_api.html#create-or-modify-account\">updated via an admin API</a> after a user is deactivated.</li>\n</ul>\n<p><strong>Note that the local password database is enabled by default</strong>, but it is uncommon to set a user's password after they've been deactivated.</p>\n<p>Installations that are configured to only allow login via Single Sign-On (SSO) via CAS, SAML or OpenID Connect (OIDC); or via an external password provider (e.g. LDAP) are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li>If using JSON Web Token logins: #15624</li>\n<li>For other users: #15634</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If not using JSON Web Tokens, ensure that deactivated users do not have a password set. This list of users can be queried from PostgreSQL:</p>\n<pre><code class=\"language-sql\">SELECT name FROM users WHERE password_hash IS NOT NULL AND deactivated = 1;\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-26c5-ppr8-f33p\">https://github.com/matrix-org/synapse/security/advisories/GHSA-26c5-ppr8-f33p</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/issues/12274\">https://github.com/matrix-org/synapse/issues/12274</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/15624\">https://github.com/matrix-org/synapse/pull/15624</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/15634\">https://github.com/matrix-org/synapse/pull/15634</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/releases/tag/v1.85.0\">https://github.com/matrix-org/synapse/releases/tag/v1.85.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-26c5-ppr8-f33p\">https://github.com/advisories/GHSA-26c5-ppr8-f33p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-26c5-ppr8-f33p",
            "title": "[matrix-synapse] Synapse has improper checks for deactivated users during login",
            "date_modified": "2023-06-06T16:40:51.000Z",
            "date_published": "2023-06-06T16:40:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-26c5-ppr8-f33p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Directory traversal vulnerability in Starlette versions 0.13.5 and later and prior to 0.27.0 allows a remote unauthenticated attacker to view files in a web service which was built using Starlette.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px\">https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29159\">https://nvd.nist.gov/vuln/detail/CVE-2023-29159</a></li>\n<li><a href=\"https://github.com/encode/starlette/releases/tag/0.27.0\">https://github.com/encode/starlette/releases/tag/0.27.0</a></li>\n<li><a href=\"https://jvn.jp/en/jp/JVN95981715/\">https://jvn.jp/en/jp/JVN95981715/</a></li>\n<li><a href=\"https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3\">https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qj8w-rv5x-2v9h\">https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qj8w-rv5x-2v9h",
            "title": "[starlette] Starlette vulnerable to directory traversal",
            "date_modified": "2023-06-06T02:01:04.000Z",
            "date_published": "2023-06-01T03:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qj8w-rv5x-2v9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The in-toto configuration is read from various directories and allows users to configure the behavior of the framework. The files are from directories following the XDG base directory specification [1]. Among the files read is <code>.in_totorc</code> which is a hidden file in the directory in which in-toto is run. If an attacker controls the inputs to a supply chain step, they can mask their activities by also passing in an <code>.in_totorc</code> file that includes the necessary exclude patterns and settings.</p>\n<p>RC files are widely used in other systems [2] and security issues have been discovered in their implementations as well [3]. We found in our conversations with in-toto adopters that <code>in_totorc</code> is not their preferred way to configure in-toto. As none of the options supported in <code>in_totorc</code> is unique, and can be set elsewhere using API parameters or CLI arguments, we decided to drop support for <code>in_totorc</code>.</p>\n<h3 id=\"other-recommendations\">Other Recommendations</h3>\n<p>Sandbox functionary code as recommended in <a href=\"https://github.com/in-toto/docs/security/advisories/GHSA-p86f-xmg6-9q4x\">https://github.com/in-toto/docs/security/advisories/GHSA-p86f-xmg6-9q4x</a>.</p>\n<h3 id=\"references\">References</h3>\n<p>[1] <a href=\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\">https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html</a>\n[2] <a href=\"https://spec.editorconfig.org/\">https://spec.editorconfig.org/</a>\n[3] <a href=\"https://github.blog/2022-04-12-git-security-vulnerability-announced/\">https://github.blog/2022-04-12-git-security-vulnerability-announced/</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/in-toto/docs/security/advisories/GHSA-p86f-xmg6-9q4x\">https://github.com/in-toto/docs/security/advisories/GHSA-p86f-xmg6-9q4x</a></li>\n<li><a href=\"https://github.com/in-toto/in-toto/security/advisories/GHSA-wc64-c5rv-32pf\">https://github.com/in-toto/in-toto/security/advisories/GHSA-wc64-c5rv-32pf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32076\">https://nvd.nist.gov/vuln/detail/CVE-2023-32076</a></li>\n<li><a href=\"https://github.com/in-toto/in-toto/commit/3a21d84f40811b7d191fa7bd17265c1f99599afd\">https://github.com/in-toto/in-toto/commit/3a21d84f40811b7d191fa7bd17265c1f99599afd</a></li>\n<li><a href=\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\">https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html</a></li>\n<li><a href=\"https://github.com/in-toto/in-toto/releases/tag/v2.0.0\">https://github.com/in-toto/in-toto/releases/tag/v2.0.0</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/in-toto/PYSEC-2023-63.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/in-toto/PYSEC-2023-63.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wc64-c5rv-32pf\">https://github.com/advisories/GHSA-wc64-c5rv-32pf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wc64-c5rv-32pf",
            "title": "[in-toto] in-toto vulnerable to Configuration Read From Local Directory",
            "date_modified": "2023-06-05T13:22:38.000Z",
            "date_published": "2023-05-11T20:47:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wc64-c5rv-32pf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Specific vulnerabilities:</p>\n<ul>\n<li>Arbitrary file write in <code>resource_create</code> and <code>package_update</code> actions, using the <code>ResourceUploader</code> object.  Also reachable via <code>package_create</code>, <code>package_revise</code>, and <code>package_patch</code> via calls to <code>package_update</code>.</li>\n<li>Remote code execution via unsafe pickle loading, via Beaker's session store when configured to use the file session store backend.</li>\n<li>Potential DOS due to lack of a length check on the resource id.</li>\n<li>Information disclosure: A user with permission to create a resource can access any other resource on the system if they know the id, even if they don't have access to it.</li>\n<li>Resource overwrite: A user with permission to create a resource can overwrite any resource if they know the id, even if they don't have access to it.</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>A user with permissions to create or edit a dataset can upload a resource with a specially crafted id to write the uploaded file in an arbitrary location. This can be leveraged to Remote Code Execution via Beaker's insecure pickle loading. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>All the above listed vulnerabilities have been fixed in CKAN 2.9.9 and CKAN 2.10.1\nThe patches for CKAN 2.9 should apply easily to previous CKAN versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-446m-hmmm-hm8m\">https://github.com/ckan/ckan/security/advisories/GHSA-446m-hmmm-hm8m</a></li>\n<li><a href=\"https://github.com/ckan/ckan/blob/2a6080e61d5601fa0e2a0317afd6a8e9b7abf6dd/CHANGELOG.rst\">https://github.com/ckan/ckan/blob/2a6080e61d5601fa0e2a0317afd6a8e9b7abf6dd/CHANGELOG.rst</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32321\">https://nvd.nist.gov/vuln/detail/CVE-2023-32321</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-446m-hmmm-hm8m\">https://github.com/advisories/GHSA-446m-hmmm-hm8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-446m-hmmm-hm8m",
            "title": "[ckan] Ckan remote code execution and private information access via crafted resource ids",
            "date_modified": "2023-06-02T23:02:20.000Z",
            "date_published": "2023-05-24T17:24:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-446m-hmmm-hm8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in <a href=\"https://www.openssl.org/news/secadv/20230530.txt\">https://www.openssl.org/news/secadv/20230530.txt</a>.</p>\n<p>If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/security/advisories/GHSA-5cpq-8wj7-hf2v\">https://github.com/pyca/cryptography/security/advisories/GHSA-5cpq-8wj7-hf2v</a></li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22\">https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22</a></li>\n<li><a href=\"https://cryptography.io/en/latest/changelog/#v41-0-0\">https://cryptography.io/en/latest/changelog/#v41-0-0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5cpq-8wj7-hf2v\">https://github.com/advisories/GHSA-5cpq-8wj7-hf2v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5cpq-8wj7-hf2v",
            "title": "[cryptography] Vulnerable OpenSSL included in cryptography wheels",
            "date_modified": "2023-06-02T17:13:11.000Z",
            "date_published": "2023-06-02T17:13:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5cpq-8wj7-hf2v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>project_configure function exist remote code execute in Gerapy &lt; 0.9.8</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in version 0.9.8, please install with:</p>\n<pre><code>pip3 install -U gerapy\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Gerapy/Gerapy/security/advisories/GHSA-9w7f-m4j4-j3xw\">https://github.com/Gerapy/Gerapy/security/advisories/GHSA-9w7f-m4j4-j3xw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43857\">https://nvd.nist.gov/vuln/detail/CVE-2021-43857</a></li>\n<li><a href=\"https://github.com/Gerapy/Gerapy/issues/219\">https://github.com/Gerapy/Gerapy/issues/219</a></li>\n<li><a href=\"https://github.com/Gerapy/Gerapy/commit/49bcb19be5e0320e7e1535f34fe00f16a3cf3b28\">https://github.com/Gerapy/Gerapy/commit/49bcb19be5e0320e7e1535f34fe00f16a3cf3b28</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/165459/Gerapy-0.9.7-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/165459/Gerapy-0.9.7-Remote-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9w7f-m4j4-j3xw\">https://github.com/advisories/GHSA-9w7f-m4j4-j3xw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9w7f-m4j4-j3xw",
            "title": "[gerapy] Gerapy < 0.9.8 may cause remote code execution",
            "date_modified": "2023-06-01T19:43:26.000Z",
            "date_published": "2022-01-06T17:36:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9w7f-m4j4-j3xw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>redis-py through 4.5.3 and 4.4.3 leaves a connection open after canceling an async Redis command at an inopportune time (in the case of a non-pipeline operation), and can send response data to the client of an unrelated request. NOTE: this issue exists because of an incomplete fix for CVE-2023-28858.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28859\">https://nvd.nist.gov/vuln/detail/CVE-2023-28859</a></li>\n<li><a href=\"https://github.com/redis/redis-py/issues/2665\">https://github.com/redis/redis-py/issues/2665</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2641\">https://github.com/redis/redis-py/pull/2641</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2666\">https://github.com/redis/redis-py/pull/2666</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2671\">https://github.com/redis/redis-py/pull/2671</a></li>\n<li><a href=\"https://github.com/redis/redis-py/releases/tag/v4.4.4\">https://github.com/redis/redis-py/releases/tag/v4.4.4</a></li>\n<li><a href=\"https://github.com/redis/redis-py/releases/tag/v4.5.4\">https://github.com/redis/redis-py/releases/tag/v4.5.4</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/redis/PYSEC-2023-46.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/redis/PYSEC-2023-46.yaml</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/1899\">https://github.com/redis/redis-py/pull/1899</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fww-64cx-x8p5\">https://github.com/advisories/GHSA-8fww-64cx-x8p5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fww-64cx-x8p5",
            "title": "[redis] redis-py Race Condition due to incomplete fix",
            "date_modified": "2023-05-31T18:23:58.000Z",
            "date_published": "2023-03-26T21:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fww-64cx-x8p5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28370\">https://nvd.nist.gov/vuln/detail/CVE-2023-28370</a></li>\n<li><a href=\"https://github.com/tornadoweb/tornado/releases/tag/v6.3.2\">https://github.com/tornadoweb/tornado/releases/tag/v6.3.2</a></li>\n<li><a href=\"https://jvn.jp/en/jp/JVN45127776/\">https://jvn.jp/en/jp/JVN45127776/</a></li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/32ad07c54e607839273b4e1819c347f5c8976b2f\">https://github.com/tornadoweb/tornado/commit/32ad07c54e607839273b4e1819c347f5c8976b2f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hj3f-6gcp-jg8j\">https://github.com/advisories/GHSA-hj3f-6gcp-jg8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hj3f-6gcp-jg8j",
            "title": "[tornado] Open redirect in Tornado",
            "date_modified": "2023-05-26T21:17:00.000Z",
            "date_published": "2023-05-25T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hj3f-6gcp-jg8j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Websites that use <code>Website.user_vars</code> property in versions.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It affects versions v2.0.1 to v2.4.0. Please upgrade to v2.4.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not use <code>Website.user_vars</code> in websites when using versions v2.0.1 to v2.4.0. Also, do not use <code>Website.signin_user()</code> in version v2.4.0 only.</p>\n<h3 id=\"explanation\">Explanation</h3>\n<p>ToUI is using Flask-Caching (SimpleCache) to store user variables. My misunderstanding was that these caches are stored in the client's browser, but it seems that these are stored in the server side.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mubarakalmehairbi/ToUI/security/advisories/GHSA-hh7j-pg39-q563\">https://github.com/mubarakalmehairbi/ToUI/security/advisories/GHSA-hh7j-pg39-q563</a></li>\n<li><a href=\"https://github.com/mubarakalmehairbi/ToUI/releases/tag/v2.4.1\">https://github.com/mubarakalmehairbi/ToUI/releases/tag/v2.4.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33175\">https://nvd.nist.gov/vuln/detail/CVE-2023-33175</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hh7j-pg39-q563\">https://github.com/advisories/GHSA-hh7j-pg39-q563</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hh7j-pg39-q563",
            "title": "[toui] toui allows user-specific variables to be shared between users",
            "date_modified": "2023-05-30T06:41:15.000Z",
            "date_published": "2023-05-24T17:38:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hh7j-pg39-q563"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious user on a Synapse homeserver X with permission to create certain state events can disable outbound federation from X to an arbitrary homeserver Y.</p>\n<p>Synapse instances with federation disabled are not affected.</p>\n<h4 id=\"details\">Details</h4>\n<p>The Matrix protocol allows homeservers to provide an <code>invite_room_state</code> field on a <a href=\"https://spec.matrix.org/v1.5/client-server-api/#mroommember\">room invite</a> containing a <a href=\"https://spec.matrix.org/v1.5/client-server-api/#stripped-state\">summary of room state</a>.  In versions of Synapse up to and including v1.73.0, Synapse did not limit the size of <code>invite_room_state</code>, meaning that it was possible to create an arbitrarily large invite event.</p>\n<p>An attacker with an account on a vulnerable Synapse homeserver X could exploit this by having X create an over-sized invite event in a room with a user from another homeserver Y. Once acknowledged by the invitee's homeserver, the invite event would be sent in a batch of events to Y. If the malicious invite is so large that the entire batch is rejected as too large, X's outgoing traffic to Y would become \"stuck\", meaning that messages and state events created by X would remain unseen by Y.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Synapse 1.74 refuses to create oversized <code>invite_room_state</code> fields. Server operators should upgrade to Synapse 1.74 or newer urgently.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no robust workarounds.</p>\n<p>This attack needs an account on Synapse homeserver X to deny federation from X to another homeserver Y. As a partial mitigation, Synapse operators can disable open registration to limit the ability of attackers to create new accounts on homeserver X.</p>\n<p>If homeserver X has been attacked in this way, restarting it will resume outgoing federation by entering \"catchup mode\". For catchup mode to ignore the oversized invites, every attacked room must have a correctly-sized event sent by X which is newer than any oversized invite. This is difficult to arrange, and does not prevent the attacker from repeating their attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/issues/14492\">https://github.com/matrix-org/synapse/issues/14492</a> was caused by this issue.</li>\n<li><a href=\"https://github.com/matrix-org/synapse/issues/14642\">https://github.com/matrix-org/synapse/issues/14642</a>  includes the patch described above.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-f3wc-3vxv-xmvr\">https://github.com/matrix-org/synapse/security/advisories/GHSA-f3wc-3vxv-xmvr</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/issues/14492\">https://github.com/matrix-org/synapse/issues/14492</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/14642\">https://github.com/matrix-org/synapse/pull/14642</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32323\">https://nvd.nist.gov/vuln/detail/CVE-2023-32323</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3wc-3vxv-xmvr\">https://github.com/advisories/GHSA-f3wc-3vxv-xmvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3wc-3vxv-xmvr",
            "title": "[matrix-synapse] Synapse Outgoing federation to specific hosts can be disabled by sending malicious invites",
            "date_modified": "2023-05-26T17:57:47.000Z",
            "date_published": "2023-05-24T17:28:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3wc-3vxv-xmvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Specific vulnerabilities:</p>\n<ul>\n<li>Arbitrary file write in <code>resource_create</code> and <code>package_update</code> actions, using the <code>ResourceUploader</code> object.  Also reachable via <code>package_create</code>, <code>package_revise</code>, and <code>package_patch</code> via calls to <code>package_update</code>.</li>\n<li>Remote code execution via unsafe pickle loading, via Beaker's session store when configured to use the file session store backend.</li>\n<li>Potential DOS due to lack of a length check on the resource id.</li>\n<li>Information disclosure: A user with permission to create a resource can access any other resource on the system if they know the id, even if they don't have access to it.</li>\n<li>Resource overwrite: A user with permission to create a resource can overwrite any resource if they know the id, even if they don't have access to it.</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>A user with permissions to create or edit a dataset can upload a resource with a specially crafted id to write the uploaded file in an arbitrary location. This can be leveraged to Remote Code Execution via Beaker's insecure pickle loading. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>All the above listed vulnerabilities have been fixed in CKAN 2.9.9 and CKAN 2.10.1\nThe patches for CKAN 2.9 should apply easily to previous CKAN versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-446m-hmmm-hm8m\">https://github.com/ckan/ckan/security/advisories/GHSA-446m-hmmm-hm8m</a></li>\n<li><a href=\"https://github.com/ckan/ckan/blob/2a6080e61d5601fa0e2a0317afd6a8e9b7abf6dd/CHANGELOG.rst\">https://github.com/ckan/ckan/blob/2a6080e61d5601fa0e2a0317afd6a8e9b7abf6dd/CHANGELOG.rst</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32321\">https://nvd.nist.gov/vuln/detail/CVE-2023-32321</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-446m-hmmm-hm8m\">https://github.com/advisories/GHSA-446m-hmmm-hm8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-446m-hmmm-hm8m",
            "title": "[ckan] Ckan remote code execution and private information access via crafted resource ids",
            "date_modified": "2023-06-02T23:02:20.000Z",
            "date_published": "2023-05-24T17:24:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-446m-hmmm-hm8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If Synapse and a malicious homeserver are both joined to the same room, the malicious homeserver can trick Synapse into accepting previously rejected events into its view of the current state of that room. This can be exploited in a way that causes all further messages and state changes sent in that room from the vulnerable homeserver to be rejected.</p>\n<p>Synapse homeservers are affected by this issue if and only if they are joined to rooms which members of untrusted homeservers are joined or invited to. </p>\n<ul>\n<li>Synapse homeservers in rooms available over public federation <strong>are</strong> affected.</li>\n<li>Synapse homeservers with federation disabled are not affected.</li>\n<li>Synapse homeservers in a closed federation containing only trusted servers are not affected.</li>\n<li>Synapse homeservers which are only joined to rooms with federation disabled[^1] are not affected.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>Administrators of homeservers with federation enabled are advised to upgrade to 1.68.0 or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Federation can be disabled by setting <a href=\"https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html#federation_domain_whitelist\"><code>federation_domain_whitelist</code></a> to an empty list (<code>[]</code>). from the vulnerable homeserver to be rejected. This issue has been patched in version 1.68.0</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/13723\">https://github.com/matrix-org/synapse/pull/13723</a></li>\n</ul>\n<p>[^1]: See <code>m.federate</code> in the <a href=\"https://spec.matrix.org/v1.4/client-server-api/#mroomcreate\"><code>m.room.create</code> definition</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-p9qp-c452-f9r7\">https://github.com/matrix-org/synapse/security/advisories/GHSA-p9qp-c452-f9r7</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/13723\">https://github.com/matrix-org/synapse/pull/13723</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39374\">https://nvd.nist.gov/vuln/detail/CVE-2022-39374</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p9qp-c452-f9r7\">https://github.com/advisories/GHSA-p9qp-c452-f9r7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p9qp-c452-f9r7",
            "title": "[matrix-synapse] Synapse Denial of service due to incorrect application of event authorization rules during state resolution",
            "date_modified": "2023-06-02T23:25:27.000Z",
            "date_published": "2023-05-24T17:21:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p9qp-c452-f9r7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Synapse is an open-source Matrix homeserver written and maintained by the Matrix.org Foundation. The Matrix Federation API allows remote homeservers to request the <em>authorisation events</em> of events in a room. This is necessary so that a homeserver receiving some events can validate that those events are legitimate and permitted in their room.\nHowever, in versions of Synapse up to and including 1.68.0, a Synapse homeserver answering a query for authorisation events does not sufficiently check that the requesting server should be able to access them.</p>\n<p>Authorisation events include power level events (the list of user IDs and their power levels at the time) and relevant membership events (including the display name of the sender of that event), as well as events like <code>m.room.create</code>, <code>m.room.third_party_invite</code> and <code>m.room.join_rules</code>. Non-authorisation events are unaffected, so it isn't possible to e.g. extract message contents this way.</p>\n<p>This issue is only exploitable when a malicious actor knows the ID of a target room and the ID of an event from that room. In most cases, this makes exploitation infeasible. This issue is of negligible consequence for public rooms given that any server can easily join the room in order to be allowed to view authorisation events. Further, deployments in a closed federation where all homeservers are trustworthy are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue was patched in Synapse 1.69.0. Homeserver administrators are advised to upgrade.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Synapse can be configured with a list of servers that it is allowed to federate with <a href=\"https://matrix-org.github.io/synapse/v1.68/usage/configuration/config_documentation.html#federation_domain_whitelist\"><code>federation_domain_whitelist</code></a>. If this list is in use and all the servers on the list are trusted not to exploit this issue, then this issue is of no consequence.</p>\n<p>This workaround is not practical for homeservers participating in open federation as interaction with any server not on the list would have to happen indirectly through servers that are, leading to inconsistent delays in message delivery.</p>\n<h3 id=\"references\">References</h3>\n<p>Fixed in <a href=\"https://github.com/matrix-org/synapse/pull/13823\">https://github.com/matrix-org/synapse/pull/13823</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-45cj-f97f-ggwv\">https://github.com/matrix-org/synapse/security/advisories/GHSA-45cj-f97f-ggwv</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/issues/13288\">https://github.com/matrix-org/synapse/issues/13288</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/13823\">https://github.com/matrix-org/synapse/pull/13823</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39335\">https://nvd.nist.gov/vuln/detail/CVE-2022-39335</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45cj-f97f-ggwv\">https://github.com/advisories/GHSA-45cj-f97f-ggwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45cj-f97f-ggwv",
            "title": "[matrix-synapse] Synapse does not apply enough checks to servers requesting auth events of events in a room",
            "date_modified": "2023-06-02T23:31:55.000Z",
            "date_published": "2023-05-24T17:20:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45cj-f97f-ggwv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Since Requests v2.3.0, Requests has been vulnerable to potentially leaking <code>Proxy-Authorization</code> headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how <code>rebuild_proxies</code> is used to recompute and <a href=\"https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328\">reattach the <code>Proxy-Authorization</code> header</a> to requests when redirected. Note this behavior has <em>only</em> been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. <code>https://username:password@proxy:8080</code>).</p>\n<p><strong>Current vulnerable behavior(s):</strong></p>\n<ol>\n<li>HTTP → HTTPS: <strong>leak</strong></li>\n<li>HTTPS → HTTP: <strong>no leak</strong></li>\n<li>HTTPS → HTTPS: <strong>leak</strong></li>\n<li>HTTP → HTTP: <strong>no leak</strong></li>\n</ol>\n<p>For HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the <code>Proxy-Authorization</code> header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.</p>\n<p>The reason this currently works for HTTPS connections in Requests is the <code>Proxy-Authorization</code> header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with <a href=\"https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235\"><code>proxy_manager_for</code></a>. This will compute the required proxy headers in <code>proxy_headers</code> and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Starting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3's ProxyManager.</p>\n<p>For users with custom adapters, this <em>may</em> be potentially breaking if you were already working around this behavior. The previous functionality of <code>rebuild_proxies</code> doesn't make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For users who are not able to update Requests immediately, there is one potential workaround.</p>\n<p>You may disable redirects by setting <code>allow_redirects</code> to <code>False</code> on all calls through Requests top-level APIs. Note that if you're currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.</p>\n<pre><code>import requests\nr = requests.get('http://github.com/', allow_redirects=False)\n</code></pre>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and disclosed by the following individuals.</p>\n<p>Dennis Brinkrolf, Haxolot (<a href=\"https://haxolot.com/\">https://haxolot.com/</a>)\nTobias Funke, (<a href=\"mailto:tobiasfunke93@gmail.com\">tobiasfunke93@gmail.com</a>)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q</a></li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\">https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">https://nvd.nist.gov/vuln/detail/CVE-2023-32681</a></li>\n<li><a href=\"https://github.com/psf/requests/releases/tag/v2.31.0\">https://github.com/psf/requests/releases/tag/v2.31.0</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AW7HNFGYP44RT3DUDQXG2QT3OEV2PJ7Y/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AW7HNFGYP44RT3DUDQXG2QT3OEV2PJ7Y/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j8r2-6x86-q33q\">https://github.com/advisories/GHSA-j8r2-6x86-q33q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j8r2-6x86-q33q",
            "title": "[requests] Unintended leak of Proxy-Authorization header in requests",
            "date_modified": "2023-05-30T06:48:49.000Z",
            "date_published": "2023-05-22T20:36:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j8r2-6x86-q33q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>in contracts with at least one regular nonpayable function, due to the callvalue check being inside of the selector section, it is possible to send funds to the default function by using less than 4 bytes of calldata, even if the default function is marked <code>nonpayable</code>. this applies to contracts compiled with vyper&lt;=0.3.7.</p>\n<pre><code class=\"language-vyper\"># @version 0.3.7\n\n# implicitly nonpayable\n@external\ndef foo() -&gt; uint256:\n    return 1\n\n# implicitly nonpayable\n@external\ndef __default__():\n    # could receive ether here\n    pass\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>this was fixed by the removal of the global calldatasize check in <a href=\"https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520\">https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>don't use nonpayable default functions</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-vxmm-cwh2-q762\">https://github.com/vyperlang/vyper/security/advisories/GHSA-vxmm-cwh2-q762</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32675\">https://nvd.nist.gov/vuln/detail/CVE-2023-32675</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520\">https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/903727006c1e5ebef99fa9fd5d51d62bd33d72a9\">https://github.com/vyperlang/vyper/commit/903727006c1e5ebef99fa9fd5d51d62bd33d72a9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vxmm-cwh2-q762\">https://github.com/advisories/GHSA-vxmm-cwh2-q762</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vxmm-cwh2-q762",
            "title": "[vyper] Vyper's nonpayable default functions are sometimes payable",
            "date_modified": "2023-05-22T20:35:47.000Z",
            "date_published": "2023-05-22T20:35:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vxmm-cwh2-q762"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The django_ses library implements a mail backend for Django using AWS Simple Email Service. The library exports the <code>SESEventWebhookView class</code> intended to receive signed requests from AWS to handle email bounces, subscriptions, etc. These requests are signed by AWS and are verified by django_ses, however the verification of this signature was found to be flawed as it allowed users to specify arbitrary public certificates.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/django-ses/django-ses/security/advisories/GHSA-qg36-9jxh-fj25\">https://github.com/django-ses/django-ses/security/advisories/GHSA-qg36-9jxh-fj25</a></li>\n<li><a href=\"https://github.com/django-ses/django-ses/commit/b71b5f413293a13997b6e6314086cb9c22629795\">https://github.com/django-ses/django-ses/commit/b71b5f413293a13997b6e6314086cb9c22629795</a></li>\n<li><a href=\"https://github.com/django-ses/django-ses/blob/3d627067935876487f9938310d5e1fbb249a7778/CVE/001-cert-url-signature-verification.md\">https://github.com/django-ses/django-ses/blob/3d627067935876487f9938310d5e1fbb249a7778/CVE/001-cert-url-signature-verification.md</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33185\">https://nvd.nist.gov/vuln/detail/CVE-2023-33185</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qg36-9jxh-fj25\">https://github.com/advisories/GHSA-qg36-9jxh-fj25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qg36-9jxh-fj25",
            "title": "[django-ses] Incorrect signature verification in django-ses",
            "date_modified": "2023-05-26T21:50:47.000Z",
            "date_published": "2023-05-22T19:41:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qg36-9jxh-fj25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Kiwi TCMS allows users to upload attachments to test plans, test cases, etc. Earlier versions of Kiwi TCMS had introduced upload validators in order to prevent potentially dangerous files from being uploaded, see <a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-fwcf-753v-fgcj\">GHSA-fwcf-753v-fgcj</a> and Content-Security-Policy definition to prevent cross-site-scripting attacks, see <a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2wcr-87wf-cf9j\">GHSA-2wcr-87wf-cf9j</a>.</p>\n<p>The upload validation checks were not robust enough which left the possibility of an attacker to circumvent them and upload a potentially dangerous file. Exploting this flaw a combination of files could be uploaded so that they work together to circumvent the existing Content-Security-Policy and allow execution of arbitrary JavaScript in the browser.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li>File upload validation code has been improved</li>\n<li>Kiwi TCMS will now force <code>Content-Type: text/plain</code>  when serving uploaded files</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Force the Content-Type header via a custom Django middleware, see <code>ExtraHeadersMiddleware</code> in <a href=\"https://github.com/kiwitcms/Kiwi/blob/master/tcms/core/middleware.py#L23\">https://github.com/kiwitcms/Kiwi/blob/master/tcms/core/middleware.py#L23</a> and/or</li>\n<li>Force the Content-Type header via Nginx overrides, see <code>location /uploads/</code> in <a href=\"https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf\">https://github.com/kiwitcms/Kiwi/blob/master/etc/nginx.conf</a></li>\n</ol>\n<h3 id=\"references\">References</h3>\n<p>Disclosed by <a href=\"https://huntr.dev/bounties/db75275f-8bcd-482b-ae12-feff660d4794\">Antonio Spataro</a> and <a href=\"https://huntr.dev/bounties/46d5b535-bdff-4b98-8691-a907591fcf10/\">ek1ng</a>. Additional credits to <a href=\"https://huntr.dev/bounties/cbc2676a-90ff-457f-9cdc-2a7981f960f3/\">Ahmed Rabeaa Mosa</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2wcr-87wf-cf9j\">https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2wcr-87wf-cf9j</a></li>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-fwcf-753v-fgcj\">https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-fwcf-753v-fgcj</a></li>\n<li><a href=\"https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-x7c2-7wvg-jpx7\">https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-x7c2-7wvg-jpx7</a></li>\n<li><a href=\"https://kiwitcms.org/blog/kiwi-tcms-team/2023/05/22/kiwi-tcms-123/\">https://kiwitcms.org/blog/kiwi-tcms-team/2023/05/22/kiwi-tcms-123/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32686\">https://nvd.nist.gov/vuln/detail/CVE-2023-32686</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7c2-7wvg-jpx7\">https://github.com/advisories/GHSA-x7c2-7wvg-jpx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7c2-7wvg-jpx7",
            "title": "[kiwitcms] kiwitcms vulnerable to stored XSS via unrestricted files upload",
            "date_modified": "2023-06-02T22:22:58.000Z",
            "date_published": "2023-05-22T19:39:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7c2-7wvg-jpx7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}