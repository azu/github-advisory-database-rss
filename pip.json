{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The two gRPC ports 7070 and 7071, are not bound to <a href=\"http://localhost/\">localhost</a> by default, so when TorchServe is launched, these two interfaces are bound to all interfaces. Customers using PyTorch inference Deep Learning Containers (DLC) through Amazon SageMaker and EKS are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue in TorchServe has been fixed in <a href=\"https://github.com/pytorch/serve/pull/3083\">#3083</a>.</p>\n<p>TorchServe release 0.11.0 includes the fix to address this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pytorch/serve/pull/3083\">#3083</a></li>\n<li><a href=\"https://github.com/pytorch/serve/releases/tag/v0.11.0\">TorchServe release v0.11.0</a></li>\n</ul>\n<p>Thank Kroll Cyber Risk for for responsibly disclosing this issue.</p>\n<p>If you have any questions or comments about this advisory, we ask that you contact AWS Security via our <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">vulnerability reporting page</a> or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pytorch/serve/security/advisories/GHSA-hhpg-v63p-wp7w\">https://github.com/pytorch/serve/security/advisories/GHSA-hhpg-v63p-wp7w</a></li>\n<li><a href=\"https://github.com/pytorch/serve/pull/3083\">https://github.com/pytorch/serve/pull/3083</a></li>\n<li><a href=\"https://github.com/pytorch/serve/commit/aab99506a17193de217aacc1119d9381dbc6ed2b\">https://github.com/pytorch/serve/commit/aab99506a17193de217aacc1119d9381dbc6ed2b</a></li>\n<li><a href=\"https://github.com/pytorch/serve/releases/tag/v0.11.0\">https://github.com/pytorch/serve/releases/tag/v0.11.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35199\">https://nvd.nist.gov/vuln/detail/CVE-2024-35199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhpg-v63p-wp7w\">https://github.com/advisories/GHSA-hhpg-v63p-wp7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhpg-v63p-wp7w",
            "title": "[torchserve] TorchServe gRPC Port Exposure",
            "date_modified": "2024-07-19T14:18:39.000Z",
            "date_published": "2024-07-18T22:06:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhpg-v63p-wp7w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TorchServe's check on allowed_urls configuration can be by-passed if the URL contains characters such as \"..\" but it does not prevent the model from being downloaded into the model store. Once a file is downloaded, it can be referenced without providing a URL the second time, which effectively bypasses the allowed_urls security check. Customers using PyTorch inference Deep Learning Containers (DLC) through Amazon SageMaker and EKS are not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue in TorchServe has been fixed by validating the URL without characters such as \"..\" before downloading: <a href=\"https://github.com/pytorch/serve/pull/3082\">#3082</a>.</p>\n<p>TorchServe release 0.11.0 includes the fix to address this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pytorch/serve/pull/3082\">#3082</a></li>\n<li><a href=\"https://github.com/pytorch/serve/releases/tag/v0.11.0\">TorchServe release v0.11.0</a></li>\n</ul>\n<p>Thank Kroll Cyber Risk for for responsibly disclosing this issue.</p>\n<p>If you have any questions or comments about this advisory, we ask that you contact AWS Security via our <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">vulnerability reporting page</a> or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pytorch/serve/security/advisories/GHSA-wxcx-gg9c-fwp2\">https://github.com/pytorch/serve/security/advisories/GHSA-wxcx-gg9c-fwp2</a></li>\n<li><a href=\"https://github.com/pytorch/serve/pull/3082\">https://github.com/pytorch/serve/pull/3082</a></li>\n<li><a href=\"https://github.com/pytorch/serve/commit/cdba0fd449c2fd23dcf37c54c0784035541d5114\">https://github.com/pytorch/serve/commit/cdba0fd449c2fd23dcf37c54c0784035541d5114</a></li>\n<li><a href=\"https://github.com/pytorch/serve/releases/tag/v0.11.0\">https://github.com/pytorch/serve/releases/tag/v0.11.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35198\">https://nvd.nist.gov/vuln/detail/CVE-2024-35198</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxcx-gg9c-fwp2\">https://github.com/advisories/GHSA-wxcx-gg9c-fwp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxcx-gg9c-fwp2",
            "title": "[torchserve] TorchServe vulnerable to bypass of allowed_urls configuration",
            "date_modified": "2024-07-19T14:18:16.000Z",
            "date_published": "2024-07-18T22:03:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxcx-gg9c-fwp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>\n<h3 id=\"details\">Details</h3>\n<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n</code></pre>\n<p>If you'd want to not pass any variables, you can set an empty dict:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={})\nb''\n</code></pre>\n<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">sentry-sdk==2.8.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>\n<ol>\n<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={\"EMPTY_ENV\":\"1\"}</code> or similar.</li>\n</ol>\n<p>OR</p>\n<ol start=\"2\">\n<li>Disable Stdlib integration:</li>\n</ol>\n<pre><code>import sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Sentry docs: <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/\">Default integrations</a></li>\n<li>Python docs: <a href=\"https://docs.python.org/3/library/subprocess.html\">subprocess module</a></li>\n<li>Patch <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff\">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html\">https://docs.python.org/3/library/subprocess.html</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations\">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40647\">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2",
            "title": "[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
            "date_modified": "2024-07-19T05:47:47.000Z",
            "date_published": "2024-07-18T17:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Roundup before 2.4.0 allows XSS via JavaScript in PDF, XML, and SVG documents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39126\">https://nvd.nist.gov/vuln/detail/CVE-2024-39126</a></li>\n<li><a href=\"https://www.roundup-tracker.org\">https://www.roundup-tracker.org</a></li>\n<li><a href=\"https://www.roundup-tracker.org/docs/security.html#cve-announcements\">https://www.roundup-tracker.org/docs/security.html#cve-announcements</a></li>\n<li><a href=\"https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631\">https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-65.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-65.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x37x-qf4v-f54f\">https://github.com/advisories/GHSA-x37x-qf4v-f54f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x37x-qf4v-f54f",
            "title": "[roundup] Roundup Cross-site Scripting Vulnerability",
            "date_modified": "2024-07-18T14:42:06.000Z",
            "date_published": "2024-07-17T21:31:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x37x-qf4v-f54f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Roundup before 2.4.0 allows XSS via a SCRIPT element in an HTTP Referer header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39125\">https://nvd.nist.gov/vuln/detail/CVE-2024-39125</a></li>\n<li><a href=\"https://www.roundup-tracker.org\">https://www.roundup-tracker.org</a></li>\n<li><a href=\"https://www.roundup-tracker.org/docs/security.html#cve-announcements\">https://www.roundup-tracker.org/docs/security.html#cve-announcements</a></li>\n<li><a href=\"https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631\">https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-64.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-64.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjgw-ghrx-wfff\">https://github.com/advisories/GHSA-xjgw-ghrx-wfff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjgw-ghrx-wfff",
            "title": "[roundup] Roundup Cross-site Scripting Vulnerability",
            "date_modified": "2024-07-18T14:41:27.000Z",
            "date_published": "2024-07-17T21:31:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjgw-ghrx-wfff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Roundup before 2.4.0, classhelpers (_generic.help.html) allow XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39124\">https://nvd.nist.gov/vuln/detail/CVE-2024-39124</a></li>\n<li><a href=\"https://www.roundup-tracker.org\">https://www.roundup-tracker.org</a></li>\n<li><a href=\"https://www.roundup-tracker.org/docs/security.html#cve-announcements\">https://www.roundup-tracker.org/docs/security.html#cve-announcements</a></li>\n<li><a href=\"https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631\">https://github.com/roundup-tracker/roundup/commit/860e3c8d07b05b77c6cdf5d0b6e7dbfe51b11631</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-63.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2024-63.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w8vc-cwv9-wx67\">https://github.com/advisories/GHSA-w8vc-cwv9-wx67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w8vc-cwv9-wx67",
            "title": "[roundup] Roundup Cross-site Scripting Vulnerability",
            "date_modified": "2024-07-18T14:41:11.000Z",
            "date_published": "2024-07-17T21:31:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w8vc-cwv9-wx67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Airflow 2.4.0, and versions before 2.9.3, has a vulnerability that allows authenticated DAG authors to craft a doc_md parameter in a way that could execute arbitrary code in the scheduler context, which should be forbidden according to the Airflow Security model. Users should upgrade to version 2.9.3 or later which has removed the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39877\">https://nvd.nist.gov/vuln/detail/CVE-2024-39877</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/40522\">https://github.com/apache/airflow/pull/40522</a></li>\n<li><a href=\"https://lists.apache.org/thread/1xhj9dkp37d6pzn24ll2mf94wbqnb2y1\">https://lists.apache.org/thread/1xhj9dkp37d6pzn24ll2mf94wbqnb2y1</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/8159f6e24704f5e0e3b3217cf79ecf5083dce531\">https://github.com/apache/airflow/commit/8159f6e24704f5e0e3b3217cf79ecf5083dce531</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5hv-r743-v8pm\">https://github.com/advisories/GHSA-g5hv-r743-v8pm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5hv-r743-v8pm",
            "title": "[apache-airflow] Apache Airflow has DAG Author Code Execution possibility in airflow-scheduler",
            "date_modified": "2024-07-17T17:59:45.000Z",
            "date_published": "2024-07-17T09:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5hv-r743-v8pm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Airflow versions before 2.9.3 have a vulnerability that allows an authenticated attacker to inject a malicious link when installing a provider. Users are recommended to upgrade to version 2.9.3, which fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39863\">https://nvd.nist.gov/vuln/detail/CVE-2024-39863</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/40475\">https://github.com/apache/airflow/pull/40475</a></li>\n<li><a href=\"https://lists.apache.org/thread/gxkvs279f1mbvckv5q65worr6how20o3\">https://lists.apache.org/thread/gxkvs279f1mbvckv5q65worr6how20o3</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/f18f48492dc69f392e45567580b6ddb0c070ea58\">https://github.com/apache/airflow/commit/f18f48492dc69f392e45567580b6ddb0c070ea58</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j482-47xf-p25c\">https://github.com/advisories/GHSA-j482-47xf-p25c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j482-47xf-p25c",
            "title": "[apache-airflow] Apache Airflow Potential Cross-site Scripting Vulnerability",
            "date_modified": "2024-07-17T17:59:08.000Z",
            "date_published": "2024-07-17T09:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j482-47xf-p25c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>BlastRADIUS (see blastradius.fail for details) also affects eduMFA prior version 2.2.0, because the Message-Authenticator attributes were not checked.</p>\n<h3 id=\"details\">Details</h3>\n<p>Website with the vulnerability information blastradius.fail\nThe original vulnerability has been assigned CVE-2024-3596\nCase in vince: <a href=\"https://kb.cert.org/vuls/id/456537\">https://kb.cert.org/vuls/id/456537</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>There is no known proof-of-concept except for the attack shown in the paper from the researchers </p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker can trigger an authentication flow with a RADIUS-backed token, intercept the RADIUS packet sent by eduMFA and modify the RADIUS server's answer, which would lead eduMFA to believe that the token is valid, even though the RADIUS servers answer was a reject.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eduMFA/eduMFA/security/advisories/GHSA-vhmj-5q9r-mm9g\">https://github.com/eduMFA/eduMFA/security/advisories/GHSA-vhmj-5q9r-mm9g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-3596\">https://nvd.nist.gov/vuln/detail/CVE-2024-3596</a></li>\n<li><a href=\"https://github.com/eduMFA/eduMFA/commit/ad9d18be31e8a6f536c646dc037d945de33fac60\">https://github.com/eduMFA/eduMFA/commit/ad9d18be31e8a6f536c646dc037d945de33fac60</a></li>\n<li><a href=\"https://kb.cert.org/vuls/id/456537\">https://kb.cert.org/vuls/id/456537</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vhmj-5q9r-mm9g\">https://github.com/advisories/GHSA-vhmj-5q9r-mm9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vhmj-5q9r-mm9g",
            "title": "[edumfa] BlastRADIUS also affects eduMFA",
            "date_modified": "2024-07-17T16:01:41.000Z",
            "date_published": "2024-07-17T16:01:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vhmj-5q9r-mm9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>When a user installs a <a href=\"https://docs.getdbt.com/docs/build/packages\">package</a> in dbt, it has the ability to override macros, materializations, and other core components of dbt. This is by design, as it allows packages to extend and customize dbt's functionality. However, this also means that a malicious package could potentially override these components with harmful code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed on 1.8.0, and patched for 1.6.14 and 1.7.14 releases.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Previously, a materialization defined in a package that shared a name with one of the built-in materializations would be preferred by default, without user action which is surprising and makes it more difficult to detect the insecure behaviour. We've changed the default behaviour to require explicit overrides by users in <code>1.8.0</code>, and provided the ability to opt-out of built-in materialization overrides in 1.6 and 1.7 via the <code>flags.require_explicit_package_overrides_for_builtin_materializations: False</code> configuration in <code>dbt_project.yml</code></p>\n<p>Versions older than 1.6 are EOL.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li>dbt documentation: <a href=\"https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags\">https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags</a></li>\n<li><a href=\"https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies\">https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies</a></li>\n<li><a href=\"https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability/\">https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability/</a></li>\n<li><a href=\"https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls/\">https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-p3f3-5ccg-83xq\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-p3f3-5ccg-83xq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40637\">https://nvd.nist.gov/vuln/detail/CVE-2024-40637</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/3c82a0296d227cb1be295356df314c11716f4ff6\">https://github.com/dbt-labs/dbt-core/commit/3c82a0296d227cb1be295356df314c11716f4ff6</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/87ac4deb00cc9fe334706e42a365903a1d581624\">https://github.com/dbt-labs/dbt-core/commit/87ac4deb00cc9fe334706e42a365903a1d581624</a></li>\n<li><a href=\"https://docs.getdbt.com/docs/build/packages\">https://docs.getdbt.com/docs/build/packages</a></li>\n<li><a href=\"https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags\">https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags</a></li>\n<li><a href=\"https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls\">https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls</a></li>\n<li><a href=\"https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies\">https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies</a></li>\n<li><a href=\"https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability\">https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p3f3-5ccg-83xq\">https://github.com/advisories/GHSA-p3f3-5ccg-83xq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p3f3-5ccg-83xq",
            "title": "[dbt-core] dbt has an implicit override for built-in materializations from installed packages",
            "date_modified": "2024-07-19T16:55:15.000Z",
            "date_published": "2024-07-17T15:52:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p3f3-5ccg-83xq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>When a user installs a <a href=\"https://docs.getdbt.com/docs/build/packages\">package</a> in dbt, it has the ability to override macros, materializations, and other core components of dbt. This is by design, as it allows packages to extend and customize dbt's functionality. However, this also means that a malicious package could potentially override these components with harmful code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed on 1.8.0, and patched for 1.6.14 and 1.7.14 releases.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Previously, a materialization defined in a package that shared a name with one of the built-in materializations would be preferred by default, without user action which is surprising and makes it more difficult to detect the insecure behaviour. We've changed the default behaviour to require explicit overrides by users in <code>1.8.0</code>, and provided the ability to opt-out of built-in materialization overrides in 1.6 and 1.7 via the <code>flags.require_explicit_package_overrides_for_builtin_materializations: False</code> configuration in <code>dbt_project.yml</code></p>\n<p>Versions older than 1.6 are EOL.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li>dbt documentation: <a href=\"https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags\">https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags</a></li>\n<li><a href=\"https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies\">https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies</a></li>\n<li><a href=\"https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability/\">https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability/</a></li>\n<li><a href=\"https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls/\">https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-p3f3-5ccg-83xq\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-p3f3-5ccg-83xq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40637\">https://nvd.nist.gov/vuln/detail/CVE-2024-40637</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/3c82a0296d227cb1be295356df314c11716f4ff6\">https://github.com/dbt-labs/dbt-core/commit/3c82a0296d227cb1be295356df314c11716f4ff6</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/87ac4deb00cc9fe334706e42a365903a1d581624\">https://github.com/dbt-labs/dbt-core/commit/87ac4deb00cc9fe334706e42a365903a1d581624</a></li>\n<li><a href=\"https://docs.getdbt.com/docs/build/packages\">https://docs.getdbt.com/docs/build/packages</a></li>\n<li><a href=\"https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags\">https://docs.getdbt.com/reference/global-configs/legacy-behaviors#behavior-change-flags</a></li>\n<li><a href=\"https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls\">https://tempered.works/posts/2024/07/06/preventing-data-theft-with-gcp-service-controls</a></li>\n<li><a href=\"https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies\">https://www.elementary-data.com/post/are-dbt-packages-secure-the-answer-lies-in-your-dwh-policies</a></li>\n<li><a href=\"https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability\">https://www.equalexperts.com/blog/tech-focus/are-you-at-risk-from-this-critical-dbt-vulnerability</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p3f3-5ccg-83xq\">https://github.com/advisories/GHSA-p3f3-5ccg-83xq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p3f3-5ccg-83xq",
            "title": "[dbt-core] dbt has an implicit override for built-in materializations from installed packages",
            "date_modified": "2024-07-19T16:55:15.000Z",
            "date_published": "2024-07-17T15:52:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p3f3-5ccg-83xq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An SQL Injection vulnerability in Apache Superset exists due to improper neutralization of special elements used in SQL commands. Specifically, certain engine-specific functions are not checked, which allows attackers to bypass Apache Superset's SQL authorization. To mitigate this, a new configuration key named DISALLOWED_SQL_FUNCTIONS has been introduced. This key disallows the use of the following PostgreSQL functions: version, query_to_xml, inet_server_addr, and inet_client_addr. Additional functions can be added to this list for increased protection.</p>\n<p>This issue affects Apache Superset: before 4.0.2.</p>\n<p>Users are recommended to upgrade to version 4.0.2, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39887\">https://nvd.nist.gov/vuln/detail/CVE-2024-39887</a></li>\n<li><a href=\"https://lists.apache.org/thread/j55vm41jg3l0x6w49zrmvbf3k0ts5fqz\">https://lists.apache.org/thread/j55vm41jg3l0x6w49zrmvbf3k0ts5fqz</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/07/16/5\">http://www.openwall.com/lists/oss-security/2024/07/16/5</a></li>\n<li><a href=\"https://github.com/apache/superset/commit/56f0103b5771d477dd106272abbd8021c9ea7506\">https://github.com/apache/superset/commit/56f0103b5771d477dd106272abbd8021c9ea7506</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q6j-vpvr-6pvj\">https://github.com/advisories/GHSA-2q6j-vpvr-6pvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q6j-vpvr-6pvj",
            "title": "[apache-superset] Apache Superset vulnerable to improper SQL authorization",
            "date_modified": "2024-07-16T20:04:45.000Z",
            "date_published": "2024-07-16T12:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q6j-vpvr-6pvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Vulnerability scan of fiona shows <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45853\">CVE-2023-45853</a></p>\n<h3 id=\"details\">Details</h3>\n<p>fiona depends on madler-zlib 1.3.  MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Unkown.  Please document if this vulnerability is exposed</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Toblerity/Fiona/security/advisories/GHSA-q5fm-55c2-v6j9\">https://github.com/Toblerity/Fiona/security/advisories/GHSA-q5fm-55c2-v6j9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45853\">https://nvd.nist.gov/vuln/detail/CVE-2023-45853</a></li>\n<li><a href=\"https://github.com/OSGeo/gdal/commit/4aa7ca61c1d2191baf1eea2a97d0dec33a41691f\">https://github.com/OSGeo/gdal/commit/4aa7ca61c1d2191baf1eea2a97d0dec33a41691f</a></li>\n<li><a href=\"https://github.com/madler/zlib/commit/73331a6a0481067628f065ffe87bb1d8f787d10c\">https://github.com/madler/zlib/commit/73331a6a0481067628f065ffe87bb1d8f787d10c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q5fm-55c2-v6j9\">https://github.com/advisories/GHSA-q5fm-55c2-v6j9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q5fm-55c2-v6j9",
            "title": "[fiona] Fiona affected by CVE-2023-45853 related to MiniZip madler-zlib",
            "date_modified": "2024-07-16T19:32:46.000Z",
            "date_published": "2024-07-16T19:32:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q5fm-55c2-v6j9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Vulnerability scan of fiona shows <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-14152\">CVE-2020-14152</a></p>\n<h3 id=\"details\">Details</h3>\n<p>In IJG JPEG (aka libjpeg) before 9d, jpeg_mem_available() in jmemnobs.c in djpeg does not honor the max_memory_to_use setting, possibly causing excessive memory consumption.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Unkown. Please document if this vulnerability is exposed</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Toblerity/Fiona/security/advisories/GHSA-g4m4-9q4c-mfw6\">https://github.com/Toblerity/Fiona/security/advisories/GHSA-g4m4-9q4c-mfw6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-14152\">https://nvd.nist.gov/vuln/detail/CVE-2020-14152</a></li>\n<li><a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/issues/500\">https://github.com/libjpeg-turbo/libjpeg-turbo/issues/500</a></li>\n<li><a href=\"https://github.com/OSGeo/gdal/commit/075480a3cba13c9dd2ab4e39e92d6147a6c98eca\">https://github.com/OSGeo/gdal/commit/075480a3cba13c9dd2ab4e39e92d6147a6c98eca</a></li>\n<li><a href=\"https://github.com/Toblerity/Fiona/commit/07708211726e276e22dedb9cd567b4f6a7b8c809\">https://github.com/Toblerity/Fiona/commit/07708211726e276e22dedb9cd567b4f6a7b8c809</a></li>\n<li><a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/commit/da2a27ef056a0179cbd80f9146e58b89403d9933\">https://github.com/libjpeg-turbo/libjpeg-turbo/commit/da2a27ef056a0179cbd80f9146e58b89403d9933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4m4-9q4c-mfw6\">https://github.com/advisories/GHSA-g4m4-9q4c-mfw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4m4-9q4c-mfw6",
            "title": "[fiona] Fiona affected by CVE-2020-14152 related to madler-zlib",
            "date_modified": "2024-07-16T19:32:23.000Z",
            "date_published": "2024-07-16T19:32:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4m4-9q4c-mfw6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>HTTP <code>OPTIONS</code> requests are always allowed by <code>OpaMiddleware</code>, even when they lack authentication, and are passed through directly to the application.</p>\n<p>The maintainer uncertain whether this should be classed as a \"bug\" or \"security issue\" – but is erring on the side of \"security issue\" as an application could reasonably assume OPA controls apply to <em>all</em> HTTP methods, and it bypasses more sophisticated policies.</p>\n<h3 id=\"details\">Details</h3>\n<p><code>OpaMiddleware</code> allows all HTTP <code>OPTIONS</code> requests without evaluating it against any policy:</p>\n<p><a href=\"https://github.com/busykoala/fastapi-opa/blob/6dd6f8c87e908fe080784a74707f016f1422b58a/fastapi_opa/opa/opa_middleware.py#L79-L80\">https://github.com/busykoala/fastapi-opa/blob/6dd6f8c87e908fe080784a74707f016f1422b58a/fastapi_opa/opa/opa_middleware.py#L79-L80</a></p>\n<p>If an application provides different responses to HTTP <code>OPTIONS</code> requests based on an entity existing (such as to indicate whether an entity is writable on a system level), an unauthenticated attacker could discover which entities exist within an application (CWE-204).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>This toy application is based on the behaviour of an app[^1] which can use <code>fastapi-opa</code>. The app uses the <code>Allow</code> header of a HTTP <code>OPTIONS</code> to indicate whether an entity is writable on a \"system\" level, and returns HTTP 404 for unknown entities:</p>\n<p>[^1]: an open source app, not written by me</p>\n<pre><code class=\"language-python\"># Run with: fastapi dev opa-poc.py --port 9999\nfrom fastapi import FastAPI, Response, HTTPException\nfrom fastapi_opa import OPAConfig, OPAMiddleware\nfrom fastapi_opa.auth.auth_api_key import APIKeyAuthentication, APIKeyConfig\n\n# OPA doesn't actually need to be running for this example\nopa_host = \"http://localhost:8181\"\napi_key_config = APIKeyConfig(\n    header_key = 'ApiKey',\n    api_key = 'secret-key',\n)\napi_key_auth = APIKeyAuthentication(api_key_config)\nopa_config = OPAConfig(authentication=api_key_auth, opa_host=opa_host)\n\napp = FastAPI()\napp.add_middleware(OPAMiddleware, config=opa_config)\n\nWRITABLE_ITEMS = {\n    1: True,\n    2: False,\n}\n\n\n@app.get(\"/\")\nasync def root() -&gt; dict:\n    return {\"msg\": \"success\"}\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int):\n    if item_id not in WRITABLE_ITEMS:\n        raise HTTPException(status_code=404)\n    return {\"item_id\": item_id}\n\n@app.options(\"/items/{item_id}\")\nasync def read_item_options(response: Response, item_id: int) -&gt; dict:\n    if item_id not in WRITABLE_ITEMS:\n        raise HTTPException(status_code=404)\n\n    response.headers[\"Allow\"] = \"OPTIONS, GET\" + (\", POST\" if WRITABLE_ITEMS[item_id] else \"\")\n    return {}\n</code></pre>\n<p>As expected, HTTP <code>GET</code> requests fail consistently when unauthenticated, regardless of whether the entity exists, because <code>read_item()</code> is never executed:</p>\n<pre><code>$ curl -i 'http://localhost:9999/items/1'\nHTTP/1.1 401 Unauthorized\nserver: uvicorn\ncontent-length: 26\ncontent-type: application/json\n\n{\"message\":\"Unauthorized\"}\n\n$ curl -i 'http://localhost:9999/items/3'\nHTTP/1.1 401 Unauthorized\nserver: uvicorn\ncontent-length: 26\ncontent-type: application/json\n\n{\"message\":\"Unauthorized\"}\n</code></pre>\n<p>However, HTTP <code>OPTIONS</code> requests are never authenticated by <code>OpaMiddleware</code>, so are passed straight through to <code>read_item_options()</code> and returned to unauthenticated users:</p>\n<pre><code>$ curl -i -X OPTIONS 'http://localhost:9999/items/1'\nHTTP/1.1 200 OK\nserver: uvicorn\ncontent-length: 2\ncontent-type: application/json\nallow: OPTIONS, GET, POST\n\n{}\n\n$ curl -i -X OPTIONS 'http://localhost:9999/items/2'\nHTTP/1.1 200 OK\nserver: uvicorn\ncontent-length: 2\ncontent-type: application/json\nallow: OPTIONS, GET\n\n{}\n\n$ curl -i -X OPTIONS 'http://localhost:9999/items/3'\nHTTP/1.1 404 Not Found\nserver: uvicorn\ncontent-length: 22\ncontent-type: application/json\n\n{\"detail\":\"Not Found\"}\n</code></pre>\n<h3 id=\"versions\">Versions</h3>\n<pre><code>fastapi-opa==2.0.0\nfastapi==0.111.0\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/busykoala/fastapi-opa/security/advisories/GHSA-5f5c-8rvc-j8wf\">https://github.com/busykoala/fastapi-opa/security/advisories/GHSA-5f5c-8rvc-j8wf</a></li>\n<li><a href=\"https://github.com/busykoala/fastapi-opa/commit/9458845a6f6f414c0b79587fae83d7f14d74dfb4\">https://github.com/busykoala/fastapi-opa/commit/9458845a6f6f414c0b79587fae83d7f14d74dfb4</a></li>\n<li><a href=\"https://github.com/busykoala/fastapi-opa/blob/6dd6f8c87e908fe080784a74707f016f1422b58a/fastapi_opa/opa/opa_middleware.py#L79-L80\">https://github.com/busykoala/fastapi-opa/blob/6dd6f8c87e908fe080784a74707f016f1422b58a/fastapi_opa/opa/opa_middleware.py#L79-L80</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40627\">https://nvd.nist.gov/vuln/detail/CVE-2024-40627</a></li>\n<li><a href=\"https://github.com/busykoala/fastapi-opa/commit/9588109ff651f7ffc92687129c4956126443fb8c\">https://github.com/busykoala/fastapi-opa/commit/9588109ff651f7ffc92687129c4956126443fb8c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5f5c-8rvc-j8wf\">https://github.com/advisories/GHSA-5f5c-8rvc-j8wf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5f5c-8rvc-j8wf",
            "title": "[fastapi-opa] OpaMiddleware does not filter HTTP OPTIONS requests",
            "date_modified": "2024-07-15T21:39:13.000Z",
            "date_published": "2024-07-15T17:49:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5f5c-8rvc-j8wf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package langchain-experimental from 0.0.15 and before 0.0.21 are vulnerable to Arbitrary Code Execution when retrieving values from the database, the code will attempt to call 'eval' on all values. An attacker can exploit this vulnerability and execute arbitrary python code if they can control the input prompt and the server is configured with VectorSQLDatabaseChain.</p>\n<p><strong>Notes:</strong></p>\n<p>Impact on the Confidentiality, Integrity and Availability of the vulnerable component:</p>\n<p>Confidentiality: Code execution happens within the impacted component, in this case langchain-experimental, so all resources are necessarily accessible.</p>\n<p>Integrity: There is nothing protected by the impacted component inherently. Although anything returned from the component counts as 'information' for which the trustworthiness can be compromised.</p>\n<p>Availability: The loss of availability isn't caused by the attack itself, but it happens as a result during the attacker's post-exploitation steps.</p>\n<p>Impact on the Confidentiality, Integrity and Availability of the subsequent system:</p>\n<p>As a legitimate low-privileged user of the package (PR:L) the attacker does not have more access to data owned by the package as a result of this vulnerability than they did with normal usage (e.g. can query the DB). The unintended action that one can perform by breaking out of the app environment and exfiltrating files, making remote connections etc. happens during the post exploitation phase in the subsequent system - in this case, the OS.</p>\n<p>AT:P: An attacker needs to be able to influence the input prompt, whilst the server is configured with the VectorSQLDatabaseChain plugin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21513\">https://nvd.nist.gov/vuln/detail/CVE-2024-21513</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/7b13292e3544b2f5f2bfb8a27a062ea2b0c34561\">https://github.com/langchain-ai/langchain/commit/7b13292e3544b2f5f2bfb8a27a062ea2b0c34561</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAINEXPERIMENTAL-7278171\">https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAINEXPERIMENTAL-7278171</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/blob/672907bbbb7c38bf19787b78e4ffd7c8a9026fe4/libs/experimental/langchain_experimental/sql/vector_sql.py#L81\">https://github.com/langchain-ai/langchain/blob/672907bbbb7c38bf19787b78e4ffd7c8a9026fe4/libs/experimental/langchain_experimental/sql/vector_sql.py#L81</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-62.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-62.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgcg-p68q-3w7v\">https://github.com/advisories/GHSA-cgcg-p68q-3w7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgcg-p68q-3w7v",
            "title": "[langchain-experimental] langchain-experimental vulnerable to Arbitrary Code Execution",
            "date_modified": "2024-07-15T16:26:48.000Z",
            "date_published": "2024-07-15T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgcg-p68q-3w7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the <code>package_index</code> module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6345\">https://nvd.nist.gov/vuln/detail/CVE-2024-6345</a></li>\n<li><a href=\"https://github.com/pypa/setuptools/commit/88807c7062788254f654ea8c03427adc859321f0\">https://github.com/pypa/setuptools/commit/88807c7062788254f654ea8c03427adc859321f0</a></li>\n<li><a href=\"https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5\">https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5</a></li>\n<li><a href=\"https://github.com/pypa/setuptools/pull/4332\">https://github.com/pypa/setuptools/pull/4332</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx63-2mw6-8hw5\">https://github.com/advisories/GHSA-cx63-2mw6-8hw5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx63-2mw6-8hw5",
            "title": "[setuptools] setuptools vulnerable to Command Injection via package URL",
            "date_modified": "2024-07-15T16:25:39.000Z",
            "date_published": "2024-07-15T03:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx63-2mw6-8hw5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Malicious package. Exfiltrated secrets to a target server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/commit/f8df7b7d0444991716fb449d55adf50067d0ba38\">https://github.com/pypa/advisory-database/commit/f8df7b7d0444991716fb449d55adf50067d0ba38</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/cipherbcrypt/PYSEC-2024-55.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/cipherbcrypt/PYSEC-2024-55.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5grr-72f9-678v\">https://github.com/advisories/GHSA-5grr-72f9-678v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5grr-72f9-678v",
            "title": "[cipherbcrypt] Malware package cipherbcrypt",
            "date_modified": "2024-07-12T21:01:14.000Z",
            "date_published": "2024-07-12T21:01:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5grr-72f9-678v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Local File Inclusion (LFI) vulnerability was identified in widgetti/solara, in version &lt;1.35.1, which was fixed in version 1.35.1. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../' when serving static files. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w\">https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w</a></li>\n<li><a href=\"https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54\">https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39903\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39903</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w\">https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39903\">https://nvd.nist.gov/vuln/detail/CVE-2024-39903</a></li>\n<li><a href=\"https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54\">https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9794-pc4r-438w\">https://github.com/advisories/GHSA-9794-pc4r-438w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9794-pc4r-438w",
            "title": "[solara] Local File Inclusion in Solara",
            "date_modified": "2024-07-12T21:00:23.000Z",
            "date_published": "2024-07-12T21:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9794-pc4r-438w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to a bug in Red's Core API, 3rd-party cogs using the <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.can_manage_channel\"><code>@commands.can_manage_channel()</code></a> command permission check without additional permission controls may authorize a user to run a command even when that user doesn't have permissions to manage a channel.\nNone of the core commands or core cogs are affected. The maintainers of the project are not aware of any <em>public</em> 3rd-party cog utilizing this API at the time of writing this advisory.</p>\n<p>The <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.mod_or_can_manage_channel\"><code>@commands.mod_or_can_manage_channel()</code></a>, <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.admin_or_can_manage_channel\"><code>@commands.admin_or_can_manage_channel()</code></a>, and <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.guildowner_or_can_manage_channel\"><code>@commands.guildowner_or_can_manage_channel()</code></a> command permission checks are unaffected.</p>\n<p>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N\nCVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:L/SA:N/AU:Y/R:U/RE:L</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem was patched in PR #6398 and later released in version <a href=\"https://pypi.org/project/Red-DiscordBot/3.5.10/\">3.5.10</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Any cog using the <a href=\"https://docs.discord.red/en/stable/framework_checks.html#redbot.core.commands.can_manage_channel\"><code>@commands.can_manage_channel()</code></a> command permission check should be unloaded until an upgrade to a patched version can be performed.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/pull/6398\">https://github.com/Cog-Creators/Red-DiscordBot/pull/6398</a>\n<a href=\"https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.5.10\">https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.5.10</a>\n<a href=\"https://pypi.org/project/Red-DiscordBot/3.5.10/\">https://pypi.org/project/Red-DiscordBot/3.5.10/</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-5jq8-q6rj-9gq4\">https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-5jq8-q6rj-9gq4</a></li>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/pull/6398\">https://github.com/Cog-Creators/Red-DiscordBot/pull/6398</a></li>\n<li><a href=\"https://github.com/Cog-Creators/Red-DiscordBot/commit/0b0b23b9717b40ed4f8715720b199417c8e89750\">https://github.com/Cog-Creators/Red-DiscordBot/commit/0b0b23b9717b40ed4f8715720b199417c8e89750</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39905\">https://nvd.nist.gov/vuln/detail/CVE-2024-39905</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jq8-q6rj-9gq4\">https://github.com/advisories/GHSA-5jq8-q6rj-9gq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jq8-q6rj-9gq4",
            "title": "[Red-DiscordBot] Red-DiscordBot vulnerable to Incorrect Authorization in commands API",
            "date_modified": "2024-07-11T18:33:36.000Z",
            "date_published": "2024-07-11T17:32:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jq8-q6rj-9gq4"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}