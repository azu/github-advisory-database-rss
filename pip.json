{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>redis-py through 4.5.3 leaves a connection open after canceling an async Redis command at an inopportune time (in the case of a non-pipeline operation), and can send response data to the client of an unrelated request. NOTE: this issue exists because of an incomplete fix for CVE-2023-28858.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28859\">https://nvd.nist.gov/vuln/detail/CVE-2023-28859</a></li>\n<li><a href=\"https://github.com/redis/redis-py/issues/2665\">https://github.com/redis/redis-py/issues/2665</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2641\">https://github.com/redis/redis-py/pull/2641</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fww-64cx-x8p5\">https://github.com/advisories/GHSA-8fww-64cx-x8p5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fww-64cx-x8p5",
            "title": "[redis] redis-py Race Condition due to incomplete fix",
            "date_modified": "2023-03-27T21:31:53.000Z",
            "date_published": "2023-03-26T21:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fww-64cx-x8p5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>redis-py before 4.5.3, as used in ChatGPT and other products, leaves a connection open after canceling an async Redis command at an inopportune time (in the case of a pipeline operation), and can send response data to the client of an unrelated request in an off-by-one manner. The fixed versions for this CVE Record are 4.3.6, 4.4.3, and 4.5.3, but <a href=\"https://github.com/redis/redis-py/issues/2665\">are believed to be incomplete</a>. CVE-2023-28859 has been assigned the issues caused by the incomplete fixes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28858\">https://nvd.nist.gov/vuln/detail/CVE-2023-28858</a></li>\n<li><a href=\"https://github.com/redis/redis-py/issues/2624\">https://github.com/redis/redis-py/issues/2624</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2641\">https://github.com/redis/redis-py/pull/2641</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6\">https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3\">https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3\">https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3</a></li>\n<li><a href=\"https://openai.com/blog/march-20-chatgpt-outage\">https://openai.com/blog/march-20-chatgpt-outage</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-24wv-mv5m-xv4h\">https://github.com/advisories/GHSA-24wv-mv5m-xv4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h",
            "title": "[redis] redis-py Race Condition vulnerability",
            "date_modified": "2023-03-27T21:31:48.000Z",
            "date_published": "2023-03-26T21:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>redis-py before 4.5.3, as used in ChatGPT and other products, leaves a connection open after canceling an async Redis command at an inopportune time (in the case of a pipeline operation), and can send response data to the client of an unrelated request in an off-by-one manner. The fixed versions for this CVE Record are 4.3.6, 4.4.3, and 4.5.3, but <a href=\"https://github.com/redis/redis-py/issues/2665\">are believed to be incomplete</a>. CVE-2023-28859 has been assigned the issues caused by the incomplete fixes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28858\">https://nvd.nist.gov/vuln/detail/CVE-2023-28858</a></li>\n<li><a href=\"https://github.com/redis/redis-py/issues/2624\">https://github.com/redis/redis-py/issues/2624</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2641\">https://github.com/redis/redis-py/pull/2641</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6\">https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3\">https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3\">https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3</a></li>\n<li><a href=\"https://openai.com/blog/march-20-chatgpt-outage\">https://openai.com/blog/march-20-chatgpt-outage</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-24wv-mv5m-xv4h\">https://github.com/advisories/GHSA-24wv-mv5m-xv4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h",
            "title": "[redis] redis-py Race Condition vulnerability",
            "date_modified": "2023-03-27T21:31:48.000Z",
            "date_published": "2023-03-26T21:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>redis-py before 4.5.3, as used in ChatGPT and other products, leaves a connection open after canceling an async Redis command at an inopportune time (in the case of a pipeline operation), and can send response data to the client of an unrelated request in an off-by-one manner. The fixed versions for this CVE Record are 4.3.6, 4.4.3, and 4.5.3, but <a href=\"https://github.com/redis/redis-py/issues/2665\">are believed to be incomplete</a>. CVE-2023-28859 has been assigned the issues caused by the incomplete fixes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28858\">https://nvd.nist.gov/vuln/detail/CVE-2023-28858</a></li>\n<li><a href=\"https://github.com/redis/redis-py/issues/2624\">https://github.com/redis/redis-py/issues/2624</a></li>\n<li><a href=\"https://github.com/redis/redis-py/pull/2641\">https://github.com/redis/redis-py/pull/2641</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6\">https://github.com/redis/redis-py/compare/v4.3.5...v4.3.6</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3\">https://github.com/redis/redis-py/compare/v4.4.2...v4.4.3</a></li>\n<li><a href=\"https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3\">https://github.com/redis/redis-py/compare/v4.5.2...v4.5.3</a></li>\n<li><a href=\"https://openai.com/blog/march-20-chatgpt-outage\">https://openai.com/blog/march-20-chatgpt-outage</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-24wv-mv5m-xv4h\">https://github.com/advisories/GHSA-24wv-mv5m-xv4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h",
            "title": "[redis] redis-py Race Condition vulnerability",
            "date_modified": "2023-03-27T21:31:48.000Z",
            "date_published": "2023-03-26T21:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-24wv-mv5m-xv4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious invalid input crashes a tensorflow model (Check Failed) and can be used to trigger a denial of service attack.\nTo minimize the bug, we built a simple single-layer TensorFlow model containing a Convolution3DTranspose layer, which works well with expected inputs and can be deployed in real-world systems. However, if we call the model with a malicious input which has a zero dimension, it gives Check Failed failure and crashes.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nclass MyModel(tf.keras.Model):\n    def __init__(self):\n        super().__init__()\n        self.conv = tf.keras.layers.Convolution3DTranspose(2, [3,3,3], padding=\"same\")\n        \n    def call(self, input):\n        return self.conv(input)\nmodel = MyModel() # Defines a valid model.\n\nx = tf.random.uniform([1, 32, 32, 32, 3], minval=0, maxval=0, dtype=tf.float32) # This is a valid input.\noutput = model.predict(x)\nprint(output.shape) # (1, 32, 32, 32, 2)\n\nx = tf.random.uniform([1, 32, 32, 0, 3], dtype=tf.float32) # This is an invalid input.\noutput = model(x) # crash\n</code></pre>\n<p>This Convolution3DTranspose layer is a very common API in modern neural networks. The ML models containing such vulnerable components could be deployed in ML applications or as cloud services. This failure could be potentially used to trigger a denial of service attack on ML cloud services.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in</p>\n<ul>\n<li>GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2\">948fe6369a5711d4b4568ea9bbf6015c6dfb77e2</a></li>\n<li>GitHub commit <a href=\"https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf\">85db5d07db54b853484bfd358c3894d948c36baf</a>.</li>\n</ul>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxgc-95xx-grvq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxgc-95xx-grvq</a></li>\n<li><a href=\"https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf\">https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2\">https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fxgc-95xx-grvq\">https://github.com/advisories/GHSA-fxgc-95xx-grvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fxgc-95xx-grvq",
            "title": "[tensorflow-cpu] TensorFlow Denial of Service vulnerability",
            "date_modified": "2023-03-27T21:05:15.000Z",
            "date_published": "2023-03-27T21:05:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fxgc-95xx-grvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious invalid input crashes a tensorflow model (Check Failed) and can be used to trigger a denial of service attack.\nTo minimize the bug, we built a simple single-layer TensorFlow model containing a Convolution3DTranspose layer, which works well with expected inputs and can be deployed in real-world systems. However, if we call the model with a malicious input which has a zero dimension, it gives Check Failed failure and crashes.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nclass MyModel(tf.keras.Model):\n    def __init__(self):\n        super().__init__()\n        self.conv = tf.keras.layers.Convolution3DTranspose(2, [3,3,3], padding=\"same\")\n        \n    def call(self, input):\n        return self.conv(input)\nmodel = MyModel() # Defines a valid model.\n\nx = tf.random.uniform([1, 32, 32, 32, 3], minval=0, maxval=0, dtype=tf.float32) # This is a valid input.\noutput = model.predict(x)\nprint(output.shape) # (1, 32, 32, 32, 2)\n\nx = tf.random.uniform([1, 32, 32, 0, 3], dtype=tf.float32) # This is an invalid input.\noutput = model(x) # crash\n</code></pre>\n<p>This Convolution3DTranspose layer is a very common API in modern neural networks. The ML models containing such vulnerable components could be deployed in ML applications or as cloud services. This failure could be potentially used to trigger a denial of service attack on ML cloud services.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in</p>\n<ul>\n<li>GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2\">948fe6369a5711d4b4568ea9bbf6015c6dfb77e2</a></li>\n<li>GitHub commit <a href=\"https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf\">85db5d07db54b853484bfd358c3894d948c36baf</a>.</li>\n</ul>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxgc-95xx-grvq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxgc-95xx-grvq</a></li>\n<li><a href=\"https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf\">https://github.com/keras-team/keras/commit/85db5d07db54b853484bfd358c3894d948c36baf</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2\">https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fxgc-95xx-grvq\">https://github.com/advisories/GHSA-fxgc-95xx-grvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fxgc-95xx-grvq",
            "title": "[tensorflow] TensorFlow Denial of Service vulnerability",
            "date_modified": "2023-03-27T21:05:15.000Z",
            "date_published": "2023-03-27T21:05:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fxgc-95xx-grvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The vulnerability resides on the Nginx config file:\n<a href=\"https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119\">https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119</a></p>\n<p>The pattern on location /static indicates a popular misconfiguration on Nginx servers presented in 2018 originally by Orange Tsai. This vulnerability allows an attacker to use a single path traversal payload in the matched location to traverse one directory above. This vulnerability only happens due to the location /static directive not having a slash <code>/</code> at the end, the following code shows an example of a safe configuration:</p>\n<pre><code class=\"language-nginx\">location /static/ {\n[...]\n</code></pre>\n<p>The vulnerability works because Nginx will think that <code>/static../</code> is a directory that should also be aliased to the folder, allowing /static/../ to be reached. In Label Studio's case, this means all files on /label_studio/core/ are exposed.</p>\n<p>Of course, this means that only Label Studio instances that were deployed using the default nginx files introducted at Mar 31, 2021.\nThis is a very easy vulnerability to fix, and just a lesser-known configuration mistake on nginx files. It's very easy to happen because all is needed is for one slash to be missing. (Off-By-One)</p>\n<p>** Proof-of-Concept (Leaking Secret Keys): **\nExploiting this vulnerability usually depends on what's on the parent folder, in Label Studio's case the most interesting file I could find that's on there by default is /label_studio/core/ . We can fetch it by simply making a request to the traversed folder.</p>\n<pre><code class=\"language-bash\"># Production Label Studio docker-compose running on localhost:8080\n/t/mydata [127]$ curl localhost:8080/static../settings/label_studio.py\n\"\"\"This file and its contents are licensed under the Apache License 2.0. Please see the included NOTICE for copyright information and LICENSE for a copy of the license.\n\"\"\"\nimport os\nimport pathlib\n\nfrom core.settings.base import *\n\nDJANGO_DB = get_env('DJANGO_DB', DJANGO_DB_SQLITE)\nDATABASES = {'default': DATABASES_ALL[DJANGO_DB]}\n\nMIDDLEWARE.append('organizations.middleware.DummyGetSessionMiddleware')\nMIDDLEWARE.append('core.middleware.UpdateLastActivityMiddleware')\nif INACTIVITY_SESSION_TIMEOUT_ENABLED:\n    MIDDLEWARE.append('core.middleware.InactivitySessionTimeoutMiddleWare')\n\nADD_DEFAULT_ML_BACKENDS = False\n\nLOGGING['root']['level'] = get_env('LOG_LEVEL', 'WARNING')\n\nDEBUG = get_bool_env('DEBUG', False)\n\nDEBUG_PROPAGATE_EXCEPTIONS = get_bool_env('DEBUG_PROPAGATE_EXCEPTIONS', False)\n\nSESSION_COOKIE_SECURE = False\n\nSESSION_ENGINE = \"django.contrib.sessions.backends.signed_cookies\"\n\nRQ_QUEUES = {}\n\nSENTRY_DSN = get_env(\n    'SENTRY_DSN',\n    'https://68b045ab408a4d32a910d339be8591a4@o227124.ingest.sentry.io/5820521'\n)\nSENTRY_ENVIRONMENT = get_env('SENTRY_ENVIRONMENT', 'opensource')\n\nFRONTEND_SENTRY_DSN = get_env(\n    'FRONTEND_SENTRY_DSN',\n    'https://5f51920ff82a4675a495870244869c6b@o227124.ingest.sentry.io/5838868')\nFRONTEND_SENTRY_ENVIRONMENT = get_env('FRONTEND_SENTRY_ENVIRONMENT', 'opensource')\n\nEDITOR_KEYMAP = json.dumps(get_env(\"EDITOR_KEYMAP\"))\n\nfrom label_studio import __version__\nfrom label_studio.core.utils import sentry\nsentry.init_sentry(release_name='label-studio', release_version=__version__)\n\n# we should do it after sentry init\nfrom label_studio.core.utils.common import collect_versions\nversions = collect_versions()\n\n# in Label Studio Community version, feature flags are always ON\nFEATURE_FLAGS_DEFAULT_VALUE = True\n# or if file is not set, default is using offline mode\nFEATURE_FLAGS_OFFLINE = get_bool_env('FEATURE_FLAGS_OFFLINE', True)\n\nfrom core.utils.io import find_file\nFEATURE_FLAGS_FILE = get_env('FEATURE_FLAGS_FILE', 'feature_flags.json')\nFEATURE_FLAGS_FROM_FILE = True\ntry:\n    from core.utils.io import find_node\n    find_node('label_studio', FEATURE_FLAGS_FILE, 'file')\nexcept IOError:\n    FEATURE_FLAGS_FROM_FILE = False\n\nSTORAGE_PERSISTENCE = get_bool_env('STORAGE_PERSISTENCE', True)\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>The impact consists on leaking Django secret keys by default, with also greater risk being possible due to the vulnerability exposing the file located at /label_studio/core/settings/label_studio.py which contains the secret key for Django as well as possibly containing other secrets the user might put there. (If the administrator decides not to use environment variables for some variables)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/heartexlabs/label-studio/security/advisories/GHSA-cpmr-mw4j-99r7\">https://github.com/heartexlabs/label-studio/security/advisories/GHSA-cpmr-mw4j-99r7</a></li>\n<li><a href=\"https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119\">https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cpmr-mw4j-99r7\">https://github.com/advisories/GHSA-cpmr-mw4j-99r7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cpmr-mw4j-99r7",
            "title": "[label-studio] Nginx alias path traversal allows unauthenticated attackers to read all files on /label_studio/core/",
            "date_modified": "2023-03-24T22:04:03.000Z",
            "date_published": "2023-03-24T22:04:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cpmr-mw4j-99r7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of the MLflow Open Source Project who are hosting the MLflow Model Registry using the <code>mlflow server</code> or <code>mlflow ui</code> commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file existence check exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication / authorization middleware).</p>\n<p>This issue only affects users and integrations that run the <code>mlflow server</code> and <code>mlflow ui</code> commands. Integrations that do not make use of <code>mlflow server</code> or <code>mlflow ui</code> are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.</p>\n<p>The vulnerability detailed in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a> enables an actor to check the existence of arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using <code>mlflow server</code> or <code>mlflow ui</code> with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication / authorization middleware, or another access restriction mechanism of your choosing.</p>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.</p>\n<h3 id=\"references\">References</h3>\n<p>More information about the vulnerability is available at <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265\">https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1176\">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d\">https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d</a></li>\n<li><a href=\"https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085\">https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wp72-7hj9-5265\">https://github.com/advisories/GHSA-wp72-7hj9-5265</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wp72-7hj9-5265",
            "title": "[mlflow] Remote file existence check vulnerability in `mlflow server` and `mlflow ui` CLIs",
            "date_modified": "2023-03-24T22:01:16.000Z",
            "date_published": "2023-03-24T22:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wp72-7hj9-5265"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users of the MLflow Open Source Project who are hosting the MLflow Model Registry using the <code>mlflow server</code> or <code>mlflow ui</code> commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file access exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication / authorization middleware).</p>\n<p>This issue only affects users and integrations that run the <code>mlflow server</code> and <code>mlflow ui</code> commands. Integrations that do not make use of <code>mlflow server</code> or <code>mlflow ui</code> are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.</p>\n<p>The vulnerability detailed in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1177\">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a> enables an actor to download arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using <code>mlflow server</code> or <code>mlflow ui</code> with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication / authorization middleware, or another access restriction mechanism of your choosing.</p>\n<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.</p>\n<h3 id=\"references\">References</h3>\n<p>More information about the vulnerability is available at <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1177\">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449\">https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1177\">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/7162a50c654792c21f3e4a160eb1a0e6a34f6e6e\">https://github.com/mlflow/mlflow/commit/7162a50c654792c21f3e4a160eb1a0e6a34f6e6e</a></li>\n<li><a href=\"https://huntr.dev/bounties/1fe8f21a-c438-4cba-9add-e8a5dab94e28\">https://huntr.dev/bounties/1fe8f21a-c438-4cba-9add-e8a5dab94e28</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xg73-94fp-g449\">https://github.com/advisories/GHSA-xg73-94fp-g449</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xg73-94fp-g449",
            "title": "[mlflow] Remote file access vulnerability in `mlflow server` and `mlflow ui` CLIs",
            "date_modified": "2023-03-24T22:01:11.000Z",
            "date_published": "2023-03-24T22:01:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xg73-94fp-g449"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nfunc = tf.raw_ops.DynamicStitch\npara={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}\ny = func(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This has been reported via Google OSS VRP.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25659\">https://nvd.nist.gov/vuln/detail/CVE-2023-25659</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch",
            "date_modified": "2023-03-27T21:26:46.000Z",
            "date_published": "2023-03-24T21:58:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nfunc = tf.raw_ops.DynamicStitch\npara={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}\ny = func(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This has been reported via Google OSS VRP.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25659\">https://nvd.nist.gov/vuln/detail/CVE-2023-25659</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch",
            "date_modified": "2023-03-27T21:26:46.000Z",
            "date_published": "2023-03-24T21:58:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nfunc = tf.raw_ops.DynamicStitch\npara={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}\ny = func(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This has been reported via Google OSS VRP.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05\">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25659\">https://nvd.nist.gov/vuln/detail/CVE-2023-25659</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93vr-9q9m-pj8p\">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p",
            "title": "[tensorflow] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch",
            "date_modified": "2023-03-27T21:26:46.000Z",
            "date_published": "2023-03-24T21:58:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93vr-9q9m-pj8p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\ntf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),\n                            data =  [[False, False, False, False], [False], [False, False, False]],\n                            message =  'tmp/I',\n                            first_n = 100,\n                            summarize = 0)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25660\">https://nvd.nist.gov/vuln/detail/CVE-2023-25660</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`",
            "date_modified": "2023-03-27T21:27:24.000Z",
            "date_published": "2023-03-24T21:58:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\ntf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),\n                            data =  [[False, False, False, False], [False], [False, False, False]],\n                            message =  'tmp/I',\n                            first_n = 100,\n                            summarize = 0)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25660\">https://nvd.nist.gov/vuln/detail/CVE-2023-25660</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`",
            "date_modified": "2023-03-27T21:27:24.000Z",
            "date_published": "2023-03-24T21:58:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\ntf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),\n                            data =  [[False, False, False, False], [False], [False, False, False]],\n                            message =  'tmp/I',\n                            first_n = 100,\n                            summarize = 0)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>\n<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1\">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25660\">https://nvd.nist.gov/vuln/detail/CVE-2023-25660</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjqc-vqcf-5qvj\">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj",
            "title": "[tensorflow] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`",
            "date_modified": "2023-03-27T21:27:24.000Z",
            "date_published": "2023-03-24T21:58:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>\n<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>\n<pre><code class=\"language-python\">import tensorflow as tf\npara={\n    'hypothesis_indices': [[]],\n    'hypothesis_values': ['tmp/'],\n    'hypothesis_shape': [],\n    'truth_indices': [[]],\n    'truth_values': [''],\n    'truth_shape': [],\n    'normalize': False\n    }\ntf.raw_ops.EditDistance(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by r3pwnx</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25662\">https://nvd.nist.gov/vuln/detail/CVE-2023-25662</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to integer overflow in EditDistance",
            "date_modified": "2023-03-27T21:58:28.000Z",
            "date_published": "2023-03-24T21:58:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>\n<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>\n<pre><code class=\"language-python\">import tensorflow as tf\npara={\n    'hypothesis_indices': [[]],\n    'hypothesis_values': ['tmp/'],\n    'hypothesis_shape': [],\n    'truth_indices': [[]],\n    'truth_values': [''],\n    'truth_shape': [],\n    'normalize': False\n    }\ntf.raw_ops.EditDistance(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by r3pwnx</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25662\">https://nvd.nist.gov/vuln/detail/CVE-2023-25662</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to integer overflow in EditDistance",
            "date_modified": "2023-03-27T21:58:28.000Z",
            "date_published": "2023-03-24T21:58:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>\n<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>\n<pre><code class=\"language-python\">import tensorflow as tf\npara={\n    'hypothesis_indices': [[]],\n    'hypothesis_values': ['tmp/'],\n    'hypothesis_shape': [],\n    'truth_indices': [[]],\n    'truth_values': [''],\n    'truth_shape': [],\n    'normalize': False\n    }\ntf.raw_ops.EditDistance(**para)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by r3pwnx</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c\">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25662\">https://nvd.nist.gov/vuln/detail/CVE-2023-25662</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7jvm-xxmr-v5cw\">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw",
            "title": "[tensorflow] TensorFlow vulnerable to integer overflow in EditDistance",
            "date_modified": "2023-03-27T21:58:28.000Z",
            "date_published": "2023-03-24T21:58:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When ctx-&gt;step_containter() is a null ptr, the Lookup function will be executed with a null pointer.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\ntf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a\">239139d2ae6a81ae9ba499ad78b56d9b2931538a</a>.</p>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yu Tian</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a\">https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25663\">https://nvd.nist.gov/vuln/detail/CVE-2023-25663</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-64jg-wjww-7c5w\">https://github.com/advisories/GHSA-64jg-wjww-7c5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-64jg-wjww-7c5w",
            "title": "[tensorflow-gpu] TensorFlow has Null Pointer Error in TensorArrayConcatV2",
            "date_modified": "2023-03-27T21:58:57.000Z",
            "date_published": "2023-03-24T21:58:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-64jg-wjww-7c5w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When ctx-&gt;step_containter() is a null ptr, the Lookup function will be executed with a null pointer.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\ntf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a\">239139d2ae6a81ae9ba499ad78b56d9b2931538a</a>.</p>\n<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yu Tian</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a\">https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25663\">https://nvd.nist.gov/vuln/detail/CVE-2023-25663</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-64jg-wjww-7c5w\">https://github.com/advisories/GHSA-64jg-wjww-7c5w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-64jg-wjww-7c5w",
            "title": "[tensorflow-cpu] TensorFlow has Null Pointer Error in TensorArrayConcatV2",
            "date_modified": "2023-03-27T21:58:57.000Z",
            "date_published": "2023-03-24T21:58:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-64jg-wjww-7c5w"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}