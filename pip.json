{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28347\">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81\">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w24h-v9qh-8gxj\">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj"
            }
        },
        {
            "content_html": "<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28347\">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81\">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w24h-v9qh-8gxj\">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj"
            }
        },
        {
            "content_html": "<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28347\">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81\">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w24h-v9qh-8gxj\">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w24h-v9qh-8gxj"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28346\">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html\">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>\n<li><a href=\"https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200\">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gwj-7jmv-h26r\">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28346\">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html\">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>\n<li><a href=\"https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200\">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gwj-7jmv-h26r\">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28346\">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security/\">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/django-announce\">https://groups.google.com/forum/#!forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/apr/11/security-releases/\">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/04/11/1\">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html\">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>\n<li><a href=\"https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200\">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gwj-7jmv-h26r\">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r",
            "title": "[Django] SQL Injection in Django",
            "date_modified": "2022-04-22T23:29:02.000Z",
            "date_published": "2022-04-13T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gwj-7jmv-h26r"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 user wrote the following code:</p>\n<pre><code class=\"language-python\">from PyPDF2 import PdfFileReader, PdfFileWriter\nfrom PyPDF2.pdf import ContentStream\n\nreader = PdfFileReader(\"malicious.pdf\", strict=False)\nfor page in reader.pages:\n    ContentStream(page.getContents(), reader)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://pypi.org/project/PyPDF2\"><code>PyPDF2==1.27.5</code></a> and later are patched.</p>\n<p>Credits to <a href=\"https://github.com/sekrause\">Sebastian Krause</a> for finding (<a href=\"https://github.com/py-pdf/PyPDF2/issues/329\">issue</a>) and fixing (<a href=\"https://github.com/py-pdf/PyPDF2/pull/740\">PR</a>) it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79\">https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24859\">https://nvd.nist.gov/vuln/detail/CVE-2022-24859</a></li>\n<li><a href=\"https://github.com/py-pdf/PyPDF2/issues/329\">https://github.com/py-pdf/PyPDF2/issues/329</a></li>\n<li><a href=\"https://github.com/py-pdf/PyPDF2/pull/740\">https://github.com/py-pdf/PyPDF2/pull/740</a></li>\n<li><a href=\"https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5\">https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xcjx-m2pj-8g79\">https://github.com/advisories/GHSA-xcjx-m2pj-8g79</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xcjx-m2pj-8g79",
            "title": "[PyPDF2] Manipulated inline images can cause Infinite Loop in PyPDF2",
            "date_modified": "2022-04-22T20:54:43.000Z",
            "date_published": "2022-04-22T20:54:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xcjx-m2pj-8g79"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>django-mfa3 is a library that implements multi factor authentication for the django web framework. It achieves this by modifying the regular login view. Django however has a second login view for its admin area. This second login view was not modified, so the multi factor authentication can be bypassed.</p>\n<p>You are affected if you have activated both django-mfa3 (&lt; 0.5.0) and django.contrib.admin and have not taken any other measures to prevent users from accessing the admin login view.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been fixed in django-mfa3 0.5.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>It is possible to work around the issue by overwriting the admin login route, e.g. by adding the following URL definition <em>before</em> the admin routes:</p>\n<pre><code>url('admin/login/', lambda request: redirect(settings.LOGIN_URL)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15\">django-mfa3 changelog</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4\">https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24857\">https://nvd.nist.gov/vuln/detail/CVE-2022-24857</a></li>\n<li><a href=\"https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de\">https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de</a></li>\n<li><a href=\"https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15\">https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3r7g-wrpr-j5g4\">https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3r7g-wrpr-j5g4",
            "title": "[django-mfa3] Improper Authentication in django-mfa3",
            "date_modified": "2022-04-22T20:48:29.000Z",
            "date_published": "2022-04-22T20:48:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3r7g-wrpr-j5g4"
            }
        },
        {
            "content_html": "<p>xml2rfc allows <code>script</code> elements in SVG sources.\nIn HTML output having these script elements can lead to XSS attacks.</p>\n<p>Sample XML snippet:</p>\n<pre><code>&lt;artwork type=\"svg\" src=\"data:image/svg+xml,%3Csvg viewBox='0 0 10 10' xmlns='http://www.w3.org/2000/svg'%3E%3Cscript%3E window.alert('Test Alert'); %3C/script%3E%3C/svg%3E\"&gt;\n&lt;/artwork&gt;\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability impacts website that publish HTML drafts and RFCs.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been fixed in version <a href=\"https://github.com/ietf-tools/xml2rfc/releases/tag/v3.12.4\">3.12.4</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If SVG source is self-contained within the XML, scraping <code>script</code> elements from SVG files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script\">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/ietf-tools/xml2rfc/\">xml2rfc</a></li>\n<li>Email us at <a href=\"mailto:operational-vulnerability@ietf.org\">operational-vulnerability@ietf.org</a></li>\n<li><a href=\"https://www.ietf.org/about/administration/policies-procedures/vulnerability-disclosure/\">Infrastructure and Services Vulnerability Disclosure</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w\">https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf4q-4cqr-7g7w\">https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf4q-4cqr-7g7w",
            "title": "[xml2rfc] SVG with embedded scripts can lead to cross-site scripting attacks in xml2rfc",
            "date_modified": "2022-04-22T20:25:55.000Z",
            "date_published": "2022-04-22T20:25:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf4q-4cqr-7g7w"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>in the following code, the return of <code>&lt;iface&gt;.returns_int128()</code> is not validated to fall within the bounds of <code>int128</code>. as of v0.3.0, <code>&lt;iface&gt;.returns_int128()</code> is validated in simple expressions, but not complex expressions.</p>\n<pre><code class=\"language-vyper\">interface iface:\n    def returns_int128() -&gt; int128: view\n    def returns_Bytes33() -&gt; Bytes[33]: view\n\nx: iface\n \n@external\ndef call_out():\n    x: int128 = self.x.returns_int128()  # affected, &lt;0.3.0\n    y: uint256 = convert(self.x.returns_int128(), uint256)  # affected, &lt;0.3.2\n    z: Bytes[33] = concat(self.x.returns_Bytes33(), b\"\")  # affected &gt;= 0.3.0, &lt;0.3.2\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>0.3.2 (as of <a href=\"https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b\">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Break up operations involving external calls into multiple statements. For instance, instead of the example above, use</p>\n<pre><code>x: int128 = self.x.returns_int128()\ny: uint256 = convert(x, uint256)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h\">https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24845\">https://nvd.nist.gov/vuln/detail/CVE-2022-24845</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b\">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j2x6-9323-fp7h\">https://github.com/advisories/GHSA-j2x6-9323-fp7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j2x6-9323-fp7h",
            "title": "[vyper] Integer bounds error in Vyper",
            "date_modified": "2022-04-22T20:24:15.000Z",
            "date_published": "2022-04-22T20:24:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j2x6-9323-fp7h"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Importing a function from a JSON interface which returns <code>bytes</code> generates bytecode which does not clamp bytes length, potentially resulting in a buffer overrun.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>0.3.2 (as of <a href=\"https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b\">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use .vy interfaces.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg\">https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24788\">https://nvd.nist.gov/vuln/detail/CVE-2022-24788</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b\">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mrx-6fxm-8jpg\">https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mrx-6fxm-8jpg",
            "title": "[vyper] Buffer Overflow in vyper",
            "date_modified": "2022-04-22T19:54:12.000Z",
            "date_published": "2022-04-20T20:31:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mrx-6fxm-8jpg"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>bytestrings can have dirty bytes in them, resulting in the word-for-word comparison to give incorrect results, e.g.</p>\n<pre><code class=\"language-vyper\">b1: Bytes[32] = b\"abcdef\"\nb1 = slice(b1, 0, 1)\nb2: Bytes[32] = b\"abcdef\"\nt: bool = b1 == b2  # incorrectly evaluates to True\n</code></pre>\n<p>even without dirty nonzero bytes, because there is no comparison of the length, two bytestrings can compare to equal if one ends with <code>\"\\x00\"</code>.</p>\n<pre><code class=\"language-vyper\">b1: Bytes[32] = b\"abc\\0\"\nb2: Bytes[32] = b\"abc\"\nt: bool = b1 == b2  # incorrectly evaluates to True\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>fixed in <a href=\"https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508\">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm\">https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508\">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7vrm-3jc8-5wwm\">https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7vrm-3jc8-5wwm",
            "title": "[vyper] Incorrect Comparison in Vyper",
            "date_modified": "2022-04-06T17:39:51.000Z",
            "date_published": "2022-04-04T21:40:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7vrm-3jc8-5wwm"
            }
        },
        {
            "content_html": "<p>A Python format string issue leading to information disclosure and potentially remote code execution in ConsoleMe for all versions prior to 1.2.2</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27177\">https://nvd.nist.gov/vuln/detail/CVE-2022-27177</a></li>\n<li><a href=\"https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2022-001.md\">https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2022-001.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74w3-2r77-fw5h\">https://github.com/advisories/GHSA-74w3-2r77-fw5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74w3-2r77-fw5h",
            "title": "[consoleme] Use of Externally-Controlled Format String in consoleme",
            "date_modified": "2022-04-18T22:21:19.000Z",
            "date_published": "2022-04-03T00:00:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74w3-2r77-fw5h"
            }
        },
        {
            "content_html": "<p>Anytime a 5xx error is triggered, the auth cookie and other header values are recorded in Jupyter server logs by default. Considering these logs do not require root access, an attacker can monitor these logs, steal sensitive auth/cookie information, and gain access to the Jupyter server.</p>\n<p>Upgrade to notebook version 6.4.10</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<p>Credit: @3coins for reporting. Thank you!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/notebook/security/advisories/GHSA-m87f-39q9-6f55\">https://github.com/jupyter/notebook/security/advisories/GHSA-m87f-39q9-6f55</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24758\">https://nvd.nist.gov/vuln/detail/CVE-2022-24758</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m87f-39q9-6f55\">https://github.com/advisories/GHSA-m87f-39q9-6f55</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m87f-39q9-6f55",
            "title": "[notebook] Sensitive Auth & Cookie data stored in Jupyter server logs",
            "date_modified": "2022-04-06T18:41:46.000Z",
            "date_published": "2022-04-05T17:47:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m87f-39q9-6f55"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The insecure <code>tempfile.mktemp()</code> is used when Horovod is run in an LSF job with <code>jsrun</code>. In that situation, a jsrun rank file is created with <code>mktemp</code>, which could be hijacked by another process to read or manipulate the content.</p>\n<p>This issue does not impact the use of MPI, Gloo, Spark or Ray.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed in <a href=\"https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41\">b96ecae4</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The rank file is not created when <code>binding_args</code> are provided in the <code>Settings</code> instance.</p>\n<h3 id=\"references\">References</h3>\n<p>Please see <a href=\"https://github.com/horovod/horovod/pull/3358\">https://github.com/horovod/horovod/pull/3358</a> for details.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/horovod/horovod/issues/new/choose\">https://github.com/horovod/horovod</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/horovod/horovod/security/advisories/GHSA-47wv-vhj2-g66m\">https://github.com/horovod/horovod/security/advisories/GHSA-47wv-vhj2-g66m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0315\">https://nvd.nist.gov/vuln/detail/CVE-2022-0315</a></li>\n<li><a href=\"https://github.com/horovod/horovod/pull/3358\">https://github.com/horovod/horovod/pull/3358</a></li>\n<li><a href=\"https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41\">https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41</a></li>\n<li><a href=\"https://huntr.dev/bounties/7e50397b-dd63-4bb5-b56d-704094a7da45\">https://huntr.dev/bounties/7e50397b-dd63-4bb5-b56d-704094a7da45</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/horovod/PYSEC-2022-175.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/horovod/PYSEC-2022-175.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-47wv-vhj2-g66m\">https://github.com/advisories/GHSA-47wv-vhj2-g66m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-47wv-vhj2-g66m",
            "title": "[horovod] Use of insecure temporary file in Horovod",
            "date_modified": "2022-04-05T00:10:46.000Z",
            "date_published": "2022-03-29T19:18:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-47wv-vhj2-g66m"
            }
        },
        {
            "content_html": "<p>The Twisted Web HTTP 1.1 server, located in the <code>twisted.web.http</code> module, parsed several HTTP request constructs more leniently than permitted by RFC 7230:</p>\n<ol>\n<li>The Content-Length header value could have a <code>+</code> or <code>-</code> prefix.</li>\n<li>Illegal characters were permitted in chunked extensions, such as the LF (<code>\\n</code>) character.</li>\n<li>Chunk lengths, which are expressed in hexadecimal format, could have a prefix of <code>0x</code>.</li>\n<li>HTTP headers were stripped of all leading and trailing ASCII whitespace, rather than only space and HTAB (<code>\\t</code>).</li>\n</ol>\n<p>This non-conformant parsing can lead to desync if requests pass through multiple HTTP parsers, potentially resulting in HTTP request smuggling.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>You may be affected if:</p>\n<ol>\n<li>You use Twisted Web's HTTP 1.1 server and/or proxy</li>\n<li>You also pass requests through a different HTTP server and/or proxy</li>\n</ol>\n<p>The specifics of the other HTTP parser matter. The original report notes that some versions of Apache Traffic Server and HAProxy have been vulnerable in the past. HTTP request smuggling may be a serious concern if you use a proxy to perform request validation or access control.</p>\n<p>The Twisted Web client is not affected. The HTTP 2.0 server uses a different parser, so it is not affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been addressed in Twisted 22.4.0rc1 and later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Other than upgrading Twisted, you could:</p>\n<ul>\n<li>Ensure any vulnerabilities in upstream proxies have been addressed, such as by upgrading them</li>\n<li>Filter malformed requests by other means, such as configuration of an upstream proxy</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>This issue was initially reported by <a href=\"https://github.com/zeyu2001\">Zhang Zeyu</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq\">https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24801\">https://nvd.nist.gov/vuln/detail/CVE-2022-24801</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac\">https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac</a></li>\n<li><a href=\"https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1\">https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2jg-hw38-jrqq\">https://github.com/advisories/GHSA-c2jg-hw38-jrqq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2jg-hw38-jrqq",
            "title": "[twisted] Inconsistent Interpretation of HTTP Requests in twisted.web",
            "date_modified": "2022-04-06T17:31:37.000Z",
            "date_published": "2022-04-04T21:29:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2jg-hw38-jrqq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Synapse before 1.52.0 with URL preview functionality enabled will attempt to generate URL previews for media stream URLs without properly limiting connection time. Connections will only be terminated after <code>max_spider_size</code> (default: 10M) bytes have been downloaded, which can in some cases lead to long-lived connections towards the streaming media server (for instance, Icecast).</p>\n<p>This can cause excessive traffic and connections toward such servers if their stream URL is, for example, posted to a large room with many Synapse instances with URL preview enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>1.52.0 implements a timeout mechanism which will terminate URL preview connections after 30 seconds. Since generating URL previews for media streams is not supported and always fails, 1.53.0 additionally implements an allow list for content types for which Synapse will even attempt to generate a URL preview.</p>\n<p>We recommend upgrading to 1.53.0 to fully resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Turn off URL preview functionality by setting <code>url_preview_enabled: false</code> in the Synapse configuration file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Patch (timeout): <a href=\"https://github.com/matrix-org/synapse/pull/11784\">https://github.com/matrix-org/synapse/pull/11784</a></li>\n<li>Patch (content type allow list): <a href=\"https://github.com/matrix-org/synapse/pull/11936\">https://github.com/matrix-org/synapse/pull/11936</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-4822-jvwx-w47h\">https://github.com/matrix-org/synapse/security/advisories/GHSA-4822-jvwx-w47h</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/11784\">https://github.com/matrix-org/synapse/pull/11784</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/11936\">https://github.com/matrix-org/synapse/pull/11936</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/releases/tag/v1.52.0\">https://github.com/matrix-org/synapse/releases/tag/v1.52.0</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/releases/tag/v1.53.0\">https://github.com/matrix-org/synapse/releases/tag/v1.53.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4822-jvwx-w47h\">https://github.com/advisories/GHSA-4822-jvwx-w47h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4822-jvwx-w47h",
            "title": "[matrix-synapse] Uncontrolled Resource Consumption in Matrix Synapse",
            "date_modified": "2022-04-05T22:01:46.000Z",
            "date_published": "2022-04-01T18:16:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4822-jvwx-w47h"
            }
        },
        {
            "content_html": "<p>IRRd did not always filter password hashes in query responses relating to <code>mntner</code> objects and database exports. This may have allowed adversaries to retrieve some of these hashes, perform a brute-force search for the clear-text passphrase, and use these to make unauthorised changes to affected IRR objects. This issue only affected instances that process password hashes, which means it is limited to IRRd instances that serve authoritative databases. IRRd instances operating solely as mirrors of other IRR databases are not affected.</p>\n<p>The issue occurred:</p>\n<ul>\n<li>For <code>mntner</code> objects where all password hash names (<code>MD5-PW</code> and <code>CRYPT-PW</code>) were in lower or mixed case in the <code>auth</code> attribute. For these objects, hashes remained in the output of all queries of any method and all database exports made with the <code>export_destination</code> setting. Fortunately, objects in the common public IRR database virtually all use uppercase hash names which means very few of those objects were affected.</li>\n<li>For any GraphQL queries that queried the <code>auth</code> field on <code>mntner</code> objects.</li>\n<li>For any GraphQL queries that queried the <code>objectText</code> field on the <code>journal</code> field on <code>mntner</code> objects, if the <code>nrtm_access_list</code> setting permitted journal access.</li>\n</ul>\n<p>The two GraphQL cases are visible in logs, allowing users to determine whether any existing objects had their hashes exposed.\nThis has been fixed in IRRd 4.2.3 and the main branch. Versions in the 4.1.x series never were affected. Users of the 4.2.x series are strongly recommended to upgrade. All users running a more recent version from the main branch should update to the latest version. Alternatively, but not recommended, apply the patch manually [for 4.2.x]</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/irrdnet/irrd/security/advisories/GHSA-cqxx-66wh-8pjw\">https://github.com/irrdnet/irrd/security/advisories/GHSA-cqxx-66wh-8pjw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24798\">https://nvd.nist.gov/vuln/detail/CVE-2022-24798</a></li>\n<li><a href=\"https://github.com/irrdnet/irrd/commit/0e41bae8d3d27316381a2fc7b466597230e35ec6\">https://github.com/irrdnet/irrd/commit/0e41bae8d3d27316381a2fc7b466597230e35ec6</a></li>\n<li><a href=\"https://github.com/irrdnet/irrd/commit/fdffaf8dd71713f06e99dff417e6aa1e6fa84b70\">https://github.com/irrdnet/irrd/commit/fdffaf8dd71713f06e99dff417e6aa1e6fa84b70</a></li>\n<li><a href=\"https://irrd.readthedocs.io/en/stable/releases/4.2.3/\">https://irrd.readthedocs.io/en/stable/releases/4.2.3/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqxx-66wh-8pjw\">https://github.com/advisories/GHSA-cqxx-66wh-8pjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqxx-66wh-8pjw",
            "title": "[irrd] Improper Removal of Sensitive Information Before Storage or Transfer in irrd",
            "date_modified": "2022-04-13T01:15:56.000Z",
            "date_published": "2022-04-01T13:59:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqxx-66wh-8pjw"
            }
        },
        {
            "content_html": "<p>An information exposure flaw in openstack-tripleo-heat-templates allows an external user to discover the internal IP or hostname. An attacker could exploit this by checking the <code>www_authenticate_uri parameter</code> (which is visible to all end users) in configuration files. This would give sensitive information which may aid in additional system exploitation. A patch is available on the <code>master</code> branch and anticipated to be part of version 11.6.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4180\">https://nvd.nist.gov/vuln/detail/CVE-2021-4180</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2035793\">https://bugzilla.redhat.com/show_bug.cgi?id=2035793</a></li>\n<li><a href=\"https://github.com/openstack/tripleo-heat-templates/commit/160936df134a471cfd245bd60964046027a571ea\">https://github.com/openstack/tripleo-heat-templates/commit/160936df134a471cfd245bd60964046027a571ea</a></li>\n<li><a href=\"https://github.com/openstack/tripleo-heat-templates/commit/2b9461e97fc5c4ceb0848d1cc4484f656bb85515\">https://github.com/openstack/tripleo-heat-templates/commit/2b9461e97fc5c4ceb0848d1cc4484f656bb85515</a></li>\n<li><a href=\"https://bugs.launchpad.net/tripleo/+bug/1955397\">https://bugs.launchpad.net/tripleo/+bug/1955397</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hm3x-jwwf-jpr9\">https://github.com/advisories/GHSA-hm3x-jwwf-jpr9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hm3x-jwwf-jpr9",
            "title": "[tripleo-heat-templates] Exposure of Sensitive Information to an Unauthorized Actor in OpenStack tripleo-heat-templates",
            "date_modified": "2022-04-05T20:53:00.000Z",
            "date_published": "2022-03-24T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hm3x-jwwf-jpr9"
            }
        },
        {
            "content_html": "<p>pytorch-lightning is vulnerable to Deserialization of Untrusted Data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4118\">https://nvd.nist.gov/vuln/detail/CVE-2021-4118</a></li>\n<li><a href=\"https://github.com/pytorchlightning/pytorch-lightning/commit/62f1e82e032eb16565e676d39e0db0cac7e34ace\">https://github.com/pytorchlightning/pytorch-lightning/commit/62f1e82e032eb16565e676d39e0db0cac7e34ace</a></li>\n<li><a href=\"https://huntr.dev/bounties/31832f0c-e5bb-4552-a12c-542f81f111e6\">https://huntr.dev/bounties/31832f0c-e5bb-4552-a12c-542f81f111e6</a></li>\n<li><a href=\"https://github.com/PyTorchLightning/pytorch-lightning/issues/11045\">https://github.com/PyTorchLightning/pytorch-lightning/issues/11045</a></li>\n<li><a href=\"https://github.com/PyTorchLightning/pytorch-lightning/pull/11099\">https://github.com/PyTorchLightning/pytorch-lightning/pull/11099</a></li>\n<li><a href=\"https://github.com/PyTorchLightning/pytorch-lightning/releases/tag/1.6.0\">https://github.com/PyTorchLightning/pytorch-lightning/releases/tag/1.6.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2vj5-px25-gjrp\">https://github.com/advisories/GHSA-2vj5-px25-gjrp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2vj5-px25-gjrp",
            "title": "[pytorch-lightning] pytorch-lightning is vulnerable to Deserialization of Untrusted Data",
            "date_modified": "2022-03-30T18:25:55.000Z",
            "date_published": "2022-01-06T23:58:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2vj5-px25-gjrp"
            }
        }
    ]
}