{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All historical installations of django-wiki are vulnerable to maliciously crafted article content, that can cause severe use of server CPU through a regular expression loop.</p>\n<h3 id=\"patches\">Patches</h3>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Close off access to create and edit articles by anonymous users.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/django-wiki/django-wiki/security/advisories/GHSA-wj85-w4f4-xh8h\">https://github.com/django-wiki/django-wiki/security/advisories/GHSA-wj85-w4f4-xh8h</a></li>\n<li><a href=\"https://github.com/django-wiki/django-wiki/commit/8e280fd6c0bd27ce847c67b2d216c6cbf920f88c\">https://github.com/django-wiki/django-wiki/commit/8e280fd6c0bd27ce847c67b2d216c6cbf920f88c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wj85-w4f4-xh8h\">https://github.com/advisories/GHSA-wj85-w4f4-xh8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wj85-w4f4-xh8h",
            "title": "[wiki] Denial of service via regular expression",
            "date_modified": "2024-03-18T20:37:50.000Z",
            "date_published": "2024-03-18T20:37:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wj85-w4f4-xh8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>djangorestframework-simplejwt version 5.3.1 and before is vulnerable to information disclosure. A user can access web application resources even after their account has been disabled due to missing user validation checks via the for_user method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22513\">https://nvd.nist.gov/vuln/detail/CVE-2024-22513</a></li>\n<li><a href=\"https://github.com/dmdhrumilmistry/CVEs/tree/main/CVE-2024-22513\">https://github.com/dmdhrumilmistry/CVEs/tree/main/CVE-2024-22513</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5vcc-86wm-547q\">https://github.com/advisories/GHSA-5vcc-86wm-547q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5vcc-86wm-547q",
            "title": "[djangorestframework-simplejwt] Improper Privilege Management in djangorestframework-simplejwt",
            "date_modified": "2024-03-18T20:37:25.000Z",
            "date_published": "2024-03-16T09:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5vcc-86wm-547q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2024-03-18T20:36:42.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2024-03-18T20:36:42.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2024-03-18T20:36:42.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OctoPrint versions up until and including 1.9.3 contain a vulnerability that allows malicious admins to configure or talk a victim with administrator rights into configuring a webcam snapshot URL which when tested through the \"Test\" button included in the web interface will execute JavaScript code in the victims browser when attempting to render the snapshot image.</p>\n<p>An attacker who successfully talked a victim with admin rights into performing a snapshot test with such a crafted URL could use this to retrieve or modify sensitive configuration settings, interrupt prints or otherwise interact with the OctoPrint instance in a malicious way.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability will be patched in version 1.10.0.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>OctoPrint administrators are strongly advised to thoroughly vet who has admin access to their installation and what settings they modify based on instructions by strangers.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Below are the steps to reproduce the vulnerability:</p>\n<ol>\n<li><p>Create a URL that responds with a malicious content type. For example, creating the following python script:</p>\n<pre><code>from http.server import BaseHTTPRequestHandler, HTTPServer\n\nclass MyHTTPRequestHandler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send_response(200)\n        self.send_header('Content-Type', 'image/\"onerror=\"alert(1)\"')\n        self.end_headers()\n        self.wfile.write(b'Ok')\n\ndef run():\n    server_address = ('', 8080)\n    httpd = HTTPServer(server_address, MyHTTPRequestHandler)\n    print('Server listening on 0.0.0.0:8080...')\n    httpd.serve_forever()\n\nif __name__ == '__main__':\n    run()\n</code></pre>\n</li>\n<li><p>Go to OctoPrint settings --&gt; Plugins --&gt; Classic Webcam and enter the URL of that page as the Snapshot URL. </p>\n</li>\n<li><p>Click on the \"Test\" button to trigger XSS. A Javascript alert should appear, demonstrating the actual code injection.</p>\n</li>\n</ol>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-x7mf-wrh9-r76c\">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-x7mf-wrh9-r76c</a></li>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/commit/779894c1bc6478332d14bc9ed1006df1354eb517\">https://github.com/OctoPrint/OctoPrint/commit/779894c1bc6478332d14bc9ed1006df1354eb517</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7mf-wrh9-r76c\">https://github.com/advisories/GHSA-x7mf-wrh9-r76c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7mf-wrh9-r76c",
            "title": "[OctoPrint] XSS via the \"Snapshot Test\" feature in Classic Webcam plugin settings",
            "date_modified": "2024-03-18T20:29:50.000Z",
            "date_published": "2024-03-18T20:29:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7mf-wrh9-r76c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>RCE due to improper input validation in TranformGraph().to_dot_graph function</p>\n<h3 id=\"details\">Details</h3>\n<p>Due to improper input validation a malicious user can provide a command or a script file as a value to <code>savelayout</code> argument, which will be placed as the first value in a list of arguments passed to <code>subprocess.Popen</code>. \n<a href=\"https://github.com/astropy/astropy/blob/9b97d98802ee4f5350a62b681c35d8687ee81d91/astropy/coordinates/transformations.py#L539\">https://github.com/astropy/astropy/blob/9b97d98802ee4f5350a62b681c35d8687ee81d91/astropy/coordinates/transformations.py#L539</a>\nAlthough an error will be raised, the command or script will be executed successfully.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-shell\">$ cat /tmp/script\n#!/bin/bash\necho astrorce &gt; /tmp/poc.txt\n</code></pre>\n<pre><code class=\"language-shell\">$ python3\nPython 3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; from astropy.coordinates.transformations import TransformGraph\n&gt;&gt;&gt; tg = TransformGraph()\n&gt;&gt;&gt; tg.to_dot_graph(savefn=\"/tmp/1.txt\", savelayout=\"/tmp/script\")\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/home/u32i/.local/lib/python3.9/site-packages/astropy/coordinates/transformations.py\", line 584, in to_dot_graph\n    stdout, stderr = proc.communicate(dotgraph)\n  File \"/usr/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/lib/python3.9/subprocess.py\", line 1961, in _communicate\n    input_view = memoryview(self._input)\nTypeError: memoryview: a bytes-like object is required, not 'str'\n&gt;&gt;&gt; \n</code></pre>\n<pre><code class=\"language-shell\">$ cat /tmp/poc.txt\nastrorce\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>code execution on the user's machine</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/astropy/astropy/security/advisories/GHSA-h2x6-5jx5-46hf\">https://github.com/astropy/astropy/security/advisories/GHSA-h2x6-5jx5-46hf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41334\">https://nvd.nist.gov/vuln/detail/CVE-2023-41334</a></li>\n<li><a href=\"https://github.com/astropy/astropy/commit/22057d37b1313f5f5a9b5783df0a091d978dccb5\">https://github.com/astropy/astropy/commit/22057d37b1313f5f5a9b5783df0a091d978dccb5</a></li>\n<li><a href=\"https://github.com/astropy/astropy/blob/9b97d98802ee4f5350a62b681c35d8687ee81d91/astropy/coordinates/transformations.py#L539\">https://github.com/astropy/astropy/blob/9b97d98802ee4f5350a62b681c35d8687ee81d91/astropy/coordinates/transformations.py#L539</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h2x6-5jx5-46hf\">https://github.com/advisories/GHSA-h2x6-5jx5-46hf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h2x6-5jx5-46hf",
            "title": "[astropy] RCE in TranformGraph().to_dot_graph function",
            "date_modified": "2024-03-18T21:46:20.000Z",
            "date_published": "2024-03-18T20:26:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h2x6-5jx5-46hf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Arbitrary File Overwrite Via Path Traversal in paddlepaddle/paddle before 2.6</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0818\">https://nvd.nist.gov/vuln/detail/CVE-2024-0818</a></li>\n<li><a href=\"https://huntr.com/bounties/85b06a1b-ac0b-4096-a06d-330891570cd9\">https://huntr.com/bounties/85b06a1b-ac0b-4096-a06d-330891570cd9</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/5c50d1a8b97b310cbc36560ec36d8377d6f29d7c\">https://github.com/PaddlePaddle/Paddle/commit/5c50d1a8b97b310cbc36560ec36d8377d6f29d7c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2rp8-hff9-c5wr\">https://github.com/advisories/GHSA-2rp8-hff9-c5wr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2rp8-hff9-c5wr",
            "title": "[paddlepaddle] PaddlePaddle Path Traversal vulnerability",
            "date_modified": "2024-03-17T05:01:26.000Z",
            "date_published": "2024-03-07T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2rp8-hff9-c5wr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Access Control on Configurations Endpoint for the Stable API of Apache Airflow allows users with Viewer or User role to get Airflow Configurations including sensitive information even when <code>[webserver] expose_config</code> is set to <code>False</code> in <code>airflow.cfg</code>. This allowed a privilege escalation attack. This issue affects Apache Airflow 2.0.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-26559\">https://nvd.nist.gov/vuln/detail/CVE-2021-26559</a></li>\n<li><a href=\"https://github.com/apache/airflow/blob/486b76438c0679682cf98cb88ed39c4b161cbcc8/CHANGELOG.txt\">https://github.com/apache/airflow/blob/486b76438c0679682cf98cb88ed39c4b161cbcc8/CHANGELOG.txt</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3b3787700279ec361308cbefb7c2cce2acb26891a12ce864e4a13c8d%40%3Cusers.airflow.apache.org%3E\">https://lists.apache.org/thread.html/r3b3787700279ec361308cbefb7c2cce2acb26891a12ce864e4a13c8d%40%3Cusers.airflow.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd142565996d7ee847b9c14b8a9921dcf80bc6bc160e3d9dca6dfc2f8@%3Cannounce.apache.org%3E\">https://lists.apache.org/thread.html/rd142565996d7ee847b9c14b8a9921dcf80bc6bc160e3d9dca6dfc2f8@%3Cannounce.apache.org%3E</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/02/17/1\">http://www.openwall.com/lists/oss-security/2021/02/17/1</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/3909232fafd09ac72b49010ecdfd6ea48f06d5cf\">https://github.com/apache/airflow/commit/3909232fafd09ac72b49010ecdfd6ea48f06d5cf</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/5e35926c7eda0dfa11a9623e4bf5f60c2bd6b3f6\">https://github.com/apache/airflow/commit/5e35926c7eda0dfa11a9623e4bf5f60c2bd6b3f6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffw3-6mp6-jmvj\">https://github.com/advisories/GHSA-ffw3-6mp6-jmvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffw3-6mp6-jmvj",
            "title": "[apache-airflow] Improper Access Control in Apache Airflow",
            "date_modified": "2024-03-16T05:01:17.000Z",
            "date_published": "2021-04-07T21:05:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffw3-6mp6-jmvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Any users whom would not desire a traceback to be included in their logs whenever an error is raised in their code will be affected.</p>\n<p>If users have inadvertently created a scenario in their code that could cause a traceback to include sensitive information <em>and</em> a malicious entity gained access to their log stream, this could create an issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>None yet... users will need to upgrade to <code>0.4.*</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No particularly reasonable ones at present.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/453.html\">https://cwe.mitre.org/data/definitions/453.html</a></li>\n<li><a href=\"https://www.invicti.com/web-vulnerability-scanner/vulnerabilities/stack-trace-disclosure-python/\">https://www.invicti.com/web-vulnerability-scanner/vulnerabilities/stack-trace-disclosure-python/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dan1hc/fgr/security/advisories/GHSA-879p-8gw4-mcpw\">https://github.com/dan1hc/fgr/security/advisories/GHSA-879p-8gw4-mcpw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-879p-8gw4-mcpw\">https://github.com/advisories/GHSA-879p-8gw4-mcpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-879p-8gw4-mcpw",
            "title": "[fgr]  fgr Vulnerable to Insecure Default Variable Initialization",
            "date_modified": "2024-03-15T19:01:11.000Z",
            "date_published": "2024-03-15T19:01:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-879p-8gw4-mcpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Much like <a href=\"https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53\">https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53</a>, it is possible to find which usernames exist in vantage6 by calling the API routes <code>/recover/lost</code> and <code>/2fa/lost</code>, which send emails to users if they have lost their password or MFA token. Usernames can be found by assessing response time differences, and additionally, they can be found because the endpoint gives a response \"Failed to login\" if the username exists.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>No</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53\">https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53</a></li>\n<li><a href=\"https://github.com/vantage6/vantage6/security/advisories/GHSA-5h3x-6gwf-73jm\">https://github.com/vantage6/vantage6/security/advisories/GHSA-5h3x-6gwf-73jm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24770\">https://nvd.nist.gov/vuln/detail/CVE-2024-24770</a></li>\n<li><a href=\"https://github.com/vantage6/vantage6/commit/aecfd6d0e83165a41a60ebd52d2287b0217be26b\">https://github.com/vantage6/vantage6/commit/aecfd6d0e83165a41a60ebd52d2287b0217be26b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5h3x-6gwf-73jm\">https://github.com/advisories/GHSA-5h3x-6gwf-73jm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5h3x-6gwf-73jm",
            "title": "[vantage6] vantage6 vulnerable to a username timing attack on recover password/MFA token",
            "date_modified": "2024-03-15T16:44:39.000Z",
            "date_published": "2024-03-15T16:44:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5h3x-6gwf-73jm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vantage6 server has no restrictions on CORS settings. It should be possible for people to set the allowed origins of the server. </p>\n<p>The impact is limited because v6 does not use session cookies</p>\n<h3 id=\"patches\">Patches</h3>\n<p>No</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vantage6/vantage6/security/advisories/GHSA-4946-85pr-fvxh\">https://github.com/vantage6/vantage6/security/advisories/GHSA-4946-85pr-fvxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23823\">https://nvd.nist.gov/vuln/detail/CVE-2024-23823</a></li>\n<li><a href=\"https://github.com/vantage6/vantage6/commit/70bb4e1d889230a841eb364d6c03accd7dd01a41\">https://github.com/vantage6/vantage6/commit/70bb4e1d889230a841eb364d6c03accd7dd01a41</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4946-85pr-fvxh\">https://github.com/advisories/GHSA-4946-85pr-fvxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4946-85pr-fvxh",
            "title": "[vantage6] vantage6's CORS settings overly permissive",
            "date_modified": "2024-03-15T16:42:56.000Z",
            "date_published": "2024-03-15T16:42:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4946-85pr-fvxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Airflow, versions 2.8.0 through 2.8.2, has a vulnerability that allows an authenticated user with limited permissions to access resources such as variables, connections, etc from the UI which they do not have permission to access.&nbsp;</p>\n<p>Users of Apache Airflow are recommended to upgrade to version 2.8.3 or newer to mitigate the risk associated with this vulnerability</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28746\">https://nvd.nist.gov/vuln/detail/CVE-2024-28746</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/37881\">https://github.com/apache/airflow/pull/37881</a></li>\n<li><a href=\"https://lists.apache.org/thread/b4pffc7w7do6qgk4jjbyxvdz5odrvny7\">https://lists.apache.org/thread/b4pffc7w7do6qgk4jjbyxvdz5odrvny7</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/89e7f3e7bdf2126bbbcd959dc10d65ef92773cca\">https://github.com/apache/airflow/commit/89e7f3e7bdf2126bbbcd959dc10d65ef92773cca</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-46.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-46.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h574-6646-vfxx\">https://github.com/advisories/GHSA-h574-6646-vfxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h574-6646-vfxx",
            "title": "[apache-airflow] Apache Airflow: Ignored Airflow Permission",
            "date_modified": "2024-03-15T14:19:24.000Z",
            "date_published": "2024-03-14T09:31:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h574-6646-vfxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28088\">https://nvd.nist.gov/vuln/detail/CVE-2024-28088</a></li>\n<li><a href=\"https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md\">https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py\">https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5\">https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/18600\">https://github.com/langchain-ai/langchain/pull/18600</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h59x-p739-982c\">https://github.com/advisories/GHSA-h59x-p739-982c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h59x-p739-982c",
            "title": "[langchain-core] LangChain directory traversal vulnerability",
            "date_modified": "2024-03-14T23:14:55.000Z",
            "date_published": "2024-03-04T00:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h59x-p739-982c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28088\">https://nvd.nist.gov/vuln/detail/CVE-2024-28088</a></li>\n<li><a href=\"https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md\">https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py\">https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5\">https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/18600\">https://github.com/langchain-ai/langchain/pull/18600</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h59x-p739-982c\">https://github.com/advisories/GHSA-h59x-p739-982c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h59x-p739-982c",
            "title": "[langchain] LangChain directory traversal vulnerability",
            "date_modified": "2024-03-14T23:14:55.000Z",
            "date_published": "2024-03-04T00:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h59x-p739-982c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Whoogle Search is a self-hosted metasearch engine. In versions prior to 0.8.4, the <code>element</code> method in <code>app/routes.py</code> does not validate the user-controlled <code>src_type</code> and <code>element_url</code> variables and passes them to the <code>send</code> method which sends a GET request on lines 339-343 in <code>request.py</code>, which leads to a server-side request forgery. This issue allows for crafting GET requests to internal and external resources on behalf of the server. For example, this issue would allow for accessing resources on the internal network that the server has access to, even though these resources may not be accessible on the internet. This issue is fixed in version 0.8.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22203\">https://nvd.nist.gov/vuln/detail/CVE-2024-22203</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda\">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-20.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-20.yaml</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search\">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q97g-c29h-x2p7\">https://github.com/advisories/GHSA-q97g-c29h-x2p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q97g-c29h-x2p7",
            "title": "[whoogle-search] Whoogle Search Path Traversal vulnerability",
            "date_modified": "2024-03-14T20:37:58.000Z",
            "date_published": "2024-03-14T20:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q97g-c29h-x2p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Whoogle Search is a self-hosted metasearch engine. Versions 0.8.3 and prior have a limited file write vulnerability when the configuration options in Whoogle are enabled. The <code>config</code> function in <code>app/routes.py</code> does not validate the user-controlled <code>name</code> variable on line 447 and <code>config_data</code> variable on line 437. The <code>name</code> variable is insecurely concatenated in <code>os.path.join</code>, leading to path manipulation. The POST data from the <code>config_data</code> variable is saved with <code>pickle.dump</code> which leads to a limited file write. However, the data that is saved is earlier transformed into a dictionary and the <code>url</code> key value pair is added before the file is saved on the system. All in all, the issue allows us to save and overwrite files on the system that the application has permissions to, with a dictionary containing arbitrary data and the <code>url</code> key value, which is a limited file write. Version 0.8.4 contains a patch for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22204\">https://nvd.nist.gov/vuln/detail/CVE-2024-22204</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda\">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L419-L452\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L419-L452</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L437\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L437</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L444\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L444</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L447\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L447</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-23.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-23.yaml</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search\">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hh2q-qv66-jcqg\">https://github.com/advisories/GHSA-hh2q-qv66-jcqg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hh2q-qv66-jcqg",
            "title": "[whoogle-search] Whoogle Search Path Traversal vulnerability",
            "date_modified": "2024-03-14T20:37:58.000Z",
            "date_published": "2024-03-14T20:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hh2q-qv66-jcqg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Whoogle Search is a self-hosted metasearch engine. In versions 0.8.3 and prior, the <code>window</code> endpoint does not sanitize user-supplied input from the <code>location</code> variable and passes it to the <code>send</code> method which sends a <code>GET</code> request on lines 339-343 in <code>request.py,</code> which leads to a server-side request forgery. This issue allows for crafting GET requests to internal and external resources on behalf of the server. For example, this issue would allow for accessing resources on the internal network that the server has access to, even though these resources may not be accessible on the internet. This issue is fixed in version 0.8.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22205\">https://nvd.nist.gov/vuln/detail/CVE-2024-22205</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda\">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L496-L557\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L496-L557</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L497\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L497</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-18.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-18.yaml</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search\">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3q6g-qmpx-rqw4\">https://github.com/advisories/GHSA-3q6g-qmpx-rqw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3q6g-qmpx-rqw4",
            "title": "[whoogle-search] Whoogle Search Server-Side Request Forgery vulnerability",
            "date_modified": "2024-03-14T20:37:58.000Z",
            "date_published": "2024-03-14T20:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3q6g-qmpx-rqw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Whoogle Search is a self-hosted metasearch engine. In versions 0.8.3 and prior, the <code>element</code> method in <code>app/routes.py</code> does not validate the user-controlled <code>src_type</code> and <code>element_url</code> variables and passes them to the <code>send</code> method which sends a <code>GET</code> request on lines 339-343 in <code>requests.py</code>. The returned contents of the URL are then passed to and reflected back to the user in the <code>send_file</code> function on line 484, together with the user-controlled <code>src_type</code>, which allows the attacker to control the HTTP response content type leading to a cross-site scripting vulnerability. An attacker could craft a special URL to point to a malicious website and send the link to a victim. The fact that the link would contain a trusted domain (e.g. from one of public Whoogle instances) could be used to trick the user into clicking the link.The malicious website could, for example, be a copy of a real website, meant to steal a person’s credentials to the website, or trick that person in another way. Version 0.8.4 contains a patch for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22417\">https://nvd.nist.gov/vuln/detail/CVE-2024-22417</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda\">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>\n<li><a href=\"https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L484C6-L484C7\">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L484C6-L484C7</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-19.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-19.yaml</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search\">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phg6-44m7-hx3h\">https://github.com/advisories/GHSA-phg6-44m7-hx3h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-phg6-44m7-hx3h",
            "title": "[whoogle-search] Whoogle Search Cross-site Scripting vulnerability",
            "date_modified": "2024-03-14T20:37:57.000Z",
            "date_published": "2024-03-14T20:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-phg6-44m7-hx3h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Microsoft Django Backend for SQL Server Remote Code Execution Vulnerability</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26164\">https://nvd.nist.gov/vuln/detail/CVE-2024-26164</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26164\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26164</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vmqv-47j8-gwv8\">https://github.com/advisories/GHSA-vmqv-47j8-gwv8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vmqv-47j8-gwv8",
            "title": "[mssql-django] Remote Code Execution Vulnerability in Microsoft Django Backend for SQL Server",
            "date_modified": "2024-03-13T16:59:16.000Z",
            "date_published": "2024-03-12T18:31:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vmqv-47j8-gwv8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}