{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The use of Python's marshal module to handle unchecked input in a public method on <code>PortalFolder</code> objects can lead to an unauthenticated denial of service and crash situation. The code in question is exposed by all portal software built on top of <code>Products.CMFCore</code>, such as Plone. All deployments are vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The code has been fixed in <code>Products.CMFCore</code> version 3.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can make the affected <code>decodeFolderFilter</code> method unreachable by editing the <code>PortalFolder.py</code> module in <code>Products.CMFCore</code> by hand and then restarting Zope. Go to line 233 of <code>PortalFolder.py</code> and remove both the <code>@security.public</code> decorator for <code>decodeFolderFilter</code> as well as the method's entire docstring. This is safe because the method is not actually used by current code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Products.CMFCore security advisory <a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks go to Nicolas VERDIER from onepoint.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/zopefoundation/Products.CMFCore/issues\">Products.CMFCore issue tracker</a></li>\n<li>Email us at <a href=\"mailto:security@plone.org\">security@plone.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36814\">https://nvd.nist.gov/vuln/detail/CVE-2023-36814</a></li>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5\">https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87",
            "title": "[Products.CMFCore] Products.CMFCore unauthenticated denial of service and crash via unchecked use of input with Python's marshal module",
            "date_modified": "2023-09-07T05:00:37.000Z",
            "date_published": "2023-07-05T22:42:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>the ecrecover precompile does not fill the output buffer if the signature does not verify, see <a href=\"https://github.com/ethereum/go-ethereum/blob/b058cf454b3bdc7e770e2b3cec83a0bcb48f55ee/core/vm/contracts.go#L188\">https://github.com/ethereum/go-ethereum/blob/b058cf454b3bdc7e770e2b3cec83a0bcb48f55ee/core/vm/contracts.go#L188</a>. however, the ecrecover builtin will still return whatever is at memory location 0.</p>\n<p>this means that the if the compiler has been convinced to write to the 0 memory location with specially crafted data (generally, this can happen with a hashmap access or immutable read) just before the ecrecover, a signature check might pass on an invalid signature.</p>\n<p>a contract search was performed. most uses of <code>ecrecover</code> are used for erc2612-style permit implementations, which typically look like</p>\n<pre><code class=\"language-vyper\">    assert _owner != empty(address)\n    assert block.timestamp &lt;= _deadline\n                  \n    nonce: uint256 = self.nonces[_owner]\n    digest: bytes32 = keccak256(\n        concat(   \n            b\"\\x19\\x01\",\n            self.DOMAIN_SEPARATOR,\n            keccak256(_abi_encode(PERMIT_TYPEHASH, _owner, _spender, _value, nonce, _deadline))\n        )         \n    )             \n    assert ecrecover(digest, convert(_v, uint256), convert(_r, uint256), convert(_s, uint256)) == _owner\n</code></pre>\n<p>in this case, the storage slot of <code>self.nonces</code> is loaded into the ecrecover output buffer right before <code>ecrecover()</code>, and so the output of <code>ecrecover()</code> here when the signature is invalid will be the value of <code>PERMIT_TYPEHASH</code>. in this case, since <code>PERMIT_TYPEHASH</code> is not a valid address, it will never compare <code>==</code> to <code>_owner</code>, and so the behavior is exactly the same as if <code>ecrecover()</code> returned 0 in this case.</p>\n<p>in general, a contract could have unexpected behavior (i.e. mistakenly pass this style of signature check) if an immutable representing a real address (ex. <code>OWNER</code>) were read right before the <code>ecrecover</code> operation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v0.3.10 (as of 019a37ab98ff53f04fecfadf602b6cd5ac748f7f)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3\">https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f\">https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-37902\">https://nvd.nist.gov/vuln/detail/CVE-2023-37902</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-133.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-133.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5x6-7qgp-jhf3\">https://github.com/advisories/GHSA-f5x6-7qgp-jhf3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5x6-7qgp-jhf3",
            "title": "[vyper] ecrecover can return undefined data if signature does not verify",
            "date_modified": "2023-09-06T21:13:54.000Z",
            "date_published": "2023-07-25T17:46:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5x6-7qgp-jhf3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A non Admin authenticated user could incorrectly create resources using the import charts feature, on Apache Superset up to and including 2.1.0.&nbsp;</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27526\">https://nvd.nist.gov/vuln/detail/CVE-2023-27526</a></li>\n<li><a href=\"https://lists.apache.org/thread/ndww89yl2jd98lvn23n9cj722lfdg8dv\">https://lists.apache.org/thread/ndww89yl2jd98lvn23n9cj722lfdg8dv</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9qc3-p9jq-2x27\">https://github.com/advisories/GHSA-9qc3-p9jq-2x27</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9qc3-p9jq-2x27",
            "title": "[apache-superset] Apache Superset users may incorrectly create resources using the import charts feature ",
            "date_modified": "2023-09-06T20:53:41.000Z",
            "date_published": "2023-09-06T15:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9qc3-p9jq-2x27"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Salt masters prior to 3005.2 or 3006.2 contain a DOS in minion return. After receiving several bad packets on the request server equal to the number of worker threads, the master will become unresponsive to return requests until restarted.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-20897\">https://nvd.nist.gov/vuln/detail/CVE-2023-20897</a></li>\n<li><a href=\"https://saltproject.io/security-announcements/2023-08-10-advisory/\">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpjg-wmf8-29h9\">https://github.com/advisories/GHSA-vpjg-wmf8-29h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpjg-wmf8-29h9",
            "title": "[salt] Salt vulnerable to denial of service",
            "date_modified": "2023-09-06T19:53:00.000Z",
            "date_published": "2023-09-05T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpjg-wmf8-29h9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Salt masters prior to 3005.2 or 3006.2 contain a DOS in minion return. After receiving several bad packets on the request server equal to the number of worker threads, the master will become unresponsive to return requests until restarted.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-20897\">https://nvd.nist.gov/vuln/detail/CVE-2023-20897</a></li>\n<li><a href=\"https://saltproject.io/security-announcements/2023-08-10-advisory/\">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpjg-wmf8-29h9\">https://github.com/advisories/GHSA-vpjg-wmf8-29h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpjg-wmf8-29h9",
            "title": "[salt] Salt vulnerable to denial of service",
            "date_modified": "2023-09-06T19:53:00.000Z",
            "date_published": "2023-09-05T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpjg-wmf8-29h9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Git Providers can read from the wrong environment because they get the same cache directory base name in Salt masters prior to 3005.2 or 3006.2. Anything that uses Git Providers with different environments can get garbage data or the wrong data, which can lead to wrongful data disclosure, wrongful executions, data corruption and/or crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-20898\">https://nvd.nist.gov/vuln/detail/CVE-2023-20898</a></li>\n<li><a href=\"https://saltproject.io/security-announcements/2023-08-10-advisory/\">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvh6-3j7x-3hq7\">https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvh6-3j7x-3hq7",
            "title": "[salt] Salt can cause Git Providers to get wrong data",
            "date_modified": "2023-09-06T19:50:14.000Z",
            "date_published": "2023-09-05T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvh6-3j7x-3hq7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Git Providers can read from the wrong environment because they get the same cache directory base name in Salt masters prior to 3005.2 or 3006.2. Anything that uses Git Providers with different environments can get garbage data or the wrong data, which can lead to wrongful data disclosure, wrongful executions, data corruption and/or crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-20898\">https://nvd.nist.gov/vuln/detail/CVE-2023-20898</a></li>\n<li><a href=\"https://saltproject.io/security-announcements/2023-08-10-advisory/\">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvh6-3j7x-3hq7\">https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvh6-3j7x-3hq7",
            "title": "[salt] Salt can cause Git Providers to get wrong data",
            "date_modified": "2023-09-06T19:50:14.000Z",
            "date_published": "2023-09-05T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvh6-3j7x-3hq7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In order to resolve some git references, GitPython reads files from the <code>.git</code> directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the <code>.git</code> directory. This allows an attacker to make GitPython read any file from the system.</p>\n<h3 id=\"details\">Details</h3>\n<p>This vulnerability is present in</p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175</a></p>\n<p>That code joins the base directory with a user given string without checking if the final path is located outside the base directory.</p>\n<p>I was able to exploit it from three places, but there may be more code paths that lead to it:</p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605</a></p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620</a></p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>Running GitPython within any repo should work, here is an example with the GitPython repo.</p>\n<pre><code class=\"language-python\">import git\n\nr = git.Repo(\".\")\n\n# This will make GitPython read the README.md file from the root of the repo\nr.commit(\"../README.md\")\nr.tree(\"../README.md\")\nr.index.diff(\"../README.md\")\n\n# Reading /etc/random\n# WARNING: this will probably halt your system, run with caution\n# r.commit(\"../../../../../../../../../dev/random\")\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>I wasn't able to show the contents of the files (that's why \"blind\" local file inclusion), depending on how GitPython is being used, this can be used by an attacker for something <em>inoffensive</em> as checking if a file exits, or cause a DoS by making GitPython read a big/infinite file (like <code>/dev/random</code> on Linux systems).</p>\n<h3 id=\"possible-solutions\">Possible solutions</h3>\n<p>A solution would be to check that the final path isn't located outside the <code>repodir</code> path (maybe even after resolving symlinks). Maybe there could be other checks in place to make sure that the reference names are valid.</p>\n<hr>\n<blockquote>\n<p>[!NOTE]\nThis vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>\n</blockquote>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c\">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41040\">https://nvd.nist.gov/vuln/detail/CVE-2023-41040</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cwvm-v4w8-q58c\">https://github.com/advisories/GHSA-cwvm-v4w8-q58c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cwvm-v4w8-q58c",
            "title": "[GitPython] Blind local file inclusion",
            "date_modified": "2023-09-06T17:28:07.000Z",
            "date_published": "2023-08-30T20:09:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cwvm-v4w8-q58c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment (see big warning in <a href=\"https://docs.python.org/3/library/subprocess.html#popen-constructor\">https://docs.python.org/3/library/subprocess.html#popen-constructor</a>). GitPython defaults to use the <code>git</code> command, if a user runs GitPython from a repo has a <code>git.exe</code> or <code>git</code> executable, that program will be run instead of the one in the user's <code>PATH</code>.</p>\n<h3 id=\"details\">Details</h3>\n<p>This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo.</p>\n<p>The execution of the <code>git</code> command happens in</p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277</a> </p>\n<p><a href=\"https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996\">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996</a></p>\n<p>And there are other commands executed that should probably be aware of this problem.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>On a Windows system, create a <code>git.exe</code> or <code>git</code> executable in any directory, and import or run GitPython from that directory</p>\n<pre><code>python -c \"import git\"\n</code></pre>\n<p>The git executable from the current directory will be run.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker can trick a user to download a repository with a malicious <code>git</code> executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands.</p>\n<h3 id=\"possible-solutions\">Possible solutions</h3>\n<ul>\n<li>Default to an absolute path for the git program on Windows, like <code>C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE</code> (default git path installation).</li>\n<li>Require users to set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> environment variable on Windows systems.</li>\n<li>Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> env var to an absolute path.</li>\n<li>Resolve the executable manually by only looking into the <code>PATH</code> environment variable (suggested by @Byron)</li>\n</ul>\n<hr>\n<blockquote>\n<p>[!NOTE]\nThis vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>\n</blockquote>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4\">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40590\">https://nvd.nist.gov/vuln/detail/CVE-2023-40590</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html#popen-constructor\">https://docs.python.org/3/library/subprocess.html#popen-constructor</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/issues/1635\">https://github.com/gitpython-developers/GitPython/issues/1635</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/pull/1636\">https://github.com/gitpython-developers/GitPython/pull/1636</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc\">https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33\">https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wfm5-v35h-vwf4\">https://github.com/advisories/GHSA-wfm5-v35h-vwf4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wfm5-v35h-vwf4",
            "title": "[gitpython] GitPython untrusted search path on Windows systems leading to arbitrary code execution",
            "date_modified": "2023-09-06T15:23:40.000Z",
            "date_published": "2023-08-29T23:33:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wfm5-v35h-vwf4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A security issue was found in the Keylime <code>registrar</code> code which allows an attacker to effectively bypass the challenge-response protocol used to verify that an <code>agent</code> has indeed access to an AIK which in indeed related to the EK.</p>\n<p>When an <code>agent</code> starts up, it will contact a <code>registrar</code> and provide a public EK and public AIK, in addition to the EK Certificate. This <code>registrar</code> will then challenge the <code>agent</code> to decrypt a challenge encrypted with the EK. </p>\n<p>When receiving the wrong \"auth_tag\" back from the <code>agent</code> during activation, the <code>registrar</code> answers with an error message that contains the expected correct \"auth_tag\" (an HMAC which is calculated within the <code>registrar</code> for checking). An attacker could simply record the correct expected \"auth_tag\" from the HTTP error message and perform the activate call again with the correct expected \"auth_tag\" for the <code>agent</code>.</p>\n<p>The security issue allows an attacker to pass the challenge-response protocol during registration with (almost) arbitrary registration data. In particular, the attacker can provide a valid EK Certificate and EK, which passes verification by the <code>tenant</code> (or <code>registrar</code>), while using a compromised AIK, which is stored unprotected outside the TPM and is unrelated to former two. The attacker then deliberately fails the initial activation call to get to know the correct \"auth_tag\" and then provides it in a subsequent activation call. This results in an <code>agent</code> which is (incorrectly) registered with a valid EK Certificate, but with a compromised/unrelated AIK.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to release 7.5.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww\">https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38201\">https://nvd.nist.gov/vuln/detail/CVE-2023-38201</a></li>\n<li><a href=\"https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a\">https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2023-38201\">https://access.redhat.com/security/cve/CVE-2023-38201</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2222693\">https://bugzilla.redhat.com/show_bug.cgi?id=2222693</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4r5-q63f-gcww\">https://github.com/advisories/GHSA-f4r5-q63f-gcww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4r5-q63f-gcww",
            "title": "[keylime] Keylime registrar and (untrusted) Agent can be bypassed by an attacker",
            "date_modified": "2023-09-06T13:49:44.000Z",
            "date_published": "2023-09-06T13:49:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4r5-q63f-gcww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in <code>pygments/lexers/smithy.py</code> in Pygments until 2.15.0 via SmithyLexer.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40896\">https://nvd.nist.gov/vuln/detail/CVE-2022-40896</a></li>\n<li><a href=\"https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61\">https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61</a></li>\n<li><a href=\"https://pypi.org/project/Pygments/\">https://pypi.org/project/Pygments/</a></li>\n<li><a href=\"https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2/\">https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2/</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194\">https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04\">https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52\">https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrwq-x4v8-fh7p\">https://github.com/advisories/GHSA-mrwq-x4v8-fh7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrwq-x4v8-fh7p",
            "title": "[Pygments] Pygments vulnerable to ReDoS",
            "date_modified": "2023-09-06T05:06:55.000Z",
            "date_published": "2023-07-19T15:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrwq-x4v8-fh7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>contrib.sessions.middleware.SessionMiddleware</code> in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to <code>contrib.auth.views.logout</code>, which triggers the creation of an empty session record.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5963\">https://nvd.nist.gov/vuln/detail/CVE-2015-5963</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2015:1876\">https://access.redhat.com/errata/RHSA-2015:1876</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2015/aug/18/security-releases/\">https://www.djangoproject.com/weblog/2015/aug/18/security-releases/</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00026.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00026.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1766.html\">http://rhn.redhat.com/errata/RHSA-2015-1766.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1767.html\">http://rhn.redhat.com/errata/RHSA-2015-1767.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1894.html\">http://rhn.redhat.com/errata/RHSA-2015-1894.html</a></li>\n<li><a href=\"http://www.debian.org/security/2015/dsa-3338\">http://www.debian.org/security/2015/dsa-3338</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html\">http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html</a></li>\n<li><a href=\"http://www.ubuntu.com/usn/USN-2720-1\">http://www.ubuntu.com/usn/USN-2720-1</a></li>\n<li><a href=\"https://github.com/django/django/commit/2f5485346ee6f84b4e52068c04e043092daf55f7\">https://github.com/django/django/commit/2f5485346ee6f84b4e52068c04e043092daf55f7</a></li>\n<li><a href=\"https://github.com/django/django/commit/575f59f9bc7c59a5e41a081d1f5f55fc859c5012\">https://github.com/django/django/commit/575f59f9bc7c59a5e41a081d1f5f55fc859c5012</a></li>\n<li><a href=\"https://github.com/django/django/commit/8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5\">https://github.com/django/django/commit/8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5</a></li>\n<li><a href=\"https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.8.4.txt#L9-L21\">https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.8.4.txt#L9-L21</a></li>\n<li><a href=\"https://web.archive.org/web/20150904151934/http://www.securitytracker.com/id/1033318\">https://web.archive.org/web/20150904151934/http://www.securitytracker.com/id/1033318</a></li>\n<li><a href=\"https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/76428\">https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/76428</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgxh-wfw4-jx2v\">https://github.com/advisories/GHSA-pgxh-wfw4-jx2v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgxh-wfw4-jx2v",
            "title": "[django] Django denial of service via empty session record creation",
            "date_modified": "2023-09-06T05:03:51.000Z",
            "date_published": "2022-05-17T00:36:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgxh-wfw4-jx2v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>django.views.static.serve</code> view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-0221\">https://nvd.nist.gov/vuln/detail/CVE-2015-0221</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2015/jan/13/security/\">https://www.djangoproject.com/weblog/2015/jan/13/security/</a></li>\n<li><a href=\"http://advisories.mageia.org/MGASA-2015-0026.html\">http://advisories.mageia.org/MGASA-2015-0026.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148485.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148485.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148608.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148608.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148696.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148696.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-04/msg00001.html\">http://lists.opensuse.org/opensuse-updates/2015-04/msg00001.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-2469-1\">http://ubuntu.com/usn/usn-2469-1</a></li>\n<li><a href=\"https://github.com/django/django/commit/553779c4055e8742cc832ed525b9ee34b174934f\">https://github.com/django/django/commit/553779c4055e8742cc832ed525b9ee34b174934f</a></li>\n<li><a href=\"https://github.com/django/django/commit/818e59a3f0fbadf6c447754d202d88df025f8f2a\">https://github.com/django/django/commit/818e59a3f0fbadf6c447754d202d88df025f8f2a</a></li>\n<li><a href=\"https://github.com/django/django/commit/d020da6646c5142bc092247d218a3d1ce3e993f7\">https://github.com/django/django/commit/d020da6646c5142bc092247d218a3d1ce3e993f7</a></li>\n<li><a href=\"https://github.com/django/django/blob/9b9c805cedb08621bd5dc58a01a6478eb7cc49a9/docs/releases/1.4.18.txt#L48C1-L49C1\">https://github.com/django/django/blob/9b9c805cedb08621bd5dc58a01a6478eb7cc49a9/docs/releases/1.4.18.txt#L48C1-L49C1</a></li>\n<li><a href=\"https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62285\">https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62285</a></li>\n<li><a href=\"https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62309\">https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62309</a></li>\n<li><a href=\"https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109\">https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109</a></li>\n<li><a href=\"https://web.archive.org/web/20150523054953/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:036/?name=MDVSA-2015:036\">https://web.archive.org/web/20150523054953/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:036/?name=MDVSA-2015:036</a></li>\n<li><a href=\"https://web.archive.org/web/20151104201446/http://secunia.com/advisories/62718\">https://web.archive.org/web/20151104201446/http://secunia.com/advisories/62718</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jhjg-w2cp-5j44\">https://github.com/advisories/GHSA-jhjg-w2cp-5j44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jhjg-w2cp-5j44",
            "title": "[django] Django DoS in django.views.static.serve",
            "date_modified": "2023-09-06T05:03:51.000Z",
            "date_published": "2022-05-17T03:20:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jhjg-w2cp-5j44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nuitka 0.8.4 and prior is vulnerable to command injection. A patch is available and anticipated to be part of the <code>0.9</code> release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2054\">https://nvd.nist.gov/vuln/detail/CVE-2022-2054</a></li>\n<li><a href=\"https://huntr.dev/bounties/ea4a842c-c48c-4aae-a599-3305125c63a7\">https://huntr.dev/bounties/ea4a842c-c48c-4aae-a599-3305125c63a7</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nuitka/PYSEC-2022-209.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nuitka/PYSEC-2022-209.yaml</a></li>\n<li><a href=\"https://github.com/Nuitka/Nuitka/commit/1765ffce2a9ab859853210337390de242cd80712\">https://github.com/Nuitka/Nuitka/commit/1765ffce2a9ab859853210337390de242cd80712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v3r-hqr9-69jf\">https://github.com/advisories/GHSA-4v3r-hqr9-69jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v3r-hqr9-69jf",
            "title": "[Nuitka] Command Injection in Nuitka",
            "date_modified": "2023-09-06T05:03:49.000Z",
            "date_published": "2022-06-13T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v3r-hqr9-69jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>when a calling an external contract with no return value, the contract address could be evaluated twice. this is usually only an efficiency problem, but if evaluation of the contract address has side effects, it could result in double evaluation of the side effects.</p>\n<p>in the following example, <code>Foo(msg.sender).bar()</code> is the contract address for the following call (to <code>.foo()</code>), and could get evaluated twice</p>\n<pre><code class=\"language-vyper\">interface Foo:\n    def foo(): nonpayable\n    def bar() -&gt; address: nonpayable\n\n@external\ndef do_stuff():\n    Foo(Foo(msg.sender).bar()).foo()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>6b4d8ff185de071252feaa1c319712b2d6577f8d</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>assign contract addresses to variables. the above example would change to</p>\n<pre><code class=\"language-vyper\">@external\ndef do_stuff():\n    t: Foo = Foo(msg.sender).bar()\n    t.foo()\n</code></pre>\n<h3 id=\"references\">References</h3>\n<h3 id=\"for-more-information\">For more information</h3>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d\">https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29255\">https://nvd.nist.gov/vuln/detail/CVE-2022-29255</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38",
            "title": "[vyper] Multiple evaluation of contract address in call in vyper",
            "date_modified": "2023-09-06T05:03:49.000Z",
            "date_published": "2022-06-06T21:23:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The SSH server implementation of AsyncSSH before 1.12.1 does not properly check whether authentication is completed before processing other requests. A customized SSH client can simply skip the authentication step.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-7749\">https://nvd.nist.gov/vuln/detail/CVE-2018-7749</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/c161e26cdc0d41b745b63d9f17b437f073bf7ba4\">https://github.com/ronf/asyncssh/commit/c161e26cdc0d41b745b63d9f17b437f073bf7ba4</a></li>\n<li><a href=\"https://groups.google.com/forum/#!msg/asyncssh-announce/57_5O7kiHSA/8BXZ_hxHAQAJ\">https://groups.google.com/forum/#!msg/asyncssh-announce/57_5O7kiHSA/8BXZ_hxHAQAJ</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/16e6ebfa893167c7d9d3f6dc7a2c0d197e47f43a\">https://github.com/ronf/asyncssh/commit/16e6ebfa893167c7d9d3f6dc7a2c0d197e47f43a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-97cv-6pjf-5f9q\">https://github.com/advisories/GHSA-97cv-6pjf-5f9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-97cv-6pjf-5f9q",
            "title": "[AsyncSSH] AsyncSSH SSH Server Authentication Bypass",
            "date_modified": "2023-09-06T05:03:22.000Z",
            "date_published": "2022-05-14T01:29:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-97cv-6pjf-5f9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There MultipartParser usage in Encode's Starlette python framework before versions 0.25.0 allows an unauthenticated and remote attacker to specify any number of form fields or files which can cause excessive memory usage resulting in denial of service of the HTTP service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/encode/starlette/security/advisories/GHSA-74m5-2c7w-9w3x\">https://github.com/encode/starlette/security/advisories/GHSA-74m5-2c7w-9w3x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30798\">https://nvd.nist.gov/vuln/detail/CVE-2023-30798</a></li>\n<li><a href=\"https://github.com/encode/starlette/commit/8c74c2c8dba7030154f8af18e016136bea1938fa\">https://github.com/encode/starlette/commit/8c74c2c8dba7030154f8af18e016136bea1938fa</a></li>\n<li><a href=\"https://vulncheck.com/advisories/starlette-multipartparser-dos\">https://vulncheck.com/advisories/starlette-multipartparser-dos</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3qj8-93xh-pwh2\">https://github.com/advisories/GHSA-3qj8-93xh-pwh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3qj8-93xh-pwh2",
            "title": "[starlette] Starlette allows an unauthenticated and remote attacker to specify any number of form fields or files",
            "date_modified": "2023-09-06T05:02:51.000Z",
            "date_published": "2023-04-21T18:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3qj8-93xh-pwh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-17206\">https://nvd.nist.gov/vuln/detail/CVE-2019-17206</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/pull/1\">https://github.com/frostming/rediswrapper/pull/1</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/compare/v0.2.1...v0.3.0\">https://github.com/frostming/rediswrapper/compare/v0.2.1...v0.3.0</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/releases/tag/v0.3.0\">https://github.com/frostming/rediswrapper/releases/tag/v0.3.0</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/commit/748f60bafd857c24f65683426f665350e2c3f91b\">https://github.com/frostming/rediswrapper/commit/748f60bafd857c24f65683426f665350e2c3f91b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vrcf-g539-x6h3\">https://github.com/advisories/GHSA-vrcf-g539-x6h3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vrcf-g539-x6h3",
            "title": "[rediswrapper] Uncontrolled deserialization of a pickled object in rediswrapper allows attackers to execute arbitrary scripts",
            "date_modified": "2023-09-05T21:11:32.000Z",
            "date_published": "2019-11-20T01:37:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vrcf-g539-x6h3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (<a href=\"https://tools.ietf.org/html/rfc7230#section-3.5\">https://tools.ietf.org/html/rfc7230#section-3.5</a>) which states:</p>\n<pre><code>  Although the line terminator for the start-line and header fields is\n  the sequence CRLF, a recipient MAY recognize a single LF as a line\n  terminator and ignore any preceding CR.\n</code></pre>\n<p>Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.</p>\n<p>Example:</p>\n<pre><code>Content-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n</code></pre>\n<p>Would get treated by Waitress as if it were:</p>\n<pre><code>Content-Length: 100\nX-Header: x\nContent-Length: 0\n</code></pre>\n<p>This could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>Waitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.</p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16785\">https://nvd.nist.gov/vuln/detail/CVE-2019-16785</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba\">https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/advisories/GHSA-pg36-wpm5-g57p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p",
            "title": "[waitress] HTTP Request Smuggling: LF vs CRLF handling in Waitress",
            "date_modified": "2023-09-05T21:07:25.000Z",
            "date_published": "2019-12-20T23:03:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Twisted Web through 20.3.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10109\">https://nvd.nist.gov/vuln/detail/CVE-2020-10109</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-1/\">https://usn.ubuntu.com/4308-1/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202007-24\">https://security.gentoo.org/glsa/202007-24</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-2/\">https://usn.ubuntu.com/4308-2/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html\">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281\">https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281</a></li>\n<li><a href=\"https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13\">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>\n<li><a href=\"https://know.bishopfox.com/advisories/twisted-version-19.10.0\">https://know.bishopfox.com/advisories/twisted-version-19.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p5xh-vx83-mxcj\">https://github.com/advisories/GHSA-p5xh-vx83-mxcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj",
            "title": "[Twisted] HTTP Request Smuggling in Twisted",
            "date_modified": "2023-09-05T21:06:24.000Z",
            "date_published": "2020-03-31T15:40:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}