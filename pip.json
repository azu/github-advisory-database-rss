{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A security issue was found in the Keylime <code>registrar</code> code which allows an attacker to effectively bypass the challenge-response protocol used to verify that an <code>agent</code> has indeed access to an AIK which in indeed related to the EK.</p>\n<p>When an <code>agent</code> starts up, it will contact a <code>registrar</code> and provide a public EK and public AIK, in addition to the EK Certificate. This <code>registrar</code> will then challenge the <code>agent</code> to decrypt a challenge encrypted with the EK. </p>\n<p>When receiving the wrong \"auth_tag\" back from the <code>agent</code> during activation, the <code>registrar</code> answers with an error message that contains the expected correct \"auth_tag\" (an HMAC which is calculated within the <code>registrar</code> for checking). An attacker could simply record the correct expected \"auth_tag\" from the HTTP error message and perform the activate call again with the correct expected \"auth_tag\" for the <code>agent</code>.</p>\n<p>The security issue allows an attacker to pass the challenge-response protocol during registration with (almost) arbitrary registration data. In particular, the attacker can provide a valid EK Certificate and EK, which passes verification by the <code>tenant</code> (or <code>registrar</code>), while using a compromised AIK, which is stored unprotected outside the TPM and is unrelated to former two. The attacker then deliberately fails the initial activation call to get to know the correct \"auth_tag\" and then provides it in a subsequent activation call. This results in an <code>agent</code> which is (incorrectly) registered with a valid EK Certificate, but with a compromised/unrelated AIK.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to release 7.5.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww\">https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38201\">https://nvd.nist.gov/vuln/detail/CVE-2023-38201</a></li>\n<li><a href=\"https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a\">https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2023-38201\">https://access.redhat.com/security/cve/CVE-2023-38201</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2222693\">https://bugzilla.redhat.com/show_bug.cgi?id=2222693</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4r5-q63f-gcww\">https://github.com/advisories/GHSA-f4r5-q63f-gcww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4r5-q63f-gcww",
            "title": "[keylime] Keylime registrar and (untrusted) Agent can be bypassed by an attacker",
            "date_modified": "2023-09-06T13:49:44.000Z",
            "date_published": "2023-09-06T13:49:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4r5-q63f-gcww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in <code>pygments/lexers/smithy.py</code> in Pygments until 2.15.0 via SmithyLexer.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40896\">https://nvd.nist.gov/vuln/detail/CVE-2022-40896</a></li>\n<li><a href=\"https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61\">https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61</a></li>\n<li><a href=\"https://pypi.org/project/Pygments/\">https://pypi.org/project/Pygments/</a></li>\n<li><a href=\"https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2/\">https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2/</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194\">https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04\">https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04</a></li>\n<li><a href=\"https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52\">https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrwq-x4v8-fh7p\">https://github.com/advisories/GHSA-mrwq-x4v8-fh7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrwq-x4v8-fh7p",
            "title": "[Pygments] Pygments vulnerable to ReDoS",
            "date_modified": "2023-09-06T05:06:55.000Z",
            "date_published": "2023-07-19T15:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrwq-x4v8-fh7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>contrib.sessions.middleware.SessionMiddleware</code> in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to <code>contrib.auth.views.logout</code>, which triggers the creation of an empty session record.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5963\">https://nvd.nist.gov/vuln/detail/CVE-2015-5963</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2015:1876\">https://access.redhat.com/errata/RHSA-2015:1876</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2015/aug/18/security-releases/\">https://www.djangoproject.com/weblog/2015/aug/18/security-releases/</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00026.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00026.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1766.html\">http://rhn.redhat.com/errata/RHSA-2015-1766.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1767.html\">http://rhn.redhat.com/errata/RHSA-2015-1767.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2015-1894.html\">http://rhn.redhat.com/errata/RHSA-2015-1894.html</a></li>\n<li><a href=\"http://www.debian.org/security/2015/dsa-3338\">http://www.debian.org/security/2015/dsa-3338</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html\">http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html</a></li>\n<li><a href=\"http://www.ubuntu.com/usn/USN-2720-1\">http://www.ubuntu.com/usn/USN-2720-1</a></li>\n<li><a href=\"https://github.com/django/django/commit/2f5485346ee6f84b4e52068c04e043092daf55f7\">https://github.com/django/django/commit/2f5485346ee6f84b4e52068c04e043092daf55f7</a></li>\n<li><a href=\"https://github.com/django/django/commit/575f59f9bc7c59a5e41a081d1f5f55fc859c5012\">https://github.com/django/django/commit/575f59f9bc7c59a5e41a081d1f5f55fc859c5012</a></li>\n<li><a href=\"https://github.com/django/django/commit/8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5\">https://github.com/django/django/commit/8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5</a></li>\n<li><a href=\"https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.8.4.txt#L9-L21\">https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.8.4.txt#L9-L21</a></li>\n<li><a href=\"https://web.archive.org/web/20150904151934/http://www.securitytracker.com/id/1033318\">https://web.archive.org/web/20150904151934/http://www.securitytracker.com/id/1033318</a></li>\n<li><a href=\"https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/76428\">https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/76428</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgxh-wfw4-jx2v\">https://github.com/advisories/GHSA-pgxh-wfw4-jx2v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgxh-wfw4-jx2v",
            "title": "[django] Django denial of service via empty session record creation",
            "date_modified": "2023-09-06T05:03:51.000Z",
            "date_published": "2022-05-17T00:36:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgxh-wfw4-jx2v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>django.views.static.serve</code> view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-0221\">https://nvd.nist.gov/vuln/detail/CVE-2015-0221</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2015/jan/13/security/\">https://www.djangoproject.com/weblog/2015/jan/13/security/</a></li>\n<li><a href=\"http://advisories.mageia.org/MGASA-2015-0026.html\">http://advisories.mageia.org/MGASA-2015-0026.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148485.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148485.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148608.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148608.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148696.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-January/148696.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-04/msg00001.html\">http://lists.opensuse.org/opensuse-updates/2015-04/msg00001.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html\">http://lists.opensuse.org/opensuse-updates/2015-09/msg00035.html</a></li>\n<li><a href=\"http://ubuntu.com/usn/usn-2469-1\">http://ubuntu.com/usn/usn-2469-1</a></li>\n<li><a href=\"https://github.com/django/django/commit/553779c4055e8742cc832ed525b9ee34b174934f\">https://github.com/django/django/commit/553779c4055e8742cc832ed525b9ee34b174934f</a></li>\n<li><a href=\"https://github.com/django/django/commit/818e59a3f0fbadf6c447754d202d88df025f8f2a\">https://github.com/django/django/commit/818e59a3f0fbadf6c447754d202d88df025f8f2a</a></li>\n<li><a href=\"https://github.com/django/django/commit/d020da6646c5142bc092247d218a3d1ce3e993f7\">https://github.com/django/django/commit/d020da6646c5142bc092247d218a3d1ce3e993f7</a></li>\n<li><a href=\"https://github.com/django/django/blob/9b9c805cedb08621bd5dc58a01a6478eb7cc49a9/docs/releases/1.4.18.txt#L48C1-L49C1\">https://github.com/django/django/blob/9b9c805cedb08621bd5dc58a01a6478eb7cc49a9/docs/releases/1.4.18.txt#L48C1-L49C1</a></li>\n<li><a href=\"https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62285\">https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62285</a></li>\n<li><a href=\"https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62309\">https://web.archive.org/web/20150128111656/http://secunia.com/advisories/62309</a></li>\n<li><a href=\"https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109\">https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109</a></li>\n<li><a href=\"https://web.archive.org/web/20150523054953/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:036/?name=MDVSA-2015:036\">https://web.archive.org/web/20150523054953/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:036/?name=MDVSA-2015:036</a></li>\n<li><a href=\"https://web.archive.org/web/20151104201446/http://secunia.com/advisories/62718\">https://web.archive.org/web/20151104201446/http://secunia.com/advisories/62718</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jhjg-w2cp-5j44\">https://github.com/advisories/GHSA-jhjg-w2cp-5j44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jhjg-w2cp-5j44",
            "title": "[django] Django DoS in django.views.static.serve",
            "date_modified": "2023-09-06T05:03:51.000Z",
            "date_published": "2022-05-17T03:20:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jhjg-w2cp-5j44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nuitka 0.8.4 and prior is vulnerable to command injection. A patch is available and anticipated to be part of the <code>0.9</code> release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2054\">https://nvd.nist.gov/vuln/detail/CVE-2022-2054</a></li>\n<li><a href=\"https://huntr.dev/bounties/ea4a842c-c48c-4aae-a599-3305125c63a7\">https://huntr.dev/bounties/ea4a842c-c48c-4aae-a599-3305125c63a7</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nuitka/PYSEC-2022-209.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nuitka/PYSEC-2022-209.yaml</a></li>\n<li><a href=\"https://github.com/Nuitka/Nuitka/commit/1765ffce2a9ab859853210337390de242cd80712\">https://github.com/Nuitka/Nuitka/commit/1765ffce2a9ab859853210337390de242cd80712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v3r-hqr9-69jf\">https://github.com/advisories/GHSA-4v3r-hqr9-69jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v3r-hqr9-69jf",
            "title": "[Nuitka] Command Injection in Nuitka",
            "date_modified": "2023-09-06T05:03:49.000Z",
            "date_published": "2022-06-13T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v3r-hqr9-69jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>when a calling an external contract with no return value, the contract address could be evaluated twice. this is usually only an efficiency problem, but if evaluation of the contract address has side effects, it could result in double evaluation of the side effects.</p>\n<p>in the following example, <code>Foo(msg.sender).bar()</code> is the contract address for the following call (to <code>.foo()</code>), and could get evaluated twice</p>\n<pre><code class=\"language-vyper\">interface Foo:\n    def foo(): nonpayable\n    def bar() -&gt; address: nonpayable\n\n@external\ndef do_stuff():\n    Foo(Foo(msg.sender).bar()).foo()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>6b4d8ff185de071252feaa1c319712b2d6577f8d</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>assign contract addresses to variables. the above example would change to</p>\n<pre><code class=\"language-vyper\">@external\ndef do_stuff():\n    t: Foo = Foo(msg.sender).bar()\n    t.foo()\n</code></pre>\n<h3 id=\"references\">References</h3>\n<h3 id=\"for-more-information\">For more information</h3>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d\">https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29255\">https://nvd.nist.gov/vuln/detail/CVE-2022-29255</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38",
            "title": "[vyper] Multiple evaluation of contract address in call in vyper",
            "date_modified": "2023-09-06T05:03:49.000Z",
            "date_published": "2022-06-06T21:23:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The SSH server implementation of AsyncSSH before 1.12.1 does not properly check whether authentication is completed before processing other requests. A customized SSH client can simply skip the authentication step.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-7749\">https://nvd.nist.gov/vuln/detail/CVE-2018-7749</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/c161e26cdc0d41b745b63d9f17b437f073bf7ba4\">https://github.com/ronf/asyncssh/commit/c161e26cdc0d41b745b63d9f17b437f073bf7ba4</a></li>\n<li><a href=\"https://groups.google.com/forum/#!msg/asyncssh-announce/57_5O7kiHSA/8BXZ_hxHAQAJ\">https://groups.google.com/forum/#!msg/asyncssh-announce/57_5O7kiHSA/8BXZ_hxHAQAJ</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/16e6ebfa893167c7d9d3f6dc7a2c0d197e47f43a\">https://github.com/ronf/asyncssh/commit/16e6ebfa893167c7d9d3f6dc7a2c0d197e47f43a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-97cv-6pjf-5f9q\">https://github.com/advisories/GHSA-97cv-6pjf-5f9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-97cv-6pjf-5f9q",
            "title": "[AsyncSSH] AsyncSSH SSH Server Authentication Bypass",
            "date_modified": "2023-09-06T05:03:22.000Z",
            "date_published": "2022-05-14T01:29:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-97cv-6pjf-5f9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There MultipartParser usage in Encode's Starlette python framework before versions 0.25.0 allows an unauthenticated and remote attacker to specify any number of form fields or files which can cause excessive memory usage resulting in denial of service of the HTTP service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/encode/starlette/security/advisories/GHSA-74m5-2c7w-9w3x\">https://github.com/encode/starlette/security/advisories/GHSA-74m5-2c7w-9w3x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30798\">https://nvd.nist.gov/vuln/detail/CVE-2023-30798</a></li>\n<li><a href=\"https://github.com/encode/starlette/commit/8c74c2c8dba7030154f8af18e016136bea1938fa\">https://github.com/encode/starlette/commit/8c74c2c8dba7030154f8af18e016136bea1938fa</a></li>\n<li><a href=\"https://vulncheck.com/advisories/starlette-multipartparser-dos\">https://vulncheck.com/advisories/starlette-multipartparser-dos</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3qj8-93xh-pwh2\">https://github.com/advisories/GHSA-3qj8-93xh-pwh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3qj8-93xh-pwh2",
            "title": "[starlette] Starlette allows an unauthenticated and remote attacker to specify any number of form fields or files",
            "date_modified": "2023-09-06T05:02:51.000Z",
            "date_published": "2023-04-21T18:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3qj8-93xh-pwh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-17206\">https://nvd.nist.gov/vuln/detail/CVE-2019-17206</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/pull/1\">https://github.com/frostming/rediswrapper/pull/1</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/compare/v0.2.1...v0.3.0\">https://github.com/frostming/rediswrapper/compare/v0.2.1...v0.3.0</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/releases/tag/v0.3.0\">https://github.com/frostming/rediswrapper/releases/tag/v0.3.0</a></li>\n<li><a href=\"https://github.com/frostming/rediswrapper/commit/748f60bafd857c24f65683426f665350e2c3f91b\">https://github.com/frostming/rediswrapper/commit/748f60bafd857c24f65683426f665350e2c3f91b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vrcf-g539-x6h3\">https://github.com/advisories/GHSA-vrcf-g539-x6h3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vrcf-g539-x6h3",
            "title": "[rediswrapper] Uncontrolled deserialization of a pickled object in rediswrapper allows attackers to execute arbitrary scripts",
            "date_modified": "2023-09-05T21:11:32.000Z",
            "date_published": "2019-11-20T01:37:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vrcf-g539-x6h3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (<a href=\"https://tools.ietf.org/html/rfc7230#section-3.5\">https://tools.ietf.org/html/rfc7230#section-3.5</a>) which states:</p>\n<pre><code>  Although the line terminator for the start-line and header fields is\n  the sequence CRLF, a recipient MAY recognize a single LF as a line\n  terminator and ignore any preceding CR.\n</code></pre>\n<p>Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.</p>\n<p>Example:</p>\n<pre><code>Content-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n</code></pre>\n<p>Would get treated by Waitress as if it were:</p>\n<pre><code>Content-Length: 100\nX-Header: x\nContent-Length: 0\n</code></pre>\n<p>This could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>Waitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.</p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16785\">https://nvd.nist.gov/vuln/detail/CVE-2019-16785</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba\">https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pg36-wpm5-g57p\">https://github.com/advisories/GHSA-pg36-wpm5-g57p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p",
            "title": "[waitress] HTTP Request Smuggling: LF vs CRLF handling in Waitress",
            "date_modified": "2023-09-05T21:07:25.000Z",
            "date_published": "2019-12-20T23:03:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pg36-wpm5-g57p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Twisted Web through 20.3.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10109\">https://nvd.nist.gov/vuln/detail/CVE-2020-10109</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-1/\">https://usn.ubuntu.com/4308-1/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202007-24\">https://security.gentoo.org/glsa/202007-24</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-2/\">https://usn.ubuntu.com/4308-2/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html\">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281\">https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281</a></li>\n<li><a href=\"https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13\">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>\n<li><a href=\"https://know.bishopfox.com/advisories/twisted-version-19.10.0\">https://know.bishopfox.com/advisories/twisted-version-19.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p5xh-vx83-mxcj\">https://github.com/advisories/GHSA-p5xh-vx83-mxcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj",
            "title": "[Twisted] HTTP Request Smuggling in Twisted",
            "date_modified": "2023-09-05T21:06:24.000Z",
            "date_published": "2020-03-31T15:40:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p5xh-vx83-mxcj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Bleach 2.1.x before 2.1.3. Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-7753\">https://nvd.nist.gov/vuln/detail/CVE-2018-7753</a></li>\n<li><a href=\"https://github.com/mozilla/bleach/commit/c5df5789ec3471a31311f42c2d19fc2cf21b35ef\">https://github.com/mozilla/bleach/commit/c5df5789ec3471a31311f42c2d19fc2cf21b35ef</a></li>\n<li><a href=\"https://bugs.debian.org/892252\">https://bugs.debian.org/892252</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9mq-p2f9-cfqv\">https://github.com/advisories/GHSA-m9mq-p2f9-cfqv</a></li>\n<li><a href=\"https://github.com/mozilla/bleach/releases/tag/v2.1.3\">https://github.com/mozilla/bleach/releases/tag/v2.1.3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9mq-p2f9-cfqv",
            "title": "[bleach] Bleach URI Scheme Restriction Bypass",
            "date_modified": "2023-09-05T21:05:24.000Z",
            "date_published": "2019-01-04T17:46:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9mq-p2f9-cfqv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exploitable vulnerability exists in the YAML parsing functionality in config.py in Confire 0.2.0. Due to the user-specific configuration being loaded from \"~/.confire.yaml\" using the yaml.load function, a YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16763\">https://nvd.nist.gov/vuln/detail/CVE-2017-16763</a></li>\n<li><a href=\"https://github.com/bbengfort/confire/issues/24\">https://github.com/bbengfort/confire/issues/24</a></li>\n<li><a href=\"https://github.com/bbengfort/confire/commit/8cc86a5ec2327e070f1d576d61bbaadf861597ea\">https://github.com/bbengfort/confire/commit/8cc86a5ec2327e070f1d576d61bbaadf861597ea</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m85c-9mf8-m2m6\">https://github.com/advisories/GHSA-m85c-9mf8-m2m6</a></li>\n<li><a href=\"https://joel-malwarebenchmark.github.io/blog/2017/11/12/cve-2017-16763-configure-loaded-through-confire/\">https://joel-malwarebenchmark.github.io/blog/2017/11/12/cve-2017-16763-configure-loaded-through-confire/</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m85c-9mf8-m2m6",
            "title": "[confire] Unsafe deserialization in confire",
            "date_modified": "2023-09-05T21:04:25.000Z",
            "date_published": "2018-07-18T18:28:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m85c-9mf8-m2m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.</p>\n<pre><code>Content-Length: 10\nTransfer-Encoding: [\\x0b]chunked\n</code></pre>\n<p>For clarity:</p>\n<pre><code>0x0b == vertical tab\n</code></pre>\n<p>Would get parsed by Waitress as being a <code>chunked</code> request, but a front-end server would use the <code>Content-Length</code> instead as the <code>Transfer-Encoding</code> header is considered invalid due to containing invalid characters.</p>\n<p>If a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.</p>\n<p>Waitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.</p>\n<p>Waitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.</p>\n<h3 id=\"references\">References</h3>\n<p>This was mentioned in <a href=\"https://portswigger.net/research/http-desync-attacks-what-happened-next\">https://portswigger.net/research/http-desync-attacks-what-happened-next</a> and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: <a href=\"https://nathandavison.com/blog/haproxy-http-request-smuggling\">https://nathandavison.com/blog/haproxy-http-request-smuggling</a></p>\n<h3 id=\"thanks\">Thanks</h3>\n<p>The Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017\">https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5ff-3wj3-8ph4\">https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5ff-3wj3-8ph4",
            "title": "[waitress] HTTP Request Smuggling: Invalid whitespace characters in headers in Waitress",
            "date_modified": "2023-09-05T21:03:24.000Z",
            "date_published": "2019-12-26T16:34:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5ff-3wj3-8ph4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Twisted Web before 20.3.0, there was an HTTP request splitting vulnerability. When presented with two content-length headers, it ignored the first header. When the second content-length value was set to zero, the request body was interpreted as a pipelined request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10108\">https://nvd.nist.gov/vuln/detail/CVE-2020-10108</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-1/\">https://usn.ubuntu.com/4308-1/</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202007-24\">https://security.gentoo.org/glsa/202007-24</a></li>\n<li><a href=\"https://usn.ubuntu.com/4308-2/\">https://usn.ubuntu.com/4308-2/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html\">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>\n<li><a href=\"https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13\">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>\n<li><a href=\"https://know.bishopfox.com/advisories/twisted-version-19.10.0\">https://know.bishopfox.com/advisories/twisted-version-19.10.0</a></li>\n<li><a href=\"https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281\">https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h96w-mmrf-2h6v\">https://github.com/advisories/GHSA-h96w-mmrf-2h6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h96w-mmrf-2h6v",
            "title": "[Twisted] Improper Input Validation in Twisted",
            "date_modified": "2023-09-05T21:01:24.000Z",
            "date_published": "2020-03-31T15:42:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h96w-mmrf-2h6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress would parse the <code>Transfer-Encoding</code> header and only look for a single string value, if that value was not <code>chunked</code> it would fall through and use the <code>Content-Length</code> header instead.</p>\n<p>According to the HTTP standard <code>Transfer-Encoding</code> should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with <code>chunked</code>.</p>\n<p>Requests sent with:</p>\n<pre><code>Transfer-Encoding: gzip, chunked\n</code></pre>\n<p>Would incorrectly get ignored, and the request would use a <code>Content-Length</code> header instead to determine the body size of the HTTP message.</p>\n<p>This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>\n<p>Waitress will now return a 501 Not Implemented error if the <code>Transfer-Encoding</code> is not <code>chunked</code> or contains multiple elements. Waitress does not support any transfer codings such as <code>gzip</code> or <code>deflate</code>.</p>\n<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>\n<h3 id=\"issuesmore-security-issues\">Issues/more security issues:</h3>\n<ul>\n<li>open an issue at <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p\">https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16786\">https://nvd.nist.gov/vuln/detail/CVE-2019-16786</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3\">https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3</a></li>\n<li><a href=\"https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes\">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2020:0720\">https://access.redhat.com/errata/RHSA-2020:0720</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g2xc-35jw-c63p\">https://github.com/advisories/GHSA-g2xc-35jw-c63p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g2xc-35jw-c63p",
            "title": "[waitress] HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress",
            "date_modified": "2023-09-05T21:00:24.000Z",
            "date_published": "2019-12-20T23:04:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g2xc-35jw-c63p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Matrix Synapse before 1.5.0 mishandles signature checking on some federation APIs. Events sent over <code>/send_join</code>, <code>/send_leave</code>, and <code>/invite</code> may not be correctly signed, or may not come from the expected servers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-18835\">https://nvd.nist.gov/vuln/detail/CVE-2019-18835</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/pull/6262\">https://github.com/matrix-org/synapse/pull/6262</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/releases/tag/v1.5.0\">https://github.com/matrix-org/synapse/releases/tag/v1.5.0</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/commit/172f264ed38e8bef857552f93114b4ee113a880b\">https://github.com/matrix-org/synapse/commit/172f264ed38e8bef857552f93114b4ee113a880b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cppw-2mf8-qpm5\">https://github.com/advisories/GHSA-cppw-2mf8-qpm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cppw-2mf8-qpm5",
            "title": "[matrix-synapse] Improper Verification of Cryptographic Signature in matrix-synapse",
            "date_modified": "2023-09-05T20:58:24.000Z",
            "date_published": "2022-05-24T22:01:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cppw-2mf8-qpm5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exploitable vulnerability exists in the YAML loading functionality of util.py in OwlMixin before 2.0.0a12. A \"Load YAML\" string or file (aka load_yaml or load_yamlf) can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16618\">https://nvd.nist.gov/vuln/detail/CVE-2017-16618</a></li>\n<li><a href=\"https://github.com/tadashi-aikawa/owlmixin/issues/12\">https://github.com/tadashi-aikawa/owlmixin/issues/12</a></li>\n<li><a href=\"https://github.com/tadashi-aikawa/owlmixin/commit/5d0575303f6df869a515ced4285f24ba721e0d4e\">https://github.com/tadashi-aikawa/owlmixin/commit/5d0575303f6df869a515ced4285f24ba721e0d4e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ccmq-qvcp-5mrm\">https://github.com/advisories/GHSA-ccmq-qvcp-5mrm</a></li>\n<li><a href=\"https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16618-convert-through-owlmixin/\">https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16618-convert-through-owlmixin/</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ccmq-qvcp-5mrm",
            "title": "[owlmixin] Unsafe deserialization in owlmixin",
            "date_modified": "2023-09-05T20:57:24.000Z",
            "date_published": "2018-07-13T16:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ccmq-qvcp-5mrm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>python-keystoneclient version 0.2.3 to 0.2.5 has middleware memcache encryption bypass.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-2166\">https://nvd.nist.gov/vuln/detail/CVE-2013-2166</a></li>\n<li><a href=\"https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e\">https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2013-2166\">https://access.redhat.com/security/cve/cve-2013-2166</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2166\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2166</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=CVE-2013-2166\">https://bugzilla.suse.com/show_bug.cgi?id=CVE-2013-2166</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2013-2166\">https://security-tracker.debian.org/tracker/CVE-2013-2166</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html\">http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0992.html\">http://rhn.redhat.com/errata/RHSA-2013-0992.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/06/19/5\">http://www.openwall.com/lists/oss-security/2013/06/19/5</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/60684\">http://www.securityfocus.com/bid/60684</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3xq-cj8f-7829\">https://github.com/advisories/GHSA-c3xq-cj8f-7829</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3xq-cj8f-7829",
            "title": "[python-keystoneclient] Inadequate Encryption Strength in python-keystoneclient",
            "date_modified": "2023-09-05T20:56:24.000Z",
            "date_published": "2021-10-12T16:31:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3xq-cj8f-7829"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>python-keystoneclient version 0.2.3 to 0.2.5 has middleware memcache signing bypass</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-2167\">https://nvd.nist.gov/vuln/detail/CVE-2013-2167</a></li>\n<li><a href=\"https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e\">https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2013-2167\">https://access.redhat.com/security/cve/cve-2013-2167</a></li>\n<li><a href=\"https://bugs.gentoo.org/show_bug.cgi?id=CVE-2013-2167\">https://bugs.gentoo.org/show_bug.cgi?id=CVE-2013-2167</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2167\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2167</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/85492\">https://exchange.xforce.ibmcloud.com/vulnerabilities/85492</a></li>\n<li><a href=\"https://github.com/openstack/python-keystoneclient/commits/0.3.0\">https://github.com/openstack/python-keystoneclient/commits/0.3.0</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2013-2167\">https://security-tracker.debian.org/tracker/CVE-2013-2167</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html\">http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0992.html\">http://rhn.redhat.com/errata/RHSA-2013-0992.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2013/06/19/5\">http://www.openwall.com/lists/oss-security/2013/06/19/5</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/60680\">http://www.securityfocus.com/bid/60680</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9vg3-cf92-h2h7\">https://github.com/advisories/GHSA-9vg3-cf92-h2h7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9vg3-cf92-h2h7",
            "title": "[python-keystoneclient] Insufficient Verification of Data Authenticity in python-keystoneclient",
            "date_modified": "2023-09-05T20:55:24.000Z",
            "date_published": "2020-03-10T20:39:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9vg3-cf92-h2h7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}