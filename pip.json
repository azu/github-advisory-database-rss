{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6985\">https://nvd.nist.gov/vuln/detail/CVE-2024-6985</a></li>\n<li><a href=\"https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620\">https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620</a></li>\n<li><a href=\"https://huntr.com/bounties/79c11579-47d8-4e68-8466-b47c3bf5ef6a\">https://huntr.com/bounties/79c11579-47d8-4e68-8466-b47c3bf5ef6a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6h64-g7cj-hj56\">https://github.com/advisories/GHSA-6h64-g7cj-hj56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6h64-g7cj-hj56",
            "title": "[lollms] Lord of Large Language Models (LoLLMs)  path traversal vulnerability in the api open_personality_folder endpoint",
            "date_modified": "2024-10-11T19:44:05.000Z",
            "date_published": "2024-10-11T18:32:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6h64-g7cj-hj56"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the <code>lollms_file_system.py</code> file. The functions <code>add_rag_database</code>, <code>toggle_mount_rag_database</code>, and <code>vectorize_folder</code> do not implement security measures such as <code>sanitize_path_from_endpoint</code> or <code>sanitize_path</code>. This allows an attacker to perform vectorize operations on <code>.sqlite</code> files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6971\">https://nvd.nist.gov/vuln/detail/CVE-2024-6971</a></li>\n<li><a href=\"https://huntr.com/bounties/fbfe7cd0-99fb-4305-bd07-8b573364109e\">https://huntr.com/bounties/fbfe7cd0-99fb-4305-bd07-8b573364109e</a></li>\n<li><a href=\"https://github.com/ParisNeo/lollms/commit/aeace796d861e922133b769710019608a6363264\">https://github.com/ParisNeo/lollms/commit/aeace796d861e922133b769710019608a6363264</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7pgr-32fx-c6x9\">https://github.com/advisories/GHSA-7pgr-32fx-c6x9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7pgr-32fx-c6x9",
            "title": "[lollms] Lord of Large Language Models (LoLLMs) Server path traversal vulnerability in lollms_file_system.py",
            "date_modified": "2024-10-11T17:47:40.000Z",
            "date_published": "2024-10-11T15:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7pgr-32fx-c6x9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability is a <strong>data validation issue</strong> in the Gradio <code>Dropdown</code> component's pre-processing step. Even if the <code>allow_custom_value</code> parameter is set to <code>False</code>, attackers can bypass this restriction by sending custom requests with arbitrary values, effectively breaking the developerâ€™s intended input constraints. While this alone is not a severe vulnerability, it can lead to more critical security issues, particularly when paired with other vulnerabilities like file downloads from the user's machine.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, this issue is addressed in <code>gradio&gt;=5.0</code>. Please upgrade to the latest version to resolve the problem.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>To mitigate the issue without upgrading, developers can add manual validation in their prediction function to check the received values against the allowed dropdown values before processing them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-26jh-r8g2-6fpr\">https://github.com/gradio-app/gradio/security/advisories/GHSA-26jh-r8g2-6fpr</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-26jh-r8g2-6fpr\">https://github.com/advisories/GHSA-26jh-r8g2-6fpr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-26jh-r8g2-6fpr",
            "title": "[gradio] Gradio's dropdown component pre-process step does not limit the values to those in the dropdown list",
            "date_modified": "2024-10-11T15:48:00.000Z",
            "date_published": "2024-10-10T22:11:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-26jh-r8g2-6fpr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability involves <strong>Cross-Site Scripting (XSS)</strong> on any Gradio server that allows file uploads. Authenticated users can upload files such as HTML, JavaScript, or SVG files containing malicious scripts. When other users download or view these files, the scripts will execute in their browser, allowing attackers to perform unauthorized actions or steal sensitive information from their sessions. This impacts any Gradio server that allows file uploads, particularly those using components that process or display user-uploaded files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can restrict the types of files that can be uploaded to the Gradio server by limiting uploads to non-executable file types such as images or text. Additionally, developers can implement server-side validation to sanitize uploaded files, ensuring that HTML, JavaScript, and SVG files are properly handled or rejected before being stored or displayed to users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-gvv6-33j7-884g\">https://github.com/gradio-app/gradio/security/advisories/GHSA-gvv6-33j7-884g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47872\">https://nvd.nist.gov/vuln/detail/CVE-2024-47872</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gvv6-33j7-884g\">https://github.com/advisories/GHSA-gvv6-33j7-884g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gvv6-33j7-884g",
            "title": "[gradio] Gradio has an XSS on every Gradio server via upload of HTML files, JS files, or SVG files",
            "date_modified": "2024-10-11T15:46:06.000Z",
            "date_published": "2024-10-10T22:09:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gvv6-33j7-884g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability involves <strong>insecure communication</strong> between the FRP (Fast Reverse Proxy) client and server when Gradio's <code>share=True</code> option is used. HTTPS is not enforced on the connection, allowing attackers to intercept and read files uploaded to the Gradio server, as well as modify responses or data sent between the client and server. This impacts users who are sharing Gradio demos publicly over the internet using <code>share=True</code> without proper encryption, exposing sensitive data to potential eavesdroppers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can avoid using <code>share=True</code> in production environments and instead host their Gradio applications on servers with HTTPS enabled to ensure secure communication.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-279j-x4gx-hfrh\">https://github.com/gradio-app/gradio/security/advisories/GHSA-279j-x4gx-hfrh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47871\">https://nvd.nist.gov/vuln/detail/CVE-2024-47871</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-279j-x4gx-hfrh\">https://github.com/advisories/GHSA-279j-x4gx-hfrh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-279j-x4gx-hfrh",
            "title": "[gradio] Gradio uses insecure communication between the FRP client and server",
            "date_modified": "2024-10-11T15:45:55.000Z",
            "date_published": "2024-10-10T22:08:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-279j-x4gx-hfrh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability involves a <strong>race condition</strong> in the <code>update_root_in_config</code> function, allowing an attacker to modify the <code>root</code> URL used by the Gradio frontend to communicate with the backend. By exploiting this flaw, an attacker can redirect user traffic to a malicious server. This could lead to the interception of sensitive data such as authentication credentials or uploaded files. This impacts all users who connect to a Gradio server, especially those exposed to the internet, where malicious actors could exploit this race condition.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-xh2x-3mrm-fwqm\">https://github.com/gradio-app/gradio/security/advisories/GHSA-xh2x-3mrm-fwqm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47870\">https://nvd.nist.gov/vuln/detail/CVE-2024-47870</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh2x-3mrm-fwqm\">https://github.com/advisories/GHSA-xh2x-3mrm-fwqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh2x-3mrm-fwqm",
            "title": "[gradio] Gradio has a race condition in update_root_in_config may redirect user traffic",
            "date_modified": "2024-10-11T15:48:15.000Z",
            "date_published": "2024-10-10T22:04:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh2x-3mrm-fwqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability involves a <strong>timing attack</strong> in the way Gradio compares hashes for the <code>analytics_dashboard</code> function. Since the comparison is not done in constant time, an attacker could exploit this by measuring the response time of different requests to infer the correct hash byte-by-byte. This can lead to unauthorized access to the analytics dashboard, especially if the attacker can repeatedly query the system with different keys.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;4.44</code> to mitigate this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>To mitigate the risk before applying the patch, developers can manually patch the <code>analytics_dashboard</code> dashboard to use a <strong>constant-time comparison</strong> function for comparing sensitive values, such as hashes. Alternatively, access to the analytics dashboard can be disabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-j757-pf57-f8r4\">https://github.com/gradio-app/gradio/security/advisories/GHSA-j757-pf57-f8r4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47869\">https://nvd.nist.gov/vuln/detail/CVE-2024-47869</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j757-pf57-f8r4\">https://github.com/advisories/GHSA-j757-pf57-f8r4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j757-pf57-f8r4",
            "title": "[gradio] Gradio performs a non-constant-time comparison when comparing hashes",
            "date_modified": "2024-10-11T15:47:36.000Z",
            "date_published": "2024-10-10T22:03:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j757-pf57-f8r4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This is a <strong>data validation vulnerability</strong> affecting several Gradio components, which allows arbitrary file leaks through the post-processing step. Attackers can exploit these components by crafting requests that bypass expected input constraints. This issue could lead to sensitive files being exposed to unauthorized users, especially when combined with other vulnerabilities, such as issue TOB-GRADIO-15. The components most at risk are those that return or handle file data.</p>\n<h3 id=\"vulnerable-components\">Vulnerable Components:</h3>\n<ol>\n<li><strong>String to FileData:</strong> DownloadButton, Audio, ImageEditor, Video, Model3D, File, UploadButton.</li>\n<li><strong>Complex data to FileData:</strong> Chatbot, MultimodalTextbox.</li>\n<li><strong>Direct file read in preprocess:</strong> Code.</li>\n<li><strong>Dictionary converted to FileData:</strong> ParamViewer, Dataset.</li>\n</ol>\n<h3 id=\"exploit-scenarios\">Exploit Scenarios:</h3>\n<ol>\n<li>A developer creates a Dropdown list that passes values to a DownloadButton. An attacker bypasses the allowed inputs, sends an arbitrary file path (like <code>/etc/passwd</code>), and downloads sensitive files.</li>\n<li>An attacker crafts a malicious payload in a ParamViewer component, leaking sensitive files from a server through the arbitrary file leak.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, the issue has been resolved in <code>gradio&gt;5.0</code>. Upgrading to the latest version will mitigate this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-4q3c-cj7g-jcwf\">https://github.com/gradio-app/gradio/security/advisories/GHSA-4q3c-cj7g-jcwf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47868\">https://nvd.nist.gov/vuln/detail/CVE-2024-47868</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4q3c-cj7g-jcwf\">https://github.com/advisories/GHSA-4q3c-cj7g-jcwf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4q3c-cj7g-jcwf",
            "title": "[gradio] Gradio has several components with post-process steps allow arbitrary file leaks",
            "date_modified": "2024-10-11T15:47:51.000Z",
            "date_published": "2024-10-10T22:03:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4q3c-cj7g-jcwf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability is a <strong>lack of integrity check</strong> on the downloaded FRP client, which could potentially allow attackers to introduce malicious code. If an attacker gains access to the remote URL from which the FRP client is downloaded, they could modify the binary without detection, as the Gradio server does not verify the file's checksum or signature. </p>\n<p><strong>Who is impacted?</strong><br>Any users utilizing the Gradio server's sharing mechanism that downloads the FRP client could be affected by this vulnerability, especially those relying on the executable binary for secure data tunneling.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5.0</code>, which includes a fix to verify the integrity of the downloaded binary.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no direct workaround for this issue without upgrading. However, users can manually validate the integrity of the downloaded FRP client by implementing checksum or signature verification in their own environment to ensure the binary hasn't been tampered with.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-8c87-gvhj-xm8m\">https://github.com/gradio-app/gradio/security/advisories/GHSA-8c87-gvhj-xm8m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47867\">https://nvd.nist.gov/vuln/detail/CVE-2024-47867</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c87-gvhj-xm8m\">https://github.com/advisories/GHSA-8c87-gvhj-xm8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c87-gvhj-xm8m",
            "title": "[gradio] Gradio lacks integrity checking on the downloaded FRP client",
            "date_modified": "2024-10-11T15:47:44.000Z",
            "date_published": "2024-10-10T22:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c87-gvhj-xm8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>What kind of vulnerability is it? Who is impacted?</p>\n<p>This vulnerability involves data exposure due to the enable_monitoring flag not properly disabling monitoring when set to False. Even when monitoring is supposedly disabled, an attacker or unauthorized user can still access the monitoring dashboard by directly requesting the /monitoring endpoint. This means that sensitive application analytics may still be exposed, particularly in environments where monitoring is expected to be disabled. Users who set enable_monitoring=False to prevent unauthorized access to monitoring data are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to gradio&gt;=4.44 to address this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-hm3c-93pg-4cxw\">https://github.com/gradio-app/gradio/security/advisories/GHSA-hm3c-93pg-4cxw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47168\">https://nvd.nist.gov/vuln/detail/CVE-2024-47168</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hm3c-93pg-4cxw\">https://github.com/advisories/GHSA-hm3c-93pg-4cxw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hm3c-93pg-4cxw",
            "title": "[gradio] In Gradio, the `enable_monitoring` flag set to `False` does not disable monitoring",
            "date_modified": "2024-10-11T15:46:48.000Z",
            "date_published": "2024-10-10T22:02:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hm3c-93pg-4cxw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability relates to <strong>Server-Side Request Forgery (SSRF)</strong> in the <code>/queue/join</code> endpoint. Gradioâ€™s <code>async_save_url_to_cache</code> function allows attackers to force the Gradio server to send HTTP requests to user-controlled URLs. This could enable attackers to target internal servers or services within a local network and possibly exfiltrate data or cause unwanted internal requests. Additionally, the content from these URLs is stored locally, making it easier for attackers to upload potentially malicious files to the server. This impacts users deploying Gradio servers that use components like the Video component which involve URL fetching.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can disable or heavily restrict URL-based inputs in their Gradio applications to trusted domains only. Additionally, implementing stricter URL validation (such as allowinglist-based validation) and ensuring that local or internal network addresses cannot be requested via the <code>/queue/join</code> endpoint can help mitigate the risk of SSRF attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-576c-3j53-r9jj\">https://github.com/gradio-app/gradio/security/advisories/GHSA-576c-3j53-r9jj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47167\">https://nvd.nist.gov/vuln/detail/CVE-2024-47167</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-576c-3j53-r9jj\">https://github.com/advisories/GHSA-576c-3j53-r9jj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-576c-3j53-r9jj",
            "title": "[gradio] Gradio vulnerable to SSRF in the path parameter of /queue/join",
            "date_modified": "2024-10-11T15:46:42.000Z",
            "date_published": "2024-10-10T22:01:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-576c-3j53-r9jj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability involves a <strong>one-level read path traversal</strong> in the <code>/custom_component</code> endpoint. Attackers can exploit this flaw to access and leak source code from custom Gradio components by manipulating the file path in the request. Although the traversal is limited to a single directory level, it could expose proprietary or sensitive code that developers intended to keep private. This impacts users who have developed custom Gradio components and are hosting them on publicly accessible servers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=4.44</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, developers can sanitize the file paths and ensure that components are not stored in publicly accessible directories.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-37qc-qgx6-9xjv\">https://github.com/gradio-app/gradio/security/advisories/GHSA-37qc-qgx6-9xjv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47166\">https://nvd.nist.gov/vuln/detail/CVE-2024-47166</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-37qc-qgx6-9xjv\">https://github.com/advisories/GHSA-37qc-qgx6-9xjv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-37qc-qgx6-9xjv",
            "title": "[gradio] Gradio has a one-level read path traversal in `/custom_component`",
            "date_modified": "2024-10-11T15:46:34.000Z",
            "date_published": "2024-10-10T21:36:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-37qc-qgx6-9xjv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability relates to <strong>CORS origin validation accepting a null origin</strong>. When a Gradio server is deployed locally, the <code>localhost_aliases</code> variable includes \"null\" as a valid origin. This allows attackers to make unauthorized requests from sandboxed iframes or other sources with a null origin, potentially leading to data theft, such as user authentication tokens or uploaded files. This impacts users running Gradio locally, especially those using basic authentication.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5.0</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can manually modify the <code>localhost_aliases</code> list in their local Gradio deployment to exclude \"null\" as a valid origin. By removing this value, the Gradio server will no longer accept requests from sandboxed iframes or sources with a null origin, mitigating the potential for exploitation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-89v2-pqfv-c5r9\">https://github.com/gradio-app/gradio/security/advisories/GHSA-89v2-pqfv-c5r9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47165\">https://nvd.nist.gov/vuln/detail/CVE-2024-47165</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89v2-pqfv-c5r9\">https://github.com/advisories/GHSA-89v2-pqfv-c5r9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89v2-pqfv-c5r9",
            "title": "[gradio] Gradio's CORS origin validation accepts the null origin",
            "date_modified": "2024-10-11T15:47:02.000Z",
            "date_published": "2024-10-10T21:36:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89v2-pqfv-c5r9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability relates to the <strong>bypass of directory traversal checks</strong> within the <code>is_in_or_equal</code> function. This function, intended to check if a file resides within a given directory, can be bypassed with certain payloads that manipulate file paths using <code>..</code> (parent directory) sequences. Attackers could potentially access restricted files if they are able to exploit this flaw, although the difficulty is high. This primarily impacts users relying on Gradioâ€™s blocklist or directory access validation, particularly when handling file uploads.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=5.0</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can manually sanitize and normalize file paths in their Gradio deployment before passing them to the <code>is_in_or_equal</code> function. Ensuring that all file paths are properly resolved and absolute can help mitigate the bypass vulnerabilities caused by the improper handling of <code>..</code> sequences or malformed paths.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-77xq-6g77-h274\">https://github.com/gradio-app/gradio/security/advisories/GHSA-77xq-6g77-h274</a></li>\n<li><a href=\"https://github.com/gradio-app/gradio/commit/08b51590163b306fd874f543f6fcaf23ac7d2646\">https://github.com/gradio-app/gradio/commit/08b51590163b306fd874f543f6fcaf23ac7d2646</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47164\">https://nvd.nist.gov/vuln/detail/CVE-2024-47164</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77xq-6g77-h274\">https://github.com/advisories/GHSA-77xq-6g77-h274</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77xq-6g77-h274",
            "title": "[gradio] Gradio's `is_in_or_equal` function may be bypassed",
            "date_modified": "2024-10-11T15:47:12.000Z",
            "date_published": "2024-10-10T21:27:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77xq-6g77-h274"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>\n<p>This vulnerability is related to <strong>CORS origin validation</strong>, where the Gradio server fails to validate the request origin when a cookie is present. This allows an attackerâ€™s website to make unauthorized requests to a local Gradio server. Potentially, attackers can upload files, steal authentication tokens, and access user data if the victim visits a malicious website while logged into Gradio. This impacts users who have deployed Gradio locally and use basic authentication.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, please upgrade to <code>gradio&gt;=4.44</code> to address this issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>\n<p>As a workaround, users can manually enforce stricter CORS origin validation by modifying the <code>CustomCORSMiddleware</code> class in their local Gradio server code. Specifically, they can bypass the condition that skips CORS validation for requests containing cookies to prevent potential exploitation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-3c67-5hwx-f6wx\">https://github.com/gradio-app/gradio/security/advisories/GHSA-3c67-5hwx-f6wx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47084\">https://nvd.nist.gov/vuln/detail/CVE-2024-47084</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3c67-5hwx-f6wx\">https://github.com/advisories/GHSA-3c67-5hwx-f6wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3c67-5hwx-f6wx",
            "title": "[gradio] Gradios's CORS origin validation is not performed when the request has a cookie",
            "date_modified": "2024-10-11T15:47:23.000Z",
            "date_published": "2024-10-10T21:20:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3c67-5hwx-f6wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An Insecure Direct Object Reference (IDOR) vulnerability exists in open-webui/open-webui version v0.3.8. The vulnerability occurs in the API endpoint <code>http://0.0.0.0:3000/api/v1/memories/{id}/update</code>, where the decentralization design is flawed, allowing attackers to edit other users' memories without proper authorization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7041\">https://nvd.nist.gov/vuln/detail/CVE-2024-7041</a></li>\n<li><a href=\"https://huntr.com/bounties/6855227f-1237-47b8-8d37-29aad7ddec3a\">https://huntr.com/bounties/6855227f-1237-47b8-8d37-29aad7ddec3a</a></li>\n<li><a href=\"https://github.com/open-webui/open-webui/blob/main/backend/apps/webui/routers/memories.py#L71\">https://github.com/open-webui/open-webui/blob/main/backend/apps/webui/routers/memories.py#L71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xcvc-5hgv-phqg\">https://github.com/advisories/GHSA-xcvc-5hgv-phqg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xcvc-5hgv-phqg",
            "title": "[open-webui] open-webui Insecure Direct Object Reference (IDOR) vulnerability",
            "date_modified": "2024-10-09T22:10:38.000Z",
            "date_published": "2024-10-09T21:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xcvc-5hgv-phqg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In version v0.3.8 of open-webui/open-webui, the endpoint /api/pipelines/upload is vulnerable to arbitrary file write and delete due to unsanitized file.filename concatenation with CACHE_DIR. This vulnerability allows attackers to overwrite and delete system files, potentially leading to remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7037\">https://nvd.nist.gov/vuln/detail/CVE-2024-7037</a></li>\n<li><a href=\"https://huntr.com/bounties/8508db68-9c99-4b1c-828c-e1bfcacfb847\">https://huntr.com/bounties/8508db68-9c99-4b1c-828c-e1bfcacfb847</a></li>\n<li><a href=\"https://github.com/open-webui/open-webui/blob/main/backend/main.py#L1513\">https://github.com/open-webui/open-webui/blob/main/backend/main.py#L1513</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-54f4-v6v9-9q82\">https://github.com/advisories/GHSA-54f4-v6v9-9q82</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-54f4-v6v9-9q82",
            "title": "[open-webui] open-webui allows writing and deleting arbitrary files",
            "date_modified": "2024-10-09T22:09:17.000Z",
            "date_published": "2024-10-09T21:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-54f4-v6v9-9q82"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An information disclosure vulnerability exists in open-webui version 0.3.8. The vulnerability is related to the embedding model update feature under admin settings. When a user updates the model path, the system checks if the file exists and provides different error messages based on the existence and configuration of the file. This behavior allows an attacker to enumerate file names and traverse directories by observing the error messages, leading to potential exposure of sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-7038\">https://nvd.nist.gov/vuln/detail/CVE-2024-7038</a></li>\n<li><a href=\"https://huntr.com/bounties/f42cf72a-8015-44a6-81a9-c6332ef05afc\">https://huntr.com/bounties/f42cf72a-8015-44a6-81a9-c6332ef05afc</a></li>\n<li><a href=\"https://github.com/open-webui/open-webui/blob/eff736acd2e0bbbdd0eeca4cc209b216a1f23b6a/backend/apps/rag/main.py#L199\">https://github.com/open-webui/open-webui/blob/eff736acd2e0bbbdd0eeca4cc209b216a1f23b6a/backend/apps/rag/main.py#L199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mq92-jr35-ffpc\">https://github.com/advisories/GHSA-mq92-jr35-ffpc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mq92-jr35-ffpc",
            "title": "[open-webui] open-webui allows enumeration of file names and traversal of directories by observing the error messages",
            "date_modified": "2024-10-09T22:09:44.000Z",
            "date_published": "2024-10-09T21:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mq92-jr35-ffpc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>at_download.py</code> in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read arbitrary BLOBs (Files and Images) stored on custom content types via a crafted URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-5501\">https://nvd.nist.gov/vuln/detail/CVE-2012-5501</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt\">https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt</a></li>\n<li><a href=\"https://plone.org/products/plone-hotfix/releases/20121106\">https://plone.org/products/plone-hotfix/releases/20121106</a></li>\n<li><a href=\"https://plone.org/products/plone/security/advisories/20121106/17\">https://plone.org/products/plone/security/advisories/20121106/17</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/11/10/1\">http://www.openwall.com/lists/oss-security/2012/11/10/1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-43.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-43.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvhv-qwc8-r2pg\">https://github.com/advisories/GHSA-pvhv-qwc8-r2pg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvhv-qwc8-r2pg",
            "title": "[Plone] Plone Arbitrary File Read",
            "date_modified": "2024-10-09T21:37:40.000Z",
            "date_published": "2022-05-17T04:32:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvhv-qwc8-r2pg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in safe_html.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote authenticated users with permissions to edit content to inject arbitrary web script or HTML via unspecified vectors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-5502\">https://nvd.nist.gov/vuln/detail/CVE-2012-5502</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt\">https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt</a></li>\n<li><a href=\"https://plone.org/products/plone-hotfix/releases/20121106\">https://plone.org/products/plone-hotfix/releases/20121106</a></li>\n<li><a href=\"https://plone.org/products/plone/security/advisories/20121106/18\">https://plone.org/products/plone/security/advisories/20121106/18</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2012/11/10/1\">http://www.openwall.com/lists/oss-security/2012/11/10/1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-44.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-44.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr59-35cr-qf43\">https://github.com/advisories/GHSA-hr59-35cr-qf43</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr59-35cr-qf43",
            "title": "[Plone] Plone Cross-site scripting Vulnerability",
            "date_modified": "2024-10-09T21:36:35.000Z",
            "date_published": "2022-05-17T04:32:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr59-35cr-qf43"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}