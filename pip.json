{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>models/metadata.py in the pikepdf package 1.3.0 through 2.9.2 for Python allows XXE when parsing XMP metadata entries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-29421\">https://nvd.nist.gov/vuln/detail/CVE-2021-29421</a></li>\n<li><a href=\"https://github.com/pikepdf/pikepdf/commit/3f38f73218e5e782fe411ccbb3b44a793c0b343a\">https://github.com/pikepdf/pikepdf/commit/3f38f73218e5e782fe411ccbb3b44a793c0b343a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ccgm-3xw4-h5p8\">https://github.com/advisories/GHSA-ccgm-3xw4-h5p8</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pikepdf/PYSEC-2021-34.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pikepdf/PYSEC-2021-34.yaml</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/36P4HTLBJPO524WMQWW57N3QRF4RFSJG\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/36P4HTLBJPO524WMQWW57N3QRF4RFSJG</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3QFLBBYGEDNXJ7FS6PIWTVI4T4BUPGEQ\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3QFLBBYGEDNXJ7FS6PIWTVI4T4BUPGEQ</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ccgm-3xw4-h5p8",
            "title": "[pikepdf] Improper Restriction of XML External Entity Reference in pikepdf",
            "date_modified": "2024-10-09T19:51:43.000Z",
            "date_published": "2021-04-20T16:30:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ccgm-3xw4-h5p8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Session cookie is without Secure and HTTPOnly flags.</p>\n<h3 id=\"details\">Details</h3>\n<p>Please take a look at this part of code (PoC screenshot) or check code directly (provided in Occurrences section below)</p>\n<p><strong>Occurrences</strong>:\n<a href=\"https://github.com/Avaiga/taipy/blob/develop/frontend/taipy-gui/src/components/Taipy/Navigate.tsx#L67\">https://github.com/Avaiga/taipy/blob/develop/frontend/taipy-gui/src/components/Taipy/Navigate.tsx#L67</a></p>\n<p><strong>Proposed remediation:</strong> add Secure and HTTPOnly flags for cookies.</p>\n<p>It could be like this:\ndocument.cookie = <code>tprh=${tprh};path=/;Secure;HttpOnly;</code>;</p>\n<h3 id=\"poc\">PoC</h3>\n<p><strong>Screenshot</strong>:\n<img alt=\"image\" src=\"https://github.com/Avaiga/taipy/assets/18367606/ea7d1bbd-ba27-447f-932b-3d33ffc1a2e7\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p><strong>Secure</strong>: This flag indicates that the cookie should only be sent over secure HTTPS connections. Without this flag, the cookie will be sent over both HTTP and HTTPS connections, which could expose it to interception or tampering if the connection is not secure.\n<strong>HttpOnly:</strong> This flag prevents the cookie from being accessed by client-side JavaScript. It helps mitigate certain types of attacks, such as cross-site scripting (XSS), by preventing malicious scripts from accessing the cookie's value.</p>\n<p><strong>References</strong>\n    CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute <a href=\"https://cwe.mitre.org/data/definitions/614.html\">https://cwe.mitre.org/data/definitions/614.html</a>\n    CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag - <a href=\"https://cwe.mitre.org/data/definitions/1004.html\">https://cwe.mitre.org/data/definitions/1004.html</a>\n    OWASP - Secure Cookie Attribute - <a href=\"https://owasp.org/www-community/controls/SecureCookieAttribute\">https://owasp.org/www-community/controls/SecureCookieAttribute</a>\n    Cookie security flags - <a href=\"https://www.invicti.com/learn/cookie-security-flags/\">https://www.invicti.com/learn/cookie-security-flags/</a>\n    Cookie lack Secure flag - <a href=\"https://support.detectify.com/support/solutions/articles/48001048982-cookie-lack-secure-flag\">https://support.detectify.com/support/solutions/articles/48001048982-cookie-lack-secure-flag</a></p>\n<p><strong>Other</strong>:\nTitle: Encrypting the Web\nURL: <a href=\"https://www.eff.org/encrypt-the-web\">https://www.eff.org/encrypt-the-web</a></p>\n<p>Update (Required advisory information) - added severity, resource: \n<a href=\"https://portswigger.net/kb/issues/00500200_tls-cookie-without-secure-flag-set\">https://portswigger.net/kb/issues/00500200_tls-cookie-without-secure-flag-set</a></p>\n<p>Best regards,</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Avaiga/taipy/security/advisories/GHSA-r3jq-4r5c-j9hp\">https://github.com/Avaiga/taipy/security/advisories/GHSA-r3jq-4r5c-j9hp</a></li>\n<li><a href=\"https://github.com/Avaiga/taipy/blob/develop/frontend/taipy-gui/src/components/Taipy/Navigate.tsx#L67\">https://github.com/Avaiga/taipy/blob/develop/frontend/taipy-gui/src/components/Taipy/Navigate.tsx#L67</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3jq-4r5c-j9hp\">https://github.com/advisories/GHSA-r3jq-4r5c-j9hp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3jq-4r5c-j9hp",
            "title": "[taipy] Taipy has a Session Cookie without Secure and HTTPOnly flags",
            "date_modified": "2024-10-09T19:46:17.000Z",
            "date_published": "2024-08-27T19:50:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3jq-4r5c-j9hp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Buffer overflow in the <code>ImagingLibTiffDecode</code> function in <code>libImaging/TiffDecode.c</code> in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-0740\">https://nvd.nist.gov/vuln/detail/CVE-2016-0740</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/6dcbf5bd96b717c58d7b642949da8d323099928e\">https://github.com/python-pillow/Pillow/commit/6dcbf5bd96b717c58d7b642949da8d323099928e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hggx-3h72-49ww\">https://github.com/advisories/GHSA-hggx-3h72-49ww</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst\">https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-52\">https://security.gentoo.org/glsa/201612-52</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3499\">http://www.debian.org/security/2016/dsa-3499</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-5.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-5.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hggx-3h72-49ww",
            "title": "[pillow] Pillow Buffer overflow in ImagingLibTiffDecode",
            "date_modified": "2024-10-09T19:42:55.000Z",
            "date_published": "2018-07-24T20:03:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hggx-3h72-49ww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><code>concat</code> built-in can write over the bounds of the memory buffer that was allocated for it and thus overwrite existing valid data. The root cause is that the <code>build_IR</code> for <code>concat</code> doesn't properly adhere to the API of copy functions (for <code>&gt;=0.3.2</code> the <code>copy_bytes</code> function).</p>\n<p>A contract search was performed and no vulnerable contracts were found in production.</p>\n<p>Tracked in issue <a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>build_IR</code> allocates a new internal variable for the concatenation: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L534-L550</a></p>\n<p>Notice that the buffer is allocated for the <code>maxlen</code> + 1 word to actually hold the length of the array.</p>\n<p>Later the <code>copy_bytes</code> function is used to copy the actual source arguments to the destination: <a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/builtins/functions.py#L569-L572</a></p>\n<p>The <code>dst_data</code> is defined via:</p>\n<ul>\n<li><code>data ptr</code> - to skip the 1 word that holds the length</li>\n<li><code>offset</code>  - to skip the source arguments that were already written to the buffer<ul>\n<li>the <code>offset</code> is increased via: <code>[\"set\", ofst, [\"add\", ofst, arglen]]</code>, ie it is increased by the length of the source argument</li>\n</ul>\n</li>\n</ul>\n<p>Now, the <code>copy_bytes</code> function has multiple control flow paths, the following ones are of interest:</p>\n<ol>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L270-L273</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L301-L320</a></li>\n</ol>\n<p>Note that the function itself contains the following note: \n<a href=\"https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247\">https://github.com/vyperlang/vyper/blob/3b310d5292c4d1448e673d7b3adb223f9353260e/vyper/codegen/core.py#L245-L247</a></p>\n<p>That is we can ask for a copy of <code>1B</code> yet a whole word is copied.</p>\n<p>Consider the first interesting path -  if the <code>dst_data</code>'s distance to the end of the concat data buffer is <code>&lt; 32B</code>, the <code>copy_op = STORE(dst, LOAD(src))</code> from <code>copy_bytes</code> will result in buffer overflow as it essentially will <code>mstore</code> to <code>dst_data</code> the <code>mload</code> of the source (mload will load whole word and the distance of the <code>dst_data</code> to the word boundary is <code>&lt;32B</code>).</p>\n<p>From the two mentioned paths in <code>copy_bytes</code> it can be seen that both sources from memory and storage can cause the corruption.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The main attack vector that was found was when the <code>concat</code> is inside an <code>internal</code> function.  Suppose we have an <code>external</code> function that calls <code>internal</code> one. In such case the address space is divided such that the memory for the internal function is in <em>lower</em>  portion of the adr space. As such the buffer overflow can overwrite <em>valid</em> data of the caller.</p>\n<p>Here is a simple example:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\n@internal\ndef bar() -&gt; uint256:\n    sss: String[2] = concat(\"a\", \"b\") \n    return 1\n\n\n@external\ndef foo() -&gt; int256:\n    a: int256 = -1\n    b: uint256 = self.bar()\n    return a \n</code></pre>\n<p><code>foo</code> should clearly return <code>-1</code>, but it returns <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code></p>\n<p><code>-1</code> was used intentionally due to its bit structure but the value here is fairly irelevant. In this example during the second iteration of the for loop in the <code>build_IR</code> <code>mload</code> to <code>dst+1</code> will be executed (because len('a') == 1), thus the function will write <code>1B</code> over the bounds of the buffer. The string 'b' is stored such that its right-most byte is a zero byte. So a zero byte will be written over the bounds.  So when <code>-1</code> is considered it's left-most B will be overwritten to all 0. Therefore it can be seen: <code>452312848583266388373324160190187140051835877600158453279131187530910662655 == (2**248-1)</code> will output <code>True</code>.</p>\n<h4 id=\"ir\">IR</h4>\n<p>If we look at the contract's IR (vyper --no optimize -f ir), we see:</p>\n<pre><code># Line 30\n                          /* a: int256 = -1 */ [mstore, 320, -1 &lt;-1&gt;],\n</code></pre>\n<p>And for the second iteration of the loop in concat:</p>\n<pre><code> len,\n                        [mload, arg],\n                        [seq,\n                          [with,\n                            src,\n                            [add, arg, 32],\n                            [with,\n                              dst,\n                              [add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],\n                              [mstore, dst, [mload, src]]]],\n                          [set, concat_ofst, [add, concat_ofst, len]]]]],\n                    [mstore, 256 &lt;concat destination&gt;, concat_ofst],\n                    256 &lt;concat destination&gt;]],\n</code></pre>\n<p>So the address of the <code>int</code> is 320. </p>\n<p>The <code>dst</code> is defined as: <code>[add, [add, 256 &lt;concat destination&gt;, 32], concat_ofst],</code>.\nIn the second iteration the <code>concat_ofst</code> will be 1 because <code>len('a)==1</code> so <code>256+32+1 = 289</code>. Now this address will be <code>mstored</code> to - so the last mstored B will have the address <code>289+32=320</code> which clearly overlaps with the address of the <code>int a</code>.</p>\n<h4 id=\"poc-2\">PoC 2</h4>\n<p>Due to how <code>immutables</code> are handled, they can be corrupted too:</p>\n<pre><code class=\"language-python\">#@version ^0.3.9\n\ni: immutable(int256)\n\n@external\ndef __init__():\n    i = -1\n    s: String[2] = concat(\"a\", \"b\")\n\n@external\ndef foo() -&gt; int256:\n    return i\n</code></pre>\n<p>Output of calling <code>foo()</code> = <code>452312848583266388373324160190187140051835877600158453279131187530910662655</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The buffer overflow can result in the change of semantics of the contract. The overflow is length-dependent and thus it might go unnoticed during contract testing.</p>\n<p>However, certainly not all usages of <code>concat</code> will result in overwritten valid data as we require it to be in an <code>internal</code> function and close to the <code>return</code> statement where other memory allocations don't occur. </p>\n<h3 id=\"concluding-remarks\">Concluding remarks</h3>\n<p>The bug based on the fast path in <code>copy_bytes</code> was likely introduced in: <code>548d35d720fb6fd8efbdc0ce525bed259a73f0b9</code>. <code>git bisect</code> was used between v0.3.1 and v0.3.2, <code>forge test</code> was run and the test asserted that the function indeed returns -1.</p>\n<p>For the general case, <code>0.3.0</code> and <code>0.3.1</code> are also affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22419\">https://nvd.nist.gov/vuln/detail/CVE-2024-22419</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/issues/3737\">https://github.com/vyperlang/vyper/issues/3737</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f\">https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q8v-3gqq-4f8p\">https://github.com/advisories/GHSA-2q8v-3gqq-4f8p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p",
            "title": "[vyper] concat built-in can corrupt memory in vyper",
            "date_modified": "2024-10-09T19:41:22.000Z",
            "date_published": "2024-01-19T16:19:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q8v-3gqq-4f8p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using the built-in <code>extract32(b, start)</code>, if the <code>start</code> index provided has for side effect to update <code>b</code>, the byte array to extract <code>32</code> bytes from, it could be that some dirty memory is read and returned by <code>extract32</code>.</p>\n<p>As of v0.4.0 (specifically, commit <a href=\"https://github.com/vyperlang/vyper/commit/3d9c537142fb99b2672f21e2057f5f202cde194f\">https://github.com/vyperlang/vyper/commit/3d9c537142fb99b2672f21e2057f5f202cde194f</a>), the compiler will panic instead of generating bytecode.</p>\n<h3 id=\"details\">Details</h3>\n<p>Before evaluating <code>start</code>, the function <code>Extract32.build_IR</code> caches only:</p>\n<ul>\n<li>The pointer in memory/storage to <code>b</code>: <a href=\"https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918\">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918</a></li>\n<li>The length of <code>b</code>: <a href=\"https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922\">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922</a></li>\n</ul>\n<p>but do not cache the actual content of <code>b</code>. This means that if the evaluation of <code>start</code> changes <code>b</code>'s content and length, an outdated length will be used with the new content when extracting 32 bytes from <code>b</code>.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Calling the function <code>foo</code> of the following contract returns <code>b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\\x00\\x00789'</code> meaning that <code>extract32</code> accessed some dirty memory.</p>\n<pre><code class=\"language-Vyper\">var:Bytes[96]\n\n@internal\ndef bar() -&gt; uint256:\n    self.var = b'uuuuuuuuuuuuuuuuuuuuuuuuuuuuuu'\n    self.var = b''\n    return 3\n\n@external\ndef foo() -&gt; bytes32:\n    self.var = b'abcdefghijklmnopqrstuvwxyz123456789'\n    return extract32(self.var, self.bar(), output_type=bytes32)\n    # returns b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\\x00\\x00789'\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>For contracts that are affected, it means that calling <code>extract32</code> returns dirty memory bytes instead of some expected output.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-4hwq-4cpm-8vmx\">https://github.com/vyperlang/vyper/security/advisories/GHSA-4hwq-4cpm-8vmx</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918\">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922\">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24564\">https://nvd.nist.gov/vuln/detail/CVE-2024-24564</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/3d9c537142fb99b2672f21e2057f5f202cde194f\">https://github.com/vyperlang/vyper/commit/3d9c537142fb99b2672f21e2057f5f202cde194f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hwq-4cpm-8vmx\">https://github.com/advisories/GHSA-4hwq-4cpm-8vmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hwq-4cpm-8vmx",
            "title": "[vyper] Vyper's `extract32` can ready dirty memory",
            "date_modified": "2024-10-09T19:31:01.000Z",
            "date_published": "2024-02-26T20:11:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hwq-4cpm-8vmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A path traversal vulnerability inside of <code>LocalMode</code>'s <code>open_local_file</code> method allows an authenticated user with adequate permissions to download any <code>.txt</code> via the <code>ScreensController#show</code> on the web server COSMOS is running on (depending on the file permissions).</p>\n<p>Note: This CVE affects all OpenC3 COSMOS Editions</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue may lead to Information Disclosure.</p>\n<p><strong>NOTE:</strong> The complete advisory with much more information is added as <a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-8jxr-mccc-mwg8#advisory-comment-104903\">comment</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-8jxr-mccc-mwg8\">https://github.com/OpenC3/cosmos/security/advisories/GHSA-8jxr-mccc-mwg8</a></li>\n<li><a href=\"https://github.com/OpenC3/cosmos/commit/a34e61aea5a465f0ab3e57d833ae7ff4cafd710b\">https://github.com/OpenC3/cosmos/commit/a34e61aea5a465f0ab3e57d833ae7ff4cafd710b</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-46977\">https://nvd.nist.gov/vuln/detail/CVE-2024-46977</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/openc3/PYSEC-2024-101.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/openc3/PYSEC-2024-101.yaml</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2024-46977\">https://rubysec.com/advisories/CVE-2024-46977</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8jxr-mccc-mwg8\">https://github.com/advisories/GHSA-8jxr-mccc-mwg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8jxr-mccc-mwg8",
            "title": "[openc3] OpenC3 Path Traversal via screen controller (`GHSL-2024-127`)",
            "date_modified": "2024-10-09T18:32:30.000Z",
            "date_published": "2024-10-02T19:29:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8jxr-mccc-mwg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The login functionality contains a reflected cross-site scripting (XSS) vulnerability.</p>\n<p>Note: This CVE only affects Open Source Edition, and not OpenC3 COSMOS Enterprise Edition</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue may lead up to Remote Code Execution (RCE).</p>\n<p><strong>NOTE:</strong> The complete advisory with much more information is added as <a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g#advisory-comment-104904\">comment</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g\">https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g</a></li>\n<li><a href=\"https://github.com/OpenC3/cosmos/commit/762d7e0e93bdc2f340b1e42acccedc78994a576e\">https://github.com/OpenC3/cosmos/commit/762d7e0e93bdc2f340b1e42acccedc78994a576e</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43795\">https://nvd.nist.gov/vuln/detail/CVE-2024-43795</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3/CVE-2024-43795.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3/CVE-2024-43795.yml</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/openc3/PYSEC-2024-100.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/openc3/PYSEC-2024-100.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfj8-5pj7-2f9g\">https://github.com/advisories/GHSA-vfj8-5pj7-2f9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfj8-5pj7-2f9g",
            "title": "[openc3] OpenC3 Cross-site Scripting in Login functionality (`GHSL-2024-128`)",
            "date_modified": "2024-10-09T18:27:43.000Z",
            "date_published": "2024-10-02T19:29:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfj8-5pj7-2f9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in the getcolor function in utils.py of xhtml2pdf v0.2.13 allows attackers to cause a Regular expression Denial of Service (ReDOS) via supplying a crafted string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25885\">https://nvd.nist.gov/vuln/detail/CVE-2024-25885</a></li>\n<li><a href=\"https://gist.github.com/salvatore-abello/c88dd0027496774023ef36c7b576d206\">https://gist.github.com/salvatore-abello/c88dd0027496774023ef36c7b576d206</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj5c-hhrg-vv5h\">https://github.com/advisories/GHSA-jj5c-hhrg-vv5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj5c-hhrg-vv5h",
            "title": "[xhtml2pdf] xhtml2pdf Denial of Service via crafted string",
            "date_modified": "2024-10-09T17:01:39.000Z",
            "date_published": "2024-10-08T18:33:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj5c-hhrg-vv5h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45231\">https://nvd.nist.gov/vuln/detail/CVE-2024-45231</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\">https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca</a></li>\n<li><a href=\"https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2\">https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2</a></li>\n<li><a href=\"https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199\">https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rrqc-c2jx-6jgv\">https://github.com/advisories/GHSA-rrqc-c2jx-6jgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
            "title": "[Django] Django allows enumeration of user e-mail addresses",
            "date_modified": "2024-10-08T21:17:01.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45231\">https://nvd.nist.gov/vuln/detail/CVE-2024-45231</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\">https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca</a></li>\n<li><a href=\"https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2\">https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2</a></li>\n<li><a href=\"https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199\">https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rrqc-c2jx-6jgv\">https://github.com/advisories/GHSA-rrqc-c2jx-6jgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
            "title": "[Django] Django allows enumeration of user e-mail addresses",
            "date_modified": "2024-10-08T21:17:01.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45231\">https://nvd.nist.gov/vuln/detail/CVE-2024-45231</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\">https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca</a></li>\n<li><a href=\"https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2\">https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2</a></li>\n<li><a href=\"https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199\">https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rrqc-c2jx-6jgv\">https://github.com/advisories/GHSA-rrqc-c2jx-6jgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
            "title": "[Django] Django allows enumeration of user e-mail addresses",
            "date_modified": "2024-10-08T21:17:01.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.1 before 5.1.1, 5.0 before 5.0.9, and 4.2 before 4.2.16. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45230\">https://nvd.nist.gov/vuln/detail/CVE-2024-45230</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397\">https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397</a></li>\n<li><a href=\"https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b\">https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b</a></li>\n<li><a href=\"https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2\">https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hgc-2vfp-mqvc\">https://github.com/advisories/GHSA-5hgc-2vfp-mqvc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc",
            "title": "[Django] Django vulnerable to denial-of-service attack via the urlize() and urlizetrunc() template filters",
            "date_modified": "2024-10-09T19:22:15.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.1 before 5.1.1, 5.0 before 5.0.9, and 4.2 before 4.2.16. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45230\">https://nvd.nist.gov/vuln/detail/CVE-2024-45230</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397\">https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397</a></li>\n<li><a href=\"https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b\">https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b</a></li>\n<li><a href=\"https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2\">https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hgc-2vfp-mqvc\">https://github.com/advisories/GHSA-5hgc-2vfp-mqvc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc",
            "title": "[Django] Django vulnerable to denial-of-service attack via the urlize() and urlizetrunc() template filters",
            "date_modified": "2024-10-09T19:22:15.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.1 before 5.1.1, 5.0 before 5.0.9, and 4.2 before 4.2.16. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45230\">https://nvd.nist.gov/vuln/detail/CVE-2024-45230</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\">https://www.djangoproject.com/weblog/2024/sep/03/security-releases</a></li>\n<li><a href=\"https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397\">https://github.com/django/django/commit/022ab0a75c76ab2ea31dfcc5f2cf5501e378d397</a></li>\n<li><a href=\"https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b\">https://github.com/django/django/commit/813de2672bd7361e9a453ab62cd6e52f96b6525b</a></li>\n<li><a href=\"https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2\">https://github.com/django/django/commit/d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-102.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hgc-2vfp-mqvc\">https://github.com/advisories/GHSA-5hgc-2vfp-mqvc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc",
            "title": "[Django] Django vulnerable to denial-of-service attack via the urlize() and urlizetrunc() template filters",
            "date_modified": "2024-10-09T19:22:15.000Z",
            "date_published": "2024-10-08T18:33:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hgc-2vfp-mqvc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is a negative-offset memcpy with an invalid size.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25290\">https://nvd.nist.gov/vuln/detail/CVE-2021-25290</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/86f02f7c70862a0954bfe8133736d352db978eaa\">https://github.com/python-pillow/Pillow/commit/86f02f7c70862a0954bfe8133736d352db978eaa</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202107-33\">https://security.gentoo.org/glsa/202107-33</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html\">https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/e25be1e33dc526bfd1094bc778a54d8e29bf66c9\">https://github.com/python-pillow/Pillow/commit/e25be1e33dc526bfd1094bc778a54d8e29bf66c9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xjq-8fcg-g5hw\">https://github.com/advisories/GHSA-8xjq-8fcg-g5hw</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-36.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-36.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xjq-8fcg-g5hw",
            "title": "[pillow] Out-of-bounds Write in Pillow",
            "date_modified": "2024-10-08T13:11:58.000Z",
            "date_published": "2021-03-29T16:35:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xjq-8fcg-g5hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Pillow before 8.1.1. TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25289\">https://nvd.nist.gov/vuln/detail/CVE-2021-25289</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/3fee28eb9479bf7d59e0fa08068f9cc4a6e2f04c\">https://github.com/python-pillow/Pillow/commit/3fee28eb9479bf7d59e0fa08068f9cc4a6e2f04c</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202107-33\">https://security.gentoo.org/glsa/202107-33</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cbfdde7b1f2295059a20a539ee9960f0bec7b299\">https://github.com/python-pillow/Pillow/commit/cbfdde7b1f2295059a20a539ee9960f0bec7b299</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-57h3-9rgr-c24m\">https://github.com/advisories/GHSA-57h3-9rgr-c24m</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-35.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-35.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-57h3-9rgr-c24m",
            "title": "[pillow] Out of bounds write in Pillow",
            "date_modified": "2024-10-08T13:11:34.000Z",
            "date_published": "2021-03-29T16:35:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-57h3-9rgr-c24m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Buffer overflow in the <code>ImagingPcdDecode</code> function in <code>PcdDecode.c</code> in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-2533\">https://nvd.nist.gov/vuln/detail/CVE-2016-2533</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/pull/1706\">https://github.com/python-pillow/Pillow/pull/1706</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/5bdf54b5a76b54fb00bd05f2d733e0a4173eefc9#diff-8ff6909c159597e22288ad818938fd6b\">https://github.com/python-pillow/Pillow/commit/5bdf54b5a76b54fb00bd05f2d733e0a4173eefc9#diff-8ff6909c159597e22288ad818938fd6b</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/ae453aa18b66af54e7ff716f4ccb33adca60afd4#diff-8ff6909c159597e22288ad818938fd6b\">https://github.com/python-pillow/Pillow/commit/ae453aa18b66af54e7ff716f4ccb33adca60afd4#diff-8ff6909c159597e22288ad818938fd6b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3c5c-7235-994j\">https://github.com/advisories/GHSA-3c5c-7235-994j</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-52\">https://security.gentoo.org/glsa/201612-52</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3499\">http://www.debian.org/security/2016/dsa-3499</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/02/02/5\">http://www.openwall.com/lists/oss-security/2016/02/02/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/02/22/2\">http://www.openwall.com/lists/oss-security/2016/02/22/2</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/bulletinjan2016-2867206.html\">http://www.oracle.com/technetwork/topics/security/bulletinjan2016-2867206.html</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst?plain=1#L53\">https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst?plain=1#L53</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-19.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-19.yaml</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst\">https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3c5c-7235-994j",
            "title": "[pillow] Pillow buffer overflow in ImagingPcdDecode",
            "date_modified": "2024-10-08T13:09:01.000Z",
            "date_published": "2018-07-24T20:15:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3c5c-7235-994j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Integer overflow in the <code>ImagingResampleHorizontal</code> function in <code>libImaging/Resample.c</code> in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-4009\">https://nvd.nist.gov/vuln/detail/CVE-2016-4009</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/pull/1714\">https://github.com/python-pillow/Pillow/pull/1714</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/4e0d9b0b9740d258ade40cce248c93777362ac1e\">https://github.com/python-pillow/Pillow/commit/4e0d9b0b9740d258ade40cce248c93777362ac1e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hvr8-466p-75rh\">https://github.com/advisories/GHSA-hvr8-466p-75rh</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst\">https://github.com/python-pillow/Pillow/blob/c3cb690fed5d4bf0c45576759de55d054916c165/CHANGES.rst</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-52\">https://security.gentoo.org/glsa/201612-52</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/86064\">http://www.securityfocus.com/bid/86064</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-7.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-7.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hvr8-466p-75rh",
            "title": "[pillow] Pillow Integer overflow in ImagingResampleHorizontal",
            "date_modified": "2024-10-08T13:06:58.000Z",
            "date_published": "2018-07-24T20:15:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hvr8-466p-75rh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the <code>Image.core.map_buffer</code> in <code>map.c</code> component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9189\">https://nvd.nist.gov/vuln/detail/CVE-2016-9189</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/issues/2105\">https://github.com/python-pillow/Pillow/issues/2105</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/pull/2146/commits/c50ebe6459a131a1ea8ca531f10da616d3ceaa0f\">https://github.com/python-pillow/Pillow/pull/2146/commits/c50ebe6459a131a1ea8ca531f10da616d3ceaa0f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rwr3-c2q8-gm56\">https://github.com/advisories/GHSA-rwr3-c2q8-gm56</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-52\">https://security.gentoo.org/glsa/201612-52</a></li>\n<li><a href=\"http://pillow.readthedocs.io/en/3.4.x/releasenotes/3.3.2.html\">http://pillow.readthedocs.io/en/3.4.x/releasenotes/3.3.2.html</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3710\">http://www.debian.org/security/2016/dsa-3710</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/94234\">http://www.securityfocus.com/bid/94234</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-8.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2016-8.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rwr3-c2q8-gm56",
            "title": "[pillow] Pillow Integer overflow in Map.c",
            "date_modified": "2024-10-08T13:06:31.000Z",
            "date_published": "2018-07-24T20:08:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rwr3-c2q8-gm56"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35653\">https://nvd.nist.gov/vuln/detail/CVE-2020-35653</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/index.html\">https://pillow.readthedocs.io/en/stable/releasenotes/index.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html\">https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/2f409261eb1228e166868f8f0b5da5cda52e55bf\">https://github.com/python-pillow/Pillow/commit/2f409261eb1228e166868f8f0b5da5cda52e55bf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5g8-5qq7-938w\">https://github.com/advisories/GHSA-f5g8-5qq7-938w</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-69.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2021-69.yaml</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5g8-5qq7-938w",
            "title": "[pillow] Pillow Out-of-bounds Read",
            "date_modified": "2024-10-08T13:05:46.000Z",
            "date_published": "2021-03-18T19:55:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5g8-5qq7-938w"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}