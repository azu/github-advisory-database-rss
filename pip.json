{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Directory traversal vulnerability in patch.py in Mercurial before 1.0.2 allows user-assisted attackers to modify arbitrary files via \"..\" (dot dot) sequences in a patch file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2008-2942\">https://nvd.nist.gov/vuln/detail/CVE-2008-2942</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/43551\">https://exchange.xforce.ibmcloud.com/vulnerabilities/43551</a></li>\n<li><a href=\"https://issues.rpath.com/browse/RPL-2633\">https://issues.rpath.com/browse/RPL-2633</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2008-07/msg00006.html\">http://lists.opensuse.org/opensuse-security-announce/2008-07/msg00006.html</a></li>\n<li><a href=\"http://secunia.com/advisories/31108\">http://secunia.com/advisories/31108</a></li>\n<li><a href=\"http://secunia.com/advisories/31110\">http://secunia.com/advisories/31110</a></li>\n<li><a href=\"http://secunia.com/advisories/31167\">http://secunia.com/advisories/31167</a></li>\n<li><a href=\"http://security.gentoo.org/glsa/glsa-200807-09.xml\">http://security.gentoo.org/glsa/glsa-200807-09.xml</a></li>\n<li><a href=\"http://wiki.rpath.com/Advisories:rPSA-2008-0211\">http://wiki.rpath.com/Advisories:rPSA-2008-0211</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2008/06/30/1\">http://www.openwall.com/lists/oss-security/2008/06/30/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2008/07/01/1\">http://www.openwall.com/lists/oss-security/2008/07/01/1</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/493881/100/0/threaded\">http://www.securityfocus.com/archive/1/493881/100/0/threaded</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/30072\">http://www.securityfocus.com/bid/30072</a></li>\n<li><a href=\"http://www.selenic.com/hg/rev/87c704ac92d4\">http://www.selenic.com/hg/rev/87c704ac92d4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v2gw-x5jf-pgwv\">https://github.com/advisories/GHSA-v2gw-x5jf-pgwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v2gw-x5jf-pgwv",
            "title": "[mercurial] Mercurial Directory traversal vulnerability",
            "date_modified": "2023-09-22T22:26:38.000Z",
            "date_published": "2022-05-01T23:55:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v2gw-x5jf-pgwv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Plone 2.5 through 2.5.4 and 3.0 through 3.0.2 allows remote attackers to execute arbitrary Python code via network data containing pickled objects for the (1) statusmessages or (2) linkintegrity module, which the module unpickles and executes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2007-5741\">https://nvd.nist.gov/vuln/detail/CVE-2007-5741</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/38288\">https://exchange.xforce.ibmcloud.com/vulnerabilities/38288</a></li>\n<li><a href=\"http://www.debian.org/security/2007/dsa-1405\">http://www.debian.org/security/2007/dsa-1405</a></li>\n<li><a href=\"https://web.archive.org/web/20080507055819/https://plone.org/about/security/advisories/cve-2007-5741\">https://web.archive.org/web/20080507055819/https://plone.org/about/security/advisories/cve-2007-5741</a></li>\n<li><a href=\"https://web.archive.org/web/20080517012557/http://www.securityfocus.com/bid/26354\">https://web.archive.org/web/20080517012557/http://www.securityfocus.com/bid/26354</a></li>\n<li><a href=\"https://web.archive.org/web/20080906150436/http://www.securityfocus.com/archive/1/483343/100/0/threaded\">https://web.archive.org/web/20080906150436/http://www.securityfocus.com/archive/1/483343/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hf26-vvmx-x8c8\">https://github.com/advisories/GHSA-hf26-vvmx-x8c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hf26-vvmx-x8c8",
            "title": "[plone] Plone Arbitrary Code Execution via Unsafe Handling of Pickles",
            "date_modified": "2023-09-22T21:57:48.000Z",
            "date_published": "2022-05-01T18:36:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hf26-vvmx-x8c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Plone 2.5 through 2.5.4 and 3.0 through 3.0.2 allows remote attackers to execute arbitrary Python code via network data containing pickled objects for the (1) statusmessages or (2) linkintegrity module, which the module unpickles and executes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2007-5741\">https://nvd.nist.gov/vuln/detail/CVE-2007-5741</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/38288\">https://exchange.xforce.ibmcloud.com/vulnerabilities/38288</a></li>\n<li><a href=\"http://www.debian.org/security/2007/dsa-1405\">http://www.debian.org/security/2007/dsa-1405</a></li>\n<li><a href=\"https://web.archive.org/web/20080507055819/https://plone.org/about/security/advisories/cve-2007-5741\">https://web.archive.org/web/20080507055819/https://plone.org/about/security/advisories/cve-2007-5741</a></li>\n<li><a href=\"https://web.archive.org/web/20080517012557/http://www.securityfocus.com/bid/26354\">https://web.archive.org/web/20080517012557/http://www.securityfocus.com/bid/26354</a></li>\n<li><a href=\"https://web.archive.org/web/20080906150436/http://www.securityfocus.com/archive/1/483343/100/0/threaded\">https://web.archive.org/web/20080906150436/http://www.securityfocus.com/archive/1/483343/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hf26-vvmx-x8c8\">https://github.com/advisories/GHSA-hf26-vvmx-x8c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hf26-vvmx-x8c8",
            "title": "[plone] Plone Arbitrary Code Execution via Unsafe Handling of Pickles",
            "date_modified": "2023-09-22T21:57:48.000Z",
            "date_published": "2022-05-01T18:36:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hf26-vvmx-x8c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The FTP backend for Duplicity before 0.4.9 sends the password as a command line argument when calling ncftp, which might allow local users to read the password by listing the process and its arguments.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2007-5201\">https://nvd.nist.gov/vuln/detail/CVE-2007-5201</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=293081\">https://bugzilla.redhat.com/show_bug.cgi?id=293081</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2008-February/msg00356.html\">https://www.redhat.com/archives/fedora-package-announce/2008-February/msg00356.html</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2008-February/msg00445.html\">https://www.redhat.com/archives/fedora-package-announce/2008-February/msg00445.html</a></li>\n<li><a href=\"http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=442840\">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=442840</a></li>\n<li><a href=\"https://web.archive.org/web/20080118045107/https://duplicity.nongnu.org/CHANGELOG\">https://web.archive.org/web/20080118045107/https://duplicity.nongnu.org/CHANGELOG</a></li>\n<li><a href=\"https://web.archive.org/web/20200228164800/http://www.securityfocus.com/bid/27771\">https://web.archive.org/web/20200228164800/http://www.securityfocus.com/bid/27771</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxcw-rqxc-hj85\">https://github.com/advisories/GHSA-wxcw-rqxc-hj85</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxcw-rqxc-hj85",
            "title": "[duplicity] FTP backend for Duplicity Discloses Passwords to Process Listing",
            "date_modified": "2023-09-22T21:42:54.000Z",
            "date_published": "2022-05-01T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxcw-rqxc-hj85"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in pgAdmin. This issue occurs when the pgAdmin server HTTP API validates the path a user selects to external PostgreSQL utilities such as pg_dump and pg_restore. Versions of pgAdmin prior to 7.7 failed to properly control the server code executed on this API, allowing an authenticated user to run arbitrary commands on the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-5002\">https://nvd.nist.gov/vuln/detail/CVE-2023-5002</a></li>\n<li><a href=\"https://github.com/pgadmin-org/pgadmin4/issues/6763\">https://github.com/pgadmin-org/pgadmin4/issues/6763</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2239164\">https://bugzilla.redhat.com/show_bug.cgi?id=2239164</a></li>\n<li><a href=\"https://github.com/pgadmin-org/pgadmin4/commit/35f05e49b3632a0a674b9b36535a7fe2d93dd0c2\">https://github.com/pgadmin-org/pgadmin4/commit/35f05e49b3632a0a674b9b36535a7fe2d93dd0c2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghp8-52vx-77j4\">https://github.com/advisories/GHSA-ghp8-52vx-77j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghp8-52vx-77j4",
            "title": "[pgadmin4] pgAdmin failed to properly control the server code ",
            "date_modified": "2023-09-22T20:35:38.000Z",
            "date_published": "2023-09-22T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghp8-52vx-77j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The use of Python's marshal module to handle unchecked input in a public method on <code>PortalFolder</code> objects can lead to an unauthenticated denial of service and crash situation. The code in question is exposed by all portal software built on top of <code>Products.CMFCore</code>, such as Plone. All deployments are vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The code has been fixed in <code>Products.CMFCore</code> version 3.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can make the affected <code>decodeFolderFilter</code> method unreachable by editing the <code>PortalFolder.py</code> module in <code>Products.CMFCore</code> by hand and then restarting Zope. Go to line 233 of <code>PortalFolder.py</code> and remove both the <code>@security.public</code> decorator for <code>decodeFolderFilter</code> as well as the method's entire docstring. This is safe because the method is not actually used by current code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Products.CMFCore security advisory <a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks go to Nicolas VERDIER from onepoint.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/zopefoundation/Products.CMFCore/issues\">Products.CMFCore issue tracker</a></li>\n<li>Email us at <a href=\"mailto:security@plone.org\">security@plone.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36814\">https://nvd.nist.gov/vuln/detail/CVE-2023-36814</a></li>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5\">https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml</a></li>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/commit/c1847a9042abe7965271fa73762dfe091b576de\">https://github.com/zopefoundation/Products.CMFCore/commit/c1847a9042abe7965271fa73762dfe091b576de</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87",
            "title": "[Products.CMFCore] Products.CMFCore unauthenticated denial of service and crash via unchecked use of input with Python's marshal module",
            "date_modified": "2023-09-22T18:23:50.000Z",
            "date_published": "2023-07-05T22:42:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The use of Python's marshal module to handle unchecked input in a public method on <code>PortalFolder</code> objects can lead to an unauthenticated denial of service and crash situation. The code in question is exposed by all portal software built on top of <code>Products.CMFCore</code>, such as Plone. All deployments are vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The code has been fixed in <code>Products.CMFCore</code> version 3.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can make the affected <code>decodeFolderFilter</code> method unreachable by editing the <code>PortalFolder.py</code> module in <code>Products.CMFCore</code> by hand and then restarting Zope. Go to line 233 of <code>PortalFolder.py</code> and remove both the <code>@security.public</code> decorator for <code>decodeFolderFilter</code> as well as the method's entire docstring. This is safe because the method is not actually used by current code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Products.CMFCore security advisory <a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks go to Nicolas VERDIER from onepoint.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/zopefoundation/Products.CMFCore/issues\">Products.CMFCore issue tracker</a></li>\n<li>Email us at <a href=\"mailto:security@plone.org\">security@plone.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36814\">https://nvd.nist.gov/vuln/detail/CVE-2023-36814</a></li>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5\">https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml</a></li>\n<li><a href=\"https://github.com/zopefoundation/Products.CMFCore/commit/c1847a9042abe7965271fa73762dfe091b576de\">https://github.com/zopefoundation/Products.CMFCore/commit/c1847a9042abe7965271fa73762dfe091b576de</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hpj-8rhv-9x87\">https://github.com/advisories/GHSA-4hpj-8rhv-9x87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87",
            "title": "[Products.CMFCore] Products.CMFCore unauthenticated denial of service and crash via unchecked use of input with Python's marshal module",
            "date_modified": "2023-09-22T18:23:50.000Z",
            "date_published": "2023-07-05T22:42:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hpj-8rhv-9x87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images uploaded in user portraits.</p>\n<p>Note that a page that uses an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an SVG image as user portrait, and then trick a user into following a link to this portrait.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch will be released in <code>plone.restapi</code> 8.43.3. This version is good for Plone 6.0, and for Plone 5.2 on Python 3.</p>\n<p>In <code>plone.restapi</code> 7 or earlier there was no <code>@portrait</code> endpoint yet, so there is nothing to fix in that version. It is still vulnerable to this attack, and needs a <a href=\"https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v\">fix in Zope 4</a>. These two vulnerabilities share the same CVE: CVE-2023-42458.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You could remove the portrait field from the member data schema, and possibly remove all portraits that are already in the database, but this seems a bit drastic.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.restapi/security/advisories/GHSA-hc5c-r8m5-2gfh\">https://github.com/plone/plone.restapi/security/advisories/GHSA-hc5c-r8m5-2gfh</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v\">https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v</a></li>\n<li><a href=\"https://github.com/plone/plone.restapi/commit/5f44c23ac69db7d6d933d77f177e07603cf05f8b\">https://github.com/plone/plone.restapi/commit/5f44c23ac69db7d6d933d77f177e07603cf05f8b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hc5c-r8m5-2gfh\">https://github.com/advisories/GHSA-hc5c-r8m5-2gfh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hc5c-r8m5-2gfh",
            "title": "[plone.restapi] plone.restapi vulnerable to Stored Cross Site Scripting with SVG image in user portrait",
            "date_modified": "2023-09-21T17:16:44.000Z",
            "date_published": "2023-09-21T17:16:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hc5c-r8m5-2gfh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images. A <a href=\"https://github.com/plone/Products.PloneHotfix20210518\">security hotfix from 2021</a> already partially fixed this,  by making sure SVG images are always downloaded instead of shown inline. But the same problem still exists for scales of SVG images.</p>\n<p>Note that an image tag with an SVG image as source is not vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of <code>plone.namedfile</code> are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in various <code>plone.namedfile</code> releases:</p>\n<ul>\n<li>5.6.1 (for Plone 5.2)</li>\n<li>6.0.3 (for Plone 6.0.0-6.0.4)</li>\n<li>6.1.3 (for Plone 6.0.5-6.0.6)</li>\n<li>6.2.1 (for Plone 6.0.7)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41048\">https://nvd.nist.gov/vuln/detail/CVE-2023-41048</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167\">https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a\">https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9\">https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60\">https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60</a></li>\n<li><a href=\"https://github.com/plone/Products.PloneHotfix20210518\">https://github.com/plone/Products.PloneHotfix20210518</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x",
            "title": "[plone.namedfile] plone.namedfile vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T19:52:25.000Z",
            "date_published": "2023-09-21T17:14:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images. A <a href=\"https://github.com/plone/Products.PloneHotfix20210518\">security hotfix from 2021</a> already partially fixed this,  by making sure SVG images are always downloaded instead of shown inline. But the same problem still exists for scales of SVG images.</p>\n<p>Note that an image tag with an SVG image as source is not vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of <code>plone.namedfile</code> are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in various <code>plone.namedfile</code> releases:</p>\n<ul>\n<li>5.6.1 (for Plone 5.2)</li>\n<li>6.0.3 (for Plone 6.0.0-6.0.4)</li>\n<li>6.1.3 (for Plone 6.0.5-6.0.6)</li>\n<li>6.2.1 (for Plone 6.0.7)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41048\">https://nvd.nist.gov/vuln/detail/CVE-2023-41048</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167\">https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a\">https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9\">https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60\">https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60</a></li>\n<li><a href=\"https://github.com/plone/Products.PloneHotfix20210518\">https://github.com/plone/Products.PloneHotfix20210518</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x",
            "title": "[plone.namedfile] plone.namedfile vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T19:52:25.000Z",
            "date_published": "2023-09-21T17:14:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images. A <a href=\"https://github.com/plone/Products.PloneHotfix20210518\">security hotfix from 2021</a> already partially fixed this,  by making sure SVG images are always downloaded instead of shown inline. But the same problem still exists for scales of SVG images.</p>\n<p>Note that an image tag with an SVG image as source is not vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of <code>plone.namedfile</code> are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in various <code>plone.namedfile</code> releases:</p>\n<ul>\n<li>5.6.1 (for Plone 5.2)</li>\n<li>6.0.3 (for Plone 6.0.0-6.0.4)</li>\n<li>6.1.3 (for Plone 6.0.5-6.0.6)</li>\n<li>6.2.1 (for Plone 6.0.7)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41048\">https://nvd.nist.gov/vuln/detail/CVE-2023-41048</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167\">https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a\">https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9\">https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60\">https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60</a></li>\n<li><a href=\"https://github.com/plone/Products.PloneHotfix20210518\">https://github.com/plone/Products.PloneHotfix20210518</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x",
            "title": "[plone.namedfile] plone.namedfile vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T19:52:25.000Z",
            "date_published": "2023-09-21T17:14:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images. A <a href=\"https://github.com/plone/Products.PloneHotfix20210518\">security hotfix from 2021</a> already partially fixed this,  by making sure SVG images are always downloaded instead of shown inline. But the same problem still exists for scales of SVG images.</p>\n<p>Note that an image tag with an SVG image as source is not vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of <code>plone.namedfile</code> are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in various <code>plone.namedfile</code> releases:</p>\n<ul>\n<li>5.6.1 (for Plone 5.2)</li>\n<li>6.0.3 (for Plone 6.0.0-6.0.4)</li>\n<li>6.1.3 (for Plone 6.0.5-6.0.6)</li>\n<li>6.2.1 (for Plone 6.0.7)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/plone/plone.namedfile/security/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41048\">https://nvd.nist.gov/vuln/detail/CVE-2023-41048</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167\">https://github.com/plone/plone.namedfile/commit/188f66a4577021cf8f2bf7c0f5150f9b9573f167</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a\">https://github.com/plone/plone.namedfile/commit/217d6ce847b7171bf1b73fcb6c08010eb449216a</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9\">https://github.com/plone/plone.namedfile/commit/f0f911f2a72b2e5c923dc2ab9179319cc47788f9</a></li>\n<li><a href=\"https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60\">https://github.com/plone/plone.namedfile/commit/ff5269fb4c79f4eb91dd934561b8824a49a03b60</a></li>\n<li><a href=\"https://github.com/plone/Products.PloneHotfix20210518\">https://github.com/plone/Products.PloneHotfix20210518</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj7c-jrv4-c65x\">https://github.com/advisories/GHSA-jj7c-jrv4-c65x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x",
            "title": "[plone.namedfile] plone.namedfile vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T19:52:25.000Z",
            "date_published": "2023-09-21T17:14:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj7c-jrv4-c65x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Gradio v3.27.0 was discovered to contain an arbitrary file upload vulnerability via the <code>/upload</code> interface.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41626\">https://nvd.nist.gov/vuln/detail/CVE-2023-41626</a></li>\n<li><a href=\"https://gist.github.com/impose1/590472eb0544ef1ec36c8a5a40122adb\">https://gist.github.com/impose1/590472eb0544ef1ec36c8a5a40122adb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v4q9-qgqf-7jwp\">https://github.com/advisories/GHSA-v4q9-qgqf-7jwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v4q9-qgqf-7jwp",
            "title": "[gradio] Gradio arbitrary file upload vulnerability",
            "date_modified": "2023-09-21T17:12:02.000Z",
            "date_published": "2023-09-16T00:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v4q9-qgqf-7jwp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 2.5-41.0.3 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in <a href=\"https://www.openssl.org/news/secadv/20230908.txt\">https://www.openssl.org/news/secadv/20230908.txt</a>.</p>\n<p>If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/security/advisories/GHSA-v8gr-m533-ghj9\">https://github.com/pyca/cryptography/security/advisories/GHSA-v8gr-m533-ghj9</a></li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/fc11bce6930e591ce26a2317b31b9ce2b3e25512\">https://github.com/pyca/cryptography/commit/fc11bce6930e591ce26a2317b31b9ce2b3e25512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8gr-m533-ghj9\">https://github.com/advisories/GHSA-v8gr-m533-ghj9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8gr-m533-ghj9",
            "title": "[cryptography] Vulnerable OpenSSL included in cryptography wheels",
            "date_modified": "2023-09-21T17:07:01.000Z",
            "date_published": "2023-09-21T17:07:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8gr-m533-ghj9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the <code>++api++</code> traverser is accidentally used multiple times in a url, handling it takes increasingly longer, making the server less responsive.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in <code>plone.rest</code> 2.0.1 and 3.0.1.  Series 1.x is not affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In your frontend web server (nginx, Apache) you can redirect <code>/++api++/++api++</code> to <code>/++api++</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.rest/security/advisories/GHSA-h6rp-mprm-xgcq\">https://github.com/plone/plone.rest/security/advisories/GHSA-h6rp-mprm-xgcq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42457\">https://nvd.nist.gov/vuln/detail/CVE-2023-42457</a></li>\n<li><a href=\"https://github.com/plone/plone.rest/commit/43b4a7e86206e237e1de5ca3817ed071575882f7\">https://github.com/plone/plone.rest/commit/43b4a7e86206e237e1de5ca3817ed071575882f7</a></li>\n<li><a href=\"https://github.com/plone/plone.rest/commit/77846a9842889b24f35e8bedc2e9d461388d3302\">https://github.com/plone/plone.rest/commit/77846a9842889b24f35e8bedc2e9d461388d3302</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6rp-mprm-xgcq\">https://github.com/advisories/GHSA-h6rp-mprm-xgcq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6rp-mprm-xgcq",
            "title": "[plone.rest] plone.rest vulnerable to Denial of Service when ++api++ is used many times",
            "date_modified": "2023-09-22T20:05:49.000Z",
            "date_published": "2023-09-21T17:06:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6rp-mprm-xgcq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When the <code>++api++</code> traverser is accidentally used multiple times in a url, handling it takes increasingly longer, making the server less responsive.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in <code>plone.rest</code> 2.0.1 and 3.0.1.  Series 1.x is not affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In your frontend web server (nginx, Apache) you can redirect <code>/++api++/++api++</code> to <code>/++api++</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/plone/plone.rest/security/advisories/GHSA-h6rp-mprm-xgcq\">https://github.com/plone/plone.rest/security/advisories/GHSA-h6rp-mprm-xgcq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42457\">https://nvd.nist.gov/vuln/detail/CVE-2023-42457</a></li>\n<li><a href=\"https://github.com/plone/plone.rest/commit/43b4a7e86206e237e1de5ca3817ed071575882f7\">https://github.com/plone/plone.rest/commit/43b4a7e86206e237e1de5ca3817ed071575882f7</a></li>\n<li><a href=\"https://github.com/plone/plone.rest/commit/77846a9842889b24f35e8bedc2e9d461388d3302\">https://github.com/plone/plone.rest/commit/77846a9842889b24f35e8bedc2e9d461388d3302</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6rp-mprm-xgcq\">https://github.com/advisories/GHSA-h6rp-mprm-xgcq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6rp-mprm-xgcq",
            "title": "[plone.rest] plone.rest vulnerable to Denial of Service when ++api++ is used many times",
            "date_modified": "2023-09-22T20:05:49.000Z",
            "date_published": "2023-09-21T17:06:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6rp-mprm-xgcq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images.</p>\n<p>Note that an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of Zope are impacted on sites that allow untrusted users to upload images.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in Zope 4.8.10 and 5.8.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure the \"Add Documents, Images, and Files\" permission is only assigned to trusted roles. By default only the Manager has this permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v\">https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088\">https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/603b0a12881c90a072a7a65e32d47ed898ce37cb\">https://github.com/zopefoundation/Zope/commit/603b0a12881c90a072a7a65e32d47ed898ce37cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42458\">https://nvd.nist.gov/vuln/detail/CVE-2023-42458</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wm8q-9975-xh5v\">https://github.com/advisories/GHSA-wm8q-9975-xh5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wm8q-9975-xh5v",
            "title": "[Zope] Zope vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T18:47:39.000Z",
            "date_published": "2023-09-21T17:04:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wm8q-9975-xh5v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a stored cross site scripting vulnerability for SVG images.</p>\n<p>Note that an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link.</p>\n<p>All versions of Zope are impacted on sites that allow untrusted users to upload images.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches will be released in Zope 4.8.10 and 5.8.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure the \"Add Documents, Images, and Files\" permission is only assigned to trusted roles. By default only the Manager has this permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v\">https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088\">https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088</a></li>\n<li><a href=\"https://github.com/zopefoundation/Zope/commit/603b0a12881c90a072a7a65e32d47ed898ce37cb\">https://github.com/zopefoundation/Zope/commit/603b0a12881c90a072a7a65e32d47ed898ce37cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42458\">https://nvd.nist.gov/vuln/detail/CVE-2023-42458</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/09/22/2\">http://www.openwall.com/lists/oss-security/2023/09/22/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wm8q-9975-xh5v\">https://github.com/advisories/GHSA-wm8q-9975-xh5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wm8q-9975-xh5v",
            "title": "[Zope] Zope vulnerable to Stored Cross Site Scripting with SVG images",
            "date_modified": "2023-09-22T18:47:39.000Z",
            "date_published": "2023-09-21T17:04:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wm8q-9975-xh5v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>paraparser in ReportLab before 3.5.31 allows remote code execution because start_unichar in paraparser.py evaluates untrusted user input in a unichar element in a crafted XML document with '&lt;unichar code=\"' followed by arbitrary Python code, a similar issue to CVE-2019-17626.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19450\">https://nvd.nist.gov/vuln/detail/CVE-2019-19450</a></li>\n<li><a href=\"https://pastebin.com/5MicRrr4\">https://pastebin.com/5MicRrr4</a></li>\n<li><a href=\"https://github.com/MrBitBucket/reportlab-mirror/blob/master/CHANGES.md#release-353115102019\">https://github.com/MrBitBucket/reportlab-mirror/blob/master/CHANGES.md#release-353115102019</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pj98-2xf6-cff5\">https://github.com/advisories/GHSA-pj98-2xf6-cff5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pj98-2xf6-cff5",
            "title": "[reportlab] ReportLab vulnerable to remote code execution via paraparser",
            "date_modified": "2023-09-21T16:57:09.000Z",
            "date_published": "2023-09-20T15:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pj98-2xf6-cff5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In certain conditions, the memory used by the builtins <code>raw_call</code>, <code>create_from_blueprint</code> and <code>create_copy_of</code> can be corrupted.</p>\n<ul>\n<li>For <code>raw_call</code>, the argument buffer of the call can be corrupted, leading to incorrect <code>calldata</code> in the sub-context.</li>\n<li>For  <code>create_from_blueprint</code> and <code>create_copy_of</code>, the buffer for the to-be-deployed bytecode can be corrupted, leading to deploying incorrect bytecode.</li>\n</ul>\n<p>Below are the conditions that must be fulfilled for the corruption to happen for each builtin:</p>\n<h4 id=\"raw_call\"><code>raw_call</code></h4>\n<ul>\n<li>memory is not fully initialized, ex. all parameters to an external function live in calldata\nand</li>\n<li>The <code>data</code> argument of the builtin is <code>msg.data</code>.\nand</li>\n<li>The <code>to</code>, <code>value</code> or <code>gas</code> passed to the builtin is some complex expression that results in writing to uninitialized memory (e.g. calling an internal function)</li>\n</ul>\n<h4 id=\"create_copy_of\"><code>create_copy_of</code></h4>\n<ul>\n<li>memory is not fully initialized, ex. all parameters to an external function live in calldata\nand</li>\n<li>The <code>value</code> or <code>salt</code> passed to the builtin is some complex expression that results in writing to  uninitialized memory (e.g. calling an internal function)</li>\n</ul>\n<h4 id=\"create_from_blueprint\"><code>create_from_blueprint</code></h4>\n<ul>\n<li>memory is not fully initialized, ex. all parameters to an external function live in calldata\nand</li>\n<li>Either no constructor parameters are passed to the builtin or <code>raw_args</code> is set to True.\nand</li>\n<li>The <code>value</code> or <code>salt</code> passed to the builtin is some complex expression that results in writing to uninitialized memory (e.g. calling an internal function)</li>\n</ul>\n<p>Note: When the builtin is being called from an <code>internal</code> function <code>f</code> from a function <code>g</code>, the issue is not present provided that <code>g</code> has written to memory before calling <code>f</code>.</p>\n<h4 id=\"examples\">Examples</h4>\n<h5 id=\"raw_call-1\"><code>raw_call</code></h5>\n<p>In the following contract, calling <code>bar(1,1)</code> will return:</p>\n<pre><code class=\"language-Python\">ae42e95100000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000001\n</code></pre>\n<p>instead of:</p>\n<pre><code class=\"language-Python\">ae42e95100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\n</code></pre>\n<pre><code class=\"language-Python\">identity: constant(address) = 0x0000000000000000000000000000000000000004\n\n@external\ndef foo():\n    pass\n\n@internal\n@view\ndef get_address()-&gt;address:\n    a:uint256 = max_value(uint256) # 0xfff...fff\n    return identity\n@external\ndef bar(f:uint256, u:uint256) -&gt; Bytes[100]:\n    a: Bytes[100] = raw_call(self.get_address(), msg.data, max_outsize=100)\n    return a\n</code></pre>\n<h5 id=\"create_copy_of-1\"><code>create_copy_of</code></h5>\n<p>In the following contract, after calling <code>test()</code>, the code deployed at <code>self.created_address</code> does not match the bytecode at <code>target</code>.</p>\n<pre><code class=\"language-Vyper\">created_address: public(address)\n\n@external\ndef test(target: address) -&gt; address:\n    # The expression in salt= is complex and will require to store to memory\n    self.created_address = create_copy_of(target, salt = keccak256(_abi_encode(target)))\n    return self.created_address\n</code></pre>\n<h5 id=\"create_from_blueprint-1\"><code>create_from_blueprint</code></h5>\n<p>In the following contract, after calling <code>test()</code>, the init bytecode used to create the contract deployed at the address <code>self.created_address</code> will not match the blueprint bytecode stored at <code>target</code>.</p>\n<pre><code class=\"language-Vyper\">created_address: public(address)\n\nsalt: constant(bytes32) = keccak256(\"kebab\")\n\n@external\n@payable\ndef test(target: address):\n    # The expression in salt= is complex and will require to store to memory\n    self.created_address = create_from_blueprint(target, code_offset=0, salt=keccak256(_abi_encode(target)))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>issue tracking in <a href=\"https://github.com/vyperlang/vyper/issues/3609\">https://github.com/vyperlang/vyper/issues/3609</a>, patched in #3610 </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The complex expressions that are being passed as kwargs to the builtin should be cached in memory prior to the call to the builtin. For the last example above, it would be:</p>\n<pre><code class=\"language-Vyper\">created_address: public(address)\n\nsalt: constant(bytes32) = keccak256(\"kebab\")\n\n@external\n@payable\ndef test(target: address):\n    salt: bytes32 = keccak256(_abi_encode(target))\n    self.created_address = create_from_blueprint(target, code_offset=0, salt=salt)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-c647-pxm2-c52w\">https://github.com/vyperlang/vyper/security/advisories/GHSA-c647-pxm2-c52w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42443\">https://nvd.nist.gov/vuln/detail/CVE-2023-42443</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/issues/3609\">https://github.com/vyperlang/vyper/issues/3609</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/pull/3610\">https://github.com/vyperlang/vyper/pull/3610</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/79303fc4fcba06994ee5c6a7baef57bdb185006c\">https://github.com/vyperlang/vyper/commit/79303fc4fcba06994ee5c6a7baef57bdb185006c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c647-pxm2-c52w\">https://github.com/advisories/GHSA-c647-pxm2-c52w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c647-pxm2-c52w",
            "title": "[vyper] Vyper vulnerable to memory corruption in certain builtins utilizing `msize`",
            "date_modified": "2023-09-22T18:26:06.000Z",
            "date_published": "2023-09-20T23:05:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c647-pxm2-c52w"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}