{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc\"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>\n<pre><code class=\"language-cpp\">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,\n                                        const NodeDef &amp;node) {\n  VLOG(4) &lt;&lt; \"Importing: \" &lt;&lt; node.name();\n  OperationState state(ConvertLocation(node), absl::StrCat(\"tfg.\", node.op()));\n\n  // The GraphImporter does light shape inference, but here we will defer all of\n  // that to the shape inference pass.\n  const OpDef *op_def;\n  const OpRegistrationData *op_reg_data = nullptr;\n  if ((op_reg_data = registry_.LookUp(node.op()))) {\n    op_def = &amp;op_reg_data-&gt;op_def;\n  } else {\n    auto it = function_op_defs_.find(node.op());\n    if (it == function_op_defs_.end())\n      return InvalidArgument(\"Unable to find OpDef for \", node.op());\n    op_def = it-&gt;second;\n  }\n</code></pre>\n<p><code>node.op().empty()</code> cannot be empty.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5\">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-828c-5j5q-vrjq\">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq",
            "title": "[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`",
            "date_modified": "2022-09-16T22:01:13.000Z",
            "date_published": "2022-09-16T22:01:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-828c-5j5q-vrjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc\"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>\n<pre><code class=\"language-cpp\">// Import the function attributes with a `tf.` prefix to match the current\n// infrastructure expectations.\nfor (const auto&amp; namedAttr : func.attr()) {\n  const std::string&amp; name = \"tf.\" + namedAttr.first;\n  const AttrValue&amp; tf_attr = namedAttr.second;\n  TF_ASSIGN_OR_RETURN(Attribute attr,\n                      ConvertAttributeValue(tf_attr, builder, tfgDialect));\n  attrs.append(name, attr);\n}\n</code></pre>\n<p>If <code>namedAttr.first</code> is empty, it will crash.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b\">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv43-93gv-vm8f\">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f",
            "title": "[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes",
            "date_modified": "2022-09-16T21:59:09.000Z",
            "date_published": "2022-09-16T21:59:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv43-93gv-vm8f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If <code>Requantize</code> is given <code>input_min</code>, <code>input_max</code>, <code>requested_output_min</code>, <code>requested_output_max</code> tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nout_type = tf.quint8\ninput = tf.constant([1], shape=[3], dtype=tf.qint32)\ninput_min = tf.constant([], shape=[0], dtype=tf.float32)\ninput_max = tf.constant(-256, shape=[1], dtype=tf.float32)\nrequested_output_min = tf.constant(-256, shape=[1], dtype=tf.float32)\nrequested_output_max = tf.constant(-256, shape=[1], dtype=tf.float32)\ntf.raw_ops.Requantize(input=input, input_min=input_min, input_max=input_max, requested_output_min=requested_output_min, requested_output_max=requested_output_max, out_type=out_type)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0\">785d67a78a1d533759fcd2f5e8d6ef778de849e0</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Neophytos Christou, Secure Systems Labs, Brown University.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0\">https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wqmc-pm8c-2jhc\">https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wqmc-pm8c-2jhc",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to segfault in `Requantize`",
            "date_modified": "2022-09-16T21:57:06.000Z",
            "date_published": "2022-09-16T21:57:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wqmc-pm8c-2jhc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If <code>Requantize</code> is given <code>input_min</code>, <code>input_max</code>, <code>requested_output_min</code>, <code>requested_output_max</code> tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\n\nout_type = tf.quint8\ninput = tf.constant([1], shape=[3], dtype=tf.qint32)\ninput_min = tf.constant([], shape=[0], dtype=tf.float32)\ninput_max = tf.constant(-256, shape=[1], dtype=tf.float32)\nrequested_output_min = tf.constant(-256, shape=[1], dtype=tf.float32)\nrequested_output_max = tf.constant(-256, shape=[1], dtype=tf.float32)\ntf.raw_ops.Requantize(input=input, input_min=input_min, input_max=input_max, requested_output_min=requested_output_min, requested_output_max=requested_output_max, out_type=out_type)\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0\">785d67a78a1d533759fcd2f5e8d6ef778de849e0</a>.</p>\n<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Neophytos Christou, Secure Systems Labs, Brown University.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0\">https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0\">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wqmc-pm8c-2jhc\">https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wqmc-pm8c-2jhc",
            "title": "[tensorflow-gpu] TensorFlow vulnerable to segfault in `Requantize`",
            "date_modified": "2022-09-16T21:57:06.000Z",
            "date_published": "2022-09-16T21:57:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wqmc-pm8c-2jhc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}