{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>A flaw was found in cobbler software component version 2.6.11-1. It suffers from an invalid parameter validation vulnerability, leading the arbitrary file reading. The flaw is triggered by navigating to a vulnerable URL via cobbler-web on a default installation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9605\">https://nvd.nist.gov/vuln/detail/CVE-2016-9605</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9605\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9605</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vc9-4xpq-77vm\">https://github.com/advisories/GHSA-4vc9-4xpq-77vm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vc9-4xpq-77vm",
            "title": "[cobbler] Cobbler Arbitrary File Read",
            "date_modified": "2023-11-02T16:07:00.000Z",
            "date_published": "2022-05-13T01:38:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vc9-4xpq-77vm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop.\nThis infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage.</p>\n<p>That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue was fixed with #2264</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot update your version of pypdf, you should modify <code>pypdf/generic/_data_structures.py</code> just like #2264 did.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f\">https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46250\">https://nvd.nist.gov/vuln/detail/CVE-2023-46250</a></li>\n<li><a href=\"https://github.com/py-pdf/pypdf/pull/2264\">https://github.com/py-pdf/pypdf/pull/2264</a></li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d\">https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjcc-cq79-p63f\">https://github.com/advisories/GHSA-wjcc-cq79-p63f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjcc-cq79-p63f",
            "title": "[pypdf] Possible Infinite Loop when PdfWriter(clone_from) is used with a PDF",
            "date_modified": "2023-10-31T22:22:52.000Z",
            "date_published": "2023-10-31T22:22:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjcc-cq79-p63f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Cached device information of remote users can be queried from Synapse. This can be used to enumerate the remote users known to a homeserver.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>System administrators are encouraged to upgrade to Synapse 1.95.1 as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The <code>federation_domain_whitelist</code> can be used to limit federation traffic with a homeserver.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/synapse/security/advisories/GHSA-mp92-3jfm-3575\">https://github.com/matrix-org/synapse/security/advisories/GHSA-mp92-3jfm-3575</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43796\">https://nvd.nist.gov/vuln/detail/CVE-2023-43796</a></li>\n<li><a href=\"https://github.com/matrix-org/synapse/commit/daec55e1fe120c564240c5386e77941372bf458f\">https://github.com/matrix-org/synapse/commit/daec55e1fe120c564240c5386e77941372bf458f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mp92-3jfm-3575\">https://github.com/advisories/GHSA-mp92-3jfm-3575</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mp92-3jfm-3575",
            "title": "[matrix-synapse] Synapse vulnerable to leak of remote user device information",
            "date_modified": "2023-10-31T20:29:50.000Z",
            "date_published": "2023-10-31T20:29:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mp92-3jfm-3575"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in langchain langchain-ai before version 0.0.325 allows a remote attacker to execute arbitrary code via a crafted script to the PythonAstREPLTool._run component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39659\">https://nvd.nist.gov/vuln/detail/CVE-2023-39659</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/issues/7700\">https://github.com/langchain-ai/langchain/issues/7700</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/5640\">https://github.com/langchain-ai/langchain/pull/5640</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/12427\">https://github.com/langchain-ai/langchain/pull/12427</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/cadfce295f8a33828fc635c2e5ea28b883e5c992\">https://github.com/langchain-ai/langchain/commit/cadfce295f8a33828fc635c2e5ea28b883e5c992</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/releases/tag/v0.0.325\">https://github.com/langchain-ai/langchain/releases/tag/v0.0.325</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prgp-w7vf-ch62\">https://github.com/advisories/GHSA-prgp-w7vf-ch62</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prgp-w7vf-ch62",
            "title": "[langchain] LangChain vulnerable to arbitrary code execution",
            "date_modified": "2023-10-30T20:15:57.000Z",
            "date_published": "2023-08-15T18:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prgp-w7vf-ch62"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><a href=\"https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/\"><em>Part of the Cure53 security audit of Home Assistant.</em></a></p>\n<p>The audit team’s analyses confirmed that the <code>redirect_uri</code> and <code>client_id</code> are alterable when logging in. Consequently, the code parameter utilized to fetch the <code>access_token</code> post-authentication will be sent to the URL specified in the aforementioned parameters.</p>\n<p>Since an arbitrary URL is permitted and <code>homeassistant.local</code> represents the preferred, default domain likely used and trusted by many users, an attacker could leverage this weakness to manipulate a user and retrieve account access. Notably, this attack strategy is plausible if the victim has exposed their Home Assistant to the Internet, since after acquiring the victim’s <code>access_token</code>, the adversary would need to utilize it directly towards the instance to achieve any pertinent malicious actions.</p>\n<p>To achieve this compromise attempt, the attacker must send a link with a <code>redirect_uri</code> that they control to the victim’s own Home Assistant instance. In the eventuality the victim authenticates via the said link, the attacker would obtain code sent to the specified URL in <code>redirect_uri</code>, which can then be leveraged to fetch an <code>access_token</code>.</p>\n<p>An attacker could increase the efficacy of this strategy by registering a nearly identical domain to <code>homeassistant.local</code>, which at first glance may appear legitimate and thereby obfuscate any malicious intentions.</p>\n<p>Nonetheless, owing to the requirements for victim interaction and Home Assistant instance exposure to the Internet, this severity rating was consequently downgraded to Low.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/home-assistant/core/security/advisories/GHSA-qhhj-7hrc-gqj5\">https://github.com/home-assistant/core/security/advisories/GHSA-qhhj-7hrc-gqj5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41893\">https://nvd.nist.gov/vuln/detail/CVE-2023-41893</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/homeassistant/PYSEC-2023-214.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/homeassistant/PYSEC-2023-214.yaml</a></li>\n<li><a href=\"https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/\">https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qhhj-7hrc-gqj5\">https://github.com/advisories/GHSA-qhhj-7hrc-gqj5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qhhj-7hrc-gqj5",
            "title": "[homeassistant] Home Assistant vulnerable to account takeover via auth_callback login",
            "date_modified": "2023-10-26T21:46:22.000Z",
            "date_published": "2023-10-26T21:46:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qhhj-7hrc-gqj5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 \"See Other\" after the request had its method changed from one that could accept a request body (like <code>POST</code>) to <code>GET</code> as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.</p>\n<p>From <a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#name-get\">RFC 9110 Section 9.3.1</a>:</p>\n<blockquote>\n<p>A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.</p>\n</blockquote>\n<h2 id=\"affected-usages\">Affected usages</h2>\n<p>Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.</p>\n<p>Both of the following conditions must be true to be affected by this vulnerability:</p>\n<ul>\n<li>If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON)</li>\n<li>The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.</li>\n</ul>\n<h2 id=\"remediation\">Remediation</h2>\n<p>You can remediate this vulnerability with any of the following steps:</p>\n<ul>\n<li>Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7)</li>\n<li>Disable redirects for services that you aren't expecting to respond with redirects with <code>redirects=False</code>.</li>\n<li>Disable automatic redirects with <code>redirects=False</code> and handle 303 redirects manually by stripping the HTTP request body.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4\">https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\">https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36\">https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/releases/tag/1.26.18\">https://github.com/urllib3/urllib3/releases/tag/1.26.18</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/releases/tag/2.0.7\">https://github.com/urllib3/urllib3/releases/tag/2.0.7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45803\">https://nvd.nist.gov/vuln/detail/CVE-2023-45803</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9\">https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#name-get\">https://www.rfc-editor.org/rfc/rfc9110.html#name-get</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4mx-q9vg-27p4\">https://github.com/advisories/GHSA-g4mx-q9vg-27p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4mx-q9vg-27p4",
            "title": "[urllib3] urllib3's request body not stripped after redirect from 303 status changes request method to GET",
            "date_modified": "2023-10-26T14:43:23.000Z",
            "date_published": "2023-10-17T20:15:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4mx-q9vg-27p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 \"See Other\" after the request had its method changed from one that could accept a request body (like <code>POST</code>) to <code>GET</code> as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.</p>\n<p>From <a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#name-get\">RFC 9110 Section 9.3.1</a>:</p>\n<blockquote>\n<p>A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.</p>\n</blockquote>\n<h2 id=\"affected-usages\">Affected usages</h2>\n<p>Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.</p>\n<p>Both of the following conditions must be true to be affected by this vulnerability:</p>\n<ul>\n<li>If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON)</li>\n<li>The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.</li>\n</ul>\n<h2 id=\"remediation\">Remediation</h2>\n<p>You can remediate this vulnerability with any of the following steps:</p>\n<ul>\n<li>Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7)</li>\n<li>Disable redirects for services that you aren't expecting to respond with redirects with <code>redirects=False</code>.</li>\n<li>Disable automatic redirects with <code>redirects=False</code> and handle 303 redirects manually by stripping the HTTP request body.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4\">https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\">https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36\">https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/releases/tag/1.26.18\">https://github.com/urllib3/urllib3/releases/tag/1.26.18</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/releases/tag/2.0.7\">https://github.com/urllib3/urllib3/releases/tag/2.0.7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45803\">https://nvd.nist.gov/vuln/detail/CVE-2023-45803</a></li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9\">https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#name-get\">https://www.rfc-editor.org/rfc/rfc9110.html#name-get</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4mx-q9vg-27p4\">https://github.com/advisories/GHSA-g4mx-q9vg-27p4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4mx-q9vg-27p4",
            "title": "[urllib3] urllib3's request body not stripped after redirect from 303 status changes request method to GET",
            "date_modified": "2023-10-26T14:43:23.000Z",
            "date_published": "2023-10-17T20:15:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4mx-q9vg-27p4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affects: Notebook and Lab between 6.4.0?(potentially earlier) and 6.4.11 (currently latest). Jupyter Server &lt;=1.16.0. If I am correct about the responsible code it will affect Jupyter-Server 1.17.0 and 2.0.0a0 as well.\nDescription: If notebook server is started with a value of <code>root_dir</code> that contains the starting user's home directory, then the underlying REST API can be used to leak the access token assigned at start time by guessing/brute forcing the PID of the jupyter server. While this requires an authenticated user session, this url can be used from an xss payload (as in CVE-2021-32798) or from a hooked or otherwise compromised browser to leak this access token to a malicious third party. This token can be used along with the REST API to interact with Jupyter services/notebooks such as modifying or overwriting critical files, such as .bashrc or .ssh/authorized_keys, allowing a malicious user to read potentially sensitive data and possibly gain control of the impacted system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g\">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29241\">https://nvd.nist.gov/vuln/detail/CVE-2022-29241</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml</a></li>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8\">https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8</a></li>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f\">https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q874-g24w-4q9g\">https://github.com/advisories/GHSA-q874-g24w-4q9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q874-g24w-4q9g",
            "title": "[jupyter-server] Jupyter server Token bruteforcing",
            "date_modified": "2023-10-26T13:29:38.000Z",
            "date_published": "2022-06-16T23:13:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q874-g24w-4q9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affects: Notebook and Lab between 6.4.0?(potentially earlier) and 6.4.11 (currently latest). Jupyter Server &lt;=1.16.0. If I am correct about the responsible code it will affect Jupyter-Server 1.17.0 and 2.0.0a0 as well.\nDescription: If notebook server is started with a value of <code>root_dir</code> that contains the starting user's home directory, then the underlying REST API can be used to leak the access token assigned at start time by guessing/brute forcing the PID of the jupyter server. While this requires an authenticated user session, this url can be used from an xss payload (as in CVE-2021-32798) or from a hooked or otherwise compromised browser to leak this access token to a malicious third party. This token can be used along with the REST API to interact with Jupyter services/notebooks such as modifying or overwriting critical files, such as .bashrc or .ssh/authorized_keys, allowing a malicious user to read potentially sensitive data and possibly gain control of the impacted system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g\">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29241\">https://nvd.nist.gov/vuln/detail/CVE-2022-29241</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml</a></li>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8\">https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8</a></li>\n<li><a href=\"https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f\">https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q874-g24w-4q9g\">https://github.com/advisories/GHSA-q874-g24w-4q9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q874-g24w-4q9g",
            "title": "[jupyter-server] Jupyter server Token bruteforcing",
            "date_modified": "2023-10-26T13:29:38.000Z",
            "date_published": "2022-06-16T23:13:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q874-g24w-4q9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When sending multiple HTTP requests in one TCP packet, twisted.web will process the requests asynchronously without guaranteeing the response order.</p>\n<h3 id=\"details\">Details</h3>\n<p>There's an example faulty program:</p>\n<pre><code class=\"language-python\">from twisted.internet import reactor, endpoints\nfrom twisted.web import server\nfrom twisted.web.proxy import ReverseProxyResource\nfrom twisted.web.resource import Resource\n\nclass Second(Resource):\n    isLeaf = True\n    def render_GET(self, request):\n        return b'SECOND\\n'\n\nclass First(Resource):\n    isLeaf = True\n    def render_GET(self, request):\n        def send_response():\n            request.write(b'FIRST DELAYED\\n')\n            request.finish()\n        reactor.callLater(0.5, send_response)\n        return server.NOT_DONE_YET\n\nroot = Resource()\n\nroot.putChild(b'second', Second())\nroot.putChild(b'first', First())\n\nendpoint = endpoints.TCP4ServerEndpoint(reactor, 8080)\nendpoint.listen(server.Site(root))\nreactor.run()\n</code></pre>\n<p>When two requests for <code>/first</code> and <code>/second</code> are sent in the same order, the second request will be responded to first.</p>\n<pre><code class=\"language-shell\">echo -en \"GET /first HTTP/1.1\\r\\nHost: a\\r\\n\\r\\nGET /second HTTP/1.1\\r\\nHost: a\\r\\n\\r\\n\" | nc localhost 8080\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the endpoints is controlled by an attacker, the attacker can delay the response on purpose to manipulate the response of the second request when a victim launched two requests using HTTP pipeline.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm\">https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46137\">https://nvd.nist.gov/vuln/detail/CVE-2023-46137</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc8x-vp79-p3wm\">https://github.com/advisories/GHSA-xc8x-vp79-p3wm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc8x-vp79-p3wm",
            "title": "[twisted] twisted.web has disordered HTTP pipeline response",
            "date_modified": "2023-10-27T20:48:14.000Z",
            "date_published": "2023-10-25T21:15:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc8x-vp79-p3wm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>LangChain before 0.0.317 allows SSRF via <code>document_loaders/recursive_url_loader.py</code> because crawling can proceed from an external server to an internal server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46229\">https://nvd.nist.gov/vuln/detail/CVE-2023-46229</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/11925\">https://github.com/langchain-ai/langchain/pull/11925</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/9ecb7240a480720ec9d739b3877a52f76098a2b8\">https://github.com/langchain-ai/langchain/commit/9ecb7240a480720ec9d739b3877a52f76098a2b8</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-205.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-205.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-655w-fm8m-m478\">https://github.com/advisories/GHSA-655w-fm8m-m478</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-655w-fm8m-m478",
            "title": "[langchain] LangChain Server Side Request Forgery vulnerability",
            "date_modified": "2023-10-25T16:57:45.000Z",
            "date_published": "2023-10-19T06:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-655w-fm8m-m478"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Werkzeug multipart data parser needs to find a boundary that may be between consecutive chunks. That's why parsing is based on looking for newline characters. Unfortunately, code looking for partial boundary in the buffer is written inefficiently, so if we upload a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer.</p>\n<p>This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/security/advisories/GHSA-hrfv-mqp8-q5rw\">https://github.com/pallets/werkzeug/security/advisories/GHSA-hrfv-mqp8-q5rw</a></li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1\">https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46136\">https://nvd.nist.gov/vuln/detail/CVE-2023-46136</a></li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/f3c803b3ade485a45f12b6d6617595350c0f03e2\">https://github.com/pallets/werkzeug/commit/f3c803b3ade485a45f12b6d6617595350c0f03e2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrfv-mqp8-q5rw\">https://github.com/advisories/GHSA-hrfv-mqp8-q5rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrfv-mqp8-q5rw",
            "title": "[werkzeug] Werkzeug DoS: High resource usage when parsing multipart/form-data containing a large part with CR/LF character at the beginning",
            "date_modified": "2023-10-31T21:21:54.000Z",
            "date_published": "2023-10-25T14:22:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrfv-mqp8-q5rw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users hosting D-Tale publicly can be vulnerable to remote code execution allowing attackers to run malicious code on the server.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version 3.7.0 where the \"Custom Filter\" input is turned off by default. You can find out more information on how to turn it back on <a href=\"https://github.com/man-group/dtale#custom-filter\">here</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The only workaround for versions earlier than 3.7.0 is to only host D-Tale to trusted users.</p>\n<h3 id=\"references\">References</h3>\n<p>See \"Custom Filter\" <a href=\"https://github.com/man-group/dtale#custom-filter\">documentation</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/man-group/dtale/security/advisories/GHSA-jq6c-r9xf-qxjm\">https://github.com/man-group/dtale/security/advisories/GHSA-jq6c-r9xf-qxjm</a></li>\n<li><a href=\"https://github.com/man-group/dtale/commit/bf8c54ab2490803f45f0652a9a0e221a94d39668\">https://github.com/man-group/dtale/commit/bf8c54ab2490803f45f0652a9a0e221a94d39668</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46134\">https://nvd.nist.gov/vuln/detail/CVE-2023-46134</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jq6c-r9xf-qxjm\">https://github.com/advisories/GHSA-jq6c-r9xf-qxjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jq6c-r9xf-qxjm",
            "title": "[dtale] dtale vulnerable to Remote Code Execution through the Custom Filter Input",
            "date_modified": "2023-10-31T21:23:50.000Z",
            "date_published": "2023-10-25T14:20:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jq6c-r9xf-qxjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A member of the Plone site could set javascript in the <code>home_page</code> property of their profile, and have this executed when a visitor clicks the home page link on the author page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000482\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000482</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property\">https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-859j-668v-mrr6\">https://github.com/advisories/GHSA-859j-668v-mrr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-859j-668v-mrr6",
            "title": "[Products.CMFPlone] Products.CMFPlone XSS in profile home_page property",
            "date_modified": "2023-10-24T20:22:26.000Z",
            "date_published": "2022-05-14T03:49:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-859j-668v-mrr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A member of the Plone site could set javascript in the <code>home_page</code> property of their profile, and have this executed when a visitor clicks the home page link on the author page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000482\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000482</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property\">https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-859j-668v-mrr6\">https://github.com/advisories/GHSA-859j-668v-mrr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-859j-668v-mrr6",
            "title": "[Products.CMFPlone] Products.CMFPlone XSS in profile home_page property",
            "date_modified": "2023-10-24T20:22:26.000Z",
            "date_published": "2022-05-14T03:49:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-859j-668v-mrr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A member of the Plone site could set javascript in the <code>home_page</code> property of their profile, and have this executed when a visitor clicks the home page link on the author page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000482\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000482</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property\">https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-859j-668v-mrr6\">https://github.com/advisories/GHSA-859j-668v-mrr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-859j-668v-mrr6",
            "title": "[Products.CMFPlone] Products.CMFPlone XSS in profile home_page property",
            "date_modified": "2023-10-24T20:22:26.000Z",
            "date_published": "2022-05-14T03:49:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-859j-668v-mrr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When you visit a page where you need to login, Plone 2.5-5.1rc1 sends you to the login form with a 'came_from' parameter set to the previous url. After you login, you get redirected to the page you tried to view before. An attacker might try to abuse this by letting you click on a specially crafted link. You would login, and get redirected to the site of the attacker, letting you think that you are still on the original Plone site. Or some javascript of the attacker could be executed. Most of these types of attacks are already blocked by Plone, using the <code>isURLInPortal</code> check to make sure we only redirect to a page on the same Plone site. But a few more ways of tricking Plone into accepting a malicious link were discovered, and fixed with this hotfix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000481\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000481</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/open-redirection-on-login-form\">https://plone.org/security/hotfix/20171128/open-redirection-on-login-form</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8g72-gq68-6gqh\">https://github.com/advisories/GHSA-8g72-gq68-6gqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh",
            "title": "[Products.CMFPlone] Products.CMFPlone Open Redirect Vulnerability",
            "date_modified": "2023-10-24T20:22:23.000Z",
            "date_published": "2022-05-14T03:49:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When you visit a page where you need to login, Plone 2.5-5.1rc1 sends you to the login form with a 'came_from' parameter set to the previous url. After you login, you get redirected to the page you tried to view before. An attacker might try to abuse this by letting you click on a specially crafted link. You would login, and get redirected to the site of the attacker, letting you think that you are still on the original Plone site. Or some javascript of the attacker could be executed. Most of these types of attacks are already blocked by Plone, using the <code>isURLInPortal</code> check to make sure we only redirect to a page on the same Plone site. But a few more ways of tricking Plone into accepting a malicious link were discovered, and fixed with this hotfix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000481\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000481</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/open-redirection-on-login-form\">https://plone.org/security/hotfix/20171128/open-redirection-on-login-form</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8g72-gq68-6gqh\">https://github.com/advisories/GHSA-8g72-gq68-6gqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh",
            "title": "[Products.CMFPlone] Products.CMFPlone Open Redirect Vulnerability",
            "date_modified": "2023-10-24T20:22:23.000Z",
            "date_published": "2022-05-14T03:49:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When you visit a page where you need to login, Plone 2.5-5.1rc1 sends you to the login form with a 'came_from' parameter set to the previous url. After you login, you get redirected to the page you tried to view before. An attacker might try to abuse this by letting you click on a specially crafted link. You would login, and get redirected to the site of the attacker, letting you think that you are still on the original Plone site. Or some javascript of the attacker could be executed. Most of these types of attacks are already blocked by Plone, using the <code>isURLInPortal</code> check to make sure we only redirect to a page on the same Plone site. But a few more ways of tricking Plone into accepting a malicious link were discovered, and fixed with this hotfix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000481\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000481</a></li>\n<li><a href=\"https://plone.org/security/hotfix/20171128/open-redirection-on-login-form\">https://plone.org/security/hotfix/20171128/open-redirection-on-login-form</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/issues/2232\">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2233\">https://github.com/plone/Products.CMFPlone/pull/2233</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2234\">https://github.com/plone/Products.CMFPlone/pull/2234</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2235\">https://github.com/plone/Products.CMFPlone/pull/2235</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/pull/2236\">https://github.com/plone/Products.CMFPlone/pull/2236</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab\">https://github.com/plone/Products.CMFPlone/commit/05a943ecbcdda56bacc93b55c9e2e908d8a7dfab</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b\">https://github.com/plone/Products.CMFPlone/commit/0e50e1e67ea3b6d3187f78cb1a1628081f654d3b</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8\">https://github.com/plone/Products.CMFPlone/commit/236b62b756ff46a92783b3897e717dfb15eb07d8</a></li>\n<li><a href=\"https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373\">https://github.com/plone/Products.CMFPlone/commit/7db5b2c8fb684055987b8c4fdedc29289bd26373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8g72-gq68-6gqh\">https://github.com/advisories/GHSA-8g72-gq68-6gqh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh",
            "title": "[Products.CMFPlone] Products.CMFPlone Open Redirect Vulnerability",
            "date_modified": "2023-10-24T20:22:23.000Z",
            "date_published": "2022-05-14T03:49:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8g72-gq68-6gqh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"observation\">Observation</h3>\n<p>When handling dependencies that come from a Git repository instead of a registry, Poetry uses various commands, such as <code>git clone</code>. These commands are being constructed using user input (e.g. the repository URL). When building the commands, Poetry correctly avoids Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (<code>-</code>) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables.</p>\n<p>To clone a repository, Poetry builds a git clone command, but fails to validate or sanitize the repository location properly:</p>\n<p><a href=\"https://github.com/python-poetry/poetry-core/blob/ad33bc2f92be03dc5b31a666664903c439fb1173/poetry/core/vcs/git.py#L207\"><code>poetry/core/vcs/git.py</code></a>:</p>\n<pre><code class=\"language-python\">def clone(self, repository: str, dest: Path) -&gt; str:\n    return self.run(\"clone\", \"--recurse-submodules\", repository, str(dest))\n</code></pre>\n<p>Since this value comes from the <code>pyproject.toml</code> file, it can contain any character, including a leading dash.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can lead to Arbitrary Code Execution, which would lead to the takeover of the system. If a developer is exploited, the attacker could steal credentials or persist their access. If the exploit happens on a server, the attackers could use their access to attack other internal systems.\nSince this vulnerability requires a fair amount of user interaction, it is not as dangerous as a remotely exploitable one. However, it still puts developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by vetting any Git or Poetry config files that might be present in the directory.\nThis kind of attack vector has been used in the past to target security researchers by sending them projects to collaborate on, so we believe that there is a non-negligible risk.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>1.1.8 || 1.2.0b1</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>Upgrade to version 1.1.9 || 1.2.0b1</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/python-poetry/poetry-core/pull/202\">Fix PR</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, email us at <a href=\"mailto:security@python-poetry.org\">security@python-poetry.org</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw\">https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36069\">https://nvd.nist.gov/vuln/detail/CVE-2022-36069</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-266.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-266.yaml</a></li>\n<li><a href=\"https://github.com/python-poetry/poetry/releases/tag/1.1.9\">https://github.com/python-poetry/poetry/releases/tag/1.1.9</a></li>\n<li><a href=\"https://github.com/python-poetry/poetry/releases/tag/1.2.0b1\">https://github.com/python-poetry/poetry/releases/tag/1.2.0b1</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/securing-developer-tools-package-managers/\">https://www.sonarsource.com/blog/securing-developer-tools-package-managers/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9xgj-fcgf-x6mw\">https://github.com/advisories/GHSA-9xgj-fcgf-x6mw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9xgj-fcgf-x6mw",
            "title": "[poetry] Poetry Argument Injection can lead to Local Code Execution",
            "date_modified": "2023-10-24T19:33:01.000Z",
            "date_published": "2022-09-16T19:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9xgj-fcgf-x6mw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}