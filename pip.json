{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>JpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.</p>\n<p>If the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd\">https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#ensure-jpegimageplugin-stops-at-the-end-of-a-truncated-file\">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#ensure-jpegimageplugin-stops-at-the-end-of-a-truncated-file</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4fx9-vc88-q2xc\">https://github.com/advisories/GHSA-4fx9-vc88-q2xc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4fx9-vc88-q2xc",
            "title": "[Pillow] Infinite loop in Pillow",
            "date_modified": "2022-03-11T23:39:41.000Z",
            "date_published": "2022-03-11T23:39:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
            }
        },
        {
            "content_html": "<p>PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method <code>ImageMath.eval(\"exec(exit())\")</code>.</p>\n<p>While Pillow 9.0.0 restricted top-level builtins available to PIL.ImageMath.eval(), it did not prevent builtins available to lambda expressions. These are now also restricted in 9.0.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22817\">https://nvd.nist.gov/vuln/detail/CVE-2022-22817</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#restrict-builtins-available-to-imagemath-eval\">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#restrict-builtins-available-to-imagemath-eval</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html\">https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html</a></li>\n<li><a href=\"https://www.debian.org/security/2022/dsa-5053\">https://www.debian.org/security/2022/dsa-5053</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11\">https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security\">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8vj2-vxx3-667w\">https://github.com/advisories/GHSA-8vj2-vxx3-667w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8vj2-vxx3-667w",
            "title": "[Pillow] Arbitrary expression injection in Pillow",
            "date_modified": "2022-03-11T23:37:24.000Z",
            "date_published": "2022-01-12T20:07:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8vj2-vxx3-667w"
            }
        },
        {
            "content_html": "<p>If the path to the temporary directory on Linux or macOS contained a space, this would break removal of the temporary image file after im.show() (and related actions), and potentially remove an unrelated file. This been present since PIL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24303\">https://nvd.nist.gov/vuln/detail/CVE-2022-24303</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26\">https://github.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security\">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9j59-75qj-795w\">https://github.com/advisories/GHSA-9j59-75qj-795w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9j59-75qj-795w",
            "title": "[Pillow] Path traversal in Pillow",
            "date_modified": "2022-03-11T23:10:53.000Z",
            "date_published": "2022-03-11T23:10:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9j59-75qj-795w"
            }
        },
        {
            "content_html": "<h1 id=\"python-auditing-vulnerability\">Python Auditing Vulnerability</h1>\n<p>Demonstrates how a malicious package can insert a load-time poison pill to avoid detection by tools like Safety.</p>\n<p>Tools that are designed to find vulnerable packages can not ever run in the same python environment that they are trying to protect.</p>\n<h2 id=\"usage\">Usage</h2>\n<p>Install <code>safety</code>, <code>insecure-package</code>, and this package with pip in the same python environment. Order doesn&amp;#39;t matter.</p>\n<ol>\n<li>pip install safety</li>\n<li>pip install insecure-package</li>\n<li>pip install dist/malicious-0.1-py3-none-any.whl</li>\n</ol>\n<p>Run the check</p>\n<ol start=\"4\">\n<li><code>safety check</code></li>\n</ol>\n<p>You should see both <code>Running my modified safety.check</code> and that <code>insecure-package</code> is not listed in the results!</p>\n<h2 id=\"how-it-works\">How it Works</h2>\n<p>Everything in Python is mutable. The trick is getting some code to run at interpreter load time in order to do some patching.</p>\n<ol>\n<li>When you install this package, the <code>setup.py</code> settings installs a <code>malicious.pth</code> file to your <code>site-packages</code> directory.</li>\n<li>The <code>malicious.pth</code> file gets loaded anytime Python starts, which in turn imports our <code>malicious</code> package.</li>\n<li>The <code>malicious/__init__.py</code> patches the safety library with a custom function to avoid detection.<h3 id=\"references\">References</h3>\n</li>\n</ol>\n<ul>\n<li><a href=\"https://github.com/pyupio/safety/security/advisories/GHSA-7q25-qrjw-6fg2\">https://github.com/pyupio/safety/security/advisories/GHSA-7q25-qrjw-6fg2</a></li>\n<li><a href=\"https://github.com/akoumjian/python-safety-vuln\">https://github.com/akoumjian/python-safety-vuln</a></li>\n<li><a href=\"https://mulch.dev/blog/CVE-2020-5252-python-safety-vuln/\">https://mulch.dev/blog/CVE-2020-5252-python-safety-vuln/</a></li>\n<li><a href=\"https://pyup.io/posts/patched-vulnerability/\">https://pyup.io/posts/patched-vulnerability/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-5252\">https://nvd.nist.gov/vuln/detail/CVE-2020-5252</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7q25-qrjw-6fg2\">https://github.com/advisories/GHSA-7q25-qrjw-6fg2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7q25-qrjw-6fg2",
            "title": "[safety] Malicious package may avoid detection in python auditing",
            "date_modified": "2022-03-11T23:01:38.000Z",
            "date_published": "2020-03-24T15:07:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7q25-qrjw-6fg2"
            }
        },
        {
            "content_html": "<p>A vulnerability was found in CPython which is used by openstack-nova's console proxy, noVNC. By crafting a malicious URL, noVNC could be made to redirect to any desired URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3654\">https://nvd.nist.gov/vuln/detail/CVE-2021-3654</a></li>\n<li><a href=\"https://bugs.launchpad.net/nova/+bug/1927677\">https://bugs.launchpad.net/nova/+bug/1927677</a></li>\n<li><a href=\"https://bugs.python.org/issue32084\">https://bugs.python.org/issue32084</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1961439\">https://bugzilla.redhat.com/show_bug.cgi?id=1961439</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66\">https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb\">https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb</a></li>\n<li><a href=\"https://security.openstack.org/ossa/OSSA-2021-002.html\">https://security.openstack.org/ossa/OSSA-2021-002.html</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2021/07/29/2\">https://www.openwall.com/lists/oss-security/2021/07/29/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqp6-j452-j6wp\">https://github.com/advisories/GHSA-vqp6-j452-j6wp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp",
            "title": "[nova] Open Redirect in CPython that affects users of OpenStack Nova",
            "date_modified": "2022-03-11T23:28:29.000Z",
            "date_published": "2022-03-04T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp"
            }
        },
        {
            "content_html": "<p>A vulnerability was found in CPython which is used by openstack-nova's console proxy, noVNC. By crafting a malicious URL, noVNC could be made to redirect to any desired URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3654\">https://nvd.nist.gov/vuln/detail/CVE-2021-3654</a></li>\n<li><a href=\"https://bugs.launchpad.net/nova/+bug/1927677\">https://bugs.launchpad.net/nova/+bug/1927677</a></li>\n<li><a href=\"https://bugs.python.org/issue32084\">https://bugs.python.org/issue32084</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1961439\">https://bugzilla.redhat.com/show_bug.cgi?id=1961439</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66\">https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb\">https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb</a></li>\n<li><a href=\"https://security.openstack.org/ossa/OSSA-2021-002.html\">https://security.openstack.org/ossa/OSSA-2021-002.html</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2021/07/29/2\">https://www.openwall.com/lists/oss-security/2021/07/29/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqp6-j452-j6wp\">https://github.com/advisories/GHSA-vqp6-j452-j6wp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp",
            "title": "[nova] Open Redirect in CPython that affects users of OpenStack Nova",
            "date_modified": "2022-03-11T23:28:29.000Z",
            "date_published": "2022-03-04T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp"
            }
        },
        {
            "content_html": "<p>A vulnerability was found in CPython which is used by openstack-nova's console proxy, noVNC. By crafting a malicious URL, noVNC could be made to redirect to any desired URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3654\">https://nvd.nist.gov/vuln/detail/CVE-2021-3654</a></li>\n<li><a href=\"https://bugs.launchpad.net/nova/+bug/1927677\">https://bugs.launchpad.net/nova/+bug/1927677</a></li>\n<li><a href=\"https://bugs.python.org/issue32084\">https://bugs.python.org/issue32084</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1961439\">https://bugzilla.redhat.com/show_bug.cgi?id=1961439</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66\">https://opendev.org/openstack/nova/commit/04d48527b62a35d912f93bc75613a6cca606df66</a></li>\n<li><a href=\"https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb\">https://opendev.org/openstack/nova/commit/8906552cfc2525a44251d4cf313ece61e57251eb</a></li>\n<li><a href=\"https://security.openstack.org/ossa/OSSA-2021-002.html\">https://security.openstack.org/ossa/OSSA-2021-002.html</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2021/07/29/2\">https://www.openwall.com/lists/oss-security/2021/07/29/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vqp6-j452-j6wp\">https://github.com/advisories/GHSA-vqp6-j452-j6wp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp",
            "title": "[nova] Open Redirect in CPython that affects users of OpenStack Nova",
            "date_modified": "2022-03-11T23:28:29.000Z",
            "date_published": "2022-03-04T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vqp6-j452-j6wp"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If PAM is correctly configured and a user account is set to expired, the expired user-account is still able to successfully log into Cobbler in all places (Web UI, CLI &amp; XMLRPC-API).</p>\n<p>The same applies to user accounts with passwords set to be expired.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>There is a patch for the latest Cobbler <code>3.3.2</code> available, however a backport will be done for <code>3.2.x</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Delete expired accounts which are able to access Cobbler via PAM.</li>\n<li>Use <code>chage -l &lt;username&gt;</code> to lock the account. If the account has SSH-Keys attached then remove them completely.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Originally discovered by @ysf at <a href=\"https://www.huntr.dev/bounties/c458b868-63df-414e-af10-47e3745caa1d/\">https://www.huntr.dev/bounties/c458b868-63df-414e-af10-47e3745caa1d/</a></li>\n</ul>\n<h3 id=\"how-to-test-if-my-cobbler-instance-is-affected\">How to test if my Cobbler instance is affected?</h3>\n<p>The following <code>pytest</code> test assumes that your PAM setup is correct. In case the added user is not able to login, this test does not make sense to be executed.</p>\n<pre><code class=\"language-python\">def test_pam_login_with_expired_user():\n    # Arrange\n    # create pam testuser\n    test_username = \"expired_user\"\n    test_password = \"password\"\n    test_api = CobblerAPI()\n    subprocess_1 = subprocess.run(\n        [\"perl\", \"-e\", \"'print crypt(\\\"%s\\\", \\\"%s\\\")'\" % (test_username, test_password)],\n        stdout=subprocess.PIPE\n    )\n    subprocess.run([\"useradd\", \"-p\", subprocess_1.stdout, test_username])\n    # change user to be expired\n    subprocess.run([\"chage\", \"-E0\", test_username])\n\n    # Act\n    result = pam.authenticate(test_api, test_username, test_password)\n\n    # Assert - login should fail\n    assert not result\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/cobbler/cobbler/issues/new/choose\">the Cobbler repository</a></li>\n<li>Ask in the <a href=\"https://gitter.im/cobbler/community\">Gitter/Matrix Chat</a></li>\n<li>Email us at <a href=\"mailto:cobbler.project@gmail.com\">cobbler.project@gmail.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cobbler/cobbler/security/advisories/GHSA-mcg6-h362-cmq5\">https://github.com/cobbler/cobbler/security/advisories/GHSA-mcg6-h362-cmq5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0860\">https://nvd.nist.gov/vuln/detail/CVE-2022-0860</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/commit/9044aa990a94752fa5bd5a24051adde099280bfa\">https://github.com/cobbler/cobbler/commit/9044aa990a94752fa5bd5a24051adde099280bfa</a></li>\n<li><a href=\"https://huntr.dev/bounties/c458b868-63df-414e-af10-47e3745caa1d\">https://huntr.dev/bounties/c458b868-63df-414e-af10-47e3745caa1d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcg6-h362-cmq5\">https://github.com/advisories/GHSA-mcg6-h362-cmq5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcg6-h362-cmq5",
            "title": "[cobbler] Improper Authorization in cobbler",
            "date_modified": "2022-03-11T23:15:48.000Z",
            "date_published": "2022-03-11T20:52:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcg6-h362-cmq5"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Cobbler before 3.3.1. Files in /etc/cobbler are world readable. Two of those files contain some sensitive information that can be exposed to a local user who has non-privileged access to the server. The users.digest file contains the sha2-512 digest of users in a Cobbler local installation. In the case of an easy-to-guess password, it's trivial to obtain the plaintext string. The settings.yaml file contains secrets such as the hashed default password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45083\">https://nvd.nist.gov/vuln/detail/CVE-2021-45083</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/releases\">https://github.com/cobbler/cobbler/releases</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2022/02/18/3\">https://www.openwall.com/lists/oss-security/2022/02/18/3</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193671\">https://bugzilla.suse.com/show_bug.cgi?id=1193671</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/pull/2945\">https://github.com/cobbler/cobbler/pull/2945</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/releases/tag/v3.3.1\">https://github.com/cobbler/cobbler/releases/tag/v3.3.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5946-mpw5-pqxx\">https://github.com/advisories/GHSA-5946-mpw5-pqxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5946-mpw5-pqxx",
            "title": "[cobbler] Incorrect Default Permissions in Cobbler",
            "date_modified": "2022-03-08T21:20:31.000Z",
            "date_published": "2022-02-21T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5946-mpw5-pqxx"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Cobbler through 3.3.0. In the templar.py file, the function check_for_invalid_imports can allow Cheetah code to import Python modules via the \"#from MODULE import\" substring. (Only lines beginning with #import are blocked.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45082\">https://nvd.nist.gov/vuln/detail/CVE-2021-45082</a></li>\n<li><a href=\"https://bugzilla.suse.com/show_bug.cgi?id=1193678\">https://bugzilla.suse.com/show_bug.cgi?id=1193678</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/releases\">https://github.com/cobbler/cobbler/releases</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/pull/2945\">https://github.com/cobbler/cobbler/pull/2945</a></li>\n<li><a href=\"https://github.com/cobbler/cobbler/releases/tag/v3.3.1\">https://github.com/cobbler/cobbler/releases/tag/v3.3.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6cm4-gm85-972c\">https://github.com/advisories/GHSA-6cm4-gm85-972c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6cm4-gm85-972c",
            "title": "[cobbler] Command Injection in Cobbler",
            "date_modified": "2022-03-08T21:20:28.000Z",
            "date_published": "2022-02-20T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6cm4-gm85-972c"
            }
        },
        {
            "content_html": "<p>calibreweb prior to version 0.6.17 is vulnerable to server-side request forgery (SSRF). This is a result of incomplete SSRF protection that can be bypassed via an HTTP redirect. An HTTP server set up to respond with a 302 redirect may redirect a request to <code>localhost</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0767\">https://nvd.nist.gov/vuln/detail/CVE-2022-0767</a></li>\n<li><a href=\"https://github.com/janeczku/calibre-web/commit/965352c8d96c9eae7a6867ff76b0db137d04b0b8\">https://github.com/janeczku/calibre-web/commit/965352c8d96c9eae7a6867ff76b0db137d04b0b8</a></li>\n<li><a href=\"https://huntr.dev/bounties/b26fc127-9b6a-4be7-a455-58aefbb62d9e\">https://huntr.dev/bounties/b26fc127-9b6a-4be7-a455-58aefbb62d9e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h65g-jfqg-2w6m\">https://github.com/advisories/GHSA-h65g-jfqg-2w6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h65g-jfqg-2w6m",
            "title": "[calibreweb] Server-Side Request Forgery in calibreweb",
            "date_modified": "2022-03-08T20:35:49.000Z",
            "date_published": "2022-03-08T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h65g-jfqg-2w6m"
            }
        },
        {
            "content_html": "<p>calibreweb prior to version 0.6.17 is vulnerable to server-side request forgery (SSRF). This is due to an incomplete fix for <a href=\"https://github.com/advisories/GHSA-4w8p-x6g8-fv64\">CVE-2022-0339</a>. The blacklist does not check for <code>0.0.0.0</code>, which would result in a payload of <code>0.0.0.0</code> resolving to <code>localhost</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0766\">https://nvd.nist.gov/vuln/detail/CVE-2022-0766</a></li>\n<li><a href=\"https://github.com/janeczku/calibre-web/commit/965352c8d96c9eae7a6867ff76b0db137d04b0b8\">https://github.com/janeczku/calibre-web/commit/965352c8d96c9eae7a6867ff76b0db137d04b0b8</a></li>\n<li><a href=\"https://huntr.dev/bounties/7f2a5bb4-e6c7-4b6a-b8eb-face9e3add7b\">https://huntr.dev/bounties/7f2a5bb4-e6c7-4b6a-b8eb-face9e3add7b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2647-c639-qv2j\">https://github.com/advisories/GHSA-2647-c639-qv2j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2647-c639-qv2j",
            "title": "[calibreweb] Server-Side Request Forgery in calibreweb",
            "date_modified": "2022-03-08T20:35:52.000Z",
            "date_published": "2022-03-08T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2647-c639-qv2j"
            }
        },
        {
            "content_html": "<p>archivy prior to version 1.7.1 is vulnerable to open redirect.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0697\">https://nvd.nist.gov/vuln/detail/CVE-2022-0697</a></li>\n<li><a href=\"https://github.com/archivy/archivy/commit/2d8cb29853190d42572b36deb61127e68d6be574\">https://github.com/archivy/archivy/commit/2d8cb29853190d42572b36deb61127e68d6be574</a></li>\n<li><a href=\"https://huntr.dev/bounties/2d0301a2-10ff-48f4-a346-5a0e8707835b\">https://huntr.dev/bounties/2d0301a2-10ff-48f4-a346-5a0e8707835b</a></li>\n<li><a href=\"https://github.com/archivy/archivy/releases/tag/v1.7.1\">https://github.com/archivy/archivy/releases/tag/v1.7.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28mg-98xm-q493\">https://github.com/advisories/GHSA-28mg-98xm-q493</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28mg-98xm-q493",
            "title": "[archivy] Open Redirect in archivy",
            "date_modified": "2022-03-08T21:07:27.000Z",
            "date_published": "2022-03-08T00:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28mg-98xm-q493"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>HTTPie have the practical concept of <a href=\"https://httpie.io/docs/cli/sessions\">sessions</a>, which help users to persistently store some of the state that belongs to the outgoing requests and incoming responses on the disk for further usage. As an example, we can make an authenticated request and save it to a <a href=\"https://httpie.io/docs/cli/named-sessions\">named session</a> called <code>api</code>:</p>\n<pre><code class=\"language-bash\">$ http --session api -a user:pass pie.dev/basic-auth/user/pass\n</code></pre>\n<pre><code class=\"language-json\">{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}\n</code></pre>\n<p>Since we have now saved the authentication data to that session, we won‘t have to enter it again and again on every invocation. We can simply reference the session, and HTTPie will use the saved state directly from it:</p>\n<pre><code class=\"language-bash\">$ http --session api pie.dev/basic-auth/user/pass\n</code></pre>\n<pre><code class=\"language-json\">{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}\n</code></pre>\n<p>One particular use case of these sessions is storing cookies (commonly referred to as a <code>Cookie Jar</code>). If a response has a <code>Set-Cookie</code>\nheader, HTTPie will parse it and store the actual cookie in the session. And from that point on, all outgoing requests will attach that cookie (in the form of a <code>Cookie</code> header).</p>\n<p>This is extremely useful, especially when you are dealing with websites which manage their own state on the client-side through cookies.</p>\n<pre><code class=\"language-bash\">$ http -F --session jar pie.dev/cookies/set/x/y\n</code></pre>\n<pre><code class=\"language-json\">{\n    \"cookies\": {\n        \"x\": \"y\"\n    }\n}\n</code></pre>\n<p>Before <code>3.1.0</code>, HTTPie didn‘t distinguish between cookies and hosts they belonged. This behavior resulted in the exposure of some cookies when there are redirects originating from the actual host to a third party website, e.g:</p>\n<pre><code class=\"language-bash\">$ http -F --session jar pie.dev/redirect-to url==https://httpbin.org/cookies\n</code></pre>\n<p>(Pre 3.1.0)</p>\n<pre><code class=\"language-json\">{\n    \"cookies\": {\n        \"x\": \"y\"\n    }\n}\n</code></pre>\n<p>(Post 3.1.0)</p>\n<pre><code class=\"language-json\">{\n    \"cookies\": {}\n}\n</code></pre>\n<p>This behavior has been corrected in this release (with taking <a href=\"https://datatracker.ietf.org/doc/html/rfc6265\">RFC 6265 — HTTP State Management Mechanism</a> into the consideration).</p>\n<p>A huge credit goes to <a href=\"https://github.com/glyph\">@Glyph</a> for disclosing the original vulnerability to us (through <a href=\"http://huntr.dev/\">huntr.dev</a>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We suggest users to upgrade their HTTPie version to <code>3.1.0</code> or higher, and run <code>httpie cli sessions upgrade</code> command on their sessions.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us: <a href=\"mailto:security@httpie.io\"><code>security@httpie.io</code></a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/httpie/httpie/security/advisories/GHSA-9w4w-cpc8-h2fq\">https://github.com/httpie/httpie/security/advisories/GHSA-9w4w-cpc8-h2fq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24737\">https://nvd.nist.gov/vuln/detail/CVE-2022-24737</a></li>\n<li><a href=\"https://github.com/httpie/httpie/commit/65ab7d5caaaf2f95e61f9dd65441801c2ddee38b\">https://github.com/httpie/httpie/commit/65ab7d5caaaf2f95e61f9dd65441801c2ddee38b</a></li>\n<li><a href=\"https://github.com/httpie/httpie/releases/tag/3.1.0\">https://github.com/httpie/httpie/releases/tag/3.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9w4w-cpc8-h2fq\">https://github.com/advisories/GHSA-9w4w-cpc8-h2fq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9w4w-cpc8-h2fq",
            "title": "[httpie] Exposure of Sensitive Information to an Unauthorized Actor in httpie",
            "date_modified": "2022-03-09T20:04:17.000Z",
            "date_published": "2022-03-07T23:44:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9w4w-cpc8-h2fq"
            }
        },
        {
            "content_html": "<p>django-spirit prior to version 0.12.3 is vulnerable to open redirect. In the /user/login endpoint, it doesn't check the value of the next parameter when the user is logged in and passes it directly to redirect which result to open redirect. This also affects /user/logout, /user/register, /user/login, /user/resend-activation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0869\">https://nvd.nist.gov/vuln/detail/CVE-2022-0869</a></li>\n<li><a href=\"https://github.com/nitely/spirit/commit/8f32f89654d6c30d56e0dd167059d32146fb32ef\">https://github.com/nitely/spirit/commit/8f32f89654d6c30d56e0dd167059d32146fb32ef</a></li>\n<li><a href=\"https://huntr.dev/bounties/ed335a88-f68c-4e4d-ac85-f29a51b03342\">https://huntr.dev/bounties/ed335a88-f68c-4e4d-ac85-f29a51b03342</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p9j-w2wx-qx4c\">https://github.com/advisories/GHSA-5p9j-w2wx-qx4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p9j-w2wx-qx4c",
            "title": "[django-spirit] Open Redirect in django-spirit",
            "date_modified": "2022-03-14T21:19:29.000Z",
            "date_published": "2022-03-07T00:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p9j-w2wx-qx4c"
            }
        },
        {
            "content_html": "<p>PyTorch Lightning version 1.5.10 and prior is vulnerable to code injection. There is currently a <a href=\"https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae\">patch</a> available, anticipated to be part of the <code>1.6.0</code> release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0845\">https://nvd.nist.gov/vuln/detail/CVE-2022-0845</a></li>\n<li><a href=\"https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae\">https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae</a></li>\n<li><a href=\"https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a\">https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a</a></li>\n<li><a href=\"https://github.com/PyTorchLightning/pytorch-lightning/pull/12212\">https://github.com/PyTorchLightning/pytorch-lightning/pull/12212</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5qj-cvf9-p85h\">https://github.com/advisories/GHSA-r5qj-cvf9-p85h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5qj-cvf9-p85h",
            "title": "[pytorch-lightning] Code Injection in PyTorch Lightning",
            "date_modified": "2022-03-11T20:00:17.000Z",
            "date_published": "2022-03-06T00:00:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5qj-cvf9-p85h"
            }
        },
        {
            "content_html": "<p>Buildbot before 1.8.2 and 2.x before 2.3.1 accepts a user-submitted authorization token from OAuth and uses it to authenticate a user. If an attacker has a token allowing them to read the user details of a victim, they can login as the victim.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12300\">https://nvd.nist.gov/vuln/detail/CVE-2019-12300</a></li>\n<li><a href=\"https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication\">https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g86p-hgx5-2pfh\">https://github.com/advisories/GHSA-g86p-hgx5-2pfh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g86p-hgx5-2pfh",
            "title": "[buildbot] Improper Authentication in Buildbot",
            "date_modified": "2022-03-04T21:16:27.000Z",
            "date_published": "2019-05-29T18:48:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g86p-hgx5-2pfh"
            }
        },
        {
            "content_html": "<p>Buildbot before 1.8.2 and 2.x before 2.3.1 accepts a user-submitted authorization token from OAuth and uses it to authenticate a user. If an attacker has a token allowing them to read the user details of a victim, they can login as the victim.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12300\">https://nvd.nist.gov/vuln/detail/CVE-2019-12300</a></li>\n<li><a href=\"https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication\">https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g86p-hgx5-2pfh\">https://github.com/advisories/GHSA-g86p-hgx5-2pfh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g86p-hgx5-2pfh",
            "title": "[buildbot] Improper Authentication in Buildbot",
            "date_modified": "2022-03-04T21:16:27.000Z",
            "date_published": "2019-05-29T18:48:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g86p-hgx5-2pfh"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Weblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issues were fixed in the 4.11.1 release. The following commits are addressing it:</p>\n<ul>\n<li>35d59f1f040541c358cece0a8d4a63183ca919b8</li>\n<li>d83672a3e7415da1490334e2c9431e5da1966842</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Instances in which untrusted users cannot create new components are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-WEBLATE-2414088\">SNYK-PYTHON-WEBLATE-2414088</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a topic in <a href=\"https://github.com/WeblateOrg/weblate/discussions\">discussions</a></li>\n<li>Email us at <a href=\"mailto:care@weblate.org\">care@weblate.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/WeblateOrg/weblate/security/advisories/GHSA-3872-f48p-pxqj\">https://github.com/WeblateOrg/weblate/security/advisories/GHSA-3872-f48p-pxqj</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-WEBLATE-2414088\">https://security.snyk.io/vuln/SNYK-PYTHON-WEBLATE-2414088</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23915\">https://nvd.nist.gov/vuln/detail/CVE-2022-23915</a></li>\n<li><a href=\"https://github.com/WeblateOrg/weblate/pull/7337\">https://github.com/WeblateOrg/weblate/pull/7337</a></li>\n<li><a href=\"https://github.com/WeblateOrg/weblate/pull/7338\">https://github.com/WeblateOrg/weblate/pull/7338</a></li>\n<li><a href=\"https://github.com/WeblateOrg/weblate/releases/tag/weblate-4.11.1\">https://github.com/WeblateOrg/weblate/releases/tag/weblate-4.11.1</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-PYTHON-WEBLATE-2414088\">https://snyk.io/vuln/SNYK-PYTHON-WEBLATE-2414088</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3872-f48p-pxqj\">https://github.com/advisories/GHSA-3872-f48p-pxqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3872-f48p-pxqj",
            "title": "[Weblate] Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate",
            "date_modified": "2022-03-08T21:09:27.000Z",
            "date_published": "2022-03-04T21:15:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3872-f48p-pxqj"
            }
        },
        {
            "content_html": "<p>An issue was discovered in Bleach 2.1.x before 2.1.3. Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-7753\">https://nvd.nist.gov/vuln/detail/CVE-2018-7753</a></li>\n<li><a href=\"https://github.com/mozilla/bleach/commit/c5df5789ec3471a31311f42c2d19fc2cf21b35ef\">https://github.com/mozilla/bleach/commit/c5df5789ec3471a31311f42c2d19fc2cf21b35ef</a></li>\n<li><a href=\"https://bugs.debian.org/892252\">https://bugs.debian.org/892252</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9mq-p2f9-cfqv\">https://github.com/advisories/GHSA-m9mq-p2f9-cfqv</a></li>\n<li><a href=\"https://github.com/mozilla/bleach/releases/tag/v2.1.3\">https://github.com/mozilla/bleach/releases/tag/v2.1.3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9mq-p2f9-cfqv",
            "title": "[bleach] Critical severity vulnerability that affects bleach",
            "date_modified": "2022-03-04T19:40:00.000Z",
            "date_published": "2019-01-04T17:46:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9mq-p2f9-cfqv"
            }
        }
    ]
}