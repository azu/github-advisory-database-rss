{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It was possible to traverse the entire AWS S3 bucket and in most cases to access or delete files.\nThe issue was discovered by the maintainer. There were no reports of the vulnerability\nbeing known to or exploited by a third party, before the release of the patch.</p>\n<p>If the <code>AWS_LOCATION</code> setting was set, traversal was limited to that location only.\nIf all your files handling views (like form views) require authentication or special permission, the thread is limited to privileged users.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in version 5.5.1 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no feasible workaround. We must urge all users to immediately updated to a patched version.</p>\n<h3 id=\"detailed-attack-vector-description\">Detailed attack vector description</h3>\n<p>An attacker may use a request with malicious form data to traverse the entire AWS S3 bucket and perform destructive operations.</p>\n<p>An attack could look as follows:</p>\n<pre><code class=\"language-bash\">curl -X POST -F \"s3file=file\" -F \"file=/priviliged/location/secrets.txt\" https://www.example.com/any/path/will/work/\n</code></pre>\n<p>This will result in a request with files set and opened:</p>\n<pre><code class=\"language-python\">&gt;&gt;&gt; request.FILES.getlist(\"file\")\n[File(\"/priviliged/location/secrets.txt\")]\n</code></pre>\n<p>Since this behavior is injected via a middleware, any view can be called this way and will carry any files defined by the attacker.</p>\n<p>Via the <code>s3file</code> form field, any input name can be specified, including multiple inputs. For each input, multiple files can be freely\npicked of the S3 bucket.</p>\n<h4 id=\"scenarios-and-their-practicality\">Scenarios and their practicality</h4>\n<p>There are four scenarios that would be considered practical in most setups:</p>\n<ol>\n<li>Illegal file injection,</li>\n<li>file deletion,</li>\n<li>file retrieval &amp; tree traversal.</li>\n<li>code injection &amp; remote code execution.</li>\n</ol>\n<h5 id=\"file-deletion\">File deletion</h5>\n<p>An attacker knows the location of a privileged file, like a static asset. Next, the file is injected into a form view. The upload to function will move the file to a new location. This is effectively deleting the file, since the previous references to it are invalid, and will cause S3 to return a 404. Furthermore, the new location is unknown to the site operator.</p>\n<h5 id=\"file-retrieval--tree-traversal\">File retrieval &amp; tree traversal</h5>\n<p>An attacker knows the URL of a secret file and injects it into a form view. The view will move the file to a public location, making it accessible to the attacker. Since most form views will not be rate limited, this could also be used to guess files and traverse the file tree.</p>\n<h5 id=\"illegal-file-injection\">Illegal file injection</h5>\n<p>An attacker uses any form to upload a file to the temporary upload location. Next, the attacker injects that file into a request, does not validate the contents or is not equipped to handle the mime type. The latter could be used as a potential DOS vector.</p>\n<p>In practice, this is not a practical risk in most hardened setup. Files should always be sanitized before processing, since files can be included in a request even without this security issues.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue on <a href=\"https://github.com/codingjoe/django-s3file/issues\">GitHub</a></li>\n<li>Email us at <a href=\"mailto:johannes@maron.family\">johannes@maron.family</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codingjoe/django-s3file/security/advisories/GHSA-4w8f-hjm9-xwgf\">https://github.com/codingjoe/django-s3file/security/advisories/GHSA-4w8f-hjm9-xwgf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24840\">https://nvd.nist.gov/vuln/detail/CVE-2022-24840</a></li>\n<li><a href=\"https://github.com/codingjoe/django-s3file/commit/68ccd2c621a40eb66fdd6af2be9d5fcc9c373318\">https://github.com/codingjoe/django-s3file/commit/68ccd2c621a40eb66fdd6af2be9d5fcc9c373318</a></li>\n<li><a href=\"https://github.com/codingjoe/django-s3file/releases/tag/5.5.1\">https://github.com/codingjoe/django-s3file/releases/tag/5.5.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w8f-hjm9-xwgf\">https://github.com/advisories/GHSA-4w8f-hjm9-xwgf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w8f-hjm9-xwgf",
            "title": "[django-s3file] Path Traversal in django-s3file",
            "date_modified": "2022-06-06T21:24:24.000Z",
            "date_published": "2022-06-06T21:24:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w8f-hjm9-xwgf"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>when a calling an external contract with no return value, the contract address could be evaluated twice. this is usually only an efficiency problem, but if evaluation of the contract address has side effects, it could result in double evaluation of the side effects.</p>\n<p>in the following example, <code>Foo(msg.sender).bar()</code> is the contract address for the following call (to <code>.foo()</code>), and could get evaluated twice</p>\n<pre><code class=\"language-vyper\">interface Foo:\n    def foo(): nonpayable\n    def bar() -&gt; address: nonpayable\n\n@external\ndef do_stuff():\n    Foo(Foo(msg.sender).bar()).foo()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>v0.3.4</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>assign contract addresses to variables. the above example would change to</p>\n<pre><code class=\"language-vyper\">@external\ndef do_stuff():\n    t: Foo = Foo(msg.sender).bar()\n    t.foo()\n</code></pre>\n<h3 id=\"references\">References</h3>\n<h3 id=\"for-more-information\">For more information</h3>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d\">https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v9q-cgpw-cf38\">https://github.com/advisories/GHSA-4v9q-cgpw-cf38</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38",
            "title": "[vyper] Multiple evaluation of contract address in call in vyper",
            "date_modified": "2022-06-06T21:23:59.000Z",
            "date_published": "2022-06-06T21:23:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v9q-cgpw-cf38"
            }
        },
        {
            "content_html": "<h1 id=\"background\">Background</h1>\n<p>CILogon is a federated auth provider that allows users to authenticate\nthemselves via a number of Identity Providers (IdP), focused primarily on educational and\nresearch institutions (such as Universities). More traditional and open IdPs\nsuch as GitHub, ORCID, Google, Microsoft, etc are also supported.</p>\n<p>CILogonOAuthenticator is provided by the OAuthenticator package, and lets users log\nin to a JupyterHub via CILogon. This is primarily used to restrict a JupyterHub\nonly to users of a given institute. The allowed_idps configuration trait of\nCILogonOAuthenticator is documented to be a list of domains that indicate the\ninstitutions whose users are authorized to access this JupyterHub. This authorization\nis validated by ensuring that the <em>email</em> field provided to us by CILogon has a\n<em>domain</em> that matches one of the domains listed in <code>allowed_idps</code>.</p>\n<h1 id=\"impact\">Impact</h1>\n<p>If <code>allowed_idps</code> contains <code>berkeley.edu</code>, you might expect only users with valid\ncurrent credentials provided by University of California, Berkeley to be able to\naccess the JupyterHub. However, CILogonOAuthenticator does <em>not</em> verify which provider\nis used by the user to login, only the email address provided. So a user can login\nwith a GitHub account that has email set to <code>&lt;something&gt;@berkeley.edu</code>, and that will\nbe treated exactly the same as someone logging in using the UC Berkeley official\nIdentity Provider. This has two consequences:</p>\n<ol>\n<li>Since GitHub (and most other providers we tested) only require you to verify\nyour email once, a user can access a JupyterHub even if their access to\nthe institution's IdP has been revoked or expired.</li>\n<li>CILogon supports hundreds of identity providers - if even one of them allows\nusers to set any email ids without verifying, that can be used to impersonate\n<em>any</em> user on any other identity provider! While CILogon itself has a stellar\nsecurity record, this particular method of doing authorization means an attacker\nwould only need to compromise a single identity provider to compromise all of\nCILogon</li>\n</ol>\n<p>We currently do not know of any identity provider that provides <em>unverified</em>\nemail addresses to CILogon, so this is not a severe known vulnerability. However,\nthere are hundreds of IdPs, and we could not try them all.</p>\n<h1 id=\"patches\">Patches</h1>\n<p>This patch makes a <em>breaking change</em> in how <code>allowed_idps</code> is interpreted. It's\nno longer a list of domains, but configuration representing the <code>EntityID</code> of the\nIdPs that are allowed, picked from the <a href=\"https://cilogon.org/idplist/\">list maintained by CILogon</a>.\nSo instead of <code>berkeley.edu</code>, you would specify <code>urn:mace:incommon:berkeley.edu</code> to\nallow logins from users currently with <code>berkeley.edu</code> accounts. GitHub users\nwith a verified <code>berkeley.edu</code> email will no longer be allowed to log in.</p>\n<p>For details on how to transition your CILogonOAuthenticator configuration to the patched version 15.0.0 or above, see <a href=\"https://oauthenticator.readthedocs.io/en/latest/migrations.html\">the migration</a> documentation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-r7v4-jwx9-wx43\">https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-r7v4-jwx9-wx43</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31027\">https://nvd.nist.gov/vuln/detail/CVE-2022-31027</a></li>\n<li><a href=\"https://github.com/jupyterhub/oauthenticator/commit/5cd2d1816f90dc5c946e6e38fd2d0ba535624c5c\">https://github.com/jupyterhub/oauthenticator/commit/5cd2d1816f90dc5c946e6e38fd2d0ba535624c5c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r7v4-jwx9-wx43\">https://github.com/advisories/GHSA-r7v4-jwx9-wx43</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r7v4-jwx9-wx43",
            "title": "[oauthenticator] Authorization Bypass Through User-Controlled Key when using CILogonOAuthenticator oauthenticator",
            "date_modified": "2022-06-06T21:21:40.000Z",
            "date_published": "2022-06-06T21:21:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r7v4-jwx9-wx43"
            }
        },
        {
            "content_html": "<p>An access control issue in aleksis/core/util/auth_helpers.py: ClientProtectedResourceMixin of AlekSIS-Core v2.8.1 and below allows attackers to access arbitrary scopes if no allowed scopes are specifically set.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29773\">https://nvd.nist.gov/vuln/detail/CVE-2022-29773</a></li>\n<li><a href=\"https://edugit.org/AlekSIS/official/AlekSIS-Core/-/issues/688\">https://edugit.org/AlekSIS/official/AlekSIS-Core/-/issues/688</a></li>\n<li><a href=\"https://edugit.org/AlekSIS/official/AlekSIS-Core/-/commit/0d39d5f566e1d916e3c8dedd3f5bd62161f30bd8\">https://edugit.org/AlekSIS/official/AlekSIS-Core/-/commit/0d39d5f566e1d916e3c8dedd3f5bd62161f30bd8</a></li>\n<li><a href=\"https://edugit.org/AlekSIS/official/AlekSIS-Core/-/merge_requests/1011\">https://edugit.org/AlekSIS/official/AlekSIS-Core/-/merge_requests/1011</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76x2-h8h3-cwjg\">https://github.com/advisories/GHSA-76x2-h8h3-cwjg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76x2-h8h3-cwjg",
            "title": "[aleksis-core] Access control issue in AlekSIS-Core",
            "date_modified": "2022-06-06T21:20:40.000Z",
            "date_published": "2022-06-04T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76x2-h8h3-cwjg"
            }
        },
        {
            "content_html": "<p>When using PySpark , it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application. This affects versions 1.x, 2.0.x, 2.1.x, 2.2.0 to 2.2.2, and 2.3.0 to 2.3.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-11760\">https://nvd.nist.gov/vuln/detail/CVE-2018-11760</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvxv-9xxr-h7wj\">https://github.com/advisories/GHSA-fvxv-9xxr-h7wj</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/6d015e56b3a3da968f86e0b6acc69f17ecc16b499389e12d8255bf6e@%3Ccommits.spark.apache.org%3E\">https://lists.apache.org/thread.html/6d015e56b3a3da968f86e0b6acc69f17ecc16b499389e12d8255bf6e@%3Ccommits.spark.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/a86ee93d07b6f61b82b61a28049aed311f5cc9420d26cc95f1a9de7b@%3Cuser.spark.apache.org%3E\">https://lists.apache.org/thread.html/a86ee93d07b6f61b82b61a28049aed311f5cc9420d26cc95f1a9de7b@%3Cuser.spark.apache.org%3E</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106786\">http://www.securityfocus.com/bid/106786</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/SPARK-26802\">https://issues.apache.org/jira/browse/SPARK-26802</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2019-169.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2019-169.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvxv-9xxr-h7wj",
            "title": "[pyspark] Moderate severity vulnerability that affects pyspark",
            "date_modified": "2022-06-06T21:12:36.000Z",
            "date_published": "2019-02-07T18:02:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvxv-9xxr-h7wj"
            }
        },
        {
            "content_html": "<p>Bottle before 0.12.20 mishandles errors during early request binding.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31799\">https://nvd.nist.gov/vuln/detail/CVE-2022-31799</a></li>\n<li><a href=\"https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c\">https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c</a></li>\n<li><a href=\"https://github.com/bottlepy/bottle/commit/e140e1b54da721a660f2eb9d58a106b7b3ff2f00\">https://github.com/bottlepy/bottle/commit/e140e1b54da721a660f2eb9d58a106b7b3ff2f00</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xhp9-4947-rq78\">https://github.com/advisories/GHSA-xhp9-4947-rq78</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xhp9-4947-rq78",
            "title": "[bottle] Denial of service in bottle",
            "date_modified": "2022-06-03T22:31:28.000Z",
            "date_published": "2022-06-03T00:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xhp9-4947-rq78"
            }
        },
        {
            "content_html": "<p>Flower, a web UI for the Celery Python RPC framework, all versions as of 05-02-2022 is vulnerable to an OAuth authentication bypass. An attacker could then access the Flower API to discover and invoke arbitrary Celery RPC calls or deny service by shutting down Celery task nodes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30034\">https://nvd.nist.gov/vuln/detail/CVE-2022-30034</a></li>\n<li><a href=\"https://tprynn.github.io/2022/05/26/flower-vulns.html\">https://tprynn.github.io/2022/05/26/flower-vulns.html</a></li>\n<li><a href=\"http://githubcommherflower.com\">http://githubcommherflower.com</a></li>\n<li><a href=\"https://github.com/mher/flower/pull/1216\">https://github.com/mher/flower/pull/1216</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4qm-xhf9-4p8f\">https://github.com/advisories/GHSA-q4qm-xhf9-4p8f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4qm-xhf9-4p8f",
            "title": "[flower] Authorization bypass in Flower",
            "date_modified": "2022-06-03T22:29:23.000Z",
            "date_published": "2022-06-03T00:01:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4qm-xhf9-4p8f"
            }
        },
        {
            "content_html": "<p>IPython (Interactive Python) is a command shell. Cross-site request forgery in the REST API is possible in in IPython 2 and 3. Versions 2.4.1 and 3.2.3 contain patches.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5607\">https://nvd.nist.gov/vuln/detail/CVE-2015-5607</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816\">https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/a05fe052a18810e92d9be8c1185952c13fe4e5b0\">https://github.com/ipython/ipython/commit/a05fe052a18810e92d9be8c1185952c13fe4e5b0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1243842\">https://bugzilla.redhat.com/show_bug.cgi?id=1243842</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162671.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162671.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162936.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162936.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/07/21/3\">http://www.openwall.com/lists/oss-security/2015/07/21/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fc2-rm35-2pp7\">https://github.com/advisories/GHSA-7fc2-rm35-2pp7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fc2-rm35-2pp7",
            "title": "[ipython] IPython vulnerable to cross site request forgery (CSRF)",
            "date_modified": "2022-06-03T15:42:47.000Z",
            "date_published": "2022-05-17T00:35:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fc2-rm35-2pp7"
            }
        },
        {
            "content_html": "<p>IPython (Interactive Python) is a command shell. Cross-site request forgery in the REST API is possible in in IPython 2 and 3. Versions 2.4.1 and 3.2.3 contain patches.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5607\">https://nvd.nist.gov/vuln/detail/CVE-2015-5607</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816\">https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816</a></li>\n<li><a href=\"https://github.com/ipython/ipython/commit/a05fe052a18810e92d9be8c1185952c13fe4e5b0\">https://github.com/ipython/ipython/commit/a05fe052a18810e92d9be8c1185952c13fe4e5b0</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1243842\">https://bugzilla.redhat.com/show_bug.cgi?id=1243842</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162671.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162671.html</a></li>\n<li><a href=\"http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162936.html\">http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162936.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/07/21/3\">http://www.openwall.com/lists/oss-security/2015/07/21/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fc2-rm35-2pp7\">https://github.com/advisories/GHSA-7fc2-rm35-2pp7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fc2-rm35-2pp7",
            "title": "[ipython] IPython vulnerable to cross site request forgery (CSRF)",
            "date_modified": "2022-06-03T15:42:47.000Z",
            "date_published": "2022-05-17T00:35:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fc2-rm35-2pp7"
            }
        },
        {
            "content_html": "<p>The FontManager._get_nix_font_path function in formatters/img.py in Pygments 1.2.2 through 2.0.2 allows remote attackers to execute arbitrary commands via shell metacharacters in a font name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-8557\">https://nvd.nist.gov/vuln/detail/CVE-2015-8557</a></li>\n<li><a href=\"https://bitbucket.org/birkenfeld/pygments-main/pull-requests/501/fix-shell-injection-in/diff\">https://bitbucket.org/birkenfeld/pygments-main/pull-requests/501/fix-shell-injection-in/diff</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/201612-05\">https://security.gentoo.org/glsa/201612-05</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/133823/Pygments-FontManager._get_nix_font_path-Shell-Injection.html\">http://packetstormsecurity.com/files/133823/Pygments-FontManager._get_nix_font_path-Shell-Injection.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2015/Oct/4\">http://seclists.org/fulldisclosure/2015/Oct/4</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3445\">http://www.debian.org/security/2016/dsa-3445</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/12/14/17\">http://www.openwall.com/lists/oss-security/2015/12/14/17</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/12/14/6\">http://www.openwall.com/lists/oss-security/2015/12/14/6</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/bulletinjan2016-2867206.html\">http://www.oracle.com/technetwork/topics/security/bulletinjan2016-2867206.html</a></li>\n<li><a href=\"http://www.ubuntu.com/usn/USN-2862-1\">http://www.ubuntu.com/usn/USN-2862-1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fff8-4w9p-7v76\">https://github.com/advisories/GHSA-fff8-4w9p-7v76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fff8-4w9p-7v76",
            "title": "[Pygments] Command Injection in Pygments",
            "date_modified": "2022-06-03T15:40:32.000Z",
            "date_published": "2022-05-17T02:37:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fff8-4w9p-7v76"
            }
        },
        {
            "content_html": "<p>The serializer in html5lib before 0.99999999 might allow remote attackers to conduct cross-site scripting (XSS) attacks by leveraging mishandling of special characters in attribute values, a different vulnerability than CVE-2016-9909.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-9910\">https://nvd.nist.gov/vuln/detail/CVE-2016-9910</a></li>\n<li><a href=\"https://github.com/html5lib/html5lib-python/issues/11\">https://github.com/html5lib/html5lib-python/issues/11</a></li>\n<li><a href=\"https://github.com/html5lib/html5lib-python/issues/12\">https://github.com/html5lib/html5lib-python/issues/12</a></li>\n<li><a href=\"https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7\">https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7</a></li>\n<li><a href=\"https://html5lib.readthedocs.io/en/latest/changes.html#b9\">https://html5lib.readthedocs.io/en/latest/changes.html#b9</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/12/06/5\">http://www.openwall.com/lists/oss-security/2016/12/06/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/12/08/8\">http://www.openwall.com/lists/oss-security/2016/12/08/8</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/95132\">http://www.securityfocus.com/bid/95132</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8f6m-gfq9-g33v\">https://github.com/advisories/GHSA-8f6m-gfq9-g33v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8f6m-gfq9-g33v",
            "title": "[html5lib] Cross-site Scripting in html5lib",
            "date_modified": "2022-06-02T21:03:06.000Z",
            "date_published": "2022-05-17T02:57:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8f6m-gfq9-g33v"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Waitress may terminate early due to a thread closing a socket while the main thread is about to call select(). This will lead to the main thread raising an exception that is not handled and then causing the entire application to be killed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been fixed in Waitress 2.1.2 by no longer allowing the WSGI thread to close the socket, instead it is always delegated to the main thread.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no work-around, however users using waitress behind a reverse proxy server are less likely to have issues if the reverse proxy always reads the full response.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Pylons/waitress/issues\">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>\n<li>email the Pylons Security mailing list: <a href=\"mailto:pylons-project-security@googlegroups.com\">pylons-project-security@googlegroups.com</a> (if security related)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Pylons/waitress/security/advisories/GHSA-f5x9-8jwc-25rw\">https://github.com/Pylons/waitress/security/advisories/GHSA-f5x9-8jwc-25rw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31015\">https://nvd.nist.gov/vuln/detail/CVE-2022-31015</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/issues/374\">https://github.com/Pylons/waitress/issues/374</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/pull/377\">https://github.com/Pylons/waitress/pull/377</a></li>\n<li><a href=\"https://github.com/Pylons/waitress/commit/4f6789b035610e0552738cdc4b35ca809a592d48\">https://github.com/Pylons/waitress/commit/4f6789b035610e0552738cdc4b35ca809a592d48</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5x9-8jwc-25rw\">https://github.com/advisories/GHSA-f5x9-8jwc-25rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5x9-8jwc-25rw",
            "title": "[waitress] Uncaught Exception (due to a data race) leads to process termination in Waitress",
            "date_modified": "2022-06-02T20:37:49.000Z",
            "date_published": "2022-06-02T20:37:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5x9-8jwc-25rw"
            }
        },
        {
            "content_html": "<p>The ctx hosted project on PyPI was taken over via user account compromise and replaced with a malicious project which contained runtime code which collected the content of os.environ.items() when instantiating Ctx objects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/ctx/PYSEC-2022-199.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/ctx/PYSEC-2022-199.yaml</a></li>\n<li><a href=\"https://python-security.readthedocs.io/pypi-vuln/index-2022-05-24-ctx-domain-takeover.html\">https://python-security.readthedocs.io/pypi-vuln/index-2022-05-24-ctx-domain-takeover.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67r3-h899-9w95\">https://github.com/advisories/GHSA-67r3-h899-9w95</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67r3-h899-9w95",
            "title": "[ctx] Embedded Malicious Code in ctx",
            "date_modified": "2022-06-02T15:46:07.000Z",
            "date_published": "2022-06-02T15:46:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67r3-h899-9w95"
            }
        },
        {
            "content_html": "<p>WASM3 v0.5.0 was discovered to contain a heap overflow via the component /wabt/bin/poc.wasm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28990\">https://nvd.nist.gov/vuln/detail/CVE-2022-28990</a></li>\n<li><a href=\"https://github.com/wasm3/wasm3/issues/323\">https://github.com/wasm3/wasm3/issues/323</a></li>\n<li><a href=\"https://github.com/wasm3/wasm3/pull/324\">https://github.com/wasm3/wasm3/pull/324</a></li>\n<li><a href=\"https://github.com/wasm3/wasm3/commit/8441c82c4a98f554b12971450220b580c3c2b6df\">https://github.com/wasm3/wasm3/commit/8441c82c4a98f554b12971450220b580c3c2b6df</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77fq-4xf5-hph4\">https://github.com/advisories/GHSA-77fq-4xf5-hph4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77fq-4xf5-hph4",
            "title": "[pywasm3] Buffer overflow in wasm3",
            "date_modified": "2022-06-02T14:52:30.000Z",
            "date_published": "2022-05-21T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77fq-4xf5-hph4"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All of the source code, files, and folders in <code>phoenix_files/extensions/</code> are available to end users through a simple HTTP GET request.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched. The users of version 1.0.6 and above are not effected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Froggo8311/Phoenix/security/advisories/GHSA-c8f7-x2g7-7fxj\">https://github.com/Froggo8311/Phoenix/security/advisories/GHSA-c8f7-x2g7-7fxj</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c8f7-x2g7-7fxj\">https://github.com/advisories/GHSA-c8f7-x2g7-7fxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c8f7-x2g7-7fxj",
            "title": "[phoenix-ws] All source code and data in extensions folder is publicly available",
            "date_modified": "2022-06-02T14:23:30.000Z",
            "date_published": "2022-06-02T14:23:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c8f7-x2g7-7fxj"
            }
        },
        {
            "content_html": "<p>Apache Superset prior to 1.1.0 allowed for the creation of an external URL that could be malicious. By not checking user input for open redirects the URL shortener functionality would allow for a malicious user to create a short URL for a dashboard that could convince the user to click the link.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28125\">https://nvd.nist.gov/vuln/detail/CVE-2021-28125</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E\">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E\">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/04/27/2\">http://www.openwall.com/lists/oss-security/2021/04/27/2</a></li>\n<li><a href=\"https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029\">https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfwg-rxf4-97c3\">https://github.com/advisories/GHSA-pfwg-rxf4-97c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfwg-rxf4-97c3",
            "title": "[apache-superset] Open Redirect in Apache Superset",
            "date_modified": "2022-06-01T22:01:46.000Z",
            "date_published": "2021-10-06T17:47:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfwg-rxf4-97c3"
            }
        },
        {
            "content_html": "<p>Apache Superset prior to 1.1.0 allowed for the creation of an external URL that could be malicious. By not checking user input for open redirects the URL shortener functionality would allow for a malicious user to create a short URL for a dashboard that could convince the user to click the link.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28125\">https://nvd.nist.gov/vuln/detail/CVE-2021-28125</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E\">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E\">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/04/27/2\">http://www.openwall.com/lists/oss-security/2021/04/27/2</a></li>\n<li><a href=\"https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029\">https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfwg-rxf4-97c3\">https://github.com/advisories/GHSA-pfwg-rxf4-97c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfwg-rxf4-97c3",
            "title": "[superset] Open Redirect in Apache Superset",
            "date_modified": "2022-06-01T22:01:46.000Z",
            "date_published": "2021-10-06T17:47:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfwg-rxf4-97c3"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Clients generated with a maliciously crafted OpenAPI Document can generate arbitrary Python code. Subsequent execution of this malicious client is arbitrary code execution.</p>\n<p>Giving this a CVSS of 8.0 (high) with CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H/E:P/RL:U/RC:C .</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fix will be included in version 0.5.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Inspect OpenAPI documents before generating, or inspect generated code before executing.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/triaxtec/openapi-python-client/issues\">openapi-python-client</a></li>\n<li>Email us at <a href=\"mailto:danthony@triaxtec.com\">danthony@triaxtec.com</a><h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-9x4c-63pf-525f\">https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-9x4c-63pf-525f</a></li>\n<li><a href=\"https://github.com/triaxtec/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a\">https://github.com/triaxtec/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a</a></li>\n<li><a href=\"https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13\">https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13</a></li>\n<li><a href=\"https://pypi.org/project/openapi-python-client/\">https://pypi.org/project/openapi-python-client/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15142\">https://nvd.nist.gov/vuln/detail/CVE-2020-15142</a></li>\n<li><a href=\"https://github.com/openapi-generators/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a\">https://github.com/openapi-generators/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a</a></li>\n<li><a href=\"https://github.com/openapi-generators/openapi-python-client/releases/tag/v.0.5.3\">https://github.com/openapi-generators/openapi-python-client/releases/tag/v.0.5.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9x4c-63pf-525f\">https://github.com/advisories/GHSA-9x4c-63pf-525f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9x4c-63pf-525f",
            "title": "[openapi-python-client] Arbitrary Code Generation",
            "date_modified": "2022-06-01T21:58:50.000Z",
            "date_published": "2020-08-20T14:38:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9x4c-63pf-525f"
            }
        },
        {
            "content_html": "<p>Encode OSS httpx &lt;=1.0.0.beta0 is affected by improper input validation in <code>httpx.URL</code>, <code>httpx.Client</code> and some functions using <code>httpx.URL.copy_with</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41945\">https://nvd.nist.gov/vuln/detail/CVE-2021-41945</a></li>\n<li><a href=\"https://github.com/encode/httpx/issues/2184\">https://github.com/encode/httpx/issues/2184</a></li>\n<li><a href=\"https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571\">https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571</a></li>\n<li><a href=\"https://github.com/encode/httpx/discussions/1831\">https://github.com/encode/httpx/discussions/1831</a></li>\n<li><a href=\"https://github.com/encode/httpx/pull/2185\">https://github.com/encode/httpx/pull/2185</a></li>\n<li><a href=\"https://github.com/encode/httpx\">https://github.com/encode/httpx</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h8pj-cxx2-jfg2\">https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</a></li>\n<li><a href=\"https://github.com/encode/httpx/releases/tag/0.23.0\">https://github.com/encode/httpx/releases/tag/0.23.0</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/httpx/PYSEC-2022-183.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/httpx/PYSEC-2022-183.yaml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h8pj-cxx2-jfg2",
            "title": "[httpx] Improper Input Validation in httpx",
            "date_modified": "2022-06-01T21:35:35.000Z",
            "date_published": "2022-04-29T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h8pj-cxx2-jfg2"
            }
        },
        {
            "content_html": "<p>When reading a TGA file with RLE packets that cross scan lines, Pillow reads the information past the end of the first line without deducting that from the length of the remaining file data. This vulnerability was introduced in Pillow 9.1.0, and can cause a heap buffer overflow.</p>\n<p>Opening an image with a zero or negative height has been found to bypass a decompression bomb check. This will now raise a SyntaxError instead, in turn raising a PIL.UnidentifiedImageError.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30595\">https://nvd.nist.gov/vuln/detail/CVE-2022-30595</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/blob/main/src/libImaging/TgaRleDecode.c\">https://github.com/python-pillow/Pillow/blob/main/src/libImaging/TgaRleDecode.c</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.1.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/9.1.1.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-f6r6-mr22\">https://github.com/advisories/GHSA-hr8g-f6r6-mr22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-f6r6-mr22",
            "title": "[Pillow] Buffer over-flow in Pillow",
            "date_modified": "2022-06-01T21:22:06.000Z",
            "date_published": "2022-05-26T00:01:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-f6r6-mr22"
            }
        }
    ]
}