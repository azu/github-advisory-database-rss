{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store.</p>\n<p>TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found <a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8\">https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8</a></li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8\">https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8</a></li>\n<li><a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ\">https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43fp-rhv2-5gv8\">https://github.com/advisories/GHSA-43fp-rhv2-5gv8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43fp-rhv2-5gv8",
            "title": "[certifi] Certifi removing TrustCor root certificate",
            "date_modified": "2022-12-08T14:37:36.000Z",
            "date_published": "2022-12-07T23:05:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43fp-rhv2-5gv8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Code injection in <code>paddle.audio.functional.get_window</code> in PaddlePaddle 2.4.0-rc0 allows arbitrary code execution. A <a href=\"https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb\">patch</a> is available on the <code>develop</code> branch of the repository and anticipated to be part of a 2.4 release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46742\">https://nvd.nist.gov/vuln/detail/CVE-2022-46742</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/pull/47386\">https://github.com/PaddlePaddle/Paddle/pull/47386</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb\">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gcjf-29m9-888q\">https://github.com/advisories/GHSA-gcjf-29m9-888q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gcjf-29m9-888q",
            "title": "[PaddlePaddle] PaddlePaddle vulnerable to Code Injection",
            "date_modified": "2022-12-09T15:35:13.000Z",
            "date_published": "2022-12-07T09:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gcjf-29m9-888q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A directory traversal vulnerability in the SevenZipFile.extractall() function of the python library py7zr v0.20.0 and earlier allows attackers to write arbitrary files via extracting a crafted 7z file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-44900\">https://nvd.nist.gov/vuln/detail/CVE-2022-44900</a></li>\n<li><a href=\"https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406\">https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html\">http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html</a></li>\n<li><a href=\"https://lessonsec.com/cve/cve-2022-44900/\">https://lessonsec.com/cve/cve-2022-44900/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m8xw-9x5x-6vh3\">https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m8xw-9x5x-6vh3",
            "title": "[py7zr] py7zr directory traversal vulnerability",
            "date_modified": "2022-12-09T15:55:24.000Z",
            "date_published": "2022-12-06T21:30:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m8xw-9x5x-6vh3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Everyone below v1.0.5 is impacted by this flaw, of confidentiality being at risk due to the password(s) being easily able to be guessed with Passeo's use of the <code>random</code> library. It is recommended to change any passwords made with Passeo before v1.0.5 and upgrade to v1.0.5, and v1.0.5 patches this with the <code>secrets</code> library.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No current workaround available than updating to v1.0.5.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ArjunSharda/Passeo/security/advisories/GHSA-mhhf-vgwh-fw9h\">https://github.com/ArjunSharda/Passeo/security/advisories/GHSA-mhhf-vgwh-fw9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23472\">https://nvd.nist.gov/vuln/detail/CVE-2022-23472</a></li>\n<li><a href=\"https://github.com/ArjunSharda/Passeo/commit/8caa798b6bc4647dca59b2376204b6dc6176361a\">https://github.com/ArjunSharda/Passeo/commit/8caa798b6bc4647dca59b2376204b6dc6176361a</a></li>\n<li><a href=\"https://peps.python.org/pep-0506/\">https://peps.python.org/pep-0506/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mhhf-vgwh-fw9h\">https://github.com/advisories/GHSA-mhhf-vgwh-fw9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mhhf-vgwh-fw9h",
            "title": "[Passeo] Passeo uses insecure random number generator",
            "date_modified": "2022-12-08T09:44:27.000Z",
            "date_published": "2022-12-06T21:13:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mhhf-vgwh-fw9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of package gitpython are vulnerable to Remote Code Execution (RCE) due to improper user input validation, which makes it possible to inject a maliciously crafted remote URL into the clone command. Exploiting this vulnerability is possible because the library makes external calls to git without sufficient sanitization of input arguments.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24439\">https://nvd.nist.gov/vuln/detail/CVE-2022-24439</a></li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/blob/bec61576ae75803bc4e60d8de7a629c194313d1c/git/repo/base.py%23L1249\">https://github.com/gitpython-developers/GitPython/blob/bec61576ae75803bc4e60d8de7a629c194313d1c/git/repo/base.py%23L1249</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858\">https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hcpj-qp55-gfph\">https://github.com/advisories/GHSA-hcpj-qp55-gfph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hcpj-qp55-gfph",
            "title": "[GitPython] GitPython vulnerable to Remote Code Execution due to improper user input validation",
            "date_modified": "2022-12-07T19:19:24.000Z",
            "date_published": "2022-12-06T06:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hcpj-qp55-gfph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Unsafe extracting using <code>shutil.unpack_archive()</code> from a remotely retrieved tarball may lead to writing the extracted file to an unintended destination.</p>\n<h3 id=\"details\">Details</h3>\n<p>Extracting files using <code>shutil.unpack_archive()</code> from a potentially malicious tarball without validating that the destination file path is within the intended destination directory can cause files outside the destination directory to be overwritten.  </p>\n<p>The vulnerable code snippet is between <a href=\"https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158\">L153..158</a>. </p>\n<pre><code class=\"language-python\">response = requests.get(url, stream=True)\n\nwith open(zippath, \"wb\") as f:\n      f.write(response.raw.read())\n\nshutil.unpack_archive(zippath, unzippedpath)\n</code></pre>\n<p>It seems that a remotely retrieved tarball which could be with the extension <code>.tar.gz</code> happens to be unpacked using <code>shutil.unpack_archive()</code> with no destination verification/limitation of the extracted files.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The PoC provided showcases the risk of extracting the non-harmless text file <code>sim4n6.txt</code> to a parent location rather than the current folder. </p>\n<pre><code class=\"language-bash\">&gt; tar --list -f archive.tar\ntar: Removing leading `../../../' from member names\n../../../sim4n6.txt\n\n&gt; python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; shutil.unpack_archive(\"archive.tar\")\n&gt;&gt;&gt; exit()\n\n&gt; file ../../../sim4n6.txt\n../../../sim4n6.txt: ASCII text\n</code></pre>\n<h3 id=\"a-potential-attack-scenario\">A Potential Attack Scenario</h3>\n<ul>\n<li>An attacker may craft a malicious tarball with a filename path, such as <code>../../../../../../../../etc/passwd</code>, and then serve the archive remotely, thus, providing a possibility to overwrite the system files.</li>\n</ul>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Potential mitigation could be to:</p>\n<ul>\n<li>Use a safer module, like <code>zipfile</code>.</li>\n<li>Validate the location of the extracted files and discard those with malicious paths such as a relative path <code>..</code> or absolute ones.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/DataDog/guarddog/security/advisories/GHSA-78m5-jpmf-ch7v\">https://github.com/DataDog/guarddog/security/advisories/GHSA-78m5-jpmf-ch7v</a></li>\n<li><a href=\"https://github.com/DataDog/guarddog/commit/37c7d0767ba28f4df46117d478f97652594c491c\">https://github.com/DataDog/guarddog/commit/37c7d0767ba28f4df46117d478f97652594c491c</a></li>\n<li><a href=\"https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158\">https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-78m5-jpmf-ch7v\">https://github.com/advisories/GHSA-78m5-jpmf-ch7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-78m5-jpmf-ch7v",
            "title": "[guarddog] GuardDog vulnerable to arbitrary file write when scanning a specially-crafted remote PyPI package",
            "date_modified": "2022-12-05T23:34:43.000Z",
            "date_published": "2022-12-05T23:34:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-78m5-jpmf-ch7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely. The fix for this issue is planned to be released in version 1.13.1, there is a release checker in issue #89855.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45907\">https://nvd.nist.gov/vuln/detail/CVE-2022-45907</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/issues/88868\">https://github.com/pytorch/pytorch/issues/88868</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/commit/767f6aa49fe20a2766b9843d01e3b7f7793df6a3\">https://github.com/pytorch/pytorch/commit/767f6aa49fe20a2766b9843d01e3b7f7793df6a3</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/issues/89855\">https://github.com/pytorch/pytorch/issues/89855</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/pull/89189\">https://github.com/pytorch/pytorch/pull/89189</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-47fc-vmwq-366v\">https://github.com/advisories/GHSA-47fc-vmwq-366v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-47fc-vmwq-366v",
            "title": "[torch] PyTorch vulnerable to arbitrary code execution",
            "date_modified": "2022-12-02T22:28:42.000Z",
            "date_published": "2022-11-26T03:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-47fc-vmwq-366v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>XSS Vulnerability in multiple XBlock Fields.  Any platform that has deployed the XBlock will be impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492\">https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492</a></p>\n<p>The fix is compatible with all Open edX releases newer than Lilac.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864\">https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/security/advisories/GHSA-qv6c-367r-3w6q\">https://github.com/openedx/xblock-drag-and-drop-v2/security/advisories/GHSA-qv6c-367r-3w6q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46147\">https://nvd.nist.gov/vuln/detail/CVE-2022-46147</a></li>\n<li><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864\">https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864</a></li>\n<li><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492\">https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492</a></li>\n<li><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/commit/68887d1b4a44325d2de7573d450e41129ba98b1a\">https://github.com/openedx/xblock-drag-and-drop-v2/commit/68887d1b4a44325d2de7573d450e41129ba98b1a</a></li>\n<li><a href=\"https://github.com/openedx/xblock-drag-and-drop-v2/releases/tag/v3.0.0\">https://github.com/openedx/xblock-drag-and-drop-v2/releases/tag/v3.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qv6c-367r-3w6q\">https://github.com/advisories/GHSA-qv6c-367r-3w6q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qv6c-367r-3w6q",
            "title": "[xblock-drag-and-drop-v2] XBlock vulnerable to Cross-Site Scripting (XSS) ",
            "date_modified": "2022-12-02T22:26:25.000Z",
            "date_published": "2022-12-02T22:26:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qv6c-367r-3w6q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed.</p>\n<p>This is due to a path traversal vulnerability when extracting the <code>.tar.gz</code> file of the package being scanned, which exists by design in the <code>tarfile.TarFile.extractall</code> function. See also <a href=\"https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall\">https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall</a></p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>Upgrade to GuardDog v0.1.5 or more recent.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://semgrep.dev/r?q=trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal\">https://semgrep.dev/r?q=trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal</a></li>\n<li><a href=\"https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html\">https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html</a></li>\n<li><a href=\"https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall\">https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/DataDog/guarddog/security/advisories/GHSA-rp2v-v467-q9vq\">https://github.com/DataDog/guarddog/security/advisories/GHSA-rp2v-v467-q9vq</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rp2v-v467-q9vq\">https://github.com/advisories/GHSA-rp2v-v467-q9vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rp2v-v467-q9vq",
            "title": "[guarddog] GuardDog vulnerable to arbitrary file write when scanning a specially-crafted PyPI package",
            "date_modified": "2022-12-02T22:25:25.000Z",
            "date_published": "2022-12-02T22:25:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rp2v-v467-q9vq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25291\">https://nvd.nist.gov/vuln/detail/CVE-2021-25291</a></li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cbdce6c5d054fccaf4af34b47f212355c64ace7a\">https://github.com/python-pillow/Pillow/commit/cbdce6c5d054fccaf4af34b47f212355c64ace7a</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html</a></li>\n<li><a href=\"https://security.gentoo.org/glsa/202107-33\">https://security.gentoo.org/glsa/202107-33</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mvg9-xffr-p774\">https://github.com/advisories/GHSA-mvg9-xffr-p774</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mvg9-xffr-p774",
            "title": "[Pillow] Out of bounds read in Pillow",
            "date_modified": "2022-12-01T21:57:25.000Z",
            "date_published": "2021-03-29T16:35:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mvg9-xffr-p774"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In PaddlePaddle before 2.4, paddle.audio.functional.get_window is vulnerable to code injection because it calls eval on a user-supplied winstr. This may lead to arbitrary code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45908\">https://nvd.nist.gov/vuln/detail/CVE-2022-45908</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb\">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-83g7-8fch-p37m\">https://github.com/advisories/GHSA-83g7-8fch-p37m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-83g7-8fch-p37m",
            "title": "[paddlepaddle] PaddlePaddle vulnerable to code injection via winstr",
            "date_modified": "2022-12-01T22:10:00.000Z",
            "date_published": "2022-11-26T03:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-83g7-8fch-p37m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Restriction of Excessive Authentication Attempts in GitHub repository wger-project/wger prior to 2.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2650\">https://nvd.nist.gov/vuln/detail/CVE-2022-2650</a></li>\n<li><a href=\"https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c\">https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c</a></li>\n<li><a href=\"https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b\">https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gr58-76rp-mmg4\">https://github.com/advisories/GHSA-gr58-76rp-mmg4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gr58-76rp-mmg4",
            "title": "[wger] wger vulnerable to brute force attempts",
            "date_modified": "2022-11-30T19:32:53.000Z",
            "date_published": "2022-11-24T18:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gr58-76rp-mmg4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Missing Authentication for Critical Function in GitHub repository ikus060/rdiffweb prior to 2.5.0a6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4018\">https://nvd.nist.gov/vuln/detail/CVE-2022-4018</a></li>\n<li><a href=\"https://github.com/ikus060/rdiffweb/commit/f2a32f2a9f3fb8be1a9432ac3d81d3aacdb13095\">https://github.com/ikus060/rdiffweb/commit/f2a32f2a9f3fb8be1a9432ac3d81d3aacdb13095</a></li>\n<li><a href=\"https://huntr.dev/bounties/5340c2f6-0252-40f6-8929-cca5d64958a5\">https://huntr.dev/bounties/5340c2f6-0252-40f6-8929-cca5d64958a5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wph-9vrm-6v3w\">https://github.com/advisories/GHSA-4wph-9vrm-6v3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wph-9vrm-6v3w",
            "title": "[rdiffweb] Rdiffweb vulnerable to Missing Authentication for Critical Function",
            "date_modified": "2022-11-29T05:05:21.000Z",
            "date_published": "2022-11-16T19:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wph-9vrm-6v3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>On November 17, 2022, an email was received from Bitly advising that the new link quota per free token is lowered to 50 per month (from its previous value of 1000 per month). As per the email, this change is effective on December 8, 2022.</p>\n<p>The new quota is so low as to not be useful. For this reason, the maintenance of this package is being discontinued, although the package should continue to function with the limited new quota.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/impredicative/bitlyshortener/security/advisories/GHSA-ggrh-grj3-vfvw\">https://github.com/impredicative/bitlyshortener/security/advisories/GHSA-ggrh-grj3-vfvw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ggrh-grj3-vfvw\">https://github.com/advisories/GHSA-ggrh-grj3-vfvw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ggrh-grj3-vfvw",
            "title": "[bitlyshortener] Package discontinued because Bitly lowered the free quota",
            "date_modified": "2022-11-28T23:00:24.000Z",
            "date_published": "2022-11-28T23:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ggrh-grj3-vfvw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/joniles/mpxj\">https://github.com/joniles/mpxj</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g\">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41954\">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>\n<li><a href=\"https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd\">https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf2p-4gqj-849g\">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf2p-4gqj-849g",
            "title": "[mpxj] Temporary File Information Disclosure vulnerability in MPXJ",
            "date_modified": "2022-12-07T17:25:08.000Z",
            "date_published": "2022-11-28T22:09:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf2p-4gqj-849g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the cleo PyPI package, when an attacker is able to supply arbitrary input to the Table.set_rows method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-42966\">https://nvd.nist.gov/vuln/detail/CVE-2022-42966</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186\">https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186</a></li>\n<li><a href=\"https://github.com/python-poetry/cleo/pull/285\">https://github.com/python-poetry/cleo/pull/285</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2p9h-ccw7-33gf\">https://github.com/advisories/GHSA-2p9h-ccw7-33gf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2p9h-ccw7-33gf",
            "title": "[cleo] cleo is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2022-11-28T21:13:01.000Z",
            "date_published": "2022-11-10T12:01:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2p9h-ccw7-33gf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Spark Provider, Apache Airflow allows an attacker to read arbtrary files in the task execution context, without write access to DAG files. This issue affects Spark Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Spark Provider is installed (Spark Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Spark Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Spark Provider installed).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40954\">https://nvd.nist.gov/vuln/detail/CVE-2022-40954</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27646\">https://github.com/apache/airflow/pull/27646</a></li>\n<li><a href=\"https://lists.apache.org/thread/0tmdlnmjs5t4gsx5fy73tb6zd3jztq45\">https://lists.apache.org/thread/0tmdlnmjs5t4gsx5fy73tb6zd3jztq45</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45r6-j3cc-6mxx\">https://github.com/advisories/GHSA-45r6-j3cc-6mxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45r6-j3cc-6mxx",
            "title": "[apache-airflow] OS Command Injection in Apache Airflow",
            "date_modified": "2022-11-28T21:06:22.000Z",
            "date_published": "2022-11-22T12:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45r6-j3cc-6mxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pig Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Pig Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Pig Provider is installed (Pig Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pig Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40189\">https://nvd.nist.gov/vuln/detail/CVE-2022-40189</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27644\">https://github.com/apache/airflow/pull/27644</a></li>\n<li><a href=\"https://lists.apache.org/thread/yxnfzfw2w9pj5s785k3rlyly4y44sd15\">https://lists.apache.org/thread/yxnfzfw2w9pj5s785k3rlyly4y44sd15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rmf2-pwfq-h75j\">https://github.com/advisories/GHSA-rmf2-pwfq-h75j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rmf2-pwfq-h75j",
            "title": "[apache-airflow] OS Command Injection in Apache Airflow",
            "date_modified": "2022-11-29T17:55:59.000Z",
            "date_published": "2022-11-22T12:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rmf2-pwfq-h75j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pinot Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Apache Airflow Pinot Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Apache Airflow Pinot Provider is installed (Apache Airflow Pinot Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pinot Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38649\">https://nvd.nist.gov/vuln/detail/CVE-2022-38649</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27641\">https://github.com/apache/airflow/pull/27641</a></li>\n<li><a href=\"https://lists.apache.org/thread/033o1gbc4ly6dpd2xf1o201v56fbl4dz\">https://lists.apache.org/thread/033o1gbc4ly6dpd2xf1o201v56fbl4dz</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7wqf-h36w-47mc\">https://github.com/advisories/GHSA-7wqf-h36w-47mc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7wqf-h36w-47mc",
            "title": "[apache-airflow] OS Command Injection in Apache Airflow",
            "date_modified": "2022-11-29T17:54:19.000Z",
            "date_published": "2022-11-22T12:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7wqf-h36w-47mc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Hive Provider, Apache Airflow allows an attacker to execute arbtrary commands in the task execution context, without write access to DAG files. This issue affects Hive Provider versions prior to 4.1.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case HIve Provider is installed (Hive Provider 4.1.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the HIve Provider version 4.1.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Hive Provider installed).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41131\">https://nvd.nist.gov/vuln/detail/CVE-2022-41131</a></li>\n<li><a href=\"https://github.com/apache/airflow/pull/27647\">https://github.com/apache/airflow/pull/27647</a></li>\n<li><a href=\"https://lists.apache.org/thread/wwo3qp0z8gv54yzn7hr04wy4n8gb0vhl\">https://lists.apache.org/thread/wwo3qp0z8gv54yzn7hr04wy4n8gb0vhl</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm43-f2pv-6v68\">https://github.com/advisories/GHSA-cm43-f2pv-6v68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm43-f2pv-6v68",
            "title": "[apache-airflow] OS Command Injection in Apache Airflow",
            "date_modified": "2022-11-28T21:06:47.000Z",
            "date_published": "2022-11-22T12:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm43-f2pv-6v68"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}