{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This only impacts users that use the <code>escape</code> or <code>escapeAll</code> functions with the <code>interpolation</code> option set to <code>true</code>. Example:</p>\n<pre><code class=\"language-javascript\">import cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n  shell: \"bash\",\n  // Or\n  shell: \"dash\",\n  // Or\n  shell: \"powershell.exe\",\n  // Or\n  shell: \"zsh\",\n  // Or\n  shell: undefined, // Only if the default shell is one of the affected shells.\n};\n\n// 2. Attack (one of multiple)\nconst payload = \"foo #bar\";\n\n// 3. Usage\nlet escapedPayload;\nshescape.escape(payload, { interpolation: true });\n// Or\nshescape.escapeAll(payload, { interpolation: true });\n\ncp.execSync(`echo Hello ${escapedPayload}!`, options);\n// _Output depends on the shell being used_\n</code></pre>\n<p>The result is that if an attacker is able to include whitespace in their input they can:</p>\n<ol>\n<li>Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace.<ul>\n<li>Affected shells: <em>Bash</em>, <em>Dash</em>, <em>Zsh</em>, <em>PowerShell</em></li>\n</ul>\n</li>\n<li>Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. <ul>\n<li>Affected shells: <em>Bash</em></li>\n</ul>\n</li>\n<li>Invoke arbitrary commands by inserting a line feed character.<ul>\n<li>Affected Shells: <em>Bash</em>, <em>Dash</em>, <em>Zsh</em>, <em>PowerShell</em></li>\n</ul>\n</li>\n<li>Invoke arbitrary commands by inserting a carriage return character.<ul>\n<li>Affected Shells: <em>PowerShell</em></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>Behaviour number 1 has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\">v1.5.7</a> which you can upgrade to now. No further changes are required.</p>\n<p>Behaviour number 2, 3, and 4 have been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">v1.5.8</a> which you can upgrade to now. No further changes are required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The best workaround is to avoid having to use the <code>interpolation: true</code> option - in most cases using an alternative is possible, see <a href=\"https://github.com/ericcornelissen/shescape#recipes\">the recipes</a> for recommendations.</p>\n<p>Alternatively, you can strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping <code>'\\u0085'</code> which is not included in JavaScript's definition of <code>\\s</code> for Regular Expressions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/322\">https://github.com/ericcornelissen/shescape/pull/322</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/324\">https://github.com/ericcornelissen/shescape/pull/324</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Comment on:<ul>\n<li>For behaviour 1 (PowerShell): <a href=\"https://github.com/ericcornelissen/shescape/pull/322\">https://github.com/ericcornelissen/shescape/pull/322</a></li>\n<li>For behaviour 1 (Bash, Dash, Zsh): <a href=\"https://github.com/ericcornelissen/shescape/pull/324\">https://github.com/ericcornelissen/shescape/pull/324</a></li>\n<li>For behaviour 2, 3, 4 (<em>any shell</em>): <a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n</ul>\n</li>\n<li>Open an issue at <a href=\"https://github.com/ericcornelissen/shescape/issues\">https://github.com/ericcornelissen/shescape/issues</a> (<em>New issue</em> &gt; <em>Question</em> &gt; <em>Get started</em>)</li>\n<li>If you're missing CMD from this advisory, see <a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-44vr-rwwj-p88h\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-44vr-rwwj-p88h</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/322\">https://github.com/ericcornelissen/shescape/pull/322</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/324\">https://github.com/ericcornelissen/shescape/pull/324</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44vr-rwwj-p88h\">https://github.com/advisories/GHSA-44vr-rwwj-p88h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44vr-rwwj-p88h",
            "title": "[shescape] Shscape vulnerable to insufficient escaping of whitespace",
            "date_modified": "2022-07-15T21:46:10.000Z",
            "date_published": "2022-07-15T21:46:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44vr-rwwj-p88h"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This impacts users that use Shescape (any API function) to escape arguments for <strong>cmd.exe</strong> on <strong>Windows</strong>. An attacker can omit all arguments following their input by including a line feed character (<code>'\\n'</code>) in the payload. Example:</p>\n<pre><code class=\"language-javascript\">import cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n  shell: \"cmd.exe\",\n};\n\n// 2. Attack\nconst payload = \"attacker\\n\";\n\n// 3. Usage\nlet escapedPayload;\nescapedPayload = shescape.escape(payload, options);\n// Or\nescapedPayload = shescape.escapeAll([payload], options)[0];\n// Or\nescapedPayload = shescape.quote(payload, options);\n// Or\nescapedPayload = shescape.quoteAll([payload], options)[0];\n\ncp.execSync(`echo Hello ${escapedPayload}! How are you doing?`, options);\n// Outputs:  \"Hello attacker\"\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: <code>execSync</code> is just illustrative here, all of <code>exec</code>, <code>execFile</code>, <code>execFileSync</code>, <code>fork</code>, <code>spawn</code>, and <code>spawnSync</code> can be attacked using a line feed character if CMD is the shell being used.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">v1.5.8</a> which you can upgrade to now. No further changes are required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Alternatively, line feed characters (<code>'\\n'</code>) can be stripped out manually or the user input can be made the last argument (this only limits the impact).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Comment on <a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n<li>Open an issue at <a href=\"https://github.com/ericcornelissen/shescape/issues\">https://github.com/ericcornelissen/shescape/issues</a> (<em>New issue</em> &gt; <em>Question</em> &gt; <em>Get started</em>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/332\">https://github.com/ericcornelissen/shescape/pull/332</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\">https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jjc5-fp7p-6f8w\">https://github.com/advisories/GHSA-jjc5-fp7p-6f8w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jjc5-fp7p-6f8w",
            "title": "[shescape] Shescape prior to 1.5.8 vulnerable to insufficient escaping of line feeds for CMD",
            "date_modified": "2022-07-15T21:39:15.000Z",
            "date_published": "2022-07-15T21:39:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jjc5-fp7p-6f8w"
            }
        },
        {
            "content_html": "<p>This affects versions of package <code>json-pointer</code> up to and including <code>0.6.1</code>. A type confusion vulnerability can lead to a bypass of CVE-2020-7709 when the pointer components are arrays.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23820\">https://nvd.nist.gov/vuln/detail/CVE-2021-23820</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/blob/master/index.js%23L78\">https://github.com/manuelstofer/json-pointer/blob/master/index.js%23L78</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577287\">https://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577287</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/pull/36\">https://github.com/manuelstofer/json-pointer/pull/36</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/commit/931b0f9c7178ca09778087b4b0ac7e4f505620c2\">https://github.com/manuelstofer/json-pointer/commit/931b0f9c7178ca09778087b4b0ac7e4f505620c2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v5vg-g7rq-363w\">https://github.com/advisories/GHSA-v5vg-g7rq-363w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v5vg-g7rq-363w",
            "title": "[json-pointer] Prototype Pollution in json-pointer",
            "date_modified": "2022-07-15T20:23:23.000Z",
            "date_published": "2021-11-08T17:40:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v5vg-g7rq-363w"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>fastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.</p>\n<p>All versions of fastify-bearer-auth are also affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We released:</p>\n<ul>\n<li>v8.0.1 with a fix for the Fastify v4 line</li>\n<li>v7.0.2 with a fix for the Fastify v3 line</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds. Update your dependencies.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/fastify/fastify-bearer-auth\">https://github.com/fastify/fastify-bearer-auth</a></li>\n<li>Email us at <a href=\"mailto:hello@matteocollina.com\">hello@matteocollina.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31142\">https://nvd.nist.gov/vuln/detail/CVE-2022-31142</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\">https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\">https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\">https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f</a></li>\n<li><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/advisories/GHSA-376v-xgjx-7mfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr",
            "title": "[@fastify/bearer-auth] Timing Attack Vector in fastify-bearer-auth",
            "date_modified": "2022-07-15T19:14:28.000Z",
            "date_published": "2022-07-15T19:14:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>fastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.</p>\n<p>All versions of fastify-bearer-auth are also affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We released:</p>\n<ul>\n<li>v8.0.1 with a fix for the Fastify v4 line</li>\n<li>v7.0.2 with a fix for the Fastify v3 line</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds. Update your dependencies.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/fastify/fastify-bearer-auth\">https://github.com/fastify/fastify-bearer-auth</a></li>\n<li>Email us at <a href=\"mailto:hello@matteocollina.com\">hello@matteocollina.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31142\">https://nvd.nist.gov/vuln/detail/CVE-2022-31142</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\">https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\">https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\">https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f</a></li>\n<li><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/advisories/GHSA-376v-xgjx-7mfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr",
            "title": "[@fastify/bearer-auth] Timing Attack Vector in fastify-bearer-auth",
            "date_modified": "2022-07-15T19:14:28.000Z",
            "date_published": "2022-07-15T19:14:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>fastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.</p>\n<p>All versions of fastify-bearer-auth are also affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We released:</p>\n<ul>\n<li>v8.0.1 with a fix for the Fastify v4 line</li>\n<li>v7.0.2 with a fix for the Fastify v3 line</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds. Update your dependencies.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/fastify/fastify-bearer-auth\">https://github.com/fastify/fastify-bearer-auth</a></li>\n<li>Email us at <a href=\"mailto:hello@matteocollina.com\">hello@matteocollina.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31142\">https://nvd.nist.gov/vuln/detail/CVE-2022-31142</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\">https://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\">https://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716</a></li>\n<li><a href=\"https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\">https://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f</a></li>\n<li><a href=\"https://hackerone.com/reports/1633287\">https://hackerone.com/reports/1633287</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-376v-xgjx-7mfr\">https://github.com/advisories/GHSA-376v-xgjx-7mfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr",
            "title": "[fastify-bearer-auth] Timing Attack Vector in fastify-bearer-auth",
            "date_modified": "2022-07-15T19:14:28.000Z",
            "date_published": "2022-07-15T19:14:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-376v-xgjx-7mfr"
            }
        },
        {
            "content_html": "<p>This affects the package vm2 before 3.6.11. It is possible to trigger a RangeError exception from the host rather than the \"sandboxed\" context by reaching the stack call limit with an infinite recursion. The returned object is then used to reference the mainModule property of the host code running the script allowing it to spawn a child_process and execute arbitrary code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10761\">https://nvd.nist.gov/vuln/detail/CVE-2019-10761</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/issues/197\">https://github.com/patriksimek/vm2/issues/197</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/commit/4b22d704e4794af63a5a2d633385fd20948f6f90\">https://github.com/patriksimek/vm2/commit/4b22d704e4794af63a5a2d633385fd20948f6f90</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-VM2-473188\">https://snyk.io/vuln/SNYK-JS-VM2-473188</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/issues/197#issuecomment-480643832\">https://github.com/patriksimek/vm2/issues/197#issuecomment-480643832</a></li>\n<li><a href=\"https://gist.github.com/JLLeitschuh/609bb2efaff22ed84fe182cf574c023a\">https://gist.github.com/JLLeitschuh/609bb2efaff22ed84fe182cf574c023a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wf5x-cr3r-xr77\">https://github.com/advisories/GHSA-wf5x-cr3r-xr77</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wf5x-cr3r-xr77",
            "title": "[vm2] vm2 before 3.6.11 vulnerable to sandbox escape",
            "date_modified": "2022-07-15T18:36:10.000Z",
            "date_published": "2022-07-14T00:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wf5x-cr3r-xr77"
            }
        },
        {
            "content_html": "<p>The package svelte before 3.49.0 is vulnerable to Cross-site Scripting (XSS) due to improper input sanitization and to improper escape of attributes when using objects during SSR (Server-Side Rendering). Exploiting this vulnerability is possible via objects with a custom toString() function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25875\">https://nvd.nist.gov/vuln/detail/CVE-2022-25875</a></li>\n<li><a href=\"https://github.com/sveltejs/svelte/commit/f8605d6acbf66976da9b4547f76e90e163899907\">https://github.com/sveltejs/svelte/commit/f8605d6acbf66976da9b4547f76e90e163899907</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-SVELTE-2931080\">https://snyk.io/vuln/SNYK-JS-SVELTE-2931080</a></li>\n<li><a href=\"https://github.com/sveltejs/svelte/pull/7530#23issuecomment-1158575990\">https://github.com/sveltejs/svelte/pull/7530#23issuecomment-1158575990</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wv8q-r932-8hc7\">https://github.com/advisories/GHSA-wv8q-r932-8hc7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wv8q-r932-8hc7",
            "title": "[svelte] Svelte cross-site scripting prior to 3.49.0 due to when using objects during server-side rendering",
            "date_modified": "2022-07-15T16:22:18.000Z",
            "date_published": "2022-07-13T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wv8q-r932-8hc7"
            }
        },
        {
            "content_html": "<p>This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25896\">https://nvd.nist.gov/vuln/detail/CVE-2022-25896</a></li>\n<li><a href=\"https://github.com/jaredhanson/passport/pull/900\">https://github.com/jaredhanson/passport/pull/900</a></li>\n<li><a href=\"https://github.com/jaredhanson/passport/commit/7e9b9cf4d7be02428e963fc729496a45baeea608\">https://github.com/jaredhanson/passport/commit/7e9b9cf4d7be02428e963fc729496a45baeea608</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PASSPORT-2840631\">https://snyk.io/vuln/SNYK-JS-PASSPORT-2840631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v923-w3x8-wh69\">https://github.com/advisories/GHSA-v923-w3x8-wh69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v923-w3x8-wh69",
            "title": "[passport] Improper session management in passport",
            "date_modified": "2022-07-06T21:09:15.000Z",
            "date_published": "2022-07-02T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v923-w3x8-wh69"
            }
        },
        {
            "content_html": "<p>The package link-preview-js before 2.1.17 are vulnerable to Server-side Request Forgery (SSRF) which allows attackers to send arbitrary requests to the local network and read the response. This is due to flawed DNS rebinding protection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25876\">https://nvd.nist.gov/vuln/detail/CVE-2022-25876</a></li>\n<li><a href=\"https://github.com/ospfranco/link-preview-js/issues/115\">https://github.com/ospfranco/link-preview-js/issues/115</a></li>\n<li><a href=\"https://github.com/ospfranco/link-preview-js/pull/117\">https://github.com/ospfranco/link-preview-js/pull/117</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LINKPREVIEWJS-2933520\">https://snyk.io/vuln/SNYK-JS-LINKPREVIEWJS-2933520</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h9cw-7g8j-h66h\">https://github.com/advisories/GHSA-h9cw-7g8j-h66h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h9cw-7g8j-h66h",
            "title": "[link-preview-js] Server-Side Request Forgery in link-preview-js",
            "date_modified": "2022-07-13T20:00:32.000Z",
            "date_published": "2022-07-02T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h9cw-7g8j-h66h"
            }
        },
        {
            "content_html": "<p>All versions of package scss-tokenizer are vulnerable to Regular Expression Denial of Service (ReDoS) via the loadAnnotation() function, due to the usage of insecure regex.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25758\">https://nvd.nist.gov/vuln/detail/CVE-2022-25758</a></li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/issues/45\">https://github.com/sasstools/scss-tokenizer/issues/45</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2936782\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2936782</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-SCSSTOKENIZER-2339884\">https://snyk.io/vuln/SNYK-JS-SCSSTOKENIZER-2339884</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-4pqv-wmr8\">https://github.com/advisories/GHSA-7mwh-4pqv-wmr8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-4pqv-wmr8",
            "title": "[scss-tokenizer] Regular expression denial of service in scss-tokenizer",
            "date_modified": "2022-07-13T20:01:12.000Z",
            "date_published": "2022-07-02T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-4pqv-wmr8"
            }
        },
        {
            "content_html": "<p>swagger-ui has XSS in key names</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-1000229\">https://nvd.nist.gov/vuln/detail/CVE-2016-1000229</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:0868\">https://access.redhat.com/errata/RHSA-2017:0868</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000229\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000229</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h8wp-wgcq-qhrf\">https://github.com/advisories/GHSA-h8wp-wgcq-qhrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h8wp-wgcq-qhrf",
            "title": "[swagger-ui] Improper Neutralization of Input During Web Page Generation in swagger-ui",
            "date_modified": "2022-07-06T20:04:56.000Z",
            "date_published": "2022-05-24T17:04:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h8wp-wgcq-qhrf"
            }
        },
        {
            "content_html": "<p>In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-10744\">https://nvd.nist.gov/vuln/detail/CVE-2016-10744</a></li>\n<li><a href=\"https://github.com/select2/select2/issues/4587\">https://github.com/select2/select2/issues/4587</a></li>\n<li><a href=\"https://github.com/snipe/snipe-it/pull/6831\">https://github.com/snipe/snipe-it/pull/6831</a></li>\n<li><a href=\"https://github.com/snipe/snipe-it/pull/6831/commits/5848d9a10c7d62c73ff6a3858edfae96a429402a\">https://github.com/snipe/snipe-it/pull/6831/commits/5848d9a10c7d62c73ff6a3858edfae96a429402a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf66-hmqf-q3fc\">https://github.com/advisories/GHSA-rf66-hmqf-q3fc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf66-hmqf-q3fc",
            "title": "[select2] Improper Neutralization of Input During Web Page Generation in Select2",
            "date_modified": "2022-07-06T20:04:29.000Z",
            "date_published": "2022-05-14T01:14:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf66-hmqf-q3fc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Parse Server LiveQuery does not remove protected fields in classes, passing them to the client.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The LiveQueryController now removes protected fields from the client response.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use <code>Parse.Cloud.afterLiveQueryEvent</code> to manually remove protected fields.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31112\">https://nvd.nist.gov/vuln/detail/CVE-2022-31112</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8073\">https://github.com/parse-community/parse-server/issues/8073</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8074\">https://github.com/parse-community/parse-server/pull/8074</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1\">https://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6\">https://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.4\">https://github.com/parse-community/parse-server/releases/tag/5.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crrq-vr9j-fxxh",
            "title": "[parse-server] Protected fields exposed via LiveQuery",
            "date_modified": "2022-07-06T19:52:24.000Z",
            "date_published": "2022-07-06T19:52:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crrq-vr9j-fxxh"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Parse Server LiveQuery does not remove protected fields in classes, passing them to the client.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The LiveQueryController now removes protected fields from the client response.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use <code>Parse.Cloud.afterLiveQueryEvent</code> to manually remove protected fields.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31112\">https://nvd.nist.gov/vuln/detail/CVE-2022-31112</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8073\">https://github.com/parse-community/parse-server/issues/8073</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8074\">https://github.com/parse-community/parse-server/pull/8074</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1\">https://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6\">https://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.4\">https://github.com/parse-community/parse-server/releases/tag/5.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crrq-vr9j-fxxh\">https://github.com/advisories/GHSA-crrq-vr9j-fxxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crrq-vr9j-fxxh",
            "title": "[parse-server] Protected fields exposed via LiveQuery",
            "date_modified": "2022-07-06T19:52:24.000Z",
            "date_published": "2022-07-06T19:52:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crrq-vr9j-fxxh"
            }
        },
        {
            "content_html": "<p>deep.assign npm package 0.0.0-alpha.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-40663\">https://nvd.nist.gov/vuln/detail/CVE-2021-40663</a></li>\n<li><a href=\"https://github.com/janbialostok/deep-assign/issues/1\">https://github.com/janbialostok/deep-assign/issues/1</a></li>\n<li><a href=\"https://www.npmjs.com/package/deep.assign\">https://www.npmjs.com/package/deep.assign</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3829-mgmw-jcg4\">https://github.com/advisories/GHSA-3829-mgmw-jcg4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3829-mgmw-jcg4",
            "title": "[deep.assign] Prototype Pollution in deep.assign",
            "date_modified": "2022-07-11T19:25:09.000Z",
            "date_published": "2022-07-01T00:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3829-mgmw-jcg4"
            }
        },
        {
            "content_html": "<p>All versions of package git-clone are vulnerable to Command Injection due to insecure usage of the --upload-pack feature of git.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25900\">https://nvd.nist.gov/vuln/detail/CVE-2022-25900</a></li>\n<li><a href=\"https://gist.github.com/lirantal/9441f3a1212728476f7a6caa4acb2ccc\">https://gist.github.com/lirantal/9441f3a1212728476f7a6caa4acb2ccc</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-GITCLONE-2434308\">https://snyk.io/vuln/SNYK-JS-GITCLONE-2434308</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8jmw-wjr8-2x66\">https://github.com/advisories/GHSA-8jmw-wjr8-2x66</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8jmw-wjr8-2x66",
            "title": "[git-clone] Command injection in git-clone",
            "date_modified": "2022-07-14T21:36:42.000Z",
            "date_published": "2022-07-02T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8jmw-wjr8-2x66"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can pass a compromised input to the e-mail <a href=\"https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider\">signin endpoint</a> that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: <code>balazs@email.com, &lt;a href=\"http://attacker.com\"&gt;Before signing in, claim your money!&lt;/a&gt;</code>. This was previously sent to <code>balazs@email.com</code>, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used:</p>\n<p>next-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">migration guide</a>)</p>\n<p>next-auth v4 users before version 4.8.0 are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We've released patches for this vulnerability in:</p>\n<ul>\n<li>v3 - <code>3.29.8</code></li>\n<li>v4 - <code>4.9.0</code></li>\n</ul>\n<p>You can do:</p>\n<pre><code class=\"language-sh\">npm i next-auth@latest\n# or\nyarn add next-auth@latest\n#\npnpm add next-auth@latest\n</code></pre>\n<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If for some reason you cannot upgrade, the workaround requires you to sanitize the <code>email</code> parameter that is passed to <code>sendVerificationRequest</code> and rendered in the HTML. If you haven't created a custom <code>sendVerificationRequest</code>, you only need to upgrade. Otherwise, make sure to either exclude <code>email</code> from the HTML body or efficiently sanitize it. Check out <a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></p>\n<h3 id=\"references\">References</h3>\n<p>Related documentation:</p>\n<ul>\n<li><a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></li>\n<li><a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">https://next-auth.js.org/getting-started/upgrade-v4</a></li>\n</ul>\n<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href=\"https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\">https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any concerns, we request responsible disclosure, outlined here: <a href=\"https://next-auth.js.org/security#reporting-a-vulnerability\">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>\n<h3 id=\"timeline\">Timeline</h3>\n<p>The issue was reported 2022 June 29th, a response was sent out to the reporter in less than 1 hour, and after identifying the issue a patch was published within 4 working days.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463</a></li>\n<li><a href=\"https://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c\">https://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c</a></li>\n<li><a href=\"https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0\">https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0</a></li>\n<li><a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">https://next-auth.js.org/getting-started/upgrade-v4</a></li>\n<li><a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31127\">https://nvd.nist.gov/vuln/detail/CVE-2022-31127</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgjx-7f9g-9463\">https://github.com/advisories/GHSA-pgjx-7f9g-9463</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgjx-7f9g-9463",
            "title": "[next-auth] Improper handling of email input",
            "date_modified": "2022-07-07T17:15:03.000Z",
            "date_published": "2022-07-06T19:27:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgjx-7f9g-9463"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can pass a compromised input to the e-mail <a href=\"https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider\">signin endpoint</a> that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: <code>balazs@email.com, &lt;a href=\"http://attacker.com\"&gt;Before signing in, claim your money!&lt;/a&gt;</code>. This was previously sent to <code>balazs@email.com</code>, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used:</p>\n<p>next-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">migration guide</a>)</p>\n<p>next-auth v4 users before version 4.8.0 are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We've released patches for this vulnerability in:</p>\n<ul>\n<li>v3 - <code>3.29.8</code></li>\n<li>v4 - <code>4.9.0</code></li>\n</ul>\n<p>You can do:</p>\n<pre><code class=\"language-sh\">npm i next-auth@latest\n# or\nyarn add next-auth@latest\n#\npnpm add next-auth@latest\n</code></pre>\n<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If for some reason you cannot upgrade, the workaround requires you to sanitize the <code>email</code> parameter that is passed to <code>sendVerificationRequest</code> and rendered in the HTML. If you haven't created a custom <code>sendVerificationRequest</code>, you only need to upgrade. Otherwise, make sure to either exclude <code>email</code> from the HTML body or efficiently sanitize it. Check out <a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></p>\n<h3 id=\"references\">References</h3>\n<p>Related documentation:</p>\n<ul>\n<li><a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></li>\n<li><a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">https://next-auth.js.org/getting-started/upgrade-v4</a></li>\n</ul>\n<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href=\"https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\">https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any concerns, we request responsible disclosure, outlined here: <a href=\"https://next-auth.js.org/security#reporting-a-vulnerability\">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>\n<h3 id=\"timeline\">Timeline</h3>\n<p>The issue was reported 2022 June 29th, a response was sent out to the reporter in less than 1 hour, and after identifying the issue a patch was published within 4 working days.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463</a></li>\n<li><a href=\"https://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c\">https://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c</a></li>\n<li><a href=\"https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0\">https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0</a></li>\n<li><a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">https://next-auth.js.org/getting-started/upgrade-v4</a></li>\n<li><a href=\"https://next-auth.js.org/providers/email#customizing-emails\">https://next-auth.js.org/providers/email#customizing-emails</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31127\">https://nvd.nist.gov/vuln/detail/CVE-2022-31127</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgjx-7f9g-9463\">https://github.com/advisories/GHSA-pgjx-7f9g-9463</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgjx-7f9g-9463",
            "title": "[next-auth] Improper handling of email input",
            "date_modified": "2022-07-07T17:15:03.000Z",
            "date_published": "2022-07-06T19:27:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgjx-7f9g-9463"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs</li>\n<li>noticeable slowdown is observed with inputs above 10k characters</li>\n<li>users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.</p>\n<h3 id=\"references\">References</h3>\n<p>There is an excellent writeup of the issue here: <a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973=</a></p>\n<h3 id=\"details\">Details</h3>\n<p>The issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. <code>moment(\"(\".repeat(500000))</code> will take a few minutes to process, which is unacceptable.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g</a></li>\n<li><a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973</a></li>\n<li><a href=\"https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\">https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31129\">https://nvd.nist.gov/vuln/detail/CVE-2022-31129</a></li>\n<li><a href=\"https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/\">https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/advisories/GHSA-wc69-rhjr-hc9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wc69-rhjr-hc9g",
            "title": "[moment] Inefficient Regular Expression Complexity in moment",
            "date_modified": "2022-07-11T19:26:42.000Z",
            "date_published": "2022-07-06T18:38:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wc69-rhjr-hc9g"
            }
        }
    ]
}