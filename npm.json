{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20165\">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>\n<li><a href=\"https://github.com/debug-js/debug/pull/504\">https://github.com/debug-js/debug/pull/504</a></li>\n<li><a href=\"https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685\">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>\n<li><a href=\"https://github.com/debug-js/debug/releases/tag/3.1.0\">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>\n<li><a href=\"https://vuldb.com/?id.217665\">https://vuldb.com/?id.217665</a></li>\n<li><a href=\"https://github.com/debug-js/debug/releases/tag/2.6.9\">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9vvw-cc9w-f27h\">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9vvw-cc9w-f27h",
            "title": "[debug] debug Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-11T18:46:42.000Z",
            "date_published": "2023-01-09T12:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9vvw-cc9w-f27h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20165\">https://nvd.nist.gov/vuln/detail/CVE-2017-20165</a></li>\n<li><a href=\"https://github.com/debug-js/debug/pull/504\">https://github.com/debug-js/debug/pull/504</a></li>\n<li><a href=\"https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685\">https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685</a></li>\n<li><a href=\"https://github.com/debug-js/debug/releases/tag/3.1.0\">https://github.com/debug-js/debug/releases/tag/3.1.0</a></li>\n<li><a href=\"https://vuldb.com/?id.217665\">https://vuldb.com/?id.217665</a></li>\n<li><a href=\"https://github.com/debug-js/debug/releases/tag/2.6.9\">https://github.com/debug-js/debug/releases/tag/2.6.9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9vvw-cc9w-f27h\">https://github.com/advisories/GHSA-9vvw-cc9w-f27h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9vvw-cc9w-f27h",
            "title": "[debug] debug Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-11T18:46:42.000Z",
            "date_published": "2023-01-09T12:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9vvw-cc9w-f27h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the <code>gray-matter</code> npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL).  Injected JavaScript executes in the context of the build server.</p>\n<p>To exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark.  The following payload demonstrates a vulnerable configuration:</p>\n<pre><code>---js\n((require(\"child_process\")).execSync(\"id &gt;&gt; /tmp/rce\"))\n--- \n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch has been introduced in <code>gatsby-transformer-remark@5.25.1</code> and <code>gatsby-transformer-remark@6.3.2</code> which mitigates the issue by disabling the <code>gray-matter</code> JavaScript Frontmatter engine.  The patch introduces a new option, <code>JSFrontmatterEngine</code> which is set to <code>false</code> by default.  When setting <code>JSFrontmatterEngine</code> to <code>true</code>, input passed to <code>gatsby-plugin-mdx</code> must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling <code>JSFrontmatterEngine</code> to <code>true</code> or if it appears that the MarkdownRemark input is attempting to use the Frontmatter engine.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an older version of <code>gatsby-transformer-remark</code> must be used, input passed into the plugin should be sanitized ahead of processing.</p>\n<p><strong>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</strong></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@gatsbyjs.com\">security@gatsbyjs.com</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw\">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7ch4-rr99-cqcw\">https://github.com/advisories/GHSA-7ch4-rr99-cqcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7ch4-rr99-cqcw",
            "title": "[gatsby-transformer-remark] gatsby-transformer-remark has possible unsanitized JavaScript code injection",
            "date_modified": "2023-01-11T18:27:16.000Z",
            "date_published": "2023-01-11T18:27:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7ch4-rr99-cqcw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the <code>gray-matter</code> npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL).  Injected JavaScript executes in the context of the build server.</p>\n<p>To exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark.  The following payload demonstrates a vulnerable configuration:</p>\n<pre><code>---js\n((require(\"child_process\")).execSync(\"id &gt;&gt; /tmp/rce\"))\n--- \n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch has been introduced in <code>gatsby-transformer-remark@5.25.1</code> and <code>gatsby-transformer-remark@6.3.2</code> which mitigates the issue by disabling the <code>gray-matter</code> JavaScript Frontmatter engine.  The patch introduces a new option, <code>JSFrontmatterEngine</code> which is set to <code>false</code> by default.  When setting <code>JSFrontmatterEngine</code> to <code>true</code>, input passed to <code>gatsby-plugin-mdx</code> must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling <code>JSFrontmatterEngine</code> to <code>true</code> or if it appears that the MarkdownRemark input is attempting to use the Frontmatter engine.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an older version of <code>gatsby-transformer-remark</code> must be used, input passed into the plugin should be sanitized ahead of processing.</p>\n<p><strong>We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.</strong></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@gatsbyjs.com\">security@gatsbyjs.com</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw\">https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7ch4-rr99-cqcw\">https://github.com/advisories/GHSA-7ch4-rr99-cqcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7ch4-rr99-cqcw",
            "title": "[gatsby-transformer-remark] gatsby-transformer-remark has possible unsanitized JavaScript code injection",
            "date_modified": "2023-01-11T18:27:16.000Z",
            "date_published": "2023-01-11T18:27:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7ch4-rr99-cqcw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Knex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query. This vulnerability has been fixed in version 2.4.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-20018\">https://nvd.nist.gov/vuln/detail/CVE-2016-20018</a></li>\n<li><a href=\"https://github.com/knex/knex/issues/1227\">https://github.com/knex/knex/issues/1227</a></li>\n<li><a href=\"https://www.ghostccamm.com/blog/knex_sqli/\">https://www.ghostccamm.com/blog/knex_sqli/</a></li>\n<li><a href=\"https://github.com/knex/knex/releases/tag/2.4.0\">https://github.com/knex/knex/releases/tag/2.4.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jv9-3563-23j3\">https://github.com/advisories/GHSA-4jv9-3563-23j3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jv9-3563-23j3",
            "title": "[knex] Knex.js has a limited SQL injection vulnerability",
            "date_modified": "2023-01-11T00:21:19.000Z",
            "date_published": "2022-12-19T09:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jv9-3563-23j3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>tag.ex in Phoenix Phoenix.HTML (aka phoenix_html) before 3.0.4 allows XSS in HEEx class attributes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-46871\">https://nvd.nist.gov/vuln/detail/CVE-2021-46871</a></li>\n<li><a href=\"https://github.com/phoenixframework/phoenix_html/commit/62a0139fb716bcdce697f6221244bd81d321d620\">https://github.com/phoenixframework/phoenix_html/commit/62a0139fb716bcdce697f6221244bd81d321d620</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j3gg-r6gp-95q2\">https://github.com/advisories/GHSA-j3gg-r6gp-95q2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5g2h-9x5v-5h3x\">https://github.com/advisories/GHSA-5g2h-9x5v-5h3x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5g2h-9x5v-5h3x",
            "title": "[phoenix_html] phoenix_html allows Cross-site Scripting in HEEx class attributes",
            "date_modified": "2023-01-10T22:16:31.000Z",
            "date_published": "2023-01-10T06:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5g2h-9x5v-5h3x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>An attacker can inject attributes that are used in other components</li>\n<li>An attacker can override existing attributes with ones that have incompatible type, which may lead to a crash.</li>\n</ul>\n<p>The main use case of Convict is for handling server-side configurations written by the admins owning the servers, and not random users. So it's unlikely that an admin would deliberately sabotage their own server. Still a situation can happen where an admin not knowledgeable about JavaScript could be tricked by an attacker into writing the malicious JavaScript code into some config files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in <code>convict@6.2.4</code>. Users should upgrade to <code>convict@6.2.4</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No way for users to fix or remediate the vulnerability without upgrading</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/mozilla/node-convict/issues/410\">https://github.com/mozilla/node-convict/issues/410</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mozilla/node-convict/security/advisories/GHSA-4jrm-c32x-w4jf\">https://github.com/mozilla/node-convict/security/advisories/GHSA-4jrm-c32x-w4jf</a></li>\n<li><a href=\"https://github.com/mozilla/node-convict/commit/fb602fbe1e9f14f2e88ecb8179d0f76466d21ecb\">https://github.com/mozilla/node-convict/commit/fb602fbe1e9f14f2e88ecb8179d0f76466d21ecb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jrm-c32x-w4jf\">https://github.com/advisories/GHSA-4jrm-c32x-w4jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jrm-c32x-w4jf",
            "title": "[convict] convict vulnerable to Prototype Pollution",
            "date_modified": "2023-01-10T21:50:00.000Z",
            "date_published": "2023-01-10T21:50:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jrm-c32x-w4jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20162\">https://nvd.nist.gov/vuln/detail/CVE-2017-20162</a></li>\n<li><a href=\"https://github.com/vercel/ms/pull/89\">https://github.com/vercel/ms/pull/89</a></li>\n<li><a href=\"https://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662\">https://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662</a></li>\n<li><a href=\"https://github.com/vercel/ms/releases/tag/2.0.0\">https://github.com/vercel/ms/releases/tag/2.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217451\">https://vuldb.com/?ctiid.217451</a></li>\n<li><a href=\"https://vuldb.com/?id.217451\">https://vuldb.com/?id.217451</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w9mr-4mfr-499f\">https://github.com/advisories/GHSA-w9mr-4mfr-499f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w9mr-4mfr-499f",
            "title": "[ms] Vercel ms Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-10T21:45:35.000Z",
            "date_published": "2023-01-05T12:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w9mr-4mfr-499f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Any users of Mercurius until version v11.5.0 are subjected to a denial of service attack by sending a malformed packet over WebSocket to <code>/graphql</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This was patched in <a href=\"https://github.com/mercurius-js/mercurius/pull/940\">https://github.com/mercurius-js/mercurius/pull/940</a>.\nThe patch was released as v11.5.0 and v8.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable subscriptions.</p>\n<h3 id=\"references\">References</h3>\n<p>Reported publicly as <a href=\"https://github.com/mercurius-js/mercurius/issues/939\">https://github.com/mercurius-js/mercurius/issues/939</a>.\nThe same problem was solved in <a href=\"https://github.com/fastify/fastify-websocket/pull/228\">https://github.com/fastify/fastify-websocket/pull/228</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc\">https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22477\">https://nvd.nist.gov/vuln/detail/CVE-2023-22477</a></li>\n<li><a href=\"https://github.com/mercurius-js/mercurius/issues/939\">https://github.com/mercurius-js/mercurius/issues/939</a></li>\n<li><a href=\"https://github.com/fastify/fastify-websocket/pull/228\">https://github.com/fastify/fastify-websocket/pull/228</a></li>\n<li><a href=\"https://github.com/mercurius-js/mercurius/pull/940\">https://github.com/mercurius-js/mercurius/pull/940</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm8h-q92v-xcfc\">https://github.com/advisories/GHSA-cm8h-q92v-xcfc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm8h-q92v-xcfc",
            "title": "[mercurius] mercurius has Uncaught Exception when using subscriptions",
            "date_modified": "2023-01-10T16:15:08.000Z",
            "date_published": "2023-01-09T21:55:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm8h-q92v-xcfc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Any users of Mercurius until version v11.5.0 are subjected to a denial of service attack by sending a malformed packet over WebSocket to <code>/graphql</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This was patched in <a href=\"https://github.com/mercurius-js/mercurius/pull/940\">https://github.com/mercurius-js/mercurius/pull/940</a>.\nThe patch was released as v11.5.0 and v8.13.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable subscriptions.</p>\n<h3 id=\"references\">References</h3>\n<p>Reported publicly as <a href=\"https://github.com/mercurius-js/mercurius/issues/939\">https://github.com/mercurius-js/mercurius/issues/939</a>.\nThe same problem was solved in <a href=\"https://github.com/fastify/fastify-websocket/pull/228\">https://github.com/fastify/fastify-websocket/pull/228</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc\">https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22477\">https://nvd.nist.gov/vuln/detail/CVE-2023-22477</a></li>\n<li><a href=\"https://github.com/mercurius-js/mercurius/issues/939\">https://github.com/mercurius-js/mercurius/issues/939</a></li>\n<li><a href=\"https://github.com/fastify/fastify-websocket/pull/228\">https://github.com/fastify/fastify-websocket/pull/228</a></li>\n<li><a href=\"https://github.com/mercurius-js/mercurius/pull/940\">https://github.com/mercurius-js/mercurius/pull/940</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm8h-q92v-xcfc\">https://github.com/advisories/GHSA-cm8h-q92v-xcfc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm8h-q92v-xcfc",
            "title": "[mercurius] mercurius has Uncaught Exception when using subscriptions",
            "date_modified": "2023-01-10T16:15:08.000Z",
            "date_published": "2023-01-09T21:55:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm8h-q92v-xcfc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>Luxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks.</p>\n<p>This is the same bug as Moment's <a href=\"https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g</a></p>\n<h1 id=\"workarounds\">Workarounds</h1>\n<p>Limit the length of the input.</p>\n<h1 id=\"references\">References</h1>\n<p>There is an excellent writeup of the same issue in Moment: <a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973</a></p>\n<h1 id=\"details\">Details</h1>\n<p><code>DateTime.fromRFC2822(\"(\".repeat(500000))</code> takes a couple minutes to complete.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc\">https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc</a></li>\n<li><a href=\"https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22467\">https://nvd.nist.gov/vuln/detail/CVE-2023-22467</a></li>\n<li><a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973</a></li>\n<li><a href=\"https://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf\">https://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xq5-wjfh-ppjc\">https://github.com/advisories/GHSA-3xq5-wjfh-ppjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xq5-wjfh-ppjc",
            "title": "[luxon] Luxon Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-09T22:05:00.000Z",
            "date_published": "2023-01-09T14:10:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xq5-wjfh-ppjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in flitto express-param up to 0.x. It has been classified as critical. This affects an unknown part of the file <code>lib/fetchParams.js</code>. The manipulation leads to improper handling of extra parameters. It is possible to initiate the attack remotely. Upgrading to version 1.0.0 can address this issue. The name of the patch is db94f7391ad0a16dcfcba8b9be1af385b25c42db. It is recommended to upgrade the affected component. The identifier VDB-217149 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20160\">https://nvd.nist.gov/vuln/detail/CVE-2017-20160</a></li>\n<li><a href=\"https://github.com/flitto/express-param/pull/19\">https://github.com/flitto/express-param/pull/19</a></li>\n<li><a href=\"https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db\">https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db</a></li>\n<li><a href=\"https://github.com/flitto/express-param/releases/tag/1.0.0\">https://github.com/flitto/express-param/releases/tag/1.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217149\">https://vuldb.com/?ctiid.217149</a></li>\n<li><a href=\"https://vuldb.com/?id.217149\">https://vuldb.com/?id.217149</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr54-72wr-cqvq\">https://github.com/advisories/GHSA-fr54-72wr-cqvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr54-72wr-cqvq",
            "title": "[express-param] express-param vulnerable to Improper Handling of Extra Parameters",
            "date_modified": "2023-01-09T21:59:24.000Z",
            "date_published": "2022-12-31T21:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr54-72wr-cqvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package wifey are vulnerable to Command Injection via the <code>connect()</code> function due to improper input sanitization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25890\">https://nvd.nist.gov/vuln/detail/CVE-2022-25890</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-WIFEY-3175615\">https://security.snyk.io/vuln/SNYK-JS-WIFEY-3175615</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xj9v-6q2f-vqhx\">https://github.com/advisories/GHSA-xj9v-6q2f-vqhx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xj9v-6q2f-vqhx",
            "title": "[wifey] wifey vulnerable to Command Injection due to improper input sanitization",
            "date_modified": "2023-01-09T21:56:33.000Z",
            "date_published": "2023-01-09T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xj9v-6q2f-vqhx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Yomguithereal Baobab up to 2.6.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be launched remotely. Upgrading to version 2.6.1 is able to address this issue. The name of the patch is c56639532a923d9a1600fb863ec7551b188b5d19. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217627.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4307\">https://nvd.nist.gov/vuln/detail/CVE-2021-4307</a></li>\n<li><a href=\"https://github.com/Yomguithereal/baobab/pull/511\">https://github.com/Yomguithereal/baobab/pull/511</a></li>\n<li><a href=\"https://github.com/Yomguithereal/baobab/commit/c56639532a923d9a1600fb863ec7551b188b5d19\">https://github.com/Yomguithereal/baobab/commit/c56639532a923d9a1600fb863ec7551b188b5d19</a></li>\n<li><a href=\"https://github.com/Yomguithereal/baobab/releases/tag/2.6.1\">https://github.com/Yomguithereal/baobab/releases/tag/2.6.1</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217627\">https://vuldb.com/?ctiid.217627</a></li>\n<li><a href=\"https://vuldb.com/?id.217627\">https://vuldb.com/?id.217627</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wvr2-q86m-6whp\">https://github.com/advisories/GHSA-wvr2-q86m-6whp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wvr2-q86m-6whp",
            "title": "[baobab] Baobab vulnerable to Prototype Pollution",
            "date_modified": "2023-01-09T21:54:38.000Z",
            "date_published": "2023-01-07T21:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wvr2-q86m-6whp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in Twitter-Post-Fetcher up to 17.x. This affects an unknown part of the file <code>js/twitterFetcher.js</code> of the component Link Target Handler. The manipulation leads to use of web link to untrusted target with window.opener access. It is possible to initiate the attack remotely. Upgrading to version 18.0.0 can address this issue. The name of the patch is 7d281c6fb5acbc29a2cad295262c1f0c19ca56f3. It is recommended to upgrade the affected component. The identifier VDB-217017 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25058\">https://nvd.nist.gov/vuln/detail/CVE-2018-25058</a></li>\n<li><a href=\"https://github.com/jasonmayes/Twitter-Post-Fetcher/pull/170\">https://github.com/jasonmayes/Twitter-Post-Fetcher/pull/170</a></li>\n<li><a href=\"https://github.com/jasonmayes/Twitter-Post-Fetcher/commit/7d281c6fb5acbc29a2cad295262c1f0c19ca56f3\">https://github.com/jasonmayes/Twitter-Post-Fetcher/commit/7d281c6fb5acbc29a2cad295262c1f0c19ca56f3</a></li>\n<li><a href=\"https://github.com/jasonmayes/Twitter-Post-Fetcher/releases/tag/18.0.0\">https://github.com/jasonmayes/Twitter-Post-Fetcher/releases/tag/18.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217017\">https://vuldb.com/?ctiid.217017</a></li>\n<li><a href=\"https://vuldb.com/?id.217017\">https://vuldb.com/?id.217017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m688-cx2p-rgq9\">https://github.com/advisories/GHSA-m688-cx2p-rgq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m688-cx2p-rgq9",
            "title": "[twitter-fetcher-js] Twitter-Post-Fetcher vulnerable to Use of Web Link to Untrusted Target with window.opener Access",
            "date_modified": "2023-01-09T21:50:32.000Z",
            "date_published": "2022-12-29T09:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m688-cx2p-rgq9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the <code>theProcess()</code> functionality due to improper user-input sanitization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25923\">https://nvd.nist.gov/vuln/detail/CVE-2022-25923</a></li>\n<li><a href=\"https://github.com/saeedseyfi/exec-local-bin/commit/d425866375c85038133a6f79db2aac66c0a72624\">https://github.com/saeedseyfi/exec-local-bin/commit/d425866375c85038133a6f79db2aac66c0a72624</a></li>\n<li><a href=\"https://github.com/saeedseyfi/exec-local-bin/blob/92db00bde9d6e2d83410849f898df12f075b73b0/index.js%23L9\">https://github.com/saeedseyfi/exec-local-bin/blob/92db00bde9d6e2d83410849f898df12f075b73b0/index.js%23L9</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-EXECLOCALBIN-3157956\">https://security.snyk.io/vuln/SNYK-JS-EXECLOCALBIN-3157956</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f259-h6m8-hm8m\">https://github.com/advisories/GHSA-f259-h6m8-hm8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f259-h6m8-hm8m",
            "title": "[exec-local-bin] exec-local-bin vulnerable to Command Injection",
            "date_modified": "2023-01-09T20:11:57.000Z",
            "date_published": "2023-01-06T06:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f259-h6m8-hm8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An open redirect vulnerability exists in Okta OIDC Middleware prior to version 5.0.0 allowing an attacker to redirect a user to an arbitrary URL.</p>\n<p><strong>Affected products and versions</strong>\nOkta OIDC Middleware prior to version 5.0.0.</p>\n<p><strong>Resolution</strong>\nThe vulnerability is fixed in OIDC Middleware 5.0.0.  To remediate this vulnerability, upgrade Okta OIDC Middleware to this version or later.</p>\n<p><strong>CVE details</strong>\n<strong>CVE ID:</strong>\t\t<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=2022-3145\">CVE-2022-3145</a>\n<strong>Published Date:</strong>\t01/05/2023\n<strong>Vulnerability Type:</strong>\tOpen Redirect\n<strong>CWE:</strong>\t\t\tCWE-601\n<strong>CVSS v3.1 Score:</strong> 4.3\n<strong>Severity:</strong> Medium\n<strong>Vector string:</strong> AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N</p>\n<p><strong>Severity Details</strong>\nTo exploit this issue, an attacker would need to send a victim a malformed URL containing a target server that they control. Once a user successfully completed the login process, the victim user would then be redirected to the attacker controlled site.</p>\n<p><strong>References</strong>\n<a href=\"https://github.com/okta/okta-oidc-middleware\">https://github.com/okta/okta-oidc-middleware</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/okta/okta-oidc-middleware/security/advisories/GHSA-58h4-9m7m-j9m4\">https://github.com/okta/okta-oidc-middleware/security/advisories/GHSA-58h4-9m7m-j9m4</a></li>\n<li><a href=\"https://github.com/okta/okta-oidc-middleware/commit/5d10b3ccdd5d6893de4d8b58696094267d30c113\">https://github.com/okta/okta-oidc-middleware/commit/5d10b3ccdd5d6893de4d8b58696094267d30c113</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-58h4-9m7m-j9m4\">https://github.com/advisories/GHSA-58h4-9m7m-j9m4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-58h4-9m7m-j9m4",
            "title": "[@okta/oidc-middleware] @okta/oidc-middlewareOpen Redirect vulnerability",
            "date_modified": "2023-01-09T20:06:03.000Z",
            "date_published": "2023-01-09T20:06:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-58h4-9m7m-j9m4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Woorank robots-txt-guard. It has been rated as problematic. Affected by this issue is the function makePathPattern of the file lib/patterns.js. The manipulation of the argument pattern leads to inefficient regular expression complexity. The exploit has been disclosed to the public and may be used. The name of the patch is c03827cd2f9933619c23894ce7c98401ea824020. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217448.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4305\">https://nvd.nist.gov/vuln/detail/CVE-2021-4305</a></li>\n<li><a href=\"https://github.com/Woorank/robots-txt-guard/pull/4\">https://github.com/Woorank/robots-txt-guard/pull/4</a></li>\n<li><a href=\"https://github.com/Woorank/robots-txt-guard/commit/c03827cd2f9933619c23894ce7c98401ea824020\">https://github.com/Woorank/robots-txt-guard/commit/c03827cd2f9933619c23894ce7c98401ea824020</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217448\">https://vuldb.com/?ctiid.217448</a></li>\n<li><a href=\"https://vuldb.com/?id.217448\">https://vuldb.com/?id.217448</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6g33-8w2q-4hxv\">https://github.com/advisories/GHSA-6g33-8w2q-4hxv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6g33-8w2q-4hxv",
            "title": "[robots-txt-guard] robots-txt-guard Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-09T20:04:05.000Z",
            "date_published": "2023-01-05T12:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6g33-8w2q-4hxv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in cronvel tree-kit up to 0.6.x. This affects an unknown part. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). Upgrading to version 0.7.0 is able to address this issue. The name of the patch is a63f559c50d70e8cb2eaae670dec25d1dbc4afcd. It is recommended to upgrade the affected component. The identifier VDB-216765 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4278\">https://nvd.nist.gov/vuln/detail/CVE-2021-4278</a></li>\n<li><a href=\"https://github.com/cronvel/tree-kit/commit/a63f559c50d70e8cb2eaae670dec25d1dbc4afcd\">https://github.com/cronvel/tree-kit/commit/a63f559c50d70e8cb2eaae670dec25d1dbc4afcd</a></li>\n<li><a href=\"https://github.com/cronvel/tree-kit/releases/tag/v0.7.0\">https://github.com/cronvel/tree-kit/releases/tag/v0.7.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216765\">https://vuldb.com/?ctiid.216765</a></li>\n<li><a href=\"https://vuldb.com/?id.216765\">https://vuldb.com/?id.216765</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mw4x-g2x8-qcvf\">https://github.com/advisories/GHSA-mw4x-g2x8-qcvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mw4x-g2x8-qcvf",
            "title": "[tree-kit] tree-kit vulnerable to Prototype Pollution",
            "date_modified": "2023-01-09T19:53:51.000Z",
            "date_published": "2022-12-25T18:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mw4x-g2x8-qcvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>Luxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks.</p>\n<p>This is the same bug as Moment's <a href=\"https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g</a></p>\n<h1 id=\"workarounds\">Workarounds</h1>\n<p>Limit the length of the input.</p>\n<h1 id=\"references\">References</h1>\n<p>There is an excellent writeup of the same issue in Moment: <a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973</a></p>\n<h1 id=\"details\">Details</h1>\n<p><code>DateTime.fromRFC2822(\"(\".repeat(500000))</code> takes a couple minutes to complete.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc\">https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc</a></li>\n<li><a href=\"https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\">https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22467\">https://nvd.nist.gov/vuln/detail/CVE-2023-22467</a></li>\n<li><a href=\"https://github.com/moment/moment/pull/6015#issuecomment-1152961973\">https://github.com/moment/moment/pull/6015#issuecomment-1152961973</a></li>\n<li><a href=\"https://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf\">https://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xq5-wjfh-ppjc\">https://github.com/advisories/GHSA-3xq5-wjfh-ppjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xq5-wjfh-ppjc",
            "title": "[luxon] Luxon Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-09T22:05:00.000Z",
            "date_published": "2023-01-09T14:10:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xq5-wjfh-ppjc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}