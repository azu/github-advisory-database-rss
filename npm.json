{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>The package vuetify from 2.0.0-beta.4 and before 2.6.10 are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization in the 'eventName' function within the VCalendar component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25873\">https://nvd.nist.gov/vuln/detail/CVE-2022-25873</a></li>\n<li><a href=\"https://github.com/vuetifyjs/vuetify/issues/15757\">https://github.com/vuetifyjs/vuetify/issues/15757</a></li>\n<li><a href=\"https://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176\">https://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176</a></li>\n<li><a href=\"https://codepen.io/5v3n-08/pen/MWGKEjY\">https://codepen.io/5v3n-08/pen/MWGKEjY</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBVUETIFYJS-3024407\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBVUETIFYJS-3024407</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3024406\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3024406</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858\">https://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4q5-c5cv-2p68\">https://github.com/advisories/GHSA-q4q5-c5cv-2p68</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4q5-c5cv-2p68",
            "title": "[vuetify] Vuetify Cross-site Scripting vulnerability",
            "date_modified": "2022-09-21T20:58:45.000Z",
            "date_published": "2022-09-19T00:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4q5-c5cv-2p68"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Validation of the authentication adapter app ID for <em>Facebook</em> and <em>Spotify</em> may be circumvented.</p>\n<p>This fixes a vulnerability that affects configurations which allow users to authenticate using the Parse Server authentication adapter for <em>Facebook</em> or <em>Spotify</em> and where the server-side authentication adapter configuration <code>appIds</code> is set as a string (e.g. <code>abc</code>) instead of an array of strings (e.g. <code>[\"abc\"]</code>). The vulnerability makes it possible to authenticate requests which are coming from a <em>Facebook</em> or <em>Spotify</em> app with a different app ID than the one specified in the <code>appIds</code> configuration.</p>\n<p>Both adapters still validate the access token with the respective authentication provider. An app ID is automatically assigned by the authentication provider. For this vulnerability to be exploited, an attacker would have to be assigned an app ID by the authentication provider which is a sub-set of the server-side configured app ID.</p>\n<p>The documentation did not explicitly specify that the parameter <code>appIds</code> must be set as an array of strings and setting a string also worked. Therefore, there is a possibility that there are deployments where <code>appIds</code> is set as a string, making them vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix makes Parse Server check the type of the value set for <code>appIds</code> and throws an error if the value is not an array.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub advisory <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\">GHSA-r657-33vp-gp22</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\">https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b\">https://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.16\">https://github.com/parse-community/parse-server/releases/tag/4.10.16</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.7\">https://github.com/parse-community/parse-server/releases/tag/5.2.7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r657-33vp-gp22\">https://github.com/advisories/GHSA-r657-33vp-gp22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r657-33vp-gp22",
            "title": "[parse-server] parse-server auth adapter app ID validation can be circumvented",
            "date_modified": "2022-09-21T20:43:57.000Z",
            "date_published": "2022-09-21T20:43:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r657-33vp-gp22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Validation of the authentication adapter app ID for <em>Facebook</em> and <em>Spotify</em> may be circumvented.</p>\n<p>This fixes a vulnerability that affects configurations which allow users to authenticate using the Parse Server authentication adapter for <em>Facebook</em> or <em>Spotify</em> and where the server-side authentication adapter configuration <code>appIds</code> is set as a string (e.g. <code>abc</code>) instead of an array of strings (e.g. <code>[\"abc\"]</code>). The vulnerability makes it possible to authenticate requests which are coming from a <em>Facebook</em> or <em>Spotify</em> app with a different app ID than the one specified in the <code>appIds</code> configuration.</p>\n<p>Both adapters still validate the access token with the respective authentication provider. An app ID is automatically assigned by the authentication provider. For this vulnerability to be exploited, an attacker would have to be assigned an app ID by the authentication provider which is a sub-set of the server-side configured app ID.</p>\n<p>The documentation did not explicitly specify that the parameter <code>appIds</code> must be set as an array of strings and setting a string also worked. Therefore, there is a possibility that there are deployments where <code>appIds</code> is set as a string, making them vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix makes Parse Server check the type of the value set for <code>appIds</code> and throws an error if the value is not an array.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub advisory <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\">GHSA-r657-33vp-gp22</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\">https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b\">https://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.16\">https://github.com/parse-community/parse-server/releases/tag/4.10.16</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.7\">https://github.com/parse-community/parse-server/releases/tag/5.2.7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r657-33vp-gp22\">https://github.com/advisories/GHSA-r657-33vp-gp22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r657-33vp-gp22",
            "title": "[parse-server] parse-server auth adapter app ID validation can be circumvented",
            "date_modified": "2022-09-21T20:43:57.000Z",
            "date_published": "2022-09-21T20:43:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r657-33vp-gp22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This issue allows a client of the API to retrieve more information than the client’s OAuth scope permits when making “search-type” requests. This issue would not allow a client to retrieve information about individuals other than those the client was already authorized to access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We recommend that users of fhir-works-on-aws-authz-smart 3.1.1 or 3.1.2 upgrade to version 3.1.3 or higher immediately. Versions 3.1.0 and below are unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround for this issue. Please upgrade fhir-works-on-aws-authz-smart to version 3.1.3 or higher.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/awslabs/fhir-works-on-aws-deployment\">https://github.com/awslabs/fhir-works-on-aws-deployment</a>\n<a href=\"https://github.com/awslabs/fhir-works-on-aws-authz-smart\">https://github.com/awslabs/fhir-works-on-aws-authz-smart</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email us at <a href=\"mailto:fhir-works-on-aws-dev@amazon.com\">fhir-works-on-aws-dev@amazon.com</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/fhir-works-on-aws-authz-smart/security/advisories/GHSA-vv7x-7w4m-q72f\">https://github.com/awslabs/fhir-works-on-aws-authz-smart/security/advisories/GHSA-vv7x-7w4m-q72f</a></li>\n<li><a href=\"https://github.com/awslabs/fhir-works-on-aws-authz-smart/commit/203bbc0dd17de748c36b33c68b866ed2dfd613d3\">https://github.com/awslabs/fhir-works-on-aws-authz-smart/commit/203bbc0dd17de748c36b33c68b866ed2dfd613d3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vv7x-7w4m-q72f\">https://github.com/advisories/GHSA-vv7x-7w4m-q72f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vv7x-7w4m-q72f",
            "title": "[fhir-works-on-aws-authz-smart] fhir-works-on-aws-authz-smart handles permissions improperly",
            "date_modified": "2022-09-21T20:36:51.000Z",
            "date_published": "2022-09-21T20:36:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vv7x-7w4m-q72f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A foreign user can write to the session object of another user if the session object ID is known. For example, a foreign user can assign the session object to their own user by writing to the <code>user</code> field and then read any custom fields of that session object.</p>\n<p>Note that assigning a session to a foreign user does not usually change the privileges of neither of the two users, according to how Parse Server uses session objects internally. However, if custom logic is used to relate specific session objects to privileges this vulnerability may have a higher level of severity.</p>\n<p>The vulnerability does not allow a foreign user to assign a session object to themselves, read the session token, and then reassign the session object to the original user to then authenticate as that user with the known session token. The vulnerability only exists for foreign session objects, a user cannot assign their own session to another user.</p>\n<p>While it is unlikely that the session object ID of another user is known, it is possible to brute-force guess an object ID, even though the attacker would not know to which user a successfully guessed session object ID belongs.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix prevents writing to foreign session objects, even if the session object ID is known.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Add a <code>beforeSave</code> trigger to the <code>_Session</code> class and prevent writing if the requesting user is different from the user in the session object.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub advisory <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\">GHSA-6w4q-23cf-j9jp</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\">https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff\">https://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.15\">https://github.com/parse-community/parse-server/releases/tag/4.10.15</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.6\">https://github.com/parse-community/parse-server/releases/tag/5.2.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6w4q-23cf-j9jp\">https://github.com/advisories/GHSA-6w4q-23cf-j9jp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6w4q-23cf-j9jp",
            "title": "[parse-server] parse-server's session object properties can be updated by foreign user if object ID is known",
            "date_modified": "2022-09-21T18:32:03.000Z",
            "date_published": "2022-09-21T18:32:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6w4q-23cf-j9jp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A foreign user can write to the session object of another user if the session object ID is known. For example, a foreign user can assign the session object to their own user by writing to the <code>user</code> field and then read any custom fields of that session object.</p>\n<p>Note that assigning a session to a foreign user does not usually change the privileges of neither of the two users, according to how Parse Server uses session objects internally. However, if custom logic is used to relate specific session objects to privileges this vulnerability may have a higher level of severity.</p>\n<p>The vulnerability does not allow a foreign user to assign a session object to themselves, read the session token, and then reassign the session object to the original user to then authenticate as that user with the known session token. The vulnerability only exists for foreign session objects, a user cannot assign their own session to another user.</p>\n<p>While it is unlikely that the session object ID of another user is known, it is possible to brute-force guess an object ID, even though the attacker would not know to which user a successfully guessed session object ID belongs.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix prevents writing to foreign session objects, even if the session object ID is known.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Add a <code>beforeSave</code> trigger to the <code>_Session</code> class and prevent writing if the requesting user is different from the user in the session object.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub advisory <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\">GHSA-6w4q-23cf-j9jp</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\">https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff\">https://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.15\">https://github.com/parse-community/parse-server/releases/tag/4.10.15</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.6\">https://github.com/parse-community/parse-server/releases/tag/5.2.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6w4q-23cf-j9jp\">https://github.com/advisories/GHSA-6w4q-23cf-j9jp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6w4q-23cf-j9jp",
            "title": "[parse-server] parse-server's session object properties can be updated by foreign user if object ID is known",
            "date_modified": "2022-09-21T18:32:03.000Z",
            "date_published": "2022-09-21T18:32:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6w4q-23cf-j9jp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Valine was discovered to contain a remote code execution (RCE) vulnerability which allows attackers to execute arbitrary code via a crafted POST request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38545\">https://nvd.nist.gov/vuln/detail/CVE-2022-38545</a></li>\n<li><a href=\"https://github.com/xCss/Valine/issues/400\">https://github.com/xCss/Valine/issues/400</a></li>\n<li><a href=\"https://github.com/xCss/Valine/commit/c40826c5816c98d797a6b1ed8b62bddf73ed4f65\">https://github.com/xCss/Valine/commit/c40826c5816c98d797a6b1ed8b62bddf73ed4f65</a></li>\n<li><a href=\"https://github.com/xCss/Valine/releases/tag/v1.5.0\">https://github.com/xCss/Valine/releases/tag/v1.5.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcvg-g9wx-v5vx\">https://github.com/advisories/GHSA-mcvg-g9wx-v5vx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcvg-g9wx-v5vx",
            "title": "[valine] Valine code injection vulnerability",
            "date_modified": "2022-09-21T17:43:25.000Z",
            "date_published": "2022-09-20T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcvg-g9wx-v5vx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href=\"https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544\">CVE-2020-7792</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21213\">https://nvd.nist.gov/vuln/detail/CVE-2022-21213</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepFillIn.js\">https://github.com/mout/mout/blob/master/src/object/deepFillIn.js</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepMixIn.js\">https://github.com/mout/mout/blob/master/src/object/deepMixIn.js</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MOUT-2342654\">https://snyk.io/vuln/SNYK-JS-MOUT-2342654</a></li>\n<li><a href=\"https://github.com/mout/mout/pull/279\">https://github.com/mout/mout/pull/279</a></li>\n<li><a href=\"https://github.com/mout/mout/commit/17ffdc2a96417a63a0147156dc045e90d0d14c64\">https://github.com/mout/mout/commit/17ffdc2a96417a63a0147156dc045e90d0d14c64</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvv8-xw5f-3f88\">https://github.com/advisories/GHSA-vvv8-xw5f-3f88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88",
            "title": "[mout] Prototype Pollution in mout",
            "date_modified": "2022-09-21T13:04:06.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>Math.random</code> and <code>crypto.getRandomValues</code> methods failed to use sufficiently random values. The initial value to seed the CSPRNG (cryptographically secure pseudorandom number generator) was baked-in to the final WebAssembly module meaning the sequence of numbers generated was predictable for that specific WebAssembly module. An attacker with access to that same WebAssembly module that calls the affected methods could use the fixed seed to predict random numbers generated by these functions. This information could be used to bypass cryptographic security controls, for example to disclose sensitive data encrypted by functions that use these generators.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed in version 0.5.3.</p>\n<p>Corrected <code>Math.random</code> and <code>crypto.getRandomValues</code> methods to always use sufficiently random values. The previous versions would use a CSPRNG (cryptographically secure pseudorandom number generator) which we would seed with a random value. However, due to our use of Wizer, the initial value to seed the CSPRNG was baked-in to the final WebAssembly module meaning the sequence of numbers generated was predictable for that specific WebAssembly module. The new implementations of both Math.random and <code>crypto.getRandomValues</code> do not use a CSPRNG and instead pull random values from WASI (WebAssembly System Interface) libc’s random_get function, which is always a sufficiently random value.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds, you must upgrade to version 0.5.3 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastly/js-compute-runtime/security/advisories/GHSA-cmr8-5w4c-44v8\">https://github.com/fastly/js-compute-runtime/security/advisories/GHSA-cmr8-5w4c-44v8</a></li>\n<li><a href=\"https://github.com/fastly/js-compute-runtime/commit/65524ffc962644e9fc39f4b368a326b6253912a9\">https://github.com/fastly/js-compute-runtime/commit/65524ffc962644e9fc39f4b368a326b6253912a9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39218\">https://nvd.nist.gov/vuln/detail/CVE-2022-39218</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmr8-5w4c-44v8\">https://github.com/advisories/GHSA-cmr8-5w4c-44v8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmr8-5w4c-44v8",
            "title": "[@fastly/js-compute] Fastly Compute@Edge JS Runtime has fixed random number seed during compilation",
            "date_modified": "2022-09-21T19:22:41.000Z",
            "date_published": "2022-09-20T20:45:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmr8-5w4c-44v8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-09-19T21:54:50.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>slug</code> are vulnerable to a regular expression denial of service when parsing untrusted user input.</p>\n<p>The issue is low severity, as it takes 50,000 characters to cause the event loop to block for 2 seconds,</p>\n<p>About 50k characters can block the event loop for 2 seconds.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 0.9.2 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16117\">https://nvd.nist.gov/vuln/detail/CVE-2017-16117</a></li>\n<li><a href=\"https://github.com/dodo/node-slug/issues/82\">https://github.com/dodo/node-slug/issues/82</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jxqq-cqm6-pfq9\">https://github.com/advisories/GHSA-jxqq-cqm6-pfq9</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/537\">https://www.npmjs.com/advisories/537</a></li>\n<li><a href=\"https://nodesecurity.io/advisories/537\">https://nodesecurity.io/advisories/537</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jxqq-cqm6-pfq9",
            "title": "[slug] Regular Expression Denial of Service in slug",
            "date_modified": "2022-09-19T16:29:48.000Z",
            "date_published": "2018-07-24T20:06:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jxqq-cqm6-pfq9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-14040\">https://nvd.nist.gov/vuln/detail/CVE-2018-14040</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/issues/26423\">https://github.com/twbs/bootstrap/issues/26423</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/issues/26625\">https://github.com/twbs/bootstrap/issues/26625</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/pull/26630\">https://github.com/twbs/bootstrap/pull/26630</a></li>\n<li><a href=\"https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/\">https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E\">https://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E\">https://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E\">https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2018/08/msg00027.html\">https://lists.debian.org/debian-lts-announce/2018/08/msg00027.html</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/18\">https://seclists.org/bugtraq/2019/May/18</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuApr2021.html\">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>\n<li><a href=\"https://www.tenable.com/security/tns-2021-14\">https://www.tenable.com/security/tns-2021-14</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\">http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\">http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2019/May/10\">http://seclists.org/fulldisclosure/2019/May/10</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2019/May/11\">http://seclists.org/fulldisclosure/2019/May/11</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2019/May/13\">http://seclists.org/fulldisclosure/2019/May/13</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/blob/v3.4.1/js/collapse.js#L140\">https://github.com/twbs/bootstrap/blob/v3.4.1/js/collapse.js#L140</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/blob/v3.4.1/js/scrollspy.js#L56\">https://github.com/twbs/bootstrap/blob/v3.4.1/js/scrollspy.js#L56</a></li>\n<li><a href=\"https://github.com/twbs/bootstrap/blob/v3.4.1/js/tooltip.js#L352\">https://github.com/twbs/bootstrap/blob/v3.4.1/js/tooltip.js#L352</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wqf-4x89-9g79\">https://github.com/advisories/GHSA-3wqf-4x89-9g79</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wqf-4x89-9g79",
            "title": "[bootstrap] Bootstrap vulnerable to Cross-Site Scripting (XSS)",
            "date_modified": "2022-09-19T16:04:27.000Z",
            "date_published": "2022-05-13T01:07:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wqf-4x89-9g79"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>parse-url prior to 8.1.0 is vulnerable to Misinterpretation of Input. parse-url parses certain http or https URLs incorrectly, identifying the URL's protocol as ssh. It may also parse the host name incorrectly.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3224\">https://nvd.nist.gov/vuln/detail/CVE-2022-3224</a></li>\n<li><a href=\"https://github.com/ionicabizau/parse-url/commit/9cacf38de02db0fb1358bd6ec04543e523cd6a8e\">https://github.com/ionicabizau/parse-url/commit/9cacf38de02db0fb1358bd6ec04543e523cd6a8e</a></li>\n<li><a href=\"https://huntr.dev/bounties/3587a567-7fcd-4702-b7c9-d9ca565e3c62\">https://huntr.dev/bounties/3587a567-7fcd-4702-b7c9-d9ca565e3c62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pqw5-jmp5-px4v\">https://github.com/advisories/GHSA-pqw5-jmp5-px4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pqw5-jmp5-px4v",
            "title": "[parse-url] parse-url parses http URLs incorrectly, making it vulnerable to host name spoofing",
            "date_modified": "2022-09-19T20:25:18.000Z",
            "date_published": "2022-09-16T00:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pqw5-jmp5-px4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Internal fields (keys used internally by Parse Server, prefixed by <code>_</code>) and protected fields (user defined) can be used as query constraints. Internal and protected fields are removed by Parse Server from query results and are only returned to the client using a valid master key. However, using query constraints, these fields can be guessed by enumerating until Parse Server returns a response object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patch requires the master key to use internal and protected fields as query constraints.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Implement a Parse Cloud Trigger <code>beforeFind</code> and manually remove the query constraints, such as:</p>\n<pre><code class=\"language-js\">Parse.Cloud.beforeFind('TestObject', ({ query }) =&gt; {\n  for (const key in query._where || []) {\n    // Repeat logic for protected fields\n    if (key.charAt(0) === '_') {\n      delete query._where[key];\n    }\n  }\n});\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36079\">https://nvd.nist.gov/vuln/detail/CVE-2022-36079</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8143\">https://github.com/parse-community/parse-server/issues/8143</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8144\">https://github.com/parse-community/parse-server/issues/8144</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec\">https://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4\">https://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.14\">https://github.com/parse-community/parse-server/releases/tag/4.10.14</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.5\">https://github.com/parse-community/parse-server/releases/tag/5.2.5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2m6g-crv8-p3c6",
            "title": "[parse-server] Parse Server vulnerable to brute force guessing of user sensitive data via search patterns",
            "date_modified": "2022-09-21T19:21:14.000Z",
            "date_published": "2022-09-16T21:17:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2m6g-crv8-p3c6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Internal fields (keys used internally by Parse Server, prefixed by <code>_</code>) and protected fields (user defined) can be used as query constraints. Internal and protected fields are removed by Parse Server from query results and are only returned to the client using a valid master key. However, using query constraints, these fields can be guessed by enumerating until Parse Server returns a response object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The patch requires the master key to use internal and protected fields as query constraints.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Implement a Parse Cloud Trigger <code>beforeFind</code> and manually remove the query constraints, such as:</p>\n<pre><code class=\"language-js\">Parse.Cloud.beforeFind('TestObject', ({ query }) =&gt; {\n  for (const key in query._where || []) {\n    // Repeat logic for protected fields\n    if (key.charAt(0) === '_') {\n      delete query._where[key];\n    }\n  }\n});\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36079\">https://nvd.nist.gov/vuln/detail/CVE-2022-36079</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8143\">https://github.com/parse-community/parse-server/issues/8143</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8144\">https://github.com/parse-community/parse-server/issues/8144</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec\">https://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4\">https://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.14\">https://github.com/parse-community/parse-server/releases/tag/4.10.14</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.2.5\">https://github.com/parse-community/parse-server/releases/tag/5.2.5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2m6g-crv8-p3c6\">https://github.com/advisories/GHSA-2m6g-crv8-p3c6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2m6g-crv8-p3c6",
            "title": "[parse-server] Parse Server vulnerable to brute force guessing of user sensitive data via search patterns",
            "date_modified": "2022-09-21T19:21:14.000Z",
            "date_published": "2022-09-16T21:17:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2m6g-crv8-p3c6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the <code>Function</code> constructor.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25921\">https://nvd.nist.gov/vuln/detail/CVE-2022-25921</a></li>\n<li><a href=\"https://github.com/indexzero/morgan-json/blob/3a76010215a4256d41687d082cd66c4f00ea5717/index.js%23L46\">https://github.com/indexzero/morgan-json/blob/3a76010215a4256d41687d082cd66c4f00ea5717/index.js%23L46</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MORGANJSON-2976193\">https://security.snyk.io/vuln/SNYK-JS-MORGANJSON-2976193</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwv4-6mxc-x5h3\">https://github.com/advisories/GHSA-fwv4-6mxc-x5h3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwv4-6mxc-x5h3",
            "title": "[morgan-json] morgan-json vulnerable to Arbitrary Code Execution",
            "date_modified": "2022-09-16T19:37:55.000Z",
            "date_published": "2022-08-29T20:06:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwv4-6mxc-x5h3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In oauth2-server (aka node-oauth2-server) through 3.1.1, the value of the <code>redirect_uri</code> parameter received during the authorization and token request is checked against an incorrect URI pattern (<code>[a-zA-Z][a-zA-Z0-9+.-]+:</code>) before making a redirection. This allows a malicious client to pass an XSS payload through the redirect_uri parameter while making an authorization request. NOTE: this vulnerability is similar to CVE-2020-7741.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26938\">https://nvd.nist.gov/vuln/detail/CVE-2020-26938</a></li>\n<li><a href=\"https://github.com/oauthjs/node-oauth2-server/issues/637\">https://github.com/oauthjs/node-oauth2-server/issues/637</a></li>\n<li><a href=\"https://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/grant-types/authorization-code-grant-type.js#L143\">https://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/grant-types/authorization-code-grant-type.js#L143</a></li>\n<li><a href=\"https://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/validator/is.js#L12\">https://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/validator/is.js#L12</a></li>\n<li><a href=\"https://tools.ietf.org/html/rfc3986#section-3\">https://tools.ietf.org/html/rfc3986#section-3</a></li>\n<li><a href=\"https://tools.ietf.org/html/rfc6749#section-3.1.2\">https://tools.ietf.org/html/rfc6749#section-3.1.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4rg6-fm25-gc34\">https://github.com/advisories/GHSA-4rg6-fm25-gc34</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4rg6-fm25-gc34",
            "title": "[oauth2-server] oauth2-server through 3.1.1 vulnerable to Open Redirect",
            "date_modified": "2022-09-16T19:36:16.000Z",
            "date_published": "2022-08-30T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4rg6-fm25-gc34"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25644\">https://nvd.nist.gov/vuln/detail/CVE-2022-25644</a></li>\n<li><a href=\"https://github.com/pendo324/get-process-by-name-js/blob/34e8a279a94fa23acb13e302e9516ab1ea8d8731/index.js%23L27-L28\">https://github.com/pendo324/get-process-by-name-js/blob/34e8a279a94fa23acb13e302e9516ab1ea8d8731/index.js%23L27-L28</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-PENDO324GETPROCESSBYNAME-2419094\">https://security.snyk.io/vuln/SNYK-JS-PENDO324GETPROCESSBYNAME-2419094</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qhxv-296x-hjv7\">https://github.com/advisories/GHSA-qhxv-296x-hjv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qhxv-296x-hjv7",
            "title": "[@pendo324/get-process-by-name] @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution",
            "date_modified": "2022-09-16T19:35:05.000Z",
            "date_published": "2022-08-29T20:06:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qhxv-296x-hjv7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of package x-data-spreadsheet are vulnerable to Cross-site Scripting (XSS) due to missing sanitization of values inserted into the cells.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25646\">https://nvd.nist.gov/vuln/detail/CVE-2022-25646</a></li>\n<li><a href=\"https://github.com/myliang/x-spreadsheet/issues/580\">https://github.com/myliang/x-spreadsheet/issues/580</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-XDATASPREADSHEET-2430381\">https://security.snyk.io/vuln/SNYK-JS-XDATASPREADSHEET-2430381</a></li>\n<li><a href=\"https://youtu.be/Ij-8VVKNh7U\">https://youtu.be/Ij-8VVKNh7U</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x5cw-843f-r366\">https://github.com/advisories/GHSA-x5cw-843f-r366</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x5cw-843f-r366",
            "title": "[x-data-spreadsheet] x-data-spreadsheet through 1.1.9 vulnerable to Cross-site Scripting",
            "date_modified": "2022-09-16T19:27:37.000Z",
            "date_published": "2022-08-31T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x5cw-843f-r366"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><em>This is a historical security advisory, pertaining to a vulnerability that was reported, patched, and published in 2021. It is listed here for completeness and for CVE tracking purposes.</em></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Due to an unnecessarily strict conditional in the code handling the first step of the SSO process, the pre-existing logic that added (and later checked) a nonce was inadvertently rendered opt-in instead of opt-out.</p>\n<p>This re-exposed a vulnerability in that a specially crafted MITM attack could theoretically take over another user account during the single sign-on process.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been fully patched as of v1.17.2.</p>\n<p>The patch commit can be found at <a href=\"https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4\">https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Site maintainers can cherry-pick <a href=\"https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4\">https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4</a> into their codebase to patch the exploit.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/\">https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Discuss it on <a href=\"community.nodebb.org/\">our community forum</a></li>\n<li>Email us at <a href=\"mailto:support@nodebb.org\">support@nodebb.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NodeBB/NodeBB/security/advisories/GHSA-xmgg-fx9p-prq6\">https://github.com/NodeBB/NodeBB/security/advisories/GHSA-xmgg-fx9p-prq6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36076\">https://nvd.nist.gov/vuln/detail/CVE-2022-36076</a></li>\n<li><a href=\"https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4\">https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4</a></li>\n<li><a href=\"https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/\">https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xmgg-fx9p-prq6\">https://github.com/advisories/GHSA-xmgg-fx9p-prq6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xmgg-fx9p-prq6",
            "title": "[nodebb] NodeBB account takeover via SSO plugins",
            "date_modified": "2022-09-16T18:38:46.000Z",
            "date_published": "2022-09-16T18:38:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xmgg-fx9p-prq6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}