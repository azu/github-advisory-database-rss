{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>\n<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.</p>\n<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both <code>\\</code> and <code>/</code> characters as path separators, however <code>\\</code> is a valid filename character on posix systems.</p>\n<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>\n<p>Additionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at <code>FOO</code>, followed by a symbolic link named <code>foo</code>, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but <em>not</em> from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the <code>FOO</code> directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. </p>\n<p>These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.</p>\n<p>The v3 branch of <code>node-tar</code> has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of <code>node-tar</code>. If this is not possible, a workaround is available below.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>4.4.16 || 5.0.8 || 6.1.7</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.</p>\n<pre><code class=\"language-js\">const tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =&gt; {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n</code></pre>\n<p>Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The problem is addressed in the following ways:</p>\n<ol>\n<li>All paths are normalized to use <code>/</code> as a path separator, replacing <code>\\</code> with <code>/</code> on Windows systems, and leaving <code>\\</code> intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.</li>\n<li>Directory cache pruning is performed case-insensitively.  This <em>may</em> result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.</li>\n</ol>\n<h4 id=\"caveat\">Caveat</h4>\n<p>Note that this means that the <code>entry</code> objects exposed in various parts of tar's API will now always use <code>/</code> as a path separator, even on Windows systems.  This is not expected to cause problems, as <code>/</code> is a valid path separator on Windows systems, but <em>may</em> result in issues if <code>entry.path</code> is compared against a path string coming from some other API such as <code>fs.realpath()</code> or <code>path.resolve()</code>.</p>\n<p>Users are encouraged to always normalize paths using a well-tested method such as <code>path.resolve()</code> before comparing paths to one another.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\">https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc</a></li>\n<li><a href=\"https://www.npmjs.com/package/tar\">https://www.npmjs.com/package/tar</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37701\">https://nvd.nist.gov/vuln/detail/CVE-2021-37701</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5008\">https://www.debian.org/security/2021/dsa-5008</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9r2w-394v-53qc\">https://github.com/advisories/GHSA-9r2w-394v-53qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9r2w-394v-53qc",
            "title": "[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
            "date_modified": "2024-02-02T23:30:44.000Z",
            "date_published": "2021-08-31T16:05:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9r2w-394v-53qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ylianst MeshCentral 1.1.16 suffers from Use of a Broken or Risky Cryptographic Algorithm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51838\">https://nvd.nist.gov/vuln/detail/CVE-2023-51838</a></li>\n<li><a href=\"https://github.com/Ylianst/MeshCentral/tree/master\">https://github.com/Ylianst/MeshCentral/tree/master</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51838.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51838.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v269-rrr6-cx6r\">https://github.com/advisories/GHSA-v269-rrr6-cx6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v269-rrr6-cx6r",
            "title": "[meshcentral] Ylianst MeshCentral 1.1.16 suffers from Use of a Broken or Risky Cryptographic Algorithm.",
            "date_modified": "2024-02-02T20:17:32.000Z",
            "date_published": "2024-02-02T18:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v269-rrr6-cx6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package dash-core-components before 2.13.0; all versions of the package dash-core-components; versions of the package dash before 2.15.0; all versions of the package dash-html-components; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.</p>\n<p><strong>Note:</strong></p>\n<p>This is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21485\">https://nvd.nist.gov/vuln/detail/CVE-2024-21485</a></li>\n<li><a href=\"https://github.com/plotly/dash/issues/2729\">https://github.com/plotly/dash/issues/2729</a></li>\n<li><a href=\"https://github.com/plotly/dash/pull/2732\">https://github.com/plotly/dash/pull/2732</a></li>\n<li><a href=\"https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c\">https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c</a></li>\n<li><a href=\"https://github.com/plotly/dash/releases/tag/v2.15.0\">https://github.com/plotly/dash/releases/tag/v2.15.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084\">https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337\">https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335\">https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-547x-748v-vp6p\">https://github.com/advisories/GHSA-547x-748v-vp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-547x-748v-vp6p",
            "title": "[dash-html-components] Dash apps vulnerable to Cross-site Scripting",
            "date_modified": "2024-02-02T18:10:52.000Z",
            "date_published": "2024-02-02T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-547x-748v-vp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package dash-core-components before 2.13.0; all versions of the package dash-core-components; versions of the package dash before 2.15.0; all versions of the package dash-html-components; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.</p>\n<p><strong>Note:</strong></p>\n<p>This is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21485\">https://nvd.nist.gov/vuln/detail/CVE-2024-21485</a></li>\n<li><a href=\"https://github.com/plotly/dash/issues/2729\">https://github.com/plotly/dash/issues/2729</a></li>\n<li><a href=\"https://github.com/plotly/dash/pull/2732\">https://github.com/plotly/dash/pull/2732</a></li>\n<li><a href=\"https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c\">https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c</a></li>\n<li><a href=\"https://github.com/plotly/dash/releases/tag/v2.15.0\">https://github.com/plotly/dash/releases/tag/v2.15.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084\">https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337\">https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335\">https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-547x-748v-vp6p\">https://github.com/advisories/GHSA-547x-748v-vp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-547x-748v-vp6p",
            "title": "[dash-core-components] Dash apps vulnerable to Cross-site Scripting",
            "date_modified": "2024-02-02T18:10:52.000Z",
            "date_published": "2024-02-02T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-547x-748v-vp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Prototype pollution vulnerability in 'dset' versions 1.0.0 through 2.0.1 allows attacker to cause a denial of service and may lead to remote code execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NPM module 'dset' can be abused by Prototype Pollution vulnerability since the function ‘export ()' did not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The export function accepts three arguments <code>obj, keys, val</code>. Due to the absence of validation, at values passed into <code>keys, val</code> arguments, an attacker can supply a malicious value by adjusting the <code>keys</code> value to include the <code>__proto__</code> property. Since there is no validation before assigning property to check whether the assigned <code>keys</code> is the Object's own property or not, the property <code>isAdmin</code> will be directly be assigned to the empty obj({}) thereby polluting the Object prototype. Later in the code, if there is a check to validate <code>isAdmin</code> the valued would be substituted as \"true\" as it had been polluted.</p>\n<pre><code class=\"language-js\">const dset = require('dset');\nvar obj = {}\nconsole.log(\"Before : \" + obj.isAdmin);\ndset(obj, '__proto__.polluted', true);\nconsole.log(\"After : \" + obj.polluted);\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28277\">https://nvd.nist.gov/vuln/detail/CVE-2020-28277</a></li>\n<li><a href=\"https://github.com/lukeed/dset/blob/50a6ead172d1466a96035eff00f8eb465ccd050a/src/index.js#L6\">https://github.com/lukeed/dset/blob/50a6ead172d1466a96035eff00f8eb465ccd050a/src/index.js#L6</a></li>\n<li><a href=\"https://github.com/lukeed/dset/issues/11\">https://github.com/lukeed/dset/issues/11</a></li>\n<li><a href=\"https://github.com/lukeed/dset/commit/2b9ec49e231107b1a83b04a1bc1a66a8d14cea1c\">https://github.com/lukeed/dset/commit/2b9ec49e231107b1a83b04a1bc1a66a8d14cea1c</a></li>\n<li><a href=\"https://web.archive.org/web/20210104204657/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28277\">https://web.archive.org/web/20210104204657/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4xc-7cw8-cgfj\">https://github.com/advisories/GHSA-q4xc-7cw8-cgfj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4xc-7cw8-cgfj",
            "title": "[dset] dset vulnerable to prototype pollution",
            "date_modified": "2024-02-01T21:04:21.000Z",
            "date_published": "2022-05-24T17:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4xc-7cw8-cgfj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Prototype pollution vulnerability in 'shvl' versions 1.0.0 through 2.0.1 allows an attacker to cause a denial of service and may lead to remote code execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NPM module 'shvl' can be abused by Prototype Pollution vulnerability since the function 'set()' did not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>\n<h3 id=\"poc-details\">PoC Details</h3>\n<p>The 'set()' function accepts four arguments <code>object, path, val, obj</code>. Due to the absence of validation, at values passed into <code>path, val</code> arguments, an attacker can supply a malicious value by adjusting the <code>path</code> value to include the <code>__proto__</code> property. Since there is no validation before assigning property to check whether the assigned <code>path</code> is the Object's own property or not, the property <code>isAdmin</code> will be directly be assigned to the empty obj({}) thereby polluting the Object prototype. Later in the code, if there is a check to validate <code>isAdmin</code> the valued would be substituted as \"true\" as it had been polluted.</p>\n<pre><code class=\"language-js\">const shvl = require('shvl');\nvar obj = {}\nconsole.log(\"Before : \" + obj.isAdmin);\nshvl.set(obj, '__proto__.isAdmin', true);\nconsole.log(\"After : \" + obj.isAdmin);\n</code></pre>\n<h3 id=\"affected-environments\">Affected Environments</h3>\n<p>1.0.0-2.0.1</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>There are a couple of ways to mitigate prototype pollution vulnerabilities, for example: Most of the cases can be solved by freezing an object which doesn’t allow to add, remove, or change its properties. Validating the JSON input with schema validation, this guarantees that the JSON input contains only predefined attributes. We can change the objects, so they won’t have any prototype association by using “Object.create”.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28278\">https://nvd.nist.gov/vuln/detail/CVE-2020-28278</a></li>\n<li><a href=\"https://github.com/robinvdvleuten/shvl/issues/34\">https://github.com/robinvdvleuten/shvl/issues/34</a></li>\n<li><a href=\"https://github.com/robinvdvleuten/shvl/pull/36\">https://github.com/robinvdvleuten/shvl/pull/36</a></li>\n<li><a href=\"https://github.com/robinvdvleuten/shvl/commit/513c0848774dfb114ad0d0554abf7927cfdd569e\">https://github.com/robinvdvleuten/shvl/commit/513c0848774dfb114ad0d0554abf7927cfdd569e</a></li>\n<li><a href=\"https://web.archive.org/web/20210320222933/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28278\">https://web.archive.org/web/20210320222933/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28278</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pqwc-3vhw-qcvq\">https://github.com/advisories/GHSA-pqwc-3vhw-qcvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pqwc-3vhw-qcvq",
            "title": "[shvl] shvl vulnerable to prototype pollution",
            "date_modified": "2024-02-01T21:00:27.000Z",
            "date_published": "2022-05-24T17:37:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pqwc-3vhw-qcvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter <code>attachDataUrls</code> set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. </p>\n<h3 id=\"details\">Details</h3>\n<p>Regex: /^data:((?:[^;]<em>;)</em>(?:[^,]<em>)),(.</em>)$/</p>\n<p>Path: compile -&gt; getAttachments -&gt; _processDataUrl</p>\n<p>Regex: /(&lt;img\\b[^&gt;]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'&gt;\\s]+)/</p>\n<p>Path: _convertDataImages</p>\n<h3 id=\"poc\">PoC</h3>\n<p><a href=\"https://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\">https://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6</a>\n<a href=\"https://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\">https://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>ReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nodemailer/nodemailer/security/advisories/GHSA-9h6g-pr28-7cqp\">https://github.com/nodemailer/nodemailer/security/advisories/GHSA-9h6g-pr28-7cqp</a></li>\n<li><a href=\"https://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\">https://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6</a></li>\n<li><a href=\"https://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\">https://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698</a></li>\n<li><a href=\"https://github.com/nodemailer/nodemailer/commit/dd8f5e8a4ddc99992e31df76bcff9c590035cd4a\">https://github.com/nodemailer/nodemailer/commit/dd8f5e8a4ddc99992e31df76bcff9c590035cd4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h6g-pr28-7cqp\">https://github.com/advisories/GHSA-9h6g-pr28-7cqp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h6g-pr28-7cqp",
            "title": "[nodemailer] nodemailer ReDoS when trying to send a specially crafted email",
            "date_modified": "2024-02-01T17:58:50.000Z",
            "date_published": "2024-01-31T22:42:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h6g-pr28-7cqp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>When the application is password-protected (deployed with the <code>ACCESS_CODE</code> option), it is possible to access plugins without proper authorization (without password).\n###\tProof-of-Concept:\nLet’s suppose that application has been deployed with following command:\n<code>sudo docker run -d -p 3210:3210   -e OPENAI_API_KEY=sk-[REDACTED] -e ACCESS_CODE=TEST123   --name lobe-chat   lobehub/lobe-chat</code>\nDue to the utilization of the <code>ACCESS_CODE</code>,  access to the chat is possible only after entering the password:</p>\n<p><img alt=\"image\" src=\"https://raw.githubusercontent.com/dastaj/assets/main/others/image.png\"></p>\n<p>However, it is possible to interact with chat plugins without entering the <code>ACCESS_CODE</code>. \nExample HTTP request:</p>\n<pre><code>POST /api/plugin/gateway HTTP/1.1\nHost: localhost:3210\nContent-Length: 1276\n\n{\"apiName\":\"checkWeatherUsingGET\",\"arguments\":\"{\\n  \\\"location\\\": \\\"London\\\"\\n}\",\"identifier\":\"WeatherGPT\",\"type\":\"default\",\"manifest\":{\"api\":[{\"description\":\"Get current weather information\",\"name\":\"checkWeatherUsingGET\",\"parameters\":{\"properties\":{\"location\":{\"type\":\"string\"}},\"required\":[\"location\"],\"type\":\"object\"}}],\"homepage\":\"https://weathergpt.vercel.app/legal\",\"identifier\":\"WeatherGPT\",\"meta\":{\"avatar\":\"https://openai-collections.chat-plugin.lobehub.com/weather-gpt/logo.webp\",\"description\":\"Get current weather information for a specific location.\",\"title\":\"WeatherGPT\"},\"openapi\":\"https://openai-collections.chat-plugin.lobehub.com/weather-gpt/openapi.json\",\"systemRole\":\"Use the WeatherGPT plugin to automatically fetch current weather information for a specific location when it's being generated by the ChatGPT assistant. The plugin will return weather data, including temperature, wind speed, humidity, and other relevant information, as well as a link to a page that has all the information. Links will always be returned and should be shown to the user. The weather data can be used to provide users with up-to-date and accurate weather information for their desired location.\",\"type\":\"default\",\"version\":\"1\",\"settings\":{\"properties\":{},\"type\":\"object\"}}}\n</code></pre>\n<p>HTTP response:</p>\n<pre><code>HTTP/1.1 200 OK\n[...]\n{\"location\":{\"name\":\"London\",\"region\":\"City of London, Greater London\",\"country\":\"United Kingdom\",\"lat\":51.52,\"lon\":-0.11,\"tz_id\":\"Europe/London\",\"localtime_epoch\":1706379026,\"localtime\":\"2024-01-27 18:10\"},\"current\":{\"last_updated_epoch\":1706378400,\"last_updated\":\"2024-01-27 18:00\",\"temp_c\":6,\"temp_f\":42.8,\"is_day\":0,\"condition\":{\"text\":\"Clear\",\"icon\":\"//cdn.weatherapi.com/weather/64x64/night/113.png\",\"code\":1000},\"wind_mph\":4.3,\"wind_kph\":6.8,\"wind_degree\":170,\"wind_dir\":\"S\",\"pressure_mb\":1031,\"pressure_in\":30.45,\"precip_mm\":0,\"precip_in\":0,\"humidity\":81,\"cloud\":0,\"feelslike_c\":3.8,\"feelslike_f\":38.9,\"vis_km\":10,\"vis_miles\":6,\"uv\":1,\"gust_mph\":9.5,\"gust_kph\":15.3},\"infoLink\":\"https://weathergpt.vercel.app/London\"}\n</code></pre>\n<h3 id=\"remediation\">Remediation:</h3>\n<p>Verify the <code>ACCESS_CODE</code> for HTTP requests to the <code>/api/plugin/:</code> route.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>Unauthorized access to plugins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lobehub/lobe-chat/security/advisories/GHSA-pf55-fj96-xf37\">https://github.com/lobehub/lobe-chat/security/advisories/GHSA-pf55-fj96-xf37</a></li>\n<li><a href=\"https://github.com/lobehub/lobe-chat/commit/2184167f09ab68e4efa051ee984ea0c4e7c48fbd\">https://github.com/lobehub/lobe-chat/commit/2184167f09ab68e4efa051ee984ea0c4e7c48fbd</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24566\">https://nvd.nist.gov/vuln/detail/CVE-2024-24566</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pf55-fj96-xf37\">https://github.com/advisories/GHSA-pf55-fj96-xf37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pf55-fj96-xf37",
            "title": "[@lobehub/chat] @lobehub/chat vulnerable to unauthorized access to plugins",
            "date_modified": "2024-01-31T20:25:38.000Z",
            "date_published": "2024-01-31T18:04:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pf55-fj96-xf37"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mathjax up to v2.7.9 was discovered to contain two Regular expression Denial of Service (ReDoS) vulnerabilities in MathJax.js via the components pattern and markdownPattern. NOTE: the vendor disputes this because the regular expressions are not applied to user input; thus, there is no risk.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39663\">https://nvd.nist.gov/vuln/detail/CVE-2023-39663</a></li>\n<li><a href=\"https://github.com/mathjax/MathJax/issues/3074\">https://github.com/mathjax/MathJax/issues/3074</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v638-q856-grg8\">https://github.com/advisories/GHSA-v638-q856-grg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v638-q856-grg8",
            "title": "[mathjax] MathJax Regular expression Denial of Service (ReDoS)",
            "date_modified": "2024-01-31T00:02:47.000Z",
            "date_published": "2023-08-29T21:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v638-q856-grg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The @apollo/experimental-apollo-client-nextjs NPM package is vulnerable to a cross-site scripting vulnerability. This vulnerability arises from improper handling of untrusted input when @apollo/experimental-apollo-client-nextjs performs server-side rendering of HTML pages. To fix this vulnerability, we implemented appropriate escaping to prevent javascript injection into rendered pages.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To fix this issue, please update to version 0.7.0 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds for this issue. Please update to version 0.7.0</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/apollographql/apollo-client-nextjs/security/advisories/GHSA-rv8p-rr2h-fgpg\">https://github.com/apollographql/apollo-client-nextjs/security/advisories/GHSA-rv8p-rr2h-fgpg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23841\">https://nvd.nist.gov/vuln/detail/CVE-2024-23841</a></li>\n<li><a href=\"https://github.com/apollographql/apollo-client-nextjs/commit/b92bc42abd5f8e17d4db361c36bd08e4f541a46b\">https://github.com/apollographql/apollo-client-nextjs/commit/b92bc42abd5f8e17d4db361c36bd08e4f541a46b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rv8p-rr2h-fgpg\">https://github.com/advisories/GHSA-rv8p-rr2h-fgpg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rv8p-rr2h-fgpg",
            "title": "[@apollo/experimental-nextjs-app-support] @apollo/experimental-nextjs-app-support Cross-site Scripting vulnerability",
            "date_modified": "2024-01-30T20:57:50.000Z",
            "date_published": "2024-01-30T20:57:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rv8p-rr2h-fgpg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">impact</h2>\n<p>The <code>@urql/next</code> package is vulnerable to XSS. To exploit this an attacker would need to ensure that the response returns <code>html</code> tags and that the web-application is using streamed responses (non-RSC). This vulnerability is due to improper escaping of html-like characters in the response-stream.</p>\n<p>To fix this vulnerability upgrade to version 1.1.1</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/urql-graphql/urql/security/advisories/GHSA-qhjf-hm5j-335w\">https://github.com/urql-graphql/urql/security/advisories/GHSA-qhjf-hm5j-335w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24556\">https://nvd.nist.gov/vuln/detail/CVE-2024-24556</a></li>\n<li><a href=\"https://github.com/urql-graphql/urql/commit/4b7011b70d5718728ff912d02a4dbdc7f703540d\">https://github.com/urql-graphql/urql/commit/4b7011b70d5718728ff912d02a4dbdc7f703540d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qhjf-hm5j-335w\">https://github.com/advisories/GHSA-qhjf-hm5j-335w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qhjf-hm5j-335w",
            "title": "[@urql/next] @urql/next Cross-site Scripting vulnerability",
            "date_modified": "2024-01-30T20:57:30.000Z",
            "date_published": "2024-01-30T20:57:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qhjf-hm5j-335w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>@tanstack/react-query-next-experimental</code> NPM package is vulnerable to a cross-site scripting vulnerability. To exploit this, an attacker would need to either inject malicious input or arrange to have malicious input be returned from an endpoint.</p>\n<p>This vulnerability arises from improper handling of untrusted input when <code>@tanstack/react-query-next-experimental</code> performs server-side rendering of HTML pages. To fix this vulnerability, we implemented appropriate escaping to prevent javascript injection into rendered pages.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To fix this issue, please update to version 5.18.0 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds for this issue. Please update to version 5.18.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TanStack/query/security/advisories/GHSA-997g-27x8-43rf\">https://github.com/TanStack/query/security/advisories/GHSA-997g-27x8-43rf</a></li>\n<li><a href=\"https://github.com/TanStack/query/commit/f2ddaf2536e8b71d2da88a9310ac9a48c13512a1\">https://github.com/TanStack/query/commit/f2ddaf2536e8b71d2da88a9310ac9a48c13512a1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24558\">https://nvd.nist.gov/vuln/detail/CVE-2024-24558</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-997g-27x8-43rf\">https://github.com/advisories/GHSA-997g-27x8-43rf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-997g-27x8-43rf",
            "title": "[@tanstack/react-query-next-experimental] react-query-streamed-hydration Cross-site Scripting vulnerability",
            "date_modified": "2024-01-30T21:34:05.000Z",
            "date_published": "2024-01-30T20:57:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-997g-27x8-43rf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ylianst MeshCentral 1.1.16 is vulnerable to Missing SSL Certificate Validation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51837\">https://nvd.nist.gov/vuln/detail/CVE-2023-51837</a></li>\n<li><a href=\"https://github.com/Ylianst/MeshCentral/blob/master/mpsserver.js\">https://github.com/Ylianst/MeshCentral/blob/master/mpsserver.js</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51837.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51837.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xw6-9h78-c89j\">https://github.com/advisories/GHSA-8xw6-9h78-c89j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xw6-9h78-c89j",
            "title": "[meshcentral] Ylianst MeshCentral Missing SSL Certificate Validation",
            "date_modified": "2024-01-30T18:44:28.000Z",
            "date_published": "2024-01-30T03:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xw6-9h78-c89j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package network before 0.7.0 are vulnerable to Arbitrary Command Injection due to use of the <code>child_process</code> exec function without input sanitization. If (attacker-controlled) user input is given to the <code>mac_address_for</code> function of the package, it is possible for an attacker to execute arbitrary commands on the operating system that this package is being run on.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21488\">https://nvd.nist.gov/vuln/detail/CVE-2024-21488</a></li>\n<li><a href=\"https://github.com/tomas/network/commit/5599ed6d6ff1571a5ccadea775430c131f381de7\">https://github.com/tomas/network/commit/5599ed6d6ff1571a5ccadea775430c131f381de7</a></li>\n<li><a href=\"https://github.com/tomas/network/commit/6ec8713580938ab4666df2f2d0f3399891ed2ad7\">https://github.com/tomas/network/commit/6ec8713580938ab4666df2f2d0f3399891ed2ad7</a></li>\n<li><a href=\"https://github.com/tomas/network/commit/72c523265940fe279eb0050d441522628f8988e5\">https://github.com/tomas/network/commit/72c523265940fe279eb0050d441522628f8988e5</a></li>\n<li><a href=\"https://gist.github.com/icemonster/282ab98fb68fc22aac7c576538f6369c\">https://gist.github.com/icemonster/282ab98fb68fc22aac7c576538f6369c</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-NETWORK-6184371\">https://security.snyk.io/vuln/SNYK-JS-NETWORK-6184371</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvh2-82c7-ppfg\">https://github.com/advisories/GHSA-vvh2-82c7-ppfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvh2-82c7-ppfg",
            "title": "[network] network Arbitrary Command Injection vulnerability",
            "date_modified": "2024-01-30T18:43:06.000Z",
            "date_published": "2024-01-30T06:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvh2-82c7-ppfg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An algorithm-downgrade issue was discovered in Ylianst MeshCentral 1.1.16.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51842\">https://nvd.nist.gov/vuln/detail/CVE-2023-51842</a></li>\n<li><a href=\"https://github.com/Ylianst/MeshCentral/tree/master\">https://github.com/Ylianst/MeshCentral/tree/master</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51842.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51842.md</a></li>\n<li><a href=\"https://github.com/Ylianst/MeshCentral/commit/a5efc5e899b8809293b297df045cff5ec0eb448b\">https://github.com/Ylianst/MeshCentral/commit/a5efc5e899b8809293b297df045cff5ec0eb448b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wpxw-5xfm-x22v\">https://github.com/advisories/GHSA-wpxw-5xfm-x22v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wpxw-5xfm-x22v",
            "title": "[meshcentral] MeshCentral algorithm-downgrade issue",
            "date_modified": "2024-01-29T22:28:56.000Z",
            "date_published": "2024-01-29T21:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wpxw-5xfm-x22v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue. Note that prior version 0.9.9 package <code>next</code> hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/security/advisories/GHSA-25mp-g6fv-mqxx\">https://github.com/vercel/next.js/security/advisories/GHSA-25mp-g6fv-mqxx</a></li>\n<li><a href=\"https://github.com/vercel/next.js/pull/32080\">https://github.com/vercel/next.js/pull/32080</a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/6d98b4fb4315dec1badecf0e9bdc212a4272b264\">https://github.com/vercel/next.js/commit/6d98b4fb4315dec1badecf0e9bdc212a4272b264</a></li>\n<li><a href=\"https://github.com/vercel/next.js/releases/v12.0.5\">https://github.com/vercel/next.js/releases/v12.0.5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43803\">https://nvd.nist.gov/vuln/detail/CVE-2021-43803</a></li>\n<li><a href=\"https://github.com/vercel/next.js/releases/tag/v11.1.3\">https://github.com/vercel/next.js/releases/tag/v11.1.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-25mp-g6fv-mqxx\">https://github.com/advisories/GHSA-25mp-g6fv-mqxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-25mp-g6fv-mqxx",
            "title": "[next] Unexpected server crash in Next.js.",
            "date_modified": "2024-01-29T21:49:20.000Z",
            "date_published": "2021-12-07T21:12:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-25mp-g6fv-mqxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue. Note that prior version 0.9.9 package <code>next</code> hosted a different utility (0.4.1 being the latest version of that codebase), and this advisory does not apply to those versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/security/advisories/GHSA-25mp-g6fv-mqxx\">https://github.com/vercel/next.js/security/advisories/GHSA-25mp-g6fv-mqxx</a></li>\n<li><a href=\"https://github.com/vercel/next.js/pull/32080\">https://github.com/vercel/next.js/pull/32080</a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/6d98b4fb4315dec1badecf0e9bdc212a4272b264\">https://github.com/vercel/next.js/commit/6d98b4fb4315dec1badecf0e9bdc212a4272b264</a></li>\n<li><a href=\"https://github.com/vercel/next.js/releases/v12.0.5\">https://github.com/vercel/next.js/releases/v12.0.5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43803\">https://nvd.nist.gov/vuln/detail/CVE-2021-43803</a></li>\n<li><a href=\"https://github.com/vercel/next.js/releases/tag/v11.1.3\">https://github.com/vercel/next.js/releases/tag/v11.1.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-25mp-g6fv-mqxx\">https://github.com/advisories/GHSA-25mp-g6fv-mqxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-25mp-g6fv-mqxx",
            "title": "[next] Unexpected server crash in Next.js.",
            "date_modified": "2024-01-29T21:49:20.000Z",
            "date_published": "2021-12-07T21:12:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-25mp-g6fv-mqxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43138\">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/internal/iterator.js\">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>\n<li><a href=\"https://jsfiddle.net/oz5twjd9/\">https://jsfiddle.net/oz5twjd9/</a></li>\n<li><a href=\"https://github.com/caolan/async/pull/1828\">https://github.com/caolan/async/pull/1828</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>\n<li><a href=\"https://github.com/caolan/async/compare/v2.6.3...v2.6.4\">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwr7-v2mv-hh25\">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25",
            "title": "[async] Prototype Pollution in async",
            "date_modified": "2024-01-26T20:49:01.000Z",
            "date_published": "2022-04-07T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43138\">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/internal/iterator.js\">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>\n<li><a href=\"https://jsfiddle.net/oz5twjd9/\">https://jsfiddle.net/oz5twjd9/</a></li>\n<li><a href=\"https://github.com/caolan/async/pull/1828\">https://github.com/caolan/async/pull/1828</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>\n<li><a href=\"https://github.com/caolan/async/compare/v2.6.3...v2.6.4\">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwr7-v2mv-hh25\">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25",
            "title": "[async] Prototype Pollution in async",
            "date_modified": "2024-01-26T20:49:01.000Z",
            "date_published": "2022-04-07T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>\n<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary <code>stat</code> calls to determine whether a given path is a directory, paths are cached when directories are created.</p>\n<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the <code>node-tar</code> directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where <code>node-tar</code> checks for symlinks occur.</p>\n<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass <code>node-tar</code> symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>\n<p>This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>3.2.3 || 4.4.15 || 5.0.7 || 6.1.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users may work around this vulnerability without upgrading by creating a custom <code>filter</code> method which prevents the extraction of symbolic links.</p>\n<pre><code class=\"language-js\">const tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =&gt; {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n</code></pre>\n<p>Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\">https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw</a></li>\n<li><a href=\"https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\">https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1771\">https://www.npmjs.com/advisories/1771</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32803\">https://nvd.nist.gov/vuln/detail/CVE-2021-32803</a></li>\n<li><a href=\"https://www.npmjs.com/package/tar\">https://www.npmjs.com/package/tar</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\">https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571\">https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349\">https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\">https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r628-mhmh-qjhw\">https://github.com/advisories/GHSA-r628-mhmh-qjhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r628-mhmh-qjhw",
            "title": "[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning",
            "date_modified": "2024-01-26T20:00:13.000Z",
            "date_published": "2021-08-03T19:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r628-mhmh-qjhw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}