{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex]  Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2022-03-28T20:06:21.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            }
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex]  Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2022-03-28T20:06:21.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            }
        },
        {
            "content_html": "<p>Prototype pollution vulnerability via <code>.parse()</code> in Plist allows attackers to cause a Denial of Service (DoS) and may lead to remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22912\">https://nvd.nist.gov/vuln/detail/CVE-2022-22912</a></li>\n<li><a href=\"https://github.com/TooTallNate/plist.js/issues/114\">https://github.com/TooTallNate/plist.js/issues/114</a></li>\n<li><a href=\"https://github.com/TooTallNate/plist.js/pull/118\">https://github.com/TooTallNate/plist.js/pull/118</a></li>\n<li><a href=\"https://github.com/TooTallNate/plist.js/commit/96e2303d059e6be0c9e0c4773226d14b4758de52\">https://github.com/TooTallNate/plist.js/commit/96e2303d059e6be0c9e0c4773226d14b4758de52</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4cpg-3vgw-4877\">https://github.com/advisories/GHSA-4cpg-3vgw-4877</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4cpg-3vgw-4877",
            "title": "[plist] Prototype pollution in Plist",
            "date_modified": "2022-03-26T00:39:16.000Z",
            "date_published": "2022-02-18T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4cpg-3vgw-4877"
            }
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex]  Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2022-03-28T20:06:21.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            }
        },
        {
            "content_html": "<p>All versions of <code>markdown-it-katex</code> are vulnerable to Cross-Site Scripting (XSS). The package fails to properly escape error messages, which may allow attackers to execute arbitrary JavaScript in a victim's browser by triggering an error.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>No fix is currently available. Consider using an alternative package until a fix is made available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/waylonflinn/markdown-it-katex/issues/26\">https://github.com/waylonflinn/markdown-it-katex/issues/26</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1466\">https://www.npmjs.com/advisories/1466</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5ff8-jcf9-fw62\">https://github.com/advisories/GHSA-5ff8-jcf9-fw62</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5ff8-jcf9-fw62",
            "title": "[markdown-it-katex] Cross-Site Scripting in markdown-it-katex",
            "date_modified": "2022-03-24T22:20:47.000Z",
            "date_published": "2020-09-04T17:55:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5ff8-jcf9-fw62"
            }
        },
        {
            "content_html": "<p>All versions of <code>ftp-srv</code> are vulnerable to Server-Side Request Forgery (SSRF). The package fails to prevent remote clients to access other resources in the network, for example when connecting to the server through telnet. This allows attackers to access any network resources available to the server, including private resources in the hosting environment.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>No fix is currently available. Consider using an alternative package until a fix is made available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/advisories/1445\">https://www.npmjs.com/advisories/1445</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r4m5-47cq-6qg8\">https://github.com/advisories/GHSA-r4m5-47cq-6qg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r4m5-47cq-6qg8",
            "title": "[ftp-srv] Server-Side Request Forgery in ftp-srv",
            "date_modified": "2022-03-24T22:19:54.000Z",
            "date_published": "2020-09-04T17:25:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r4m5-47cq-6qg8"
            }
        },
        {
            "content_html": "<p>All versions of <code>html-pdf-chrome</code> are vulnerable to Server-Side Request Forgery (SSRF). The package executes HTTP requests if the parsed HTML contains external references to resources, such as <code>&lt;iframe src=\"http://localhost\" height=\"800px\" width=\"800px\"&gt;&lt;/iframe&gt;</code>. This allows attackers to access resources through HTTP that are accessible to the server, including private resources in the hosting environment.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>No fix is currently available. Consider using an alternative package until a fix is made available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/westy92/html-pdf-chrome/issues/249\">https://github.com/westy92/html-pdf-chrome/issues/249</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1339\">https://www.npmjs.com/advisories/1339</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p98-wpc9-g498\">https://github.com/advisories/GHSA-5p98-wpc9-g498</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498",
            "title": "[html-pdf-chrome] Server-Side Request Forgery in html-pdf-chrome",
            "date_modified": "2022-03-24T22:16:51.000Z",
            "date_published": "2020-09-04T15:21:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498"
            }
        },
        {
            "content_html": "<p>All versions of <code>markdown</code> are vulnerable to Regular Expression Denial of Service (ReDoS). The <code>markdown.toHTML()</code> function has significantly degraded performance when parsing long strings containing underscores. This may lead to Denial of Service if the parser accepts user input.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>No fix is currently available. Consider using an alternative package until a fix is made available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/advisories/1330\">https://www.npmjs.com/advisories/1330</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wx77-rp39-c6vg\">https://github.com/advisories/GHSA-wx77-rp39-c6vg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wx77-rp39-c6vg",
            "title": "[markdown] Regular Expression Denial of Service in markdown",
            "date_modified": "2022-03-24T22:10:14.000Z",
            "date_published": "2020-09-04T15:11:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wx77-rp39-c6vg"
            }
        },
        {
            "content_html": "<p>Minimist &lt;=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44906\">https://nvd.nist.gov/vuln/detail/CVE-2021-44906</a></li>\n<li><a href=\"https://github.com/substack/minimist/issues/164\">https://github.com/substack/minimist/issues/164</a></li>\n<li><a href=\"https://github.com/substack/minimist/blob/master/index.js#L69\">https://github.com/substack/minimist/blob/master/index.js#L69</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>\n<li><a href=\"https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068\">https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvch-5gv4-984h\">https://github.com/advisories/GHSA-xvch-5gv4-984h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h",
            "title": "[minimist] Prototype Pollution in minimist",
            "date_modified": "2022-03-23T19:02:10.000Z",
            "date_published": "2022-03-18T00:01:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h"
            }
        },
        {
            "content_html": "<p>Faker.js helps users create large amounts of data for testing and development. The maintainer deliberately removed the functional code from this package. This appears to be a purposeful and successful attempt to make the package unusable. This is related to the colors.js <a href=\"https://github.com/advisories/GHSA-gh88-3pxp-6fm8\">CVE-2021-23567</a>. </p>\n<p>The functional code for this package was forked and can be found <a href=\"https://github.com/faker-js/faker\">here</a>. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23567\">https://nvd.nist.gov/vuln/detail/CVE-2021-23567</a></li>\n<li><a href=\"https://github.com/Marak/colors.js/issues/285\">https://github.com/Marak/colors.js/issues/285</a></li>\n<li><a href=\"https://github.com/Marak/colors.js/issues/285%23issuecomment-1008212640\">https://github.com/Marak/colors.js/issues/285%23issuecomment-1008212640</a></li>\n<li><a href=\"https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18\">https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh88-3pxp-6fm8\">https://github.com/advisories/GHSA-gh88-3pxp-6fm8</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-COLORS-2331906\">https://snyk.io/vuln/SNYK-JS-COLORS-2331906</a></li>\n<li><a href=\"https://www.npmjs.com/package/@faker-js/faker\">https://www.npmjs.com/package/@faker-js/faker</a></li>\n<li><a href=\"https://www.npmjs.com/package/faker\">https://www.npmjs.com/package/faker</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5w9c-rv96-fr7g\">https://github.com/advisories/GHSA-5w9c-rv96-fr7g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5w9c-rv96-fr7g",
            "title": "[faker] Removal of functional code in faker.js",
            "date_modified": "2022-03-23T16:01:20.000Z",
            "date_published": "2022-03-22T19:28:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5w9c-rv96-fr7g"
            }
        },
        {
            "content_html": "<p>vditor prior to version 3.8.11 is vulnerable to cross-site scripting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0341\">https://nvd.nist.gov/vuln/detail/CVE-2022-0341</a></li>\n<li><a href=\"https://github.com/vanessa219/vditor/commit/219f8a9e272aba3cbc0096a82cac776532dbb9e5\">https://github.com/vanessa219/vditor/commit/219f8a9e272aba3cbc0096a82cac776532dbb9e5</a></li>\n<li><a href=\"https://huntr.dev/bounties/fa546b57-bc15-4705-824e-9474b616f628\">https://huntr.dev/bounties/fa546b57-bc15-4705-824e-9474b616f628</a></li>\n<li><a href=\"https://github.com/Vanessa219/vditor/issues/1102\">https://github.com/Vanessa219/vditor/issues/1102</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pq37-4c4g-v38c\">https://github.com/advisories/GHSA-pq37-4c4g-v38c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pq37-4c4g-v38c",
            "title": "[vditor] Cross-site Scripting in vditor",
            "date_modified": "2022-03-23T15:36:26.000Z",
            "date_published": "2022-03-15T00:01:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pq37-4c4g-v38c"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API\">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>\n<p>All current stable versions of Electron are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched and the following Electron versions contain the fix:</p>\n<ul>\n<li><code>17.0.0-alpha.6</code></li>\n<li><code>16.0.6</code></li>\n<li><code>15.3.5</code></li>\n<li><code>14.2.4</code></li>\n<li><code>13.6.6</code></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Adding this code to your app can workaround the issue.</p>\n<pre><code class=\"language-js\">app.on('web-contents-created', (event, webContents) =&gt; {\n  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {\n    // Prevent default behavior\n    event.preventDefault();\n    // Cancel the request\n    callback('');\n  });\n});\n</code></pre>\n<p>For more information\nIf you have any questions or comments about this advisory, email us at <a href=\"mailto:security@electronjs.org\">security@electronjs.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749\">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21718\">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32178\">https://github.com/electron/electron/pull/32178</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32240\">https://github.com/electron/electron/pull/32240</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p22-ghq8-v749\">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749",
            "title": "[electron] Renderers can obtain access to random bluetooth device without permission in Electron",
            "date_modified": "2022-03-22T19:19:22.000Z",
            "date_published": "2022-03-22T18:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API\">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>\n<p>All current stable versions of Electron are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched and the following Electron versions contain the fix:</p>\n<ul>\n<li><code>17.0.0-alpha.6</code></li>\n<li><code>16.0.6</code></li>\n<li><code>15.3.5</code></li>\n<li><code>14.2.4</code></li>\n<li><code>13.6.6</code></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Adding this code to your app can workaround the issue.</p>\n<pre><code class=\"language-js\">app.on('web-contents-created', (event, webContents) =&gt; {\n  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {\n    // Prevent default behavior\n    event.preventDefault();\n    // Cancel the request\n    callback('');\n  });\n});\n</code></pre>\n<p>For more information\nIf you have any questions or comments about this advisory, email us at <a href=\"mailto:security@electronjs.org\">security@electronjs.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749\">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21718\">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32178\">https://github.com/electron/electron/pull/32178</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32240\">https://github.com/electron/electron/pull/32240</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p22-ghq8-v749\">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749",
            "title": "[electron] Renderers can obtain access to random bluetooth device without permission in Electron",
            "date_modified": "2022-03-22T19:19:22.000Z",
            "date_published": "2022-03-22T18:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API\">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>\n<p>All current stable versions of Electron are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched and the following Electron versions contain the fix:</p>\n<ul>\n<li><code>17.0.0-alpha.6</code></li>\n<li><code>16.0.6</code></li>\n<li><code>15.3.5</code></li>\n<li><code>14.2.4</code></li>\n<li><code>13.6.6</code></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Adding this code to your app can workaround the issue.</p>\n<pre><code class=\"language-js\">app.on('web-contents-created', (event, webContents) =&gt; {\n  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {\n    // Prevent default behavior\n    event.preventDefault();\n    // Cancel the request\n    callback('');\n  });\n});\n</code></pre>\n<p>For more information\nIf you have any questions or comments about this advisory, email us at <a href=\"mailto:security@electronjs.org\">security@electronjs.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749\">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21718\">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32178\">https://github.com/electron/electron/pull/32178</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32240\">https://github.com/electron/electron/pull/32240</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p22-ghq8-v749\">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749",
            "title": "[electron] Renderers can obtain access to random bluetooth device without permission in Electron",
            "date_modified": "2022-03-22T19:19:22.000Z",
            "date_published": "2022-03-22T18:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API\">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>\n<p>All current stable versions of Electron are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched and the following Electron versions contain the fix:</p>\n<ul>\n<li><code>17.0.0-alpha.6</code></li>\n<li><code>16.0.6</code></li>\n<li><code>15.3.5</code></li>\n<li><code>14.2.4</code></li>\n<li><code>13.6.6</code></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Adding this code to your app can workaround the issue.</p>\n<pre><code class=\"language-js\">app.on('web-contents-created', (event, webContents) =&gt; {\n  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {\n    // Prevent default behavior\n    event.preventDefault();\n    // Cancel the request\n    callback('');\n  });\n});\n</code></pre>\n<p>For more information\nIf you have any questions or comments about this advisory, email us at <a href=\"mailto:security@electronjs.org\">security@electronjs.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749\">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21718\">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32178\">https://github.com/electron/electron/pull/32178</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32240\">https://github.com/electron/electron/pull/32240</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p22-ghq8-v749\">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749",
            "title": "[electron] Renderers can obtain access to random bluetooth device without permission in Electron",
            "date_modified": "2022-03-22T19:19:22.000Z",
            "date_published": "2022-03-22T18:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows renderers to obtain access to a random bluetooth device via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API\">web bluetooth API</a> if the app has not configured a custom <code>select-bluetooth-device</code> event handler.  The device that is accessed is random and the attacker would have no way of selecting a specific device.</p>\n<p>All current stable versions of Electron are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched and the following Electron versions contain the fix:</p>\n<ul>\n<li><code>17.0.0-alpha.6</code></li>\n<li><code>16.0.6</code></li>\n<li><code>15.3.5</code></li>\n<li><code>14.2.4</code></li>\n<li><code>13.6.6</code></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Adding this code to your app can workaround the issue.</p>\n<pre><code class=\"language-js\">app.on('web-contents-created', (event, webContents) =&gt; {\n  webContents.on('select-bluetooth-device', (event, devices, callback) =&gt; {\n    // Prevent default behavior\n    event.preventDefault();\n    // Cancel the request\n    callback('');\n  });\n});\n</code></pre>\n<p>For more information\nIf you have any questions or comments about this advisory, email us at <a href=\"mailto:security@electronjs.org\">security@electronjs.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749\">https://github.com/electron/electron/security/advisories/GHSA-3p22-ghq8-v749</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21718\">https://nvd.nist.gov/vuln/detail/CVE-2022-21718</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32178\">https://github.com/electron/electron/pull/32178</a></li>\n<li><a href=\"https://github.com/electron/electron/pull/32240\">https://github.com/electron/electron/pull/32240</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p22-ghq8-v749\">https://github.com/advisories/GHSA-3p22-ghq8-v749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749",
            "title": "[electron] Renderers can obtain access to random bluetooth device without permission in Electron",
            "date_modified": "2022-03-22T19:19:22.000Z",
            "date_published": "2022-03-22T18:49:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p22-ghq8-v749"
            }
        },
        {
            "content_html": "<p>The package bodymen from 0.0.0 are vulnerable to Prototype Pollution via the handler function which could be tricked into adding or modifying properties of Object.prototype using a <strong>proto</strong> payload. <strong>Note:</strong> This vulnerability derives from an incomplete fix to <a href=\"https://security.snyk.io/vuln/SNYK-JS-BODYMEN-548897\">CVE-2019-10792</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25296\">https://nvd.nist.gov/vuln/detail/CVE-2022-25296</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-BODYMEN-2342623\">https://snyk.io/vuln/SNYK-JS-BODYMEN-2342623</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vhxc-fhm5-qcp9\">https://github.com/advisories/GHSA-vhxc-fhm5-qcp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vhxc-fhm5-qcp9",
            "title": "[bodymen] Prototype Pollution in bodymen",
            "date_modified": "2022-03-21T19:38:25.000Z",
            "date_published": "2022-03-18T00:01:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vhxc-fhm5-qcp9"
            }
        },
        {
            "content_html": "<p>post-loader is webpack loader for blog posts written in Markdown. The package post-loader from 0.0.0 is vulnerable to Arbitrary Code Execution which uses a markdown parser in an unsafe way so that any javascript code inside the markdown input files gets evaluated and executed. At this time, there is no known workaround or patch available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0748\">https://nvd.nist.gov/vuln/detail/CVE-2022-0748</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-POSTLOADER-2403737\">https://snyk.io/vuln/SNYK-JS-POSTLOADER-2403737</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66ww-999q-mffq\">https://github.com/advisories/GHSA-66ww-999q-mffq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66ww-999q-mffq",
            "title": "[post-loader] Arbitrary code execution in post-loader",
            "date_modified": "2022-03-25T14:29:34.000Z",
            "date_published": "2022-03-18T00:01:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66ww-999q-mffq"
            }
        },
        {
            "content_html": "<p>The package node-lmdb before 0.9.7 is vulnerable to Denial of Service (DoS) when defining a non-invokable ToString value, which will cause a crash during type check.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21164\">https://nvd.nist.gov/vuln/detail/CVE-2022-21164</a></li>\n<li><a href=\"https://github.com/Venemo/node-lmdb/commit/97760104c0fd311206b88aecd91fa1f59fe2b85a\">https://github.com/Venemo/node-lmdb/commit/97760104c0fd311206b88aecd91fa1f59fe2b85a</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-NODELMDB-2400723\">https://snyk.io/vuln/SNYK-JS-NODELMDB-2400723</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32j9-6qqm-mq9g\">https://github.com/advisories/GHSA-32j9-6qqm-mq9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32j9-6qqm-mq9g",
            "title": "[node-lmdb] Unhandled case in node-lmdb",
            "date_modified": "2022-03-21T17:24:46.000Z",
            "date_published": "2022-03-17T00:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32j9-6qqm-mq9g"
            }
        },
        {
            "content_html": "<p>The package <code>@braintree/sanitize-url</code> before 6.0.0 is vulnerable to Cross-site Scripting (XSS) due to improper sanitization in the <code>sanitizeUrl</code> function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23648\">https://nvd.nist.gov/vuln/detail/CVE-2021-23648</a></li>\n<li><a href=\"https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183\">https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-BRAINTREESANITIZEURL-2339882\">https://snyk.io/vuln/SNYK-JS-BRAINTREESANITIZEURL-2339882</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hqq7-2q2v-82xq\">https://github.com/advisories/GHSA-hqq7-2q2v-82xq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hqq7-2q2v-82xq",
            "title": "[@braintree/sanitize-url] Cross-site Scripting in sanitize-url",
            "date_modified": "2022-03-21T17:20:18.000Z",
            "date_published": "2022-03-17T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hqq7-2q2v-82xq"
            }
        }
    ]
}