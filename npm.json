{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37601\">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212\">https://github.com/webpack/loader-utils/issues/212</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v2.0.3\">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217\">https://github.com/webpack/loader-utils/pull/217</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220\">https://github.com/webpack/loader-utils/pull/220</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v1.4.1\">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\">https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\">https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826</a></li>\n<li><a href=\"https://dl.acm.org/doi/abs/10.1145/3488932.3497769\">https://dl.acm.org/doi/abs/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://dl.acm.org/doi/pdf/10.1145/3488932.3497769\">https://dl.acm.org/doi/pdf/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html</a></li>\n<li><a href=\"http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\">http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e\">https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76p3-8jx3-jpfq\">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq",
            "title": "[loader-utils] Prototype pollution in webpack loader-utils",
            "date_modified": "2023-08-25T20:39:24.000Z",
            "date_published": "2022-10-13T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37601\">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212\">https://github.com/webpack/loader-utils/issues/212</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v2.0.3\">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217\">https://github.com/webpack/loader-utils/pull/217</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220\">https://github.com/webpack/loader-utils/pull/220</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v1.4.1\">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\">https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\">https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826</a></li>\n<li><a href=\"https://dl.acm.org/doi/abs/10.1145/3488932.3497769\">https://dl.acm.org/doi/abs/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://dl.acm.org/doi/pdf/10.1145/3488932.3497769\">https://dl.acm.org/doi/pdf/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html</a></li>\n<li><a href=\"http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\">http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e\">https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76p3-8jx3-jpfq\">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq",
            "title": "[loader-utils] Prototype pollution in webpack loader-utils",
            "date_modified": "2023-08-25T20:39:24.000Z",
            "date_published": "2022-10-13T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Prototype Pollution issue in Cronvel Tree-kit v.0.7.4 and before allows a remote attacker to execute arbitrary code via the extend function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38894\">https://nvd.nist.gov/vuln/detail/CVE-2023-38894</a></li>\n<li><a href=\"https://www.code-intelligence.com/blog/treekit-prototype-pollution-cve-2023-38894\">https://www.code-intelligence.com/blog/treekit-prototype-pollution-cve-2023-38894</a></li>\n<li><a href=\"https://github.com/cronvel/tree-kit/commit/61bf10cf0dbddaeea3f198cfe7cb469f360d82bc\">https://github.com/cronvel/tree-kit/commit/61bf10cf0dbddaeea3f198cfe7cb469f360d82bc</a></li>\n<li><a href=\"https://github.com/cronvel/tree-kit\">https://github.com/cronvel/tree-kit</a></li>\n<li><a href=\"http://tree-kit.com\">http://tree-kit.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p42-m6f3-hpmj\">https://github.com/advisories/GHSA-5p42-m6f3-hpmj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p42-m6f3-hpmj",
            "title": "[tree-kit] tree-kit Prototype Pollution vulnerability",
            "date_modified": "2023-08-24T22:28:42.000Z",
            "date_published": "2023-08-17T00:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p42-m6f3-hpmj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If the untrusted v8 cached data is passed to the API through CachedDataOptions, the attackers can bypass the sandbox and run arbitrary code in the nodejs process. Version 4.3.7 changes the documentation to warn users that they should not accept <code>cachedData</code> payloads from a user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv\">https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39266\">https://nvd.nist.gov/vuln/detail/CVE-2022-39266</a></li>\n<li><a href=\"https://github.com/laverdet/isolated-vm/issues/379\">https://github.com/laverdet/isolated-vm/issues/379</a></li>\n<li><a href=\"https://github.com/laverdet/isolated-vm/commit/218e87a6d4e8cb818bea76d1ab30cd0be51920e8\">https://github.com/laverdet/isolated-vm/commit/218e87a6d4e8cb818bea76d1ab30cd0be51920e8</a></li>\n<li><a href=\"https://github.com/laverdet/isolated-vm/commits/v4.3.7\">https://github.com/laverdet/isolated-vm/commits/v4.3.7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2jjq-x548-rhpv\">https://github.com/advisories/GHSA-2jjq-x548-rhpv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2jjq-x548-rhpv",
            "title": "[isolated-vm] isolated-vm has vulnerable CachedDataOptions in API",
            "date_modified": "2023-08-24T22:25:37.000Z",
            "date_published": "2022-09-30T22:59:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2jjq-x548-rhpv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"overview\">Overview</h2>\n<p><code>@webiny/react-rich-text-renderer</code> is a react component to render data coming from Webiny Headless CMS and Webiny Form Builder. The <code>@webiny/react-rich-text-renderer</code> package depends on the <a href=\"https://editorjs.io/\">editor.js</a> rich text editor to handle rich text content. The CMS stores rich text content from the <code>editor.js</code> into the database. When the <code>@webiny/react-rich-text-renderer</code> is used to render such content, it uses the <code>dangerouslySetInnerHTML</code> prop, without applying HTML sanitization. The issue arises when an actor, who in this context would specifically be a content manager with access to the CMS, inserts a malicious script as part of the user-defined input. This script is then injected and executed within the user's browser when the main page or admin page loads.</p>\n<h2 id=\"am-i-affected\">Am I affected?</h2>\n<p>You will be affected if you're running a Webiny project created prior to <code>5.35.0</code> and you're using the legacy rich text editor (which uses <code>editor.js</code> library under the hood). If you've already switched to using the new rich text editor, powered by Lexical editor, you will not be affected by this.</p>\n<h2 id=\"how-do-i-patch-this-vulnerability\">How do I patch this vulnerability?</h2>\n<p>Update to Webiny version <code>5.37.2</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/webiny/webiny-js/security/advisories/GHSA-3x59-vrmc-5mx6\">https://github.com/webiny/webiny-js/security/advisories/GHSA-3x59-vrmc-5mx6</a></li>\n<li><a href=\"https://github.com/webiny/webiny-js/commit/8748bc53fe862bb03d4459ccc0be39084a5d35c0\">https://github.com/webiny/webiny-js/commit/8748bc53fe862bb03d4459ccc0be39084a5d35c0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41167\">https://nvd.nist.gov/vuln/detail/CVE-2023-41167</a></li>\n<li><a href=\"https://webiny.com\">https://webiny.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3x59-vrmc-5mx6\">https://github.com/advisories/GHSA-3x59-vrmc-5mx6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3x59-vrmc-5mx6",
            "title": "[@webiny/react-rich-text-renderer] @webiny/react-rich-text-renderer vulnerable to insecure rendering of rich text content",
            "date_modified": "2023-08-25T15:49:23.000Z",
            "date_published": "2023-08-24T22:16:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3x59-vrmc-5mx6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26115\">https://nvd.nist.gov/vuln/detail/CVE-2023-26115</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973\">https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973</a></li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39\">https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39</a></li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/releases/tag/1.2.4\">https://github.com/jonschlinkert/word-wrap/releases/tag/1.2.4</a></li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e\">https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e</a></li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39\">https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j8xg-fqg3-53r7\">https://github.com/advisories/GHSA-j8xg-fqg3-53r7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j8xg-fqg3-53r7",
            "title": "[word-wrap] word-wrap vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-08-24T21:37:44.000Z",
            "date_published": "2023-06-22T06:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j8xg-fqg3-53r7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The provided Minimal IAM Policy for <code>bastic connect</code> does not include <code>ssm:SessionDocumentAccessCheck</code>. This results in the ability to get a shell session on the bastion, not just the intended access for Port Forwarding.</p>\n<h3 id=\"details\">Details</h3>\n<p><code>basti connect</code> is designed to \"securely connect to your RDS/Aurora/Elasticache/EC2 instances\", using a bastion instance \"with <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager.html\">AWS Session Manager</a> port forwarding capability to make the target available on your localhost.\"</p>\n<p>The <a href=\"https://github.com/BohdanPetryshyn/basti#minimal-iam-permissions\">Minimal IAM Policy</a> allows port forwarding via the following statement:</p>\n<pre><code> {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:StartSession\",\n      \"Resource\": [\n        \"arn:aws:ssm:*:*:document/AWS-StartPortForwardingSessionToRemoteHost\",\n        \"arn:aws:ec2:&lt;your-region&gt;:&lt;your-account-id&gt;:instance/&lt;your-basti-instance-id&gt;\"\n      ]\n    }\n</code></pre>\n<p>This statement does not include the following condition:</p>\n<pre><code>\"Condition\": {\n    \"BoolIfExists\": {\n        \"ssm:SessionDocumentAccessCheck\": \"true\"\n    }\n}\n</code></pre>\n<p>As a result, the <code>basti connect</code> minimal policy is logically identical to:</p>\n<pre><code> {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:StartSession\",\n      \"Resource\": [\n        \"arn:aws:ssm:*:*:document/AWS-StartPortForwardingSessionToRemoteHost\",\n        \"arn:aws:ssm:*:*:document/SSM-SessionManagerRunShell\",\n        \"arn:aws:ec2:&lt;your-region&gt;:&lt;your-account-id&gt;:instance/&lt;your-basti-instance-id&gt;\"\n      ]\n    }\n</code></pre>\n<p>A <code>basti</code> admin would expect users under the minimal policy to be able to port forward. However, they could also get a shell on the bastion.</p>\n<p>For more details on this footgun, see: <a href=\"https://ramimac.me/ssm-iam\">https://ramimac.me/ssm-iam</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p><em>Complete instructions, including specific configuration details, to reproduce the vulnerability.</em></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Impact would depend on configuration/hardening of the bastion. I've seen examples where bastions have credentials to downstream systems in configuration or memory that would be exposed. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/BohdanPetryshyn/basti/security/advisories/GHSA-q4pp-j36h-3gqg\">https://github.com/BohdanPetryshyn/basti/security/advisories/GHSA-q4pp-j36h-3gqg</a></li>\n<li><a href=\"https://github.com/BohdanPetryshyn/basti/commit/f6f218e7cd450e29aeb616960b7abbe8dfc87796\">https://github.com/BohdanPetryshyn/basti/commit/f6f218e7cd450e29aeb616960b7abbe8dfc87796</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4pp-j36h-3gqg\">https://github.com/advisories/GHSA-q4pp-j36h-3gqg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4pp-j36h-3gqg",
            "title": "[basti-cdk] Minimal `basti` IAM Policy Allows Shell Access",
            "date_modified": "2023-08-24T12:53:06.000Z",
            "date_published": "2023-08-24T12:53:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4pp-j36h-3gqg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This may impact users that use Shescape on Windows in a threaded context (e.g. using <a href=\"https://nodejs.org/api/worker_threads.html\">Worker threads</a>). The vulnerability can result in Shescape escaping (or quoting) for the wrong shell, thus allowing attackers to bypass protections depending on the combination of expected and used shell.</p>\n<p>This snippet demonstrates a vulnerable use of Shescape:</p>\n<pre><code class=\"language-javascript\">// vulnerable.js\n\nimport { exec } from \"node:child_process\";\nimport { Worker, isMainThread } from 'node:worker_threads';\n\nimport * as shescape from \"shescape\";\n\nif (isMainThread) {\n  // 1. Something like a worker thread must be used. The reason being that they\n  // unexpectedly change environment variable names on Windows.\n  new Worker(\"./vulnerable.js\");\n} else {\n  // 2. Example configuration that's problematic. In this setup example the\n  // expected default system shell is CMD. We configure the use of PowerShell.\n  // Shescape will fail to look up PowerShell and default to escaping for CMD\n  // instead, resulting in the vulnerability.\n  const options = {\n    shell: \"powershell\",\n    interpolation: true,\n  };\n\n  // 3. Using shescape to protect against attacks, this is correct.\n  const escaped = shescape.escape(\"&amp;&amp; ls\", options);\n\n  // 4. Invoking a command with the escaped user input, this is vulnerable in\n  // this case.\n  exec(`echo Hello ${escaped}`, options, (error, stdout) =&gt; {\n    if (error) {\n      console.error(`An error occurred: ${error}`);\n    } else {\n      console.log(stdout);\n    }\n  });\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.4\">v1.7.4</a> which you can upgrade to now. No further changes are required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you are impacted there is no workaround possible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Shescape Pull Request <a href=\"https://github.com/ericcornelissen/shescape/pull/1142\">#1142</a></li>\n<li>Shescape commit <a href=\"https://github.com/ericcornelissen/shescape/commit/0b976dab645abf45ffd85e74a8c6e51ee2f42d63\"><code>0b976da</code></a></li>\n<li>Shescape release <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.4\">v1.7.4</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Comment on Pull Request <a href=\"https://github.com/ericcornelissen/shescape/pull/1142\">#1142</a></li>\n<li>Comment on commit <a href=\"https://github.com/ericcornelissen/shescape/commit/0b976dab645abf45ffd85e74a8c6e51ee2f42d63\"><code>0b976da</code></a></li>\n<li>Open an issue at <a href=\"https://github.com/ericcornelissen/shescape/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\">https://github.com/ericcornelissen/shescape/issues</a> (New issue &gt; Question &gt; Get started)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-j55r-787p-m549\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-j55r-787p-m549</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/1142\">https://github.com/ericcornelissen/shescape/pull/1142</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/commit/0b976dab645abf45ffd85e74a8c6e51ee2f42d63\">https://github.com/ericcornelissen/shescape/commit/0b976dab645abf45ffd85e74a8c6e51ee2f42d63</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.4\">https://github.com/ericcornelissen/shescape/releases/tag/v1.7.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40185\">https://nvd.nist.gov/vuln/detail/CVE-2023-40185</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j55r-787p-m549\">https://github.com/advisories/GHSA-j55r-787p-m549</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j55r-787p-m549",
            "title": "[shescape] Shescape on Windows escaping may be bypassed in threaded context",
            "date_modified": "2023-08-23T22:14:42.000Z",
            "date_published": "2023-08-22T18:00:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j55r-787p-m549"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-11883\">https://nvd.nist.gov/vuln/detail/CVE-2020-11883</a></li>\n<li><a href=\"https://github.com/DivanteLtd/storefront-api/pull/59\">https://github.com/DivanteLtd/storefront-api/pull/59</a></li>\n<li><a href=\"https://github.com/DivanteLtd/vue-storefront-api/pull/431\">https://github.com/DivanteLtd/vue-storefront-api/pull/431</a></li>\n<li><a href=\"https://github.com/vuestorefront/storefront-api/commit/9165b80c72b469c9615ce2f665499e6f6ead0a6a\">https://github.com/vuestorefront/storefront-api/commit/9165b80c72b469c9615ce2f665499e6f6ead0a6a</a></li>\n<li><a href=\"https://github.com/vuestorefront/vue-storefront-api/commit/965247f41f872e84e4662d04d8e2108eaf6119da\">https://github.com/vuestorefront/vue-storefront-api/commit/965247f41f872e84e4662d04d8e2108eaf6119da</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wxj-37p8-49ff\">https://github.com/advisories/GHSA-9wxj-37p8-49ff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wxj-37p8-49ff",
            "title": "[vue-storefront-api] Diavante vue-storefront-api and storefront-api disclose stack trace",
            "date_modified": "2023-08-22T14:21:40.000Z",
            "date_published": "2022-05-24T17:15:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wxj-37p8-49ff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-11883\">https://nvd.nist.gov/vuln/detail/CVE-2020-11883</a></li>\n<li><a href=\"https://github.com/DivanteLtd/storefront-api/pull/59\">https://github.com/DivanteLtd/storefront-api/pull/59</a></li>\n<li><a href=\"https://github.com/DivanteLtd/vue-storefront-api/pull/431\">https://github.com/DivanteLtd/vue-storefront-api/pull/431</a></li>\n<li><a href=\"https://github.com/vuestorefront/storefront-api/commit/9165b80c72b469c9615ce2f665499e6f6ead0a6a\">https://github.com/vuestorefront/storefront-api/commit/9165b80c72b469c9615ce2f665499e6f6ead0a6a</a></li>\n<li><a href=\"https://github.com/vuestorefront/vue-storefront-api/commit/965247f41f872e84e4662d04d8e2108eaf6119da\">https://github.com/vuestorefront/vue-storefront-api/commit/965247f41f872e84e4662d04d8e2108eaf6119da</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wxj-37p8-49ff\">https://github.com/advisories/GHSA-9wxj-37p8-49ff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wxj-37p8-49ff",
            "title": "[storefront-api] Diavante vue-storefront-api and storefront-api disclose stack trace",
            "date_modified": "2023-08-22T14:21:40.000Z",
            "date_published": "2022-05-24T17:15:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wxj-37p8-49ff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The lack of checking of current timestamp allows a LogoutRequest XML to be reused multiple times even when the current time is past the NotOnOrAfter. </p>\n<h3 id=\"details\">Details</h3>\n<p>It was noticed that in the validatePostRequestAsync() flow in saml.js, the current timestamp is never checked. This could present a vulnerability where a user who has an XML LogoutRequest could validated it if the IssueInstance and the NotOnOrAfter are valid along with valid credentials (signature, certificate etc.). </p>\n<h3 id=\"poc\">PoC</h3>\n<p>I was able to validate a sample valid LogoutRequest XML multiple times through postman by sending it to my endpoint regardless if the current present time was past the NotOnOrAfter time. After some further testing, it seems that only the IssueInstance is checked against NotOnOrAfter. Not sure if this was the intended behaviour but I believe having a never expiring valid LogoutRequest could be dangerous.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This could impact the user where they would be logged out from an expired LogoutRequest. In bigger contexts, if LogoutRequests are sent out in mass to different SPs, this could impact many users on a large scale.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/node-saml/security/advisories/GHSA-vx8m-6fhw-pccw\">https://github.com/node-saml/node-saml/security/advisories/GHSA-vx8m-6fhw-pccw</a></li>\n<li><a href=\"https://github.com/node-saml/node-saml/commit/045e3b9c54211fdb95f96edf363679845b195cec\">https://github.com/node-saml/node-saml/commit/045e3b9c54211fdb95f96edf363679845b195cec</a></li>\n<li><a href=\"https://github.com/node-saml/node-saml/releases/tag/v4.0.5\">https://github.com/node-saml/node-saml/releases/tag/v4.0.5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40178\">https://nvd.nist.gov/vuln/detail/CVE-2023-40178</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx8m-6fhw-pccw\">https://github.com/advisories/GHSA-vx8m-6fhw-pccw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx8m-6fhw-pccw",
            "title": "[@node-saml/node-saml] @node-saml/node-saml's validatePostRequestAsync does not include checkTimestampsValidityError",
            "date_modified": "2023-08-23T22:14:47.000Z",
            "date_published": "2023-08-21T20:13:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx8m-6fhw-pccw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Version of <code>kerberos</code> prior to 1.0.0 are vulnerable to DLL Injection. The package loads DLLs without specifying a full path. This may allow attackers to create a file with the same name in a folder that precedes the intended file in the DLL path search. Doing so would allow attackers to execute arbitrary code in the machine.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Upgrade to version 1.0.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/advisories/1514\">https://www.npmjs.com/advisories/1514</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-13110\">https://nvd.nist.gov/vuln/detail/CVE-2020-13110</a></li>\n<li><a href=\"https://medium.com/@kiddo_Ha3ker/dll-injection-attack-in-kerberos-npm-package-cb4b32031cd\">https://medium.com/@kiddo_Ha3ker/dll-injection-attack-in-kerberos-npm-package-cb4b32031cd</a></li>\n<li><a href=\"https://www.linkedin.com/posts/op-innovate_dll-injection-attack-in-kerberos-npm-package-activity-6667043749547253760-kVlW\">https://www.linkedin.com/posts/op-innovate_dll-injection-attack-in-kerberos-npm-package-activity-6667043749547253760-kVlW</a></li>\n<li><a href=\"https://www.op-c.net/2020/05/15/dll-injection-attack-in-kerberos-npm-package/\">https://www.op-c.net/2020/05/15/dll-injection-attack-in-kerberos-npm-package/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m2mx-rfpw-jghv\">https://github.com/advisories/GHSA-m2mx-rfpw-jghv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m2mx-rfpw-jghv",
            "title": "[kerberos] DLL Injection in kerberos",
            "date_modified": "2023-08-21T19:57:15.000Z",
            "date_published": "2020-09-04T18:01:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m2mx-rfpw-jghv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-m2mx-rfpw-jghv. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>The kerberos package before 1.0.0 for Node.js allows arbitrary code execution and privilege escalation via injection of malicious DLLs through use of the kerberos_sspi LoadLibrary() method, because of a DLL path search.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-13110\">https://nvd.nist.gov/vuln/detail/CVE-2020-13110</a></li>\n<li><a href=\"https://medium.com/@kiddo_Ha3ker/dll-injection-attack-in-kerberos-npm-package-cb4b32031cd\">https://medium.com/@kiddo_Ha3ker/dll-injection-attack-in-kerberos-npm-package-cb4b32031cd</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1514\">https://www.npmjs.com/advisories/1514</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f478-xwv9-p93q\">https://github.com/advisories/GHSA-f478-xwv9-p93q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f478-xwv9-p93q",
            "title": "[kerberos] Duplicate Advisory: Kerberos for NodeJS allows DLL Injection",
            "date_modified": "2023-08-21T19:55:15.000Z",
            "date_published": "2022-05-24T17:18:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f478-xwv9-p93q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8295\">https://github.com/parse-community/parse-server/pull/8295</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8296\">https://github.com/parse-community/parse-server/pull/8296</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.18\">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.3.1\">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39396\">https://nvd.nist.gov/vuln/detail/CVE-2022-39396</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prm5-8g2m-24gg",
            "title": "[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-08-21T18:17:37.000Z",
            "date_published": "2022-11-08T17:29:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prm5-8g2m-24gg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>Mikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8295\">https://github.com/parse-community/parse-server/pull/8295</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8296\">https://github.com/parse-community/parse-server/pull/8296</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.18\">https://github.com/parse-community/parse-server/releases/tag/4.10.18</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.3.1\">https://github.com/parse-community/parse-server/releases/tag/5.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39396\">https://nvd.nist.gov/vuln/detail/CVE-2022-39396</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prm5-8g2m-24gg",
            "title": "[parse-server] Remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-08-21T18:17:37.000Z",
            "date_published": "2022-11-08T17:29:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prm5-8g2m-24gg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>\n<li>Fixed by dbythy</li>\n<li>Reviewed by mtrezza</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36475\">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8674\">https://github.com/parse-community/parse-server/issues/8674</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8675\">https://github.com/parse-community/parse-server/issues/8675</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.2\">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.1\">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6",
            "title": "[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-08-21T18:17:24.000Z",
            "date_published": "2023-06-30T20:41:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>\n<li>Fixed by dbythy</li>\n<li>Reviewed by mtrezza</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36475\">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8674\">https://github.com/parse-community/parse-server/issues/8674</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8675\">https://github.com/parse-community/parse-server/issues/8675</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.2\">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.1\">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6",
            "title": "[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-08-21T18:17:24.000Z",
            "date_published": "2023-06-30T20:41:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server <code>requestKeywordDenylist</code> option.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Improved keyword detection.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8305\">https://github.com/parse-community/parse-server/pull/8305</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8306\">https://github.com/parse-community/parse-server/pull/8306</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8\">https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4\">https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.20\">https://github.com/parse-community/parse-server/releases/tag/4.10.20</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.3.3\">https://github.com/parse-community/parse-server/releases/tag/5.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41879\">https://nvd.nist.gov/vuln/detail/CVE-2022-41879</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93vw-8fm5-p2jf",
            "title": "[parse-server] Parse Server is vulnerable to Prototype Pollution via Cloud Code Webhooks",
            "date_modified": "2023-08-21T18:17:09.000Z",
            "date_published": "2022-11-10T13:02:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93vw-8fm5-p2jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server <code>requestKeywordDenylist</code> option.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Improved keyword detection.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8305\">https://github.com/parse-community/parse-server/pull/8305</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8306\">https://github.com/parse-community/parse-server/pull/8306</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8\">https://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4\">https://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.20\">https://github.com/parse-community/parse-server/releases/tag/4.10.20</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.3.3\">https://github.com/parse-community/parse-server/releases/tag/5.3.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41879\">https://nvd.nist.gov/vuln/detail/CVE-2022-41879</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93vw-8fm5-p2jf\">https://github.com/advisories/GHSA-93vw-8fm5-p2jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93vw-8fm5-p2jf",
            "title": "[parse-server] Parse Server is vulnerable to Prototype Pollution via Cloud Code Webhooks",
            "date_modified": "2023-08-21T18:17:09.000Z",
            "date_published": "2022-11-10T13:02:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93vw-8fm5-p2jf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Keywords that are specified in the Parse Server option <code>requestKeywordDenylist</code> can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the <code>requestKeywordDenylist</code> option.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Improved keyword detection.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>Mikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8301\">https://github.com/parse-community/parse-server/pull/8301</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8302\">https://github.com/parse-community/parse-server/pull/8302</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3\">https://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f\">https://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41878\">https://nvd.nist.gov/vuln/detail/CVE-2022-41878</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xprv-wvh7-qqqx\">https://github.com/advisories/GHSA-xprv-wvh7-qqqx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xprv-wvh7-qqqx",
            "title": "[parse-server] Parse Server vulnerable to Prototype Pollution via Cloud Code Webhooks or Cloud Code Triggers",
            "date_modified": "2023-08-21T18:16:54.000Z",
            "date_published": "2022-11-09T20:47:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xprv-wvh7-qqqx"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}