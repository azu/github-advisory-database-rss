{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>The is-svg package 2.1.0 through 4.2.1 for Node.js uses a regular expression that is vulnerable to Regular Expression Denial of Service (ReDoS). If an attacker provides a malicious string, is-svg will get stuck processing the input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28092\">https://nvd.nist.gov/vuln/detail/CVE-2021-28092</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/commit/01f8a087fab8a69c3ac9085fbb16035907ab6a5b\">https://github.com/sindresorhus/is-svg/commit/01f8a087fab8a69c3ac9085fbb16035907ab6a5b</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/releases\">https://github.com/sindresorhus/is-svg/releases</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/releases/tag/v4.2.2\">https://github.com/sindresorhus/is-svg/releases/tag/v4.2.2</a></li>\n<li><a href=\"https://www.npmjs.com/package/is-svg\">https://www.npmjs.com/package/is-svg</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210513-0008/\">https://security.netapp.com/advisory/ntap-20210513-0008/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r28-3m3f-r2pr\">https://github.com/advisories/GHSA-7r28-3m3f-r2pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r28-3m3f-r2pr",
            "title": "[is-svg] Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T22:40:43.000Z",
            "date_published": "2021-03-19T21:25:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r28-3m3f-r2pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>npm <code>ssri</code> 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27290\">https://nvd.nist.gov/vuln/detail/CVE-2021-27290</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2\">https://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2</a></li>\n<li><a href=\"https://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf\">https://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf</a></li>\n<li><a href=\"https://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf\">https://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\">https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1</a></li>\n<li><a href=\"https://www.npmjs.com/package/ssri\">https://www.npmjs.com/package/ssri</a></li>\n<li><a href=\"https://github.com/npm/ssri/pull/20#issuecomment-842677644\">https://github.com/npm/ssri/pull/20#issuecomment-842677644</a></li>\n<li><a href=\"https://npmjs.com\">https://npmjs.com</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538\">https://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx3p-948g-6vhq\">https://github.com/advisories/GHSA-vx3p-948g-6vhq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx3p-948g-6vhq",
            "title": "[ssri] Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:10:33.000Z",
            "date_published": "2021-03-19T21:24:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx3p-948g-6vhq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file <code>index.js</code>, function <code>setKey()</code> (lines 69-95).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44906\">https://nvd.nist.gov/vuln/detail/CVE-2021-44906</a></li>\n<li><a href=\"https://github.com/substack/minimist/issues/164\">https://github.com/substack/minimist/issues/164</a></li>\n<li><a href=\"https://github.com/substack/minimist/blob/master/index.js#L69\">https://github.com/substack/minimist/blob/master/index.js#L69</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>\n<li><a href=\"https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068\">https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068</a></li>\n<li><a href=\"https://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip\">https://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/issues/11\">https://github.com/minimistjs/minimist/issues/11</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/pull/24\">https://github.com/minimistjs/minimist/pull/24</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703\">https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb\">https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d\">https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11\">https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commits/v0.2.4\">https://github.com/minimistjs/minimist/commits/v0.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvch-5gv4-984h\">https://github.com/advisories/GHSA-xvch-5gv4-984h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h",
            "title": "[minimist] Prototype Pollution in minimist",
            "date_modified": "2023-09-01T20:52:39.000Z",
            "date_published": "2022-03-18T00:01:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file <code>index.js</code>, function <code>setKey()</code> (lines 69-95).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44906\">https://nvd.nist.gov/vuln/detail/CVE-2021-44906</a></li>\n<li><a href=\"https://github.com/substack/minimist/issues/164\">https://github.com/substack/minimist/issues/164</a></li>\n<li><a href=\"https://github.com/substack/minimist/blob/master/index.js#L69\">https://github.com/substack/minimist/blob/master/index.js#L69</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>\n<li><a href=\"https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068\">https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068</a></li>\n<li><a href=\"https://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip\">https://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/issues/11\">https://github.com/minimistjs/minimist/issues/11</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/pull/24\">https://github.com/minimistjs/minimist/pull/24</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703\">https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb\">https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d\">https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11\">https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commits/v0.2.4\">https://github.com/minimistjs/minimist/commits/v0.2.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvch-5gv4-984h\">https://github.com/advisories/GHSA-xvch-5gv4-984h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h",
            "title": "[minimist] Prototype Pollution in minimist",
            "date_modified": "2023-09-01T20:52:39.000Z",
            "date_published": "2022-03-18T00:01:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvch-5gv4-984h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37601\">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212\">https://github.com/webpack/loader-utils/issues/212</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v2.0.3\">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217\">https://github.com/webpack/loader-utils/pull/217</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220\">https://github.com/webpack/loader-utils/pull/220</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v1.4.1\">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\">https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\">https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826</a></li>\n<li><a href=\"https://dl.acm.org/doi/abs/10.1145/3488932.3497769\">https://dl.acm.org/doi/abs/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://dl.acm.org/doi/pdf/10.1145/3488932.3497769\">https://dl.acm.org/doi/pdf/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html</a></li>\n<li><a href=\"http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\">http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/4504e34c4796a5836ef70458327351675aed48a5\">https://github.com/webpack/loader-utils/commit/4504e34c4796a5836ef70458327351675aed48a5</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76p3-8jx3-jpfq\">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq",
            "title": "[loader-utils] Prototype pollution in webpack loader-utils",
            "date_modified": "2023-09-01T20:47:35.000Z",
            "date_published": "2022-10-13T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37601\">https://nvd.nist.gov/vuln/detail/CVE-2022-37601</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212\">https://github.com/webpack/loader-utils/issues/212</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v2.0.3\">https://github.com/webpack/loader-utils/releases/tag/v2.0.3</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/217\">https://github.com/webpack/loader-utils/pull/217</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/pull/220\">https://github.com/webpack/loader-utils/pull/220</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/releases/tag/v1.4.1\">https://github.com/webpack/loader-utils/releases/tag/v1.4.1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\">https://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\">https://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826</a></li>\n<li><a href=\"https://dl.acm.org/doi/abs/10.1145/3488932.3497769\">https://dl.acm.org/doi/abs/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://dl.acm.org/doi/pdf/10.1145/3488932.3497769\">https://dl.acm.org/doi/pdf/10.1145/3488932.3497769</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00044.html</a></li>\n<li><a href=\"http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\">http://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\">https://github.com/webpack/loader-utils/commit/f4e48a232fae900237c3e5ff7b57ce9e1c734de1</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/4504e34c4796a5836ef70458327351675aed48a5\">https://github.com/webpack/loader-utils/commit/4504e34c4796a5836ef70458327351675aed48a5</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76p3-8jx3-jpfq\">https://github.com/advisories/GHSA-76p3-8jx3-jpfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq",
            "title": "[loader-utils] Prototype pollution in webpack loader-utils",
            "date_modified": "2023-09-01T20:47:35.000Z",
            "date_published": "2022-10-13T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76p3-8jx3-jpfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Plain text messages containing HTML tags are rendered as HTML in the search results. To exploit this, an attacker needs to trick a user into searching for a specific message containing an HTML injection payload.\nCross-site scripting is possible by including resources from <code>recaptcha.net</code> and <code>gstatic.com</code> which are included in the default CSP.</p>\n<p>Thanks to <a href=\"https://cadence.moe/\">Cadence Ember</a> for finding the injection and to <a href=\"https://github.com/p1gp1g/\">S1m</a> for finding possible XSS vectors.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Version 3.71.0 of the SDK fixes the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Restarting the client will clear the injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-xv83-x443-7rmw\">https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-xv83-x443-7rmw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30609\">https://nvd.nist.gov/vuln/detail/CVE-2023-30609</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/commit/bf182bc94556849d7acdfa0e5fdea2aa129ea826\">https://github.com/matrix-org/matrix-react-sdk/commit/bf182bc94556849d7acdfa0e5fdea2aa129ea826</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.71.0\">https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.71.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xv83-x443-7rmw\">https://github.com/advisories/GHSA-xv83-x443-7rmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xv83-x443-7rmw",
            "title": "[matrix-react-sdk] HTML injection in search results via plaintext message highlighting",
            "date_modified": "2023-09-01T15:17:23.000Z",
            "date_published": "2023-04-25T19:48:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xv83-x443-7rmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>The <code>ini</code> npm package before version 1.3.6 has a Prototype Pollution vulnerability.</p>\n<p>If an attacker submits a malicious INI file to an application that parses it with <code>ini.parse</code>, they will pollute the prototype on the application. This can be exploited further depending on the context.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in 1.3.6.</p>\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\n<p>payload.ini</p>\n<pre><code>[__proto__]\npolluted = \"polluted\"\n</code></pre>\n<p>poc.js:</p>\n<pre><code>var fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n</code></pre>\n<pre><code>&gt; node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\">https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1589\">https://www.npmjs.com/advisories/1589</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-INI-1048974\">https://snyk.io/vuln/SNYK-JS-INI-1048974</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7788\">https://nvd.nist.gov/vuln/detail/CVE-2020-7788</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2020/12/msg00032.html\">https://lists.debian.org/debian-lts-announce/2020/12/msg00032.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqgx-2p2h-9c37\">https://github.com/advisories/GHSA-qqgx-2p2h-9c37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqgx-2p2h-9c37",
            "title": "[ini] ini before 1.3.6 vulnerable to Prototype Pollution via ini.parse",
            "date_modified": "2023-08-31T23:39:55.000Z",
            "date_published": "2020-12-10T16:53:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqgx-2p2h-9c37"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}